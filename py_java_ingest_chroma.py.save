from langchain.document_loaders import DirectoryLoader
from langchain.text_splitter import CharacterTextSplitter
from langchain.embeddings import OpenAIEmbeddings
from langchain.vectorstores import Chroma

# 1. Load Java files from local directory
loader = DirectoryLoader(
    "./src",
    glob="**/*.java"
)
docs = loader.load()

# 2. Optimal chunking for code: 1000 chars with 200 overlap
splitter = CharacterTextSplitter(
    chunk_size=1000,
    chunk_overlap=200,
    separators=["\n\n", "\n", " "]  # prefer splitting at blank lines
)
chunks = splitter.split_documents(docs)

# 3. Initialize embeddings
embeddings = OpenAIEmbeddings(
    model="text-embedding-ada-002",
    openai_api_key="$OPENAI_API_KEY"
)

# 4. Connect to remote ChromaDB server
client_settings = {
    "chromadb_server_host": "chromadb.dev.motorenflug.at",  # your remote host
    "chromadb_server_http_port": 443,
    "chromadb_server_http_scheme": "https"
}

chroma_client = Chroma(
    embedding_function=embeddings,
    client_settings=client_settings
)

# 5. Upsert chunks into remote ChromaDB
chroma_client.add_documents(chunks)

print(f"Ingested {len(chunks)} code chunks into remote ChromaDB v2.")
