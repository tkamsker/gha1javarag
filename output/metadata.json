[
  {
    "file_path": "cuco/src/main/webapp/index.html",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/index.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 2496,
    "content": "<!doctype html>\n\n<html>\n<head>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=11+\" />\n<meta name=\"viewport\" content=\"width=1024, initial-scale=1.0, user-scalable=yes\" />\n<META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\">\n<META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"0\">\n<META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\">\n<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n<meta name=\"gwt:property\" content=\"locale=de_DE\" />\n<meta name=\"SKYPE_TOOLBAR\" CONTENT=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" />\n\n<link rel=\"stylesheet/less\" type=\"text/css\" href=\"app/styles/less/master.less\">\n<link rel=\"icon\" href=\"app/images/favicon.png\" type=\"image/png\">\n<link rel=\"shortcut icon\" href=\"app/images/favicon.ico\" type=\"image/x-icon\">\n\n<title>Customer Cockpit</title>\n<script type=\"text/javascript\">\n\tif (window.location.href.indexOf('pkb.a1telekom.inside') >= 0) {\n\t\twindow.location.href = 'http://pkb.a1telekom.inside/pkb.html'\n\t\t\t\t+ window.location.search;\n\t} else if (window.location.href.indexOf('cuco.telekom.inside') >= 0) {\n\t\talert('Sehr geehrte Benutzer!\\n\\nDas Customer Cockpit ist ab sofort unter einer neuen Adresse erreichbar.\\nSie werden jetzt automatisch zu dieser umgeleitet.\\n\\nDie neue Adresse ist anschlie\u00dfend in der Adresszeile ersichtlich, bitte ben\u00fctzen Sie k\u00fcnftig nur noch diese!\\n\\nVielen Dank!\\nIhr Customer Cockpit Team!');\n\t\twindow.location.href = 'http://cuco.a1telekom.inside/'\n\t\t\t\t+ window.location.search;\n\t}\n</script>\n<script src=\"app/scripts/less-1.3.0.min.js\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\" language=\"javascript\" src=\"app/app.nocache.js\"></script>\n<style type=\"text/css\">\n@font-face {\n  font-family: \"A1iconfont\";\n  src: local(\"?\"), url(app/gucci/a1_iconfont.woff) format(\"woff\"), url(app/gucci/a1_iconfont.ttf) format(\"truetype\"), url(app/gucci/a1_iconfont.svg) format(\"svg\");\n  font-weight: 500;\n  font-style: normal\n}\n</style>\n<!-- not currently needed (New ProductView!)-->\n<script src=\"app/scripts/OpenLayers.js\"></script>\n<script src=\"app/scripts/OpenStreetMap.js\"></script>\n<!-- Google Tag Manager -->\n<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer_intern','GTM-5DH58LK');</script>\n<!-- End Google Tag Manager -->\n</head>\n<body>\n</body>\n</html>\n\n\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Main web application entry point HTML file that sets up the initial page structure and meta configurations",
      "components": [
        {
          "name": "meta-configurations",
          "type": "HTML meta tags",
          "description": "Configures browser compatibility, viewport settings, and cache control"
        }
      ],
      "data_structures": [],
      "business_rules": [
        {
          "description": "Browser compatibility must support IE11 or higher",
          "location": "meta http-equiv tag"
        },
        {
          "description": "Page must be non-cacheable",
          "location": "cache-control meta tags"
        },
        {
          "description": "Viewport must be fixed width at 1024px with user scaling enabled",
          "location": "viewport meta tag"
        }
      ],
      "dependencies": [
        "IE11+ browser compatibility",
        "Viewport settings",
        "Cache control headers"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SmartHome.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SmartHome.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1141,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class SmartHome implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @XmlElement\n  private SmartHomeOld smartHomeOld;\n\n  @XmlElement\n  private SmartHomeNew smartHomeNew;\n\n  public SmartHomeOld getSmartHomeOld() {\n    if (smartHomeOld == null) {\n      smartHomeOld = new SmartHomeOld();\n    }\n    return smartHomeOld;\n  }\n\n  public void setSmartHomeOld(SmartHomeOld smartHomeOld) {\n    this.smartHomeOld = smartHomeOld;\n  }\n\n  public SmartHomeNew getSmartHomeNew() {\n    if (smartHomeNew == null) {\n      smartHomeNew = new SmartHomeNew();\n    }\n    return smartHomeNew;\n  }\n\n  public void setSmartHomeNew(SmartHomeNew smartHomeNew) {\n    this.smartHomeNew = smartHomeNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"SmartHome [smartHomeOld=\" + smartHomeOld + \", smartHomeNew=\" + smartHomeNew + \"]\";\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Data Transfer Object for managing smart home related information in sales visit reports",
      "components": [
        {
          "name": "SmartHome",
          "type": "Java class",
          "description": "DTO class for smart home data with XML binding capabilities"
        }
      ],
      "data_structures": [
        {
          "name": "SmartHome",
          "fields": [
            "Serializable fields with XML annotations"
          ],
          "relationships": [
            "Part of visitreport.digitalselling package hierarchy"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Class must be serializable for data transfer",
          "location": "class implementation"
        },
        {
          "description": "XML field access must be controlled through annotations",
          "location": "XmlAccessorType annotation"
        }
      ],
      "dependencies": [
        "javax.xml.bind.annotation.*",
        "java.io.Serializable",
        "at.a1ta.cuco.core.shared.dto package"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "cuco/src/main/java/at/a1ta/cuco/cacheControl/GWTCacheControlFilter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/java/at/a1ta/cuco/cacheControl/GWTCacheControlFilter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1332,
    "content": "package at.a1ta.cuco.cacheControl;\n\nimport java.io.IOException;\nimport java.util.Date;\n\nimport javax.servlet.Filter;\nimport javax.servlet.FilterChain;\nimport javax.servlet.FilterConfig;\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\npublic class GWTCacheControlFilter implements Filter {\n\n  @Override\n  public void destroy() {}\n\n  @Override\n  public void init(FilterConfig config) throws ServletException {}\n\n  @Override\n  public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) throws IOException, ServletException {\n\n    HttpServletRequest httpRequest = (HttpServletRequest) request;\n    String requestURI = httpRequest.getRequestURI();\n\n    if (requestURI.contains(\".nocache.\")) {\n      Date now = new Date();\n      HttpServletResponse httpResponse = (HttpServletResponse) response;\n      httpResponse.setDateHeader(\"Date\", now.getTime());\n      // one day old\n      httpResponse.setDateHeader(\"Expires\", now.getTime() - 86400000L);\n      httpResponse.setHeader(\"Pragma\", \"no-cache\");\n      httpResponse.setHeader(\"Cache-control\", \"no-cache, no-store, must-revalidate\");\n    }\n\n    filterChain.doFilter(request, response);\n  }\n}",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Implements a servlet filter to control caching behavior for GWT application resources",
      "components": [
        {
          "name": "GWTCacheControlFilter",
          "type": "ServletFilter",
          "description": "Filter that sets cache control headers for GWT resources"
        }
      ],
      "data_structures": [],
      "business_rules": [
        {
          "description": "Cache control headers should be set for GWT resources",
          "location": "doFilter method"
        },
        {
          "description": "Response headers must include Last-Modified and Expires dates",
          "location": "doFilter method"
        }
      ],
      "dependencies": [
        "javax.servlet.Filter",
        "javax.servlet.FilterChain",
        "javax.servlet.FilterConfig",
        "javax.servlet.ServletException",
        "java.util.Date"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "cuco/src/main/java/at/a1ta/cuco/cacheControl/app/starter/client/AppStarter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/java/at/a1ta/cuco/cacheControl/app/starter/client/AppStarter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1203,
    "content": "package at.a1ta.cuco.app.starter.client;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.LocalSettingPool;\nimport at.a1ta.bite.core.shared.dto.SettingPool;\nimport at.a1ta.bite.core.shared.dto.TextPool;\nimport at.a1ta.bite.core.shared.dto.systemmessage.SystemMessagePool;\nimport at.a1ta.bite.ui.client.BiteEntryPoint;\nimport at.a1ta.cuco.ui.common.shared.LocationHelper;\nimport at.a1ta.pkb.bean.bean.TouchpointPool;\nimport at.a1ta.pkb.ui.common.client.nbo.NBOOverviewView;\nimport at.a1ta.pkb.ui.common.client.nbo.NBOPortletView;\n\npublic class AppStarter extends BiteEntryPoint {\n  @Override\n  protected List<Class<?>> getDataPools() {\n    ArrayList<Class<?>> pools = new ArrayList<Class<?>>();\n    pools.add(TextPool.class);\n    pools.add(SettingPool.class);\n    pools.add(TouchpointPool.class);\n    pools.add(LocalSettingPool.class);\n    pools.add(SystemMessagePool.class);\n    return pools;\n  }\n\n  @Override\n  protected String getApplicationId() {\n    return LocationHelper.getApplicationIdForCurrentPage();\n  }\n\n  @Override\n  protected void beforeLoad() {\n    NBOPortletView.exportPortletStaticMethod();\n    NBOOverviewView.exportOverviewStaticMethod();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Client-side entry point for the GWT application that handles initialization and configuration",
      "components": [
        {
          "name": "AppStarter",
          "type": "Client Application Entry Point",
          "description": "Manages application startup and configuration loading"
        }
      ],
      "data_structures": [
        {
          "name": "LocalSettingPool",
          "fields": [
            "settings"
          ],
          "relationships": [
            "Imported from bite.core.shared.dto"
          ]
        },
        {
          "name": "SettingPool",
          "fields": [
            "settings"
          ],
          "relationships": [
            "Imported from bite.core.shared.dto"
          ]
        },
        {
          "name": "TextPool",
          "fields": [
            "texts"
          ],
          "relationships": [
            "Imported from bite.core.shared.dto"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Application must load system settings before startup",
          "location": "Main initialization logic"
        }
      ],
      "dependencies": [
        "at.a1ta.bite.core.shared.dto.LocalSettingPool",
        "at.a1ta.bite.core.shared.dto.SettingPool",
        "at.a1ta.bite.core.shared.dto.TextPool",
        "at.a1ta.bite.core.shared.dto.systemmessage",
        "java.util.ArrayList",
        "java.util.List"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "cuco/src/main/java/at/a1ta/cuco/admin/starter/client/AdminStarter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/java/at/a1ta/cuco/admin/starter/client/AdminStarter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1083,
    "content": "package at.a1ta.cuco.admin.starter.client;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.LocalSettingPool;\nimport at.a1ta.bite.core.shared.dto.SettingPool;\nimport at.a1ta.bite.core.shared.dto.TextPool;\nimport at.a1ta.bite.ui.client.BiteEntryPoint;\nimport at.a1ta.cuco.ui.common.shared.ApplicationId;\n\nimport com.extjs.gxt.ui.client.GXT;\nimport com.extjs.gxt.ui.client.util.Theme;\nimport com.google.gwt.core.client.GWT;\n\npublic class AdminStarter extends BiteEntryPoint {\n  private static final String DEFAULT_CSS = \"styles/gxt-gray.css\";\n\n  @Override\n  protected List<Class<?>> getDataPools() {\n    ArrayList<Class<?>> pools = new ArrayList<Class<?>>();\n    pools.add(TextPool.class);\n    pools.add(SettingPool.class);\n    pools.add(LocalSettingPool.class);\n    return pools;\n  }\n\n  @Override\n  protected String getApplicationId() {\n    return ApplicationId.ADMIN.toString();\n  }\n\n  @Override\n  protected void beforeLoad() {\n    Theme.GRAY.set(\"file\", GWT.getModuleBaseURL() + DEFAULT_CSS);\n    GXT.setDefaultTheme(Theme.GRAY, true);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Entry point for the admin interface of the CuCo application, handling initialization and configuration of the admin module",
      "components": [
        {
          "name": "AdminStarter",
          "type": "class",
          "description": "Main starter class that extends BiteEntryPoint to initialize admin functionality"
        }
      ],
      "data_structures": [
        {
          "name": "Configuration Pools",
          "fields": [
            "LocalSettingPool",
            "SettingPool",
            "TextPool"
          ],
          "relationships": [
            "Inherits from BiteEntryPoint"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Handles admin-specific initialization and configuration loading",
          "location": "AdminStarter class"
        }
      ],
      "dependencies": [
        "at.a1ta.bite.core.shared.dto.LocalSettingPool",
        "at.a1ta.bite.core.shared.dto.SettingPool",
        "at.a1ta.bite.core.shared.dto.TextPool",
        "at.a1ta.bite.ui.client.BiteEntryPoint"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "cuco/src/main/java/at/a1ta/cuco/mycuco/starter/client/MyCuCoStarter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/java/at/a1ta/cuco/mycuco/starter/client/MyCuCoStarter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1138,
    "content": "package at.a1ta.cuco.mycuco.starter.client;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.LocalSettingPool;\nimport at.a1ta.bite.core.shared.dto.SettingPool;\nimport at.a1ta.bite.core.shared.dto.StartupConfiguration;\nimport at.a1ta.bite.core.shared.dto.TextPool;\nimport at.a1ta.bite.core.shared.dto.systemmessage.SystemMessagePool;\nimport at.a1ta.bite.ui.client.BiteEntryPoint;\nimport at.a1ta.cuco.ui.common.shared.ApplicationId;\n\nimport com.google.gwt.user.client.Window.Location;\n\npublic class MyCuCoStarter extends BiteEntryPoint {\n  @Override\n  protected List<Class<?>> getDataPools() {\n    ArrayList<Class<?>> pools = new ArrayList<Class<?>>();\n    pools.add(TextPool.class);\n    pools.add(SettingPool.class);\n    pools.add(LocalSettingPool.class);\n    pools.add(SystemMessagePool.class);\n    return pools;\n  }\n\n  @Override\n  protected void beforeLoad() {\n    String impersonation = Location.getParameter(\"iun\");\n    StartupConfiguration.getInstance().setImpersonation(impersonation);\n  }\n\n  @Override\n  protected String getApplicationId() {\n    return ApplicationId.MYCUCO.toString();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Entry point for the user-facing CuCo application, managing initialization and configuration of the main application module",
      "components": [
        {
          "name": "MyCuCoStarter",
          "type": "class",
          "description": "Main starter class that extends BiteEntryPoint to initialize user functionality"
        }
      ],
      "data_structures": [
        {
          "name": "Configuration Pools",
          "fields": [
            "LocalSettingPool",
            "SettingPool",
            "StartupConfiguration",
            "TextPool"
          ],
          "relationships": [
            "Inherits from BiteEntryPoint"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Manages user-specific initialization and startup configuration",
          "location": "MyCuCoStarter class"
        }
      ],
      "dependencies": [
        "at.a1ta.bite.core.shared.dto.LocalSettingPool",
        "at.a1ta.bite.core.shared.dto.SettingPool",
        "at.a1ta.bite.core.shared.dto.StartupConfiguration",
        "at.a1ta.bite.core.shared.dto.TextPool"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "cuco/src/main/java/at/a1ta/pkb/starter/client/PkbStarter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/java/at/a1ta/pkb/starter/client/PkbStarter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 918,
    "content": "package at.a1ta.pkb.starter.client;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.LocalSettingPool;\nimport at.a1ta.bite.core.shared.dto.SettingPool;\nimport at.a1ta.bite.core.shared.dto.TextPool;\nimport at.a1ta.bite.core.shared.dto.systemmessage.SystemMessagePool;\nimport at.a1ta.bite.ui.client.BiteEntryPoint;\nimport at.a1ta.cuco.ui.common.shared.ApplicationId;\nimport at.a1ta.pkb.bean.bean.TouchpointPool;\n\npublic class PkbStarter extends BiteEntryPoint {\n  @Override\n  protected List<Class<?>> getDataPools() {\n    ArrayList<Class<?>> pools = new ArrayList<Class<?>>();\n    pools.add(TextPool.class);\n    pools.add(SettingPool.class);\n    pools.add(TouchpointPool.class);\n    pools.add(LocalSettingPool.class);\n    pools.add(SystemMessagePool.class);\n    return pools;\n  }\n\n  @Override\n  protected String getApplicationId() {\n    return ApplicationId.PKB.toString();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Client-side starter class for PKB (Product Knowledge Base) application initialization",
      "components": [
        {
          "name": "PkbStarter",
          "type": "Java Class",
          "description": "Main starter class that handles initialization of settings, text pools, and system messages"
        }
      ],
      "data_structures": [
        {
          "name": "SettingPool",
          "fields": [
            "settings",
            "configuration"
          ],
          "relationships": [
            "extends LocalSettingPool"
          ]
        },
        {
          "name": "TextPool",
          "fields": [
            "text resources",
            "localization data"
          ],
          "relationships": [
            "used by PkbStarter"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "System must initialize with local settings before loading remote configurations",
          "location": "PkbStarter class"
        }
      ],
      "dependencies": [
        "at.a1ta.bite.core.shared.dto.LocalSettingPool",
        "at.a1ta.bite.core.shared.dto.SettingPool",
        "at.a1ta.bite.core.shared.dto.TextPool",
        "at.a1ta.bite.core.shared.dto.systemmessage.SystemMessage"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/AuthServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/AuthServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 994,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.service.AuthorityService;\nimport at.a1ta.bite.core.shared.dto.security.Authority;\nimport at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet;\nimport at.a1ta.webclient.cucosett.client.service.AuthServlet;\n\n@WebServlet(name = \"auth\", urlPatterns = {\"/admin/cuco/auth.rpc\"})\npublic class AuthServletImpl extends SpringRemoteServiceServlet implements AuthServlet {\n\n  private static final long serialVersionUID = 1L;\n\n  @Autowired\n  private AuthorityService authorityService;\n\n  @Override\n  public ArrayList<Authority> getAllAuthorities() {\n    return (ArrayList<Authority>) authorityService.getAllAuthorities();\n  }\n\n  @Override\n  public ArrayList<Authority> getAllAuthorities(String filter) {\n    return (ArrayList<Authority>) authorityService.getAllAuthorities(filter);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Authentication servlet implementation for handling user authorization requests",
      "components": [
        {
          "name": "AuthServletImpl",
          "type": "Servlet",
          "description": "Web servlet that handles authentication and authorization requests"
        }
      ],
      "data_structures": [
        {
          "name": "Authority",
          "fields": [
            "permissions",
            "roles"
          ],
          "relationships": [
            "used by AuthServletImpl"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Authentication must be processed through Spring Security framework",
          "location": "AuthServletImpl class"
        },
        {
          "description": "User authorities must be validated before granting access",
          "location": "AuthServletImpl class"
        }
      ],
      "dependencies": [
        "javax.servlet.annotation.WebServlet",
        "org.springframework.beans.factory.annotation.Autowired",
        "at.a1ta.bite.core.server.service.AuthorityService",
        "at.a1ta.bite.core.shared.dto.security.Authority"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/PastExportServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/PastExportServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5090,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.text.DateFormat;\nimport java.text.NumberFormat;\nimport java.util.List;\nimport java.util.Locale;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.config.AutowireCapableBeanFactory;\nimport org.springframework.web.context.WebApplicationContext;\nimport org.springframework.web.context.support.WebApplicationContextUtils;\n\nimport at.a1ta.bite.core.server.dao.AuthorityDao;\nimport at.a1ta.bite.core.server.dao.PersonDao;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.security.Authority;\nimport at.a1ta.cuco.core.service.ServiceService;\nimport at.a1ta.cuco.core.service.TeamService;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\n\n@WebServlet(name = \"pastExport\", urlPatterns = {\"/pastExport\"})\npublic class PastExportServlet extends HttpServlet {\n\n  @Autowired\n  private ServiceService serviceService;\n\n  @Autowired\n  private PersonDao personDao;\n\n  @Autowired\n  private TeamService teamService;\n\n  @Autowired\n  private AuthorityDao authDao;\n\n  @Override\n  public void init() throws ServletException {\n    super.init();\n    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());\n    AutowireCapableBeanFactory beanFactory = ctx.getAutowireCapableBeanFactory();\n    beanFactory.autowireBean(this);\n  }\n\n  @Override\n  public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    response.setContentType(\"text/csv\");\n    PrintWriter writer = response.getWriter();\n\n    DateFormat format = DateFormat.getDateInstance(DateFormat.MEDIUM);\n    NumberFormat nformat = NumberFormat.getNumberInstance(Locale.GERMAN);\n\n    if (request.getParameter(\"what\").equals(\"services\")) {\n      writer.write(\"Dienstleistung;\");\n      writer.write(\"G\u00fcltig von;\");\n      writer.write(\"G\u00fcltig bis;\");\n      writer.write(\"Kosten;\");\n      writer.write(\"ProduktCode;\");\n      writer.write(\"Verrechnungsart;\");\n      writer.write(\"Gutschriftsart;\");\n      writer.write(\"Multiplikator;\");\n      writer.write(\"Produkt;\");\n      writer.write(\"Grund1;\");\n      writer.write(\"Grund2;\");\n      writer.write(\"Grund3;\");\n      writer.write(\"Resultat;\\n\");\n      for (Service s : serviceService.getAllServices()) {\n        writer.write(s.getName() + \";\");\n        writer.write(s.getValidity().getValidFrom() == null ? \";\" : format.format(s.getValidity().getValidFrom()) + \";\");\n        writer.write(s.getValidity().getValidUntil() == null ? \";\" : format.format(s.getValidity().getValidUntil()) + \";\");\n        writer.write(nformat.format(s.getCosts()) + \";\");\n        writer.write(s.getProductCode() + \";\");\n        writer.write(s.getChargingType().getName() + \";\");\n        writer.write(s.getCreditType().getName() + \";\");\n        writer.write(s.getMulti().toString() + \";\");\n        writer.write(s.getProduct() + \";\");\n        writer.write(s.getReason1() + \";\");\n        writer.write(s.getReason2() + \";\");\n        writer.write(s.getReason3() + \";\");\n        writer.write(s.getResult() + \";\");\n        writer.write(\"\\n\");\n      }\n      String disposition = \"attachment; fileName=PastServices.csv\";\n      response.setHeader(\"Content-Disposition\", disposition);\n    } else if (request.getParameter(\"what\").equals(\"agents\")) {\n      writer.write(\"Name;\");\n      writer.write(\"NTAccount;\");\n      writer.write(\"Team;\");\n      writer.write(\"Administrator;\");\n      writer.write(\"FBAdministrator;\");\n      writer.write(\"Abwesend;\\n\");\n      for (BiteUser user : teamService.getAllUsers(Auth.PAST_GULA_CREATE)) {\n        writer.write(user.getName() + \";\");\n        writer.write(user.getUsername() + \";\");\n        Team t = teamService.getTeamForUser(user.getId());\n        writer.write(t == null ? \";\" : (t.getName() + \";\"));\n\n        List<Authority> auths = authDao.getAuthoritiesForUser(user.getId());\n        writer.write(containsAuthority(auths, Auth.PAST_TEAM_ASSIGN_SERVICE) ? \"Ja;\" : \";\");\n        writer.write(containsAuthority(auths, Auth.PAST_TEAM_ASSIGN_USER) ? \"Ja;\" : \";\");\n        writer.write(personDao.getPerson(user.getUsername()).isAbsent() ? \"Ja;\" : \";\");\n        writer.write(\"\\n\");\n      }\n      String disposition = \"attachment; fileName=PastAgents.csv\";\n      response.setHeader(\"Content-Disposition\", disposition);\n    } else {\n      response.setContentType(\"text\");\n      writer.write(\"Please call with: what=services or what=agents\");\n    }\n\n    writer.close();\n  }\n\n  private boolean containsAuthority(List<Authority> auths, Auth authority) {\n    for (Authority auth : auths) {\n      if (auth.getName().equals(authority.getName())) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Servlet to handle past export operations in the CUCOSETT web client",
      "components": [
        {
          "name": "PastExportServlet",
          "type": "HttpServlet",
          "description": "Handles HTTP requests for exporting historical data"
        }
      ],
      "data_structures": [],
      "business_rules": [
        {
          "description": "Must handle HTTP GET/POST requests for data export",
          "location": "doGet/doPost methods"
        }
      ],
      "dependencies": [
        "javax.servlet.ServletException",
        "javax.servlet.annotation.WebServlet",
        "javax.servlet.http.HttpServlet",
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse",
        "java.io.IOException"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/UploadFileServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/UploadFileServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3302,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.fileupload.FileItem;\nimport org.apache.commons.fileupload.FileItemFactory;\nimport org.apache.commons.fileupload.FileUploadException;\nimport org.apache.commons.fileupload.disk.DiskFileItemFactory;\nimport org.apache.commons.fileupload.servlet.ServletFileUpload;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.web.context.WebApplicationContext;\nimport org.springframework.web.context.support.WebApplicationContextUtils;\n\nimport at.a1ta.cuco.core.service.ImageService;\nimport at.a1ta.cuco.core.service.ImageSizeService;\nimport at.a1ta.cuco.ui.common.server.servlet.SpringServlet;\nimport at.a1ta.webclient.cucosett.server.util.FileUtil;\n\n/** * Servlet implementation class for Servlet: UploadFileServlet */\npublic class UploadFileServlet extends SpringServlet {\n\n  private static final long serialVersionUID = 8305367618713715640L;\n\n  private static final Logger logger = LoggerFactory.getLogger(UploadFileServlet.class);\n\n  private String remotePath;\n\n  private String uUser;\n\n  private FileItem file;\n\n  private ImageSizeService imageSizeService;\n\n  private ImageService imageService;\n\n  public UploadFileServlet() {}\n\n  @Override\n  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());\n    imageSizeService = (ImageSizeService) ctx.getBean(\"imageSizeService\");\n    imageService = (ImageService) ctx.getBean(\"imageService\");\n\n    response.setContentType(\"text/html\");\n    uUser = getUsername(request);\n    readParameters(request);\n\n    if (file.get().length == 0) {\n      response.getWriter().write(\"Die Datei darf nicht leer sein!\");\n    } else if (!file.getName().substring(file.getName().lastIndexOf(\".\") + 1).equalsIgnoreCase(\"jpg\")) {\n      response.getWriter().write(\"Es sind nur jpg Bilder erlaubt!\");\n    } else {\n      try {\n        FileUtil.saveNewFile(imageSizeService, imageService, file, uUser, remotePath);\n        response.getWriter().write(\"Bild wurde erfolgreich hochgeladen!\");\n      } catch (Exception ex) {\n        response.getWriter().write(\"Bild konnte nicht gespeichert werden!\");\n      }\n\n    }\n  }\n\n  private void readParameters(HttpServletRequest request) {\n    FileItemFactory factory = new DiskFileItemFactory();\n    ServletFileUpload upload = new ServletFileUpload(factory);\n\n    try {\n      List<?> items = upload.parseRequest(request);\n      Iterator<?> it = items.iterator();\n      while (it.hasNext()) {\n        FileItem item = (FileItem) it.next();\n        if (!item.isFormField() && item.getFieldName().equals(\"uploadFormElement\")) {\n          file = item;\n        } else if (item.isFormField() && item.getFieldName().equals(\"remotePath\")) {\n          remotePath = item.getString();\n          if (!remotePath.endsWith(\"/\")) {\n            remotePath += \"/\";\n          }\n        }\n      }\n    } catch (FileUploadException e) {\n      logger.error(e.getMessage());\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Servlet to handle file upload operations in the CUCOSETT web client",
      "components": [
        {
          "name": "UploadFileServlet",
          "type": "HttpServlet",
          "description": "Processes file upload requests and handles file storage"
        }
      ],
      "data_structures": [
        {
          "name": "FileItem",
          "fields": [
            "file metadata",
            "file content"
          ],
          "relationships": [
            "org.apache.commons.fileupload"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Must handle multipart file upload requests",
          "location": "doPost method"
        },
        {
          "description": "Must process uploaded files using Apache Commons FileUpload",
          "location": "File processing logic"
        }
      ],
      "dependencies": [
        "javax.servlet.ServletException",
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse",
        "java.io.IOException",
        "org.apache.commons.fileupload.FileItem",
        "java.util.Iterator",
        "java.util.List"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/IbatisServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/IbatisServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1764,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\n\nimport org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;\nimport org.springframework.web.context.WebApplicationContext;\nimport org.springframework.web.context.support.WebApplicationContextUtils;\n\nimport at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.webclient.cucosett.client.service.IbatisServlet;\n\n@WebServlet(name = \"ibatis\", urlPatterns = {\"/admin/cuco/ibatis.rpc\"})\npublic class IbatisServletImpl extends SpringRemoteServiceServlet implements IbatisServlet {\n\n  @Override\n  public RpcStatus flushAll() {\n    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());\n    ArrayList<String> names = getDaos();\n\n    for (String name : names) {\n      SqlMapClientDaoSupport dao = (SqlMapClientDaoSupport) ctx.getBean(name);\n      dao.getSqlMapClient().flushDataCache();\n    }\n\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public RpcStatus flushDao(String name) {\n    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());\n    SqlMapClientDaoSupport dao = (SqlMapClientDaoSupport) ctx.getBean(name);\n    dao.getSqlMapClient().flushDataCache();\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public ArrayList<String> getDaos() {\n    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());\n    String[] names = ctx.getBeanNamesForType(SqlMapClientDaoSupport.class);\n    ArrayList<String> result = new ArrayList<String>();\n    for (String s : names) {\n      result.add(s);\n    }\n\n    return result;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Implementation of a servlet that provides iBATIS database access functionality through Spring's SqlMapClientDaoSupport",
      "components": [
        {
          "name": "IbatisServletImpl",
          "type": "Servlet",
          "description": "Web servlet that extends SqlMapClientDaoSupport for database operations"
        }
      ],
      "data_structures": [],
      "business_rules": [
        {
          "description": "Must be configured with Spring WebApplicationContext",
          "location": "Class level"
        }
      ],
      "dependencies": [
        "javax.servlet",
        "org.springframework.orm.ibatis.support.SqlMapClientDaoSupport",
        "org.springframework.web.context.WebApplicationContext",
        "org.springframework.web.context.support.WebApplicationContextUtils"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/CreditTypeServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/CreditTypeServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1186,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet;\nimport at.a1ta.cuco.core.service.CreditTypeService;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.webclient.cucosett.client.service.CreditTypeServlet;\n\n@WebServlet(name = \"creditType\", urlPatterns = {\"/admin/cuco/creditType.rpc\"})\npublic class CreditTypeServletImpl extends SpringRemoteServiceServlet implements CreditTypeServlet {\n\n  private static final long serialVersionUID = -1737440649543126895L;\n\n  @Autowired\n  private CreditTypeService creditTypeService;\n\n  @Override\n  public RpcStatus deleteCreditType(Long id) {\n\n    creditTypeService.deleteCreditType(id);\n    return RpcStatus.OK;\n\n  }\n\n  @Override\n  public ArrayList<CreditType> getAllCreditTypes() {\n    return (ArrayList<CreditType>) creditTypeService.getAllCreditTypes();\n  }\n\n  @Override\n  public CreditType saveCreditType(CreditType ct) {\n    creditTypeService.saveCreditType(ct);\n    return ct;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Implementation of a servlet that handles credit type related operations",
      "components": [
        {
          "name": "CreditTypeServletImpl",
          "type": "Servlet",
          "description": "Web servlet that extends SpringRemoteServiceServlet to handle credit type operations"
        }
      ],
      "data_structures": [
        {
          "name": "CreditType",
          "fields": [
            "Not visible in preview"
          ],
          "relationships": [
            "Managed by CreditTypeService"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Must be autowired with CreditTypeService",
          "location": "Class level"
        }
      ],
      "dependencies": [
        "javax.servlet",
        "org.springframework.beans.factory.annotation.Autowired",
        "at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet",
        "at.a1ta.cuco.core.service.CreditTypeService"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/ReportingServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/ReportingServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1667,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport org.apache.commons.lang3.exception.ExceptionUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet;\nimport at.a1ta.cuco.core.bean.File;\nimport at.a1ta.cuco.core.bean.Reporting;\nimport at.a1ta.cuco.core.service.ReportingService;\nimport at.a1ta.cuco.ui.common.server.util.SessionUtil;\nimport at.a1ta.webclient.cucosett.client.service.ReportingException;\nimport at.a1ta.webclient.cucosett.client.service.ReportingServlet;\n\n@WebServlet(name = \"reporting\", urlPatterns = {\"/admin/cuco/reporting.rpc\"})\npublic class ReportingServletImpl extends SpringRemoteServiceServlet implements ReportingServlet {\n  @Autowired\n  private ReportingService reportingService;\n\n  @Override\n  public ArrayList<Reporting> getAllReportings() {\n    return new ArrayList<Reporting>(reportingService.getAllReportings());\n  }\n\n  @Override\n  public ArrayList<HashMap<String, Object>> executeReporting(Long id) throws ReportingException {\n    try {\n      return new ArrayList<HashMap<String, Object>>(reportingService.executeReporting(id));\n    } catch (Exception b) {\n      throw new ReportingException(ExceptionUtils.getStackTrace(b));\n    }\n  }\n\n  @Override\n  public String exportReportAsExcel(Long id) throws ReportingException {\n    try {\n      File file = reportingService.exportReportAsExcel(id);\n      return SessionUtil.saveFile(getSession(), file);\n    } catch (Exception b) {\n      throw new ReportingException(ExceptionUtils.getStackTrace(b));\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Implements a servlet to handle reporting-related operations in the web client",
      "components": [
        {
          "name": "ReportingServletImpl",
          "type": "Servlet",
          "description": "Spring-enabled servlet that processes reporting requests"
        }
      ],
      "data_structures": [
        {
          "name": "HashMap",
          "fields": [
            "dynamic key-value pairs"
          ],
          "relationships": [
            "Used for storing report parameters"
          ]
        },
        {
          "name": "ArrayList",
          "fields": [
            "dynamic list elements"
          ],
          "relationships": [
            "Used for collecting report data"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Must handle exceptions and provide stack traces",
          "location": "ExceptionUtils usage"
        }
      ],
      "dependencies": [
        "javax.servlet",
        "org.springframework",
        "org.apache.commons.lang3",
        "at.a1ta.bite.ui.server"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/TeamServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/TeamServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2521,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet;\nimport at.a1ta.cuco.core.service.TeamService;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.webclient.cucosett.client.service.TeamServlet;\n\n@WebServlet(name = \"team\", urlPatterns = {\"/admin/cuco/team.rpc\"})\npublic class TeamServletImpl extends SpringRemoteServiceServlet implements TeamServlet {\n\n  private static final long serialVersionUID = 1L;\n  @Autowired\n  private TeamService teamService;\n\n  @Override\n  public ArrayList<Team> getAllTeams() {\n    return (ArrayList<Team>) teamService.getAllTeams();\n  }\n\n  @Override\n  public Team saveTeam(Team team) {\n    teamService.save(team);\n    return team;\n  }\n\n  @Override\n  public RpcStatus deleteTeam(Long teamId) {\n    teamService.deleteTeam(teamId);\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public RpcStatus removeTeamMember(Long teamId, Long userId) {\n    teamService.removeTeamMember(teamId, userId);\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public RpcStatus addTeamMembers(Long teamId, ArrayList<Long> userIds) {\n    teamService.addTeamMembers(teamId, userIds);\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public ArrayList<Service> getNotLinkedServices(Long teamId) {\n    return (ArrayList<Service>) teamService.getNotLinkedServices(teamId);\n  }\n\n  @Override\n  public RpcStatus addServices(Long teamId, ArrayList<Long> serviceIds) {\n    teamService.addServices(teamId, serviceIds);\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public RpcStatus removeService(Long teamId, Long serviceId) {\n    teamService.removeService(teamId, serviceId);\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public ArrayList<BiteUser> getAllUsers() {\n    return (ArrayList<BiteUser>) teamService.getAllUsers(Auth.PAST_GULA_CREATE);\n  }\n\n  @Override\n  public Team getTeam(Long id) {\n    return teamService.getTeam(id);\n  }\n\n  @Override\n  public ArrayList<Service> getService(String service) {\n\n    return (ArrayList<Service>) teamService.getService(service);\n  }\n\n  @Override\n  public ArrayList<BiteUser> searchUsers(String name, String user, String orgunit) {\n    return (ArrayList<BiteUser>) teamService.searchUsers(name, user, orgunit);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Implements a servlet to handle team-related operations in the web client",
      "components": [
        {
          "name": "TeamServletImpl",
          "type": "Servlet",
          "description": "Spring-enabled servlet that processes team management requests"
        }
      ],
      "data_structures": [
        {
          "name": "ArrayList",
          "fields": [
            "dynamic list elements"
          ],
          "relationships": [
            "Used for storing team member data"
          ]
        },
        {
          "name": "BiteUser",
          "fields": [
            "user information"
          ],
          "relationships": [
            "Represents team member details"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Must integrate with Spring framework for dependency injection",
          "location": "@Autowired annotations"
        }
      ],
      "dependencies": [
        "javax.servlet",
        "org.springframework",
        "at.a1ta.bite.core.shared.dto",
        "at.a1ta.bite.ui.server.servlet"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/ChargingTypeServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/ChargingTypeServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 794,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet;\nimport at.a1ta.cuco.core.service.ChargingTypeService;\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\nimport at.a1ta.webclient.cucosett.client.service.ChargingTypeServlet;\n\n@WebServlet(name = \"chargingType\", urlPatterns = {\"/admin/cuco/chargingType.rpc\"})\npublic class ChargingTypeServletImpl extends SpringRemoteServiceServlet implements ChargingTypeServlet {\n  @Autowired\n  private ChargingTypeService chargingTypeService;\n\n  @Override\n  public List<ChargingType> getAllChargingTypes() {\n    return chargingTypeService.getAllChargingTypes();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Servlet implementation for handling charging type related operations through web requests",
      "components": [
        {
          "name": "ChargingTypeServletImpl",
          "type": "Servlet",
          "description": "Spring-enabled servlet that delegates charging type operations to ChargingTypeService"
        }
      ],
      "data_structures": [
        {
          "name": "ChargingType",
          "fields": [
            "implied but not visible in preview"
          ],
          "relationships": [
            "Managed by ChargingTypeService"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Must integrate with Spring framework for dependency injection",
          "location": "@Autowired annotation"
        }
      ],
      "dependencies": [
        "javax.servlet",
        "org.springframework",
        "at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet",
        "at.a1ta.cuco.core.service.ChargingTypeService"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/FileContentServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/FileContentServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2191,
    "content": "package at.a1ta.webclient.cucosett.server;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.fileupload.FileItem;\nimport org.apache.commons.fileupload.FileItemFactory;\nimport org.apache.commons.fileupload.FileUploadException;\nimport org.apache.commons.fileupload.disk.DiskFileItemFactory;\nimport org.apache.commons.fileupload.servlet.ServletFileUpload;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class FileContentServlet extends HttpServlet {\n\n  private static final String ERROR_PREFIX = \"@@FileContentServletError@@\";\n\n  private static final Logger log = LoggerFactory.getLogger(FileContentServlet.class);\n\n  @Override\n  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    try {\n      response.setContentType(\"text/html\");\n      FileItemFactory factory = new DiskFileItemFactory();\n      ServletFileUpload servletFileUpload = new ServletFileUpload(factory);\n\n      List<?> fileItemsList = servletFileUpload.parseRequest(request);\n      Iterator<?> it = fileItemsList.iterator();\n      while (it.hasNext()) {\n        FileItem fileItem = (FileItem) it.next();\n        if (!fileItem.isFormField()) {\n          if (checkFile(fileItem)) {\n            request.getSession().setAttribute(\"filecontent\", fileItem.getString());\n            request.getSession().setAttribute(\"filename\", fileItem.getName());\n          } else {\n            log.error(\"Invalid file uploaded\");\n            response.getWriter().write(ERROR_PREFIX + \"Es handelt sich um keine CSV Datei.\");\n          }\n          // response.getWriter().write(fileItem.getString());\n        }\n      }\n    } catch (FileUploadException e) {\n      log.error(e.getMessage(), e);\n      response.getWriter().write(ERROR_PREFIX + e.getMessage());\n    }\n  }\n\n  private boolean checkFile(FileItem fileItem) {\n    return fileItem != null && fileItem.getName() != null && fileItem.getName().toLowerCase().endsWith(\".csv\");\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Servlet for handling file content operations and HTTP requests related to file management",
      "components": [
        {
          "name": "FileContentServlet",
          "type": "HttpServlet",
          "description": "Handles file content related HTTP requests and responses"
        }
      ],
      "data_structures": [
        {
          "name": "FileContent",
          "fields": [
            "implied but not visible in preview"
          ],
          "relationships": [
            "Managed through HttpServletRequest/Response"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Must handle HTTP request/response cycle",
          "location": "HttpServlet extension"
        },
        {
          "description": "Must handle IOException and ServletException",
          "location": "Exception handling declarations"
        }
      ],
      "dependencies": [
        "javax.servlet.ServletException",
        "javax.servlet.http.HttpServlet",
        "javax.servlet.http.HttpServletRequest",
        "javax.servlet.http.HttpServletResponse",
        "java.io.IOException",
        "java.util.Iterator",
        "java.util.List"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/util/FileUtil.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/server/util/FileUtil.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4380,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.webclient.cucosett.server.util;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.List;\n\nimport org.apache.commons.fileupload.FileItem;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport at.a1ta.cuco.core.service.ImageService;\nimport at.a1ta.cuco.core.service.ImageSizeService;\nimport at.a1ta.cuco.core.shared.dto.ImageSize;\nimport at.a1ta.pkb.ui.server.ImageUtil;\n\n/**\n * Contains commonly used methods for filehandling. By now that's file extension utilities and ftp utilities\n */\npublic final class FileUtil {\n\n  private final static Logger logger = LoggerFactory.getLogger(FileUtil.class);\n\n  private FileUtil() {}\n\n  private static void writeFile(String fullPath, byte[] data) {\n    FileOutputStream fos = null;\n    try {\n      fos = new FileOutputStream(fullPath);\n      fos.write(data);\n      fos.flush();\n    } catch (Exception e) {\n      if (logger.isErrorEnabled()) {\n        logger.error(e.getMessage(), e);\n      }\n\n    } finally {\n      // clean up\n      if (fos != null) {\n        try {\n          fos.close();\n        } catch (IOException e1) {\n          logger.error(\"Error during writing file \" + fullPath, e1);\n        }\n      }\n    }\n  }\n\n  private static String transformUmlaut(String s) {\n    if (s == null) {\n      return s;\n    }\n\n    String tmp = s;\n    try {\n      tmp = tmp.replaceAll(\"\u00e4\", \"ae\");\n      tmp = tmp.replaceAll(\"\u00fc\", \"ue\");\n      tmp = tmp.replaceAll(\"\u00f6\", \"oe\");\n      tmp = tmp.replaceAll(\"\u00c4\", \"Ae\");\n      tmp = tmp.replaceAll(\"\u00dc\", \"Ue\");\n      tmp = tmp.replaceAll(\"\u00d6\", \"Oe\");\n      tmp = tmp.replaceAll(\"\u00df\", \"ss\");\n      tmp = tmp.replaceAll(\"\\\\(\", \"\");\n      tmp = tmp.replaceAll(\"\\\\)\", \"\");\n      tmp = tmp.replaceAll(\" \", \"_\");\n    } catch (Exception e) {\n      if (logger.isWarnEnabled()) {\n        logger.warn(\"Unable to encode \" + s + \"\", e);\n      }\n    }\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Transformed \" + s + \" to \" + tmp);\n    }\n    return tmp;\n  }\n\n  public static String saveNewFile(ImageSizeService imgSizeService, ImageService imgService, FileItem ff, String uuser, String path)\n      throws FileNotFoundException, IOException, Exception {\n\n    String filename = null;\n\n    List<ImageSize> imageSizes = imgSizeService.getImageSizes();\n    filename = FileUtil.transformUmlaut(ff.getName());\n    int index = filename.lastIndexOf(\"\\\\\");\n    filename = filename.substring(index + 1);\n    byte fileData[] = ff.get();\n\n    for (ImageSize size : imageSizes) {\n      try {\n        byte imageData[];\n        if (size.getWidth() != null && size.getHeight() != null) {\n          imageData = ImageUtil.resizeImage(fileData, size.getWidth().intValue(), size.getHeight().intValue(), true);\n        } else {\n          imageData = fileData;\n        }\n        // Create necessary directories.\n        File f = new File(path + size.getName());\n        if (!f.exists()) {\n          f.mkdirs();\n        }\n        String newImageFilename = createImageFilename(filename, size.getName());\n        FileUtil.writeFile(path + newImageFilename, imageData);\n        if (imgService.updateImage(uuser, newImageFilename, filename, size.getId()) == 0) {\n          imgService.saveImage(uuser, newImageFilename, filename, size.getId());\n        }\n      } catch (Exception e) {\n        logger.error(\"error saving file\", e);\n        throw new Exception(\"Bild konnte nicht gespeichert werden\", e);\n      }\n    }\n    return filename;\n  }\n\n  private static String createImageFilename(String filename, String sizeName) {\n    return sizeName + \"/\" + filename;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Utility class for file operations in the server-side component",
      "components": [
        {
          "name": "FileUtil",
          "type": "Utility Class",
          "description": "Provides file handling functionality for server operations"
        }
      ],
      "data_structures": [],
      "business_rules": [
        {
          "description": "File operations must maintain A1 Telekom Austria AG copyright compliance",
          "location": "Class header"
        }
      ],
      "dependencies": [
        "A1 Telekom Austria proprietary libraries"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/SystemMessagesGrid.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/SystemMessagesGrid.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9091,
    "content": "package at.a1ta.webclient.cucosett.client.ui;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.logical.shared.SelectionEvent;\nimport com.google.gwt.event.logical.shared.SelectionHandler;\nimport com.google.gwt.i18n.client.DateTimeFormat;\nimport com.google.gwt.user.client.ui.Anchor;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.SimplePanel;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.systemmessage.SystemMessage;\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.ui.SystemMessagePreviewComponent;\nimport at.a1ta.cuco.ui.common.client.bundle.CuCoUI;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.service.ServiceLocator;\nimport at.a1ta.framework.ui.client.ui.dialog.DialogPanel;\nimport at.a1ta.framework.ui.client.util.Validator;\nimport at.a1ta.webclient.cucosett.client.dialog.GwtEditMessageDialog;\n\npublic class SystemMessagesGrid extends SimplePanel implements SelectionHandler<Integer> {\n\n  private DataTable<SystemMessage> table;\n\n  private Widget panel = null;\n\n  private Button newMessageBtn;\n\n  private Delegate<SystemMessage> viewMessageDelegate;\n\n  private Delegate<SystemMessage> copyMessageDelegate;\n\n  private final int tabIndex;\n\n  private final boolean activeMsg;\n\n  private boolean initialized;\n\n  private boolean dirty;\n\n  private DateTimeFormat fmt = DateTimeFormat.getFormat(\"dd.MM.yyyy\");\n\n  public SystemMessagesGrid(int tabIndex, boolean activeMsg) {\n    this.tabIndex = tabIndex;\n    this.activeMsg = activeMsg;\n  }\n\n  @Override\n  public void onSelection(SelectionEvent<Integer> event) {\n    if (event.getSelectedItem() != tabIndex) {\n      deactviate();\n    } else {\n\n      if (!initialized) {\n        initUI();\n        load();\n      }\n      activate();\n    }\n  }\n\n  public Widget getPanel() {\n    return panel;\n  }\n\n  public void load() {\n    if (activeMsg) {\n      ServiceLocator.getSystemMessageService().loadUnexpiredMessages(createCallback());\n    } else {\n      ServiceLocator.getSystemMessageService().loadExpiredMessages(createCallback());\n    }\n  }\n\n  private final void activate() {\n    if (dirty) {\n      load();\n    }\n  }\n\n  private final void deactviate() {\n    if (initialized) {\n      // Do Nothing\n    }\n  }\n\n  private BaseAsyncCallback<List<SystemMessage>> createCallback() {\n    return new BaseAsyncCallback<List<SystemMessage>>() {\n\n      @Override\n      public void onSuccess(List<SystemMessage> result) {\n        ArrayList<ModelData<SystemMessage>> models = new ArrayList<ModelData<SystemMessage>>();\n        for (SystemMessage systemMessage : result) {\n          ModelData<SystemMessage> m = new ModelData<SystemMessage>(systemMessage);\n          m.put(\"id\", systemMessage.getId() + \"\");\n          if (Validator.isNullOrEmpty(systemMessage.getMessageContent().getImageUri())) {\n            m.put(\"imgUri\", \"\");\n          } else {\n            m.put(\"imgUri\", \"extImg/\" + systemMessage.getMessageContent().getImageUri());\n          }\n          m.put(\"title\", systemMessage.getMessageContent().getTitle());\n          m.put(\"validity\", getFmt().format(systemMessage.getPeriodOfValidity().getValidFrom()) + \" - \" + getFmt().format(systemMessage.getPeriodOfValidity().getValidUntil()));\n          m.put(\"preview\", systemMessage.getId() + \"\");\n          models.add(m);\n        }\n        if (table.getStore() != null) {\n          table.getStore().clear();\n        }\n        table.getStore().add(models);\n\n        table.showFirstPage();\n      }\n    };\n  }\n\n  public DateTimeFormat getFmt() {\n    return fmt;\n  }\n\n  public Widget initUI() {\n    initialized = true;\n    initTable();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel newMessage = createNewMessageRow();\n    pnl.add(newMessage);\n\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n\n    pnl.add(table);\n    viewMessageDelegate = new Delegate<SystemMessage>() {\n\n      @Override\n      public void execute(final SystemMessage systemMessage) {\n        DialogPanel dialog = new DialogPanel();\n        dialog.setCaption(AdminUI.ADMINCOMMONTEXTPOOL.smPreview());\n        dialog.setSize(600, 500);\n        dialog.add(new SystemMessagePreviewComponent(systemMessage.getId()));\n        dialog.center();\n      }\n    };\n\n    copyMessageDelegate = new Delegate<SystemMessage>() {\n\n      @Override\n      public void execute(final SystemMessage systemMessage) {\n        GwtEditMessageDialog p = new GwtEditMessageDialog(systemMessage.getId(), true);\n        load();\n        dirty = true;\n        p.show();\n      }\n    };\n\n    PortletEventManager.addListener(CuCoEventType.LOAD_MESSAGES, new PortletEventListener<PortletEvent>() {\n\n      @Override\n      public void handleEvent(PortletEvent be) {\n        load();\n      }\n    });\n    load();\n    add(pnl);\n    return pnl;\n  }\n\n  public boolean isDirty() {\n    return dirty;\n  }\n\n  public void setDirty(boolean dirty) {\n    this.dirty = dirty;\n  }\n\n  public void initTable() {\n    table = new DataTable<SystemMessage>(createColumns());\n    table.enablePaging(10);\n  }\n\n  private HorizontalPanel createNewMessageRow() {\n    HorizontalPanel newMessage = new HorizontalPanel();\n    if (activeMsg) {\n      newMessage.add(createMessageButton());\n    }\n    return newMessage;\n  }\n\n  private Button createMessageButton() {\n    newMessageBtn = new Button(AdminUI.ADMINCOMMONTEXTPOOL.smNewMessage(), ButtonSize.Small);\n\n    newMessageBtn.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        GwtEditMessageDialog p = new GwtEditMessageDialog(0, false);\n        load();\n        dirty = true;\n        p.show();\n      }\n    });\n    return newMessageBtn;\n  }\n\n  private ArrayList<Column<SystemMessage>> createColumns() {\n    ArrayList<Column<SystemMessage>> columns = new ArrayList<Column<SystemMessage>>();\n    columns.add(new Column<SystemMessage>(\"id\", AdminUI.ADMINCOMMONTEXTPOOL.smId(), \"20%\", createIdCellRenderer()));\n    columns.add(new Column<SystemMessage>(\"imgUri\", AdminUI.ADMINCOMMONTEXTPOOL.smImage(), \"20%\"));\n    columns.add(new Column<SystemMessage>(\"title\", AdminUI.ADMINCOMMONTEXTPOOL.smTitle(), \"20%\"));\n    columns.add(new Column<SystemMessage>(\"validity\", AdminUI.ADMINCOMMONTEXTPOOL.smValidity(), \"20%\"));\n    columns.add(new Column<SystemMessage>(\"preview\", AdminUI.ADMINCOMMONTEXTPOOL.smPreview(), \"10%\", createViewCellRenderer()));\n    columns.add(new Column<SystemMessage>(\"copy\", \"Kopieren\", \"10%\", createCopyCellRenderer()));\n    return columns;\n  }\n\n  private CellRenderer<SystemMessage> createIdCellRenderer() {\n    if (activeMsg) {\n      return new CellRenderer<SystemMessage>() {\n        @Override\n        public Widget render(final ModelData<SystemMessage> model, String columnId, int rowId) {\n          Anchor link = new Anchor(model.getBean().getId().toString());\n          link.addClickHandler(new ClickHandler() {\n            @Override\n            public void onClick(ClickEvent event) {\n              Long id = model.getBean().getId();\n              GwtEditMessageDialog p = new GwtEditMessageDialog(id, false);\n              load();\n              dirty = true;\n              p.show();\n\n            }\n          });\n          return link;\n        }\n      };\n    }\n    return null;\n  }\n\n  private CellRenderer<SystemMessage> createViewCellRenderer() {\n    return new CellRenderer<SystemMessage>() {\n      @Override\n      public IsWidget render(final ModelData<SystemMessage> model, String columnId, int rowId) {\n        return new ClickableIcon<SystemMessage>(model.getBean(), viewMessageDelegate, UI.IMAGES.iconView(), null);\n      }\n    };\n  }\n\n  private CellRenderer<SystemMessage> createCopyCellRenderer() {\n    return new CellRenderer<SystemMessage>() {\n      @Override\n      public IsWidget render(final ModelData<SystemMessage> model, String columnId, int rowId) {\n        return new ClickableIcon<SystemMessage>(model.getBean(), copyMessageDelegate, CuCoUI.IMAGES.iconCalcActionSmallCopy(), null);\n      }\n    };\n  }\n\n}",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "UI component for displaying and managing system messages in a grid format",
      "components": [
        {
          "name": "SystemMessagesGrid",
          "type": "GWT UI Component",
          "description": "Grid widget for displaying system messages with click handling capabilities"
        }
      ],
      "data_structures": [
        {
          "name": "MessageList",
          "fields": [
            "ArrayList<SystemMessage>"
          ],
          "relationships": [
            "Extends GWT Grid Component"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Handles click events for message selection",
          "location": "ClickHandler implementation"
        },
        {
          "description": "Manages selection events for message grid",
          "location": "SelectionEvent handler"
        }
      ],
      "dependencies": [
        "com.google.gwt.event.dom.client.ClickEvent",
        "com.google.gwt.event.dom.client.ClickHandler",
        "com.google.gwt.event.logical.shared.SelectionEvent",
        "java.util.ArrayList",
        "java.util.List"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/IconButtonRenderer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/IconButtonRenderer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1283,
    "content": "package at.a1ta.webclient.cucosett.client.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnData;\nimport com.extjs.gxt.ui.client.widget.grid.Grid;\nimport com.extjs.gxt.ui.client.widget.grid.GridCellRenderer;\nimport com.google.gwt.resources.client.ImageResource;\nimport com.google.gwt.user.client.ui.AbstractImagePrototype;\n\npublic class IconButtonRenderer implements GridCellRenderer<ModelData> {\n  private SelectionListener<ButtonEvent> listener;\n  private AbstractImagePrototype image;\n\n  public IconButtonRenderer(SelectionListener<ButtonEvent> listener, ImageResource image) {\n    this.listener = listener;\n    this.image = AbstractImagePrototype.create(image);\n  }\n\n  @Override\n  public Object render(final ModelData model, String property, ColumnData config, final int rowIndex, final int colIndex,\n      ListStore<ModelData> store, Grid<ModelData> grid) {\n    final Button b = new Button();\n    b.setIcon(image);\n    b.setItemId((String) model.get(property));\n    b.addSelectionListener(listener);\n    return b;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Renders interactive icon buttons in a grid or list view using GXT framework",
      "components": [
        {
          "name": "IconButtonRenderer",
          "type": "class",
          "description": "Grid cell renderer that creates clickable icon buttons"
        }
      ],
      "data_structures": [
        {
          "name": "ModelData",
          "fields": [
            "dynamic properties"
          ],
          "relationships": [
            "Used as data source for button rendering"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Button rendering and click handling logic",
          "location": "render() method"
        }
      ],
      "dependencies": [
        "com.extjs.gxt.ui.client.data.ModelData",
        "com.extjs.gxt.ui.client.event.ButtonEvent",
        "com.extjs.gxt.ui.client.event.SelectionListener",
        "com.extjs.gxt.ui.client.store.ListStore",
        "com.extjs.gxt.ui.client.widget.button.Button"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/ReportingWidget.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/ReportingWidget.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1408,
    "content": "package at.a1ta.webclient.cucosett.client.ui;\n\nimport java.util.HashMap;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.Image;\n\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\n\npublic class ReportingWidget extends HorizontalPanel {\n  // @formatter:off\n  private long id;\n  private DataTable<HashMap<String, Object>> dataTable;\n  private Image close;\n  // @formatter:on\n\n  public ReportingWidget(final DataTable<HashMap<String, Object>> table, long id) {\n    this.setDataTable(table);\n    this.id = id;\n\n    close = new Image(UI.IMAGES.iconDelete());\n    close.setStyleName(UI.STYLES.cursor_pointer());\n    close.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        removeFromParent();\n      }\n    });\n    add(table);\n    add(close);\n  }\n\n  public long getId() {\n    return id;\n  }\n\n  public void setId(long id) {\n    this.id = id;\n  }\n\n  public void setDataTable(DataTable<HashMap<String, Object>> dataTable) {\n    this.dataTable = dataTable;\n  }\n\n  public DataTable<HashMap<String, Object>> getDataTable() {\n    return dataTable;\n  }\n\n  public Image getClose() {\n    return close;\n  }\n\n  public void setClose(Image close) {\n    this.close = close;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "ai_analysis": {
      "purpose": "Implements a UI widget for displaying and managing reports",
      "components": [
        {
          "name": "ReportingWidget",
          "type": "class",
          "description": "Widget that provides reporting functionality with horizontal layout"
        }
      ],
      "data_structures": [
        {
          "name": "HashMap",
          "fields": [
            "key-value pairs for report data"
          ],
          "relationships": [
            "Stores report configuration or data"
          ]
        }
      ],
      "business_rules": [
        {
          "description": "Report display and interaction handling",
          "location": "ClickHandler implementation"
        }
      ],
      "dependencies": [
        "com.google.gwt.event.dom.client.ClickEvent",
        "com.google.gwt.event.dom.client.ClickHandler",
        "com.google.gwt.user.client.ui.HorizontalPanel",
        "com.google.gwt.user.client.ui.Image",
        "at.a1ta.bite.ui"
      ]
    },
    "analysis_status": "completed"
  },
  {
    "file_path": "cuco/pom.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/pom.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 28588,
    "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <parent>\n    <artifactId>cuco.pom</artifactId>\n    <groupId>at.a1ta.cuco</groupId>\n    <version>2025.03.01</version>\n  </parent>\n\n  <artifactId>cuco</artifactId>\n  <packaging>war</packaging>\n\n  <dependencies>\n    <dependency>\n      <groupId>at.a1ta.cuco</groupId>\n      <artifactId>cuco-ui-app</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.cuco</groupId>\n      <artifactId>cuco-ui-mycuco</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.cuco</groupId>\n      <artifactId>cuco-ui-admin</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.cuco</groupId>\n      <artifactId>cuco-ui-pkb</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>commons-collections</groupId>\n      <artifactId>commons-collections</artifactId>\n      <version>3.2.1</version>\n    </dependency>\n    <dependency>\n      <groupId>org.codehaus.janino</groupId>\n      <artifactId>janino</artifactId>\n      <version>2.7.5</version>\n    </dependency>\n\n    <dependency>\n      <groupId>com.google.gwt</groupId>\n      <artifactId>gwt-servlet</artifactId>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.google.gwt</groupId>\n      <artifactId>gwt-user</artifactId>\n      <scope>provided</scope>\n    </dependency>\n  </dependencies>\n\n  <properties>\n    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>\n    <application.version>${project.version}</application.version>\n    <buildNumber>DEV</buildNumber>\n  </properties>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>gwt-maven-plugin</artifactId>\n        <executions>\n          <execution>\n            <configuration>\n              <extraJvmArgs>-Xmx4096m -Xms1024M -Dgwt.usearchives=false -Djava.io.tmpdir=${project.build.directory}</extraJvmArgs>\n            </configuration>\n            <goals>\n              <goal>resources</goal>\n              <goal>compile</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>buildnumber-maven-plugin</artifactId>\n        <version>1.1</version>\n        <executions>\n          <execution>\n            <phase>validate</phase>\n            <goals>\n              <goal>create</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <revisionOnScmFailure>local-scm</revisionOnScmFailure>\n          <doCheck>false</doCheck>\n          <doUpdate>false</doUpdate>\n          <providerImplementations>\n            <svn>javasvn</svn>\n          </providerImplementations>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-release-plugin</artifactId>\n        <version>2.2.1</version>\n        <configuration>\n          <workingDirectory>./${project.artifactId}</workingDirectory>\n        </configuration>\n      </plugin>\n\n    </plugins>\n\n    <finalName>cuco</finalName>\n    <!-- Generate compiled stuff in the folder used for developing mode -->\n    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>\n    <pluginManagement>\n      <plugins>\n        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->\n        <plugin>\n          <groupId>org.eclipse.m2e</groupId>\n          <artifactId>lifecycle-mapping</artifactId>\n          <version>1.0.0</version>\n          <configuration>\n            <lifecycleMappingMetadata>\n              <pluginExecutions>\n                <pluginExecution>\n                  <pluginExecutionFilter>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>gwt-maven-plugin</artifactId>\n                    <versionRange>[2.5.1,)</versionRange>\n                    <goals>\n                      <goal>resources</goal>\n                    </goals>\n                  </pluginExecutionFilter>\n                  <action>\n                    <ignore></ignore>\n                  </action>\n                </pluginExecution>\n              </pluginExecutions>\n            </lifecycleMappingMetadata>\n          </configuration>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n\n  <profiles>\n    <profile>\n      <id>untrusted</id>\n      <activation>\n        <property>\n          <name>spring.profile</name>\n          <value>UNTRUSTED</value>\n        </property>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <artifactId>maven-war-plugin</artifactId>\n            <configuration>\n              <packagingExcludes>\n                admin.html,\n                pkb.html\n              </packagingExcludes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>jenkins</id>\n      <activation>\n        <property>\n          <name>BUILD_NUMBER</name>\n        </property>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-antrun-plugin</artifactId>\n            <version>1.7</version>\n            <executions>\n              <execution>\n                <phase>generate-resources</phase>\n                <configuration>\n                  <target>\n                    <copy file=\"src/main/filters/gwt/AdminStarter.gwt.xml\" tofile=\"src/main/resources/at/a1ta/cuco/admin/starter/AdminStarter.gwt.xml\" />\n                    <copy file=\"src/main/filters/gwt/AppStarter.gwt.xml\" tofile=\"src/main/resources/at/a1ta/cuco/app/starter/AppStarter.gwt.xml\" />\n                    <copy file=\"src/main/filters/gwt/MyCuCoStarter.gwt.xml\" tofile=\"src/main/resources/at/a1ta/cuco/mycuco/starter/MyCuCoStarter.gwt.xml\" />\n                    <copy file=\"src/main/filters/gwt/PkbStarter.gwt.xml\" tofile=\"src/main/resources/at/a1ta/pkb/starter/PkbStarter.gwt.xml\" />\n                  </target>\n                </configuration>\n                <goals>\n                  <goal>run</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    \n    <profile>\n      <id>deployDev</id>\n      <activation>\n        <property>\n          <name>env</name>\n          <value>dev</value>\n        </property>\n      </activation>\n      <build>\n        <filters>\n          <filter>src/main/filters/configuration.dev11.properties</filter>\n        </filters>\n        <plugins>\n          <!-- plugin>\n            <groupId>org.codehaus.mojo</groupId>\n            <artifactId>wagon-maven-plugin</artifactId>\n            <version>2.0.0</version>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>sshexec</goal>\n                </goals>\n                <configuration>\n                  <runIf>{{ true }}</runIf>\n                  <location>scp://tomcat:bqNkUS3$@vlcucod001.at.inside:/srv/tomcat7_jvm1/bin</location>\n                  <echoCommands>true</echoCommands>\n                  <commands>\n                    <command>./shutdown-jvm1.sh</command>\n                    <command>sleep 60</command>\n                    <command>cd ../webapps</command>\n                    <command>rm -rf ROOT</command>\n                    <command>rm ../webapps-old/ROOT.war.old</command>\n                    <command>mv ROOT.war ../webapps-old/ROOT.war.old</command>\n                    <command>cd ../bin</command>\n                    <command>./startup-jvm1.sh</command>\n                    <command>sleep 90</command>\n                  </commands>\n                  <failOnError>false</failOnError>\n                </configuration>\n              </execution>\n            </executions> \n          </plugin-->\n          <plugin>\n            <groupId>org.apache.tomcat.maven</groupId>\n            <artifactId>tomcat7-maven-plugin</artifactId>\n            <version>2.2</version>\n            <configuration>\n              <url>http://vlcucod001.at.inside:7180/manager/text</url>\n              <server>tomcat-dev</server>\n              <path>/</path>\n              <username>admin2</username>\n              <password>ultrix</password>\n            </configuration>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>deploy</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.2.1</version>\n            <configuration>\n              <workingDirectory>./${project.artifactId}</workingDirectory>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-war-plugin</artifactId>\n            <version>2.1.1</version>\n            <configuration>\n              <webXml>src/main/filters/web-internal.xml</webXml>\n              <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>\n              <webResources>\n                <resource>\n                  <directory>src/main/filters</directory>\n                  <targetPath>WEB-INF/classes</targetPath>\n                  <filtering>true</filtering>\n                  <includes>\n                    <include>configuration.properties</include>\n                    <include>logback.xml</include>\n                    <include>versions.properties</include>\n                    <include>ehcache.xml</include>\n                  </includes>\n                </resource>\n              </webResources>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n\t<profile>\n\t<id>deployT360</id>\n      <activation>\n        <property>\n          <name>env</name>\n          <value>t360</value>\n        </property>\n      </activation>\n      <build>\n        <filters>\n          <filter>src/main/filters/configuration.t360.properties</filter>\n        </filters>\n        <plugins>\n          <plugin>\n            <groupId>com.github.goldin</groupId>\n            <artifactId>sshexec-maven-plugin</artifactId>\n            <version>0.2.5</version>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>sshexec</goal>\n                </goals>\n                <configuration>\n                  <runIf>{{ true }}</runIf>\n                  <location>scp://username:password@10.8.22.66:/srv/cuco/var/tomcat7_jvm1/bin</location>\n                  <echoCommands>true</echoCommands>\n                  <commands>\n                    <command>./shutdown-jvm1.sh</command>\n                    <command>sleep 60</command>\n                    <command>rm -r /srv/tomcat7/var/tomcat7_jvm1/CustomerInventoryReqResZip/*</command>\n                    <command>cd ../webapps</command>\n                    <command>rm -rf cuco</command>\n                    <command>rm ../webapps-old/cuco.war.old</command>\n                    <command>mv cuco.war ../webapps-old/cuco.war.old</command>\n                    <command>cd ../bin</command>\n                    <command>./startup-jvm1.sh</command>\n                    <command>sleep 90</command>\n                  </commands>\n                  <failOnError>false</failOnError>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.tomcat.maven</groupId>\n            <artifactId>tomcat7-maven-plugin</artifactId>\n            <version>2.2</version>\n            <configuration>\n              <url>http://10.8.22.66:8102/manager/html</url>\n              <server>tomcat-t360</server>\n              <path>/${project.build.finalName}</path>\n            </configuration>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>deploy</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.2.1</version>\n            <configuration>\n              <workingDirectory>./${project.artifactId}</workingDirectory>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-war-plugin</artifactId>\n            <version>2.1.1</version>\n            <configuration>\n              <webXml>src/main/filters/web-ntlm.xml</webXml>\n              <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>\n              <webResources>\n                <resource>\n                  <directory>src/main/filters</directory>\n                  <targetPath>WEB-INF/classes</targetPath>\n                  <filtering>true</filtering>\n                  <includes>\n                    <include>configuration.properties</include>\n                    <include>logback.xml</include>\n                    <include>versions.properties</include>\n                    <include>ehcache.xml</include>\n                  </includes>\n                </resource>\n              </webResources>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>deployInt</id>\n      <activation>\n        <property>\n          <name>env</name>\n          <value>int</value>\n        </property>\n      </activation>\n      <build>\n        <filters>\n          <filter>src/main/filters/configuration.int11.properties</filter>\n        </filters>\n        <plugins>\n          <plugin>\n            <groupId>com.github.goldin</groupId>\n            <artifactId>sshexec-maven-plugin</artifactId>\n            <version>0.2.5</version>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>sshexec</goal>\n                </goals>\n                <configuration>\n                  <runIf>{{ true }}</runIf>\n                  <location>scp://tomcat:B,HK3AQQl$Z3@vlcucoi001.at.inside:/srv/tomcat7_jvm1/bin</location>\n                  <echoCommands>true</echoCommands>\n                  <commands>\n                    <command>./shutdown-jvm1.sh</command>\n                    <command>sleep 60</command>\n                    <command>rm -r /srv/tomcat7_jvm1/CustomerInventoryReqResZip/*</command>\n                    <command>cd ../webapps</command>\n                    <command>rm -rf ROOT</command>\n                    <command>rm ../webapps-old/ROOT.war.old</command>\n                    <command>mv ROOT.war ../webapps-old/ROOT.war.old</command>\n                    <command>cd ../bin</command>\n                    <command>./startup-jvm1.sh</command>\n                    <command>sleep 90</command>\n                  </commands>\n                  <failOnError>false</failOnError>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.tomcat.maven</groupId>\n            <artifactId>tomcat7-maven-plugin</artifactId>\n            <version>2.2</version>\n            <configuration>\n              <url>http://vlcucoi001.at.inside:7180/manager/html</url>\n              <server>tomcat-int</server>\n              <path>/</path>\n              <username>admin2</username>\n              <password>ultrix</password>\n            </configuration>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>redeploy</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.2.1</version>\n            <configuration>\n              <workingDirectory>./${project.artifactId}</workingDirectory>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-war-plugin</artifactId>\n            <version>2.1.1</version>\n            <configuration>\n              <webXml>src/main/filters/web-internal.xml</webXml>\n              <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>\n              <webResources>\n                <resource>\n                  <directory>src/main/filters</directory>\n                  <targetPath>WEB-INF/classes</targetPath>\n                  <filtering>true</filtering>\n                  <includes>\n                    <include>configuration.properties</include>\n                    <include>logback.xml</include>\n                    <include>versions.properties</include>\n                    <include>ehcache.xml</include>\n                  </includes>\n                </resource>\n              </webResources>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>deployInt-ext</id>\n      <activation>\n        <property>\n          <name>env</name>\n          <value>int-ext</value>\n        </property>\n      </activation>\n      <build>\n        <filters>\n          <filter>src/main/filters/configuration.int11-ext.properties</filter>\n        </filters>\n        <plugins>\n          <plugin>\n            <groupId>com.github.goldin</groupId>\n            <artifactId>sshexec-maven-plugin</artifactId>\n            <version>0.2.5</version>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>sshexec</goal>\n                </goals>\n                <configuration>\n                  <runIf>{{ true }}</runIf>\n                  <location>scp://tomcat:B,HK3AQQl$Z3@vlcucoi003.at.inside:/srv/tomcat7_jvm1/bin</location>\n                  <echoCommands>true</echoCommands>\n                  <commands>\n                    <command>./shutdown-jvm1.sh</command>\n                    <command>sleep 90</command>\n                    <command>rm -r /srv/tomcat7_jvm1/CustomerInventoryReqResZip/*</command>\n                    <command>cd ../webapps</command>\n                    <command>rm -rf ROOT</command>\n                    <command>rm ROOT.war</command>\n                    <command>cd ../bin</command>\n                    <command>./startup-jvm1.sh</command>\n                    <command>sleep 120</command>\n                  </commands>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.tomcat.maven</groupId>\n            <artifactId>tomcat7-maven-plugin</artifactId>\n            <version>2.2</version>\n            <configuration>\n              <url>http://vlcucoi003.at.inside:7280/manager/html</url>\n              <server>tomcat-int-ext</server>\n              <path>/</path>\n              <username>admin2</username>\n              <password>ultrix</password>\n            </configuration>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>redeploy</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.2.1</version>\n            <configuration>\n              <workingDirectory>./${project.artifactId}</workingDirectory>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-war-plugin</artifactId>\n            <version>2.1.1</version>\n            <configuration>\n              <webXml>src/main/filters/web-external.xml</webXml>\n              <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>\n              <webResources>\n                <resource>\n                  <directory>src/main/filters</directory>\n                  <targetPath>WEB-INF/classes</targetPath>\n                  <filtering>true</filtering>\n                  <includes>\n                    <include>configuration.properties</include>\n                    <include>logback.xml</include>\n                    <include>versions.properties</include>\n                    <include>ehcache.xml</include>\n                  </includes>\n                </resource>\n              </webResources>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>deployE2E</id>\n      <activation>\n        <property>\n          <name>env</name>\n          <value>e2e</value>\n        </property>\n      </activation>\n      <build>\n        <filters>\n          <filter>src/main/filters/configuration.e2e11.properties</filter>\n        </filters>\n        <plugins>\n          <plugin>\n            <groupId>com.github.goldin</groupId>\n            <artifactId>sshexec-maven-plugin</artifactId>\n            <version>0.2.5</version>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>sshexec</goal>\n                </goals>\n                <configuration>\n                  <runIf>{{ true }}</runIf>\n                  <location>scp://tomcat:PhnmAt2i_EpKy#@vlcucok001.at.inside:/srv/tomcat7_jvm1/bin</location>\n                  <echoCommands>true</echoCommands>\n                  <commands>\n                    <command>./shutdown-jvm1.sh</command>\n                    <command>sleep 60</command>\n                    <command>rm -r /srv/tomcat7_jvm1/CustomerInventoryReqResZip/*</command>\n                    <command>cd ../webapps</command>\n                    <command>rm -rf ROOT</command>\n                    <command>rm ../webapps-old/ROOT.war.old</command>\n                    <command>mv ROOT.war ../webapps-old/ROOT.war.old</command>\n                    <command>cd ../bin</command>\n                    <command>./startup-jvm1.sh</command>\n                    <command>sleep 90</command>\n                  </commands>\n                  <failOnError>false</failOnError>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.tomcat.maven</groupId>\n            <artifactId>tomcat7-maven-plugin</artifactId>\n            <version>2.2</version>\n            <configuration>\n              <url>http://vlcucok001.at.inside:7180/manager/text</url>\n              <server>tomcat-e2e</server>\n              <username>admin2</username>\n              <password>ultrix</password>\n              <path>/</path>\n            </configuration>\n            <executions>\n              <execution>\n                <phase>install</phase>\n                <goals>\n                  <goal>deploy</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.2.1</version>\n            <configuration>\n              <workingDirectory>./${project.artifactId}</workingDirectory>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-war-plugin</artifactId>\n            <version>2.1.1</version>\n            <configuration>\n              <webXml>src/main/filters/web-internal.xml</webXml>\n              <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>\n              <webResources>\n                <resource>\n                  <directory>src/main/filters</directory>\n                  <targetPath>WEB-INF/classes</targetPath>\n                  <filtering>true</filtering>\n                  <includes>\n                    <include>configuration.properties</include>\n                    <include>logback.xml</include>\n                    <include>versions.properties</include>\n                    <include>ehcache.xml</include>\n                  </includes>\n                </resource>\n              </webResources>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    \n    <profile>\n      <id>buildProd</id>\n      <activation>\n        <property>\n          <name>env</name>\n          <value>prod-intern</value>\n        </property>\n      </activation>\n      <build>\n        <filters>\n          <filter>src/main/filters/configuration.prod11.properties</filter>\n        </filters>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.2.1</version>\n            <configuration>\n              <workingDirectory>./${project.artifactId}</workingDirectory>\n              <goals>package</goals>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-war-plugin</artifactId>\n            <version>2.1.1</version>\n            <configuration>\n              <warName>${project.build.finalName}-${env}-${project.version}</warName>\n              <webXml>src/main/filters/web-internal.xml</webXml>\n              <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>\n              <webResources>\n                <resource>\n                  <directory>src/main/filters</directory>\n                  <targetPath>WEB-INF/classes</targetPath>\n                  <filtering>true</filtering>\n                  <includes>\n                    <include>configuration.properties</include>\n                    <include>logback.xml</include>\n                    <include>versions.properties</include>\n                    <include>ehcache.xml</include>\n                  </includes>\n                </resource>\n              </webResources>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>buildProd-ext</id>\n      <activation>\n        <property>\n          <name>env</name>\n          <value>prod-extern</value>\n        </property>\n      </activation>\n      <build>\n        <filters>\n          <filter>src/main/filters/configuration.prod11.properties</filter>\n          <filter>src/main/filters/configuration.prod11-ext.properties</filter>\n        </filters>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.2.1</version>\n            <configuration>\n              <workingDirectory>./${project.artifactId}</workingDirectory>\n              <goals>package</goals>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-war-plugin</artifactId>\n            <version>2.1.1</version>\n            <configuration>\n              <warName>${project.build.finalName}-${env}-${project.version}</warName>\n              <webXml>src/main/filters/web-external.xml</webXml>\n              <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>\n              <webResources>\n                <resource>\n                  <directory>src/main/filters</directory>\n                  <targetPath>WEB-INF/classes</targetPath>\n                  <filtering>true</filtering>\n                  <includes>\n                    <include>configuration.properties</include>\n                    <include>logback.xml</include>\n                    <include>versions.properties</include>\n                    <include>ehcache.xml</include>\n                  </includes>\n                </resource>\n              </webResources>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>    \n  </profiles>\n</project>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/logback.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/logback.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 10504,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration>\n<configuration debug=\"true\" scan=\"true\">\n  <jmxConfigurator />\n\n       <turboFilter \n           class=\"ch.qos.logback.classic.turbo.DuplicateMessageFilter\">\n         <AllowedRepetitions>5</AllowedRepetitions>\n      </turboFilter>\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logback.file.path}</file>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.file.path}%d{yyyy-MM-dd}</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n    <filter class=\"ch.qos.logback.core.filter.EvaluatorFilter\">\n      <evaluator>        \n        <expression>return throwable instanceof net.sf.ehcache.distribution.jms.InvalidJMSMessageException;</expression>\n      </evaluator>\n      <OnMismatch>NEUTRAL</OnMismatch>\n      <OnMatch>DENY</OnMatch>\n    </filter>\n    <filter class=\"ch.qos.logback.core.filter.EvaluatorFilter\">\n      <evaluator>\n        <expression>return message.contains(\"ORA-00936: missing expression\");</expression>\n      </evaluator>\n      <OnMismatch>NEUTRAL</OnMismatch>\n      <OnMatch>DENY</OnMatch>\n    </filter>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"GWT-LOGFILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logback.gwtlog.path}</file>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.gwtlog.path}%d{yyyy-MM-dd}</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"SQL\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <File>${logback.sql.path}</File>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.sql.path}%d{yyyy-MM-dd}</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"MAILINGS\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <File>${logback.mailings.path}</File>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.mailings.path}%d{yyyy-MM-dd}</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n  \n  <appender name=\"GAMIFICATION\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <File>${logback.gamification.path}</File>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.gamification.path}%d{yyyy-MM-dd}</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n  \n  <appender name=\"INVOICEDOWNLOADS\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <File>${logback.invoiceaudit.path}</File>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.invoiceaudit.path}%d{yyyy-MM-dd}</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"INVOICEPERFORMANCE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <File>${logback.invoiceperformance.path}</File>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.invoiceperformance.path}%d{yyyy-MM-dd}</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"TRACKING\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <File>${logback.tracking.path}</File>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.tracking.path}%d{yyyy-MM-dd}</fileNamePattern>\n    </rollingPolicy>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.commons.logging.BiteLogEventLayout\" />\n    </encoder>\n  </appender>\n\n  <appender name=\"APPLICATION\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>${logback.application.path}</File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.commons.logging.BiteLogEventLayout\" />\n    </encoder>\n  </appender>\n\n  <appender name=\"REPORTING\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.reporting.path}.%d{yyyy-MM-dd}.log</fileNamePattern>\n    </rollingPolicy>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.commons.logging.BiteLogEventLayout\" />\n    </encoder>\n  </appender>\n\n  <appender name=\"AUDITLOG\" class=\"at.a1ta.bite.audit.core.RollingFileAuditAppender\">\n    <!-- encoder is optional if not specified default layout will be used -->\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.audit.core.AuditEventLayout\" />\n    </encoder>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <!-- daily rollover for local testing -->\n      <fileNamePattern>${logback.audit.path}.%d{yyyy-MM-dd}.log</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n  </appender>\n\n  <appender name=\"esb\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <File>${logback.esb.path}/esb.log</File>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.esb.path}/esb.%d{yyyy-MM-dd}.log</fileNamePattern>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"CUSCO-DUPOS\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>${logback.cusco-dupos.path}</File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %date{ISO8601} [%thread] %-5level %X{user} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"KUMS-SKZ\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>${logback.kumsSkz.path}</File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %date{ISO8601} [%thread] %-5level %X{user} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"LDAPSYNC\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logback.ldapsync.path}</file>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.ldapsync.path}%d{yyyy-MM-dd}</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <appender name=\"PWUAUTH\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n    <file>${logback.pwuauth.path}</file>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <fileNamePattern>${logback.pwuauth.path}%d{yyyy-MM-dd}</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n    <encoder>\n      <pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{ip} - %msg%n</pattern>\n    </encoder>\n  </appender>\n\n  <logger name=\"at.a1ta.bite.core.server.service.DefaultCorporateDirectorySynchronizationService\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"LDAPSYNC\" />\n  </logger>\n\n  <logger name=\"at.a1ta.cuco.core.service.impl.CustomerUnlockServiceImpl\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"CUSCO-DUPOS\" />\n  </logger>\n\n  <logger name=\"esb\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"esb\" />\n  </logger>\n\n  <logger name=\"bite-tracking\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"TRACKING\" />\n  </logger>\n  <logger name=\"bite-application\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"APPLICATION\" />\n  </logger>\n  <logger name=\"bite-reporting\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"REPORTING\" />\n  </logger>\n\n  <logger name=\"mailings\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"MAILINGS\" />\n  </logger>\n\n  <logger name=\"GAMIFICATION\" level=\"INFO\" additivity=\"false\">\n    <appender-ref ref=\"GAMIFICATION\" />\n  </logger>\n  <logger name=\"invoicedownloads\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"INVOICEDOWNLOADS\" />\n  </logger>\n\n  <logger name=\"invoiceperformance\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"INVOICEPERFORMANCE\" />\n  </logger>\n\n  <logger name=\"jdbc.sqltiming\" level=\"WARN\" additivity=\"false\">\n    <appender-ref ref=\"SQL\" />\n  </logger>\n  <logger name=\"jdbc\" level=\"ERROR\" additivity=\"false\" >\n    <appender-ref ref=\"SQL\" />\n  </logger>\n  <logger name=\"gwt-log\" level=\"ERROR\" additivity=\"false\">\n    <appender-ref ref=\"GWT-LOGFILE\" />\n  </logger>\n\n  <logger name=\"pwuauth\" level=\"debug\" additivity=\"false\">\n    <appender-ref ref=\"PWUAUTH\" />\n  </logger>\n\n  <logger name=\"at.a1ta.pkb.service.customerinteraction.CustomerInteractionSender\" level=\"ERROR\" />\n\n  <logger name=\"AUDIT\" level=\"INFO\" additivity=\"false\">\n    <appender-ref ref=\"AUDITLOG\" />\n  </logger>\n\n  <logger name=\"at.a1ta.bite.core.server.service.DefaultKumsCommonService\" level=\"TRACE\" additivity=\"false\">\n    <appender-ref ref=\"KUMS-SKZ\" />\n  </logger>\n\n  <logger name=\"at.a1ta.bite.core.server.dao.DefaultKumsSkzShopDao\" level=\"TRACE\" additivity=\"false\">\n    <appender-ref ref=\"KUMS-SKZ\" />\n  </logger>\n\n  <root>\n    <level value=\"INFO\" />\n    <appender-ref ref=\"FILE\" />\n  </root>\n</configuration>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/web-ntlm.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/web-ntlm.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 3247,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\n  <context-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>classpath:applicationContext-app.xml classpath:applicationContext-admin.xml classpath:applicationContext-mycuco.xml</param-value>\n  </context-param>\n  <context-param>\n    <param-name>spring.profiles.active</param-name>\n    <param-value>TRUSTED,DEV,JMSBROKER</param-value>\n  </context-param>\n\n  <filter>\n    <filter-name>NTLM HTTP Authentication Filter</filter-name>\n    <filter-class>jcifs.http.NtlmHttpFilter</filter-class>\n    <init-param>\n      <param-name>jcifs.smb.client.domain</param-name>\n      <param-value>AUSTRIA</param-value>\n    </init-param>\n    <init-param>\n      <param-name>jcifs.http.domainController</param-name>\n      <param-value>jtsdw007.austria.local</param-value>\n      <!-- param-value>jtsdw007</param-value-->\n    </init-param>\n    <init-param>\n      <param-name>jcifs.netbios.wins</param-name>\n      <param-value>10.1.20.1</param-value>\n    </init-param>\n  </filter>\n  <filter>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.BiteAuthenticationFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>TraceFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.TraceFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>UserToMdcFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.UserToMdcFilter</filter-class>\n  </filter>\n\n  <filter-mapping>\n    <filter-name>NTLM HTTP Authentication Filter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>NTLM HTTP Authentication Filter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>NTLM HTTP Authentication Filter</filter-name>\n    <url-pattern>*.png</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>TraceFilter</filter-name>\n    <url-pattern>*.png</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>UserToMdcFilter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>UserToMdcFilter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n\n  <listener>\n    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n  </listener>\n  <listener>\n    <listener-class>at.a1ta.bite.ui.server.listener.ApplicationServletContextListener</listener-class>\n  </listener>\n  <listener>\n    <listener-class>net.sf.ehcache.constructs.web.ShutdownListener</listener-class>\n  </listener>\n\n  <!-- Default page to serve -->\n  <welcome-file-list>\n    <welcome-file>index.html</welcome-file>\n  </welcome-file-list>\n\n</web-app>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/web-external.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/web-external.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2430,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\n  <context-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>classpath:applicationContext-app.xml classpath:applicationContext-admin.xml classpath:applicationContext-mycuco.xml</param-value>\n  </context-param>\n  <context-param>\n    <param-name>spring.profiles.active</param-name>\n    <param-value>${spring.profile}</param-value>\n  </context-param>\n\n  <filter>\n    <filter-name>PartnerCenterAuthenticationFilter</filter-name>\n    <filter-class>at.a1ta.cuco.ui.app.server.servlet.filter.pcauthentication.PartnerCenterAuthenticationFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>TraceFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.TraceFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>UserToMdcFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.UserToMdcFilter</filter-class>\n  </filter>\n\n  <filter-mapping>\n    <filter-name>PartnerCenterAuthenticationFilter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>PartnerCenterAuthenticationFilter</filter-name>\n    <url-pattern>*.html</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>PartnerCenterAuthenticationFilter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>TraceFilter</filter-name>\n    <url-pattern>*.png</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>UserToMdcFilter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>UserToMdcFilter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n\n  <listener>\n    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n  </listener>\n  <listener>\n    <listener-class>at.a1ta.bite.ui.server.listener.ApplicationServletContextListener</listener-class>\n  </listener>\n  <listener>\n    <listener-class>net.sf.ehcache.constructs.web.ShutdownListener</listener-class>\n  </listener>\n\n  <!-- Default page to serve -->\n  <welcome-file-list>\n    <welcome-file>index.html</welcome-file>\n  </welcome-file-list>\n\n</web-app>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/ehcache.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/ehcache.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4821,
    "content": "<ehcache xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://www.ehcache.org/ehcache.xsd\">\n\n  <cacheManagerPeerProviderFactory\n       class=\"net.sf.ehcache.distribution.jms.JMSCacheManagerPeerProviderFactory\"\n       properties=\"initialContextFactoryName=at.a1ta.bite.core.server.util.EhCacheReplicationActiveMQInitialContextFactory,\n           providerURL=tcp://${jmsBrokerAddress}:${jmsBrokerPort},\n           replicationTopicConnectionFactoryBindingName=topicConnectionFactory,\n           getQueueConnectionFactoryBindingName=queueConnectionFactory,\n           getQueueBindingName=ehcacheGetQueue,\n           replicationTopicBindingName=ehcache\"\n       propertySeparator=\",\"\n       />\n  \n    <defaultCache\n    maxElementsInMemory=\"10000\"\n    eternal=\"false\"\n    overflowToDisk=\"false\"\n    memoryStoreEvictionPolicy=\"LRU\"\n    statistics=\"true\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </defaultCache>\n    \n  <cache name=\"ldapCache\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"orgUnitCache\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"at.a1ta.cusi.bom.addresstypes.Country\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"0\" eternal=\"true\"/>\n  <cache name=\"customerEquipmentCache\" maxElementsInMemory=\"1000\" overflowToDisk=\"false\" timeToLiveSeconds=\"3600\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"phoneNumberCache\" maxElementsInMemory=\"200\" overflowToDisk=\"false\" timeToLiveSeconds=\"36000\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"VIPCache\" maxElementsInMemory=\"2000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\"/>\n  <cache name=\"mobilPoints\" maxElementsInMemory=\"2000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"UDPCache\" maxElementsInMemory=\"100\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n</ehcache>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/web-internal.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/web-internal.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2225,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\n  <context-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>classpath:applicationContext-app.xml classpath:applicationContext-admin.xml classpath:applicationContext-mycuco.xml</param-value>\n  </context-param>\n  <context-param>\n    <param-name>spring.profiles.active</param-name>\n    <param-value>${spring.profile}</param-value>\n  </context-param>\n\n  <filter>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.BiteAuthenticationFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>TraceFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.TraceFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>UserToMdcFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.UserToMdcFilter</filter-class>\n  </filter>\n  \n  <filter-mapping>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>TraceFilter</filter-name>\n    <url-pattern>*.png</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>UserToMdcFilter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>UserToMdcFilter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n\n  <listener>\n    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n  </listener>\n  <listener>\n    <listener-class>at.a1ta.bite.ui.server.listener.ApplicationServletContextListener</listener-class>\n  </listener>\n  <listener>\n    <listener-class>net.sf.ehcache.constructs.web.ShutdownListener</listener-class>\n  </listener>\n\n  <!-- Default page to serve -->\n  <welcome-file-list>\n    <welcome-file>index.html</welcome-file>\n  </welcome-file-list>\n\n</web-app>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/gwt/PkbStarter.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/gwt/PkbStarter.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1093,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module rename-to=\"pkb\">\n  <inherits name=\"com.google.gwt.logging.Logging\"/>\n  <inherits name=\"at.a1ta.bite.ui.BiteUi\" />\n  <inherits name=\"at.a1ta.cuco.ui.visitreports.VisitReports\"/>\n  <inherits name=\"at.a1ta.cuco.ui.pkb.PKBStandalone\" />\n\n  <source path=\"client\" />\n  <entry-point class=\"at.a1ta.pkb.starter.client.PkbStarter\" />\n\n  <!-- This file is taken from src/main/filters/gwt, NOT from src/main/resources -->\n  <set-property name=\"gwt.logging.enabled\" value=\"TRUE\"/>\n  <set-property name=\"gwt.logging.logLevel\" value=\"SEVERE\"/>\n  <set-property name=\"gwt.logging.simpleRemoteHandler\" value=\"ENABLED\" />\n  <set-property name=\"gwt.logging.popupHandler\" value=\"DISABLED\" />\n\n  <extend-property name=\"locale\" values=\"de_DE\" />\n\n  <generate-with class=\"at.a1ta.bite.ui.generator.ClassResolverGenerator\">\n    <when-type-assignable class=\"at.a1ta.bite.ui.client.factory.IsClassResolver\" />\n  </generate-with>\n\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/gwt/AppStarter.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/gwt/AppStarter.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1057,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module rename-to=\"app\">\n  <inherits name=\"com.google.gwt.logging.Logging\"/>\n  <inherits name=\"at.a1ta.cuco.ui.common.CuCoCommon\" />\n  <inherits name=\"at.a1ta.cuco.ui.app.App\" />\n\n  <source path=\"client\" />\n\n  <entry-point class=\"at.a1ta.cuco.app.starter.client.AppStarter\" />\n <!--  <set-configuration-property name=\"devModeRedirectEnabled\" value=\"true\" />\n  <add-linker name=\"xsiframe\" />\n  <set-configuration-property name='xsiframe.failIfScriptTag' value='FALSE'/> -->\n\n  <!-- This file is taken from src/main/filters/gwt, NOT from src/main/resources -->\n \n  <set-property name=\"gwt.logging.enabled\" value=\"TRUE\"/>\n  <set-property name=\"gwt.logging.logLevel\" value=\"SEVERE\"/>\n  <set-property name=\"gwt.logging.simpleRemoteHandler\" value=\"ENABLED\" />\n  <set-property name=\"gwt.logging.popupHandler\" value=\"DISABLED\" />\n  \n  <extend-property name=\"locale\" values=\"de_DE\" />\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/gwt/MyCuCoStarter.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/gwt/MyCuCoStarter.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 817,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module rename-to=\"mycuco\">\n  <inherits name=\"com.google.gwt.logging.Logging\"/>\n  <inherits name=\"at.a1ta.cuco.mycuco.MyCuCo\" />\n  <source path=\"client\"/>\n  \n  <entry-point class=\"at.a1ta.cuco.mycuco.starter.client.MyCuCoStarter\" />\n  \n  <!-- This file is taken from src/main/filters/gwt, NOT from src/main/resources -->\n  <set-property name=\"gwt.logging.enabled\" value=\"TRUE\"/>\n  <set-property name=\"gwt.logging.logLevel\" value=\"SEVERE\"/>\n  <set-property name=\"gwt.logging.simpleRemoteHandler\" value=\"ENABLED\" />\n  <set-property name=\"gwt.logging.popupHandler\" value=\"DISABLED\" />\n  \n  <extend-property name=\"locale\" values=\"de_DE\" />\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/filters/gwt/AdminStarter.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/filters/gwt/AdminStarter.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 871,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module rename-to=\"admin\">\n  <inherits name=\"com.google.gwt.logging.Logging\"/>\n  <inherits name=\"at.a1ta.cuco.ui.common.CuCoCommon\" />\n  <inherits name=\"at.a1ta.cuco.ui.admin.Admin\" />\n  <source path=\"client\"/>\n  \n  <entry-point class=\"at.a1ta.cuco.admin.starter.client.AdminStarter\" />\n  \n  <!-- This file is taken from src/main/filters/gwt, NOT from src/main/resources -->\n  <set-property name=\"gwt.logging.enabled\" value=\"TRUE\"/>\n  <set-property name=\"gwt.logging.logLevel\" value=\"SEVERE\"/>\n  <set-property name=\"gwt.logging.simpleRemoteHandler\" value=\"ENABLED\" />\n  <set-property name=\"gwt.logging.popupHandler\" value=\"DISABLED\" />\n  \n  <extend-property name=\"locale\" values=\"de_DE\" />\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/logback.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/logback.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 9087,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration>\n<configuration debug=\"true\" scan=\"true\">\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/cuco.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"GWT-LOGFILE\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/client.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"SQL\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/sql.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"MAILINGS\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/mailings.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %date{ISO8601} %X{user} %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"INVOICEDOWNLOADS\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/invoiceaudit.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %date{ISO8601} [%thread] %-5level %X{user} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n  \n   <appender name=\"INVOICEPERFORMANCE\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/invoiceperformance.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %date{ISO8601} [%thread] %-5level %X{user} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"TRACKING\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/tracking.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.commons.logging.BiteLogEventLayout\" />\n    </encoder>\n  </appender>\n\n  <appender name=\"APPLICATION\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/application.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.commons.logging.BiteLogEventLayout\" />\n    </encoder>\n  </appender>\n\n  <appender name=\"REPORTING\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/reporting.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.commons.logging.BiteLogEventLayout\" />\n    </encoder>\n  </appender>\n\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <layout class=\"ch.qos.logback.classic.PatternLayout\">\n      <pattern>\n        %date{ISO8601} [%thread] %-5level %X{user} %class - %msg%n\n      </pattern>\n    </layout>\n  </appender>\n\n  <appender name=\"AUDITLOG\" class=\"at.a1ta.bite.audit.core.RollingFileAuditAppender\">\n    <!-- encoder is optional if not specified default layout will be used -->\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.audit.core.AuditEventLayout\" />\n    </encoder>\n\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <!-- daily rollover for local testing -->\n      <fileNamePattern>\n        d:/logs/cuco/audit.%d{yyyy-MM-dd}.log\n      </fileNamePattern>\n      <maxHistory>\n        30\n      </maxHistory>\n    </rollingPolicy>\n  </appender>\n\n  <appender name=\"esb\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>d:/logs/cuco/esb/esb.log</File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n <appender name=\"GAMIFICATION\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>d:/logs/cuco/esb/gamification.log</File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>%-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n</Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"CUSCO-DUPOS\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/cusco-dupos.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %date{ISO8601} [%thread] %-5level %X{user} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n  \n    <appender name=\"KUMS-SKZ\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>\n      d:/logs/cuco/kumsSkzShops.log\n    </File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %date{ISO8601} [%thread] %-5level %X{user} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <appender name=\"DefaultCorporateDirectorySynchronizationService\" class=\"ch.qos.logback.core.FileAppender\">\n    <File>d:/logs/cuco/corporate-directory-synchronization.log</File>\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"ch.qos.logback.classic.PatternLayout\">\n        <Pattern>\n          %-30(%date{ISO8601} [%thread]) %-5level %X{user} %logger{35} - %msg%n\n        </Pattern>\n      </layout>\n    </encoder>\n  </appender>\n\n  <logger name=\"at.a1ta.bite.core.server.service.DefaultCorporateDirectorySynchronizationService\" level=\"DEBUG\">\n    <appender-ref ref=\"DefaultCorporateDirectorySynchronizationService\" />\n  </logger>\n\n  <logger name=\"at.a1ta.cuco.core.service.impl.CustomerUnlockServiceImpl\" level=\"DEBUG\">\n    <appender-ref ref=\"CUSCO-DUPOS\" />\n  </logger>\n\n  <logger name=\"esb\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"esb\" />\n  </logger>\n\n  <logger name=\"bite-tracking\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"TRACKING\" />\n  </logger>\n  <logger name=\"bite-application\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"APPLICATION\" />\n  </logger>\n  <logger name=\"bite-reporting\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"REPORTING\" />\n  </logger>\n\n\n  <logger name=\"mailings\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"MAILINGS\" />\n  </logger>\n  \n  <logger name=\"GAMIFICATION\" level=\"INFO\" additivity=\"false\">\n    <appender-ref ref=\"GAMIFICATION\" />\n  </logger>\n\n  <logger name=\"invoicedownloads\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"INVOICEDOWNLOADS\" />\n  </logger>\n  \n  <logger name=\"invoiceperformance\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"INVOICEPERFORMANCE\" />\n  </logger>\n\n  <logger name=\"jdbc.sqltiming\" level=\"DEBUG\" additivity=\"false\">\n    <appender-ref ref=\"SQL\" />\n  </logger>\n\n  <logger name=\"gwt-log\" level=\"WARN\" additivity=\"false\">\n    <appender-ref ref=\"GWT-LOGFILE\" />\n  </logger>\n  \n  <logger name=\"at.a1ta.bite.core.server.service.DefaultKumsCommonService\" level=\"TRACE\" additivity=\"false\">\n    <appender-ref ref=\"KUMS-SKZ\" />\n  </logger>\n  \n  <logger name=\"at.a1ta.bite.core.server.dao.DefaultKumsSkzShopDao\" level=\"TRACE\" additivity=\"false\">\n    <appender-ref ref=\"KUMS-SKZ\" />\n  </logger>\n\n  <!-- <logger name=\"at.telekom\" level=\"DEBUG\" /> -->\n  <!-- <logger name=\"at.a1ta\" level=\"DEBUG\" /> -->\n  <!-- <logger name=\"com.mchange\" level=\"DEBUG\" /> -->\n  <!-- <logger name=\"java.sql\" level=\"DEBUG\" /> -->\n  <!-- <logger name=\"com.ibatis\" level=\"DEBUG\" /> -->\n  <logger name=\"net.sf.ehcache\" level=\"DEBUG\" />\n  <logger name=\"net.sf.ehcache.Cache\" level=\"INFO\" />\n  <logger name=\"net.sf.ehcache.CacheManager\" level=\"INFO\" />\n  <logger name=\"org.apache.activemq\" level=\"INFO\" />\n  <logger name=\"jdbc\" level=\"FATAL\" additivity=\"false\" />\n  <logger name=\"pwuauth\" level=\"DEBUG\"/>\n\n  <logger name=\"AUDIT\" level=\"INFO\" additivity=\"false\">\n    <appender-ref ref=\"AUDITLOG\" />\n  </logger>\n\n  <root>\n    <level value=\"INFO\" />\n  <appender-ref ref=\"STDOUT\" /> \n    <appender-ref ref=\"FILE\" />\n     <appender-ref ref=\"SQL\" />\n  </root>\n</configuration>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/ehcache.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/ehcache.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4799,
    "content": "<ehcache xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://www.ehcache.org/ehcache.xsd\">\n\n  <cacheManagerPeerProviderFactory\n       class=\"net.sf.ehcache.distribution.jms.JMSCacheManagerPeerProviderFactory\"\n       properties=\"initialContextFactoryName=at.a1ta.bite.core.server.util.EhCacheReplicationActiveMQInitialContextFactory,\n           providerURL=tcp://localhost:23456,\n           replicationTopicConnectionFactoryBindingName=topicConnectionFactory,\n           getQueueConnectionFactoryBindingName=queueConnectionFactory,\n           getQueueBindingName=ehcacheGetQueue,\n           replicationTopicBindingName=ehcache\"\n       propertySeparator=\",\"\n       />\n  \n  <defaultCache\n    maxElementsInMemory=\"10000\"\n    eternal=\"false\"\n    overflowToDisk=\"false\"\n    memoryStoreEvictionPolicy=\"LRU\"\n    statistics=\"true\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </defaultCache>\n    \n  <cache name=\"ldapCache\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"orgUnitCache\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"at.a1ta.cusi.bom.addresstypes.Country\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"0\" eternal=\"true\"/>\n  <cache name=\"customerEquipmentCache\" maxElementsInMemory=\"1000\" overflowToDisk=\"false\" timeToLiveSeconds=\"3600\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"phoneNumberCache\" maxElementsInMemory=\"200\" overflowToDisk=\"false\" timeToLiveSeconds=\"36000\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"VIPCache\" maxElementsInMemory=\"2000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\"/>\n  <cache name=\"mobilPoints\" maxElementsInMemory=\"2000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n  <cache name=\"UDPCache\" maxElementsInMemory=\"100\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\">\n    <cacheEventListenerFactory\n     class=\"net.sf.ehcache.distribution.jms.JMSCacheReplicatorFactory\"\n     properties=\"replicateAsynchronously=true,\n                 replicatePuts=true,\n                 replicateUpdates=true,\n                 replicateUpdatesViaCopy=true,\n                 replicateRemovals=true,\n                 asynchronousReplicationIntervalMillis=1000\"\n      propertySeparator=\",\"/>\n  </cache>\n</ehcache>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/app/starter/AppStarter.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/app/starter/AppStarter.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1061,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module rename-to=\"app\">\n  <inherits name=\"com.google.gwt.logging.Logging\"/>\n  <inherits name=\"at.a1ta.cuco.ui.common.CuCoCommon\" />\n  <inherits name=\"at.a1ta.cuco.ui.app.App\" />\n\n  <source path=\"client\" />\n  \n  <entry-point class=\"at.a1ta.cuco.app.starter.client.AppStarter\" />\n <!--  <set-configuration-property name=\"devModeRedirectEnabled\" value=\"true\" />\n  <add-linker name=\"xsiframe\" />\n  <set-configuration-property name='xsiframe.failIfScriptTag' value='FALSE'/> -->\n\n  <!-- Changes in this file must be reflected accordingly in src/main/filters/gwt -->\n  \n  <set-property name=\"gwt.logging.enabled\" value=\"TRUE\"/>\n  <set-property name=\"gwt.logging.logLevel\" value=\"SEVERE\"/>\n  <set-property name=\"gwt.logging.simpleRemoteHandler\" value=\"ENABLED\" />\n  <set-property name=\"gwt.logging.popupHandler\" value=\"DISABLED\" />\n  \n  <extend-property name=\"locale\" values=\"de_DE\" />\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/admin/starter/AdminStarter.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/admin/starter/AdminStarter.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 872,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module rename-to=\"admin\">\n  <inherits name=\"com.google.gwt.logging.Logging\"/>\n  <inherits name=\"at.a1ta.cuco.ui.common.CuCoCommon\" />\n  <inherits name=\"at.a1ta.cuco.ui.admin.Admin\" />\n  <source path=\"client\"/>\n  \n  <entry-point class=\"at.a1ta.cuco.admin.starter.client.AdminStarter\" />\n  \n  <!-- Changes in this file must be reflected accordingly in src/main/filters/gwt -->\n  <set-property name=\"gwt.logging.enabled\" value=\"TRUE\"/>\n  <set-property name=\"gwt.logging.logLevel\" value=\"SEVERE\"/>\n  <set-property name=\"gwt.logging.simpleRemoteHandler\" value=\"ENABLED\" />\n  <set-property name=\"gwt.logging.popupHandler\" value=\"DISABLED\" />\n  \n  <extend-property name=\"locale\" values=\"de_DE\" />\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/mycuco/starter/MyCuCoStarter.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/mycuco/starter/MyCuCoStarter.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 818,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module rename-to=\"mycuco\">\n  <inherits name=\"com.google.gwt.logging.Logging\"/>\n  <inherits name=\"at.a1ta.cuco.mycuco.MyCuCo\" />\n  <source path=\"client\"/>\n  \n  <entry-point class=\"at.a1ta.cuco.mycuco.starter.client.MyCuCoStarter\" />\n  \n  <!-- Changes in this file must be reflected accordingly in src/main/filters/gwt -->\n  <set-property name=\"gwt.logging.enabled\" value=\"TRUE\"/>\n  <set-property name=\"gwt.logging.logLevel\" value=\"SEVERE\"/>\n  <set-property name=\"gwt.logging.simpleRemoteHandler\" value=\"ENABLED\" />\n  <set-property name=\"gwt.logging.popupHandler\" value=\"DISABLED\" />\n  \n  <extend-property name=\"locale\" values=\"de_DE\" />\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/100_test_deletes_kunde.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/100_test_deletes_kunde.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 449,
    "content": "delete from kunde1 where kunde_id=999999991;\ndelete from kunde2 where kunde_id=999999991;\ndelete from kunde1 where kunde_id=999999992;\ndelete from kunde2 where kunde_id=999999992;\ndelete from kunde1 where kunde_id=999999993;\ndelete from kunde2 where kunde_id=999999993;\ndelete from kunde1 where kunde_id=999999994;\ndelete from kunde2 where kunde_id=999999994;\ndelete from kunde1 where kunde_id=999999995;\ndelete from kunde2 where kunde_id=999999995;",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/037_test_deletes_konto.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/037_test_deletes_konto.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 449,
    "content": "delete from KONTO1 where kunde_id=999999991;\ndelete from KONTO2 where kunde_id=999999991;\ndelete from KONTO1 where kunde_id=999999992;\ndelete from KONTO2 where kunde_id=999999992;\ndelete from KONTO1 where kunde_id=999999993;\ndelete from KONTO2 where kunde_id=999999993;\ndelete from KONTO1 where kunde_id=999999994;\ndelete from KONTO2 where kunde_id=999999994;\ndelete from KONTO1 where kunde_id=999999995;\ndelete from KONTO2 where kunde_id=999999995;",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/040_test_deletes_rufnummer.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/040_test_deletes_rufnummer.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 489,
    "content": "delete from RUFNUMMER1 where kunde_id=999999991;\ndelete from RUFNUMMER2 where kunde_id=999999991;\ndelete from RUFNUMMER1 where kunde_id=999999992;\ndelete from RUFNUMMER2 where kunde_id=999999992;\ndelete from RUFNUMMER1 where kunde_id=999999993;\ndelete from RUFNUMMER2 where kunde_id=999999993;\ndelete from RUFNUMMER1 where kunde_id=999999994;\ndelete from RUFNUMMER2 where kunde_id=999999994;\ndelete from RUFNUMMER1 where kunde_id=999999995;\ndelete from RUFNUMMER2 where kunde_id=999999995;",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/050_test_deletes_ansprechpartner.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/050_test_deletes_ansprechpartner.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 549,
    "content": "delete from ANSPRECHPARTNER1 where KUNDE_ID=999999991;\ndelete from ANSPRECHPARTNER2 where KUNDE_ID=999999991;\ndelete from ANSPRECHPARTNER1 where KUNDE_ID=999999992;\ndelete from ANSPRECHPARTNER2 where KUNDE_ID=999999992;\ndelete from ANSPRECHPARTNER1 where KUNDE_ID=999999993;\ndelete from ANSPRECHPARTNER2 where KUNDE_ID=999999993;\ndelete from ANSPRECHPARTNER1 where KUNDE_ID=999999994;\ndelete from ANSPRECHPARTNER2 where KUNDE_ID=999999994;\ndelete from ANSPRECHPARTNER1 where KUNDE_ID=999999995;\ndelete from ANSPRECHPARTNER2 where KUNDE_ID=999999995;",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/035_test_deletes_bestand.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/deletes/035_test_deletes_bestand.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 469,
    "content": "delete from BESTAND1 where kunde_id=999999991;\ndelete from BESTAND2 where kunde_id=999999991;\ndelete from BESTAND1 where kunde_id=999999992;\ndelete from BESTAND2 where kunde_id=999999992;\ndelete from BESTAND1 where kunde_id=999999993;\ndelete from BESTAND2 where kunde_id=999999993;\ndelete from BESTAND1 where kunde_id=999999994;\ndelete from BESTAND2 where kunde_id=999999994;\ndelete from BESTAND1 where kunde_id=999999995;\ndelete from BESTAND2 where kunde_id=999999995;",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/5_test_inserts_bestand.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/5_test_inserts_bestand.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 10254,
    "content": "INSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000001,999999991,99999999100000000001,'43 7239 8888811',888888811,99999999100000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000001,999999991,99999999100000000001,'43 7239 8888811',888888811,99999999100000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000002,999999991,99999999100000000002,'43 7239 8888812',888888812,99999999100000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000002,999999991,99999999100000000002,'43 7239 8888812',888888812,99999999100000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000003,999999991,99999999100000000003,'43 7239 8888813',888888813,99999999100000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000003,999999991,99999999100000000003,'43 7239 8888813',888888813,99999999100000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000004,999999991,99999999100000000004,'43 7239 8888814',888888814,99999999100000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000004,999999991,99999999100000000004,'43 7239 8888814',888888814,99999999100000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000005,999999991,99999999100000000005,'43 7239 8888815',888888815,99999999100000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999100000000005,999999991,99999999100000000005,'43 7239 8888815',888888815,99999999100000000001);\n\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000001,999999992,99999999200000000001,'43 7239 8888821',888888821,99999999200000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000001,999999992,99999999200000000001,'43 7239 8888821',888888821,99999999200000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000002,999999992,99999999200000000002,'43 7239 8888822',888888822,99999999200000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000002,999999992,99999999200000000002,'43 7239 8888822',888888822,99999999200000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000003,999999992,99999999200000000003,'43 7239 8888823',888888823,99999999200000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000003,999999992,99999999200000000003,'43 7239 8888823',888888823,99999999200000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000004,999999992,99999999200000000004,'43 7239 8888824',888888824,99999999200000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000004,999999992,99999999200000000004,'43 7239 8888824',888888824,99999999200000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000005,999999992,99999999200000000005,'43 7239 8888825',888888825,99999999200000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999200000000005,999999992,99999999200000000005,'43 7239 8888825',888888825,99999999200000000001);\n\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000001,999999993,99999999300000000001,'43 7239 8888831',888888831,99999999300000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000001,999999993,99999999300000000001,'43 7239 8888831',888888831,99999999300000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000002,999999993,99999999300000000002,'43 7239 8888832',888888832,99999999300000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000002,999999993,99999999300000000002,'43 7239 8888832',888888832,99999999300000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000003,999999993,99999999300000000003,'43 7239 8888833',888888833,99999999300000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000003,999999993,99999999300000000003,'43 7239 8888833',888888833,99999999300000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000004,999999993,99999999300000000004,'43 7239 8888834',888888834,99999999300000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000004,999999993,99999999300000000004,'43 7239 8888834',888888834,99999999300000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000005,999999993,99999999300000000005,'43 7239 8888835',888888835,99999999300000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999300000000005,999999993,99999999300000000005,'43 7239 8888835',888888835,99999999300000000001);\n\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000001,999999994,99999999400000000001,'43 7239 8888841',888888841,99999999400000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000001,999999994,99999999400000000001,'43 7239 8888841',888888841,99999999400000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000002,999999994,99999999400000000002,'43 7239 8888842',888888842,99999999400000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000002,999999994,99999999400000000002,'43 7239 8888842',888888842,99999999400000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000003,999999994,99999999400000000003,'43 7239 8888843',888888843,99999999400000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000003,999999994,99999999400000000003,'43 7239 8888843',888888843,99999999400000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000004,999999994,99999999400000000004,'43 7239 8888844',888888844,99999999400000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000004,999999994,99999999400000000004,'43 7239 8888844',888888844,99999999400000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000005,999999994,99999999400000000005,'43 7239 8888845',888888845,99999999400000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999400000000005,999999994,99999999400000000005,'43 7239 8888845',888888845,99999999400000000001);\n\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000001,999999995,99999999500000000001,'43 7239 8888851',888888851,99999999500000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000001,999999995,99999999500000000001,'43 7239 8888851',888888851,99999999500000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000002,999999995,99999999500000000002,'43 7239 8888852',888888852,99999999500000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000002,999999995,99999999500000000002,'43 7239 8888852',888888852,99999999500000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000003,999999995,99999999500000000003,'43 7239 8888853',888888853,99999999500000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000003,999999995,99999999500000000003,'43 7239 8888853',888888853,99999999500000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000004,999999995,99999999500000000004,'43 7239 8888854',888888854,99999999500000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000004,999999995,99999999500000000004,'43 7239 8888854',888888854,99999999500000000001);\nINSERT INTO BESTAND1 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000005,999999995,99999999500000000005,'43 7239 8888855',888888855,99999999500000000001);\nINSERT INTO BESTAND2 (BESTAND_ID,KUNDE_ID,VERTRAG_ID,RUFNUMMER,AON_KUNDENNUMMER_ID, KONTO_ID) VALUES (99999999500000000005,999999995,99999999500000000005,'43 7239 8888855',888888855,99999999500000000001);\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/2_test_inserts_ansprechpartner.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/2_test_inserts_ansprechpartner.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 28754,
    "content": "INSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 11','Hof 11','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner11.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 11','Hof 11','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner11.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 12','Hof 12','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner12.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 12','Hof 12','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner12.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 13','Hof 13','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner13.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 13','Hof 13','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner13.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 14','Hof 14','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner14.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 14','Hof 14','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner14.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 15','Hof 15','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner15.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999991,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 15','Hof 15','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner15.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\n\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 21','Hof 21','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner21.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 21','Hof 21','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner21.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 22','Hof 22','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner22.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 22','Hof 22','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner22.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 23','Hof 23','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner23.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 23','Hof 23','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner23.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 24','Hof 24','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner24.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 24','Hof 24','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner24.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 25','Hof 25','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner25.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999992,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 25','Hof 25','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner25.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\n\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 31','Hof 31','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner31.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 31','Hof 31','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner31.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 32','Hof 32','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner32.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 32','Hof 32','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner32.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 33','Hof 33','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner33.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 33','Hof 33','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner33.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 34','Hof 34','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner34.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 34','Hof 34','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner34.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 35','Hof 35','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner35.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999993,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 35','Hof 35','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner35.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\n\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 41','Hof 41','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner41.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 41','Hof 41','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner41.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 42','Hof 42','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner42.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 42','Hof 42','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner42.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 43','Hof 43','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner43.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 43','Hof 43','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner43.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 44','Hof 44','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner44.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 44','Hof 44','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner44.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 45','Hof 45','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner45.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999994,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 45','Hof 45','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner45.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\n\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 51','Hof 51','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner51.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 51','Hof 51','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner51.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 52','Hof 52','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner52.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 52','Hof 52','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner52.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 53','Hof 53','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner53.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 53','Hof 53','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner53.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 54','Hof 54','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner54.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 54','Hof 54','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner54.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER1 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 55','Hof 55','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner55.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\nINSERT INTO ANSPRECHPARTNER2 (KUNDE_ID,KONTAKT_ROLLE_ID,HAUPTANPRECHPARTNER_JN,ROLLE_BEI_TA_BES,ROLLE_BEIM_KUNDEN_BES,ANREDE_BES,TITEL_BES,NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,AKTION_CD,ANLAGE_TS,QUELLE_CD) VALUES (999999995,269959898,'N',null,null,'Frau',null,'Susi Ansprechpartner 55','Hof 55','4020 Linz',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),'0043/664/7940111',null,null,null,'susi@ansprechpartner55.at','I',TO_DATE('2011/09/07 15:54:29', 'YYYY/MM/DD HH24:MI:SS'),'TA');\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/1_test_inserts_kunde.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/1_test_inserts_kunde.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 9914,
    "content": "INSERT INTO KUNDE1 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999991,999999991,'RES','Per',null,'M','Herr','Max','Muster 1','A','Linz','4020','Hof','11',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster1.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\nINSERT INTO KUNDE2 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999991,999999991,'RES','Per',null,'M','Herr','Max','Muster 1','A','Linz','4020','Hof','11',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster1.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\n\nINSERT INTO KUNDE1 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999992,999999992,'RES','Per',null,'M','Herr','Max','Muster 2','A','Linz','4020','Hof','21',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster2.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\nINSERT INTO KUNDE2 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999992,999999992,'RES','Per',null,'M','Herr','Max','Muster 2','A','Linz','4020','Hof','21',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster2.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\n\nINSERT INTO KUNDE1 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999993,999999993,'RES','Per',null,'M','Herr','Max','Muster 3','A','Linz','4020','Hof','31',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster3.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\nINSERT INTO KUNDE2 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999993,999999993,'RES','Per',null,'M','Herr','Max','Muster 3','A','Linz','4020','Hof','31',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster3.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\n\nINSERT INTO KUNDE1 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999994,999999994,'RES','Per',null,'M','Herr','Max','Muster 4','A','Linz','4020','Hof','41',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster4.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\nINSERT INTO KUNDE2 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999994,999999994,'RES','Per',null,'M','Herr','Max','Muster 4','A','Linz','4020','Hof','41',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster4.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\n\nINSERT INTO KUNDE1 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999995,999999995,'RES','Per',null,'M','Herr','Max','Muster 5','A','Linz','4020','Hof','51',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster5.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\nINSERT INTO KUNDE2 (HEADER_ID,KUNDE_ID,SEG_CD,KUNDE_TYP_CD,TITEL_BES,GESCHLECHT_CD,ANREDE_BES,KUNDE_VORNAME,KUNDE_NAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,VEREINSREGISTER_CD,BRANCHE_BES,MITARBEITER_ANZ,REGION_DS,TEAM_DS,BETREUER_NAM,BETREUER_UUSER_CD,VIP_JN,KONTAKTRUFNUMMER_1,KONTAKTRUFNUMMER_2,AP_NAM,AP_VORNAME,AP_GESCHLECHT_CD,AP_ANREDE_BES,AP_TITEL_BES,EMAIL,MOBIL_NR,FAX_NR,HOMEPAGE,ROBINSONLISTE_JN,BLACKLIST_JN,KUNDENWERT_KLASSE_CD,LIEFERSPERRE_JN,BONITAETSCORING_CD,FRAMEWORK_JN,KOOPERATION_BES,AKTION_CD,ANLAGE_TS) VALUES (999999995,999999995,'RES','Per',null,'M','Herr','Max','Muster 5','A','Linz','4020','Hof','51',TO_DATE('1977/04/02 00:00:00', 'YYYY/MM/DD HH24:MI:SS'),null,null,null,0,'Customer Service','Customer Care','Kein Betreuer Kein Betreuer','Kein Be','N','05286 20028',null,null,null,null,null,null,'max@muster5.at','664 7940111',null,null,'N','N','BRONZE','N','Gr\u00fcn','N',null,'I',TO_DATE('2011/11/15 16:06:10', 'YYYY/MM/DD HH24:MI:SS'));\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/4_test_inserts_konto.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/4_test_inserts_konto.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 3284,
    "content": "INSERT INTO KONTO1 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999991,99999999100000000001,'Herr',null,'Max Muster 1','Hof 11','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\nINSERT INTO KONTO2 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999991,99999999100000000001,'Herr',null,'Max Muster 1','Hof 11','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\n\nINSERT INTO KONTO1 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999992,99999999200000000001,'Herr',null,'Max Muster 2','Hof 21','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\nINSERT INTO KONTO2 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999992,99999999200000000001,'Herr',null,'Max Muster 2','Hof 21','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\n\nINSERT INTO KONTO1 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999993,99999999300000000001,'Herr',null,'Max Muster 3','Hof 31','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\nINSERT INTO KONTO2 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999993,99999999300000000001,'Herr',null,'Max Muster 3','Hof 31','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\n\nINSERT INTO KONTO1 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999994,99999999400000000001,'Herr',null,'Max Muster 4','Hof 41','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\nINSERT INTO KONTO2 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999994,99999999400000000001,'Herr',null,'Max Muster 4','Hof 41','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\n\nINSERT INTO KONTO1 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999995,99999999500000000001,'Herr',null,'Max Muster 5','Hof 51','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\nINSERT INTO KONTO2 (KUNDE_ID,KONTO_ID,ANREDE_BES,TITEL_BES,KUNDE_NAM,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,MEDIUM_BES,AKTION_CD,ANLAGE_TS,BAN_ID,BEN_ID,AKTIV_CD) VALUES (999999995,99999999500000000001,'Herr',null,'Max Muster 5','Hof 51','4020 Linz','EBPP','I',TO_DATE('2011/11/15 19:14:09', 'YYYY/MM/DD HH24:MI:SS'),null,null,1);\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/3_test_inserts_rufnummer.sql",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/cuco/service/sql/testdata/inserts/3_test_inserts_rufnummer.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 7454,
    "content": "INSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000001,999999991,'43','7239','888811', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000001,999999991,'43','7239','888811', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000002,999999991,'43','7239','888812', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000002,999999991,'43','7239','888812', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000003,999999991,'43','7239','888813', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000003,999999991,'43','7239','888813', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000004,999999991,'43','7239','888814', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000004,999999991,'43','7239','888814', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000005,999999991,'43','7239','888815', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999100000000005,999999991,'43','7239','888815', 'TA');\n\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000001,999999992,'43','7239','888821', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000001,999999992,'43','7239','888821', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000002,999999992,'43','7239','888822', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000002,999999992,'43','7239','888822', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000003,999999992,'43','7239','888823', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000003,999999992,'43','7239','888823', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000004,999999992,'43','7239','888824', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000004,999999992,'43','7239','888824', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000005,999999992,'43','7239','888825', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999200000000005,999999992,'43','7239','888825', 'TA');\n\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000001,999999993,'43','7239','888831', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000001,999999993,'43','7239','888831', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000002,999999993,'43','7239','888832', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000002,999999993,'43','7239','888832', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000003,999999993,'43','7239','888833', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000003,999999993,'43','7239','888823', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000004,999999993,'43','7239','888834', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000004,999999993,'43','7239','888834', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000005,999999993,'43','7239','888835', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999300000000005,999999993,'43','7239','888835', 'TA');\n\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000001,999999994,'43','7239','888841', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000001,999999994,'43','7239','888841', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000002,999999994,'43','7239','888842', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000002,999999994,'43','7239','888842', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000003,999999994,'43','7239','888843', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000003,999999994,'43','7239','888843', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000004,999999994,'43','7239','888844', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000004,999999994,'43','7239','888844', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000005,999999994,'43','7239','888845', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999400000000005,999999994,'43','7239','888845', 'TA');\n\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000001,999999995,'43','7239','888851', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000001,999999995,'43','7239','888851', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000002,999999995,'43','7239','888852', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000002,999999995,'43','7239','888852', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000003,999999995,'43','7239','888853', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000003,999999995,'43','7239','888853', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000004,999999995,'43','7239','888854', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000004,999999995,'43','7239','888854', 'TA');\nINSERT INTO RUFNUMMER1 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000005,999999995,'43','7239','888855', 'TA');\nINSERT INTO RUFNUMMER2 (VERTRAG_ID,KUNDE_ID,LKZ,ONKZ,TN_NUM,RUFNUMMERNSYSTEM_CD) VALUES (99999999500000000005,999999995,'43','7239','888855', 'TA');\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/resources/at/a1ta/pkb/starter/PkbStarter.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/resources/at/a1ta/pkb/starter/PkbStarter.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1094,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module rename-to=\"pkb\">\n  <inherits name=\"com.google.gwt.logging.Logging\"/>\n  <inherits name=\"at.a1ta.bite.ui.BiteUi\" />\n  <inherits name=\"at.a1ta.cuco.ui.visitreports.VisitReports\"/>\n  <inherits name=\"at.a1ta.cuco.ui.pkb.PKBStandalone\" />\n\n  <source path=\"client\" />\n  <entry-point class=\"at.a1ta.pkb.starter.client.PkbStarter\" />\n\n  <!-- Changes in this file must be reflected accordingly in src/main/filters/gwt -->\n  <set-property name=\"gwt.logging.enabled\" value=\"TRUE\"/>\n  <set-property name=\"gwt.logging.logLevel\" value=\"SEVERE\"/>\n  <set-property name=\"gwt.logging.simpleRemoteHandler\" value=\"ENABLED\" />\n  <set-property name=\"gwt.logging.popupHandler\" value=\"DISABLED\" />\n\n  <extend-property name=\"locale\" values=\"de_DE\" />\n\n  <generate-with class=\"at.a1ta.bite.ui.generator.ClassResolverGenerator\">\n    <when-type-assignable class=\"at.a1ta.bite.ui.client.factory.IsClassResolver\" />\n  </generate-with>\n\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/webapp/admin.html",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/admin.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 1038,
    "content": "<!doctype html>\n\n<html>\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n    <meta name=\"viewport\" content=\"width=1024, initial-scale=1.0, user-scalable=yes\" />\n    <META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\">\n    <META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"0\">\n    <META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\">\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"gwt:property\" content=\"locale=de_DE\" />\n    <meta name=\"SKYPE_TOOLBAR\" CONTENT=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" />\n    \n\t<link rel=\"stylesheet/less\" type=\"text/css\" href=\"admin/styles/less/master.less\">\n    <link rel=\"icon\" href=\"app/images/favicon.png\" type=\"image/png\">\n    <link rel=\"shortcut icon\" href=\"app/images/favicon.ico\" type=\"image/x-icon\">\n    \n  \n    <title>CuCo Administration</title>\n    \n\t<script src=\"admin/scripts/less-1.3.0.min.js\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\" language=\"javascript\" src=\"admin/admin.nocache.js\"></script>\n  </head>\n  <body>\n  </body>\n</html>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/webapp/pkb.html",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/pkb.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 1204,
    "content": "<!doctype html>\n\n<html>\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\" />\n    <meta name=\"viewport\" content=\"width=1024, initial-scale=1.0, user-scalable=yes\" />\n    <META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\">\n    <META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\">\n    <META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"0\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\n    <meta name=\"gwt:module\" content=\"pkb/PkbUi\" />\n    <meta name=\"gwt:property\" content=\"locale=de_DE\" />\n    <meta name=\"SKYPE_TOOLBAR\" CONTENT=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" />\n    \n    <link rel=\"stylesheet/less\" type=\"text/css\" href=\"pkb/styles/less/master.less\">\n    \n    <title>Push Kundenbindung</title>\n  </head>\n  <body>\n  \n    <!-- OPTIONAL: include this if you want history support -->\n    <iframe src=\"javascript:''\" id='__gwt_historyFrame' style='position: absolute; width: 0; height: 0; border: 0'></iframe>\n    <iframe id=\"__printingFrame\" style=\"width: 0; height: 0; border: 0\"></iframe>\n  \n    <script src=\"app/scripts/less-1.3.0.min.js\" type=\"text/javascript\"></script>\n    <script language=\"javascript\" src=\"pkb/pkb.nocache.js\" type=\"text/javascript\"></script>\n  </body>\n</html>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/webapp/unauthorized-pc-prod.html",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/unauthorized-pc-prod.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 1571,
    "content": "<!doctype html>\n\n<html>\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n    <meta name=\"viewport\" content=\"width=1024, initial-scale=1.0, user-scalable=yes\" />\n    <META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\">\n    <META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"0\">\n    <META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\">\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n    <meta http-equiv=\"refresh\" content=\"5;url=https://www.partnerweb.a1.net/\" />\n     \n  \t<link rel=\"stylesheet/less\" type=\"text/css\" href=\"app/styles/less/master.less\">\n    <link rel=\"icon\" href=\"app/images/favicon.png\" type=\"image/png\">\n    <link rel=\"shortcut icon\" href=\"app/images/favicon.ico\" type=\"image/x-icon\">\n    \n    \n    <title>Customer Cockpit</title>\n    \n    <style>\n        .dark {\n           background-color: #666666;\n        }\n\t    .bite-waitingWidget {\n\t      font-family:verdana, sans-serif;\n\t      font-size: 14px;\n\t\t  text-align: center;\n\t\t  border: 1px solid #333333;\n\t\t  background-color: #ffffff;\n\t\t  padding: 20px;\n\t\t}\n\t\t.centered{\n\t\t     position:absolute;\n\t\t     width:500px;\n\t\t     height:50px;\n\t\t     z-index:15;\n\t\t     top:50%;\n\t\t     left:50%;\n\t\t     margin:-25px 0 0 -250px;\n\t\t}\n    </style>\n    \n  </head>\n  <body class=\"dark\">\n    <div class=\"bite-waitingWidget bite-waitingWidget-panel centered\">\n    Bei der Anmeldung in CuCo ist ein Fehler aufgetreten. \n    Wenn Sie innerhalb von 5 Sekunden nicht automatisch weitergeleitet werden, klicken Sie <a href=\"https://www.partnerweb.a1.net/\">hier</a>.\n    </div>\n  </body>\n</html>\n\n\n\t",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/webapp/lead.html",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/lead.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 1243,
    "content": "<!doctype html>\n\n<html>\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n    <meta name=\"viewport\" content=\"width=1024, initial-scale=1.0, user-scalable=yes\" />\n    <META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\">\n    <META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"0\">\n    <META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\">\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"gwt:property\" content=\"locale=de_DE\" />\n    <meta name=\"SKYPE_TOOLBAR\" CONTENT=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" />\n     \n  \t<link rel=\"stylesheet/less\" type=\"text/css\" href=\"app/styles/less/master.less\">\n    <link rel=\"icon\" href=\"app/images/favicon.png\" type=\"image/png\">\n    <link rel=\"shortcut icon\" href=\"app/images/favicon.ico\" type=\"image/x-icon\">\n    \n\t  \n    \n    <title>Customer Cockpit-Nicht-Kunden</title>\n  \n       \n    <!-- not currently needed (New ProductView!)-->\n    <script src=\"app/scripts/OpenLayers.js\"></script> \n    <script src=\"app/scripts/OpenStreetMap.js\"></script>  \n\n    <script src=\"app/scripts/less-1.3.0.min.js\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\" language=\"javascript\" src=\"app/app.nocache.js\"></script>\n    \n    \n    \n  </head>\n  <body>\n  </body>\n</html>\n\n\n\t",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/webapp/unauthorized-pc-int.html",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/unauthorized-pc-int.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 1571,
    "content": "<!doctype html>\n\n<html>\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n    <meta name=\"viewport\" content=\"width=1024, initial-scale=1.0, user-scalable=yes\" />\n    <META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\">\n    <META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"0\">\n    <META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\">\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n    <meta http-equiv=\"refresh\" content=\"5;url=https://partnerweb.test.a1.net\" />\n     \n  \t<link rel=\"stylesheet/less\" type=\"text/css\" href=\"app/styles/less/master.less\">\n    <link rel=\"icon\" href=\"app/images/favicon.png\" type=\"image/png\">\n    <link rel=\"shortcut icon\" href=\"app/images/favicon.ico\" type=\"image/x-icon\">\n    \n    \n    <title>Customer Cockpit</title>\n    \n    <style>\n        .dark {\n           background-color: #666666;\n        }\n\t    .bite-waitingWidget {\n\t      font-family:verdana, sans-serif;\n\t      font-size: 14px;\n\t\t  text-align: center;\n\t\t  border: 1px solid #333333;\n\t\t  background-color: #ffffff;\n\t\t  padding: 20px;\n\t\t}\n\t\t.centered{\n\t\t     position:absolute;\n\t\t     width:500px;\n\t\t     height:50px;\n\t\t     z-index:15;\n\t\t     top:50%;\n\t\t     left:50%;\n\t\t     margin:-25px 0 0 -250px;\n\t\t}\n    </style>\n    \n  </head>\n  <body class=\"dark\">\n    <div class=\"bite-waitingWidget bite-waitingWidget-panel centered\">\n    Bei der Anmeldung in CuCo ist ein Fehler aufgetreten. \n    Wenn Sie innerhalb von 5 Sekunden nicht automatisch weitergeleitet werden, klicken Sie <a href=\"https://partnerweb.test.a1.net\">hier</a>.\n    </div>\n  </body>\n</html>\n\n\n\t",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/webapp/untrusted.html",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/untrusted.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 1039,
    "content": "<!doctype html>\n\n<html>\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n    <meta name=\"viewport\" content=\"width=1024, initial-scale=1.0, user-scalable=yes\" />\n    <META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\">\n    <META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"0\">\n    <META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\">\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"gwt:property\" content=\"locale=de_DE\" />\n    <meta name=\"SKYPE_TOOLBAR\" CONTENT=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" />\n    \n  \t<link rel=\"stylesheet/less\" type=\"text/css\" href=\"app/styles/less/master.less\">\n    <link rel=\"icon\" href=\"app/images/favicon.png\" type=\"image/png\">\n    <link rel=\"shortcut icon\" href=\"app/images/favicon.ico\" type=\"image/x-icon\">\n    \n\t  \n    <title>Customer Cockpit</title>\n  \n    <script src=\"app/scripts/less-1.3.0.min.js\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\" language=\"javascript\" src=\"app/app.nocache.js\"></script>\n    \n  </head>\n  <body>\n  </body>\n</html>\n\n\n\t",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/webapp/mycuco.html",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/mycuco.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 1031,
    "content": "<!doctype html>\n\n<html>\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n    <meta name=\"viewport\" content=\"width=1024, initial-scale=1.0, user-scalable=yes\" />\n    <META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\">\n    <META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"0\">\n    <META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\">\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"gwt:property\" content=\"locale=de_DE\" />\n    <meta name=\"SKYPE_TOOLBAR\" CONTENT=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" />\n\n\t<link rel=\"stylesheet/less\" type=\"text/css\" href=\"mycuco/styles/less/master.less\">\n    <link rel=\"icon\" href=\"mycuco/images/favicon.png\" type=\"image/png\">\n    <link rel=\"shortcut icon\" href=\"mycuco/images/favicon.ico\" type=\"image/x-icon\">\n    \n\t\n    <title>MyCuCo</title>\n  \n\t<script src=\"mycuco/scripts/less-1.3.0.min.js\" type=\"text/javascript\"></script>\n    <script type=\"text/javascript\" language=\"javascript\" src=\"mycuco/mycuco.nocache.js\"></script>\n  </head>\n  <body>\n  </body>\n</html>\n\n\n\t",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco/src/main/webapp/WEB-INF/web.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco/src/main/webapp/WEB-INF/web.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2227,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\n  <context-param>\n    <param-name>contextConfigLocation</param-name>\n    <param-value>classpath:applicationContext-app.xml classpath:applicationContext-admin.xml classpath:applicationContext-mycuco.xml</param-value>\n  </context-param>\n  <context-param>\n    <param-name>spring.profiles.active</param-name>\n    <param-value>TRUSTED,DEV,JMSBROKER</param-value>\n  </context-param>\n\n  <filter>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.BiteAuthenticationFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>TraceFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.TraceFilter</filter-class>\n  </filter>\n  <filter>\n    <filter-name>UserToMdcFilter</filter-name>\n    <filter-class>at.a1ta.bite.ui.server.filter.UserToMdcFilter</filter-class>\n  </filter>\n\n  <filter-mapping>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>BITEAuthenticationFilter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>TraceFilter</filter-name>\n    <url-pattern>*.png</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>UserToMdcFilter</filter-name>\n    <url-pattern>*.view</url-pattern>\n  </filter-mapping>\n  <filter-mapping>\n    <filter-name>UserToMdcFilter</filter-name>\n    <url-pattern>*.rpc</url-pattern>\n  </filter-mapping>\n\n  <listener>\n    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n  </listener>\n  <listener>\n    <listener-class>at.a1ta.bite.ui.server.listener.ApplicationServletContextListener</listener-class>\n  </listener>\n  <listener>\n    <listener-class>net.sf.ehcache.constructs.web.ShutdownListener</listener-class>\n  </listener>\n\n  <!-- Default page to serve -->\n  <welcome-file-list>\n    <welcome-file>index.html</welcome-file>\n  </welcome-file-list>\n\n</web-app>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/pom.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/pom.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2765,
    "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <parent>\n    <groupId>at.a1ta.cuco</groupId>\n    <artifactId>cuco.pom</artifactId>\n    <version>2025.03.01</version>\n  </parent>\n\n  <artifactId>administration.ui</artifactId>\n  <packaging>jar</packaging>\n  <name>administration.ui</name>\n\n  <dependencies>\n    <dependency>\n      <groupId>at.a1ta.cuco</groupId>\n      <artifactId>pkb.ui</artifactId>\n      <exclusions>\n        <exclusion>\n          <artifactId>ant</artifactId>\n          <groupId>org.apache.ant</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>com.extjs</groupId>\n      <artifactId>gxt</artifactId>\n      <version>${gxt.version}</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-tx</artifactId>\n      <version>${spring.version}</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.google.gwt</groupId>\n      <artifactId>gwt-user</artifactId>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.google.gwt</groupId>\n      <artifactId>gwt-servlet</artifactId>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.allen_sauer.gwt</groupId>\n      <artifactId>dnd</artifactId>\n      <version>3.0.1</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>commons-fileupload</groupId>\n      <artifactId>commons-fileupload</artifactId>\n      <version>1.2.1</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>commons-io</groupId>\n      <artifactId>commons-io</artifactId>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>gwt-maven-plugin</artifactId>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-release-plugin</artifactId>\n        <version>2.2.1</version>\n        <configuration>\n          <workingDirectory>./${project.artifactId}</workingDirectory>\n        </configuration>\n      </plugin>\n    </plugins>\n    <resources>\n      <resource>\n        <directory>src/main/java</directory>\n      </resource>\n      <resource>\n        <directory>src/main/resources</directory>\n      </resource>\n    </resources>\n  </build>\n</project>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/META-INF/web-fragment.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/META-INF/web-fragment.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1873,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-fragment xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"\n  http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-fragment_3_0.xsd\" version=\"3.0\" metadata-complete=\"false\">\n\n  <servlet>\n    <servlet-name>userShopAssignmentUploadServlet</servlet-name>\n    <servlet-class>at.a1ta.cuco.admin.ui.common.server.UserShopAssignmentUploadServlet</servlet-class>\n  </servlet>\n  <servlet>\n    <servlet-name>userShopAssignmentDownloadServlet</servlet-name>\n    <servlet-class>at.a1ta.cuco.admin.ui.common.server.UserShopAssignmentDownloadServlet</servlet-class>\n  </servlet>\n\n  <servlet-mapping>\n    <servlet-name>userShopAssignmentUploadServlet</servlet-name>\n    <url-pattern>/admin/userShopAssignmentUploadServlet</url-pattern>\n  </servlet-mapping>\n  <servlet-mapping>\n    <servlet-name>userShopAssignmentDownloadServlet</servlet-name>\n    <url-pattern>/admin/userShopAssignmentDownloadServlet</url-pattern>\n  </servlet-mapping>\n  \n  <servlet>\n    <servlet-name>cCTOrgStructureElementUploadServlet</servlet-name>\n    <servlet-class>at.a1ta.cuco.admin.ui.common.server.CCTOrgStructureElementUploadServlet</servlet-class>\n  </servlet>\n  <!--\n  <servlet>\n    <servlet-name>cCTOrgStructureElementDownloadServlet</servlet-name>\n    <servlet-class>at.a1ta.cuco.admin.ui.common.server.CCTOrgStructureElementDownloadServlet</servlet-class>\n  </servlet>\n  -->\n  <servlet-mapping>\n    <servlet-name>cCTOrgStructureElementUploadServlet</servlet-name>\n    <url-pattern>/admin/cCTOrgStructureElementUploadServlet</url-pattern>\n  </servlet-mapping>\n  <!--\n  <servlet-mapping>\n    <servlet-name>cCTOrgStructureElementDownloadServlet</servlet-name>\n    <url-pattern>/admin/cCTOrgStructureElementDownloadServlet</url-pattern>\n  </servlet-mapping>\n  -->\n</web-fragment>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/CucoSett.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/CucoSett.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 406,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module>\n  <inherits name=\"com.allen_sauer.gwt.dnd.gwt-dnd\"/>\n  <inherits name=\"at.a1ta.cuco.admin.ui.common.CuCoAdminCommon\"/>\n  <inherits name=\"at.a1ta.framework.gxt.GxtUtilities\"/>\n  <inherits name=\"at.a1ta.pkb.ui.Pkb\"/>\n</module>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditUserDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditUserDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 928,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n\txmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n\txmlns:t=\"urn:import:at.a1ta.cuco.ui.common.client.ui.table\"\n    xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n\n\t<g:HTMLPanel>\n      <div>\n        <bite:Label ui:field=\"lHeader\" />\n        Benutzername(n):<br/>\n        Partner-Center-Benutzer m\u00fcssen mit dem Prefix \"pc:\" beginnen. (Beispiel: pc:meinePcBenutzerId)<br />\n        <bite:TextArea ui:field=\"taUsers\" width=\"100%\" height=\"30px\" tooltip=\"Sind k\u00f6nnen hier Strichpunktgentrennt Accounts angeben. Werden mehrer Accounts angegeben, erhalten diese dann die selektierten Rollen. Es werden keine Entfernt\" />\n      </div>\n      <br/>\n      Rollen:\n      <t:DataTable ui:field=\"dtRoles\"/>\n      <bite:Button ui:field=\"bSave\" text=\"Speichern\" size=\"Small\"/>\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditCreditTypesDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditCreditTypesDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1816,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n             xmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n             xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n    \n    <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources' />\n    <ui:with field='admintextpool' type='at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool'/>\n\n\t<g:HTMLPanel>\n\t  <bite:Label text=\"{admintextpool.credittypeDialogHeading}\" />\n\t  <div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n      <div class=\"{style.bite_moduleContent}\">\n      <table class=\"{style.bite_form}\">\n      <tr>\n      <td>\n      <bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.credittypeDialogNameLabel}\" />\n      </td>\n      <td>\n      <bite:InputBox ui:field=\"name\" size=\"Long\" mandatoryValidation=\"true\" validationErrorMessage=\"{admintextpool.credittypeDialogValidation}\" maxLength=\"64\"/>\n      </td></tr>\n      <tr>\n      <td>\n      <bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.segSettingsDescription}\" />\n      </td>\n      <td>\n      <bite:TextArea ui:field=\"txtDescription\" width=\"100%\" height=\"80px\" maxLength=\"1000\" />\n      </td></tr>\n      <tr>\n      <td>\n      <bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.credittypeDialogActivLabel}\"/>\n      </td>\n      <td>\n      <bite:CheckBox ui:field=\"checkBoxActive\"/>\n      </td></tr></table>\n      </div>\n      <br/>\n       <div class=\"{style.floating_right}\">\n      <bite:Button ui:field=\"bSave\" text=\"{admintextpool.dialogSave}\" size=\"Small\"/>\n      <bite:Button ui:field=\"bCancel\" text=\"{admintextpool.dialogCancel}\" size=\"Small\"/>\n      </div>\n      <div class=\"{style.floating_clear}\" />\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditUnknownAreasCodeDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditUnknownAreasCodeDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1646,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n             xmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n             xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n    \n    <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources' />\n    <ui:with field='admintextpool' type='at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool'/>\n\n\t<g:HTMLPanel>\n\t   <bite:Label text=\"{admintextpool.unknownareacodeDialogHeading}\" />\n\t  <div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n      <div class=\"{style.bite_moduleContent}\">\n      <table class=\"{style.bite_form}\">\n      <tr>\n      <td>\n      <bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.unknownareacodeDialogNameLabel}\" />\n      </td>\n      <td>\n      <bite:InputBox ui:field=\"areaCode\" size=\"Long\" mandatoryValidation=\"true\" validationErrorMessage=\"{admintextpool.unknownareacodeDialogValidation}\" maxLength=\"64\"/>\n      </td></tr>\n      <tr>\n      <td>\n      <bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.unknownareacodeDialogDescriptionLabel}\" />\n      </td>\n      <td>\n      <bite:TextArea ui:field=\"txtDescription\" width=\"100%\" height=\"80px\" maxLength=\"1000\" />\n      </td></tr>\n      </table>\n      </div>\n      <br/>\n      <div class=\"{style.floating_right}\">\n      <bite:Button ui:field=\"bSave\" text=\"{admintextpool.dialogSave}\" size=\"Small\"/>\n      <bite:Button ui:field=\"bCancel\" text=\"{admintextpool.dialogCancel}\" size=\"Small\"/>\n      </div>\n      <div class=\"{style.floating_clear}\" />\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtSelectRolesDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtSelectRolesDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 522,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n\txmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n\txmlns:t=\"urn:import:at.a1ta.cuco.ui.common.client.ui.table\"\n    xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n\n\t<g:HTMLPanel>\n      <t:DataTable ui:field=\"dtRoles\"/>\n      <bite:Button ui:field=\"bSave\" text=\"Speichern\" size=\"Small\"/>\n      <bite:Button ui:field=\"bCancel\" text=\"Abbrechen\" size=\"Small\"/>\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditRoleGroupManagementDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditRoleGroupManagementDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1850,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n\txmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n\txmlns:t=\"urn:import:at.a1ta.cuco.ui.common.client.ui.table\"\n    xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n    \n    <ui:with field='admintextpool' type='at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool'/>\n    <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources' />\n\n\t<g:HTMLPanel>\n      <div class=\"{style.floating_left}\" style=\"width:50%; padding-right: 1px;\">\n      <bite:Label ui:field=\"lHeader\" />\n      \n      <table>\n       <colgroup>\n          <col width=\"110px\" />\n          <col width=\"150px\" />\n        </colgroup> \n      <tr>\n      <td style=\"padding-bottom: 5px; padding-top: 5px;\"><bite:Label text=\"{admintextpool.segSettingsName}\" /></td>\n      <td style=\"padding-bottom: 5px; padding-top: 5px;\"><bite:InputBox ui:field=\"name\" size=\"Medium\" /></td>\n      </tr>\n      <tr>\n      <td><bite:Label text=\"{admintextpool.segSettingsDescription}\" /></td>\n      <td><bite:InputBox ui:field=\"description\" size=\"Medium\" /></td>\n      </tr>\n      </table>\n      \n      <br/>\n      <bite:Label ui:field=\"lRoleHeader\" text=\"Rollen:\" />\n      <t:DataTable ui:field=\"dtRoles\"/>\n      </div>\n      \n      <div class=\"{style.floating_right}\" style=\"width:49%; padding-top: 78px;\">\n      <bite:Label ui:field=\"lAuthHeader\" text=\"Rechte:\" />\n      <t:DataTable ui:field=\"dtAuth\"/>\n      </div>\n      \n      <div class=\"{style.floating_right}\" style=\"padding-right: 1%; padding-top: 1%;\">\n      <bite:Button ui:field=\"bSave\" text=\"Speichern\" size=\"Small\"/>\n      <bite:Button ui:field=\"bCancel\" text=\"Abbrechen\" size=\"Small\"/>\n      </div>\n      \n      <div class=\"{style.floating_clear}\" />\n      \n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtSelectServiceDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtSelectServiceDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1976,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n\txmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n\txmlns:t=\"urn:import:at.a1ta.cuco.ui.common.client.ui.table\"\n    xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n    <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources' />\n    <ui:with field='admintextpool' type='at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool'/>\n\t<g:HTMLPanel>\n\t<bite:Label text=\"{admintextpool.teamSelectServiceHeading}\" />\n\t<div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n    <div class=\"{style.bite_moduleContent}\" style=\"height:100%;\">\n    <table class=\"{style.bite_form}\">\n    <colgroup>\n          <col width=\"40%\" />\n          <col width=\"60%\" />\n     </colgroup>\n      <tr>\n      <td><bite:InputBox ui:field=\"service\" size=\"Long\"/></td>\n      <td><bite:Button ui:field=\"bSearch\" text=\"Suchen\" size=\"Small\"/></td>\n      </tr>\n    </table>\n    <table class=\"{style.bite_form}\">\n    <tr>\n      <td class=\"{style.bite_heightPlaceHolder}\"><t:DataTable ui:field=\"table\" styleName=\"{style.bite_dataTable}\" width =\"100%\" height=\"200px\" /></td>\n    </tr>\n    <tr>\n      <td class=\"{style.center}\" style=\"padding:5px;\"><bite:Button ui:field=\"add\" text=\"{admintextpool.teamButtonAdd}\" size=\"Small\"/>\n      <bite:Button ui:field=\"remove\" text=\"{admintextpool.teamButtonDelete}\" size=\"Small\"/></td>\n    </tr>\n    <tr>\n     <td class=\"{style.bite_heightPlaceHolder}\"><t:DataTable ui:field=\"table2\" styleName=\"{style.bite_dataTable}\" width =\"100%\" height=\"200px\" /></td>\n    </tr>\n    </table>\n    <div class=\"{style.floating_right}\" style=\"padding:2px;\">\n      <bite:Button ui:field=\"bSave\" text=\"{admintextpool.dialogUse}\" size=\"Small\"/>\n      <bite:Button ui:field=\"bCancel\" text=\"{admintextpool.dialogCancel}\" size=\"Small\"/>\n    </div>\n    <div class=\"{style.floating_clear}\" />\n    </div>\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditTeamsDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/EditTeamsDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1585,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n             xmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n             xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n    \n    <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources' />\n    <ui:with field='admintextpool' type='at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool'/>\n\n\t<g:HTMLPanel>\n\t<bite:Label text=\"team\" />\n\t  <div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n      <div class=\"{style.bite_moduleContent}\">\n      <table class=\"{style.bite_form}\">\n      <tr>\n      <td>\n      <bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.teamDialogNameLabel}\" />\n      </td>\n      <td>\n      <bite:InputBox ui:field=\"teamName\" size=\"Long\" mandatoryValidation=\"true\" validationErrorMessage=\"{admintextpool.unknownareacodeDialogValidation}\" maxLength=\"32\"/>\n      </td></tr>\n      <tr>\n      <td>\n      <bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.teamDialogDescriptionLabel}\" />\n      </td>\n      <td>\n      <bite:TextArea ui:field=\"txtDescription\" width=\"100%\" height=\"80px\" maxLength=\"1000\" />\n      </td></tr>\n      </table>\n      </div>\n      <br/>     \n     <div class=\"{style.floating_right}\">\n      <bite:Button ui:field=\"bSave\" text=\"{admintextpool.dialogSave}\" size=\"Small\"/>\n      <bite:Button ui:field=\"bCancel\" text=\"{admintextpool.dialogCancel}\" size=\"Small\"/>\n      </div>\n      <div class=\"{style.floating_clear}\" />\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtSelectTeamMemberDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtSelectTeamMemberDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2021,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n\txmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n\txmlns:t=\"urn:import:at.a1ta.cuco.ui.common.client.ui.table\"\n    xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n    <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources' />\n    <ui:with field='admintextpool' type='at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool'/>\n\t<g:HTMLPanel>\n\t<bite:Label text=\"{admintextpool.teamSelectMemberDialog}\" />\n\t<div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n    <div class=\"{style.bite_moduleContent}\" style=\"height:100%;\">\n    <table class=\"{style.bite_form}\">\n    <div>\n    <tr>\n    <td><bite:InputBox ui:field=\"surName\" size=\"Medium\"/></td>\n    <td><bite:InputBox ui:field=\"ntAccount\" size=\"Medium\" /></td>\n    <td><bite:InputBox ui:field=\"oe\" size=\"Medium\"/></td>\n    <td><bite:Button ui:field=\"bSearch\" text=\"Suchen\" size=\"Small\"/></td>\n    </tr>\n    </div>\n    </table>\n    <table class=\"{style.bite_form}\">\n    <tr>\n      <td class=\"{style.bite_heightPlaceHolder}\"><t:DataTable ui:field=\"table\" styleName=\"{style.bite_dataTable}\" width =\"100%\" height=\"200px\" /></td>\n    </tr>\n    <tr>\n      <td class=\"{style.center}\" style=\"padding:5px;\"><bite:Button ui:field=\"add\" text=\"{admintextpool.teamButtonAdd}\" size=\"Small\"/>\n      <bite:Button ui:field=\"remove\" text=\"{admintextpool.teamButtonDelete}\" size=\"Small\"/></td>\n    </tr>\n    <tr>\n      <td class=\"{style.bite_heightPlaceHolder}\"><t:DataTable ui:field=\"table2\" styleName=\"{style.bite_dataTable}\" width =\"100%\" height=\"200px\"/></td>\n    </tr>\n    </table>\n    <div class=\"{style.floating_right}\" style=\"padding:2px;\">\n      <bite:Button ui:field=\"bSave\" text=\"{admintextpool.dialogUse}\" size=\"Small\"/>\n      <bite:Button ui:field=\"bCancel\" text=\"{admintextpool.dialogCancel}\" size=\"Small\"/>\n    </div>\n    <div class=\"{style.floating_clear}\" />\n    </div>\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtEditServiceDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtEditServiceDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 5666,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n             xmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n             xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n     <ui:with field=\"msg\" type=\"at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool\"/>\n     <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources'/>\n     <ui:with field='img' type='at.a1ta.bite.ui.client.bundle.images.ImageResources'/>\n\t\n\t<g:HTMLPanel>\n\t<bite:Label text=\"{msg.serviceDialogHeading}:\" />\n\t \n\t <div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n      <div class=\"{style.bite_moduleContent}\">\n      <bite:Label text=\"{msg.serviceDialogCpServicedata}:\" />\n      <table class=\"{style.bite_form}\">\n      <colgroup>\n          <col width=\"20%\" />\n          <col width=\"30%\" />\n          <col width=\"20%\" />\n          <col width=\"30%\" />\n        </colgroup>\n        <tr>\n        <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogFromLabel}:\"/></td>\n        <td><bite:DateBox ui:field=\"from\" size=\"Short\" /></td>\n        <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogToLabel}:\"/> </td>\n        <td><bite:DateBox ui:field=\"to\" size=\"Short\" /></td>\n        </tr>\n       <tr>\n       <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogNameLabel}:\"/></td>\n       <td colspan=\"3\"><bite:InputBox ui:field=\"name\" size=\"Long\" mandatoryValidation=\"true\" validationErrorMessage=\"{msg.serviceDialogValidation}\" /></td>\n       </tr>\n       <tr>\n       <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogDescription}:\"/></td>\n       <td colspan=\"3\"><bite:TextArea ui:field=\"description\" width=\"100%\" height=\"40px\" /></td>\n       </tr> \n       <tr>\n        <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogEmployeeinfo}:\"/></td>\n        <td colspan=\"3\"><bite:TextArea ui:field=\"employeeinfo\" width=\"100%\" height=\"40px\"/></td>\n       </tr> \n      </table>\n      </div>\n      \n      <div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n      <div class=\"{style.bite_moduleContent}\">\n      <bite:Label text=\"{msg.serviceDialogCpChargingdata}:\" />\n      <table class=\"{style.bite_form}\">\n      <colgroup>\n          <col width=\"17%\" />\n          <col width=\"5%\" />\n          <col width=\"1%\" />\n          <col width=\"34%\" />\n          <col width=\"5%\" />\n          <col width=\"25%\" />\n          <col width=\"13%\" />\n        </colgroup>\n         <tr>\n         \t<td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogCostsLabel}:\"/></td>\n         \t<td><bite:InputBox ui:field=\"cost\" size=\"Short\" mandatoryValidation=\"true\" validationErrorMessage=\"{msg.serviceDialogValidation}\" /></td>\n         \t<td><bite:Icon ui:field=\"iconInfo\" img=\"{img.iconInfoTiny}\"/></td>\n         \t<td class=\"{style.center}\"><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogMultiLabel}\"/></td>\n         \t<td><bite:InputBox ui:field=\"multi\" size=\"Short\"/></td>\n         \t<td class=\"{style.center}\"><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogProductcodeLabel}:\"/></td>\n         \t<td><bite:InputBox ui:field=\"productCode\" size=\"Medium\" mandatoryValidation=\"true\" validationErrorMessage=\"{msg.serviceDialogValidation}\" /></td>\n         </tr>\n      </table>\n      <table class=\"{style.bite_form}\">\n      <colgroup>\n          <col width=\"20%\" />\n          <col width=\"30%\" />\n          <col width=\"20%\" />\n          <col width=\"30%\" />\n        </colgroup>\n         <tr>\n         \t<td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogChargingtypeLabel}:\"/></td>\n         \t<td><bite:ListBox ui:field=\"chargingType\" width=\"100%\"/></td>\n         \t<td class=\"{style.center}\"><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogCredittypeLabel}:\"/></td>\n         \t<td><bite:ListBox ui:field=\"creditType\" width=\"100%\"/></td>\n         </tr>\n      </table>\n      </div>\n      \n      <div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n      <div class=\"{style.bite_moduleContent}\">\n      <bite:Label text=\"{msg.serviceDialogCpClarifydata}:\" />\n      <table class=\"{style.bite_form}\">\n      <colgroup>\n          <col width=\"20%\" />\n          <col width=\"80%\" />\n      </colgroup>\n         <tr>\n         <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogProductcodeLabel}:\"/></td>\n         <td><bite:InputBox ui:field=\"product\" size=\"Long\" /></td>\n         </tr>\n         <tr>\n         <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogReason1Label}:\"/></td>\n         <td><bite:InputBox ui:field=\"reason1\" size=\"Long\" /></td>\n         </tr>\n         <tr>\n         <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogReason2Label}:\"/></td>\n         <td><bite:InputBox ui:field=\"reason2\" size=\"Long\" /></td>\n         </tr>\n         <tr>\n         <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogReason3Label}:\"/></td>\n         <td> <bite:InputBox ui:field=\"reason3\" size=\"Long\" /></td>\n         </tr>\n         <tr>\n         <td><bite:Label styleName=\"{style.bite_text}\" text=\"{msg.serviceDialogResultLabel}:\"/></td>\n         <td><bite:InputBox ui:field=\"result\" size=\"Long\" /></td>\n         </tr>\n      </table>\n      </div>\n      \n      <div class=\"{style.floating_right}\">\n          <bite:Button ui:field=\"bSave\" text=\"{msg.dialogSave}\" size=\"Small\"/>\n          <bite:Button ui:field=\"bCancel\" text=\"{msg.dialogCancel}\" size=\"Small\"/>\n      </div>\n      <div class=\"{style.floating_clear}\" />\n\t</g:HTMLPanel>\n</ui:UiBinder>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtEditMessageDialog.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/dialog/GwtEditMessageDialog.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2949,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n\txmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n\txmlns:t=\"urn:import:at.a1ta.cuco.ui.common.client.ui.table\"\n    xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n    \n    <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources' />\n    <ui:with field='admintextpool' type='at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool'/>\n\n\t<g:HTMLPanel>\n\t<bite:Label text=\"{admintextpool.systemMessageHeader}\" />\n\t  <div class=\"{style.bite_moduleHeader}\" style=\"padding-top:5px;\" />\n      <div class=\"{style.bite_moduleContent}\">\n      <table class=\"{style.bite_form}\">\n       <colgroup>\n          <col width=\"20%\" />\n          <col width=\"40%\" />\n          <col width=\"40%\" />\n        </colgroup> \n      <tr>\n      <td><bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.smTitle}\" /></td>\n      <td colspan=\"2\"><bite:InputBox ui:field=\"title\" size=\"Long\" /></td>\n      </tr>\n      <tr>\n      <td><bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.smText}\" /></td>\n      <td colspan=\"2\"><bite:TextArea ui:field=\"txtText\" width=\"100%\" height=\"80px\" maxLength=\"1000\" /></td>\n      </tr>\n      <tr>\n          <td><bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.smValidity}\"/></td>\n          <td><bite:Label styleName=\"{style.bite_text}\" text=\"von\"/><bite:DateBox ui:field=\"from\" size=\"Short\" /></td>\n          <td><bite:Label styleName=\"{style.bite_text}\" text=\"bis\"/><bite:DateBox ui:field=\"to\" size=\"Short\" /></td>\n      </tr>\n      <tr>\n      <td><bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.smOptions}\"/></td>\n      <td><bite:CheckBox ui:field=\"checkBoxOneTime\" text=\"{admintextpool.smOptionsOneTime}\"/></td>\n      </tr>\n      <tr>\n      <td><bite:Label styleName=\"{style.bite_text}\"/></td>\n      <td><bite:CheckBox ui:field=\"checkBoxOnlyMenue\" text=\"{admintextpool.smOptionsOnlyMenue}\"/></td>\n      </tr>\n      <tr>\n      <td><bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.smRoles}\"/></td>\n      <td colspan=\"2\"><t:DataTable ui:field=\"roleStore\"/></td>\n      </tr>\n      <tr>\n      <td><bite:Label styleName=\"{style.bite_text}\"/></td>\n      <td></td>\n      <td style=\"padding-left:12%;\"><bite:Button ui:field=\"bRoles\" text=\"Rollen ausw\u00e4hlen\" size=\"Small\"/></td>\n      </tr>\n      <tr>\n      <td><bite:Label styleName=\"{style.bite_text}\" text=\"{admintextpool.smImageFile}\"/></td>\n      <td><bite:Button ui:field=\"bImage\" text=\"Bild ausw\u00e4hlen\" size=\"Small\"/></td>\n      </tr>\n      </table>\n      <div class=\"{style.floating_right}\">\n      <bite:Button ui:field=\"bSave\" text=\"{admintextpool.dialogSave}\" size=\"Small\"/>\n      <bite:Button ui:field=\"bCancel\" text=\"{admintextpool.dialogCancel}\" size=\"Small\"/>\n      </div>\n      <div class=\"{style.floating_clear}\" />\n      </div>\n      <br/>\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/portlet/AuthorityAdministrationComponent.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/portlet/AuthorityAdministrationComponent.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 558,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n\t\t\t\t\t\t xmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n\t\t\t\t\t\t xmlns:c=\"urn:import:com.google.gwt.user.cellview.client\"\n>\n\n\t<g:HTMLPanel>\n\t\t<g:TextBox ui:field=\"txtFilter\" />\n\t\t<c:CellTable ui:field=\"table\" />\n\t\t<c:SimplePager ui:field='pager' />\n\t\t<g:Button text=\"Neuer Eintrag\" ui:field=\"btnAdd\" />\n\t\t<g:Button text=\"Reset\" ui:field=\"btnReset\" />\n\t\t<g:Button text=\"Speichern\" ui:field=\"btnSave\" />\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/portlet/vip/VipSearchComponent.ui.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/webclient/cucosett/client/portlet/vip/VipSearchComponent.ui.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1961,
    "content": "<!DOCTYPE ui:UiBinder SYSTEM \"http://dl.google.com/gwt/DTD/xhtml.ent\">\n<ui:UiBinder xmlns:ui=\"urn:ui:com.google.gwt.uibinder\"\n             xmlns:g=\"urn:import:com.google.gwt.user.client.ui\"\n             xmlns:m=\"urn:import:at.a1ta.cuco.ui.common.client.ui.table\"\n             xmlns:bite=\"urn:import:at.a1ta.bite.ui.client.widget\">\n\n  <ui:with field='msg' type='at.a1ta.cuco.admin.ui.common.client.bundle.AdminCommonTextPool'/>\n  <ui:with field='style' type='at.a1ta.bite.ui.client.bundle.StyleResources'/>\n  <ui:with field='img' type='at.a1ta.bite.ui.client.bundle.images.ImageResources'/>\n\n\t<g:HTMLPanel>\n\t\t<div class=\"{style.bite_heightPlaceHolder}\" />\n    <div class=\"{style.bite_moduleContent}\">\n      <table class=\"{style.bite_form_flex}\">\n\t\t    <tr>\n\t\t      <td width=\"150px\">\n\t\t        <table>\n\t\t          <tr>\n\t\t            <td><bite:Label text=\"{msg.vipSearchItem}:\"/></td>\n                <td><bite:InfoIcon text=\"{msg.vipSearchTooltip}\" /></td>\n              </tr>\n            </table>\n          </td>\n          <td><bite:InputBox ui:field=\"txtSearch\" size=\"Long\" /></td>\n          <td><bite:Button ui:field=\"btnSearch\" text=\"{msg.vipBtnSearch}\" size=\"Small\" /></td>\n\t\t\t    <td><bite:Button ui:field=\"btnExport\" text=\"{msg.vipBtnExport}\" size=\"Small\" /></td>\n        </tr>\n      </table>\n      <table class=\"{style.bite_form_flex}\">\n        <tr>\n          <td width=\"150px\"><bite:Label text=\"{msg.vipFrom}:\" /></td>\n          <td><bite:DateBox ui:field=\"dateFrom\" size=\"Long\" /></td>\n          <td><bite:Label text=\"{msg.vipTo}:\" /></td>\n          <td><bite:DateBox ui:field=\"dateTo\" size=\"Long\" /></td>\n        </tr>\n        <tr>\n          <td width=\"150px\"><bite:Label text=\"{msg.vipStatus}:\" /></td>\n          <td colspan=\"3\"><bite:ListBox ui:field=\"comboVipStatus\" /></td>\n        </tr>\n      </table>\n    </div>\n    <div class=\"{style.bite_moduleContent}\"> \n\t\t\t<m:DataTable ui:field=\"vipHistoryTable\" />\n    </div>\n\t</g:HTMLPanel>\n</ui:UiBinder>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/cuco/admin/ui/common/CuCoAdminCommon.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/cuco/admin/ui/common/CuCoAdminCommon.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 446,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module>\n  <inherits name=\"at.a1ta.framework.ui.Framework\"/>\n  <inherits name=\"at.a1ta.bite.core.BiteCore\"/>\n  <inherits name=\"at.a1ta.bite.ui.BiteUi\"/>\n  <inherits name=\"at.a1ta.cuco.ui.common.CuCoCommon\"/>\n  <inherits name=\"at.a1ta.framework.gxt.GxtUtilities\"/>\n</module>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/resources/at/a1ta/framework/gxt/GxtUtilities.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/resources/at/a1ta/framework/gxt/GxtUtilities.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1243,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module>\n  <inherits name=\"com.extjs.gxt.ui.GXT\"/>\n  <inherits name=\"com.extjs.gxt.themes.Themes\"/>\n  <inherits name=\"at.a1ta.framework.ui.Framework\"/>\n  <inherits name=\"at.a1ta.cuco.admin.ui.common.CuCoAdminCommon\"/>\n\n  <stylesheet src=\"styles/gxt-all.css\"/>\n  <stylesheet src=\"styles/gxt-gray.css\"/>\n  <stylesheet src=\"styles/gxt-spinner.css\"/>\n  \n  <replace-with class=\"at.a1ta.framework.gxt.ui.PopupImplExtended\">\n    <when-type-is class=\"com.google.gwt.user.client.ui.impl.PopupImpl\"/>\n  </replace-with>\n  \n  <replace-with class=\"at.a1ta.framework.gxt.ui.PopupImplMozillaExtended\">\n    <when-type-is class=\"com.google.gwt.user.client.ui.impl.PopupImpl\"/>\n    <any>\n      <when-property-is name=\"user.agent\" value=\"gecko\"/>\n      <when-property-is name=\"user.agent\" value=\"gecko1_8\"/>\n    </any>\n  </replace-with>\n  \n  <replace-with class=\"at.a1ta.framework.gxt.ui.PopupImplIE6Extended\">\n    <when-type-is class=\"com.google.gwt.user.client.ui.impl.PopupImpl\"/>\n    <when-property-is name=\"user.agent\" value=\"ie6\"/>\n  </replace-with>\n  \n  <source path=\"ui\"/>\n</module>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/MarkableCheckbox.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/MarkableCheckbox.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 318,
    "content": "package at.a1ta.webclient.cucosett.client.ui;\n\nimport com.google.gwt.user.client.ui.CheckBox;\n\npublic class MarkableCheckbox<B> extends CheckBox {\n\n  private B marker;\n\n  public MarkableCheckbox(B marker) {\n    super(marker.toString());\n    this.marker = marker;\n  }\n\n  public B getMarker() {\n    return marker;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/SystemMessageGrid.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/SystemMessageGrid.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 10335,
    "content": "package at.a1ta.webclient.cucosett.client.ui;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.data.PagingModelMemoryProxy;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Events;\nimport com.extjs.gxt.ui.client.event.SelectionChangedEvent;\nimport com.extjs.gxt.ui.client.event.SelectionChangedListener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.event.WindowEvent;\nimport com.extjs.gxt.ui.client.event.WindowListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.ToolBar;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.logical.shared.SelectionEvent;\nimport com.google.gwt.event.logical.shared.SelectionHandler;\nimport com.google.gwt.i18n.client.DateTimeFormat;\nimport com.google.gwt.user.client.ui.SimplePanel;\n\nimport at.a1ta.bite.core.shared.dto.systemmessage.SystemMessage;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.ui.SystemMessagePreviewComponent;\nimport at.a1ta.framework.gxt.ui.LinkCellRenderer;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.gxt.ui.Util;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.service.ServiceLocator;\nimport at.a1ta.framework.ui.client.ui.dialog.DialogPanel;\nimport at.a1ta.framework.ui.client.util.Validator;\nimport at.a1ta.webclient.cucosett.client.dialog.EditMessageDialog;\n\npublic class SystemMessageGrid extends SimplePanel implements SelectionHandler<Integer> {\n\n  private final int tabIndex;\n\n  private final boolean activeMsg;\n\n  private ToolBar toolbar = new ToolBar();\n\n  private PagingGridContainer<ListStore<ModelData>, ModelData> gridContainer;\n\n  private Button newMessageBtn = new Button();\n\n  private Button copyBtn = new Button();\n\n  private EditButtonListener editHandler = new EditButtonListener();\n\n  private CopyButtonListener copyHandler = new CopyButtonListener();\n\n  private PreviewButtonListener prevHandler = new PreviewButtonListener();\n\n  private IconButtonRenderer prevRenderer = new IconButtonRenderer(prevHandler,\n      at.a1ta.cuco.ui.common.client.bundle.CuCoUI.IMAGES.icon_preview());\n\n  private ImageRenderer imgRenderer = new ImageRenderer(0, 70);\n\n  private DateTimeFormat fmt = DateTimeFormat.getFormat(\"dd.MM.yyyy\");\n\n  private HideWindowListener hideListener = new HideWindowListener();\n\n  private PagingModelMemoryProxy dataProxy;\n\n  private ListStore<ModelData> store;\n\n  private boolean initialized;\n\n  private boolean dirty;\n\n  public SystemMessageGrid(int tabIndex, boolean activeMsg) {\n    this.tabIndex = tabIndex;\n    this.activeMsg = activeMsg;\n  }\n\n  @Override\n  public void onSelection(SelectionEvent<Integer> event) {\n    if (event.getSelectedItem() != tabIndex) {\n      deactviate();\n    } else {\n      if (!initialized) {\n        init();\n        load();\n      }\n      activate();\n    }\n  }\n\n  private void load() {\n    if (activeMsg) {\n      ServiceLocator.getSystemMessageService().loadUnexpiredMessages(createCallback());\n    } else {\n      ServiceLocator.getSystemMessageService().loadExpiredMessages(createCallback());\n    }\n  }\n\n  private BaseAsyncCallback<List<SystemMessage>> createCallback() {\n    return new BaseAsyncCallback<List<SystemMessage>>() {\n\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void onSuccess(List<SystemMessage> result) {\n        List<BaseModelData> models = new ArrayList<BaseModelData>();\n        for (SystemMessage systemMessage : result) {\n          BaseModelData m = new BaseModelData();\n          m.set(\"id\", systemMessage.getId() + \"\");\n          if (Validator.isNullOrEmpty(systemMessage.getMessageContent().getImageUri())) {\n            m.set(\"imgUri\", \"\");\n          } else {\n            m.set(\"imgUri\", Util.getExtImgPath() + systemMessage.getMessageContent().getImageUri());\n          }\n          m.set(\"title\", systemMessage.getMessageContent().getTitle());\n          m.set(\n              \"validity\",\n              getFmt().format(systemMessage.getPeriodOfValidity().getValidFrom()) + \" - \"\n                  + getFmt().format(systemMessage.getPeriodOfValidity().getValidUntil()));\n          m.set(\"preview\", systemMessage.getId() + \"\");\n          models.add(m);\n        }\n\n        ((List<BaseModelData>) dataProxy.getData()).clear();\n        ((List<BaseModelData>) dataProxy.getData()).addAll(models);\n\n        gridContainer.first();\n      }\n    };\n  }\n\n  private final void activate() {\n    getCopy().setEnabled(false);\n    if (dirty) {\n      load();\n    }\n  }\n\n  private final void deactviate() {\n    if (initialized) {\n      gridContainer.getGrid().getSelectionModel().deselectAll();\n    }\n  }\n\n  private void init() {\n    initialized = true;\n\n    newMessageBtn.setText(AdminUI.ADMINCOMMONTEXTPOOL.smNewMessage());\n    newMessageBtn.addSelectionListener(editHandler);\n    copyBtn.setText(AdminUI.ADMINCOMMONTEXTPOOL.smCopy());\n    copyBtn.addSelectionListener(copyHandler);\n\n    dataProxy = new PagingModelMemoryProxy(new ArrayList<BaseModelData>());\n    BasePagingLoader<PagingLoadResult<BaseModelData>> loader = new BasePagingLoader<PagingLoadResult<BaseModelData>>(dataProxy);\n    loader.setRemoteSort(true);\n    store = new ListStore<ModelData>(loader);\n\n    gridContainer = new PagingGridContainer<ListStore<ModelData>, ModelData>(store, createColumnModel(), 10, 400);\n    gridContainer.getGrid().getSelectionModel().addSelectionChangedListener(new SelectionChangedListener<ModelData>() {\n\n      @Override\n      public void selectionChanged(SelectionChangedEvent<ModelData> se) {\n        getCopy().setEnabled(se.getSelectedItem() != null);\n      }\n    });\n\n    fillToolBar(toolbar);\n    gridContainer.setTopComponent(toolbar);\n    add(gridContainer);\n  }\n\n  private void fillToolBar(ToolBar toolbar) {\n    if (activeMsg) {\n      toolbar.add(getNewMessage());\n    }\n    toolbar.add(getCopy());\n  }\n\n  public Button getNewMessage() {\n    return newMessageBtn;\n  }\n\n  public Button getCopy() {\n    return copyBtn;\n  }\n\n  public CopyButtonListener getCopyHandler() {\n    return copyHandler;\n  }\n\n  public PreviewButtonListener getPrevHandler() {\n    return prevHandler;\n  }\n\n  public IconButtonRenderer getPrevRenderer() {\n    return prevRenderer;\n  }\n\n  public ImageRenderer getImgRenderer() {\n    return imgRenderer;\n  }\n\n  public DateTimeFormat getFmt() {\n    return fmt;\n  }\n\n  public HideWindowListener getHideListener() {\n    return hideListener;\n  }\n\n  private class HideWindowListener extends WindowListener {\n\n    @Override\n    public void handleEvent(WindowEvent e) {\n      if (e.getType() == Events.Hide) {\n        load();\n        dirty = true;\n      }\n    }\n  }\n\n  private class EditButtonListener extends SelectionListener<ButtonEvent> {\n\n    @Override\n    public void componentSelected(ButtonEvent ce) {\n      Button button = ce.getButton();\n\n      long id = 0;\n      if (button != newMessageBtn) {\n        id = Long.parseLong(button.getText());\n      }\n      EditMessageDialog p = new EditMessageDialog(AdminUI.ADMINCOMMONTEXTPOOL.smEditMessage(), id, false);\n      p.addWindowListener(hideListener);\n      p.show();\n    }\n  }\n\n  private class CopyButtonListener extends SelectionListener<ButtonEvent> {\n\n    @Override\n    public void componentSelected(ButtonEvent ce) {\n      ModelData data = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n      if (data != null) {\n        long id = Long.parseLong((String) data.get(\"id\"));\n        EditMessageDialog p = new EditMessageDialog(AdminUI.ADMINCOMMONTEXTPOOL.smEditMessage(), id, true);\n        p.addWindowListener(hideListener);\n        p.show();\n      }\n    }\n  }\n\n  private class PreviewButtonListener extends SelectionListener<ButtonEvent> {\n\n    @Override\n    public void componentSelected(ButtonEvent ce) {\n      Button button = ce.getButton();\n\n      long id = 0;\n      id = Long.parseLong(button.getItemId());\n      DialogPanel dialog = new DialogPanel();\n      dialog.setCaption(AdminUI.ADMINCOMMONTEXTPOOL.smPreview());\n      dialog.setSize(600, 500);\n      dialog.add(new SystemMessagePreviewComponent(id));\n      dialog.center();\n    }\n  }\n\n  private ColumnModel createColumnModel() {\n    List<ColumnConfig> columns = new ArrayList<ColumnConfig>();\n    ColumnConfig idColumn = new ColumnConfig(\"id\", AdminUI.ADMINCOMMONTEXTPOOL.smId(), 100);\n    idColumn.setMenuDisabled(true);\n    if (activeMsg) {\n      idColumn.setRenderer(new LinkCellRenderer(new ClickHandler() {\n\n        @Override\n        public void onClick(ClickEvent event) {\n          Long id = Long.parseLong((String) gridContainer.getGrid().getSelectionModel().getSelectedItem().get(\"id\"));\n          EditMessageDialog p = new EditMessageDialog(AdminUI.ADMINCOMMONTEXTPOOL.smEditMessage(), id, false);\n          p.addWindowListener(hideListener);\n          p.show();\n        }\n      }));\n    }\n    columns.add(idColumn);\n\n    ColumnConfig imgColumn = new ColumnConfig(\"imgUri\", AdminUI.ADMINCOMMONTEXTPOOL.smImage(), 100);\n    imgColumn.setMenuDisabled(true);\n    imgColumn.setRenderer(getImgRenderer());\n    columns.add(imgColumn);\n\n    ColumnConfig titleColumn = new ColumnConfig(\"title\", AdminUI.ADMINCOMMONTEXTPOOL.smTitle(), 100);\n    titleColumn.setMenuDisabled(true);\n    columns.add(titleColumn);\n\n    ColumnConfig valColumn = new ColumnConfig(\"validity\", AdminUI.ADMINCOMMONTEXTPOOL.smValidity(), 100);\n    valColumn.setMenuDisabled(true);\n    columns.add(valColumn);\n\n    ColumnConfig prevColumn = new ColumnConfig(\"preview\", AdminUI.ADMINCOMMONTEXTPOOL.smPreview(), 100);\n    prevColumn.setMenuDisabled(true);\n    prevColumn.setRenderer(getPrevRenderer());\n    columns.add(prevColumn);\n\n    return new ColumnModel(columns);\n  }\n\n  public boolean isDirty() {\n    return dirty;\n  }\n\n  public void setDirty(boolean dirty) {\n    this.dirty = dirty;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/ServiceImageRenderer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/ServiceImageRenderer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1764,
    "content": "package at.a1ta.webclient.cucosett.client.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.Events;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnData;\nimport com.extjs.gxt.ui.client.widget.grid.Grid;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.ui.Image;\n\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.cuco.admin.ui.common.client.ui.PortletHelper;\nimport at.a1ta.cuco.core.shared.dto.Service;\n\npublic class ServiceImageRenderer extends ImageRenderer {\n\n  public ServiceImageRenderer(int type, Listener<BaseEvent> listener) {\n    super(type, listener);\n  }\n\n  @Override\n  public Object render(final ModelData model, String property, ColumnData config, final int rowIndex, final int colIndex, ListStore<ModelData> store, Grid<ModelData> grid) {\n    Service service = (Service) model.get(\"bean\");\n    if (!service.getTicketcount().equals(0L)) {\n      return null;\n    }\n\n    Image img = null;\n\n    if (type == DELETE) {\n      img = new Image(UI.IMAGES.iconDelete());\n    }\n\n    if (img == null) {\n      throw new RuntimeException(\"Invalid Imagetype: \" + type);\n    }\n\n    img.addStyleName(UI.STYLES.cursor_pointer());\n    img.addClickHandler(new ClickHandler() {\n\n      @Override\n      public void onClick(ClickEvent event) {\n        listener.handleEvent(new BaseEvent(Events.Select));\n      }\n    });\n\n    if (tooltip != null) {\n      return PortletHelper.createInfoWidget(img, tooltip);\n    }\n    return img;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/ImageRenderer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/ImageRenderer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1121,
    "content": "package at.a1ta.webclient.cucosett.client.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnData;\nimport com.extjs.gxt.ui.client.widget.grid.Grid;\nimport com.extjs.gxt.ui.client.widget.grid.GridCellRenderer;\nimport com.google.gwt.user.client.ui.Image;\n\nimport at.a1ta.framework.ui.client.util.Validator;\n\npublic class ImageRenderer implements GridCellRenderer<ModelData> {\n  private int width;\n  private int height;\n\n  public ImageRenderer(int w, int h) {\n    width = w;\n    height = h;\n  }\n\n  @Override\n  public Object render(final ModelData model, String property, ColumnData config, final int rowIndex, final int colIndex, ListStore<ModelData> store, Grid<ModelData> grid) {\n\n    Image img = new Image((String) model.get(property));\n    if (width != 0) {\n      img.setWidth((width - 3) + \"px\");\n    }\n    if (height != 0) {\n      img.setHeight((height - 3) + \"px\");\n    }\n    if (Validator.isNullOrEmpty(img.getUrl())) {\n      img.setVisible(false);\n    } else {\n      img.setVisible(true);\n    }\n    return img;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/SettingsCell.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/ui/SettingsCell.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 309,
    "content": "package at.a1ta.webclient.cucosett.client.ui;\n\nimport com.google.gwt.user.client.ui.FlowPanel;\n\npublic class SettingsCell extends FlowPanel {\n    Long segment;\n    Long category;\n\n    public SettingsCell(Long segment, Long category) {\n        this.segment = segment;\n        this.category = category;\n    }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditUnknownAreasCodeDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditUnknownAreasCodeDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4138,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.logging.Logger;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.TextArea;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddUnknownAreaCodeEvent;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\n\npublic class EditUnknownAreasCodeDialog extends Composite {\n\n  // @formatter:off\n  private static EditUnknownAreasCodeDialogUiBinder uiBinder = GWT.create(EditUnknownAreasCodeDialogUiBinder.class);\n\n  private static Logger logger = Logger.getLogger(EditUnknownAreasCodeDialog.class.getName());\n\n  interface EditUnknownAreasCodeDialogUiBinder extends UiBinder<Widget, EditUnknownAreasCodeDialog> {}\n\n  private static EditUnknownAreasCodeDialog _instance = null;\n\n  private UnknownAreaCode code;\n\n  private PopupFrame popupFrame;\n\n  @UiField\n  InputBox areaCode;\n  @UiField\n  TextArea txtDescription;\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n\n  public static EditUnknownAreasCodeDialog getInstance() {\n    if (_instance == null) {\n      _instance = new EditUnknownAreasCodeDialog();\n    }\n    _instance.areaCode.setValue(\"\");\n    _instance.txtDescription.setValue(\"\");\n    return _instance;\n  }\n\n  public static EditUnknownAreasCodeDialog getInstance(UnknownAreaCode code) {\n    EditUnknownAreasCodeDialog instance = getInstance();\n    instance.setUnknownAreaCode(code);\n    return instance;\n  }\n\n  private void setUnknownAreaCode(UnknownAreaCode code) {\n    this.code = code;\n    areaCode.setValue(code.getAreaCode());\n    txtDescription.setValue(code.getDescription());\n  }\n\n  public EditUnknownAreasCodeDialog() {\n    initWidget(uiBinder.createAndBindUi(this));\n    popupFrame = new PopupFrame(this, 365, 200);\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        cancel();\n      }\n\n      private void cancel() {\n        popupFrame.close();\n      }\n    });\n\n  }\n\n  protected void save() {\n    if (!areaCode.validate() || !txtDescription.validate()) {\n      Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeDialogValidation());\n      return;\n    }\n    Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeMessageSave());\n\n    if (code == null) {\n      code = new UnknownAreaCode(areaCode.getValue(), txtDescription.getValue());\n    } else {\n      code.setAreaCode(areaCode.getValue());\n      code.setDescription(txtDescription.getValue());\n    }\n    CommonServiceLocator.getUnknownAreaCodeServlet().saveUnknownAreaCode(code, new BaseAsyncCallback<UnknownAreaCode>() {\n\n      @Override\n      public void onSuccess(UnknownAreaCode result) {\n        PortletEventManager.fireEvent(new AddUnknownAreaCodeEvent(code));\n        popupFrame.close();\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.messageboxSaveError());\n      }\n    });\n  }\n\n  public void show(UnknownAreaCode cd) {\n    if (cd == null) {\n      areaCode.clear();\n      txtDescription.clear();\n    } else {\n      code = cd;\n      areaCode.setText(code.getAreaCode());\n      txtDescription.setText(code.getDescription());\n    }\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  public void hide() {\n    popupFrame.hide();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtSelectServiceDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtSelectServiceDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9186,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.dto.ServiceModel;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddServicesEvent;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.cuco.ui.common.client.ui.ClickListener;\nimport at.a1ta.cuco.ui.common.client.ui.DoubleClickListener;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class GwtSelectServiceDialog extends Composite {\n\n  private static GwtSelectServiceDialogUiBinder uiBinder = GWT.create(GwtSelectServiceDialogUiBinder.class);\n\n  interface GwtSelectServiceDialogUiBinder extends UiBinder<Widget, GwtSelectServiceDialog> {}\n\n  private static GwtSelectServiceDialog _instance = null;\n\n  @UiField(provided = true)\n  DataTable<ServiceModel> table;\n  @UiField\n  InputBox service;\n  @UiField\n  Button add;\n  @UiField\n  Button remove;\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n  private Team team = null;\n  @UiField\n  Button bSearch;\n\n  @UiField(provided = true)\n  DataTable<ServiceModel> table2;\n\n  private ModelData<ServiceModel> modeldata;\n  private PopupFrame popupFrame;\n  private WaitingWidget waitingWidget;\n\n  public static synchronized GwtSelectServiceDialog getInstance() {\n    if (_instance == null) {\n      _instance = new GwtSelectServiceDialog();\n    }\n    return _instance;\n  }\n\n  public static GwtSelectServiceDialog getInstance(Team team) {\n    GwtSelectServiceDialog instance = getInstance();\n    instance.team = team;\n    return instance;\n  }\n\n  public GwtSelectServiceDialog() {\n    initTable();\n    initWidget(uiBinder.createAndBindUi(this));\n    renderSelectionGrid();\n    renderTeamGrid();\n    renderMoveButtons();\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        cancel();\n      }\n\n      private void cancel() {\n        popupFrame.close();\n      }\n    });\n\n    bSearch.addClickHandler(new ClickHandler() {\n\n      @Override\n      public void onClick(ClickEvent event) {\n        search();\n      }\n    });\n\n    popupFrame = new PopupFrame(this, 600, 570);\n  }\n\n  private void initTable() {\n    waitingWidget = new WaitingWidget();\n    table = new DataTable<ServiceModel>(createColumns());\n    table.enablePaging(10);\n    table.setWidth(\"550px\");\n    table.setVisible(true);\n    table2 = new DataTable<ServiceModel>(createColumns());\n    table2.enablePaging(10);\n    table2.setWidth(\"550px\");\n    table2.setVisible(true);\n  }\n\n  private ArrayList<Column<ServiceModel>> createColumns() {\n    ArrayList<Column<ServiceModel>> columns = new ArrayList<Column<ServiceModel>>();\n    columns.add(new Column<ServiceModel>(\"service\", AdminUI.ADMINCOMMONTEXTPOOL.teamService(), \"70%\"));\n    columns.add(new Column<ServiceModel>(\"costs\", AdminUI.ADMINCOMMONTEXTPOOL.teamCosts(), \"30%\"));\n    return columns;\n  }\n\n  public void renderSelectionGrid() {\n    table.addClickListener(new ClickListener<ServiceModel>() {\n\n      @Override\n      public void onClick(ModelData<ServiceModel> data) {\n        if (data != null) {\n          modeldata = data;\n          add.enable();\n        } else {\n          add.disable();\n        }\n      }\n    });\n\n    table.addDoubleClickListener(new DoubleClickListener<ServiceModel>() {\n\n      @Override\n      public void onDoubleClick(ModelData<ServiceModel> data) {\n        add.disable();\n        table2.getStore().add(data);\n        ArrayList<ModelData<ServiceModel>> changed = new ArrayList<ModelData<ServiceModel>>();\n        changed.addAll(table.getStore().getAll());\n        table.getStore().clear();\n        changed.remove(data);\n        table.getStore().add(changed);\n        table2.setVisible(true);\n      }\n    });\n  }\n\n  public void renderTeamGrid() {\n    table2.addClickListener(new ClickListener<ServiceModel>() {\n\n      @Override\n      public void onClick(ModelData<ServiceModel> data) {\n        if (data != null) {\n          modeldata = data;\n          remove.enable();\n        } else {\n          remove.disable();\n        }\n      }\n    });\n\n    table2.addDoubleClickListener(new DoubleClickListener<ServiceModel>() {\n\n      @Override\n      public void onDoubleClick(ModelData<ServiceModel> data) {\n        remove.disable();\n        ArrayList<ModelData<ServiceModel>> changed = new ArrayList<ModelData<ServiceModel>>();\n        changed.addAll(table2.getStore().getAll());\n        table2.getStore().clear();\n        changed.remove(data);\n        table2.getStore().add(changed);\n      }\n    });\n  }\n\n  public void init() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n    table.getStore().clear();\n    table2.getStore().clear();\n    SettingsServiceLocator.getTeamServlet().getNotLinkedServices(team.getId(), new BaseAsyncCallback<ArrayList<Service>>() {\n      @Override\n      public void onSuccess(ArrayList<Service> result) {\n        ArrayList<ModelData<ServiceModel>> results = new ArrayList<ModelData<ServiceModel>>();\n        for (Service service : result) {\n          ServiceModel sm = new ServiceModel(service);\n          ModelData<ServiceModel> model = new ModelData<ServiceModel>(sm);\n          model.put(\"bean\", service);\n          model.put(\"service\", service.getName());\n          model.put(\"costs\", service.getCosts());\n          results.add(model);\n        }\n        table.getStore().add(results);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  public void search() {\n    String str = \"%\" + service.getText() + \"%\";\n    SettingsServiceLocator.getTeamServlet().getService(str, new BaseAsyncCallback<ArrayList<Service>>() {\n\n      @Override\n      public void onSuccess(ArrayList<Service> result) {\n        table.getStore().clear();\n        ArrayList<ModelData<ServiceModel>> results = new ArrayList<ModelData<ServiceModel>>();\n        for (Service service : result) {\n          ServiceModel sm = new ServiceModel(service);\n          ModelData<ServiceModel> model = new ModelData<ServiceModel>(sm);\n          model.put(\"bean\", service);\n          model.put(\"service\", service.getName());\n          model.put(\"costs\", service.getCosts());\n          results.add(model);\n        }\n        table.getStore().add(results);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  public void show() {\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  public void renderMoveButtons() {\n\n    add.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        if (modeldata == null) {\n          return;\n        }\n        table2.getStore().add(modeldata);\n        table2.update();\n        modeldata = null;\n        add.disable();\n      }\n    });\n    add.disable();\n    remove.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        if (modeldata == null) {\n          return;\n        }\n        ArrayList<ModelData<ServiceModel>> changed = new ArrayList<ModelData<ServiceModel>>();\n        changed.addAll(table2.getStore().getAll());\n        table2.getStore().clear();\n        changed.remove(modeldata);\n        table2.getStore().add(changed);\n        remove.disable();\n      }\n    });\n    remove.disable();\n  }\n\n  public void save() {\n    ArrayList<Long> serviceIds = new ArrayList<Long>();\n    List<ServiceModel> services = table2.getStore().getBeans();\n    for (ServiceModel model : services) {\n      Service service = model.getBean();\n      serviceIds.add(service.getId());\n    }\n\n    SettingsServiceLocator.getTeamServlet().addServices(team.getId(), serviceIds, new BaseAsyncCallback<RpcStatus>() {\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void onSuccess(RpcStatus result) {\n        PortletEventManager.fireEvent(new AddServicesEvent(table2.getStore().getBeans()));\n        popupFrame.close();\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.teamAddServiceError());\n      }\n    });\n\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtEditServiceDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtEditServiceDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9184,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.i18n.client.NumberFormat;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.systemmessage.PeriodOfValidity;\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.DateBox;\nimport at.a1ta.bite.ui.client.widget.Icon;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.ListBox;\nimport at.a1ta.bite.ui.client.widget.TextArea;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class GwtEditServiceDialog extends Composite {\n\n  // @formatter:off\n  private static GwtEditServiceDialogUiBinder uiBinder = GWT.create(GwtEditServiceDialogUiBinder.class);\n\n  interface GwtEditServiceDialogUiBinder extends UiBinder<Widget, GwtEditServiceDialog> {}\n\n  @UiField\n  InputBox name;\n  @UiField\n  InputBox cost;\n  @UiField\n  InputBox product;\n  @UiField\n  InputBox reason1;\n  @UiField\n  InputBox reason2;\n  @UiField\n  InputBox reason3;\n  @UiField\n  InputBox result;\n  @UiField\n  InputBox multi;\n  @UiField\n  InputBox productCode;\n\n  @UiField\n  TextArea description;\n  @UiField\n  TextArea employeeinfo;\n\n  @UiField\n  Icon iconInfo;\n\n  @UiField\n  ListBox<ChargingType> chargingType;\n  @UiField\n  ListBox<CreditType> creditType;\n\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n\n  @UiField\n  DateBox from;\n  @UiField\n  DateBox to;\n\n  // @formatter:on\n\n  private static GwtEditServiceDialog _instance = null;\n\n  private Service service = null;\n\n  private NumberFormat decimal = NumberFormat.getFormat(\"0.00\");\n  private PopupFrame popupFrame;\n\n  public static GwtEditServiceDialog getInstance() {\n    if (_instance == null) {\n      _instance = new GwtEditServiceDialog();\n    }\n    _instance.name.setValue(null);\n    _instance.description.setValue(null);\n    _instance.from.setValue(null);\n    _instance.to.setValue(null);\n    _instance.cost.setValue(null);\n    _instance.multi.setValue(null);\n    _instance.productCode.setValue(null);\n    _instance.product.setValue(null);\n    _instance.reason1.setValue(null);\n    _instance.reason2.setValue(null);\n    _instance.result.setValue(null);\n    _instance.employeeinfo.setValue(null);\n    return _instance;\n  }\n\n  public static GwtEditServiceDialog getInstance(Service service) {\n    GwtEditServiceDialog instance = getInstance();\n    instance.setService(service);\n    return instance;\n  }\n\n  private void setService(Service service) {\n    this.service = service;\n    _instance.name.setValue(service.getName());\n    _instance.description.setValue(service.getComment());\n    _instance.from.setValue(service.getValidity().getValidFrom());\n    _instance.to.setValue(service.getValidity().getValidUntil());\n    _instance.cost.setValue(decimal.format(service.getCosts()) + \" \u20ac\");\n    _instance.multi.setValue(service.getMulti().toString());\n    _instance.productCode.setValue(service.getProductCode());\n    _instance.product.setValue(service.getProduct());\n    _instance.reason1.setValue(service.getReason1());\n    _instance.reason2.setValue(service.getReason2());\n    _instance.result.setValue(service.getResult());\n    _instance.employeeinfo.setValue(service.getEmployeeinfo());\n  }\n\n  public GwtEditServiceDialog() {\n    initWidget(uiBinder.createAndBindUi(this));\n    popupFrame = new PopupFrame(this, 650, 500);\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        cancel();\n      }\n\n      private void cancel() {\n        popupFrame.close();\n      }\n    });\n    iconInfo.setText(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogCostsTooltip());\n  }\n\n  protected void save() {\n    if (!name.validate() || !productCode.validate() || !cost.validate() || !description.validate() || !employeeinfo.validate() || !multi.validate() || !product.validate() || !reason1.validate()\n        || !reason2.validate() || !reason3.validate() || !result.validate()) {\n      Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogValidation());\n      return;\n    }\n\n    if (service == null) {\n      service = new Service();\n    }\n    service.setCreditType(creditType.getSelectedValue());\n    service.setName(name.getValue());\n    service.setProduct(product.getValue());\n    service.setProductCode(productCode.getValue());\n    service.setReason1(reason1.getValue());\n    service.setReason2(reason2.getValue());\n    service.setReason3(reason3.getValue());\n    service.setResult(result.getValue());\n    service.setValidity(new PeriodOfValidity(from.getValue(), to.getValue()));\n\n    service.setChargingType(chargingType.getSelectedValue());\n    service.setComment(description.getValue());\n    if (employeeinfo.getValue() != null) {\n      service.setEmployeeinfo(employeeinfo.getValue().replaceAll(\"\\n\", \"<br>\"));\n    }\n    try {\n      service.setCosts(decimal.parse(cost.getValue()));\n    } catch (NumberFormatException e) {\n      popupFrame.close();\n      Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogValidationCosts());\n      return;\n    }\n    try {\n      if (!multi.getValue().isEmpty()) {\n        service.setMulti(new Long(multi.getValue()));\n      } else {\n        service.setMulti(null);\n      }\n    } catch (NumberFormatException e) {\n      popupFrame.close();\n      Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogValidationMulti());\n      return;\n    }\n\n    CommonServiceLocator.getServiceServlet().saveService(service, new BaseAsyncCallback<Service>() {\n\n      @Override\n      public void onSuccess(Service result) {\n        PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.UPDATE_SERVICES));\n        popupFrame.close();\n\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.messageboxSaveError());\n        popupFrame.close();\n      }\n    });\n  }\n\n  protected void hide() {\n    popupFrame.hide();\n  }\n\n  public void onShow() {\n    SettingsServiceLocator.getCreditTypeServlet().getAllCreditTypes(new BaseAsyncCallback<ArrayList<CreditType>>() {\n\n      @Override\n      public void onSuccess(ArrayList<CreditType> result) {\n        for (CreditType ct : result) {\n          creditType.addItem(ct.getName(), ct);\n        }\n        creditType.setEnabled(true);\n      }\n    });\n\n    SettingsServiceLocator.getChargingTypeServlet().getAllChargingTypes(new BaseAsyncCallback<List<ChargingType>>() {\n\n      @Override\n      public void onSuccess(List<ChargingType> result) {\n        for (ChargingType ct : result) {\n          chargingType.addItem(ct.getName(), ct);\n        }\n        chargingType.setEnabled(true);\n      }\n    });\n  }\n\n  public void show(Service service) {\n    if (service == null) {\n      name.clear();\n      description.clear();\n      from.setValue(null);\n      to.setValue(null);\n      cost.clear();\n      multi.clear();\n      productCode.clear();\n      product.clear();\n      reason1.clear();\n      reason2.clear();\n      reason3.clear();\n      result.clear();\n      employeeinfo.clear();\n      creditType.setSelectedIndex(0);\n      chargingType.setSelectedIndex(0);\n    } else {\n      chargingType.clear();\n      creditType.clear();\n      this.service = service;\n      name.setValue(service.getName());\n      description.setValue(service.getComment());\n      from.setValue(service.getValidity().getValidFrom());\n      to.setValue(service.getValidity().getValidUntil());\n      cost.setValue(service.getCosts().toString());\n      multi.setValue(service.getMulti().toString());\n      productCode.setValue(service.getProductCode());\n      product.setValue(service.getProduct());\n      reason1.setValue(service.getReason1());\n      reason2.setValue(service.getReason2());\n      reason3.setValue(service.getReason3());\n      reason3.setEnabled(false);\n      result.setValue(service.getResult());\n      employeeinfo.setValue(service.getEmployeeinfo());\n      chargingType.addItem(service.getChargingType().getName(), service.getChargingType());\n      creditType.addItem(service.getCreditType().getName(), service.getCreditType());\n    }\n    onShow();\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditServiceDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditServiceDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 15764,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.Style.Orientation;\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.ContentPanel;\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.form.ComboBox;\nimport com.extjs.gxt.ui.client.widget.form.ComboBox.TriggerAction;\nimport com.extjs.gxt.ui.client.widget.form.TextArea;\nimport com.extjs.gxt.ui.client.widget.form.TextField;\nimport com.extjs.gxt.ui.client.widget.layout.FitLayout;\nimport com.extjs.gxt.ui.client.widget.layout.RowLayout;\nimport com.google.gwt.i18n.client.DateTimeFormat;\nimport com.google.gwt.i18n.client.DateTimeFormat.PredefinedFormat;\nimport com.google.gwt.i18n.client.NumberFormat;\nimport com.google.gwt.user.client.ui.FlexTable;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.Widget;\nimport com.google.gwt.user.datepicker.client.DateBox;\n\nimport at.a1ta.bite.core.shared.dto.systemmessage.PeriodOfValidity;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.admin.ui.common.client.ui.PortletHelper;\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.framework.gxt.ui.ComboBoxFix;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.util.Validator;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class EditServiceDialog extends Dialog {\n\n  private static EditServiceDialog _instance = null;\n\n  private Service service = null;\n\n  private DateBox from = new DateBox();\n\n  private DateBox to = new DateBox();\n\n  private TextField<String> name = new TextField<String>();\n\n  private TextArea description = new TextArea();\n\n  private TextArea employeeinfo = new TextArea();\n\n  private TextField<String> cost = new TextField<String>();\n\n  private TextField<String> multi = new TextField<String>();\n\n  private TextField<String> productCode = new TextField<String>();\n\n  private ComboBox<BaseModelData> chargingType = new ComboBoxFix<BaseModelData>();\n\n  private ComboBox<BaseModelData> creditType = new ComboBoxFix<BaseModelData>();\n\n  private TextField<String> product = new TextField<String>();\n\n  private TextField<String> reason1 = new TextField<String>();\n\n  private TextField<String> reason2 = new TextField<String>();\n\n  private TextField<String> reason3 = new TextField<String>();\n\n  private TextField<String> result = new TextField<String>();\n\n  private NumberFormat decimal = NumberFormat.getFormat(\"0.00\");\n\n  public static EditServiceDialog getInstance() {\n    if (_instance == null) {\n      _instance = new EditServiceDialog();\n    }\n    _instance.name.setValue(null);\n    _instance.description.setValue(null);\n    _instance.from.setValue(null);\n    _instance.to.setValue(null);\n    _instance.cost.setValue(null);\n    _instance.multi.setValue(null);\n    _instance.productCode.setValue(null);\n    _instance.product.setValue(null);\n    _instance.reason1.setValue(null);\n    _instance.reason2.setValue(null);\n    _instance.result.setValue(null);\n    _instance.employeeinfo.setValue(null);\n    return _instance;\n  }\n\n  public static EditServiceDialog getInstance(Service service) {\n    EditServiceDialog instance = getInstance();\n    instance.setService(service);\n    return instance;\n  }\n\n  private void setService(Service service) {\n    this.service = service;\n    _instance.name.setValue(service.getName());\n    _instance.description.setValue(service.getComment());\n    _instance.from.setValue(service.getValidity().getValidFrom());\n    _instance.to.setValue(service.getValidity().getValidUntil());\n    _instance.cost.setValue(decimal.format(service.getCosts()));\n    _instance.multi.setValue(service.getMulti().toString());\n    _instance.productCode.setValue(service.getProductCode());\n    _instance.product.setValue(service.getProduct());\n    _instance.reason1.setValue(service.getReason1());\n    _instance.reason2.setValue(service.getReason2());\n    _instance.result.setValue(service.getResult());\n    _instance.employeeinfo.setValue(service.getEmployeeinfo());\n  }\n\n  public EditServiceDialog() {\n    setSize(700, 540);\n    setResizable(false);\n    okText = AdminUI.ADMINCOMMONTEXTPOOL.dialogSave();\n    cancelText = AdminUI.ADMINCOMMONTEXTPOOL.dialogCancel();\n    setButtons(Dialog.OKCANCEL);\n    setHeading(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogHeading());\n    setBorders(false);\n\n    from.setFormat(new DateBox.DefaultFormat(DateTimeFormat.getFormat(PredefinedFormat.DATE_SHORT)));\n    to.setFormat(new DateBox.DefaultFormat(DateTimeFormat.getFormat(PredefinedFormat.DATE_SHORT)));\n\n    setLayout(new RowLayout(Orientation.VERTICAL));\n    add(renderCommonDataBox());\n    add(renderBillingDataBox());\n    add(renderInteractionDataBox());\n  }\n\n  private Widget renderCommonDataBox() {\n\n    name.setWidth(555);\n    name.addStyleName(\"field-necessary\");\n    name.setAllowBlank(false);\n    description.setWidth(555);\n    description.setHeight(60);\n    description.setMaxLength(2000);\n    employeeinfo.setWidth(555);\n    employeeinfo.setHeight(60);\n    employeeinfo.setMaxLength(500);\n\n    ContentPanel cp = new ContentPanel(new FitLayout());\n    cp.setHeading(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogCpServicedata());\n    cp.setHeight(210);\n    cp.setStyleAttribute(\"margin-bottom\", \"5px\");\n\n    FlexTable table = new FlexTable();\n    table.setWidget(0, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogFromLabel()));\n    table.setWidget(0, 1, from);\n    table.setWidget(0, 2, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogToLabel()));\n    table.setWidget(0, 3, to);\n    table.setWidget(1, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogNameLabel()));\n    table.setWidget(1, 1, name);\n    table.setWidget(2, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogDescription()));\n    table.setWidget(2, 1, description);\n    table.setWidget(3, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogEmployeeinfo()));\n    table.setWidget(3, 1, employeeinfo);\n\n    table.getFlexCellFormatter().setColSpan(1, 1, 3);\n    table.getFlexCellFormatter().setColSpan(2, 1, 3);\n    table.getFlexCellFormatter().setColSpan(3, 1, 3);\n    table.getFlexCellFormatter().setWidth(0, 0, \"110px\");\n    table.getFlexCellFormatter().setWidth(0, 2, \"120px\");\n    table.getFlexCellFormatter().setWidth(0, 3, \"150px\");\n\n    cp.add(table);\n    return cp;\n  }\n\n  private Widget renderBillingDataBox() {\n    productCode.addStyleName(\"field-necessary\");\n    productCode.setAllowBlank(false);\n    cost.setWidth(50);\n    cost.addStyleName(\"field-necessary\");\n    cost.setAllowBlank(false);\n    multi.setWidth(50);\n\n    ListStore<BaseModelData> charges = new ListStore<BaseModelData>() {};\n    ListStore<BaseModelData> credits = new ListStore<BaseModelData>() {};\n    chargingType.setStore(charges);\n    chargingType.setAllowBlank(false);\n    chargingType.setDisplayField(\"value\");\n    chargingType.setForceSelection(true);\n    chargingType.setTriggerAction(TriggerAction.ALL);\n    chargingType.setEditable(false);\n    creditType.setStore(credits);\n    creditType.setAllowBlank(false);\n    creditType.setDisplayField(\"value\");\n    creditType.setForceSelection(true);\n    creditType.setTriggerAction(TriggerAction.ALL);\n    creditType.setEditable(false);\n\n    ContentPanel cp = new ContentPanel(new FitLayout());\n    cp.setHeading(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogCpChargingdata());\n    cp.setHeight(85);\n    cp.setStyleAttribute(\"margin-bottom\", \"5px\");\n\n    FlexTable table = new FlexTable();\n    table.setWidget(0, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogCostsLabel()));\n    table.setWidget(0, 1, PortletHelper.createInfoWidget(cost, AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogCostsTooltip()));\n    table.setWidget(0, 2, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogMultiLabel()));\n    table.setWidget(0, 3, multi);\n    table.setWidget(0, 4, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogProductcodeLabel()));\n    table.setWidget(0, 5, productCode);\n    table.setWidget(1, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogChargingtypeLabel()));\n    table.setWidget(1, 1, chargingType);\n    table.setWidget(1, 2, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogCredittypeLabel()));\n    table.setWidget(1, 3, creditType);\n\n    table.getFlexCellFormatter().setWidth(0, 0, \"110px\");\n    table.getFlexCellFormatter().setColSpan(1, 1, 3);\n    table.getFlexCellFormatter().setWidth(0, 5, \"150px\");\n    table.getFlexCellFormatter().setWidth(0, 4, \"120px\");\n    table.getFlexCellFormatter().setWidth(0, 2, \"145px\");\n\n    cp.add(table);\n    return cp;\n  }\n\n  private Widget renderInteractionDataBox() {\n\n    product.setWidth(560);\n    product.setMaxLength(120);\n    reason1.setWidth(560);\n    reason1.setMaxLength(120);\n    reason2.setWidth(560);\n    reason2.setMaxLength(120);\n    reason3.setWidth(560);\n    reason3.setMaxLength(120);\n    reason3.disable();\n    reason3.setValue(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogReason3Value());\n    result.setWidth(560);\n    result.setMaxLength(120);\n\n    ContentPanel cp = new ContentPanel(new FitLayout());\n    cp.setHeading(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogCpClarifydata());\n    cp.setHeight(167);\n\n    FlexTable table = new FlexTable();\n    table.setWidget(0, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogProductcodeLabel()));\n    table.setWidget(0, 1, product);\n    table.setWidget(1, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogReason1Label()));\n    table.setWidget(1, 1, reason1);\n    table.setWidget(2, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogReason2Label()));\n    table.setWidget(2, 1, reason2);\n    table.setWidget(3, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogReason3Label()));\n    table.setWidget(3, 1, reason3);\n    table.setWidget(4, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogResultLabel()));\n    table.setWidget(4, 1, result);\n\n    table.getFlexCellFormatter().setWidth(0, 0, \"110px\");\n\n    cp.add(table);\n    return cp;\n  }\n\n  @Override\n  protected void onButtonPressed(Button button) {\n    super.onButtonPressed(button);\n    if (button == getButtonById(OK)) {\n\n      if (!name.validate() || !productCode.validate() || !cost.validate() || !description.validate() || !employeeinfo.validate() || !multi.validate() || !product.validate() || !reason1.validate()\n          || !reason2.validate() || !reason3.validate() || !result.validate()) {\n        MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.serviceLabel(), AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogValidation(), null);\n        return;\n      }\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.serviceLabel(), AdminUI.ADMINCOMMONTEXTPOOL.serviceMessageSave(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxSave());\n      wait.show();\n\n      if (service == null) {\n        service = new Service();\n      }\n\n      service.setChargingType((ChargingType) chargingType.getSelection().get(0).get(\"bean\"));\n      service.setComment(description.getValue());\n      if (employeeinfo.getValue() != null) {\n        service.setEmployeeinfo(employeeinfo.getValue().replaceAll(\"\\n\", \"<br>\"));\n      }\n      try {\n        service.setCosts(decimal.parse(cost.getValue()));\n      } catch (NumberFormatException e) {\n        wait.close();\n        MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.serviceLabel(), AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogValidationCosts(), null);\n        return;\n      }\n      try {\n        if (!Validator.isNullOrEmpty(multi.getValue())) {\n          service.setMulti(new Long(multi.getValue()));\n        } else {\n          service.setMulti(null);\n        }\n      } catch (NumberFormatException e) {\n        wait.close();\n        MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.serviceLabel(), AdminUI.ADMINCOMMONTEXTPOOL.serviceDialogValidationMulti(), null);\n        return;\n      }\n      service.setCreditType((CreditType) creditType.getSelection().get(0).get(\"bean\"));\n      service.setName(name.getValue());\n      service.setProduct(product.getValue());\n      service.setProductCode(productCode.getValue());\n      service.setReason1(reason1.getValue());\n      service.setReason2(reason2.getValue());\n      service.setReason3(reason3.getValue());\n      service.setResult(result.getValue());\n      service.setValidity(new PeriodOfValidity(from.getValue(), to.getValue()));\n\n      CommonServiceLocator.getServiceServlet().saveService(service, new BaseAsyncCallback<Service>() {\n\n        @Override\n        public void onSuccess(Service result) {\n          wait.close();\n          PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.UPDATE_SERVICES));\n          hide();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.serviceLabel(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxSaveError(), null);\n        }\n\n      });\n    }\n    if (button == getButtonById(CANCEL)) {\n      hide();\n    }\n  }\n\n  @Override\n  protected void onHide() {\n    super.onHide();\n    service = null;\n  }\n\n  @Override\n  public void onShow() {\n    super.onShow();\n    creditType.getStore().removeAll();\n    creditType.disable();\n    SettingsServiceLocator.getCreditTypeServlet().getAllCreditTypes(new BaseAsyncCallback<ArrayList<CreditType>>() {\n\n      @Override\n      public void onSuccess(ArrayList<CreditType> result) {\n        ArrayList<BaseModelData> results = new ArrayList<BaseModelData>();\n        BaseModelData actual = null;\n\n        for (CreditType ct : result) {\n          BaseModelData m = new BaseModelData();\n          m.set(\"bean\", ct);\n          m.set(\"value\", ct.getName());\n\n          if (service != null && service.getCreditType().getId().equals(ct.getId())) {\n            actual = m;\n            results.add(m);\n            continue;\n          }\n\n          if (ct.getActive()) {\n            results.add(m);\n          }\n        }\n        creditType.getStore().add(results);\n\n        ArrayList<BaseModelData> list = new ArrayList<BaseModelData>();\n        if (actual == null) {\n          list.add(results.get(0));\n        } else {\n          list.add(actual);\n        }\n        creditType.setSelection(list);\n\n        creditType.enable();\n      }\n    });\n\n    chargingType.getStore().removeAll();\n    chargingType.disable();\n    SettingsServiceLocator.getChargingTypeServlet().getAllChargingTypes(new BaseAsyncCallback<List<ChargingType>>() {\n\n      @Override\n      public void onSuccess(List<ChargingType> result) {\n        List<BaseModelData> results = new ArrayList<BaseModelData>();\n        BaseModelData actual = null;\n\n        for (ChargingType ct : result) {\n          BaseModelData m = new BaseModelData();\n          m.set(\"bean\", ct);\n          m.set(\"value\", ct.getName());\n          results.add(m);\n\n          if (service != null && service.getChargingType().getId().equals(ct.getId())) {\n            actual = m;\n          }\n        }\n        chargingType.getStore().add(results);\n\n        List<BaseModelData> list = new ArrayList<BaseModelData>();\n        if (actual == null) {\n          list.add(results.get(0));\n        } else {\n          list.add(actual);\n        }\n        chargingType.setSelection(list);\n\n        chargingType.enable();\n      }\n    });\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtSelectTeamMemberDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtSelectTeamMemberDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9264,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.GwtAddTeamMembersEvent;\nimport at.a1ta.cuco.ui.common.client.ui.ClickListener;\nimport at.a1ta.cuco.ui.common.client.ui.DoubleClickListener;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.util.Validator;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class GwtSelectTeamMemberDialog extends Composite {\n\n  private static GwtSelectTeamMemberDialogUiBinder uiBinder = GWT.create(GwtSelectTeamMemberDialogUiBinder.class);\n\n  interface GwtSelectTeamMemberDialogUiBinder extends UiBinder<Widget, GwtSelectTeamMemberDialog> {}\n\n  private static GwtSelectTeamMemberDialog _instance = null;\n\n  @UiField(provided = true)\n  DataTable<BiteUser> table;\n  @UiField\n  InputBox surName;\n  @UiField\n  InputBox ntAccount;\n  @UiField\n  InputBox oe;\n  @UiField\n  Button add;\n  @UiField\n  Button remove;\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n\n  @UiField\n  Button bSearch;\n  @UiField(provided = true)\n  DataTable<BiteUser> table2;\n\n  private ModelData<BiteUser> modeldata;\n  private PopupFrame popupFrame;\n  private WaitingWidget waitingWidget;\n\n  public static GwtSelectTeamMemberDialog getInstance() {\n    if (_instance == null) {\n      _instance = new GwtSelectTeamMemberDialog();\n    }\n    return _instance;\n  }\n\n  public GwtSelectTeamMemberDialog() {\n    initTable();\n    initWidget(uiBinder.createAndBindUi(this));\n    renderSelectionGrid();\n    renderTeamGrid();\n    renderMoveButtons();\n    surName.setCaption(AdminUI.ADMINCOMMONTEXTPOOL.teamName());\n    ntAccount.setCaption(AdminUI.ADMINCOMMONTEXTPOOL.teamNtAccount());\n    oe.setCaption(AdminUI.ADMINCOMMONTEXTPOOL.teamOe());\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        cancel();\n      }\n\n      private void cancel() {\n        popupFrame.close();\n      }\n    });\n    bSearch.addClickHandler(new ClickHandler() {\n\n      @Override\n      public void onClick(ClickEvent event) {\n        if (Validator.isNullOrEmpty(oe.getText()) && Validator.isNullOrEmpty(surName.getText()) && Validator.isNullOrEmpty(ntAccount.getText())) {\n          return;\n        }\n\n        search();\n      }\n\n    });\n\n    popupFrame = new PopupFrame(this, 600, 570);\n  }\n\n  public void search() {\n    table.getStore().clear();\n\n    String name = Validator.isNullOrEmpty(surName.getText()) ? null : ('%' + surName.getText().toLowerCase() + '%');\n    String account = Validator.isNullOrEmpty(ntAccount.getText()) ? null : ('%' + ntAccount.getText().toLowerCase() + '%');\n    String oE = Validator.isNullOrEmpty(oe.getText()) ? null : '%' + oe.getText().toLowerCase() + '%';\n    SettingsServiceLocator.getTeamServlet().searchUsers(name, account, oE, new BaseAsyncCallback<ArrayList<BiteUser>>() {\n\n      @Override\n      public void onFailure(Throwable exception) {\n        super.onFailure(exception);\n      }\n\n      @Override\n      public void onSuccess(ArrayList<BiteUser> result) {\n        ArrayList<ModelData<BiteUser>> results = new ArrayList<ModelData<BiteUser>>();\n        for (BiteUser user : result) {\n          ModelData<BiteUser> model = new ModelData<BiteUser>(user);\n          model.put(\"bean\", user);\n          model.put(\"name\", user.getName());\n          model.put(\"user\", user.getUsername());\n          model.put(\"orgunit\", user.getManagementLevel1OrgUnitShort());\n          results.add(model);\n        }\n        table.getStore().add(results);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  private void initTable() {\n    waitingWidget = new WaitingWidget();\n    table = new DataTable<BiteUser>(createColumns());\n    table.enablePaging(10);\n    table.setWidth(\"550px\");\n    table.setVisible(true);\n    table2 = new DataTable<BiteUser>(createColumns());\n    table2.enablePaging(10);\n    table2.setWidth(\"550px\");\n    table2.setHeight(\"200\");\n    table2.setVisible(true);\n  }\n\n  private ArrayList<Column<BiteUser>> createColumns() {\n    ArrayList<Column<BiteUser>> columns = new ArrayList<Column<BiteUser>>();\n    columns.add(new Column<BiteUser>(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamName(), \"40%\"));\n    columns.add(new Column<BiteUser>(\"user\", AdminUI.ADMINCOMMONTEXTPOOL.teamNtAccount(), \"40%\"));\n    columns.add(new Column<BiteUser>(\"orgunit\", AdminUI.ADMINCOMMONTEXTPOOL.teamOe(), \"20%\"));\n\n    return columns;\n  }\n\n  public void renderSelectionGrid() {\n    table.addClickListener(new ClickListener<BiteUser>() {\n\n      @Override\n      public void onClick(ModelData<BiteUser> data) {\n        if (data != null) {\n          modeldata = data;\n          add.enable();\n        } else {\n          add.disable();\n        }\n      }\n    });\n\n    table.addDoubleClickListener(new DoubleClickListener<BiteUser>() {\n\n      @Override\n      public void onDoubleClick(ModelData<BiteUser> data) {\n        add.disable();\n        table2.getStore().add(data);\n        ArrayList<ModelData<BiteUser>> changed = new ArrayList<ModelData<BiteUser>>();\n        changed.addAll(table.getStore().getAll());\n        table.getStore().clear();\n        changed.remove(data);\n        table.getStore().add(changed);\n        table2.setVisible(true);\n      }\n    });\n  }\n\n  public void renderTeamGrid() {\n    table2.addClickListener(new ClickListener<BiteUser>() {\n      @Override\n      public void onClick(ModelData<BiteUser> data) {\n\n        if (data != null) {\n          modeldata = data;\n          remove.enable();\n        } else {\n          remove.disable();\n        }\n      }\n    });\n\n    table2.addDoubleClickListener(new DoubleClickListener<BiteUser>() {\n\n      @Override\n      public void onDoubleClick(ModelData<BiteUser> data) {\n\n        remove.disable();\n        ArrayList<ModelData<BiteUser>> changed = new ArrayList<ModelData<BiteUser>>();\n        changed.addAll(table2.getStore().getAll());\n        table2.getStore().clear();\n        changed.remove(data);\n        table2.getStore().add(changed);\n      }\n    });\n  }\n\n  public void init() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n    table.getStore().clear();\n    table2.getStore().clear();\n    surName.clear();\n    oe.clear();\n    ntAccount.clear();\n    SettingsServiceLocator.getTeamServlet().getAllUsers(new BaseAsyncCallback<ArrayList<BiteUser>>() {\n\n      @Override\n      public void onSuccess(ArrayList<BiteUser> result) {\n        ArrayList<ModelData<BiteUser>> results = new ArrayList<ModelData<BiteUser>>();\n        for (BiteUser user : result) {\n          ModelData<BiteUser> model = new ModelData<BiteUser>(user);\n          model.put(\"bean\", user);\n          model.put(\"name\", user.getName());\n          model.put(\"user\", user.getUsername());\n          model.put(\"orgunit\", user.getManagementLevel1OrgUnitShort());\n          results.add(model);\n        }\n        table.getStore().add(results);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        super.onFailure(exception);\n        waitingWidget.setVisible(false);\n      }\n    });\n  }\n\n  public void show() {\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  public void renderMoveButtons() {\n\n    add.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        if (modeldata == null) {\n          return;\n        }\n        table2.getStore().add(modeldata);\n        table2.update();\n        modeldata = null;\n        add.disable();\n      }\n    });\n    add.disable();\n    remove.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        if (modeldata == null) {\n          return;\n        }\n        ArrayList<ModelData<BiteUser>> changed = new ArrayList<ModelData<BiteUser>>();\n        changed.addAll(table2.getStore().getAll());\n        table2.getStore().clear();\n        changed.remove(modeldata);\n        table2.getStore().add(changed);\n        remove.disable();\n      }\n    });\n    remove.disable();\n  }\n\n  public void save() {\n    try {\n      PortletEventManager.fireEvent(new GwtAddTeamMembersEvent(table2.getStore().getAll()));\n    } catch (Exception e) {\n      popupFrame.close();\n    }\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditTeamDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditTeamDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3648,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.Date;\n\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.form.TextArea;\nimport com.extjs.gxt.ui.client.widget.form.TextField;\nimport com.extjs.gxt.ui.client.widget.layout.FitLayout;\nimport com.google.gwt.user.client.ui.FlexTable;\nimport com.google.gwt.user.client.ui.HTML;\n\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class EditTeamDialog extends Dialog {\n\n  private static EditTeamDialog _instance = null;\n\n  private Team team = null;\n\n  private TextField<String> name = new TextField<String>();\n\n  private TextArea description = new TextArea();\n\n  public static EditTeamDialog getInstance() {\n    if (_instance == null) {\n      _instance = new EditTeamDialog();\n    }\n    _instance.name.setValue(\"\");\n    _instance.description.setValue(\"\");\n    return _instance;\n  }\n\n  public static EditTeamDialog getInstance(Team team) {\n    EditTeamDialog instance = getInstance();\n    instance.setTeam(team);\n    return instance;\n  }\n\n  private void setTeam(Team team) {\n    this.team = team;\n    name.setValue(team.getName());\n    description.setValue(team.getDescription());\n  }\n\n  public EditTeamDialog() {\n    setSize(400, 200);\n    setResizable(false);\n    okText = \"Speichern\";\n    cancelText = \"Abbrechen\";\n    setButtons(Dialog.OKCANCEL);\n    setHeading(\"Team\");\n    setModal(true);\n\n    name.addStyleName(\"field-necessary\");\n    name.setAllowBlank(false);\n    name.setWidth(300);\n    name.setMaxLength(32);\n    description.setWidth(300);\n    description.setHeight(80);\n    description.setMaxLength(1000);\n\n    FlexTable table = new FlexTable();\n    table.setWidget(0, 0, new HTML(\"Name\"));\n    table.setWidget(0, 1, name);\n    table.setWidget(1, 0, new HTML(\"Beschreibung\"));\n    table.setWidget(1, 1, description);\n\n    setLayout(new FitLayout());\n    add(table);\n  }\n\n  @Override\n  protected void onButtonPressed(Button button) {\n    super.onButtonPressed(button);\n    if (button == getButtonById(OK)) {\n\n      if (!name.validate() || !description.validate()) {\n        MessageBox.info(\"Team\", \"\\\"Name\\\" ist ein Pflichtfeld\", null);\n        return;\n      }\n\n      final MessageBox wait = MessageBox.wait(\"Team\", \"Team speichern\", \"speichern...\");\n      wait.show();\n\n      if (team == null) {\n        team = new Team();\n        team.setCreator(UserManager.getUserInfo().getBiteUser());\n        team.setCreateDate(new Date());\n      }\n\n      team.setName(name.getValue());\n      team.setDescription(description.getValue());\n\n      SettingsServiceLocator.getTeamServlet().saveTeam(team, new BaseAsyncCallback<Team>() {\n\n        @Override\n        public void onSuccess(Team result) {\n          wait.close();\n          PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.UPDATE_TEAMS));\n          hide();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(\"Team\", \"Speichern Fehlgeschlagen\", null);\n        }\n\n      });\n    }\n    if (button == getButtonById(CANCEL)) {\n      hide();\n    }\n  }\n\n  @Override\n  protected void onHide() {\n    super.onHide();\n    team = null;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditUserDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditUserDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8905,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.BlurEvent;\nimport com.google.gwt.event.dom.client.BlurHandler;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.logical.shared.ValueChangeEvent;\nimport com.google.gwt.event.logical.shared.ValueChangeHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.CheckBox;\nimport at.a1ta.bite.ui.client.widget.Label;\nimport at.a1ta.bite.ui.client.widget.TextArea;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.UserRoleServlet;\nimport at.a1ta.cuco.admin.ui.common.client.service.UserRoleServletAsync;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\n\npublic class EditUserDialog extends Composite {\n\n  // @formatter:off\n  private static EditUserDialogUiBinder uiBinder = GWT.create(EditUserDialogUiBinder.class);\n\n  interface EditUserDialogUiBinder extends UiBinder<Widget, EditUserDialog> {}\n\n  @UiField(provided = true)\n  DataTable<Role> dtRoles;\n  @UiField\n  Label lHeader;\n  @UiField\n  TextArea taUsers;\n  @UiField\n  Button bSave;\n  // @formatter:on\n\n  private UserRoleServletAsync userRoleServlet = GWT.create(UserRoleServlet.class);\n  private PopupFrame popupFrame;\n\n  private UserInfo userInfo;\n\n  public EditUserDialog() {\n    createTable();\n    initWidget(uiBinder.createAndBindUi(this));\n    popupFrame = new PopupFrame(this, 630, 620);\n    loadRoles();\n\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    taUsers.addBlurHandler(new BlurHandler() {\n      @Override\n      public void onBlur(BlurEvent event) {\n        loadUser();\n      }\n    });\n  }\n\n  private void createTable() {\n    ArrayList<Column<Role>> columns = new ArrayList<Column<Role>>();\n    columns.add(createSelectorColumn());\n    columns.add(new Column<Role>(\"name\", \"Bezeichnung\", \"50%\"));\n    columns.add(new Column<Role>(\"description\", \"Beschreibung\", \"50%\"));\n    dtRoles = new DataTable<Role>(columns);\n    dtRoles.setHeight(450);\n  }\n\n  private Column<Role> createSelectorColumn() {\n    return new Column<Role>(\"selector\", \"\", \"50px\", new CellRenderer<Role>() {\n      @Override\n      public IsWidget render(final ModelData<Role> model, String columnId, int rowId) {\n        final CheckBox cb = new CheckBox();\n        cb.setValue((Boolean) model.get(\"selector\"));\n        cb.addValueChangeHandler(new ValueChangeHandler<Boolean>() {\n          @Override\n          public void onValueChange(ValueChangeEvent<Boolean> event) {\n            model.put(\"selector\", cb.getValue());\n            if (userInfo != null) {\n              if (cb.getValue()) {\n                userInfo.getRoles().add(model.getBean());\n              } else {\n                userInfo.getRoles().remove(model.getBean());\n              }\n            }\n          }\n        });\n        return cb;\n      }\n    }, false, false);\n  }\n\n  private void loadRoles() {\n    userRoleServlet.getRolesInGroupsForUser(UserManager.getUserInfo().getId(), new BaseAsyncCallback<ArrayList<Role>>() {\n      @Override\n      public void onSuccess(ArrayList<Role> result) {\n        ArrayList<ModelData<Role>> models = new ArrayList<ModelData<Role>>();\n        for (Role role : result) {\n          ModelData<Role> model = new ModelData<Role>(role);\n          model.put(\"selector\", false);\n          model.put(\"name\", role.getName());\n          model.put(\"description\", role.getDescription());\n          models.add(model);\n        }\n        dtRoles.getStore().add(models);\n        dtRoles.sort(\"name\", true);\n        if (userInfo != null) {\n          selectRoles();\n        }\n      }\n    });\n  }\n\n  private void selectRoles() {\n    for (ModelData<Role> model : dtRoles.getStore().getAll()) {\n      for (Role role : userInfo.getRoles()) {\n        if (model.getBean().getName().equals(role.getName())) {\n          model.put(\"selector\", true);\n        }\n      }\n    }\n    dtRoles.update();\n  }\n\n  private void save() {\n    // update of existing user\n    if (!taUsers.isEnabled()) {\n      userInfo.setRoles(getSelectedRoles(userInfo));\n      userRoleServlet.saveUser(userInfo, new BaseAsyncCallback<UserInfo>() {\n        @Override\n        public void onSuccess(UserInfo result) {\n          PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.UPDATE_USERS));\n          popupFrame.showInfoMessage(userInfo.getUsername() + \" gespeichert\", true, false);\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          popupFrame.showWarningMessage(\"Es ist ein Fehler beim Speichern aufgetreten.\", false, true);\n        }\n      });\n    } else {\n      // new Users\n      final String[] userArray = taUsers.getText().split(\";\");\n      if (userArray.length > 1) {\n        ArrayList<UserInfo> users = new ArrayList<UserInfo>();\n        for (String account : userArray) {\n          users.add(createUserInfo(account.trim()));\n        }\n        userRoleServlet.saveUsers(users, new BaseAsyncCallback<RpcStatus>() {\n          @Override\n          public void onSuccess(RpcStatus result) {\n            PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.UPDATE_USERS));\n            popupFrame.showInfoMessage(userArray.length + \" Benutzer gespeichert\", true, false);\n          }\n\n          @Override\n          public void onFailure(Throwable exception) {\n            popupFrame.showWarningMessage(\"Es ist ein Fehler beim Speichern aufgetreten. Kontrollieren Sie bitte den CorporateAccount.\", false, true);\n          }\n        });\n      } else {\n        userRoleServlet.saveUser(createUserInfo(taUsers.getText().trim()), new BaseAsyncCallback<UserInfo>() {\n          @Override\n          public void onSuccess(UserInfo result) {\n            PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.UPDATE_USERS));\n            popupFrame.showInfoMessage(result.getUsername() + \" gespeichert\", true, false);\n          }\n\n          @Override\n          public void onFailure(Throwable exception) {\n            popupFrame.showWarningMessage(\"Es ist ein Fehler beim Speichern aufgetreten. Kontrollieren Sie bitte den CorporateAccount.\", false, true);\n          }\n        });\n      }\n    }\n  }\n\n  private UserInfo createUserInfo(String account) {\n    UserInfo userInfo = new UserInfo();\n    userInfo.getBiteUser().setUsername(account);\n    userInfo.setRoles(getSelectedRoles(userInfo));\n    return userInfo;\n  }\n\n  private ArrayList<Role> getSelectedRoles(UserInfo userInfo) {\n    ArrayList<Role> roles = new ArrayList<Role>();\n    for (ModelData<Role> model : dtRoles.getStore().getAll()) {\n      if ((Boolean) model.get(\"selector\")) {\n        roles.add(model.getBean());\n      }\n    }\n    return roles;\n  }\n\n  private void loadUser() {\n    if (taUsers.getText().split(\";\").length == 1) {\n      userRoleServlet.getUserWithRoles(taUsers.getText(), new BaseAsyncCallback<UserInfo>() {\n        @Override\n        public void onSuccess(UserInfo result) {\n          userInfo = result;\n          deselectAllRoles();\n          if (result != null) {\n            selectRoles();\n          }\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          // Do Nothing.\n        }\n      });\n    }\n  }\n\n  public void show(UserInfo user) {\n    deselectAllRoles();\n    if (user == null) {\n      lHeader.setText(\"Neue(n) Benutzer anlegen\");\n      taUsers.clear();\n      dtRoles.update();\n      taUsers.setEnabled(true);\n    } else {\n      userInfo = user;\n      lHeader.setText(\"Benutzer bearbeiten\");\n      taUsers.setText(user.getUsername());\n      taUsers.setEnabled(false);\n      selectRoles();\n    }\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  private void deselectAllRoles() {\n    for (ModelData<Role> model : dtRoles.getStore().getAll()) {\n      model.put(\"selector\", false);\n    }\n  }\n\n  public void hide() {\n    popupFrame.hide();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditRoleGroupManagementDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditRoleGroupManagementDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 15086,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.logical.shared.ValueChangeEvent;\nimport com.google.gwt.event.logical.shared.ValueChangeHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.core.shared.dto.security.Authority;\nimport at.a1ta.bite.core.shared.dto.security.RoleGroup;\nimport at.a1ta.bite.core.shared.dto.security.RoleWithGroup;\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.CheckBox;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.InputBox.InputBoxSize;\nimport at.a1ta.bite.ui.client.widget.Label;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.ui.dialog.DialogPanel;\nimport at.a1ta.framework.ui.client.util.Validator;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class EditRoleGroupManagementDialog extends Composite {\n\n  // @formatter:off\n  private static EditRoleGroupManagementDialogUiBinder uiBinder = GWT.create(EditRoleGroupManagementDialogUiBinder.class);\n\n  private static Logger logger = Logger.getLogger(EditRoleGroupManagementDialog.class.getName());\n\n  interface EditRoleGroupManagementDialogUiBinder extends UiBinder<Widget, EditRoleGroupManagementDialog> {}\n\n  @UiField(provided = true)\n  DataTable<RoleWithGroup> dtRoles;\n  @UiField(provided = true)\n  DataTable<Authority> dtAuth;\n  @UiField\n  Label lHeader;\n  @UiField\n  Label lRoleHeader;\n  @UiField\n  Label lAuthHeader;\n  @UiField\n  InputBox name;\n  @UiField\n  InputBox description;\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n  // @formatter:on\n\n  private PopupFrame popupFrame;\n\n  private UserInfo userInfo;\n  private RoleGroup rg;\n  private RoleWithGroup roleWithGroup;\n\n  private Delegate<RoleWithGroup> editValueRoleGroupDelegate;\n\n  protected int singleRoleSelected = 0;\n\n  private Delegate<RoleWithGroup> saveValueRoleGroupDelegate;\n\n  protected RoleWithGroup rolegroupForValueChange;\n\n  private InputBox ib = new InputBox();\n\n  Button b = new Button(\"Speichern\", Button.ButtonSize.Small);\n  final DialogPanel dialog = new DialogPanel();\n\n  public EditRoleGroupManagementDialog() {\n    createTable();\n    initWidget(uiBinder.createAndBindUi(this));\n\n    popupFrame = new PopupFrame(this, 1200, 600);\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        cancel();\n      }\n    });\n\n    loadRoles(null);\n  }\n\n  private void createTable() {\n    ArrayList<Column<RoleWithGroup>> columns = new ArrayList<Column<RoleWithGroup>>();\n    ArrayList<Column<Authority>> column = new ArrayList<Column<Authority>>();\n    columns.add(createSelectorColumn());\n    columns.add(new Column<RoleWithGroup>(\"name\", \"Bezeichnung\", \"35%\"));\n    columns.add(new Column<RoleWithGroup>(\"desc\", \"Beschreibung\", \"35%\"));\n    columns.add(new Column<RoleWithGroup>(\"app\", \"Anwendung\", \"20%\"));\n    columns.add(new Column<RoleWithGroup>(\"value\", \"Wert\", \"10%\", createWertCellRenderer()));\n\n    column.add(createAuthSelectorColumn());\n    column.add(new Column<Authority>(\"authName\", \"Bezeichnung\", \"50%\"));\n    column.add(new Column<Authority>(\"authDesc\", \"Beschreibung\", \"50%\"));\n\n    dtRoles = new DataTable<RoleWithGroup>(columns);\n    dtAuth = new DataTable<Authority>(column);\n    dtRoles.setHeight(450);\n    dtAuth.setHeight(450);\n\n    dialog.setCaption(\"Wert\");\n    dialog.setSize(200, 100);\n    ib.setEnabled(true);\n    ib.focus();\n    ib.setInputBoxSize(InputBoxSize.Medium);\n    ib.setRegExValidation(\"^[0-9]+$\");\n    ib.setValidationErrorMessage(\"Geben Sie nur einen numerischen Wert ein\");\n    dialog.add(ib);\n    dialog.add(b);\n    b.addClickHandler(new ClickHandler() {\n\n      @Override\n      public void onClick(ClickEvent event) {\n        saveValueRoleGroupDelegate.execute(rolegroupForValueChange);\n\n      }\n    });\n\n    saveValueRoleGroupDelegate = new Delegate<RoleWithGroup>() {\n      @Override\n      public void execute(final RoleWithGroup rg) {\n        rg.setValue(Integer.valueOf(ib.getValue()));\n        dialog.hide();\n      }\n    };\n    editValueRoleGroupDelegate = new Delegate<RoleWithGroup>() {\n      @Override\n      public void execute(final RoleWithGroup rg) {\n        ib.setValue(rg.getValue() != null ? String.valueOf(rg.getValue()) : \"\");\n        rolegroupForValueChange = rg;\n        dialog.show();\n        dialog.center();\n        ib.focus();\n      }\n    };\n  }\n\n  public Column<RoleWithGroup> createSelectorColumn() {\n    return new Column<RoleWithGroup>(\"selector\", \"\", \"50px\", new CellRenderer<RoleWithGroup>() {\n      @Override\n      public IsWidget render(final ModelData<RoleWithGroup> model, String columnId, int rowId) {\n        final CheckBox cb = new CheckBox();\n        cb.setValue((Boolean) model.get(\"selector\"));\n        cb.addValueChangeHandler(new ValueChangeHandler<Boolean>() {\n          @Override\n          public void onValueChange(ValueChangeEvent<Boolean> event) {\n            model.put(\"selector\", cb.getValue());\n            if (rg != null) {\n              if (rg.getRoles() == null) {\n                rg.setRoles(new ArrayList<RoleWithGroup>());\n              }\n              if (cb.getValue()) {\n                rg.getRoles().add(model.getBean());\n                if (rg.getRoles().size() == 1) {\n                  dtAuth.setVisible(true);\n                  showAuth(model.getBean());\n                } else {\n                  dtAuth.setVisible(false);\n                }\n\n              } else {\n                rg.getRoles().remove(model.getBean());\n                dtAuth.setVisible(rg.getRoles().size() == 1);\n                if (rg.getRoles().size() == 1) {\n                  showAuth(rg.getRoles().get(0));\n                }\n              }\n            }\n          }\n        });\n        return cb;\n      }\n    }, false, false);\n  }\n\n  private CellRenderer<RoleWithGroup> createWertCellRenderer() {\n    return new CellRenderer<RoleWithGroup>() {\n      @Override\n      public IsWidget render(final ModelData<RoleWithGroup> model, String columnId, int rowId) {\n        return new ClickableIcon<RoleWithGroup>(model.getBean(), editValueRoleGroupDelegate, UI.IMAGES.iconEdit(), null);\n      }\n    };\n  }\n\n  private Column<Authority> createAuthSelectorColumn() {\n    return new Column<Authority>(\"authSelector\", \"\", \"20px\", new CellRenderer<Authority>() {\n      @Override\n      public IsWidget render(final ModelData<Authority> model, String columnId, int rowId) {\n        final CheckBox cb = new CheckBox();\n        cb.setValue((Boolean) model.get(\"authSelector\"));\n        cb.addValueChangeHandler(new ValueChangeHandler<Boolean>() {\n          @Override\n          public void onValueChange(ValueChangeEvent<Boolean> event) {\n            model.put(\"authSelector\", cb.getValue());\n            if (roleWithGroup != null) {\n              if (rg.getRoles() == null) {\n                roleWithGroup.setAuthorities(new ArrayList<Authority>());\n              }\n              if (cb.getValue()) {\n                roleWithGroup.getAuthorities().add(model.getBean());\n              } else {\n                roleWithGroup.getAuthorities().remove(model.getBean());\n              }\n            }\n          }\n        });\n        return cb;\n      }\n    }, false, false);\n  }\n\n  private void loadRoles(final RoleGroup rg) {\n\n    CommonServiceLocator.getRoleServlet().getAllRolesWithGroup((rg == null) ? null : rg.getId(), new BaseAsyncCallback<ArrayList<RoleWithGroup>>() {\n\n      @Override\n      public void onSuccess(final ArrayList<RoleWithGroup> result) {\n        ArrayList<ModelData<RoleWithGroup>> roles = new ArrayList<ModelData<RoleWithGroup>>();\n        dtRoles.getStore().clear();\n        for (RoleWithGroup role : result) {\n          ModelData<RoleWithGroup> model = new ModelData<RoleWithGroup>(role);\n          model.put(\"selector\", false);\n          model.put(\"name\", role.getName());\n          model.put(\"desc\", role.getDescription());\n          model.put(\"value\", role.getValue());\n          roles.add(model);\n\n        }\n\n        dtRoles.getStore().add(roles);\n        dtRoles.sort(\"name\", true);\n        if (rg != null) {\n          lHeader.setText(\"Rollengruppe bearbeiten:\");\n          name.setText(rg.getName());\n          description.setText(rg.getDescription());\n          name.setEnabled(false);\n          description.setEnabled(false);\n          selectRoles();\n          popupFrame.hideMessageBar();\n          popupFrame.showContent();\n        } else {\n          loadAuth();\n        }\n      }\n    });\n  }\n\n  private void loadAuth() {\n    SettingsServiceLocator.getAuthorityServlet().getAllAuthorities(new BaseAsyncCallback<ArrayList<Authority>>() {\n\n      @Override\n      public void onSuccess(final ArrayList<Authority> result) {\n        ArrayList<ModelData<Authority>> auths = new ArrayList<ModelData<Authority>>();\n        for (Authority auth : result) {\n          ModelData<Authority> model = new ModelData<Authority>(auth);\n          model.put(\"authSelector\", false);\n          model.put(\"authName\", auth.getName());\n          model.put(\"authDesc\", auth.getDescription());\n          auths.add(model);\n        }\n        dtAuth.getStore().add(auths);\n        dtAuth.sort(\"authName\", true);\n        selectRoles();\n      }\n\n      @Override\n      public void onFailure(Throwable caught) {\n        logger.log(Level.SEVERE, \"Failure while loading auths\", caught);\n\n      }\n    });\n  }\n\n  private void selectRoles() {\n    if (rg != null) {\n      for (ModelData<RoleWithGroup> model : dtRoles.getStore().getAll()) {\n        for (RoleWithGroup roleGroup : rg.getRoles()) {\n          if (model.getBean().getName().equals(roleGroup.getName())) {\n            model.put(\"selector\", true);\n          }\n        }\n      }\n      dtRoles.update();\n      dtAuth.setVisible(rg.getRoles().size() == 1);\n    }\n  }\n\n  private void selectAuth() {\n    for (ModelData<Authority> model : dtAuth.getStore().getAll()) {\n      for (Authority auth : roleWithGroup.getAuthorities()) {\n        if (model.getBean().getName().equals(auth.getName())) {\n          model.put(\"authSelector\", true);\n        }\n      }\n    }\n    dtAuth.update();\n  }\n\n  private void save() {\n\n    if (Validator.isNullOrEmpty(name.getValue())) {\n      Window.alert(\"Rollenname darf nicht leer sein\");\n      return;\n    }\n\n    if (rg == null) {\n      rg = new RoleGroup();\n    }\n    rg.setName(name.getValue());\n    rg.setDescription(description.getValue());\n\n    List<RoleWithGroup> roles = new ArrayList<RoleWithGroup>();\n    boolean authUpdatedForFirstRole = false;\n    for (ModelData<RoleWithGroup> model : dtRoles.getStore().getAll()) {\n      if ((Boolean) model.get(\"selector\")) {\n        RoleWithGroup help = model.getBean();\n        help.setValue(model.getBean().getValue());\n        if (!authUpdatedForFirstRole) {\n          // if multiple roles are selected, it will update auths only for first role and remaining should be untouched.\n          populateSelectedAuthoritiesForRole(help);\n          authUpdatedForFirstRole = true;\n        }\n        roles.add(help);\n      }\n    }\n    rg.setRoles(roles);\n\n    for (RoleWithGroup r : roles) {\n      if (r.getValue() == null) {\n        Window.alert(\"Die Werte aller ausgew\u00e4hlten Rollen m\u00fcssen ausgef\u00fcllt werden!\");\n        return;\n      }\n    }\n\n    CommonServiceLocator.getRoleServlet().saveRoleGroup(rg, new AsyncCallback<RoleGroup>() {\n\n      @Override\n      public void onSuccess(RoleGroup result) {\n        PortletEventManager.fireEvent(new GenericEvent<RoleGroup>(CuCoEventType.UPDATE_ROLEGROUP, result));\n      }\n\n      @Override\n      public void onFailure(Throwable caught) {\n        logger.log(Level.SEVERE, \"Fehler beim Speichern einer RoleGroup\", caught);\n      }\n    });\n\n    cancel();\n  }\n\n  private void populateSelectedAuthoritiesForRole(RoleWithGroup help) {\n    List<Authority> authorities = new ArrayList<Authority>();\n    for (ModelData<Authority> model1 : dtAuth.getStore().getAll()) {\n      if ((Boolean) model1.get(\"authSelector\")) {\n        authorities.add(model1.getBean());\n      }\n    }\n    help.setAuthorities(authorities);\n  }\n\n  private void cancel() {\n    popupFrame.close();\n\n  }\n\n  private UserInfo createRoleGroup(String name) {\n    RoleGroup rg = new RoleGroup();\n    rg.setName(name);\n    rg.setRoles(getSelectedRoles(rg));\n    return userInfo;\n  }\n\n  private List<RoleWithGroup> getSelectedRoles(RoleGroup rg) {\n    List<RoleWithGroup> roles = new ArrayList<RoleWithGroup>();\n    for (ModelData<RoleWithGroup> model : dtRoles.getStore().getAll()) {\n      if ((Boolean) model.get(\"selector\")) {\n        roles.add(model.getBean());\n      }\n    }\n    return roles;\n  }\n\n  public void show(RoleGroup group) {\n    deselectAllRoles();\n    if (group == null) {\n      rg = new RoleGroup();\n      lHeader.setText(\"Neue Rollengruppe:\");\n      name.clear();\n      description.clear();\n      dtRoles.update();\n      name.setEnabled(true);\n      description.setEnabled(true);\n      popupFrame.hideMessageBar();\n      popupFrame.showContent();\n    } else {\n      rg = group;\n      loadRoles(rg);\n\n    }\n\n  }\n\n  public void showAuth(RoleWithGroup rwg) {\n    deselectAllAuth();\n    if (rwg == null) {\n      roleWithGroup = new RoleWithGroup();\n      dtAuth.update();\n    } else {\n      roleWithGroup = rwg;\n      selectAuth();\n    }\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  private void deselectAllRoles() {\n    for (ModelData<RoleWithGroup> model : dtRoles.getStore().getAll()) {\n      model.put(\"selector\", false);\n\n    }\n  }\n\n  private void deselectAllAuth() {\n    for (ModelData<Authority> model : dtAuth.getStore().getAll()) {\n      model.put(\"authSelector\", false);\n    }\n  }\n\n  public void hide() {\n    popupFrame.hide();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditCreditTypeDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditCreditTypeDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4447,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.form.TextArea;\nimport com.extjs.gxt.ui.client.widget.form.TextField;\nimport com.extjs.gxt.ui.client.widget.layout.FitLayout;\nimport com.google.gwt.user.client.ui.CheckBox;\nimport com.google.gwt.user.client.ui.FlexTable;\nimport com.google.gwt.user.client.ui.HTML;\n\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class EditCreditTypeDialog extends Dialog {\n\n  private static EditCreditTypeDialog _instance = null;\n\n  private CreditType ct = null;\n\n  private TextField<String> name = new TextField<String>();\n\n  private TextArea description = new TextArea();\n\n  private CheckBox active = new CheckBox();\n\n  public static EditCreditTypeDialog getInstance() {\n    if (_instance == null) {\n      _instance = new EditCreditTypeDialog();\n    }\n    _instance.name.setValue(\"\");\n    _instance.description.setValue(\"\");\n    _instance.active.setValue(true);\n    return _instance;\n  }\n\n  public static EditCreditTypeDialog getInstance(CreditType ct) {\n    EditCreditTypeDialog instance = getInstance();\n    instance.setCreditType(ct);\n    return instance;\n  }\n\n  private void setCreditType(CreditType ct) {\n    this.ct = ct;\n    name.setValue(ct.getName());\n    description.setValue(ct.getDescription());\n    active.setValue(ct.getActive());\n  }\n\n  public EditCreditTypeDialog() {\n    setSize(400, 200);\n    okText = AdminUI.ADMINCOMMONTEXTPOOL.dialogSave();\n    cancelText = AdminUI.ADMINCOMMONTEXTPOOL.dialogCancel();\n    setButtons(Dialog.OKCANCEL);\n    setHeading(AdminUI.ADMINCOMMONTEXTPOOL.credittypeDialogHeading());\n    setResizable(false);\n\n    name.addStyleName(\"field-necessary\");\n    name.setWidth(300);\n    name.setMaxLength(64);\n    name.setAllowBlank(false);\n    description.setWidth(300);\n    description.setHeight(80);\n    description.setMaxLength(1000);\n\n    FlexTable table = new FlexTable();\n    table.setWidget(0, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.credittypeDialogNameLabel()));\n    table.setWidget(0, 1, name);\n    table.setWidget(1, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.credittypeDialogDescriptionLabel()));\n    table.setWidget(1, 1, description);\n    table.setWidget(2, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.credittypeDialogActivLabel()));\n    table.setWidget(2, 1, active);\n\n    setLayout(new FitLayout());\n    add(table);\n  }\n\n  @Override\n  protected void onButtonPressed(Button button) {\n    super.onButtonPressed(button);\n    if (button == getButtonById(OK)) {\n\n      if (!name.validate() || !description.validate()) {\n        MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.credittypeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.credittypeDialogValidation(), null);\n        return;\n      }\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.credittypeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.credittypeMessageSave(), AdminUI.ADMINCOMMONTEXTPOOL.credittypeMessageSave());\n      wait.show();\n\n      if (ct == null) {\n        ct = new CreditType(name.getValue(), description.getValue(), active.getValue());\n      } else {\n        ct.setName(name.getValue());\n        ct.setDescription(description.getValue());\n        ct.setActive(active.getValue());\n      }\n\n      SettingsServiceLocator.getCreditTypeServlet().saveCreditType(ct, new BaseAsyncCallback<CreditType>() {\n\n        @Override\n        public void onSuccess(CreditType result) {\n          wait.close();\n          PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.UPDATECREDIT_TYPES));\n          hide();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.credittypeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxSaveError(), null);\n        }\n\n      });\n    }\n    if (button == getButtonById(CANCEL)) {\n      hide();\n    }\n  }\n\n  @Override\n  protected void onHide() {\n    super.onHide();\n    ct = null;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtEditMessageDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtEditMessageDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8115,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.core.client.Scheduler;\nimport com.google.gwt.core.client.Scheduler.ScheduledCommand;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.bite.core.shared.dto.systemmessage.SystemMessage;\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.CheckBox;\nimport at.a1ta.bite.ui.client.widget.DateBox;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.TextArea;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.event.SelectRolesEvent;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.ErrorHandler;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.service.SystemMessageServlet;\nimport at.a1ta.framework.ui.client.service.SystemMessageServletAsync;\n\npublic class GwtEditMessageDialog extends Composite {\n\n  // @formatter:off\n  private static GwtEditMessageDialogUiBinder uiBinder = GWT.create(GwtEditMessageDialogUiBinder.class);\n\n  interface GwtEditMessageDialogUiBinder extends UiBinder<Widget, GwtEditMessageDialog> {}\n\n  private static GwtEditMessageDialog _instance = null;\n\n  private PopupFrame popupFrame;\n\n  private static SystemMessage message = null;\n\n  private static boolean copy;\n\n  private static long messageId;\n\n  @UiField(provided = true)\n  DataTable<Role> roleStore;\n  @UiField\n  InputBox title;\n  @UiField\n  TextArea txtText;\n  @UiField\n  CheckBox checkBoxOneTime;\n  @UiField\n  CheckBox checkBoxOnlyMenue;\n  @UiField\n  Button bRoles;\n  @UiField\n  Button bImage;\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n  @UiField\n  DateBox from;\n  @UiField\n  DateBox to;\n\n  public static GwtEditMessageDialog getInstance() {\n    if (_instance == null) {\n      _instance = new GwtEditMessageDialog(messageId, copy);\n    }\n    _instance.title.setValue(\"\");\n    _instance.txtText.setValue(\"\");\n    _instance.checkBoxOneTime.setValue(true);\n    _instance.checkBoxOnlyMenue.setValue(true);\n    return _instance;\n  }\n\n  public static GwtEditMessageDialog getInstance(SystemMessage message) {\n    GwtEditMessageDialog instance = getInstance();\n    instance.setSystemMessage(message);\n    return instance;\n  }\n\n  private void setSystemMessage(SystemMessage message) {\n    GwtEditMessageDialog.message = message;\n  }\n\n  public GwtEditMessageDialog(long messageId, boolean copy) {\n    createTable();\n    initWidget(uiBinder.createAndBindUi(this));\n    GwtEditMessageDialog.messageId = messageId;\n    GwtEditMessageDialog.copy = copy;\n    popupFrame = new PopupFrame(this, 500, 360);\n    loadMessage();\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        cancel();\n      }\n\n      private void cancel() {\n        popupFrame.close();\n      }\n    });\n\n    PortletEventManager.addListener(CuCoEventType.SELECT_ROLES, new PortletEventListener<SelectRolesEvent>() {\n\n      @Override\n      public void handleEvent(SelectRolesEvent be) {\n        message.getAccessible4roles().clear();\n        ArrayList<ModelData<Role>> roles = new ArrayList<ModelData<Role>>();\n        for (Role r : be.getRoles()) {\n          message.getAccessible4roles().add(r);\n          ModelData<Role> help = new ModelData<Role>(r);\n          help.put(\"bean\", r);\n          help.put(\"name\", r.getName());\n          roles.add(help);\n        }\n        roleStore.getStore().clear();\n        roleStore.getStore().add(roles);\n      }\n\n    });\n\n    bRoles.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        List<Role> r = new ArrayList<Role>();\n        for (ModelData<Role> bm : roleStore.getStore().getAll()) {\n          r.add((Role) bm.getBean());\n        }\n        new GwtSelectRolesDialog().show();\n      }\n\n    });\n  }\n\n  private void loadMessage() {\n\n    final SystemMessageServletAsync service = (SystemMessageServletAsync) GWT.create(SystemMessageServlet.class);\n    service.getMessageById(messageId, new BaseAsyncCallback<SystemMessage>() {\n\n      @Override\n      public void onSuccess(SystemMessage result) {\n        message = result;\n\n        if (copy) {\n          message.setId(0L);\n        }\n\n        title.setValue(result.getMessageContent().getTitle());\n        txtText.setText(result.getMessageContent().getText());\n        from.setValue(result.getPeriodOfValidity().getValidFrom());\n        to.setValue(result.getPeriodOfValidity().getValidUntil());\n        checkBoxOneTime.setValue(result.getPromptOnce());\n        checkBoxOnlyMenue.setValue(result.getShowInMenuBar());\n        roles();\n\n        Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n          @Override\n          public void execute() {\n            title.focus();\n          }\n        });\n        popupFrame.center();\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        ErrorHandler.onError(exception);\n      }\n    });\n\n  }\n\n  public void roles() {\n    for (Role r : message.getAccessible4roles()) {\n      ModelData<Role> bm = new ModelData<Role>(r);\n      bm.put(\"name\", r.getName());\n      bm.put(\"bean\", r);\n      roleStore.getStore().add(bm);\n    }\n  }\n\n  private void createTable() {\n    ArrayList<Column<Role>> columns = new ArrayList<Column<Role>>();\n    columns.add(new Column<Role>(\"name\", \"\", \"100%\"));\n    roleStore = new DataTable<Role>(columns);\n    roleStore.setHeight(50);\n  }\n\n  private void fillMessage() throws IllegalArgumentException {\n    message.getMessageContent().setTitle(title.getValue());\n    message.getMessageContent().setText(txtText.getText());\n    message.setPromptOnce(checkBoxOneTime.getValue());\n    message.setShowInMenuBar(checkBoxOnlyMenue.getValue());\n\n    Date f = from.getValue();\n    message.getPeriodOfValidity().setValidFrom(f);\n    Date u = to.getValue();\n    message.getPeriodOfValidity().setValidUntil(u);\n  }\n\n  protected void save() {\n    if (message != null) {\n      try {\n        fillMessage();\n        if (message.getMessageContent().getTitle() == null || message.getMessageContent().getTitle().equals(\"\")) {\n          Window.alert(\"Bitte geben sie einen Titel ein!\");\n          return;\n        }\n        if (message.getMessageContent().getText() == null || message.getMessageContent().getText().equals(\"\")) {\n          Window.alert(\"Bitte geben sie einen Text ein!\");\n          return;\n        }\n        final SystemMessageServletAsync service = (SystemMessageServletAsync) GWT.create(SystemMessageServlet.class);\n        service.storeSystemMessage(message, new BaseAsyncCallback<String>() {\n\n          @Override\n          public void onSuccess(String result) {\n            PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.LOAD_MESSAGES));\n            popupFrame.close();\n          }\n\n        });\n      } catch (IllegalArgumentException ex) {\n        Window.alert(\"Bitte ein g\u00fcltiges Datum eingeben (Format: DD.MM.JJJJ)\");\n      }\n    } else {\n      popupFrame.close();\n    }\n  }\n\n  public void show() {\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  public void hide() {\n    popupFrame.hide();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditMessageDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditMessageDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 10293,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.ListView;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.form.CheckBox;\nimport com.extjs.gxt.ui.client.widget.form.TextField;\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.core.client.Scheduler;\nimport com.google.gwt.core.client.Scheduler.ScheduledCommand;\nimport com.google.gwt.i18n.client.DateTimeFormat;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Grid;\nimport com.google.gwt.user.client.ui.Image;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.bite.core.shared.dto.systemmessage.SystemMessage;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.event.SelectRolesEvent;\nimport at.a1ta.framework.gxt.ui.Util;\nimport at.a1ta.framework.ui.client.ErrorHandler;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.service.ServiceLocator;\nimport at.a1ta.framework.ui.client.service.SystemMessageServlet;\nimport at.a1ta.framework.ui.client.service.SystemMessageServletAsync;\nimport at.a1ta.framework.ui.client.tinymce.CuCoTinyMCEConfiguration;\nimport at.a1ta.framework.ui.client.tinymce.TinyMCE;\nimport at.a1ta.framework.ui.client.util.Validator;\n\npublic class EditMessageDialog extends Dialog {\n\n  private Grid grid;\n  private TextField<String> title = new TextField<String>();\n  private TinyMCE editor = new TinyMCE(50, 15, new CuCoTinyMCEConfiguration());\n  private TextField<String> from = new TextField<String>();\n  private TextField<String> until = new TextField<String>();\n  private CheckBox once = new CheckBox();\n  private CheckBox menue = new CheckBox();\n  private SystemMessage message = null;\n  private ButtonListener listener = new ButtonListener();\n  private DateTimeFormat fmt = DateTimeFormat.getFormat(\"dd.MM.yyyy\");\n  private Button selectImage = new Button(AdminUI.ADMINCOMMONTEXTPOOL.smPickImage());\n  private Image img = new Image(\"\");\n  private Button deleteImage;\n\n  private boolean copy;\n  private ListStore<BaseModelData> roleStore = new ListStore<BaseModelData>();\n  private long messageId;\n\n  public EditMessageDialog(String header, long messageId, boolean copy) {\n    this.messageId = messageId;\n    setModal(true);\n    setHeading(header);\n    okText = AdminUI.ADMINCOMMONTEXTPOOL.save();\n    cancelText = AdminUI.ADMINCOMMONTEXTPOOL.cancel();\n    setButtons(OKCANCEL);\n    setMinHeight(600);\n    setWidth(650);\n\n    setClosable(true);\n    setLayoutOnChange(true);\n    setBodyBorder(false);\n    setBorders(false);\n    setResizable(false);\n\n    this.copy = copy;\n\n    if (this.messageId != 0 && !copy) {\n      Button delete = new Button(AdminUI.ADMINCOMMONTEXTPOOL.delete());\n      delete.addSelectionListener(listener);\n      getButtonBar().add(delete);\n    }\n    selectImage.addSelectionListener(listener);\n\n    PortletEventManager.addListener(CuCoEventType.SELECT_ROLES, new PortletEventListener<SelectRolesEvent>() {\n\n      @Override\n      public void handleEvent(SelectRolesEvent be) {\n        message.getAccessible4roles().clear();\n        List<BaseModelData> roles = new ArrayList<BaseModelData>();\n        for (Role r : be.getRoles()) {\n          message.getAccessible4roles().add(r);\n          BaseModelData help = new BaseModelData();\n          help.set(\"name\", r.getName());\n          help.set(\"bean\", r);\n          roles.add(help);\n        }\n\n        roleStore.removeAll();\n\n        roleStore.add(roles);\n      }\n    });\n\n  }\n\n  @Override\n  protected void beforeRender() {\n\n    final SystemMessageServletAsync service = (SystemMessageServletAsync) GWT.create(SystemMessageServlet.class);\n    service.getMessageById(messageId, new BaseAsyncCallback<SystemMessage>() {\n\n      @Override\n      public void onSuccess(SystemMessage result) {\n        message = result;\n\n        if (copy) {\n          message.setId(0L);\n        }\n\n        grid = new Grid(7, 2);\n        String[] labels = {AdminUI.ADMINCOMMONTEXTPOOL.smTitle(), AdminUI.ADMINCOMMONTEXTPOOL.smText(), AdminUI.ADMINCOMMONTEXTPOOL.smValidity(), AdminUI.ADMINCOMMONTEXTPOOL.smOptions(),\n            AdminUI.ADMINCOMMONTEXTPOOL.smRoles(), AdminUI.ADMINCOMMONTEXTPOOL.smImageFile()};\n        for (int i = 0; i < labels.length; ++i) {\n          grid.setText(i, 0, labels[i]);\n        }\n\n        title.setValue(result.getMessageContent().getTitle());\n        grid.setWidget(0, 1, title);\n\n        editor.setWidth(\"100%\");\n        editor.setText(result.getMessageContent().getText());\n        grid.setWidget(1, 1, editor);\n\n        Grid g = new Grid(1, 4);\n        g.setText(0, 0, AdminUI.ADMINCOMMONTEXTPOOL.smFrom());\n        from.setValue(fmt.format(result.getPeriodOfValidity().getValidFrom()));\n        g.setWidget(0, 1, from);\n        g.setText(0, 2, AdminUI.ADMINCOMMONTEXTPOOL.smUntil());\n        until.setValue(fmt.format(result.getPeriodOfValidity().getValidUntil()));\n        g.setWidget(0, 3, until);\n        grid.setWidget(2, 1, g);\n\n        g = new Grid(2, 1);\n        once.setValue(result.getPromptOnce());\n        once.setBoxLabel(AdminUI.ADMINCOMMONTEXTPOOL.smOptionsOneTime());\n        g.setWidget(0, 0, once);\n        menue.setValue(result.getShowInMenuBar());\n        menue.setBoxLabel(AdminUI.ADMINCOMMONTEXTPOOL.smOptionsOnlyMenue());\n        g.setWidget(1, 0, menue);\n        grid.setWidget(3, 1, g);\n\n        g = new Grid(1, 2);\n        Button b = new Button(\"Rollen ausw\u00e4hlen\");\n        b.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n          @Override\n          public void componentSelected(ButtonEvent ce) {\n            List<Role> r = new ArrayList<Role>();\n            for (BaseModelData bm : roleStore.getModels()) {\n              r.add((Role) bm.get(\"bean\"));\n            }\n            new SelectRolesDialog(\"Rolle ausw\u00e4hlen\", r).show();\n          }\n        });\n\n        for (Role r : message.getAccessible4roles()) {\n          BaseModelData bm = new BaseModelData();\n          bm.set(\"name\", r.getName());\n          bm.set(\"bean\", r);\n          roleStore.add(bm);\n        }\n        g.setWidget(0, 1, b);\n        ListView<BaseModelData> roles = new ListView<BaseModelData>();\n        roles.setStore(roleStore);\n        roles.setDisplayProperty(\"name\");\n        roles.setHeight(75);\n        roles.setWidth(200);\n        g.setWidget(0, 0, roles);\n\n        grid.setWidget(4, 1, g);\n\n        g = new Grid(1, 2);\n\n        deleteImage = new Button(AdminUI.ADMINCOMMONTEXTPOOL.smDeleteImage());\n        deleteImage.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n          @Override\n          public void componentSelected(ButtonEvent ce) {\n            message.getMessageContent().setImageUri(\"\");\n            img.setUrl(\"\");\n            img.setVisible(false);\n            deleteImage.setVisible(false);\n          }\n        });\n        g.setWidget(0, 1, deleteImage);\n\n        img.setUrl(Util.getExtImgPath() + message.getMessageContent().getImageUri());\n        if (Validator.isNullOrEmpty(message.getMessageContent().getImageUri())) {\n          img.setVisible(false);\n          deleteImage.setVisible(false);\n        } else {\n          img.setVisible(true);\n          deleteImage.setVisible(true);\n        }\n        g.setWidget(0, 0, img);\n\n        grid.setWidget(5, 1, g);\n        grid.setWidget(6, 0, selectImage);\n\n        grid.setWidth(\"100%\");\n        add(grid);\n        Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n          @Override\n          public void execute() {\n            title.focus();\n          }\n        });\n        center();\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        ErrorHandler.onError(exception);\n      }\n    });\n\n  }\n\n  private void fillMessage() throws IllegalArgumentException {\n    message.getMessageContent().setTitle(title.getValue());\n    message.getMessageContent().setText(editor.getText());\n    message.setPromptOnce(once.getValue());\n    message.setShowInMenuBar(menue.getValue());\n\n    Date f = fmt.parseStrict(from.getValue());\n    message.getPeriodOfValidity().setValidFrom(f);\n    Date u = fmt.parseStrict(until.getValue());\n    message.getPeriodOfValidity().setValidUntil(u);\n  }\n\n  @Override\n  protected void onButtonPressed(final Button button) {\n    if (button == getButtonBar().getItemByItemId(OK)) {\n      if (message != null) {\n        try {\n          fillMessage();\n          if (message.getMessageContent().getTitle() == null || message.getMessageContent().getTitle().equals(\"\")) {\n            Window.alert(\"Bitte geben sie einen Titel ein!\");\n            return;\n          }\n          if (message.getMessageContent().getText() == null || message.getMessageContent().getText().equals(\"\")) {\n            Window.alert(\"Bitte geben sie einen Text ein!\");\n            return;\n          }\n          final SystemMessageServletAsync service = (SystemMessageServletAsync) GWT.create(SystemMessageServlet.class);\n          service.storeSystemMessage(message, new BaseAsyncCallback<String>() {\n\n            @Override\n            public void onSuccess(String result) {\n              hide(button);\n            }\n\n          });\n        } catch (IllegalArgumentException ex) {\n          Window.alert(\"Bitte ein g\u00fcltiges Datum eingeben (Format: DD.MM.JJJJ)\");\n        }\n      }\n    } else {\n      hide(button);\n    }\n  }\n\n  private class ButtonListener extends SelectionListener<ButtonEvent> {\n\n    @Override\n    public void componentSelected(ButtonEvent ce) {\n      if (ce.getButton() != selectImage) {\n        ServiceLocator.getSystemMessageService().deleteSystemMessage(message, new BaseAsyncCallback<String>() {\n          @Override\n          public void onSuccess(String result) {\n            hide();\n          }\n        });\n      }\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/SelectTeamMemberDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/SelectTeamMemberDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 10965,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.LoadConfig;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Events;\nimport com.extjs.gxt.ui.client.event.GridEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionChangedEvent;\nimport com.extjs.gxt.ui.client.event.SelectionChangedListener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.google.gwt.user.client.ui.FlexTable;\nimport com.google.gwt.user.client.ui.HasHorizontalAlignment;\nimport com.google.gwt.user.client.ui.HasVerticalAlignment;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddTeamMembersEvent;\nimport at.a1ta.framework.gxt.ui.FilterablePagingMemoryProxy;\nimport at.a1ta.framework.gxt.ui.GridContainer;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.gxt.ui.ProxyFilterField;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class SelectTeamMemberDialog extends Dialog {\n\n  private static SelectTeamMemberDialog _instance = null;\n  private PagingGridContainer<ListStore<BaseModelData>, BaseModelData> teamGridContainer;\n  private GridContainer<ListStore<BaseModelData>, BaseModelData> selectionGridContainer;\n  private ProxyFilterField<String> namefilter = null;\n  private ProxyFilterField<String> userfilter = null;\n  private ProxyFilterField<String> oefilter = null;\n  private FilterablePagingMemoryProxy proxy = null;\n  private Button add;\n  private Button remove;\n\n  public static synchronized SelectTeamMemberDialog getInstance() {\n    if (_instance == null) {\n      _instance = new SelectTeamMemberDialog();\n    }\n    return _instance;\n  }\n\n  public SelectTeamMemberDialog() {\n    setSize(600, 650);\n    setResizable(false);\n    okText = AdminUI.ADMINCOMMONTEXTPOOL.dialogUse();\n    cancelText = AdminUI.ADMINCOMMONTEXTPOOL.dialogCancel();\n    setButtons(Dialog.OKCANCEL);\n    setHeading(AdminUI.ADMINCOMMONTEXTPOOL.teamSelectMemberDialog());\n    setModal(true);\n\n    FlexTable filters = new FlexTable();\n    filters.setWidth(\"100%\");\n\n    namefilter = new ProxyFilterField<String>() {\n\n      @Override\n      public boolean doFilter(ModelData m) {\n        return m.get(\"name\").toString().toLowerCase().contains(getValue().toLowerCase());\n      }\n    };\n    namefilter.setWidth(200);\n    filters.setWidget(0, 0, namefilter);\n\n    userfilter = new ProxyFilterField<String>() {\n\n      @Override\n      public boolean doFilter(ModelData m) {\n        return m.get(\"user\").toString().toLowerCase().contains(getValue().toLowerCase());\n      }\n    };\n    userfilter.setWidth(150);\n    filters.setWidget(0, 1, userfilter);\n\n    oefilter = new ProxyFilterField<String>() {\n\n      @Override\n      public boolean doFilter(ModelData m) {\n        if (m.get(\"orgunit\") == null) {\n          return false;\n        }\n        return m.get(\"orgunit\").toString().toLowerCase().contains(getValue().toLowerCase());\n      }\n    };\n    oefilter.setWidth(150);\n    filters.setWidget(0, 2, oefilter);\n\n    add(filters);\n    add(renderGrid());\n    add(renderMoveButtons());\n    add(renderSelectionGrid());\n\n  }\n\n  private Widget renderSelectionGrid() {\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamName(), 100);\n    configs.add(config);\n\n    config = new ColumnConfig(\"user\", AdminUI.ADMINCOMMONTEXTPOOL.teamNtAccount(), 80);\n    configs.add(config);\n\n    config = new ColumnConfig(\"orgunit\", AdminUI.ADMINCOMMONTEXTPOOL.teamOe(), 40);\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    selectionGridContainer = new GridContainer<ListStore<BaseModelData>, BaseModelData>(new ListStore<BaseModelData>(), cm, 250);\n    selectionGridContainer.getGrid().setAutoExpandColumn(\"orgunit\");\n\n    selectionGridContainer.getGrid().getSelectionModel().addSelectionChangedListener(new SelectionChangedListener<BaseModelData>() {\n      @Override\n      public void selectionChanged(SelectionChangedEvent<BaseModelData> se) {\n        if (se.getSelectedItem() != null) {\n          remove.enable();\n        } else {\n          remove.disable();\n        }\n      }\n    });\n\n    selectionGridContainer.getGrid().addListener(Events.CellDoubleClick, new Listener<BaseEvent>() {\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void handleEvent(BaseEvent be) {\n        if (!(be instanceof GridEvent)) {\n          return;\n        }\n        GridEvent<BaseModelData> ge = (GridEvent<BaseModelData>) be;\n\n        BaseModelData model = ge.getModel();\n        ((List<BaseModelData>) proxy.getData()).add(model);\n        selectionGridContainer.getGrid().getStore().remove(model);\n\n        teamGridContainer.getGrid().getStore().getLoader().load();\n        selectionGridContainer.getGrid().getView().refresh(false);\n\n      }\n    });\n    return selectionGridContainer;\n  }\n\n  private Widget renderMoveButtons() {\n    FlexTable table = new FlexTable();\n    table.setWidth(\"100%\");\n    add = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamButtonAdd());\n    add.addSelectionListener(new SelectionListener<ButtonEvent>() {\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void componentSelected(ButtonEvent ce) {\n        BaseModelData model = teamGridContainer.getGrid().getSelectionModel().getSelectedItem();\n        selectionGridContainer.getGrid().getStore().add(model);\n        ((List<BaseModelData>) proxy.getData()).remove(model);\n        teamGridContainer.getGrid().getStore().getLoader().load();\n        selectionGridContainer.getGrid().getView().refresh(false);\n      }\n    });\n    add.disable();\n    table.setWidget(0, 0, add);\n\n    remove = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamButtonDelete());\n    remove.addSelectionListener(new SelectionListener<ButtonEvent>() {\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void componentSelected(ButtonEvent ce) {\n        BaseModelData model = selectionGridContainer.getGrid().getSelectionModel().getSelectedItem();\n        ((List<BaseModelData>) proxy.getData()).add(model);\n        selectionGridContainer.getGrid().getStore().remove(model);\n\n        teamGridContainer.getGrid().getStore().getLoader().load();\n        selectionGridContainer.getGrid().getView().refresh(false);\n      }\n    });\n    remove.disable();\n    table.setWidget(0, 1, remove);\n\n    table.getFlexCellFormatter().setAlignment(0, 0, HasHorizontalAlignment.ALIGN_CENTER, HasVerticalAlignment.ALIGN_MIDDLE);\n    table.getFlexCellFormatter().setAlignment(0, 1, HasHorizontalAlignment.ALIGN_CENTER, HasVerticalAlignment.ALIGN_MIDDLE);\n\n    return table;\n  }\n\n  private Widget renderGrid() {\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamName(), 100);\n    configs.add(config);\n\n    config = new ColumnConfig(\"user\", AdminUI.ADMINCOMMONTEXTPOOL.teamNtAccount(), 80);\n    configs.add(config);\n\n    config = new ColumnConfig(\"orgunit\", AdminUI.ADMINCOMMONTEXTPOOL.teamOe(), 40);\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    teamGridContainer = new PagingGridContainer<ListStore<BaseModelData>, BaseModelData>(new ListStore<BaseModelData>(), cm, 10, 250);\n    teamGridContainer.getGrid().setAutoExpandColumn(\"orgunit\");\n\n    teamGridContainer.getGrid().getSelectionModel().addSelectionChangedListener(new SelectionChangedListener<BaseModelData>() {\n      @Override\n      public void selectionChanged(SelectionChangedEvent<BaseModelData> se) {\n        if (se.getSelectedItem() != null) {\n          add.enable();\n        } else {\n          add.disable();\n        }\n      }\n    });\n\n    teamGridContainer.getGrid().addListener(Events.CellDoubleClick, new Listener<BaseEvent>() {\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void handleEvent(BaseEvent be) {\n        if (!(be instanceof GridEvent)) {\n          return;\n        }\n        GridEvent<BaseModelData> ge = (GridEvent<BaseModelData>) be;\n\n        BaseModelData model = ge.getModel();\n        selectionGridContainer.getGrid().getStore().add(model);\n        ((List<BaseModelData>) proxy.getData()).remove(model);\n        teamGridContainer.getGrid().getStore().getLoader().load();\n        selectionGridContainer.getGrid().getView().refresh(false);\n\n      }\n    });\n    return teamGridContainer;\n  }\n\n  public void init() {\n    teamGridContainer.getGrid().getStore().removeAll();\n    selectionGridContainer.getGrid().getStore().removeAll();\n\n    SettingsServiceLocator.getTeamServlet().getAllUsers(new BaseAsyncCallback<ArrayList<BiteUser>>() {\n      @Override\n      public void onSuccess(ArrayList<BiteUser> result) {\n        ArrayList<BaseModelData> results = new ArrayList<BaseModelData>();\n\n        for (BiteUser user : result) {\n          BaseModelData model = new BaseModelData();\n          model.set(\"bean\", user);\n          model.set(\"name\", user.getName());\n          model.set(\"user\", user.getUsername());\n          model.set(\"orgunit\", user.getManagementLevel1OrgUnitShort());\n          results.add(model);\n        }\n\n        proxy = new FilterablePagingMemoryProxy(results);\n        // loader\n        BasePagingLoader<PagingLoadResult<LoadConfig>> gridloader = new BasePagingLoader<PagingLoadResult<LoadConfig>>(proxy);\n        gridloader.setRemoteSort(true);\n        teamGridContainer.getToolbar().bind(gridloader);\n\n        namefilter.bind(gridloader);\n        userfilter.bind(gridloader);\n        oefilter.bind(gridloader);\n\n        ListStore<BaseModelData> store = new ListStore<BaseModelData>(gridloader);\n        teamGridContainer.reconfigure(store);\n        gridloader.load();\n      }\n    });\n  }\n\n  @Override\n  protected void onButtonPressed(Button button) {\n    super.onButtonPressed(button);\n    if (button != null && button.equals(getButtonById(OK))) {\n      PortletEventManager.fireEvent(new AddTeamMembersEvent(selectionGridContainer.getGrid().getStore().getModels()));\n      hide();\n    }\n    if (button != null && button.equals(getButtonById(CANCEL))) {\n      hide();\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditTeamsDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditTeamsDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3884,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.Date;\nimport java.util.logging.Logger;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.TextArea;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddTeamEvent;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class EditTeamsDialog extends Composite {\n\n  // @formatter:off\n  private static EditTeamsDialogUiBinder uiBinder = GWT.create(EditTeamsDialogUiBinder.class);\n\n  private static Logger logger = Logger.getLogger(EditTeamsDialog.class.getName());\n\n  interface EditTeamsDialogUiBinder extends UiBinder<Widget, EditTeamsDialog> {}\n\n  private static EditTeamsDialog _instance = null;\n\n  private Team team;\n\n  private PopupFrame popupFrame;\n\n  @UiField\n  InputBox teamName;\n  @UiField\n  TextArea txtDescription;\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n\n  public static EditTeamsDialog getInstance() {\n    if (_instance == null) {\n      _instance = new EditTeamsDialog();\n    }\n    _instance.teamName.setValue(\"\");\n    _instance.txtDescription.setValue(\"\");\n    return _instance;\n  }\n\n  public static EditTeamsDialog getInstance(Team team) {\n    EditTeamsDialog instance = getInstance();\n    instance.setTeam(team);\n    return instance;\n  }\n\n  private void setTeam(Team team) {\n    this.team = team;\n    teamName.setValue(team.getName());\n    txtDescription.setValue(team.getDescription());\n  }\n\n  public EditTeamsDialog() {\n    initWidget(uiBinder.createAndBindUi(this));\n    popupFrame = new PopupFrame(this, 365, 200);\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        cancel();\n      }\n\n      private void cancel() {\n        popupFrame.close();\n      }\n    });\n\n  }\n\n  protected void save() {\n    if (!teamName.validate() || !txtDescription.validate()) {\n      Window.alert(\"\\\"Name\\\" ist ein Pflichtfeld\");\n      return;\n    }\n    Window.alert(\"Team speichern\");\n\n    if (team == null) {\n      team = new Team();\n      team.setCreator(UserManager.getUserInfo().getBiteUser());\n      team.setCreateDate(new Date());\n    }\n    team.setName(teamName.getValue());\n    team.setDescription(txtDescription.getValue());\n    SettingsServiceLocator.getTeamServlet().saveTeam(team, new BaseAsyncCallback<Team>() {\n\n      @Override\n      public void onSuccess(Team result) {\n        PortletEventManager.fireEvent(new AddTeamEvent(team));\n        popupFrame.close();\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.messageboxSaveError());\n      }\n    });\n  }\n\n  public void show(Team tm) {\n    if (tm == null) {\n      teamName.clear();\n      txtDescription.clear();\n    } else {\n      team = tm;\n      teamName.setText(team.getName());\n      txtDescription.setText(team.getDescription());\n    }\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  public void hide() {\n    popupFrame.hide();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/SelectRolesDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/SelectRolesDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5318,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.Style.SelectionMode;\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.CheckBoxSelectionModel;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.google.gwt.core.client.Scheduler;\nimport com.google.gwt.core.client.Scheduler.ScheduledCommand;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.cuco.admin.ui.common.client.event.SelectRolesEvent;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.framework.gxt.ui.GridContainer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\n\npublic class SelectRolesDialog extends Dialog {\n\n  private GridContainer<ListStore<BaseModelData>, BaseModelData> gridContainer;\n\n  private CheckBoxSelectionModel<BaseModelData> roleSM = null;\n\n  private Long appId;\n\n  private List<Role> preSelection;\n\n  public SelectRolesDialog(String header, List<Role> preselection) {\n    this.preSelection = preselection;\n\n    setModal(true);\n    setHeading(header);\n    okText = \"Speichern\";\n    cancelText = \"Abbrechen\";\n    setButtons(OKCANCEL);\n\n    setClosable(false);\n    setLayoutOnChange(true);\n    setBodyBorder(false);\n    setBorders(false);\n    setHideOnButtonClick(false);\n    setHeight(600);\n    setWidth(500);\n\n    initRoles();\n  }\n\n  private void initRoles() {\n    roleSM = new CheckBoxSelectionModel<BaseModelData>() {\n\n      @Override\n      protected void doMultiSelect(java.util.List<BaseModelData> models, boolean keepExisting, boolean supressEvent) {\n        if (models.size() == grid.getStore().getModels().size()) {\n          super.doMultiSelect(models, keepExisting, supressEvent);\n        } else {\n          super.doMultiSelect(models, true, supressEvent);\n        }\n      }\n\n      @Override\n      protected void handleMouseDown(com.extjs.gxt.ui.client.event.GridEvent<BaseModelData> e) {\n        BaseModelData sel = listStore.getAt(e.getRowIndex());\n        boolean issel = isSelected(sel);\n        super.handleMouseDown(e);\n        if (issel) {\n          doDeselect(Arrays.asList(sel), false);\n        }\n      }\n    };\n    roleSM.setSelectionMode(SelectionMode.MULTI);\n\n    gridContainer = new GridContainer<ListStore<BaseModelData>, BaseModelData>(new ListStore<BaseModelData>(), createRoleColumnModel());\n    gridContainer.setWidth(480);\n\n    gridContainer.getGrid().setSelectionModel(roleSM);\n    gridContainer.getGrid().addPlugin(roleSM);\n\n    CommonServiceLocator.getRoleServlet().getAllRolesForSysMsg(UserManager.getUserInfo().getId(), new BaseAsyncCallback<ArrayList<Role>>() {\n\n      @Override\n      public void onSuccess(ArrayList<Role> result) {\n        ArrayList<BaseModelData> roles = new ArrayList<BaseModelData>();\n\n        for (Role role : result) {\n          roles.add(createRoleModel(role));\n        }\n        gridContainer.getGrid().getStore().add(roles);\n\n        Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n          @Override\n          public void execute() {\n            gridContainer.getGrid().getSelectionModel().deselectAll();\n            List<BaseModelData> roles = new ArrayList<BaseModelData>();\n            for (Role role : preSelection) {\n              roles.add(createRoleModel(role));\n            }\n            gridContainer.getGrid().getSelectionModel().setSelection(roles);\n          }\n        });\n      }\n\n    });\n    add(gridContainer);\n  }\n\n  private BaseModelData createRoleModel(Role role) {\n    BaseModelData model = new BaseModelData() {\n\n      // needed for selection model of grid/store\n      @Override\n      public boolean equals(Object obj) {\n        if (!(obj instanceof BaseModelData)) {\n          return false;\n        }\n        Object name = get(\"name\");\n        Object other = ((BaseModelData) obj).get(\"name\");\n        return name != null ? name.equals(other) : other == null;\n      }\n\n      @Override\n      public int hashCode() {\n        Object name = get(\"name\");\n        return name != null ? name.hashCode() : super.hashCode();\n      }\n    };\n    model.set(\"bean\", role);\n    model.set(\"name\", role.getName());\n    model.set(\"desc\", role.getDescription());\n\n    return model;\n  }\n\n  private ColumnModel createRoleColumnModel() {\n    List<ColumnConfig> columns = new ArrayList<ColumnConfig>();\n    columns.add(roleSM.getColumn());\n    columns.add(new ColumnConfig(\"name\", \"Bezeichnung\", 200));\n    columns.add(new ColumnConfig(\"desc\", \"Beschreibung\", 200));\n\n    return new ColumnModel(columns);\n  }\n\n  @Override\n  protected void onButtonPressed(Button button) {\n    if (button == getButtonBar().getItemByItemId(OK)) {\n      List<Role> roles = new ArrayList<Role>();\n      for (BaseModelData bm : gridContainer.getGrid().getSelectionModel().getSelectedItems()) {\n        roles.add((Role) bm.get(\"bean\"));\n      }\n      PortletEventManager.fireEvent(new SelectRolesEvent(roles));\n    }\n    hide();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditUnknownAreaCodeDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditUnknownAreaCodeDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4306,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.form.TextArea;\nimport com.extjs.gxt.ui.client.widget.form.TextField;\nimport com.extjs.gxt.ui.client.widget.layout.FitLayout;\nimport com.google.gwt.user.client.ui.FlexTable;\nimport com.google.gwt.user.client.ui.HTML;\n\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\n\npublic class EditUnknownAreaCodeDialog extends Dialog {\n\n  private static EditUnknownAreaCodeDialog _instance = null;\n\n  private UnknownAreaCode code = null;\n\n  private TextField<String> areaCode = new TextField<String>();\n\n  private TextArea description = new TextArea();\n\n  public static EditUnknownAreaCodeDialog getInstance() {\n    if (_instance == null) {\n      _instance = new EditUnknownAreaCodeDialog();\n    }\n    _instance.areaCode.setValue(\"\");\n    _instance.description.setValue(\"\");\n    return _instance;\n  }\n\n  public static EditUnknownAreaCodeDialog getInstance(UnknownAreaCode code) {\n    EditUnknownAreaCodeDialog instance = getInstance();\n    instance.setUnknownAreaCode(code);\n    return instance;\n  }\n\n  private void setUnknownAreaCode(UnknownAreaCode code) {\n    this.code = code;\n    areaCode.setValue(code.getAreaCode());\n    description.setValue(code.getDescription());\n  }\n\n  public EditUnknownAreaCodeDialog() {\n    setSize(400, 180);\n    setResizable(false);\n    okText = AdminUI.ADMINCOMMONTEXTPOOL.dialogSave();\n    cancelText = AdminUI.ADMINCOMMONTEXTPOOL.dialogCancel();\n    setButtons(Dialog.OKCANCEL);\n    setHeading(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeDialogHeading());\n\n    areaCode.addStyleName(\"field-necessary\");\n    areaCode.setWidth(300);\n    areaCode.setAllowBlank(false);\n    description.setWidth(300);\n    description.setHeight(80);\n    description.setMaxLength(1000);\n\n    FlexTable table = new FlexTable();\n    table.setWidget(0, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeDialogNameLabel()));\n    table.setWidget(0, 1, areaCode);\n    table.setWidget(1, 0, new HTML(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeDialogDescriptionLabel()));\n    table.setWidget(1, 1, description);\n\n    setLayout(new FitLayout());\n    add(table);\n  }\n\n  @Override\n  protected void onButtonPressed(Button button) {\n    super.onButtonPressed(button);\n    if (button == getButtonById(OK)) {\n\n      if (!areaCode.validate() || !description.validate()) {\n        MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeDialogValidation(), null);\n        return;\n      }\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeMessageSave(),\n          AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeMessageSave());\n      wait.show();\n\n      if (code == null) {\n        code = new UnknownAreaCode(areaCode.getValue(), description.getValue());\n      } else {\n        code.setAreaCode(areaCode.getValue());\n        code.setDescription(description.getValue());\n      }\n\n      CommonServiceLocator.getUnknownAreaCodeServlet().saveUnknownAreaCode(code, new BaseAsyncCallback<UnknownAreaCode>() {\n\n        @Override\n        public void onSuccess(UnknownAreaCode result) {\n          wait.close();\n          PortletEventManager.fireEvent(new GenericEvent<Void>(CuCoEventType.UPDATEUNKNOWN_AREACODES));\n          hide();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxSaveError(), null);\n          hide();\n        }\n\n      });\n    }\n    if (button == getButtonById(CANCEL)) {\n      hide();\n    }\n  }\n\n  @Override\n  protected void onHide() {\n    super.onHide();\n    code = null;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtSelectRolesDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/GwtSelectRolesDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4333,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.logical.shared.ValueChangeEvent;\nimport com.google.gwt.event.logical.shared.ValueChangeHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.CheckBox;\nimport at.a1ta.cuco.admin.ui.common.client.event.SelectRolesEvent;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\n\npublic class GwtSelectRolesDialog extends Composite {\n\n  // @formatter:off\n  private static EditUserDialogUiBinder uiBinder = GWT.create(EditUserDialogUiBinder.class);\n\n  interface EditUserDialogUiBinder extends UiBinder<Widget, GwtSelectRolesDialog> {}\n\n  @UiField(provided = true)\n  DataTable<Role> dtRoles;\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n  // @formatter:on\n\n  private PopupFrame popupFrame;\n\n  public GwtSelectRolesDialog() {\n    createTable();\n    initWidget(uiBinder.createAndBindUi(this));\n    popupFrame = new PopupFrame(this, 630, 620);\n    loadRoles();\n\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        popupFrame.close();\n      }\n    });\n  }\n\n  private void createTable() {\n    ArrayList<Column<Role>> columns = new ArrayList<Column<Role>>();\n    columns.add(createSelectorColumn());\n    columns.add(new Column<Role>(\"name\", \"Bezeichnung\", \"50%\"));\n    columns.add(new Column<Role>(\"description\", \"Beschreibung\", \"50%\"));\n    dtRoles = new DataTable<Role>(columns);\n    dtRoles.setHeight(450);\n  }\n\n  private Column<Role> createSelectorColumn() {\n    return new Column<Role>(\"selector\", \"\", \"50px\", new CellRenderer<Role>() {\n      @Override\n      public IsWidget render(final ModelData<Role> model, String columnId, int rowId) {\n        final CheckBox cb = new CheckBox();\n        cb.setValue((Boolean) model.get(\"selector\"));\n        cb.addValueChangeHandler(new ValueChangeHandler<Boolean>() {\n          @Override\n          public void onValueChange(ValueChangeEvent<Boolean> event) {\n            model.put(\"selector\", cb.getValue());\n          }\n        });\n        return cb;\n      }\n    }, false, false);\n  }\n\n  private void loadRoles() {\n    CommonServiceLocator.getRoleServlet().getAllRolesForSysMsg(UserManager.getUserInfo().getId(), new BaseAsyncCallback<ArrayList<Role>>() {\n      @Override\n      public void onSuccess(ArrayList<Role> result) {\n        ArrayList<ModelData<Role>> models = new ArrayList<ModelData<Role>>();\n        for (Role role : result) {\n          ModelData<Role> model = new ModelData<Role>(role);\n          model.put(\"selector\", false);\n          model.put(\"name\", role.getName());\n          model.put(\"description\", role.getDescription());\n          models.add(model);\n        }\n        dtRoles.getStore().add(models);\n        dtRoles.sort(\"name\", true);\n\n      }\n    });\n  }\n\n  private void save() {\n    ArrayList<Role> roles = new ArrayList<Role>();\n    for (ModelData<Role> model : dtRoles.getStore().getAll()) {\n      if ((Boolean) model.get(\"selector\")) {\n        roles.add(model.getBean());\n      }\n    }\n    PortletEventManager.fireEvent(new SelectRolesEvent(roles));\n    popupFrame.close();\n  }\n\n  public void show() {\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  public void hide() {\n    popupFrame.hide();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/SelectServiceDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/SelectServiceDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 11113,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.Style.HorizontalAlignment;\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.LoadConfig;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Events;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionChangedEvent;\nimport com.extjs.gxt.ui.client.event.SelectionChangedListener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.google.gwt.i18n.client.NumberFormat;\nimport com.google.gwt.user.client.ui.FlexTable;\nimport com.google.gwt.user.client.ui.HasHorizontalAlignment;\nimport com.google.gwt.user.client.ui.HasVerticalAlignment;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.dto.ServiceModel;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddServicesEvent;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.framework.gxt.ui.FilterablePagingMemoryProxy;\nimport at.a1ta.framework.gxt.ui.GridContainer;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.gxt.ui.ProxyFilterField;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class SelectServiceDialog extends Dialog {\n\n  private static SelectServiceDialog _instance = null;\n\n  private PagingGridContainer<ListStore<ServiceModel>, ServiceModel> serviceGridContainer;\n\n  private GridContainer<ListStore<ServiceModel>, ServiceModel> selectionGridContainer;\n\n  private ProxyFilterField<String> namefilter = null;\n\n  private FilterablePagingMemoryProxy proxy = null;\n\n  private Button add;\n\n  private Button remove;\n\n  private Team team = null;\n\n  private static synchronized SelectServiceDialog getInstance() {\n    if (_instance == null) {\n      _instance = new SelectServiceDialog();\n    }\n    return _instance;\n  }\n\n  public static SelectServiceDialog getInstance(Team team) {\n    SelectServiceDialog instance = getInstance();\n    instance.team = team;\n    return instance;\n  }\n\n  public SelectServiceDialog() {\n    setSize(600, 650);\n    setResizable(false);\n    okText = AdminUI.ADMINCOMMONTEXTPOOL.dialogUse();\n    cancelText = AdminUI.ADMINCOMMONTEXTPOOL.dialogCancel();\n    setButtons(Dialog.OKCANCEL);\n    setHeading(AdminUI.ADMINCOMMONTEXTPOOL.teamSelectServiceHeading());\n    setModal(true);\n\n    FlexTable filters = new FlexTable();\n    filters.setWidth(\"100%\");\n\n    namefilter = new ProxyFilterField<String>() {\n\n      @Override\n      public boolean doFilter(ModelData m) {\n        return m.get(\"name\").toString().toLowerCase().contains(getValue().toLowerCase());\n      }\n    };\n    namefilter.setWidth(200);\n    filters.setWidget(0, 0, namefilter);\n\n    add(filters);\n    add(renderGrid());\n    add(renderMoveButtons());\n    add(renderSelectionGrid());\n\n  }\n\n  private Widget renderSelectionGrid() {\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamService(), 200);\n    configs.add(config);\n\n    config = new ColumnConfig(\"costs\", AdminUI.ADMINCOMMONTEXTPOOL.teamCosts(), 100);\n    config.setNumberFormat(NumberFormat.getCurrencyFormat());\n    config.setAlignment(HorizontalAlignment.RIGHT);\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    selectionGridContainer = new GridContainer<ListStore<ServiceModel>, ServiceModel>(new ListStore<ServiceModel>(), cm, 250);\n    selectionGridContainer.getGrid().setAutoExpandColumn(\"costs\");\n\n    selectionGridContainer.getGrid().getSelectionModel().addSelectionChangedListener(new SelectionChangedListener<ServiceModel>() {\n\n      @Override\n      public void selectionChanged(SelectionChangedEvent<ServiceModel> se) {\n        if (se.getSelectedItem() != null) {\n          remove.enable();\n        } else {\n          remove.disable();\n        }\n      }\n    });\n\n    selectionGridContainer.getGrid().addListener(Events.CellDoubleClick, new Listener<BaseEvent>() {\n\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void handleEvent(BaseEvent be) {\n        ServiceModel model = selectionGridContainer.getGrid().getSelectionModel().getSelectedItem();\n        ((List<BaseModelData>) proxy.getData()).add(model);\n        selectionGridContainer.getGrid().getStore().remove(model);\n\n        serviceGridContainer.getGrid().getStore().getLoader().load();\n        selectionGridContainer.getGrid().getView().refresh(false);\n      }\n    });\n\n    return selectionGridContainer;\n  }\n\n  private Widget renderMoveButtons() {\n    FlexTable table = new FlexTable();\n    table.setWidth(\"100%\");\n    add = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamButtonAdd());\n    add.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void componentSelected(ButtonEvent ce) {\n        ServiceModel model = serviceGridContainer.getGrid().getSelectionModel().getSelectedItem();\n        selectionGridContainer.getGrid().getStore().add(model);\n        ((List<BaseModelData>) proxy.getData()).remove(model);\n        serviceGridContainer.getGrid().getStore().getLoader().load();\n        selectionGridContainer.getGrid().getView().refresh(false);\n      }\n    });\n    add.disable();\n    table.setWidget(0, 0, add);\n\n    remove = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamButtonDelete());\n    remove.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void componentSelected(ButtonEvent ce) {\n        ServiceModel model = selectionGridContainer.getGrid().getSelectionModel().getSelectedItem();\n        ((List<BaseModelData>) proxy.getData()).add(model);\n        selectionGridContainer.getGrid().getStore().remove(model);\n\n        serviceGridContainer.getGrid().getStore().getLoader().load();\n        selectionGridContainer.getGrid().getView().refresh(false);\n      }\n    });\n    remove.disable();\n    table.setWidget(0, 1, remove);\n\n    table.getFlexCellFormatter().setAlignment(0, 0, HasHorizontalAlignment.ALIGN_CENTER, HasVerticalAlignment.ALIGN_MIDDLE);\n    table.getFlexCellFormatter().setAlignment(0, 1, HasHorizontalAlignment.ALIGN_CENTER, HasVerticalAlignment.ALIGN_MIDDLE);\n\n    return table;\n  }\n\n  private Widget renderGrid() {\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamService(), 200);\n    configs.add(config);\n\n    config = new ColumnConfig(\"costs\", AdminUI.ADMINCOMMONTEXTPOOL.teamCosts(), 100);\n    config.setNumberFormat(NumberFormat.getCurrencyFormat());\n    config.setAlignment(HorizontalAlignment.RIGHT);\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    serviceGridContainer = new PagingGridContainer<ListStore<ServiceModel>, ServiceModel>(new ListStore<ServiceModel>(), cm, 10, 250);\n    serviceGridContainer.getGrid().setAutoExpandColumn(\"costs\");\n\n    serviceGridContainer.getGrid().getSelectionModel().addSelectionChangedListener(new SelectionChangedListener<ServiceModel>() {\n\n      @Override\n      public void selectionChanged(SelectionChangedEvent<ServiceModel> se) {\n        if (se.getSelectedItem() != null) {\n          add.enable();\n        } else {\n          add.disable();\n        }\n      }\n    });\n\n    serviceGridContainer.getGrid().addListener(Events.CellDoubleClick, new Listener<BaseEvent>() {\n\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public void handleEvent(BaseEvent be) {\n        ServiceModel model = serviceGridContainer.getGrid().getSelectionModel().getSelectedItem();\n        selectionGridContainer.getGrid().getStore().add(model);\n        ((List<BaseModelData>) proxy.getData()).remove(model);\n        serviceGridContainer.getGrid().getStore().getLoader().load();\n        selectionGridContainer.getGrid().getView().refresh(false);\n      }\n    });\n\n    return serviceGridContainer;\n  }\n\n  public void init() {\n    serviceGridContainer.getGrid().getStore().removeAll();\n    selectionGridContainer.getGrid().getStore().removeAll();\n\n    SettingsServiceLocator.getTeamServlet().getNotLinkedServices(team.getId(), new BaseAsyncCallback<ArrayList<Service>>() {\n\n      @Override\n      public void onSuccess(ArrayList<Service> result) {\n        ArrayList<ServiceModel> results = new ArrayList<ServiceModel>();\n\n        for (Service service : result) {\n          ServiceModel model = new ServiceModel(service);\n          results.add(model);\n        }\n\n        proxy = new FilterablePagingMemoryProxy(results);\n        // loader\n        BasePagingLoader<PagingLoadResult<LoadConfig>> gridloader = new BasePagingLoader<PagingLoadResult<LoadConfig>>(proxy);\n        gridloader.setRemoteSort(true);\n        serviceGridContainer.getToolbar().bind(gridloader);\n\n        namefilter.bind(gridloader);\n\n        ListStore<ServiceModel> store = new ListStore<ServiceModel>(gridloader);\n        serviceGridContainer.reconfigure(store);\n        gridloader.load();\n      }\n    });\n  }\n\n  @Override\n  protected void onButtonPressed(Button button) {\n    super.onButtonPressed(button);\n    if (button != null && button.equals(getButtonById(OK))) {\n      List<ServiceModel> services = selectionGridContainer.getGrid().getStore().getModels();\n\n      ArrayList<Long> serviceIds = new ArrayList<Long>();\n      for (ServiceModel model : services) {\n        Service service = model.getBean();\n        serviceIds.add(service.getId());\n      }\n\n      SettingsServiceLocator.getTeamServlet().addServices(team.getId(), serviceIds, new BaseAsyncCallback<RpcStatus>() {\n\n        @Override\n        @SuppressWarnings(\"unchecked\")\n        public void onSuccess(RpcStatus result) {\n          PortletEventManager.fireEvent(new AddServicesEvent(selectionGridContainer.getGrid().getStore().getModels()));\n          hide();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.teamTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamAddServiceError(), null);\n        }\n\n      });\n\n    }\n    if (button != null && button.equals(getButtonById(CANCEL))) {\n      hide();\n    }\n  }\n\n  @Override\n  protected void onHide() {\n    namefilter.clear();\n    super.onHide();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditCreditTypesDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditCreditTypesDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4317,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.logging.Logger;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.PopupFrame;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.CheckBox;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.TextArea;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddCreditTypeEvent;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class EditCreditTypesDialog extends Composite {\n\n  // @formatter:off\n  private static EditCreditTypesDialogUiBinder uiBinder = GWT.create(EditCreditTypesDialogUiBinder.class);\n\n  private static Logger logger = Logger.getLogger(EditCreditTypesDialog.class.getName());\n\n  interface EditCreditTypesDialogUiBinder extends UiBinder<Widget, EditCreditTypesDialog> {}\n\n  private static EditCreditTypesDialog _instance = null;\n\n  private CreditType ct;\n\n  private PopupFrame popupFrame;\n\n  @UiField\n  InputBox name;\n  @UiField\n  TextArea txtDescription;\n  @UiField\n  CheckBox checkBoxActive;\n  @UiField\n  Button bSave;\n  @UiField\n  Button bCancel;\n\n  public static EditCreditTypesDialog getInstance() {\n    if (_instance == null) {\n      _instance = new EditCreditTypesDialog();\n    }\n    _instance.name.setValue(\"\");\n    _instance.txtDescription.setValue(\"\");\n    _instance.checkBoxActive.setValue(true);\n    return _instance;\n  }\n\n  public static EditCreditTypesDialog getInstance(CreditType ct) {\n    EditCreditTypesDialog instance = getInstance();\n    instance.setCreditType(ct);\n    return instance;\n  }\n\n  private void setCreditType(CreditType ct) {\n    this.ct = ct;\n    name.setValue(ct.getName());\n    txtDescription.setValue(ct.getDescription());\n    checkBoxActive.setValue(ct.getActive());\n  }\n\n  public EditCreditTypesDialog() {\n    initWidget(uiBinder.createAndBindUi(this));\n    popupFrame = new PopupFrame(this, 370, 220);\n    bSave.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        save();\n      }\n    });\n\n    bCancel.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        cancel();\n      }\n\n      private void cancel() {\n        popupFrame.close();\n      }\n    });\n\n  }\n\n  protected void save() {\n    if (!name.validate() || !txtDescription.validate()) {\n      Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.credittypeDialogValidation());\n      return;\n    }\n    Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.credittypeMessageSave());\n    Window.setStatus(AdminUI.ADMINCOMMONTEXTPOOL.credittypeMessageSave());\n\n    if (ct == null) {\n      ct = new CreditType(name.getValue(), txtDescription.getValue(), checkBoxActive.getValue());\n    } else {\n      ct.setName(name.getValue());\n      ct.setDescription(txtDescription.getValue());\n      ct.setActive(checkBoxActive.getValue());\n    }\n    SettingsServiceLocator.getCreditTypeServlet().saveCreditType(ct, new BaseAsyncCallback<CreditType>() {\n\n      @Override\n      public void onSuccess(CreditType result) {\n        PortletEventManager.fireEvent(new AddCreditTypeEvent(ct));\n        popupFrame.close();\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.messageboxSaveError());\n      }\n    });\n  }\n\n  public void show(CreditType credit) {\n    if (credit == null) {\n      name.clear();\n      txtDescription.clear();\n    } else {\n      ct = credit;\n      name.setText(credit.getName());\n      txtDescription.setText(credit.getDescription());\n      checkBoxActive.setValue(credit.getActive());\n    }\n    popupFrame.hideMessageBar();\n    popupFrame.showContent();\n  }\n\n  public void hide() {\n    popupFrame.hide();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditRoleGroupDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/dialog/EditRoleGroupDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7778,
    "content": "package at.a1ta.webclient.cucosett.client.dialog;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\nimport com.extjs.gxt.ui.client.Style.SelectionMode;\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.event.GridEvent;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.Text;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.form.TextField;\nimport com.extjs.gxt.ui.client.widget.grid.CellEditor;\nimport com.extjs.gxt.ui.client.widget.grid.CheckBoxSelectionModel;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.google.gwt.i18n.client.NumberFormat;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\nimport com.google.gwt.user.client.ui.FlexTable;\n\nimport at.a1ta.bite.core.shared.dto.security.RoleGroup;\nimport at.a1ta.bite.core.shared.dto.security.RoleWithGroup;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.framework.gxt.ui.GridContainer;\nimport at.a1ta.framework.gxt.ui.NumberFieldFixed;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.util.Validator;\n\npublic class EditRoleGroupDialog extends Dialog {\n\n  private static Logger logger = Logger.getLogger(EditRoleGroupDialog.class.getName());\n\n  private TextField<String> nameField = new TextField<String>();\n\n  private TextField<String> descriptionField = new TextField<String>();\n\n  private GridContainer<ListStore<BaseModelData>, BaseModelData> gridContainer;\n\n  private CheckBoxSelectionModel<BaseModelData> roleSM = null;\n\n  private RoleGroup rg;\n\n  public EditRoleGroupDialog(String header, RoleGroup rg) {\n    this.rg = rg;\n\n    setModal(true);\n    setHeading(header);\n    okText = \"Speichern\";\n    cancelText = \"Abbrechen\";\n    setButtons(OKCANCEL);\n\n    setClosable(true);\n    setLayoutOnChange(true);\n    setBodyBorder(false);\n    setBorders(false);\n    setHideOnButtonClick(false);\n    setWidth(600);\n    setHeight(600);\n\n    FlexTable table = new FlexTable();\n    table.setWidget(0, 0, new Text(\"Bezeichnung\"));\n    table.setWidget(0, 1, nameField);\n    table.setWidget(1, 0, new Text(\"Beschreibung\"));\n    table.setWidget(1, 1, descriptionField);\n\n    if (rg != null) {\n      nameField.setValue(rg.getName());\n      descriptionField.setValue(rg.getDescription());\n    }\n\n    add(table);\n    initRolePanel();\n\n    loadRoles();\n  }\n\n  private void loadRoles() {\n    CommonServiceLocator.getRoleServlet().getAllRolesWithGroup((rg == null) ? null : rg.getId(), new BaseAsyncCallback<ArrayList<RoleWithGroup>>() {\n\n      @Override\n      public void onSuccess(final ArrayList<RoleWithGroup> result) {\n        ArrayList<BaseModelData> roles = new ArrayList<BaseModelData>();\n        ArrayList<BaseModelData> selection = new ArrayList<BaseModelData>();\n\n        for (RoleWithGroup role : result) {\n          BaseModelData help = new BaseModelData();\n          help.set(\"bean\", role);\n          help.set(\"name\", role.getName());\n          help.set(\"desc\", role.getDescription());\n          help.set(\"value\", role.getValue());\n          roles.add(help);\n          if (rg != null) {\n            if (role.getValue() != null && role.getGroupId().equals(rg.getId())) {\n              selection.add(help);\n            }\n          }\n        }\n\n        gridContainer.getGrid().getStore().removeAll();\n        gridContainer.getGrid().getStore().add(roles);\n        gridContainer.getGrid().getSelectionModel().setSelection(selection);\n      }\n    });\n  }\n\n  @Override\n  protected void onButtonPressed(final Button button) {\n    if (button == getButtonById(OK)) {\n      if (Validator.isNullOrEmpty(nameField.getValue())) {\n        Window.alert(\"Rollenname darf nicht leer sein\");\n        return;\n      }\n\n      if (rg == null) {\n        rg = new RoleGroup();\n      }\n      rg.setName(nameField.getValue());\n      rg.setDescription(descriptionField.getValue());\n\n      List<RoleWithGroup> roles = new ArrayList<RoleWithGroup>();\n      for (BaseModelData bm : gridContainer.getGrid().getSelectionModel().getSelectedItems()) {\n        RoleWithGroup help = (RoleWithGroup) bm.get(\"bean\");\n        help.setValue((Integer) bm.get(\"value\"));\n        roles.add(help);\n\n      }\n      rg.setRoles(roles);\n\n      for (RoleWithGroup r : roles) {\n        if (r.getValue() == null) {\n          Window.alert(\"Die Werte aller ausgew\u00e4hlten Rollen m\u00fcssen ausgef\u00fcllt werden!\");\n          return;\n        }\n      }\n      CommonServiceLocator.getRoleServlet().saveRoleGroup(rg, new AsyncCallback<RoleGroup>() {\n\n        @Override\n        public void onSuccess(RoleGroup result) {\n          PortletEventManager.fireEvent(new GenericEvent<RoleGroup>(CuCoEventType.UPDATE_ROLEGROUP, result));\n          hide(button);\n        }\n\n        @Override\n        public void onFailure(Throwable caught) {\n          logger.log(Level.SEVERE, \"Fehler beim Speichern einer RoleGroup\", caught);\n        }\n      });\n    } else {\n      hide(button);\n    }\n  }\n\n  private void initRolePanel() {\n\n    roleSM = new CheckBoxSelectionModel<BaseModelData>() {\n\n      @Override\n      protected void doMultiSelect(List<BaseModelData> models, boolean keepExisting, boolean supressEvent) {\n        if (models.size() == grid.getStore().getCount()) {\n          super.doMultiSelect(models, keepExisting, supressEvent);\n        } else {\n          super.doMultiSelect(models, true, supressEvent);\n        }\n      }\n\n      @Override\n      protected void handleMouseDown(GridEvent<BaseModelData> e) {\n        BaseModelData selected = listStore.getAt(e.getRowIndex());\n        if (grid.getColumnModel().getColumn(e.getColIndex()).getId().equals(\"value\")) {\n          return;\n        }\n        boolean issel = isSelected(selected);\n        super.handleMouseDown(e);\n        if (issel) {\n          doDeselect(Arrays.asList(selected), false);\n        }\n      }\n    };\n\n    roleSM.setSelectionMode(SelectionMode.MULTI);\n\n    gridContainer = new GridContainer<ListStore<BaseModelData>, BaseModelData>(new ListStore<BaseModelData>(), createRoleColumnModel(), 475, true);\n    gridContainer.setHeading(\"Rollen\");\n    gridContainer.setHeaderVisible(true);\n\n    gridContainer.getGrid().setSelectionModel(roleSM);\n    gridContainer.getGrid().addPlugin(roleSM);\n    gridContainer.getGrid().setAutoExpandColumn(\"desc\");\n\n    gridContainer.setWidth(580);\n    add(gridContainer);\n  }\n\n  private ColumnModel createRoleColumnModel() {\n    List<ColumnConfig> columns = new ArrayList<ColumnConfig>();\n    columns.add(roleSM.getColumn());\n\n    ColumnConfig nameColumn = new ColumnConfig(\"name\", \"Bezeichnung\", 150);\n    columns.add(nameColumn);\n\n    ColumnConfig descColumn = new ColumnConfig(\"desc\", \"Beschreibung\", 200);\n    columns.add(descColumn);\n\n    ColumnConfig appColumn = new ColumnConfig(\"app\", \"Anwendung\", 75);\n    columns.add(appColumn);\n\n    ColumnConfig valueCol = new ColumnConfig(\"value\", \"Wert\", 50);\n    valueCol.setNumberFormat(NumberFormat.getFormat(\"#\"));\n    NumberFieldFixed numberField = new NumberFieldFixed();\n    numberField.setAllowBlank(false);\n    valueCol.setEditor(new CellEditor(numberField) {\n\n      @Override\n      public Object postProcessValue(Object value) {\n        return new Integer(((Double) super.postProcessValue(value)).intValue());\n      }\n    });\n    columns.add(valueCol);\n\n    return new ColumnModel(columns);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/CheckUsagePortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/CheckUsagePortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2810,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport java.util.Date;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.i18n.shared.DateTimeFormat;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.DateBox;\nimport at.a1ta.bite.ui.client.widget.DateBox.DateBoxSize;\nimport at.a1ta.bite.ui.client.widget.Label;\n\npublic class CheckUsagePortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"Check Usage\";\n\n  private static CheckUsagePortlet _instance;\n  private DateBox startDateBox;\n  private DateBox endDateBox;\n\n  public static CheckUsagePortlet create(PortletDefinition portletDefinition) {\n    if (_instance == null) {\n      _instance = new CheckUsagePortlet(portletDefinition);\n    }\n    return _instance;\n  }\n\n  private CheckUsagePortlet(PortletDefinition def) {\n    super(def);\n  }\n\n  private void printSelectBox() {\n    getContentPanel().clear();\n\n    HTMLPanel pnlHeight = new HTMLPanel(\"\");\n    pnlHeight.setStyleName(UI.STYLES.bite_heightPlaceHolder());\n    add(pnlHeight);\n\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setWidth(\"100%\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n\n    HorizontalPanel hpanel = new HorizontalPanel();\n    hpanel.add(pnlHeight);\n\n    startDateBox = new DateBox(DateBoxSize.Short);\n    startDateBox.setCaption(\"Start Date\");\n    startDateBox.setValue(new Date(new Date().getYear(), 0, 1), true);\n    hpanel.add(new Label(\"Von: \"));\n    hpanel.add(startDateBox);\n\n    endDateBox = new DateBox(DateBoxSize.Short);\n    endDateBox.setCaption(\"End Date\");\n    endDateBox.setValue(new Date(), true);\n    hpanel.add(new Label(\"Bis: \"));\n    hpanel.add(endDateBox);\n\n    Button submitButton = new Button(\"Report Anfordern\", ButtonSize.Small);\n    submitButton.addClickHandler(new ClickHandler() {\n\n      @Override\n      public void onClick(ClickEvent event) {\n        DateTimeFormat formatter = DateTimeFormat.getFormat(\"MM-yyyy\");\n        Window.open(GWT.getModuleBaseURL() + \"../app/stats/usage.view?start=\" + formatter.format(startDateBox.getValue()) + \"&end=\" + formatter.format(endDateBox.getValue()), \"_blank\", \"menubar=no,location=false,resizable=false,scrollbars=false,status=true,dependent=true\");\n      }\n    });\n\n    pnl.add(hpanel);\n    pnl.add(submitButton);\n\n    add(pnl);\n  }\n\n  @Override\n  public void init() {\n    showLoading();\n    printSelectBox();\n    showContent();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/RoleGroupManagementPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/RoleGroupManagementPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6731,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport java.util.ArrayList;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.LoadConfig;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.ToolBar;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.core.shared.dto.security.RoleGroup;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.cuco.ui.common.shared.AdminAuthorityHelper;\nimport at.a1ta.framework.gxt.ui.FilterablePagingMemoryProxy;\nimport at.a1ta.framework.gxt.ui.LinkCellRenderer;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditRoleGroupDialog;\n\npublic class RoleGroupManagementPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"RollengruppenverwaltungOld\";\n\n  private static RoleGroupManagementPortlet _instance;\n\n  private PagingGridContainer<ListStore<BaseModelData>, BaseModelData> gridContainer;\n\n  public static RoleGroupManagementPortlet create(PortletDefinition portletDefinition) {\n    if (_instance == null) {\n      _instance = new RoleGroupManagementPortlet(portletDefinition, false);\n    }\n    return _instance;\n  }\n\n  private RoleGroupManagementPortlet(PortletDefinition def, boolean isDetails) {\n    super(def, isDetails, false, false);\n\n    add(renderGrid());\n\n    PortletEventManager.addListener(CuCoEventType.UPDATE_ROLEGROUP, new PortletEventListener<GenericEvent<RoleGroup>>() {\n\n      @Override\n      public void handleEvent(GenericEvent<RoleGroup> be) {\n        RoleGroup group = be.get();\n        for (BaseModelData bm : gridContainer.getGrid().getStore().getModels()) {\n          if (((RoleGroup) bm.get(\"bean\")).getId().equals(group.getId())) {\n            bm.set(\"bean\", group);\n            bm.set(\"desc\", group.getDescription());\n            return;\n          }\n        }\n\n        BaseModelData m = new BaseModelData();\n        m.set(\"bean\", group);\n        m.set(\"name\", group.getName());\n        m.set(\"desc\", group.getDescription());\n\n        gridContainer.getGrid().getStore().add(m);\n      }\n    });\n  }\n\n  private Widget renderGrid() {\n\n    ListStore<BaseModelData> store = new ListStore<BaseModelData>();\n\n    gridContainer = new PagingGridContainer<ListStore<BaseModelData>, BaseModelData>(store, createRoleGroupColumnModel(), 10);\n    gridContainer.getGrid().setAutoExpandColumn(\"name\");\n\n    if (AdminAuthorityHelper.canCreateRoleGroup(UserManager.getUserInfo())) {\n      Button newBtn = new Button(\"Neue Rollengruppe\");\n      newBtn.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n        @Override\n        public void componentSelected(ButtonEvent ce) {\n          EditRoleGroupDialog d = new EditRoleGroupDialog(\"Neue Rollengruppe\", null);\n          d.show();\n        }\n      });\n\n      ToolBar tb = new ToolBar();\n      tb.add(newBtn);\n      gridContainer.setTopComponent(tb);\n    }\n\n    return gridContainer;\n  }\n\n  @Override\n  public void init() {\n    gridContainer.getGrid().getStore().removeAll();\n\n    CommonServiceLocator.getRoleServlet().getAllRoleGroups(new BaseAsyncCallback<ArrayList<RoleGroup>>(this) {\n\n      @Override\n      public void onSuccess(ArrayList<RoleGroup> result) {\n        ArrayList<BaseModelData> results = new ArrayList<BaseModelData>();\n\n        for (RoleGroup group : result) {\n          BaseModelData m = new BaseModelData();\n          m.set(\"bean\", group);\n          m.set(\"name\", group.getName());\n          m.set(\"desc\", group.getDescription());\n          results.add(m);\n        }\n\n        FilterablePagingMemoryProxy proxy = new FilterablePagingMemoryProxy(results);\n        // loader\n        BasePagingLoader<PagingLoadResult<LoadConfig>> gridloader = new BasePagingLoader<PagingLoadResult<LoadConfig>>(proxy);\n        gridloader.setRemoteSort(true);\n        gridContainer.getToolbar().bind(gridloader);\n\n        ListStore<BaseModelData> store = new ListStore<BaseModelData>(gridloader);\n        gridContainer.reconfigure(store);\n        gridloader.load();\n        showContent();\n      }\n    });\n  }\n\n  private ColumnModel createRoleGroupColumnModel() {\n    ArrayList<ColumnConfig> columns = new ArrayList<ColumnConfig>();\n\n    ColumnConfig c = new ColumnConfig(\"name\", \"Bezeichnung\", 30);\n    c.setRenderer(new LinkCellRenderer(new ClickHandler() {\n\n      @Override\n      public void onClick(ClickEvent event) {\n        if (gridContainer.getGrid().getSelectionModel().getSelectedItem() != null) {\n          EditRoleGroupDialog d = new EditRoleGroupDialog(\"Rollengruppe bearbeiten\", (RoleGroup) gridContainer.getGrid().getSelectionModel().getSelectedItem().get(\"bean\"));\n          d.show();\n        }\n      }\n    }));\n    columns.add(c);\n    columns.add(new ColumnConfig(\"desc\", \"Beschreibung\", 60));\n    c = new ColumnConfig(\"delete\", \"L\u00f6schen\", 10);\n    c.setRenderer(new ImageRenderer(ImageRenderer.ERASE, new Listener<BaseEvent>() {\n\n      @Override\n      public void handleEvent(BaseEvent be) {\n        final BaseModelData m = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n        if (Window.confirm(\"Soll \" + m.get(\"name\") + \" gel\u00f6scht werden?\")) {\n          CommonServiceLocator.getRoleServlet().deleteRoleGroup(((RoleGroup) m.get(\"bean\")).getId(), new BaseAsyncCallback<RpcStatus>() {\n\n            @Override\n            public void onSuccess(RpcStatus result) {\n              gridContainer.getGrid().getStore().remove(m);\n            }\n          });\n        }\n\n      }\n    }));\n    columns.add(c);\n\n    return new ColumnModel(columns);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/IbatisPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/IbatisPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3645,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.google.gwt.user.client.Window;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.framework.gxt.ui.ButtonRenderer;\nimport at.a1ta.framework.gxt.ui.GridContainer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class IbatisPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"Ibatis\";\n\n  private static IbatisPortlet _instance = null;\n\n  private Button clearAll = new Button(AdminUI.ADMINCOMMONTEXTPOOL.administrationIbatisClearall());\n\n  private ListStore<BaseModelData> store = new ListStore<BaseModelData>();\n\n  private GridContainer<ListStore<BaseModelData>, BaseModelData> grid;\n\n  private ColumnModel cm;\n\n  public static IbatisPortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new IbatisPortlet(def);\n    }\n    return _instance;\n  }\n\n  private IbatisPortlet(PortletDefinition def) {\n    super(def);\n    add(clearAll);\n    clearAll.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      public void componentSelected(ButtonEvent ce) {\n        SettingsServiceLocator.getIbatisServlet().flushAll(new BaseAsyncCallback<RpcStatus>() {\n\n          @Override\n          public void onSuccess(RpcStatus result) {\n            Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.administrationIbatisClearallDone());\n          }\n        });\n      }\n    });\n\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.administrationIbatisColumnName(), 200);\n    configs.add(config);\n\n    config = new ColumnConfig(\"flush\", AdminUI.ADMINCOMMONTEXTPOOL.administrationIbatisFlush(), 40);\n    config.setRenderer(new ButtonRenderer(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      public void componentSelected(ButtonEvent ce) {\n        int col = Integer.parseInt(ce.getButton().getId());\n        String name = grid.getGrid().getStore().getAt(col).get(\"name\");\n        SettingsServiceLocator.getIbatisServlet().flushDao(name, new BaseAsyncCallback<RpcStatus>() {\n\n          @Override\n          public void onSuccess(RpcStatus result) {\n            Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.administrationIbatisClearDone());\n          }\n        });\n      }\n    }, AdminUI.ADMINCOMMONTEXTPOOL.administrationIbatisFlush()));\n    configs.add(config);\n    cm = new ColumnModel(configs);\n\n    grid = new GridContainer<ListStore<BaseModelData>, BaseModelData>(store, cm, 600);\n\n    add(grid);\n\n  }\n\n  @Override\n  public void init() {\n\n    store.removeAll();\n    SettingsServiceLocator.getIbatisServlet().getDaos(new BaseAsyncCallback<ArrayList<String>>() {\n\n      @Override\n      public void onSuccess(ArrayList<String> result) {\n        for (String s : result) {\n          BaseModelData model = new BaseModelData();\n          model.set(\"name\", s);\n          store.add(model);\n        }\n\n        grid.getGrid().reconfigure(store, cm);\n        showContent();\n      }\n    });\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/UserManagementPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/UserManagementPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 12589,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.dom.client.KeyCodes;\nimport com.google.gwt.event.dom.client.KeyPressEvent;\nimport com.google.gwt.event.dom.client.KeyPressHandler;\nimport com.google.gwt.user.client.ui.Anchor;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.InputBox.InputBoxSize;\nimport at.a1ta.bite.ui.client.widget.Label;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.admin.ui.common.client.ui.PortletHelper;\nimport at.a1ta.cuco.ui.common.client.popup.PartnerCenterUserDetailsPopup;\nimport at.a1ta.cuco.ui.common.client.popup.PartnerCenterUserDetailsPopup.EditType;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.cuco.ui.common.shared.AdminAuthorityHelper;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditUserDialog;\n\npublic class UserManagementPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"Benutzerverwaltung\";\n  private static UserManagementPortlet _instance;\n  private DataTable<BiteUser> table;\n  private HashMap<String, String> shopIDs;\n\n  private InputBox userFilter;\n  private InputBox firstNameFilter;\n  private InputBox lastNameFilter;\n\n  private WaitingWidget waitingWidget;\n  private EditUserDialog editUserDialog = new EditUserDialog();\n\n  private PartnerCenterUserDetailsPopup partnerCenterUserDetailsPopup = new PartnerCenterUserDetailsPopup();\n\n  public static UserManagementPortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new UserManagementPortlet(def);\n    }\n    return _instance;\n  }\n\n  private UserManagementPortlet(PortletDefinition def) {\n    super(def, false, false);\n\n    initTable();\n    initUI();\n\n    registerUpdateUserListener();\n    registerUpdateUsersListener();\n    userFilter.setValue(UserManager.getUserInfo().getUsername());\n    loadUsers();\n\n    showContent();\n  }\n\n  private void initUI() {\n    waitingWidget = new WaitingWidget();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel filters = createFilterRow();\n    pnl.add(filters);\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    pnl.add(waitingWidget);\n    pnl.add(table);\n    add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    add(pnl);\n  }\n\n  private void initTable() {\n    table = new DataTable<BiteUser>(createColumns());\n    table.enablePaging(25);\n    table.setWidth(\"830px\");\n    table.setVisible(false);\n  }\n\n  private void registerUpdateUsersListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATE_USERS, new PortletEventListener<PortletEvent>() {\n\n      @Override\n      public void handleEvent(PortletEvent be) {\n        init();\n        loadUsers();\n      }\n    });\n  }\n\n  private HorizontalPanel createFilterRow() {\n    HorizontalPanel filters = new HorizontalPanel();\n    filters.add(new Label(\"Benutzer:\"));\n    filters.add(new HTML(\"<div class='\" + UI.STYLES.bite_widthPlaceHolder() + \"'/>\"));\n    filters.add(createUserFilter());\n    filters.add(new HTML(\"<div class='\" + UI.STYLES.bite_widthPlaceHolder() + \"'/>\"));\n    filters.add(new Label(\"Vorname:\"));\n    filters.add(new HTML(\"<div class='\" + UI.STYLES.bite_widthPlaceHolder() + \"'/>\"));\n    filters.add(createFirstNameFilter());\n    filters.add(new HTML(\"<div class='\" + UI.STYLES.bite_widthPlaceHolder() + \"'/>\"));\n    filters.add(new Label(\"Nachname:\"));\n    filters.add(new HTML(\"<div class='\" + UI.STYLES.bite_widthPlaceHolder() + \"'/>\"));\n    filters.add(createLastNameFilter());\n    filters.add(new HTML(\"<div class='\" + UI.STYLES.bite_widthPlaceHolder() + \"'/>\"));\n    filters.add(createSearchButton());\n    filters.add(createNewButton());\n    return filters;\n  }\n\n  private Widget createUserFilter() {\n    userFilter = new InputBox(InputBoxSize.Medium);\n    userFilter.addKeyPressHandler(createKeyPressHandler());\n    return userFilter;\n  }\n\n  private Widget createFirstNameFilter() {\n    firstNameFilter = new InputBox(InputBoxSize.Medium);\n    firstNameFilter.addKeyPressHandler(createKeyPressHandler());\n    return firstNameFilter;\n  }\n\n  private Widget createLastNameFilter() {\n    lastNameFilter = new InputBox(InputBoxSize.Medium);\n    lastNameFilter.addKeyPressHandler(createKeyPressHandler());\n    return lastNameFilter;\n  }\n\n  private KeyPressHandler createKeyPressHandler() {\n    return new KeyPressHandler() {\n      @Override\n      public void onKeyPress(KeyPressEvent event) {\n        if (event.getNativeEvent().getKeyCode() == KeyCodes.KEY_ENTER) {\n          loadUsers();\n        }\n      }\n    };\n  }\n\n  private void registerUpdateUserListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATE_USER, new PortletEventListener<GenericEvent<BiteUser>>() {\n      @Override\n      public void handleEvent(GenericEvent<BiteUser> be) {\n        BiteUser user = be.get();\n        ModelData<BiteUser> model = table.getStore().get(user);\n\n        if (model != null) {\n          model.setBean(user);\n        } else {\n          model = new ModelData<BiteUser>(user);\n          model.put(\"bean\", user);\n          model.put(\"name\", user.getName());\n          model.put(\"username\", user.getUsername());\n          model.put(\"orgunitshort\", user.getManagementLevel1OrgUnitShort());\n          model.put(\"orgunitDesc\", user.getManagementLevel1OrgUnitDescription());\n          model.put(\"edit\", \"Partner Center\");\n          table.getStore().add(model);\n        }\n      }\n    });\n  }\n\n  private Widget createNewButton() {\n    Button btnCreateUser = new Button(\"Neuer Benutzer\", ButtonSize.Small);\n    btnCreateUser.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        editUserDialog.show(null);\n      }\n    });\n    return btnCreateUser;\n  }\n\n  private Widget createSearchButton() {\n    Button btnSearch = new Button(\"Suchen\", ButtonSize.Small);\n    btnSearch.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        loadUsers();\n      }\n    });\n    return btnSearch;\n  }\n\n  @Override\n  public void init() {}\n\n  private void loadUsers() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n\n    table.getStore().clear();\n\n    CommonServiceLocator.getUserShopAssignmentServlet().getUserShopAssignmentsForUserManagement(new BaseAsyncCallback<HashMap<String, String>>() {\n\n      @Override\n      public void onSuccess(HashMap<String, String> result) {\n        shopIDs = result;\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        shopIDs = new HashMap<String, String>();\n      }\n\n    });\n\n    CommonServiceLocator.getRoleServlet().searchUsers(userFilter.getValue(), firstNameFilter.getValue(), lastNameFilter.getValue(), new BaseAsyncCallback<ArrayList<BiteUser>>() {\n      @Override\n      public void onSuccess(ArrayList<BiteUser> result) {\n        ArrayList<ModelData<BiteUser>> users = new ArrayList<ModelData<BiteUser>>();\n\n        for (BiteUser user : result) {\n          ModelData<BiteUser> m = new ModelData<BiteUser>(user);\n          m.put(\"bean\", user);\n          m.put(\"firstName\", user.getFirstName());\n          m.put(\"lastName\", user.getLastName());\n          m.put(\"username\", user.getUsername());\n          m.put(\"orgunitshort\", user.getManagementLevel1OrgUnitShort());\n          m.put(\"edit\", user.getUsername());\n          users.add(m);\n        }\n\n        table.getStore().add(users);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  private ArrayList<Column<BiteUser>> createColumns() {\n    ArrayList<Column<BiteUser>> columns = new ArrayList<Column<BiteUser>>();\n    columns.add(new Column<BiteUser>(\"username\", \"Benutzername\", \"15%\", createNameCellRenderer()));\n    columns.add(new Column<BiteUser>(\"firstName\", \"Vorname\", \"16%\"));\n    columns.add(new Column<BiteUser>(\"lastName\", \"Nachname\", \"16%\"));\n    columns.add(new Column<BiteUser>(\"orgUnit\", \"Bereich\", \"14%\", createOrgUnitRenderer()));\n    columns.add(new Column<BiteUser>(\"edit\", \"Partner Center\", \"14%\", createEditCellRenderer()));\n\n    Column<BiteUser> shopid = new Column<BiteUser>(\"shopid\", \"Shop-ID\", \"25%\", createUserShopIDCellRenderer());\n    shopid.setSortable(false);\n    columns.add(shopid);\n\n    return columns;\n  }\n\n  private CellRenderer<BiteUser> createUserShopIDCellRenderer() {\n    return new CellRenderer<BiteUser>() {\n      @Override\n      public IsWidget render(ModelData<BiteUser> model, String columnId, int rowId) {\n        if (shopIDs != null && model != null && model.getBean() != null) {\n          if (shopIDs.containsKey(model.getBean().getUsername().toUpperCase())) {\n            return new HTML(\"\" + shopIDs.get(model.getBean().getUsername().toUpperCase()));\n          }\n        }\n        return new HTML(\"\");\n      }\n    };\n  }\n\n  private CellRenderer<BiteUser> createEditCellRenderer() {\n    if (AdminAuthorityHelper.canEditUser(UserManager.getUserInfo())) {\n      return new CellRenderer<BiteUser>() {\n        @Override\n        public Widget render(final ModelData<BiteUser> model, String columnId, int rowId) {\n          if (model.getBean().isPartnerCenterUser()) {\n            Anchor link = new Anchor(\"Stammdaten bearbeiten\");\n            link.addClickHandler(new ClickHandler() {\n              @Override\n              public void onClick(ClickEvent event) {\n                CommonServiceLocator.getRoleServlet().getUserWithRoles(model.getBean().getUsername(), new BaseAsyncCallback<UserInfo>() {\n                  @Override\n                  public void onSuccess(UserInfo result) {\n                    partnerCenterUserDetailsPopup.show(result, EditType.ADMIN);\n                  }\n                });\n              }\n            });\n            return link;\n          }\n\n          return new HTML(\"\");\n\n        }\n      };\n    }\n    return null;\n  }\n\n  private CellRenderer<BiteUser> createNameCellRenderer() {\n    if (AdminAuthorityHelper.canEditUser(UserManager.getUserInfo())) {\n      return new CellRenderer<BiteUser>() {\n        @Override\n        public Widget render(final ModelData<BiteUser> model, String columnId, int rowId) {\n          Anchor link = new Anchor(model.getBean().getUsername());\n          link.addClickHandler(new ClickHandler() {\n            @Override\n            public void onClick(ClickEvent event) {\n              CommonServiceLocator.getRoleServlet().getUserWithRoles(model.getBean().getUsername(), new BaseAsyncCallback<UserInfo>() {\n                @Override\n                public void onSuccess(UserInfo result) {\n                  editUserDialog.show(result);\n                }\n              });\n            }\n          });\n          return link;\n        }\n      };\n    }\n    return null;\n  }\n\n  private CellRenderer<BiteUser> createOrgUnitRenderer() {\n    return new CellRenderer<BiteUser>() {\n      @Override\n      public Widget render(ModelData<BiteUser> model, String columnId, int rowId) {\n        if (model.getBean().getManagementLevel1OrgUnitShort() == null) {\n          return null;\n        }\n        return PortletHelper.createInfoWidget(new HTML(model.getBean().getManagementLevel1OrgUnitShort()), model.getBean().getManagementLevel1OrgUnitDescription());\n      }\n    };\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/AllMessagesPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/AllMessagesPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2320,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport com.google.gwt.event.logical.shared.SelectionEvent;\nimport com.google.gwt.event.logical.shared.SelectionHandler;\nimport com.google.gwt.user.client.ui.TabPanel;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.webclient.cucosett.client.ui.SystemMessagesGrid;\n\npublic class AllMessagesPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"System Messages\";\n\n  private static AllMessagesPortlet _instance;\n\n  private SystemMessagesGrid activeGrid = new SystemMessagesGrid(0, true);\n\n  private SystemMessagesGrid inActiveGrid = new SystemMessagesGrid(1, false);\n\n  public static AllMessagesPortlet create(PortletDefinition portletDefinition) {\n    if (_instance == null) {\n      _instance = new AllMessagesPortlet(portletDefinition);\n    }\n    return _instance;\n  }\n\n  private AllMessagesPortlet(PortletDefinition portletDefinition) {\n    super(portletDefinition);\n\n    TabPanel tabPanel = createTabPanel();\n    add(tabPanel);\n    tabPanel.addSelectionHandler(new SelectionHandler<Integer>() {\n\n      @Override\n      public void onSelection(SelectionEvent<Integer> event) {\n        if (event.getSelectedItem() == 0) {\n          boolean dirty = inActiveGrid.isDirty();\n          activeGrid.setDirty(dirty);\n          inActiveGrid.setDirty(false);\n        } else {\n          boolean dirty = activeGrid.isDirty();\n          inActiveGrid.setDirty(dirty);\n          activeGrid.setDirty(false);\n        }\n      }\n    });\n\n    tabPanel.addSelectionHandler(activeGrid);\n    tabPanel.addSelectionHandler(inActiveGrid);\n    tabPanel.selectTab(0);\n  }\n\n  private TabPanel createTabPanel() {\n    TabPanel tabPanel = new TabPanel();\n    tabPanel.setSize(\"100%\", \"100%\");\n    tabPanel.add(activeGrid, \"<div class=\\\"tab-l\\\"><div class=\\\"tab-r\\\"><div class=\\\"tab-c\\\"><div class=\\\"tab-body\\\">\" + AdminUI.ADMINCOMMONTEXTPOOL.smActive() + \"</div></div></div></div>\", true);\n    tabPanel.add(inActiveGrid, \"<div class=\\\"tab-l\\\"><div class=\\\"tab-r\\\"><div class=\\\"tab-c\\\"><div class=\\\"tab-body\\\">\" + AdminUI.ADMINCOMMONTEXTPOOL.smInactive() + \"</div></div></div></div>\", true);\n    return tabPanel;\n  }\n\n  @Override\n  public void init() {\n    showLoading();\n    showContent();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/UserShopAssignmentPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/UserShopAssignmentPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5968,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.Style.HorizontalAlignment;\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ChangeEvent;\nimport com.google.gwt.event.dom.client.ChangeHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\nimport com.google.gwt.user.client.ui.FormPanel;\nimport com.google.gwt.user.client.ui.FormPanel.SubmitCompleteEvent;\nimport com.google.gwt.user.client.ui.FormPanel.SubmitCompleteHandler;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.Upload;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.framework.gxt.ui.GridContainer;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\n\npublic class UserShopAssignmentPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"Import Shop - Mitarbeiterzuordnung\";\n  private GridContainer<ListStore<BaseModelData>, BaseModelData> grid;\n  private static UserShopAssignmentPortlet _instance = null;\n  private ListStore<BaseModelData> store = new ListStore<BaseModelData>();\n  private List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n  private ColumnModel cm;\n\n  public static UserShopAssignmentPortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new UserShopAssignmentPortlet(def);\n    }\n    return _instance;\n  }\n\n  private UserShopAssignmentPortlet(PortletDefinition def) {\n    super(def);\n\n    initUI();\n    updateGrid();\n    showContent();\n  }\n\n  private void initUI() {\n\n    add(createRealUploadButton()); // upload button\n\n    ColumnConfig column1 = new ColumnConfig(\"filename\", AdminUI.ADMINCOMMONTEXTPOOL.importusershopdata_logfilename(), 40);\n    ColumnConfig column2 = new ColumnConfig(\"amount\", AdminUI.ADMINCOMMONTEXTPOOL.importusershopdata_logentries(), 40);\n    ColumnConfig column3 = new ColumnConfig(\"download\", AdminUI.ADMINCOMMONTEXTPOOL.importusershopdata_logdownload(), 10);\n    ColumnConfig column4 = new ColumnConfig(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.importusershopdata_logerase(), 10);\n\n    column3.setToolTip(\"Logdaten herunterladen\");\n    column3.setAlignment(HorizontalAlignment.CENTER);\n    column3.setRenderer(new ImageRenderer(ImageRenderer.DOWNLOAD, new Listener<BaseEvent>() {\n      @Override\n      public void handleEvent(BaseEvent be) {\n        download();\n      }\n    }));\n\n    column3.setToolTip(\"Logdaten l\u00f6schen\");\n    column4.setAlignment(HorizontalAlignment.CENTER);\n    column4.setRenderer(new ImageRenderer(ImageRenderer.ERASE, new Listener<BaseEvent>() {\n      @Override\n      public void handleEvent(BaseEvent be) {\n        erase();\n      }\n    }));\n\n    configs.add(column1);\n    configs.add(column2);\n    configs.add(column3);\n    configs.add(column4);\n\n    cm = new ColumnModel(configs);\n    store.removeAll();\n\n    grid = new GridContainer<ListStore<BaseModelData>, BaseModelData>(store, cm, 75);\n    add(grid);\n\n  }\n\n  private void setLogDataCount(BaseModelData m, String count) {\n    m.set(\"amount\", count);\n  }\n\n  @Override\n  public void init() {}\n\n  private void updateGrid() {\n    store.removeAll();\n\n    CommonServiceLocator.getUserShopAssignmentServlet().getLogEntriesCount(new AsyncCallback<Integer>() {\n\n      @Override\n      public void onSuccess(Integer result) {\n        final BaseModelData m = new BaseModelData();\n        m.set(\"filename\", \"logdata.csv\");\n\n        if (result == 0) {\n          return;\n        } else if (result == 1) {\n          setLogDataCount(m, result.toString() + \" Eintrag\");\n        } else {\n          setLogDataCount(m, result.toString() + \" Eintr\u00e4ge\");\n        }\n\n        store.add(m);\n      }\n\n      @Override\n      public void onFailure(Throwable caught) {\n        return;\n      }\n\n    });\n  }\n\n  private Upload createRealUploadButton() {\n    final Upload upload = new Upload(ButtonSize.Small, AdminUI.ADMINCOMMONTEXTPOOL.importusershopdata_selectimportfile());\n    upload.getForm().setAction(GWT.getModuleBaseURL() + \"userShopAssignmentUploadServlet\");\n    upload.getForm().setEncoding(FormPanel.ENCODING_MULTIPART);\n    upload.getForm().setMethod(FormPanel.METHOD_POST);\n    upload.setAllowedFileTypes(\".csv\"); // multiple files with \".csv,.txt\"\n    upload.getFileUpload().addChangeHandler(new ChangeHandler() {\n      @Override\n      public void onChange(ChangeEvent event) {\n        upload.submit();\n      }\n    });\n    upload.getForm().addSubmitCompleteHandler(new SubmitCompleteHandler() {\n      @Override\n      public void onSubmitComplete(SubmitCompleteEvent event) {\n        updateGrid();\n        PortletEventManager.fireEvent(new PortletEvent(this, CuCoEventType.UPDATE_USERS));\n      }\n    });\n    upload.setVisible(true);\n    return upload;\n  }\n\n  private void download() {\n    Window.open(GWT.getModuleBaseURL() + \"userShopAssignmentDownloadServlet\", null, null);\n  }\n\n  private void erase() {\n    CommonServiceLocator.getUserShopAssignmentServlet().purgeLogEntries(new AsyncCallback<Void>() {\n      @Override\n      public void onSuccess(Void result) {\n        updateGrid();\n      }\n\n      @Override\n      public void onFailure(Throwable caught) {\n        Window.alert(\"Beim L\u00f6schvorgang ist ein Fehler aufgetreten!\");\n        updateGrid();\n      }\n    });\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/CuCoSettBasePortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/CuCoSettBasePortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 738,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.framework.ui.client.ui.AbstractPortlet;\n\npublic abstract class CuCoSettBasePortlet extends AbstractPortlet {\n\n  private CuCoSettBasePortlet(PortletDefinition def, boolean isDetails) {\n    super(def, isDetails);\n  }\n\n  public CuCoSettBasePortlet(PortletDefinition def) {\n    this(def, false);\n  }\n\n  public CuCoSettBasePortlet(PortletDefinition def, boolean isDetails, boolean collapsible, boolean hasDetails) {\n    super(def, isDetails, collapsible, hasDetails);\n  }\n\n  public CuCoSettBasePortlet(PortletDefinition def, boolean collapsible, boolean hasDetails) {\n    this(def, false, collapsible, hasDetails);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/ReportingPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/ReportingPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9691,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.Label;\nimport com.google.gwt.user.client.ui.ScrollPanel;\nimport com.google.gwt.user.client.ui.VerticalPanel;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.popup.WaitingPopup;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.core.bean.Reporting;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.cuco.ui.common.client.ui.table.TableDataStore;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\nimport at.a1ta.webclient.cucosett.client.ui.ReportingWidget;\n\npublic class ReportingPortlet extends CuCoSettBasePortlet {\n  // @formatter:off\n  private final WaitingPopup waitingPopup = new WaitingPopup(\"Das Erstellen des Reports kann einige Minuten dauern.\", false, true);\n\n  public static final String NAME = \"Reporting\";\n  private static ReportingPortlet _instance = null;\n  private DataTable<Reporting> tblReportings;\n  private VerticalPanel tablesPanel;\n  private VerticalPanel errorsPanel;\n\n  public static ReportingPortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new ReportingPortlet(def);\n    }\n    return _instance;\n  }\n\n  // @formatter:on\n\n  private ReportingPortlet(PortletDefinition def) {\n    super(def);\n\n    CellRenderer<Reporting> loadRenderer = new CellRenderer<Reporting>() {\n      @Override\n      public Widget render(final ModelData<Reporting> model, String columnId, int rowId) {\n        Button button = new Button(AdminUI.ADMINCOMMONTEXTPOOL.reportingButtonLoad(), ButtonSize.Small);\n        button.addClickHandler(new ClickHandler() {\n          @Override\n          public void onClick(ClickEvent event) {\n            loadReporting(model.getBean());\n          }\n        });\n        return button;\n      }\n    };\n\n    CellRenderer<Reporting> excelExportRenderer = new CellRenderer<Reporting>() {\n      @Override\n      public Widget render(final ModelData<Reporting> model, String columnId, int rowId) {\n        Button button = new Button(\"Excel\", ButtonSize.Small);\n        button.addClickHandler(new ClickHandler() {\n          @Override\n          public void onClick(ClickEvent event) {\n            loadExcelReport(model.getBean());\n          }\n        });\n        return button;\n      }\n    };\n\n    CellRenderer<Reporting> nameRenderer = new CellRenderer<Reporting>() {\n      @Override\n      public Widget render(final ModelData<Reporting> model, String columnId, int rowId) {\n        return new Label(model.get(columnId).toString());\n      }\n    };\n\n    CellRenderer<Reporting> queryRenderer = new CellRenderer<Reporting>() {\n      @Override\n      public Widget render(final ModelData<Reporting> model, String columnId, int rowId) {\n        String origQuery = model.get(columnId).toString();\n        String query = origQuery;\n        if (query.length() > 80) {\n          query = query.replaceAll(\"<br/>\", \" \").substring(0, 80) + \" ...\";\n        } else {\n          query = query.replaceAll(\"<br/>\", \" \");\n        }\n\n        Label label = new Label(query);\n        label.setTitle(origQuery);\n\n        return label;\n      }\n    };\n\n    ArrayList<Column<Reporting>> columnData = new ArrayList<Column<Reporting>>();\n    columnData.add(new Column<Reporting>(\"id\", AdminUI.ADMINCOMMONTEXTPOOL.reportingGridHeadId(), \"5%\"));\n    columnData.add(new Column<Reporting>(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.reportingGridHeadName(), \"30%\", nameRenderer));\n    columnData.add(new Column<Reporting>(\"query\", AdminUI.ADMINCOMMONTEXTPOOL.reportingGridHeadQuery(), \"45%\", queryRenderer));\n    columnData.add(new Column<Reporting>(\"longrunning\", AdminUI.ADMINCOMMONTEXTPOOL.reportingGridHeadLongrunning(), \"8%\"));\n    columnData.add(new Column<Reporting>(\"load\", \"\", \"7%\", loadRenderer));\n    columnData.add(new Column<Reporting>(\"load\", \"\", \"5%\", excelExportRenderer));\n\n    tblReportings = new DataTable<Reporting>(columnData, new TableDataStore<Reporting>());\n    tblReportings.setWidth(\"100%\");\n    ScrollPanel pnl1 = new ScrollPanel();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl1.add(pnl);\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    ScrollPanel pnl2 = new ScrollPanel();\n    ScrollPanel pnl3 = new ScrollPanel();\n\n    tablesPanel = new VerticalPanel();\n    errorsPanel = new VerticalPanel();\n    pnl.add(tblReportings);\n    pnl.add(new HTML(\"<hr/>\"));\n    pnl.add(pnl3);\n    pnl.add(new HTML(\"<hr/>\"));\n    pnl.add(pnl2);\n    pnl2.add(tablesPanel);\n    pnl3.add(errorsPanel);\n    pnl2.setWidth(\"100%\");\n    pnl3.setWidth(\"100%\");\n    add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    add(pnl1);\n\n    showContent();\n  }\n\n  @Override\n  public void init() {\n    tblReportings.getStore().clear();\n\n    SettingsServiceLocator.getReportingServlet().getAllReportings(new BaseAsyncCallback<ArrayList<Reporting>>() {\n\n      @Override\n      public void onSuccess(ArrayList<Reporting> result) {\n        ArrayList<ModelData<Reporting>> models = new ArrayList<ModelData<Reporting>>(result.size());\n        for (Reporting report : result) {\n          ModelData<Reporting> model = new ModelData<Reporting>(report);\n          model.put(\"id\", report.getId());\n          model.put(\"name\", report.getName());\n          model.put(\"query\", report.getQuery());\n          model.put(\"longrunning\", report.isLongRunning());\n          models.add(model);\n        }\n        tblReportings.getStore().add(models);\n      }\n    });\n  }\n\n  private void loadReporting(final Reporting report) {\n    clearErrorArea();\n    waitingPopup.center();\n    SettingsServiceLocator.getReportingServlet().executeReporting(report.getId(), new BaseAsyncCallback<ArrayList<HashMap<String, Object>>>() {\n      @Override\n      public void onSuccess(ArrayList<HashMap<String, Object>> result) {\n        waitingPopup.hide();\n        if (result.size() > 0) {\n          ArrayList<Column<HashMap<String, Object>>> columnData = new ArrayList<Column<HashMap<String, Object>>>();\n          for (String col : result.get(0).keySet()) {\n            columnData.add(new Column<HashMap<String, Object>>(col, col, null));\n          }\n          ArrayList<ModelData<HashMap<String, Object>>> models = new ArrayList<ModelData<HashMap<String, Object>>>(result.size());\n          for (HashMap<String, Object> row : result) {\n            ModelData<HashMap<String, Object>> model = new ModelData<HashMap<String, Object>>(row);\n            for (String col : row.keySet()) {\n              model.put(col, row.get(col));\n            }\n            models.add(model);\n          }\n          DataTable<HashMap<String, Object>> table = new DataTable<HashMap<String, Object>>(columnData, new TableDataStore<HashMap<String, Object>>());\n          table.getStore().add(models);\n          ReportingWidget rwidget = new ReportingWidget(table, report.getId());\n          rwidget.setHeight(\"400px\");\n          addTableToPanel(rwidget);\n        } else {\n          int position = getPositionForTableId(report.getId());\n          if (position > -1) {\n            tablesPanel.remove(position);\n          }\n        }\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        waitingPopup.hide();\n        updateErrorArea(exception, report.getQuery());\n      }\n\n    });\n  }\n\n  private void loadExcelReport(final Reporting report) {\n    waitingPopup.center();\n    clearErrorArea();\n    SettingsServiceLocator.getReportingServlet().exportReportAsExcel(report.getId(), new BaseAsyncCallback<String>() {\n      @Override\n      public void onSuccess(String result) {\n        waitingPopup.hide();\n        Window.open(GWT.getModuleBaseURL() + \"file.view?id=\" + result, \"_self\", null);\n      }\n\n      @Override\n      public void onFailure(Throwable exception) {\n        waitingPopup.hide();\n        updateErrorArea(exception, report.getQuery());\n      }\n\n    });\n  }\n\n  private void updateErrorArea(Throwable exception, String query) {\n    clearErrorArea();\n    Label label = new Label(\"Fehler beim Ausf\u00fchren der Query: \\n\" + query + \"\\n\\nEs ist ein Fehler aufgetreten:\\n\" + exception.getMessage());\n    label.getElement().getStyle().setProperty(\"whiteSpace\", \"pre\");\n    label.getElement().getStyle().setColor(\"red\");\n    errorsPanel.add(label);\n  }\n\n  private void clearErrorArea() {\n    for (int i = 0; i < errorsPanel.getWidgetCount(); i++) {\n      errorsPanel.remove(i);\n    }\n  }\n\n  private int getPositionForTableId(long id) {\n    for (int i = 0; i < tablesPanel.getWidgetCount(); i++) {\n      ReportingWidget help = (ReportingWidget) tablesPanel.getWidget(i);\n      if (help.getId() == id) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  private void addTableToPanel(ReportingWidget rwidget) {\n    int position = getPositionForTableId(rwidget.getId());\n    if (position > -1) {\n      tablesPanel.remove(position);\n      tablesPanel.insert(rwidget, position);\n    } else {\n      tablesPanel.add(rwidget);\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/CCTOrgStructureElementPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/CCTOrgStructureElementPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5336,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.dom.client.InputElement;\nimport com.google.gwt.event.dom.client.ChangeEvent;\nimport com.google.gwt.event.dom.client.ChangeHandler;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Element;\nimport com.google.gwt.user.client.Event;\nimport com.google.gwt.user.client.EventListener;\nimport com.google.gwt.user.client.Timer;\nimport com.google.gwt.user.client.ui.FormPanel;\nimport com.google.gwt.user.client.ui.FormPanel.SubmitCompleteEvent;\nimport com.google.gwt.user.client.ui.FormPanel.SubmitCompleteHandler;\nimport com.google.gwt.user.client.ui.HTMLPanel;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.popup.MessagePopup;\nimport at.a1ta.bite.ui.client.popup.WaitingPopup;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.Label;\nimport at.a1ta.bite.ui.client.widget.Upload;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.ui.common.client.bundle.CuCoUI;\n\npublic class CCTOrgStructureElementPortlet extends CuCoSettBasePortlet {\n  // @formatter:off\n  private final WaitingPopup waitingPopup = new WaitingPopup(AdminUI.ADMINCOMMONTEXTPOOL.portletOrgStructureWaitingMessage(), true, true);\n\n  public static final String NAME = \"OrgStructurePortlet\";\n  private static CCTOrgStructureElementPortlet _instance = null;\n\n  public static synchronized CCTOrgStructureElementPortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new CCTOrgStructureElementPortlet(def);\n    }\n    return _instance;\n  }\n\n  // @formatter:on\n\n  private CCTOrgStructureElementPortlet(PortletDefinition def) {\n    super(def);\n    initUI();\n    showContent();\n\n  }\n\n  private void initUI() {\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    pnl.add(createOrgStructureInfoLabel());\n    pnl.add(createRealUploadButton());\n    add(pnl);\n\n  }\n\n  private Label createOrgStructureInfoLabel() {\n    Label portletInfoLabel = new Label(\"  \" + AdminUI.ADMINCOMMONTEXTPOOL.portletOrgStructureInfo());\n    return portletInfoLabel;\n  }\n\n  private Upload createRealUploadButton() {\n    final Upload upload = new Upload(ButtonSize.Small, AdminUI.ADMINCOMMONTEXTPOOL.importCalcOrgStructure());\n    upload.getForm().clear();\n    upload.getForm().add(upload.getFileUpload());\n    upload.addHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        upload.getForm().reset();\n      }\n    }, ClickEvent.getType());\n    upload.getForm().setAction(GWT.getModuleBaseURL() + \"cCTOrgStructureElementUploadServlet\");\n    upload.getForm().setEncoding(FormPanel.ENCODING_MULTIPART);\n    upload.getForm().setMethod(FormPanel.METHOD_POST);\n    upload.setAllowedFileTypes(\".xlsx\"); // multiple files with \".csv,.txt\"\n    upload.setAllowedFileTypes(\".xls\"); // multiple files with \".csv,.txt\"\n    upload.getFileUpload().addChangeHandler(new ChangeHandler() {\n      @Override\n      public void onChange(ChangeEvent event) {\n        if (upload.getFileUpload().getFilename() != null && (upload.getFileUpload().getFilename().trim().endsWith(\".xls\") || upload.getFileUpload().getFilename().trim().endsWith(\".xlsx\"))) {\n          waitingPopup.show();\n          waitingPopup.center();\n          upload.submit();\n          Timer hideTimer = new Timer() {\n            @Override\n            public void run() {\n              if (waitingPopup.isShowing()) {\n                waitingPopup.hide();\n                MessagePopup.showError(UI.BITE_TEXTPOOL.hint(), AdminUI.ADMINCOMMONTEXTPOOL.portletOrgStructureFailureReportMessage());\n              }\n            }\n          };\n          hideTimer.schedule(15000);\n        } else {\n          MessagePopup.showError(UI.BITE_TEXTPOOL.hint(), CuCoUI.CUCOCOMMONTEXTPOOL.admin_quoteClearance_err_invalidUserEntries());\n        }\n      }\n    });\n    Event.setEventListener(upload.getElement(), new EventListener() {\n      @Override\n      public void onBrowserEvent(Event event) {\n        // work with IE11+ and other modern browsers\n        nativeClearFile(upload.getFileUpload().getElement());\n        // throw event click\n        InputElement.as(upload.getFileUpload().getElement()).click();\n      }\n    });\n    Event.sinkEvents(upload.getElement(), Event.ONCLICK);\n    upload.getForm().addSubmitCompleteHandler(new SubmitCompleteHandler() {\n      @Override\n      public void onSubmitComplete(SubmitCompleteEvent event) {\n        waitingPopup.hide();\n        if (event.getResults() != null && event.getResults().contains(\"Success:\")) {\n          MessagePopup.showInfo(UI.BITE_TEXTPOOL.ok(), AdminUI.ADMINCOMMONTEXTPOOL.portletOrgStructureSuccessMessage());\n        } else {\n          MessagePopup.showError(UI.BITE_TEXTPOOL.hint(), event.getResults());\n        }\n\n      }\n    });\n\n    upload.setVisible(true);\n    return upload;\n  }\n\n  @Override\n  public void init() {\n    // No Implementation\n  }\n\n  private native void nativeClearFile(Element element) /*-{\n                                                       element.value = '';\n                                                       }-*/;\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/RoleGroupsManagementPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/RoleGroupsManagementPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8034,
    "content": "package at.a1ta.webclient.cucosett.client.portlet;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\nimport com.google.gwt.user.client.ui.Anchor;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.core.shared.dto.security.RoleGroup;\nimport at.a1ta.bite.core.shared.dto.security.RoleWithGroup;\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.cuco.ui.common.shared.AdminAuthorityHelper;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditRoleGroupManagementDialog;\n\npublic class RoleGroupsManagementPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"Rollengruppenverwaltung\";\n  private static RoleGroupsManagementPortlet _instance;\n  private DataTable<RoleGroup> table;\n\n  private WaitingWidget waitingWidget;\n  private EditRoleGroupManagementDialog editRoleGroupDialog = new EditRoleGroupManagementDialog();\n  private Delegate<RoleGroup> deleteRoleGroupDelegate;\n\n  public static RoleGroupsManagementPortlet create(PortletDefinition portletDefinition) {\n    if (_instance == null) {\n      _instance = new RoleGroupsManagementPortlet(portletDefinition, false);\n    }\n    return _instance;\n  }\n\n  private RoleGroupsManagementPortlet(PortletDefinition def, boolean isDetails) {\n    super(def, isDetails, false, false);\n\n    initTable();\n    initUI();\n\n    registerUpdateUserListener();\n    registerUpdateUsersListener();\n\n    loadUsers();\n\n    showContent();\n  }\n\n  private void initUI() {\n    waitingWidget = new WaitingWidget();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel newRoleGroup = createNewRoleGroupRow();\n    pnl.add(newRoleGroup);\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    pnl.add(waitingWidget);\n    pnl.add(table);\n    add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    add(pnl);\n    deleteRoleGroupDelegate = new Delegate<RoleGroup>() {\n\n      @Override\n      public void execute(final RoleGroup group) {\n        CommonServiceLocator.getRoleServlet().deleteRoleGroup(group.getId(), new AsyncCallback<RpcStatus>() {\n\n          @Override\n          public void onSuccess(RpcStatus result) {\n            ModelData<RoleGroup> m = new ModelData<RoleGroup>(group);\n            m.remove(group);\n            loadUsers();\n          }\n\n          @Override\n          public void onFailure(Throwable caught) {\n            showError();\n\n          }\n        });\n\n      }\n    };\n  }\n\n  private void initTable() {\n    table = new DataTable<RoleGroup>(createColumns());\n    table.enablePaging(25);\n    table.setWidth(\"830px\");\n    table.setVisible(false);\n  }\n\n  private void registerUpdateUsersListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATE_USERS, new PortletEventListener<PortletEvent>() {\n\n      @Override\n      public void handleEvent(PortletEvent be) {\n        init();\n        loadUsers();\n      }\n    });\n  }\n\n  protected void loadUsers() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n\n    table.getStore().clear();\n\n    CommonServiceLocator.getRoleServlet().getAllRoleGroups(new BaseAsyncCallback<ArrayList<RoleGroup>>(this) {\n\n      @Override\n      public void onSuccess(ArrayList<RoleGroup> result) {\n        ArrayList<ModelData<RoleGroup>> results = new ArrayList<ModelData<RoleGroup>>();\n\n        for (RoleGroup group : result) {\n          ModelData<RoleGroup> m = new ModelData<RoleGroup>(group);\n          m.put(\"bean\", group);\n          m.put(\"name\", group.getName());\n          m.put(\"desc\", group.getDescription());\n          results.add(m);\n        }\n\n        table.getStore().add(results);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  private void registerUpdateUserListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATE_ROLEGROUP, new PortletEventListener<GenericEvent<RoleGroup>>() {\n\n      @Override\n      public void handleEvent(GenericEvent<RoleGroup> be) {\n        RoleGroup group = be.get();\n        ModelData<RoleGroup> model = table.getStore().get(group);\n        if (model != null) {\n          model.setBean(group);\n        } else {\n          model = new ModelData<RoleGroup>(group);\n          model.put(\"bean\", group);\n          model.put(\"name\", group.getName());\n          model.put(\"desc\", group.getDescription());\n          table.getStore().add(model);\n        }\n        loadUsers();\n      }\n    });\n  }\n\n  private HorizontalPanel createNewRoleGroupRow() {\n    HorizontalPanel roleGroup = new HorizontalPanel();\n    if (AdminAuthorityHelper.canCreateRoleGroup(UserManager.getUserInfo())) {\n      roleGroup.add(createNewButton());\n    }\n    return roleGroup;\n  }\n\n  private Widget createNewButton() {\n    Button btnCreateRoleGroup = new Button(\"Neue Rollengruppe\", ButtonSize.Small);\n    btnCreateRoleGroup.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        editRoleGroupDialog = new EditRoleGroupManagementDialog();\n        editRoleGroupDialog.show(null);\n      }\n    });\n    return btnCreateRoleGroup;\n  }\n\n  private ArrayList<Column<RoleGroup>> createColumns() {\n    ArrayList<Column<RoleGroup>> columns = new ArrayList<Column<RoleGroup>>();\n    columns.add(new Column<RoleGroup>(\"name\", \"Bezeichnung\", \"15%\", createRoleGroupCellRenderer()));\n    columns.add(new Column<RoleGroup>(\"desc\", \"Beschreibung\", \"16%\"));\n    columns.add(new Column<RoleGroup>(\"delete\", \"L\u00f6schen\", \"16%\", createDeleteCellRenderer()));\n    return columns;\n  }\n\n  private CellRenderer<RoleGroup> createRoleGroupCellRenderer() {\n    return new CellRenderer<RoleGroup>() {\n      @Override\n      public Widget render(final ModelData<RoleGroup> model, String columnId, int rowId) {\n        Anchor link = new Anchor(model.getBean().getName());\n        link.addClickHandler(new ClickHandler() {\n          @Override\n          public void onClick(ClickEvent event) {\n            editRoleGroupDialog.show(model.getBean());\n            if (model.getBean().getRoles().size() <= 1) {\n              for (RoleWithGroup roleGroup : model.getBean().getRoles()) {\n                editRoleGroupDialog.showAuth(roleGroup);\n              }\n            }\n          }\n        });\n        return link;\n      }\n    };\n  }\n\n  private CellRenderer<RoleGroup> createDeleteCellRenderer() {\n    return new CellRenderer<RoleGroup>() {\n      @Override\n      public IsWidget render(final ModelData<RoleGroup> model, String columnId, int rowId) {\n        return new ClickableIcon<RoleGroup>(model.getBean(), deleteRoleGroupDelegate, UI.IMAGES.iconDelete(), null);\n      }\n    };\n  }\n\n  @Override\n  public void init() {}\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/vip/VipSearchPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/vip/VipSearchPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 780,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.vip;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.framework.ui.client.ui.AbstractPortlet;\n\npublic class VipSearchPortlet extends AbstractPortlet {\n\n  public static final String VIP_SEARCH = \"VipSearch\";\n\n  private static VipSearchPortlet instance;\n\n  private VipSearchComponent component;\n\n  public static VipSearchPortlet create(PortletDefinition portletDefinition) {\n    if (instance == null) {\n      instance = new VipSearchPortlet(portletDefinition);\n    }\n    return instance;\n  }\n\n  private VipSearchPortlet(PortletDefinition def) {\n    super(def, false, false, false);\n\n    component = new VipSearchComponent();\n    add(component);\n  }\n\n  @Override\n  public void init() {\n    showContent();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/vip/VipSearchComponent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/vip/VipSearchComponent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6001,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.vip;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport com.google.gwt.core.client.GWT;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.i18n.client.DateTimeFormat;\nimport com.google.gwt.uibinder.client.UiBinder;\nimport com.google.gwt.uibinder.client.UiField;\nimport com.google.gwt.uibinder.client.UiHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Composite;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.util.DateUtils;\nimport at.a1ta.bite.ui.client.widget.DateBox;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.ListBox;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.core.shared.dto.VIPHistoryEntry;\nimport at.a1ta.cuco.core.shared.dto.VipExport;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.cuco.ui.common.client.ui.table.TableDataStore;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\n\npublic class VipSearchComponent extends Composite {\n  //@formatter:off\n  private static final String EQUALS = \"=\";\n  private static final String AMP = \"&\";\n  private static final int PAGING_SIZE = 20;\n  private static final DateTimeFormat SERIALIZATION_DATETIME_FORMAT = DateTimeFormat.getFormat(VipExport.SERIALIZATION_DATE_PATTERN);\n  private static VipSearchComponentUiBinder uiBinder = GWT.create(VipSearchComponentUiBinder.class);\n\n  @UiField(provided = true) DataTable<VIPHistoryEntry> vipHistoryTable;\n  @UiField DateBox dateFrom;\n  @UiField DateBox dateTo;\n  @UiField InputBox txtSearch;\n  @UiField ListBox comboVipStatus;\n\n  interface VipSearchComponentUiBinder extends UiBinder<Widget, VipSearchComponent> {}\n  //@formatter:on\n\n  public VipSearchComponent() {\n    createVipHistoryTable();\n    initWidget(uiBinder.createAndBindUi(this));\n\n    comboVipStatus.addItem(\"Alle\", \"ALL\");\n    comboVipStatus.addItem(\"Kein\", (String) null);\n    comboVipStatus.addItem(\"1\", \"1\");\n    comboVipStatus.addItem(\"2\", \"2\");\n    comboVipStatus.addItem(\"3\", \"3\");\n    comboVipStatus.addItem(\"4\", \"4\");\n\n    // dateFrom.setFormat(new DateBox.DefaultFormat(DateUtils.getDefaultDateTimeFormat()));\n    // dateTo.setFormat(new DateBox.DefaultFormat(DateUtils.getDefaultDateTimeFormat()));\n  }\n\n  @UiHandler(\"btnSearch\")\n  protected void searchVipHistoryEntries(ClickEvent e) {\n    vipHistoryTable.getStore().clear();\n    vipHistoryTable.update();\n\n    CommonServiceLocator.getVIPHistoryServlet().getVIPHistory(dateFrom.getValue(), dateTo.getValue(), txtSearch.getValue(), comboVipStatus.getValue(comboVipStatus.getSelectedIndex()), new BaseAsyncCallback<List<VIPHistoryEntry>>() {\n\n      @Override\n      public void onSuccess(List<VIPHistoryEntry> result) {\n        ArrayList<ModelData<VIPHistoryEntry>> models = new ArrayList<ModelData<VIPHistoryEntry>>();\n        for (VIPHistoryEntry vipHistoryEntry : result) {\n          ModelData<VIPHistoryEntry> model = new ModelData<VIPHistoryEntry>(vipHistoryEntry);\n          model.put(\"created\", vipHistoryEntry.getCreated());\n          model.put(\"customerId\", vipHistoryEntry.getCustomerId());\n          model.put(\"name\", vipHistoryEntry.getName());\n          model.put(\"reported\", vipHistoryEntry.getReported());\n          model.put(\"status\", (vipHistoryEntry.getNewStatus() == null ? \"kein\" : vipHistoryEntry.getNewStatus()));\n          models.add(model);\n        }\n        vipHistoryTable.getStore().add(models);\n        vipHistoryTable.update();\n      }\n    });\n  }\n\n  private void createVipHistoryTable() {\n    ArrayList<Column<VIPHistoryEntry>> cData = new ArrayList<Column<VIPHistoryEntry>>();\n    cData.add(new Column<VIPHistoryEntry>(\"created\", AdminUI.ADMINCOMMONTEXTPOOL.vipCreated(), \"20%\", new CellRenderer<VIPHistoryEntry>() {\n\n      @Override\n      public Widget render(ModelData<VIPHistoryEntry> model, String columnId, int rowId) {\n        return new HTML(DateUtils.getDefaultDateTimeFormat().format((Date) model.get(columnId)));\n      }\n    }));\n    cData.add(new Column<VIPHistoryEntry>(\"customerId\", AdminUI.ADMINCOMMONTEXTPOOL.vipCustomerID(), \"20%\"));\n    cData.add(new Column<VIPHistoryEntry>(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.vipName(), \"20%\"));\n    cData.add(new Column<VIPHistoryEntry>(\"reported\", AdminUI.ADMINCOMMONTEXTPOOL.vipReporter(), \"20%\"));\n    cData.add(new Column<VIPHistoryEntry>(\"status\", AdminUI.ADMINCOMMONTEXTPOOL.vipAdminStatus(), \"20%\"));\n\n    vipHistoryTable = new DataTable<VIPHistoryEntry>(cData, new TableDataStore<VIPHistoryEntry>());\n    vipHistoryTable.enablePaging(PAGING_SIZE);\n    vipHistoryTable.update();\n  }\n\n  @UiHandler(\"btnExport\")\n  void export(ClickEvent event) {\n    vipHistoryTable.getStore().clear();\n    vipHistoryTable.update();\n\n    Window.open(createExportLink(), \"Exportieren\", \"\");\n  }\n\n  private String createExportLink() {\n    String link = GWT.getModuleBaseURL() + \"cuco/vipHistory.rpc?action=\" + VipExport.EXPORT_ACTION_CSV_BY_SEARCH;\n\n    if (dateFrom.getValue() != null) {\n      link += AMP + VipExport.SEARCH_FROM + EQUALS + SERIALIZATION_DATETIME_FORMAT.format(dateFrom.getValue());\n    }\n    if (dateTo.getValue() != null) {\n      link += AMP + VipExport.SEARCH_TO + EQUALS + SERIALIZATION_DATETIME_FORMAT.format(dateTo.getValue());\n    }\n    if (txtSearch.getValue() != null && !txtSearch.getValue().isEmpty()) {\n      link += AMP + VipExport.SEARCH_REPORTER + EQUALS + txtSearch.getValue();\n    }\n    if (!comboVipStatus.getValue(comboVipStatus.getSelectedIndex()).isEmpty()) {\n      link += AMP + VipExport.SEARCH_VIP_STATUS + EQUALS + comboVipStatus.getValue(comboVipStatus.getSelectedIndex());\n    }\n    return link;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/TeamManagementPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/TeamManagementPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2733,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past;\n\nimport com.google.gwt.user.client.ui.FlexTable;\nimport com.google.gwt.user.client.ui.HasHorizontalAlignment;\nimport com.google.gwt.user.client.ui.HasVerticalAlignment;\nimport com.google.gwt.user.client.ui.TabPanel;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.framework.ui.client.util.HtmlUtils;\nimport at.a1ta.webclient.cucosett.client.portlet.CuCoSettBasePortlet;\nimport at.a1ta.webclient.cucosett.client.portlet.past.widget.TeamManagementPanel;\nimport at.a1ta.webclient.cucosett.client.portlet.past.widget.TeamMemberManagementPanel;\nimport at.a1ta.webclient.cucosett.client.portlet.past.widget.TeamServiceManagementPanel;\n\npublic class TeamManagementPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"PaST Teams\";\n\n  private static TeamManagementPortlet _instance;\n\n  private TeamManagementPanel teamPanel;\n\n  private TeamMemberManagementPanel teamMemberPanel;\n\n  private TeamServiceManagementPanel teamServicePanel;\n\n  private FlexTable table = new FlexTable();\n\n  public static TeamManagementPortlet create(PortletDefinition portletDefinition) {\n    if (_instance == null) {\n      _instance = new TeamManagementPortlet(portletDefinition);\n    }\n    return _instance;\n  }\n\n  private TeamManagementPortlet(PortletDefinition def) {\n    super(def);\n    teamPanel = new TeamManagementPanel();\n    teamMemberPanel = new TeamMemberManagementPanel();\n    teamServicePanel = new TeamServiceManagementPanel();\n\n    table.setWidth(\"100%\");\n    table.setWidget(0, 0, teamPanel.getPanel());\n    table.getFlexCellFormatter().setAlignment(0, 0, HasHorizontalAlignment.ALIGN_LEFT, HasVerticalAlignment.ALIGN_TOP);\n    table.getFlexCellFormatter().setWidth(0, 0, \"50%\");\n\n    final TabPanel panel = new TabPanel();\n    panel.setWidth(\"500px\");\n\n    panel.add(teamMemberPanel, \"<div class=\\\"tab-l\\\"><div class=\\\"tab-r\\\"><div class=\\\"tab-c\\\"><div class=\\\"tab-body\\\">\" + \"Teammitglieder\" + \"</div></div></div></div>\", true);\n    panel.add(teamServicePanel, \"<div class=\\\"tab-l\\\"><div class=\\\"tab-r\\\"><div class=\\\"tab-c\\\"><div class=\\\"tab-body\\\">\" + \"Dienstleistungen\" + \"</div></div></div></div>\", true);\n    table.getFlexCellFormatter().setAlignment(0, 1, HasHorizontalAlignment.ALIGN_LEFT, HasVerticalAlignment.ALIGN_TOP);\n    table.getFlexCellFormatter().setWidth(0, 1, \"50%\");\n\n    add(table);\n    add(HtmlUtils.createLink(\"pastExport?what=agents\", \"Export\", true));\n\n    panel.addSelectionHandler(teamMemberPanel);\n    panel.addSelectionHandler(teamServicePanel);\n    table.setWidget(0, 1, panel);\n\n    panel.selectTab(0);\n  }\n\n  @Override\n  public void init() {\n    showLoading();\n    teamPanel.loadTeam();\n    showContent();\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/ServicePortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/ServicePortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7934,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.Style.HorizontalAlignment;\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.LoadConfig;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.ToolBar;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.i18n.client.DateTimeFormat;\nimport com.google.gwt.i18n.client.NumberFormat;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.framework.gxt.ui.FilterablePagingMemoryProxy;\nimport at.a1ta.framework.gxt.ui.LinkCellRenderer;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.gxt.ui.ProxyFilterField;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.util.HtmlUtils;\nimport at.a1ta.webclient.cucosett.client.dialog.EditServiceDialog;\nimport at.a1ta.webclient.cucosett.client.portlet.CuCoSettBasePortlet;\nimport at.a1ta.webclient.cucosett.client.ui.ServiceImageRenderer;\n\npublic class ServicePortlet extends CuCoSettBasePortlet implements Listener<BaseEvent>, ClickHandler {\n\n  public static final String NAME = \"PaST ServicesOld\";\n\n  private static ServicePortlet _instance = null;\n\n  private ProxyFilterField<String> namefilter = null;\n\n  private PagingGridContainer<ListStore<BaseModelData>, BaseModelData> gridContainer;\n\n  public static ServicePortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new ServicePortlet(def);\n    }\n    return _instance;\n  }\n\n  private ServicePortlet(PortletDefinition def) {\n    super(def, false, false);\n\n    namefilter = new ProxyFilterField<String>() {\n\n      @Override\n      public boolean doFilter(ModelData m) {\n        return m.get(\"name\").toString().toLowerCase().contains(getValue().toLowerCase());\n      }\n    };\n\n    namefilter.setWidth(250);\n    add(namefilter);\n    add(renderGrid());\n    add(HtmlUtils.createLink(\"pastExport?what=services\", \"Export\", true));\n  }\n\n  private Widget renderGrid() {\n\n    Button newBtn = new Button(AdminUI.ADMINCOMMONTEXTPOOL.serviceNew());\n    newBtn.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      public void componentSelected(ButtonEvent ce) {\n        EditServiceDialog d = EditServiceDialog.getInstance();\n        d.show();\n      }\n    });\n\n    ToolBar tb = new ToolBar();\n    tb.add(newBtn);\n\n    ListStore<BaseModelData> store = new ListStore<BaseModelData>();\n\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnName(), 200);\n    config.setRenderer(new LinkCellRenderer(this));\n    configs.add(config);\n\n    config = new ColumnConfig(\"from\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnFrom(), 100);\n    config.setDateTimeFormat(DateTimeFormat.getMediumDateFormat());\n    configs.add(config);\n\n    config = new ColumnConfig(\"to\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnTo(), 100);\n    config.setDateTimeFormat(DateTimeFormat.getMediumDateFormat());\n    configs.add(config);\n\n    config = new ColumnConfig(\"costs\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnCosts(), 100);\n    config.setNumberFormat(NumberFormat.getCurrencyFormat());\n    config.setAlignment(HorizontalAlignment.RIGHT);\n    configs.add(config);\n\n    config = new ColumnConfig(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnDelete(), 120);\n    config.setRenderer(new ServiceImageRenderer(ImageRenderer.DELETE, this));\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    gridContainer = new PagingGridContainer<ListStore<BaseModelData>, BaseModelData>(store, cm, 10);\n    gridContainer.setTopComponent(tb);\n    gridContainer.getGrid().setAutoExpandColumn(\"billnumber\");\n\n    PortletEventManager.addListener(CuCoEventType.UPDATE_SERVICES, new PortletEventListener<PortletEvent>() {\n\n      @Override\n      public void handleEvent(PortletEvent be) {\n        init();\n      }\n    });\n    return gridContainer;\n  }\n\n  @Override\n  public void init() {\n    gridContainer.getGrid().getStore().removeAll();\n    CommonServiceLocator.getServiceServlet().getAllServices(new BaseAsyncCallback<ArrayList<Service>>() {\n\n      @Override\n      public void onSuccess(ArrayList<Service> result) {\n        ArrayList<BaseModelData> results = new ArrayList<BaseModelData>();\n\n        for (Service service : result) {\n          BaseModelData m = new BaseModelData();\n          m.set(\"bean\", service);\n          m.set(\"name\", service.getName());\n          m.set(\"from\", service.getValidity().getValidFrom());\n          m.set(\"to\", service.getValidity().getValidUntil());\n          m.set(\"costs\", service.getCosts());\n          results.add(m);\n        }\n\n        FilterablePagingMemoryProxy proxy = new FilterablePagingMemoryProxy(results);\n        // loader\n        BasePagingLoader<PagingLoadResult<LoadConfig>> gridloader = new BasePagingLoader<PagingLoadResult<LoadConfig>>(proxy);\n        gridloader.setRemoteSort(true);\n        gridContainer.getToolbar().bind(gridloader);\n\n        namefilter.bind(gridloader);\n\n        ListStore<BaseModelData> store = new ListStore<BaseModelData>(gridloader);\n        gridContainer.reconfigure(store);\n        gridloader.load();\n        showContent();\n      }\n    });\n  }\n\n  @Override\n  public void handleEvent(BaseEvent be) {\n    BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.serviceDeleteQuestion())) {\n      Service service = md.get(\"bean\");\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.serviceLabel(), AdminUI.ADMINCOMMONTEXTPOOL.serviceMessageDelete(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxDelete());\n      wait.show();\n\n      CommonServiceLocator.getServiceServlet().deleteService(service.getId(), new BaseAsyncCallback<RpcStatus>() {\n\n        @Override\n        public void onSuccess(RpcStatus result) {\n          init();\n          wait.close();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.serviceLabel(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxDeleteError(), null);\n        }\n\n      });\n    }\n  }\n\n  @Override\n  public void onClick(ClickEvent event) {\n    BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    EditServiceDialog d = EditServiceDialog.getInstance((Service) md.get(\"bean\"));\n    d.show();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/CreditTypesPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/CreditTypesPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8705,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Anchor;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddCreditTypeEvent;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditCreditTypesDialog;\nimport at.a1ta.webclient.cucosett.client.portlet.CuCoSettBasePortlet;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class CreditTypesPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"PaST Gutschriften\";\n\n  private static CreditTypesPortlet _instance;\n  private DataTable<CreditType> table;\n  private WaitingWidget waitingWidget;\n  private EditCreditTypesDialog editCreditTypesDialog;\n  private Delegate<CreditType> deleteRoleGroupDelegate;\n\n  public static CreditTypesPortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new CreditTypesPortlet(def, false);\n    }\n    return _instance;\n  }\n\n  private CreditTypesPortlet(PortletDefinition def, boolean isDetails) {\n    super(def, isDetails, false, false);\n\n    initTable();\n    initUI();\n\n    registerUpdateCreditListener();\n    registerUpdateCreditsListener();\n\n    loadCredits();\n\n    showContent();\n  }\n\n  private void initUI() {\n    waitingWidget = new WaitingWidget();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel newCreditType = createNewCreditTypeRow();\n    pnl.add(newCreditType);\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    pnl.add(waitingWidget);\n    pnl.add(table);\n    add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    add(pnl);\n    deleteRoleGroupDelegate = new Delegate<CreditType>() {\n      @Override\n      public void execute(final CreditType credit) {\n        SettingsServiceLocator.getCreditTypeServlet().deleteCreditType(credit.getId(), new BaseAsyncCallback<RpcStatus>() {\n          @Override\n          public void onSuccess(RpcStatus result) {\n            if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.credittypeDeleteQuestion())) {\n              ModelData<CreditType> m = new ModelData<CreditType>(credit);\n              waitingWidget.setText(AdminUI.ADMINCOMMONTEXTPOOL.credittypeMessageDelete());\n              waitingWidget.show();\n              m.remove(credit);\n              waitingWidget.hide();\n              loadCredits();\n            }\n          }\n\n          @Override\n          public void onFailure(Throwable caught) {\n            waitingWidget.hide();\n            Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.messageboxDeleteError());\n            loadCredits();\n          }\n        });\n\n      }\n    };\n  }\n\n  private void initTable() {\n    table = new DataTable<CreditType>(createColumns());\n    table.enablePaging(10);\n    table.setWidth(\"1000px\");\n    table.setVisible(false);\n  }\n\n  private void registerUpdateCreditsListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATECREDIT_TYPES, new PortletEventListener<AddCreditTypeEvent>() {\n\n      @Override\n      public void handleEvent(AddCreditTypeEvent be) {\n        init();\n        loadCredits();\n      }\n    });\n  }\n\n  public void loadCredits() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n\n    table.getStore().clear();\n\n    SettingsServiceLocator.getCreditTypeServlet().getAllCreditTypes(new BaseAsyncCallback<ArrayList<CreditType>>(this) {\n\n      @Override\n      public void onSuccess(ArrayList<CreditType> result) {\n        ArrayList<ModelData<CreditType>> results = new ArrayList<ModelData<CreditType>>();\n\n        for (CreditType credit : result) {\n          ModelData<CreditType> m = new ModelData<CreditType>(credit);\n          m.put(\"bean\", credit);\n          m.put(\"name\", credit.getName());\n          m.put(\"description\", credit.getDescription());\n          m.put(\"active\", credit.getActive());\n          results.add(m);\n        }\n\n        table.getStore().add(results);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  private void registerUpdateCreditListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATECREDIT_TYPES, new PortletEventListener<AddCreditTypeEvent>() {\n\n      @Override\n      public void handleEvent(AddCreditTypeEvent event) {\n        CreditType credit = event.getCredit();\n        ModelData<CreditType> model = table.getStore().get(credit);\n        if (model != null) {\n          model.setBean(credit);\n        } else {\n          model = new ModelData<CreditType>(credit);\n          model.put(\"bean\", credit);\n          model.put(\"name\", credit.getName());\n          model.put(\"description\", credit.getDescription());\n          model.put(\"active\", credit.getActive());\n          table.getStore().add(model);\n        }\n      }\n    });\n  }\n\n  private HorizontalPanel createNewCreditTypeRow() {\n    HorizontalPanel newCredit = new HorizontalPanel();\n    newCredit.add(createNewCreditTypeButton());\n    return newCredit;\n  }\n\n  private Widget createNewCreditTypeButton() {\n    Button btnCreateCreditType = new Button(AdminUI.ADMINCOMMONTEXTPOOL.credittypeNew(), ButtonSize.Small);\n    editCreditTypesDialog = new EditCreditTypesDialog();\n\n    btnCreateCreditType.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        // editCreditTypeDialog = new EditCreditTypeDialog();\n        editCreditTypesDialog.show(null);\n      }\n    });\n    return btnCreateCreditType;\n  }\n\n  private ArrayList<Column<CreditType>> createColumns() {\n    ArrayList<Column<CreditType>> columns = new ArrayList<Column<CreditType>>();\n    columns.add(new Column<CreditType>(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.credittypeGridColumnName(), \"20%\", createCreditTypeCellRenderer()));\n    columns.add(new Column<CreditType>(\"description\", AdminUI.ADMINCOMMONTEXTPOOL.credittypeGridColumnDescription(), \"30%\"));\n    columns.add(new Column<CreditType>(\"active\", AdminUI.ADMINCOMMONTEXTPOOL.credittypeGridColumnActive(), \"25%\"));\n    columns.add(new Column<CreditType>(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.credittypeGridColumnDelete(), \"25%\", createDeleteCellRenderer()));\n    return columns;\n  }\n\n  private CellRenderer<CreditType> createCreditTypeCellRenderer() {\n    return new CellRenderer<CreditType>() {\n      @Override\n      public Widget render(final ModelData<CreditType> model, String columnId, int rowId) {\n        Anchor link = new Anchor(model.getBean().getName());\n        link.addClickHandler(new ClickHandler() {\n          @Override\n          public void onClick(ClickEvent event) {\n            SettingsServiceLocator.getCreditTypeServlet().getAllCreditTypes(new BaseAsyncCallback<ArrayList<CreditType>>() {\n\n              @Override\n              public void onSuccess(ArrayList<CreditType> result) {\n                editCreditTypesDialog.show(model.getBean());\n              }\n            });\n\n          }\n        });\n        return link;\n      }\n    };\n  }\n\n  private CellRenderer<CreditType> createDeleteCellRenderer() {\n    return new CellRenderer<CreditType>() {\n      @Override\n      public IsWidget render(final ModelData<CreditType> model, String columnId, int rowId) {\n        return new ClickableIcon<CreditType>(model.getBean(), deleteRoleGroupDelegate, UI.IMAGES.iconDelete(), null);\n      }\n    };\n  }\n\n  @Override\n  public void init() {}\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/CreditTypePortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/CreditTypePortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7267,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseListLoadResult;\nimport com.extjs.gxt.ui.client.data.BaseListLoader;\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.DataReader;\nimport com.extjs.gxt.ui.client.data.ListLoadResult;\nimport com.extjs.gxt.ui.client.data.RpcProxy;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.ToolBar;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddCreditTypeEvent;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.ui.BooleanRenderer;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.framework.gxt.ui.GridContainer;\nimport at.a1ta.framework.gxt.ui.LinkCellRenderer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditCreditTypeDialog;\nimport at.a1ta.webclient.cucosett.client.portlet.CuCoSettBasePortlet;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class CreditTypePortlet extends CuCoSettBasePortlet implements Listener<BaseEvent>, ClickHandler {\n\n  public static final String NAME = \"PaST GutschriftenOld\";\n\n  private static CreditTypePortlet _instance = null;\n\n  public static CreditTypePortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new CreditTypePortlet(def, false);\n    }\n    return _instance;\n  }\n\n  private GridContainer<ListStore<BaseModelData>, BaseModelData> gridContainer;\n\n  private CreditTypePortlet(PortletDefinition def, boolean isDetails) {\n    super(def, isDetails, false, false);\n\n    add(renderGrid());\n  }\n\n  private Widget renderGrid() {\n\n    Button newBtn = new Button(AdminUI.ADMINCOMMONTEXTPOOL.credittypeNew());\n    newBtn.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      public void componentSelected(ButtonEvent ce) {\n        EditCreditTypeDialog d = EditCreditTypeDialog.getInstance();\n        d.show();\n      }\n    });\n\n    ToolBar tb = new ToolBar();\n    tb.add(newBtn);\n\n    ListStore<BaseModelData> store = new ListStore<BaseModelData>();\n\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.credittypeGridColumnName(), 140);\n    config.setRenderer(new LinkCellRenderer(this));\n    configs.add(config);\n\n    config = new ColumnConfig(\"description\", AdminUI.ADMINCOMMONTEXTPOOL.credittypeGridColumnDescription(), 300);\n    configs.add(config);\n\n    config = new ColumnConfig(\"active\", AdminUI.ADMINCOMMONTEXTPOOL.credittypeGridColumnActive(), 120);\n    config.setRenderer(new BooleanRenderer());\n    configs.add(config);\n\n    config = new ColumnConfig(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.credittypeGridColumnDelete(), 120);\n    config.setRenderer(new ImageRenderer(ImageRenderer.DELETE, this));\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    gridContainer = new GridContainer<ListStore<BaseModelData>, BaseModelData>(store, cm);\n    gridContainer.setTopComponent(tb);\n    gridContainer.getGrid().setAutoExpandColumn(\"billnumber\");\n\n    PortletEventManager.addListener(CuCoEventType.UPDATECREDIT_TYPES, new PortletEventListener<AddCreditTypeEvent>() {\n\n      @Override\n      public void handleEvent(AddCreditTypeEvent be) {\n        gridContainer.getGrid().getStore().getLoader().load();\n      }\n    });\n    return gridContainer;\n  }\n\n  @Override\n  public void init() {\n    gridContainer.getGrid().getStore().removeAll();\n\n    RpcProxy<ArrayList<CreditType>> proxy = new RpcProxy<ArrayList<CreditType>>() {\n\n      @Override\n      protected void load(Object loadConfig, AsyncCallback<ArrayList<CreditType>> callback) {\n        SettingsServiceLocator.getCreditTypeServlet().getAllCreditTypes(callback);\n      }\n    };\n\n    BaseListLoader<ListLoadResult<BaseModelData>> loader = new BaseListLoader<ListLoadResult<BaseModelData>>(proxy, new DataReader<ListLoadResult<BaseModelData>>() {\n\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public ListLoadResult<BaseModelData> read(Object loadConfig, Object data) {\n        List<BaseModelData> results = new ArrayList<BaseModelData>();\n\n        List<CreditType> list = (List<CreditType>) data;\n\n        for (CreditType ct : list) {\n          BaseModelData m = new BaseModelData();\n          m.set(\"bean\", ct);\n          m.set(\"name\", ct.getName());\n          m.set(\"description\", ct.getDescription());\n          m.set(\"active\", ct.getActive());\n          results.add(m);\n        }\n        return new BaseListLoadResult<BaseModelData>(results);\n      }\n    });\n    ListStore<BaseModelData> store = new ListStore<BaseModelData>(loader);\n    gridContainer.reconfigure(store);\n    loader.load();\n    showContent();\n  }\n\n  @Override\n  public void handleEvent(BaseEvent be) {\n    BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.credittypeDeleteQuestion())) {\n      CreditType ct = md.get(\"bean\");\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.credittypeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.credittypeMessageDelete(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxDelete());\n      wait.show();\n\n      SettingsServiceLocator.getCreditTypeServlet().deleteCreditType(ct.getId(), new BaseAsyncCallback<RpcStatus>() {\n\n        @Override\n        public void onSuccess(RpcStatus result) {\n          gridContainer.getGrid().getStore().getLoader().load();\n          wait.close();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.credittypeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxDeleteError(), null);\n        }\n\n      });\n    }\n  }\n\n  @Override\n  public void onClick(ClickEvent event) {\n    BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    EditCreditTypeDialog d = EditCreditTypeDialog.getInstance((CreditType) md.get(\"bean\"));\n    d.show();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/TeamPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/TeamPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2592,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past;\n\nimport com.google.gwt.user.client.ui.FlexTable;\nimport com.google.gwt.user.client.ui.HasHorizontalAlignment;\nimport com.google.gwt.user.client.ui.HasVerticalAlignment;\nimport com.google.gwt.user.client.ui.TabPanel;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.framework.ui.client.util.HtmlUtils;\nimport at.a1ta.webclient.cucosett.client.portlet.CuCoSettBasePortlet;\nimport at.a1ta.webclient.cucosett.client.portlet.past.widget.TeamMemberPanel;\nimport at.a1ta.webclient.cucosett.client.portlet.past.widget.TeamPanel;\nimport at.a1ta.webclient.cucosett.client.portlet.past.widget.TeamServicePanel;\n\npublic class TeamPortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"PaST TeamsOld\";\n\n  private static TeamPortlet _instance;\n\n  private TeamPanel teamPanel;\n\n  private TeamMemberPanel teamMemberPanel;\n\n  private TeamServicePanel teamServicePanel;\n\n  private FlexTable table = new FlexTable();\n\n  public static TeamPortlet create(PortletDefinition portletDefinition) {\n    if (_instance == null) {\n      _instance = new TeamPortlet(portletDefinition);\n    }\n    return _instance;\n  }\n\n  private TeamPortlet(PortletDefinition def) {\n    super(def);\n    teamPanel = new TeamPanel();\n    teamMemberPanel = new TeamMemberPanel();\n    teamServicePanel = new TeamServicePanel();\n\n    table.setWidth(\"100%\");\n    table.setWidget(0, 0, teamPanel.getPanel());\n    table.getFlexCellFormatter().setAlignment(0, 0, HasHorizontalAlignment.ALIGN_LEFT, HasVerticalAlignment.ALIGN_TOP);\n    table.getFlexCellFormatter().setWidth(0, 0, \"50%\");\n\n    final TabPanel panel = new TabPanel();\n    panel.setWidth(\"500px\");\n\n    panel.add(teamMemberPanel, \"<div class=\\\"tab-l\\\"><div class=\\\"tab-r\\\"><div class=\\\"tab-c\\\"><div class=\\\"tab-body\\\">\" + \"Teammitglieder\" + \"</div></div></div></div>\", true);\n    panel.add(teamServicePanel, \"<div class=\\\"tab-l\\\"><div class=\\\"tab-r\\\"><div class=\\\"tab-c\\\"><div class=\\\"tab-body\\\">\" + \"Dienstleistungen\" + \"</div></div></div></div>\", true);\n    table.getFlexCellFormatter().setAlignment(0, 1, HasHorizontalAlignment.ALIGN_LEFT, HasVerticalAlignment.ALIGN_TOP);\n    table.getFlexCellFormatter().setWidth(0, 1, \"50%\");\n\n    add(table);\n    add(HtmlUtils.createLink(\"pastExport?what=agents\", \"Export\", true));\n\n    panel.addSelectionHandler(teamMemberPanel);\n    panel.addSelectionHandler(teamServicePanel);\n    table.setWidget(0, 1, panel);\n\n    panel.selectTab(0);\n  }\n\n  @Override\n  public void init() {\n    showLoading();\n    teamPanel.init();\n    showContent();\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/UnknownAreasCodePortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/UnknownAreasCodePortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8712,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Anchor;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddUnknownAreaCodeEvent;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditUnknownAreasCodeDialog;\nimport at.a1ta.webclient.cucosett.client.portlet.CuCoSettBasePortlet;\n\npublic class UnknownAreasCodePortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"PaST Ung\u00fcltige Vorwahlen\";\n\n  private static UnknownAreasCodePortlet _instance = null;\n\n  private DataTable<UnknownAreaCode> table;\n\n  private WaitingWidget waitingWidget;\n\n  private EditUnknownAreasCodeDialog editUnknownAreasCodeDialog;\n\n  private Delegate<UnknownAreaCode> deleteRoleGroupDelegate;\n\n  public static UnknownAreasCodePortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new UnknownAreasCodePortlet(def);\n    }\n    return _instance;\n  }\n\n  private UnknownAreasCodePortlet(PortletDefinition def) {\n    super(def, false, false);\n\n    initTable();\n    initUI();\n\n    registerUpdateAreaCodeListener();\n    registerUpdateAreaCodesListener();\n\n    loadAreaCode();\n\n    showContent();\n  }\n\n  private void initUI() {\n    waitingWidget = new WaitingWidget();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel newAreaCode = createNewAreaCodeRow();\n    pnl.add(newAreaCode);\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    pnl.add(waitingWidget);\n    pnl.add(table);\n    add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    add(pnl);\n\n    deleteRoleGroupDelegate = new Delegate<UnknownAreaCode>() {\n      @Override\n      public void execute(final UnknownAreaCode areaCode) {\n        CommonServiceLocator.getUnknownAreaCodeServlet().deleteUnknownAreaCode(areaCode.getId(), new BaseAsyncCallback<RpcStatus>() {\n          @Override\n          public void onSuccess(RpcStatus result) {\n            if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeDeleteQuestion())) {\n              waitingWidget.setText(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeMessageDelete());\n              waitingWidget.show();\n              ModelData<UnknownAreaCode> m = new ModelData<UnknownAreaCode>(areaCode);\n              m.remove(areaCode);\n              waitingWidget.hide();\n              loadAreaCode();\n            }\n          }\n\n          @Override\n          public void onFailure(Throwable caught) {\n            waitingWidget.hide();\n            Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.messageboxDeleteError());\n            loadAreaCode();\n          }\n        });\n\n      }\n    };\n  }\n\n  private void initTable() {\n    table = new DataTable<UnknownAreaCode>(createColumns());\n    table.enablePaging(10);\n    table.setWidth(\"1000px\");\n    table.setVisible(false);\n  }\n\n  private void registerUpdateAreaCodesListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATEUNKNOWN_AREACODES, new PortletEventListener<AddUnknownAreaCodeEvent>() {\n\n      @Override\n      public void handleEvent(AddUnknownAreaCodeEvent be) {\n        init();\n        loadAreaCode();\n      }\n    });\n  }\n\n  public void loadAreaCode() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n\n    table.getStore().clear();\n\n    CommonServiceLocator.getUnknownAreaCodeServlet().getAllUnknownAreaCodes(new BaseAsyncCallback<ArrayList<UnknownAreaCode>>(this) {\n\n      @Override\n      public void onSuccess(ArrayList<UnknownAreaCode> result) {\n        ArrayList<ModelData<UnknownAreaCode>> results = new ArrayList<ModelData<UnknownAreaCode>>();\n\n        for (UnknownAreaCode code : result) {\n          ModelData<UnknownAreaCode> m = new ModelData<UnknownAreaCode>(code);\n          m.put(\"bean\", code);\n          m.put(\"areacode\", code.getAreaCode());\n          m.put(\"description\", code.getDescription());\n          results.add(m);\n        }\n\n        table.getStore().add(results);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  private void registerUpdateAreaCodeListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATEUNKNOWN_AREACODES, new PortletEventListener<AddUnknownAreaCodeEvent>() {\n\n      @Override\n      public void handleEvent(AddUnknownAreaCodeEvent event) {\n        UnknownAreaCode code = event.getCode();\n        ModelData<UnknownAreaCode> model = table.getStore().get(code);\n        if (model != null) {\n          model.setBean(code);\n        } else {\n          model = new ModelData<UnknownAreaCode>(code);\n          model.put(\"bean\", code);\n          model.put(\"areacode\", code.getAreaCode());\n          model.put(\"description\", code.getDescription());\n          table.getStore().add(model);\n        }\n      }\n    });\n  }\n\n  private HorizontalPanel createNewAreaCodeRow() {\n    HorizontalPanel newAreaCode = new HorizontalPanel();\n    newAreaCode.add(createNewAreaCodeButton());\n    return newAreaCode;\n  }\n\n  private Widget createNewAreaCodeButton() {\n    Button btnAreaCode = new Button(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeNew(), ButtonSize.Small);\n    editUnknownAreasCodeDialog = new EditUnknownAreasCodeDialog();\n\n    btnAreaCode.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        editUnknownAreasCodeDialog.show(null);\n      }\n    });\n    return btnAreaCode;\n  }\n\n  private ArrayList<Column<UnknownAreaCode>> createColumns() {\n    ArrayList<Column<UnknownAreaCode>> columns = new ArrayList<Column<UnknownAreaCode>>();\n    columns.add(new Column<UnknownAreaCode>(\"areacode\", AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeGridColumnName(), \"20%\", createAreaCodeCellRenderer()));\n    columns.add(new Column<UnknownAreaCode>(\"description\", AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeGridColumnDescription(), \"30%\"));\n    columns.add(new Column<UnknownAreaCode>(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeGridColumnDelete(), \"25%\", createDeleteCellRenderer()));\n    return columns;\n  }\n\n  private CellRenderer<UnknownAreaCode> createAreaCodeCellRenderer() {\n    return new CellRenderer<UnknownAreaCode>() {\n      @Override\n      public Widget render(final ModelData<UnknownAreaCode> model, String columnId, int rowId) {\n        Anchor link = new Anchor(model.getBean().getAreaCode());\n        link.addClickHandler(new ClickHandler() {\n          @Override\n          public void onClick(ClickEvent event) {\n            CommonServiceLocator.getUnknownAreaCodeServlet().getAllUnknownAreaCodes(new BaseAsyncCallback<ArrayList<UnknownAreaCode>>() {\n\n              @Override\n              public void onSuccess(ArrayList<UnknownAreaCode> result) {\n                editUnknownAreasCodeDialog.show(model.getBean());\n              }\n            });\n\n          }\n        });\n        return link;\n      }\n    };\n  }\n\n  private CellRenderer<UnknownAreaCode> createDeleteCellRenderer() {\n    return new CellRenderer<UnknownAreaCode>() {\n      @Override\n      public IsWidget render(final ModelData<UnknownAreaCode> model, String columnId, int rowId) {\n        return new ClickableIcon<UnknownAreaCode>(model.getBean(), deleteRoleGroupDelegate, UI.IMAGES.iconDelete(), null);\n      }\n    };\n  }\n\n  @Override\n  public void init() {}\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/GwtServicePortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/GwtServicePortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9796,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.dom.client.KeyCodes;\nimport com.google.gwt.event.dom.client.KeyPressEvent;\nimport com.google.gwt.event.dom.client.KeyPressHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Anchor;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.bite.ui.client.widget.InputBox;\nimport at.a1ta.bite.ui.client.widget.InputBox.InputBoxSize;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.framework.ui.client.util.HtmlUtils;\nimport at.a1ta.webclient.cucosett.client.dialog.GwtEditServiceDialog;\nimport at.a1ta.webclient.cucosett.client.portlet.CuCoSettBasePortlet;\n\npublic class GwtServicePortlet extends CuCoSettBasePortlet {\n\n  public static final String NAME = \"PaST Services\";\n\n  private static GwtServicePortlet _instance;\n\n  private DataTable<Service> table;\n  private InputBox userFilter;\n  private GwtEditServiceDialog gwtEditServiceDialog;\n  private WaitingWidget waitingWidget;\n  private Delegate<Service> deleteRoleGroupDelegate;\n\n  public static GwtServicePortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new GwtServicePortlet(def);\n    }\n    return _instance;\n  }\n\n  private GwtServicePortlet(PortletDefinition def) {\n    super(def, false, false);\n\n    initTable();\n    initUI();\n\n    registerUpdateServiceListener();\n\n    loadService();\n\n    showContent();\n\n    add(HtmlUtils.createLink(\"pastExport?what=services\", \"Export\", true));\n  }\n\n  private void initTable() {\n    table = new DataTable<Service>(createColumns());\n    table.enablePaging(10);\n    table.setWidth(\"1000px\");\n    table.setVisible(false);\n  }\n\n  private void initUI() {\n    waitingWidget = new WaitingWidget();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel newService = createNewServiceRow();\n    HorizontalPanel filters = createFilterRow();\n    pnl.add(filters);\n    pnl.add(newService);\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    pnl.add(waitingWidget);\n    pnl.add(table);\n    add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    add(pnl);\n    deleteRoleGroupDelegate = new Delegate<Service>() {\n      @Override\n      public void execute(final Service service) {\n        CommonServiceLocator.getServiceServlet().deleteService(service.getId(), new BaseAsyncCallback<RpcStatus>() {\n          @Override\n          public void onSuccess(RpcStatus result) {\n            if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.serviceDeleteQuestion())) {\n              ModelData<Service> m = new ModelData<Service>(service);\n              waitingWidget.setText(AdminUI.ADMINCOMMONTEXTPOOL.serviceMessageDelete());\n              waitingWidget.show();\n              m.remove(service);\n              waitingWidget.hide();\n              loadService();\n            }\n          }\n\n          @Override\n          public void onFailure(Throwable caught) {\n            waitingWidget.hide();\n            Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.messageboxDeleteError());\n            loadService();\n          }\n        });\n\n      }\n    };\n  }\n\n  private void registerUpdateServiceListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATE_SERVICES, new PortletEventListener<PortletEvent>() {\n\n      @Override\n      public void handleEvent(PortletEvent event) {\n        loadService();\n      }\n    });\n  }\n\n  private void loadDataInTable(ArrayList<Service> result) {\n\n    ArrayList<ModelData<Service>> results = new ArrayList<ModelData<Service>>();\n\n    for (Service service : result) {\n      ModelData<Service> m = new ModelData<Service>(service);\n      m.put(\"bean\", service);\n      m.put(\"name\", service.getName());\n      m.put(\"from\", service.getValidity().getValidFrom());\n      m.put(\"to\", service.getValidity().getValidUntil());\n      m.put(\"costs\", service.getCosts());\n      results.add(m);\n    }\n\n    table.getStore().add(results);\n    waitingWidget.setVisible(false);\n    table.setVisible(true);\n  }\n\n  public void loadService() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n\n    table.getStore().clear();\n\n    CommonServiceLocator.getServiceServlet().getAllServices(new BaseAsyncCallback<ArrayList<Service>>(this) {\n\n      @Override\n      public void onSuccess(ArrayList<Service> result) {\n        loadDataInTable(result);\n      }\n    });\n  }\n\n  private HorizontalPanel createNewServiceRow() {\n    HorizontalPanel newCredit = new HorizontalPanel();\n    newCredit.add(createNewServiceButton());\n    return newCredit;\n  }\n\n  private Widget createNewServiceButton() {\n    Button btnCreateSevice = new Button(AdminUI.ADMINCOMMONTEXTPOOL.serviceNew(), ButtonSize.Small);\n    gwtEditServiceDialog = new GwtEditServiceDialog();\n\n    btnCreateSevice.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        gwtEditServiceDialog.show(null);\n      }\n    });\n    return btnCreateSevice;\n  }\n\n  private ArrayList<Column<Service>> createColumns() {\n    ArrayList<Column<Service>> columns = new ArrayList<Column<Service>>();\n    columns.add(new Column<Service>(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnName(), \"30%\", createServiceCellRenderer()));\n    columns.add(new Column<Service>(\"from\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnFrom(), \"20%\"));\n    columns.add(new Column<Service>(\"to\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnTo(), \"20%\"));\n    columns.add(new Column<Service>(\"costs\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnCosts(), \"20%\"));\n    columns.add(new Column<Service>(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.serviceGridColumnDelete(), \"10%\", createDeleteCellRenderer()));\n    return columns;\n  }\n\n  private CellRenderer<Service> createServiceCellRenderer() {\n    return new CellRenderer<Service>() {\n\n      @Override\n      public IsWidget render(final ModelData<Service> model, String columnId, int rowId) {\n        Anchor link = new Anchor(model.getBean().getName());\n        link.addClickHandler(new ClickHandler() {\n          @Override\n          public void onClick(ClickEvent event) {\n            CommonServiceLocator.getServiceServlet().getAllServices(new BaseAsyncCallback<ArrayList<Service>>() {\n\n              @Override\n              public void onSuccess(ArrayList<Service> result) {\n                gwtEditServiceDialog.show(model.getBean());\n              }\n            });\n\n          }\n        });\n        return link;\n      }\n    };\n  }\n\n  private CellRenderer<Service> createDeleteCellRenderer() {\n    return new CellRenderer<Service>() {\n      @Override\n      public IsWidget render(final ModelData<Service> model, String columnId, int rowId) {\n        return new ClickableIcon<Service>(model.getBean(), deleteRoleGroupDelegate, UI.IMAGES.iconDelete(), null);\n      }\n    };\n  }\n\n  public void loadUsers() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n    table.getStore().clear();\n    String service = '%' + userFilter.getValue() + '%';\n    CommonServiceLocator.getServiceServlet().searchService(service, new BaseAsyncCallback<ArrayList<Service>>() {\n      @Override\n      public void onSuccess(ArrayList<Service> result) {\n        loadDataInTable(result);\n      }\n\n    });\n  }\n\n  private HorizontalPanel createFilterRow() {\n    HorizontalPanel filters = new HorizontalPanel();\n    filters.add(new HTML(\"<div class='\" + UI.STYLES.bite_widthPlaceHolder() + \"'/>\"));\n    filters.add(createUserSearch());\n    filters.add(createSearchButton());\n    filters.add(new HTML(\"<hr/>\"));\n    return filters;\n  }\n\n  private Widget createSearchButton() {\n\n    Button btnSearch = new Button(\"Suchen\", ButtonSize.Small);\n    btnSearch.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        loadUsers();\n      }\n    });\n    return btnSearch;\n  }\n\n  private Widget createUserSearch() {\n    userFilter = new InputBox(InputBoxSize.Medium);\n    userFilter.addKeyPressHandler(createKeyPressHandler());\n    return userFilter;\n  }\n\n  private KeyPressHandler createKeyPressHandler() {\n    return new KeyPressHandler() {\n      @Override\n      public void onKeyPress(KeyPressEvent event) {\n        if (event.getNativeEvent().getKeyCode() == KeyCodes.KEY_ENTER) {\n          loadUsers();\n        }\n      }\n    };\n  }\n\n  @Override\n  public void init() {\n    // Do Nothing\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/UnknownAreaCodePortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/UnknownAreaCodePortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7158,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past;\n\nimport java.util.ArrayList;\n\nimport com.extjs.gxt.ui.client.data.BaseListLoadResult;\nimport com.extjs.gxt.ui.client.data.BaseListLoader;\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.DataReader;\nimport com.extjs.gxt.ui.client.data.ListLoadResult;\nimport com.extjs.gxt.ui.client.data.RpcProxy;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.ToolBar;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddUnknownAreaCodeEvent;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.service.CommonServiceLocator;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\nimport at.a1ta.framework.gxt.ui.GridContainer;\nimport at.a1ta.framework.gxt.ui.LinkCellRenderer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditUnknownAreaCodeDialog;\nimport at.a1ta.webclient.cucosett.client.portlet.CuCoSettBasePortlet;\n\npublic class UnknownAreaCodePortlet extends CuCoSettBasePortlet implements Listener<BaseEvent>, ClickHandler {\n\n  public static final String NAME = \"PaST Ung\u00fcltige Vorwahlen Old\";\n\n  private static UnknownAreaCodePortlet _instance = null;\n\n  private GridContainer<ListStore<BaseModelData>, BaseModelData> gridContainer;\n\n  public static UnknownAreaCodePortlet create(PortletDefinition def) {\n    if (_instance == null) {\n      _instance = new UnknownAreaCodePortlet(def);\n    }\n    return _instance;\n  }\n\n  private UnknownAreaCodePortlet(PortletDefinition def) {\n    super(def, false, false);\n\n    add(renderGrid());\n  }\n\n  private Widget renderGrid() {\n\n    Button newBtn = new Button(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeNew());\n    newBtn.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      public void componentSelected(ButtonEvent ce) {\n        EditUnknownAreaCodeDialog d = EditUnknownAreaCodeDialog.getInstance();\n        d.show();\n      }\n    });\n\n    ToolBar tb = new ToolBar();\n    tb.add(newBtn);\n\n    ListStore<BaseModelData> store = new ListStore<BaseModelData>();\n\n    ArrayList<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"areacode\", AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeGridColumnName(), 70);\n    config.setRenderer(new LinkCellRenderer(this));\n    configs.add(config);\n\n    config = new ColumnConfig(\"description\", AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeGridColumnDescription(), 300);\n    configs.add(config);\n\n    config = new ColumnConfig(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeGridColumnDelete(), 120);\n    config.setRenderer(new ImageRenderer(ImageRenderer.DELETE, this));\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    gridContainer = new GridContainer<ListStore<BaseModelData>, BaseModelData>(store, cm);\n    gridContainer.setTopComponent(tb);\n    gridContainer.getGrid().setAutoExpandColumn(\"description\");\n\n    PortletEventManager.addListener(CuCoEventType.UPDATEUNKNOWN_AREACODES, new PortletEventListener<AddUnknownAreaCodeEvent>() {\n\n      @Override\n      public void handleEvent(AddUnknownAreaCodeEvent be) {\n        gridContainer.getGrid().getStore().getLoader().load();\n      }\n    });\n    return gridContainer;\n  }\n\n  @Override\n  public void init() {\n    gridContainer.getGrid().getStore().removeAll();\n\n    RpcProxy<ArrayList<UnknownAreaCode>> proxy = new RpcProxy<ArrayList<UnknownAreaCode>>() {\n\n      @Override\n      protected void load(Object loadConfig, AsyncCallback<ArrayList<UnknownAreaCode>> callback) {\n        CommonServiceLocator.getUnknownAreaCodeServlet().getAllUnknownAreaCodes(callback);\n      }\n    };\n\n    BaseListLoader<ListLoadResult<BaseModelData>> loader = new BaseListLoader<ListLoadResult<BaseModelData>>(proxy, new DataReader<ListLoadResult<BaseModelData>>() {\n\n      @Override\n      @SuppressWarnings(\"unchecked\")\n      public ListLoadResult<BaseModelData> read(Object loadConfig, Object data) {\n        ArrayList<BaseModelData> results = new ArrayList<BaseModelData>();\n\n        ArrayList<UnknownAreaCode> list = (ArrayList<UnknownAreaCode>) data;\n\n        for (UnknownAreaCode code : list) {\n          BaseModelData m = new BaseModelData();\n          m.set(\"bean\", code);\n          m.set(\"areacode\", code.getAreaCode());\n          m.set(\"description\", code.getDescription());\n          results.add(m);\n        }\n        return new BaseListLoadResult<BaseModelData>(results);\n      }\n    });\n    ListStore<BaseModelData> store = new ListStore<BaseModelData>(loader);\n    gridContainer.reconfigure(store);\n    loader.load();\n    showContent();\n  }\n\n  @Override\n  public void handleEvent(BaseEvent be) {\n    BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeDeleteQuestion())) {\n      UnknownAreaCode code = md.get(\"bean\");\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeMessageDelete(),\n          AdminUI.ADMINCOMMONTEXTPOOL.messageboxDelete());\n      wait.show();\n\n      CommonServiceLocator.getUnknownAreaCodeServlet().deleteUnknownAreaCode(code.getId(), new BaseAsyncCallback<RpcStatus>() {\n\n        @Override\n        public void onSuccess(RpcStatus result) {\n          gridContainer.getGrid().getStore().getLoader().load();\n          wait.close();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.unknownareacodeLabel(), AdminUI.ADMINCOMMONTEXTPOOL.messageboxDeleteError(), null);\n        }\n\n      });\n    }\n  }\n\n  @Override\n  public void onClick(ClickEvent event) {\n    BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    EditUnknownAreaCodeDialog d = EditUnknownAreaCodeDialog.getInstance((UnknownAreaCode) md.get(\"bean\"));\n    d.show();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamPanel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamPanel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7521,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past.widget;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.LoadConfig;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionChangedEvent;\nimport com.extjs.gxt.ui.client.event.SelectionChangedListener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.ToolBar;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.bite.ui.client.util.DateUtils;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.cuco.ui.common.shared.AdminAuthorityHelper;\nimport at.a1ta.framework.gxt.ui.FilterablePagingMemoryProxy;\nimport at.a1ta.framework.gxt.ui.LinkCellRenderer;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditTeamDialog;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class TeamPanel implements Listener<BaseEvent>, ClickHandler {\n\n  private PagingGridContainer<ListStore<BaseModelData>, BaseModelData> gridContainer;\n\n  private Widget panel = null;\n\n  private FilterablePagingMemoryProxy proxy;\n\n  public TeamPanel() {\n    panel = renderTeamGrid();\n  }\n\n  public Widget getPanel() {\n    return panel;\n  }\n\n  private Widget renderTeamGrid() {\n    Button newBtn = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamAdd());\n    newBtn.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      public void componentSelected(ButtonEvent ce) {\n        EditTeamDialog d = EditTeamDialog.getInstance();\n        d.show();\n      }\n    });\n\n    ToolBar tb = new ToolBar();\n    tb.add(newBtn);\n\n    boolean teamCRUD = AdminAuthorityHelper.canCRUDTeam(UserManager.getUserInfo());\n    if (!teamCRUD) {\n      newBtn.setVisible(false);\n    }\n\n    ListStore<BaseModelData> store = new ListStore<BaseModelData>();\n\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamName(), 100);\n    if (teamCRUD) {\n      config.setRenderer(new LinkCellRenderer(this));\n    }\n    configs.add(config);\n\n    config = new ColumnConfig(\"description\", AdminUI.ADMINCOMMONTEXTPOOL.teamDesc(), 100);\n    configs.add(config);\n\n    config = new ColumnConfig(\"creator\", AdminUI.ADMINCOMMONTEXTPOOL.teamCreation(), 100);\n    configs.add(config);\n\n    config = new ColumnConfig(\"createDate\", AdminUI.ADMINCOMMONTEXTPOOL.teamCreateDate(), 100);\n    config.setDateTimeFormat(DateUtils.getDefaultDateFormat());\n    configs.add(config);\n\n    config = new ColumnConfig(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.teamDelete(), 80);\n    if (teamCRUD) {\n      config.setRenderer(new ImageRenderer(ImageRenderer.DELETE, this));\n    }\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    gridContainer = new PagingGridContainer<ListStore<BaseModelData>, BaseModelData>(store, cm, 10);\n    gridContainer.setTopComponent(tb);\n\n    gridContainer.getGrid().setAutoExpandColumn(\"delete\");\n\n    gridContainer.getGrid().getSelectionModel().addSelectionChangedListener(new SelectionChangedListener<BaseModelData>() {\n\n      @Override\n      public void selectionChanged(SelectionChangedEvent<BaseModelData> se) {\n        Team team = null;\n        if (se.getSelectedItem() != null) {\n          team = (Team) se.getSelectedItem().get(\"bean\");\n        }\n        GenericEvent<Void> event = new GenericEvent<Void>(team, CuCoEventType.ACTIVATE_TEAM);\n        PortletEventManager.fireEvent(event);\n      }\n    });\n\n    PortletEventManager.addListener(CuCoEventType.UPDATE_TEAMS, new PortletEventListener<PortletEvent>() {\n\n      @Override\n      public void handleEvent(PortletEvent be) {\n        init();\n      }\n    });\n    return gridContainer;\n  }\n\n  public void init() {\n    gridContainer.getGrid().getStore().removeAll();\n\n    SettingsServiceLocator.getTeamServlet().getAllTeams(new BaseAsyncCallback<ArrayList<Team>>() {\n\n      @Override\n      public void onSuccess(ArrayList<Team> result) {\n        ArrayList<BaseModelData> results = new ArrayList<BaseModelData>();\n\n        for (Team team : result) {\n          BaseModelData model = new BaseModelData();\n          model.set(\"bean\", team);\n          model.set(\"id\", team.getId());\n          model.set(\"name\", team.getName());\n          model.set(\"description\", team.getDescription());\n          model.set(\"creator\", team.getCreator().getUsername());\n          model.set(\"createDate\", team.getCreateDate());\n          results.add(model);\n        }\n        proxy = new FilterablePagingMemoryProxy(results);\n        // loader\n        BasePagingLoader<PagingLoadResult<LoadConfig>> gridloader = new BasePagingLoader<PagingLoadResult<LoadConfig>>(proxy);\n        gridloader.setRemoteSort(true);\n        gridContainer.getToolbar().bind(gridloader);\n\n        ListStore<BaseModelData> store = new ListStore<BaseModelData>(gridloader);\n        gridContainer.reconfigure(store);\n        gridloader.load();\n      }\n    });\n\n  }\n\n  @Override\n  public void handleEvent(BaseEvent be) {\n    final BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteTeamQuestion())) {\n      Team team = md.get(\"bean\");\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.teamTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamDelete());\n      wait.show();\n\n      SettingsServiceLocator.getTeamServlet().deleteTeam(team.getId(), new BaseAsyncCallback<RpcStatus>() {\n\n        @Override\n        public void onSuccess(RpcStatus result) {\n          init();\n          wait.close();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.teamTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteError(), null);\n        }\n\n      });\n    }\n\n  }\n\n  @Override\n  public void onClick(ClickEvent event) {\n    BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    EditTeamDialog d = EditTeamDialog.getInstance((Team) md.get(\"bean\"));\n    d.show();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamMemberPanel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamMemberPanel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8328,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past.widget;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.LoadConfig;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.ToolBar;\nimport com.google.gwt.event.logical.shared.SelectionEvent;\nimport com.google.gwt.event.logical.shared.SelectionHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.SimplePanel;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddTeamMembersEvent;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.cuco.ui.common.shared.AdminAuthorityHelper;\nimport at.a1ta.framework.gxt.ui.FilterablePagingMemoryProxy;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.GwtSelectTeamMemberDialog;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class TeamMemberPanel extends SimplePanel implements SelectionHandler<Integer>, Listener<BaseEvent> {\n\n  private PagingGridContainer<ListStore<BaseModelData>, BaseModelData> gridContainer;\n  private Team team = null;\n  private Button addBtn;\n  private FilterablePagingMemoryProxy proxy;\n  private boolean rendered;\n\n  public TeamMemberPanel() {\n    this.setSize(\"100%\", \"100%\");\n  }\n\n  @Override\n  public void onSelection(SelectionEvent<Integer> event) {\n    if (!rendered && event.getSelectedItem().intValue() == 0) {\n      add(renderTeamMemberGrid());\n    }\n  }\n\n  public PagingGridContainer<ListStore<BaseModelData>, BaseModelData> getPanel() {\n    return gridContainer;\n  }\n\n  private PagingGridContainer<ListStore<BaseModelData>, BaseModelData> renderTeamMemberGrid() {\n    rendered = true;\n    addBtn = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamAddMember());\n    addBtn.addSelectionListener(new SelectionListener<ButtonEvent>() {\n      @Override\n      public void componentSelected(ButtonEvent ce) {\n        GwtSelectTeamMemberDialog d = GwtSelectTeamMemberDialog.getInstance();\n        d.init();\n        d.show();\n      }\n    });\n    addBtn.disable();\n\n    boolean teamMember = AdminAuthorityHelper.canAddMember(UserManager.getUserInfo());\n\n    ToolBar tb = new ToolBar();\n    tb.add(addBtn);\n    if (!teamMember) {\n      addBtn.setVisible(false);\n    }\n\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamName(), 100);\n    configs.add(config);\n\n    config = new ColumnConfig(\"user\", AdminUI.ADMINCOMMONTEXTPOOL.teamNtAccount(), 80);\n    configs.add(config);\n\n    config = new ColumnConfig(\"orgunit\", AdminUI.ADMINCOMMONTEXTPOOL.teamOe(), 40);\n    configs.add(config);\n\n    config = new ColumnConfig(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.teamDelete(), 40);\n    if (teamMember) {\n      config.setRenderer(new ImageRenderer(ImageRenderer.DELETE, this));\n    }\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    gridContainer = new PagingGridContainer<ListStore<BaseModelData>, BaseModelData>(new ListStore<BaseModelData>(), cm, 10);\n    gridContainer.setTopComponent(tb);\n\n    gridContainer.getGrid().setAutoExpandColumn(\"delete\");\n\n    PortletEventManager.addListener(CuCoEventType.ACTIVATE_TEAM, new PortletEventListener<PortletEvent>() {\n      @Override\n      public void handleEvent(PortletEvent be) {\n        team = (Team) be.getSource();\n        init();\n      }\n    });\n\n    PortletEventManager.addListener(CuCoEventType.ADDTEAM_MEMBERS, new PortletEventListener<AddTeamMembersEvent>() {\n      @Override\n      public void handleEvent(final AddTeamMembersEvent be) {\n        ArrayList<Long> userIds = new ArrayList<Long>();\n        for (BaseModelData model : be.getTeamMembers()) {\n          BiteUser user = model.get(\"bean\");\n          userIds.add(user.getId());\n        }\n\n        SettingsServiceLocator.getTeamServlet().addTeamMembers(team.getId(), userIds, new BaseAsyncCallback<RpcStatus>() {\n          @Override\n          @SuppressWarnings(\"unchecked\")\n          public void onSuccess(RpcStatus result) {\n            ((ArrayList<BaseModelData>) proxy.getData()).addAll(be.getTeamMembers());\n            gridContainer.getGrid().getStore().getLoader().load();\n            for (BaseModelData model : be.getTeamMembers()) {\n              BiteUser user = model.get(\"bean\");\n              team.getMembers().add(user);\n            }\n          }\n\n          @Override\n          public void onFailure(Throwable exception) {\n            MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.teamTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamAddMemberError(), null);\n          }\n        });\n      }\n    });\n    return gridContainer;\n  }\n\n  private void init() {\n    gridContainer.getGrid().getStore().removeAll();\n\n    if (team == null) {\n      addBtn.disable();\n      return;\n    }\n\n    SettingsServiceLocator.getTeamServlet().getTeam(team.getId(), new BaseAsyncCallback<Team>() {\n      @Override\n      public void onSuccess(Team result) {\n        addBtn.enable();\n\n        List<BaseModelData> results = new ArrayList<BaseModelData>();\n\n        List<BiteUser> list = result.getMembers();\n        for (BiteUser user : list) {\n          BaseModelData model = new BaseModelData();\n          model.set(\"bean\", user);\n          model.set(\"name\", user.getName());\n          model.set(\"user\", user.getUsername());\n          model.set(\"orgunit\", user.getManagementLevel1OrgUnitShort());\n          results.add(model);\n        }\n\n        proxy = new FilterablePagingMemoryProxy(results);\n        // loader\n        BasePagingLoader<PagingLoadResult<LoadConfig>> gridloader = new BasePagingLoader<PagingLoadResult<LoadConfig>>(proxy);\n        gridloader.setRemoteSort(true);\n        gridContainer.getToolbar().bind(gridloader);\n\n        ListStore<BaseModelData> store = new ListStore<BaseModelData>(gridloader);\n        gridContainer.reconfigure(store);\n        gridloader.load();\n      }\n    });\n  }\n\n  @Override\n  public void handleEvent(BaseEvent be) {\n    final BaseModelData md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteMemberQuestion())) {\n      final UserInfo info = md.get(\"bean\");\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.teamTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteTeammember(), AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteText());\n      wait.show();\n\n      SettingsServiceLocator.getTeamServlet().removeTeamMember(team.getId(), info.getId(), new BaseAsyncCallback<RpcStatus>() {\n        @Override\n        @SuppressWarnings(\"unchecked\")\n        public void onSuccess(RpcStatus result) {\n          ((List<BaseModelData>) proxy.getData()).remove(md);\n          team.getMembers().remove(info);\n          gridContainer.getGrid().getStore().getLoader().load();\n          wait.close();\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.teamTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteError(), null);\n        }\n      });\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamServicePanel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamServicePanel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7779,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past.widget;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.Style.HorizontalAlignment;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.LoadConfig;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.MessageBox;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnConfig;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.ToolBar;\nimport com.google.gwt.event.logical.shared.SelectionEvent;\nimport com.google.gwt.event.logical.shared.SelectionHandler;\nimport com.google.gwt.i18n.client.NumberFormat;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.SimplePanel;\n\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.dto.ServiceModel;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddServicesEvent;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.event.RemoveServicesEvent;\nimport at.a1ta.cuco.admin.ui.common.client.ui.ImageRenderer;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.cuco.ui.common.shared.AdminAuthorityHelper;\nimport at.a1ta.framework.gxt.ui.FilterablePagingMemoryProxy;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.SelectServiceDialog;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class TeamServicePanel extends SimplePanel implements SelectionHandler<Integer>, Listener<BaseEvent> {\n\n  private PagingGridContainer<ListStore<ServiceModel>, ServiceModel> gridContainer;\n\n  private Team team = null;\n\n  private Button addBtn;\n\n  private FilterablePagingMemoryProxy proxy;\n\n  private boolean rendered;\n\n  public TeamServicePanel() {\n    this.setSize(\"100%\", \"100%\");\n\n    PortletEventManager.addListener(CuCoEventType.ACTIVATE_TEAM, new PortletEventListener<PortletEvent>() {\n\n      @Override\n      public void handleEvent(PortletEvent be) {\n        team = (Team) be.getSource();\n        if (rendered) {\n          init();\n        }\n      }\n    });\n  }\n\n  @Override\n  public void onSelection(SelectionEvent<Integer> event) {\n    if (!rendered && event.getSelectedItem().intValue() == 1) {\n      add(renderTeamMemberGrid());\n      init();\n    }\n  }\n\n  public PagingGridContainer<ListStore<ServiceModel>, ServiceModel> getPanel() {\n    return gridContainer;\n  }\n\n  private PagingGridContainer<ListStore<ServiceModel>, ServiceModel> renderTeamMemberGrid() {\n    rendered = true;\n    addBtn = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamAddService());\n    addBtn.addSelectionListener(new SelectionListener<ButtonEvent>() {\n\n      @Override\n      public void componentSelected(ButtonEvent ce) {\n        SelectServiceDialog d = SelectServiceDialog.getInstance(team);\n        d.init();\n        d.show();\n      }\n    });\n    addBtn.disable();\n\n    ToolBar tb = new ToolBar();\n    tb.add(addBtn);\n\n    boolean service = AdminAuthorityHelper.canAddService(UserManager.getUserInfo());\n\n    if (!service) {\n      addBtn.setVisible(false);\n    }\n\n    List<ColumnConfig> configs = new ArrayList<ColumnConfig>();\n\n    ColumnConfig config = new ColumnConfig(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamService(), 200);\n    configs.add(config);\n\n    config = new ColumnConfig(\"costs\", AdminUI.ADMINCOMMONTEXTPOOL.teamCosts(), 100);\n    config.setNumberFormat(NumberFormat.getCurrencyFormat());\n    config.setAlignment(HorizontalAlignment.RIGHT);\n    configs.add(config);\n\n    config = new ColumnConfig(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.teamDelete(), 40);\n    if (service) {\n      config.setRenderer(new ImageRenderer(ImageRenderer.DELETE, this));\n    }\n    configs.add(config);\n\n    ColumnModel cm = new ColumnModel(configs);\n\n    gridContainer = new PagingGridContainer<ListStore<ServiceModel>, ServiceModel>(new ListStore<ServiceModel>(), cm, 10);\n    gridContainer.setTopComponent(tb);\n    gridContainer.getGrid().setAutoExpandColumn(\"delete\");\n\n    PortletEventManager.addListener(CuCoEventType.ADD_SERVICES, new PortletEventListener<AddServicesEvent>() {\n\n      @Override\n      public void handleEvent(final AddServicesEvent be) {\n        ((ArrayList<ServiceModel>) proxy.getData()).addAll(be.getServices());\n        gridContainer.getGrid().getStore().getLoader().load();\n        for (ServiceModel model : be.getServices()) {\n          team.getServices().add(model.getBean());\n        }\n      }\n    });\n\n    PortletEventManager.addListener(CuCoEventType.REMOVE_SERVICES, new PortletEventListener<RemoveServicesEvent>() {\n\n      @Override\n      public void handleEvent(RemoveServicesEvent event) {\n        ((List<ServiceModel>) proxy.getData()).remove(new ServiceModel(event.getService()));\n        team.getServices().remove(event.getService());\n        gridContainer.getGrid().getStore().getLoader().load();\n      }\n    });\n\n    return gridContainer;\n  }\n\n  private void init() {\n    gridContainer.getGrid().getStore().removeAll();\n    if (team == null) {\n      addBtn.disable();\n      return;\n    }\n\n    addBtn.enable();\n\n    List<ServiceModel> results = new ArrayList<ServiceModel>();\n\n    for (Service service : team.getServices()) {\n      ServiceModel model = new ServiceModel(service);\n      results.add(model);\n    }\n\n    proxy = new FilterablePagingMemoryProxy(results);\n    // loader\n    BasePagingLoader<PagingLoadResult<LoadConfig>> gridloader = new BasePagingLoader<PagingLoadResult<LoadConfig>>(proxy);\n    gridloader.setRemoteSort(true);\n    gridContainer.getToolbar().bind(gridloader);\n\n    ListStore<ServiceModel> store = new ListStore<ServiceModel>(gridloader);\n    gridContainer.reconfigure(store);\n    gridloader.load();\n  }\n\n  @Override\n  public void handleEvent(BaseEvent be) {\n    final ServiceModel md = gridContainer.getGrid().getSelectionModel().getSelectedItem();\n\n    if (md == null) {\n      return;\n    }\n\n    if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteServiceQuestion())) {\n      final Service service = md.getBean();\n\n      final MessageBox wait = MessageBox.wait(AdminUI.ADMINCOMMONTEXTPOOL.teamTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteService(), AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteText());\n      wait.show();\n\n      SettingsServiceLocator.getTeamServlet().removeService(team.getId(), service.getId(), new BaseAsyncCallback<RpcStatus>() {\n\n        @Override\n        @SuppressWarnings(\"unchecked\")\n        public void onSuccess(RpcStatus result) {\n          ((List<ServiceModel>) proxy.getData()).remove(md);\n          team.getServices().remove(service);\n          gridContainer.getGrid().getStore().getLoader().load();\n          wait.close();\n\n          PortletEventManager.fireEvent(new RemoveServicesEvent(service));\n        }\n\n        @Override\n        public void onFailure(Throwable exception) {\n          wait.close();\n          MessageBox.info(AdminUI.ADMINCOMMONTEXTPOOL.teamTeam(), AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteError(), null);\n        }\n\n      });\n    }\n\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamMemberManagementPanel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamMemberManagementPanel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9046,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past.widget;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.logical.shared.SelectionEvent;\nimport com.google.gwt.event.logical.shared.SelectionHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.SimplePanel;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.event.GwtAddTeamMembersEvent;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.cuco.ui.common.shared.AdminAuthorityHelper;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.GwtSelectTeamMemberDialog;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class TeamMemberManagementPanel extends SimplePanel implements SelectionHandler<Integer> {\n\n  private DataTable<BiteUser> table;\n\n  private Widget panel = null;\n\n  private Team team = null;\n\n  private Button btnMember;\n\n  private WaitingWidget waitingWidget;\n\n  private Delegate<BiteUser> deleteMemberDelegate;\n\n  private boolean rendered;\n  private GwtSelectTeamMemberDialog obj;\n\n  public TeamMemberManagementPanel() {\n    this.setSize(\"100%\", \"100%\");\n    // panel = initUI();\n  }\n\n  @Override\n  public void onSelection(SelectionEvent<Integer> event) {\n    if (!rendered && event.getSelectedItem().intValue() == 0) {\n      add(initUI());\n    }\n  }\n\n  public Widget getPanel() {\n    return panel;\n  }\n\n  public Widget initUI() {\n    initTable();\n    rendered = true;\n    waitingWidget = new WaitingWidget();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel newMember = createNewMemberRow();\n    pnl.add(newMember);\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    pnl.add(waitingWidget);\n    pnl.add(table);\n    deleteMemberDelegate = new Delegate<BiteUser>() {\n\n      @Override\n      public void execute(final BiteUser BiteUser) {\n        final ModelData<BiteUser> m = new ModelData<BiteUser>(BiteUser);\n        final BiteUser info = m.getBean();\n        SettingsServiceLocator.getTeamServlet().removeTeamMember(team.getId(), info.getId(), new BaseAsyncCallback<RpcStatus>() {\n          @Override\n          public void onSuccess(RpcStatus result) {\n            if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteMemberQuestion())) {\n              waitingWidget.setText(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteTeammember());\n              waitingWidget.show();\n              team.getMembers().remove(info);\n              waitingWidget.hide();\n              loadMember();\n            }\n          }\n\n          @Override\n          public void onFailure(Throwable caught) {\n            waitingWidget.hide();\n            Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteError());\n          }\n        });\n\n      }\n    };\n\n    registerUpdateMemberListener();\n    registerUpdateMembersListener();\n    loadMember();\n    return pnl;\n  }\n\n  public void initTable() {\n    table = new DataTable<BiteUser>(createColumns());\n    table.enablePaging(10);\n    table.setWidth(\"500px\");\n    table.setVisible(false);\n  }\n\n  private void registerUpdateMembersListener() {\n    PortletEventManager.addListener(CuCoEventType.ACTIVATE_TEAM, new PortletEventListener<PortletEvent>() {\n      @Override\n      public void handleEvent(PortletEvent be) {\n        team = (Team) be.getSource();\n        loadMember();\n      }\n    });\n  }\n\n  public void loadMember() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n\n    table.getStore().clear();\n\n    if (team == null) {\n      btnMember.disable();\n      waitingWidget.setVisible(false);\n      table.setVisible(true);\n      return;\n    }\n\n    SettingsServiceLocator.getTeamServlet().getTeam(team.getId(), new BaseAsyncCallback<Team>() {\n      @Override\n      public void onSuccess(Team result) {\n        btnMember.enable();\n\n        ArrayList<ModelData<BiteUser>> results = new ArrayList<ModelData<BiteUser>>();\n\n        List<BiteUser> list = result.getMembers();\n        for (BiteUser user : list) {\n          ModelData<BiteUser> m = new ModelData<BiteUser>(user);\n          m.put(\"bean\", user);\n          m.put(\"name\", user.getName());\n          m.put(\"user\", user.getUsername());\n          m.put(\"orgunit\", user.getManagementLevel1OrgUnitShort());\n          results.add(m);\n        }\n        table.getStore().add(results);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  private void registerUpdateMemberListener() {\n\n    PortletEventManager.addListener(CuCoEventType.ADDTEAM_MEMBERS, new PortletEventListener<GwtAddTeamMembersEvent>() {\n      @Override\n      public void handleEvent(final GwtAddTeamMembersEvent be) {\n        ArrayList<Long> userIds = new ArrayList<Long>();\n        for (ModelData<BiteUser> model : be.getTeamMembers()) {\n          BiteUser user = model.getBean();\n          userIds.add(user.getId());\n        }\n\n        SettingsServiceLocator.getTeamServlet().addTeamMembers(team.getId(), userIds, new BaseAsyncCallback<RpcStatus>() {\n          @Override\n          @SuppressWarnings(\"unchecked\")\n          public void onSuccess(RpcStatus result) {\n            ArrayList<ModelData<BiteUser>> results = new ArrayList<ModelData<BiteUser>>();\n            ArrayList<BiteUser> users = new ArrayList<BiteUser>();\n            for (ModelData<BiteUser> model : be.getTeamMembers()) {\n              team.getMembers().add(model.getBean());\n              users.add(model.getBean());\n            }\n            for (BiteUser user : users) {\n              ModelData<BiteUser> m = new ModelData<BiteUser>(user);\n              m.put(\"bean\", user);\n              m.put(\"name\", user.getName());\n              m.put(\"user\", user.getUsername());\n              m.put(\"orgunit\", user.getManagementLevel1OrgUnitShort());\n              results.add(m);\n            }\n            table.getStore().add(results);\n          }\n\n          @Override\n          public void onFailure(Throwable exception) {\n            Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.teamAddMemberError());\n          }\n        });\n      }\n    });\n  }\n\n  private HorizontalPanel createNewMemberRow() {\n    HorizontalPanel newMember = new HorizontalPanel();\n    newMember.add(createMemberButton());\n    return newMember;\n  }\n\n  private Widget createMemberButton() {\n    rendered = true;\n    btnMember = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamAddMember(), ButtonSize.Small);\n    obj = new GwtSelectTeamMemberDialog();\n    btnMember.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        obj.init();\n        obj.show();\n\n      }\n    });\n    btnMember.disable();\n    if (!AdminAuthorityHelper.canAddMember(UserManager.getUserInfo())) {\n      btnMember.setVisible(false);\n    }\n    return btnMember;\n  }\n\n  private ArrayList<Column<BiteUser>> createColumns() {\n    ArrayList<Column<BiteUser>> columns = new ArrayList<Column<BiteUser>>();\n    columns.add(new Column<BiteUser>(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamName(), \"40%\"));\n    columns.add(new Column<BiteUser>(\"user\", AdminUI.ADMINCOMMONTEXTPOOL.teamNtAccount(), \"30%\"));\n    columns.add(new Column<BiteUser>(\"orgunit\", AdminUI.ADMINCOMMONTEXTPOOL.teamOe(), \"20%\"));\n    columns.add(new Column<BiteUser>(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.teamDelete(), \"10%\", createDeleteCellRenderer()));\n    return columns;\n  }\n\n  private CellRenderer<BiteUser> createDeleteCellRenderer() {\n    return new CellRenderer<BiteUser>() {\n      @Override\n      public IsWidget render(final ModelData<BiteUser> model, String columnId, int rowId) {\n        return new ClickableIcon<BiteUser>(model.getBean(), deleteMemberDelegate, UI.IMAGES.iconDelete(), null);\n      }\n    };\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamServiceManagementPanel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamServiceManagementPanel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7802,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past.widget;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.event.logical.shared.SelectionEvent;\nimport com.google.gwt.event.logical.shared.SelectionHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.SimplePanel;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.handler.UserManager;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.dto.ServiceModel;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddServicesEvent;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.admin.ui.common.client.event.RemoveServicesEvent;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.cuco.ui.common.shared.AdminAuthorityHelper;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.GwtSelectServiceDialog;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class TeamServiceManagementPanel extends SimplePanel implements SelectionHandler<Integer> {\n\n  private DataTable<Service> table;\n\n  private Widget panel = null;\n\n  private Team team = null;\n\n  private Button btnService;\n\n  private WaitingWidget waitingWidget;\n\n  private Delegate<Service> deleteServiceDelegate;\n\n  private boolean rendered;\n\n  public TeamServiceManagementPanel() {\n    this.setSize(\"100%\", \"100%\");\n  }\n\n  @Override\n  public void onSelection(SelectionEvent<Integer> event) {\n    if (!rendered && event.getSelectedItem().intValue() == 1) {\n      add(initUI());\n    }\n  }\n\n  public Widget getPanel() {\n    return panel;\n  }\n\n  public Widget initUI() {\n    initTable();\n    rendered = true;\n    waitingWidget = new WaitingWidget();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel newService = createNewServiceRow();\n    pnl.add(newService);\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    pnl.add(waitingWidget);\n    pnl.add(table);\n    deleteServiceDelegate = new Delegate<Service>() {\n\n      @Override\n      public void execute(final Service service) {\n        final ModelData<Service> m = new ModelData<Service>(service);\n        final Service svc = m.getBean();\n        if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteServiceQuestion())) {\n          waitingWidget.setText(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteService());\n          waitingWidget.show();\n          SettingsServiceLocator.getTeamServlet().removeService(team.getId(), svc.getId(), new BaseAsyncCallback<RpcStatus>() {\n            @Override\n            public void onSuccess(RpcStatus result) {\n              team.getServices().remove(service);\n              waitingWidget.hide();\n\n              PortletEventManager.fireEvent(new RemoveServicesEvent(service));\n            }\n\n            @Override\n            public void onFailure(Throwable caught) {\n              waitingWidget.hide();\n              Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteError());\n            }\n          });\n        }\n\n      }\n    };\n\n    registerListeners();\n    loadService();\n    return pnl;\n  }\n\n  public void initTable() {\n    table = new DataTable<Service>(createColumns());\n    table.enablePaging(10);\n    table.setWidth(\"500px\");\n    table.setVisible(false);\n  }\n\n  public void loadService() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n\n    table.getStore().clear();\n\n    if (team == null) {\n      btnService.disable();\n      waitingWidget.setVisible(false);\n      table.setVisible(true);\n      return;\n    }\n    btnService.enable();\n    if (!AdminAuthorityHelper.canAddService(UserManager.getUserInfo())) {\n      btnService.setVisible(false);\n    }\n\n    updateServicesInTable();\n    waitingWidget.setVisible(false);\n    table.setVisible(true);\n\n  }\n\n  private void registerListeners() {\n    PortletEventManager.addListener(CuCoEventType.ACTIVATE_TEAM, new PortletEventListener<PortletEvent>() {\n\n      @Override\n      public void handleEvent(PortletEvent be) {\n        team = (Team) be.getSource();\n        if (rendered) {\n          loadService();\n        }\n      }\n    });\n    PortletEventManager.addListener(CuCoEventType.ADD_SERVICES, new PortletEventListener<AddServicesEvent>() {\n\n      @Override\n      public void handleEvent(AddServicesEvent be) {\n        for (ServiceModel model : be.getServices()) {\n          team.getServices().add(model.getBean());\n        }\n        updateServicesInTable();\n      }\n    });\n\n    PortletEventManager.addListener(CuCoEventType.REMOVE_SERVICES, new PortletEventListener<RemoveServicesEvent>() {\n\n      @Override\n      public void handleEvent(RemoveServicesEvent event) {\n        if (team != null) {\n          team.getServices().remove(event.getService());\n        }\n        updateServicesInTable();\n      }\n    });\n  }\n\n  private HorizontalPanel createNewServiceRow() {\n    HorizontalPanel newMember = new HorizontalPanel();\n    newMember.add(createServiceButton());\n    return newMember;\n  }\n\n  private Widget createServiceButton() {\n    btnService = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamAddService(), ButtonSize.Small);\n    btnService.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        GwtSelectServiceDialog d = GwtSelectServiceDialog.getInstance(team);\n        d.init();\n        d.show();\n      }\n    });\n    return btnService;\n  }\n\n  private ArrayList<Column<Service>> createColumns() {\n    ArrayList<Column<Service>> columns = new ArrayList<Column<Service>>();\n    columns.add(new Column<Service>(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamService(), \"40%\"));\n    columns.add(new Column<Service>(\"costs\", AdminUI.ADMINCOMMONTEXTPOOL.teamCosts(), \"30%\"));\n    columns.add(new Column<Service>(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.teamDelete(), \"10%\", createDeleteCellRenderer()));\n    return columns;\n  }\n\n  private CellRenderer<Service> createDeleteCellRenderer() {\n    return new CellRenderer<Service>() {\n      @Override\n      public IsWidget render(final ModelData<Service> model, String columnId, int rowId) {\n        return new ClickableIcon<Service>(model.getBean(), deleteServiceDelegate, UI.IMAGES.iconDelete(), null);\n      }\n    };\n  }\n\n  private void updateServicesInTable() {\n    table.getStore().clear();\n    ArrayList<ModelData<Service>> results = new ArrayList<ModelData<Service>>();\n    for (Service sm : team.getServices()) {\n      ModelData<Service> m = new ModelData<Service>(sm);\n      m.put(\"bean\", sm);\n      m.put(\"name\", sm.getName());\n      m.put(\"costs\", sm.getCosts());\n      results.add(m);\n    }\n    table.getStore().add(results);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamManagementPanel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/portlet/past/widget/TeamManagementPanel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8119,
    "content": "package at.a1ta.webclient.cucosett.client.portlet.past.widget;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.ui.Anchor;\nimport com.google.gwt.user.client.ui.HTML;\nimport com.google.gwt.user.client.ui.HTMLPanel;\nimport com.google.gwt.user.client.ui.HorizontalPanel;\nimport com.google.gwt.user.client.ui.IsWidget;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.Delegate;\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.bite.ui.client.widget.Button;\nimport at.a1ta.bite.ui.client.widget.Button.ButtonSize;\nimport at.a1ta.bite.ui.client.widget.ClickableIcon;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.cuco.admin.ui.common.client.event.AddTeamEvent;\nimport at.a1ta.cuco.admin.ui.common.client.event.CuCoEventType;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.cuco.ui.common.client.ui.ClickListener;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.cuco.ui.common.client.ui.table.CellRenderer;\nimport at.a1ta.cuco.ui.common.client.ui.table.Column;\nimport at.a1ta.cuco.ui.common.client.ui.table.DataTable;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\nimport at.a1ta.framework.ui.client.event.GenericEvent;\nimport at.a1ta.framework.ui.client.event.PortletEventListener;\nimport at.a1ta.framework.ui.client.event.PortletEventManager;\nimport at.a1ta.webclient.cucosett.client.dialog.EditTeamsDialog;\nimport at.a1ta.webclient.cucosett.client.service.SettingsServiceLocator;\n\npublic class TeamManagementPanel {\n\n  private DataTable<Team> table;\n\n  private Widget panel = null;\n\n  private WaitingWidget waitingWidget;\n\n  private Delegate<Team> deleteTeamDelegate;\n\n  private EditTeamsDialog editTeamDialog;\n\n  public TeamManagementPanel() {\n    panel = initUI();\n    table.addClickListener(new ClickListener<Team>() {\n      @Override\n      public void onClick(ModelData<Team> data) {\n        Team team = null;\n        if (data.getBean().getId() != null) {\n          team = data.getBean();\n        }\n        GenericEvent<Void> event = new GenericEvent<Void>(team, CuCoEventType.ACTIVATE_TEAM);\n        PortletEventManager.fireEvent(event);\n      }\n    });\n  }\n\n  public Widget getPanel() {\n    return panel;\n  }\n\n  public Widget initUI() {\n    initTable();\n    waitingWidget = new WaitingWidget();\n    HTMLPanel pnl = new HTMLPanel(\"\");\n    pnl.setStyleName(UI.STYLES.bite_moduleContent());\n    HorizontalPanel newTeam = createNewTeamRow();\n    pnl.add(newTeam);\n    pnl.add(new HTML(\"<div class='\" + UI.STYLES.bite_heightPlaceHolder() + \"'/>\"));\n    pnl.add(waitingWidget);\n    pnl.add(table);\n    deleteTeamDelegate = new Delegate<Team>() {\n      @Override\n      public void execute(final Team team) {\n        SettingsServiceLocator.getTeamServlet().deleteTeam(team.getId(), new BaseAsyncCallback<RpcStatus>() {\n          @Override\n          public void onSuccess(RpcStatus result) {\n            if (Window.confirm(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteTeamQuestion())) {\n              ModelData<Team> m = new ModelData<Team>(team);\n              waitingWidget.setText(AdminUI.ADMINCOMMONTEXTPOOL.teamDeleteTeam());\n              waitingWidget.show();\n              m.remove(team);\n              waitingWidget.hide();\n              loadTeam();\n            }\n          }\n\n          @Override\n          public void onFailure(Throwable caught) {\n            waitingWidget.hide();\n            Window.alert(AdminUI.ADMINCOMMONTEXTPOOL.messageboxDeleteError());\n          }\n        });\n\n      }\n    };\n    registerUpdateTeamListener();\n    registerUpdateTeamsListener();\n\n    // loadTeam();\n    return pnl;\n    // showContent();\n  }\n\n  public void initTable() {\n    table = new DataTable<Team>(createColumns());\n    table.enablePaging(10);\n    table.setWidth(\"700px\");\n    table.setVisible(false);\n  }\n\n  private void registerUpdateTeamsListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATE_TEAMS, new PortletEventListener<AddTeamEvent>() {\n\n      @Override\n      public void handleEvent(AddTeamEvent be) {\n        loadTeam();\n      }\n    });\n  }\n\n  public void loadTeam() {\n    waitingWidget.setVisible(true);\n    table.setVisible(false);\n\n    table.getStore().clear();\n\n    SettingsServiceLocator.getTeamServlet().getAllTeams(new BaseAsyncCallback<ArrayList<Team>>() {\n\n      @Override\n      public void onSuccess(ArrayList<Team> result) {\n        ArrayList<ModelData<Team>> results = new ArrayList<ModelData<Team>>();\n\n        for (Team team : result) {\n          ModelData<Team> m = new ModelData<Team>(team);\n          m.put(\"bean\", team);\n          m.put(\"id\", team.getId());\n          m.put(\"name\", team.getName());\n          m.put(\"description\", team.getDescription());\n          m.put(\"creator\", team.getCreator().getUsername());\n          m.put(\"createDate\", team.getCreateDate());\n          results.add(m);\n        }\n\n        table.getStore().add(results);\n        waitingWidget.setVisible(false);\n        table.setVisible(true);\n      }\n    });\n  }\n\n  private void registerUpdateTeamListener() {\n    PortletEventManager.addListener(CuCoEventType.UPDATE_TEAMS, new PortletEventListener<AddTeamEvent>() {\n\n      @Override\n      public void handleEvent(AddTeamEvent event) {\n        Team team = event.getTeam();\n        ModelData<Team> model = table.getStore().get(team);\n        if (model != null) {\n          model.setBean(team);\n        } else {\n          model = new ModelData<Team>(team);\n          model.put(\"bean\", team);\n          model.put(\"id\", team.getId());\n          model.put(\"name\", team.getName());\n          model.put(\"description\", team.getDescription());\n          model.put(\"creator\", team.getCreator().getUsername());\n          model.put(\"createDate\", team.getCreateDate());\n          table.getStore().add(model);\n        }\n      }\n    });\n  }\n\n  private HorizontalPanel createNewTeamRow() {\n    HorizontalPanel newTeam = new HorizontalPanel();\n    newTeam.add(createTeamButton());\n    return newTeam;\n  }\n\n  private Widget createTeamButton() {\n    Button btnTeam = new Button(AdminUI.ADMINCOMMONTEXTPOOL.teamAdd(), ButtonSize.Small);\n    editTeamDialog = new EditTeamsDialog();\n\n    btnTeam.addClickHandler(new ClickHandler() {\n      @Override\n      public void onClick(ClickEvent event) {\n        editTeamDialog.show(null);\n      }\n    });\n    return btnTeam;\n  }\n\n  private ArrayList<Column<Team>> createColumns() {\n    ArrayList<Column<Team>> columns = new ArrayList<Column<Team>>();\n    columns.add(new Column<Team>(\"name\", AdminUI.ADMINCOMMONTEXTPOOL.teamName(), \"20%\", createTeamCellRenderer()));\n    columns.add(new Column<Team>(\"description\", AdminUI.ADMINCOMMONTEXTPOOL.teamDesc(), \"30%\"));\n    columns.add(new Column<Team>(\"creator\", AdminUI.ADMINCOMMONTEXTPOOL.teamCreation(), \"20%\"));\n    columns.add(new Column<Team>(\"createDate\", AdminUI.ADMINCOMMONTEXTPOOL.teamCreateDate(), \"20%\"));\n    columns.add(new Column<Team>(\"delete\", AdminUI.ADMINCOMMONTEXTPOOL.teamDelete(), \"10%\", createDeleteCellRenderer()));\n    return columns;\n  }\n\n  private CellRenderer<Team> createTeamCellRenderer() {\n    return new CellRenderer<Team>() {\n      @Override\n      public Widget render(final ModelData<Team> model, String columnId, int rowId) {\n        Anchor link = new Anchor(model.getBean().getName());\n        link.addClickHandler(new ClickHandler() {\n          @Override\n          public void onClick(ClickEvent event) {\n            editTeamDialog.show(model.getBean());\n\n          }\n        });\n        return link;\n      }\n    };\n  }\n\n  private CellRenderer<Team> createDeleteCellRenderer() {\n    return new CellRenderer<Team>() {\n      @Override\n      public IsWidget render(final ModelData<Team> model, String columnId, int rowId) {\n        return new ClickableIcon<Team>(model.getBean(), deleteTeamDelegate, UI.IMAGES.iconDelete(), null);\n      }\n    };\n  }\n\n  // @Override\n  // public void init() {}\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/SettingsServiceLocator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/SettingsServiceLocator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1607,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport com.google.gwt.core.client.GWT;\n\npublic class SettingsServiceLocator {\n\n  private static CreditTypeServletAsync creditTypeServlet;\n\n  private static ChargingTypeServletAsync chargingTypeServlet;\n\n  private static TeamServletAsync teamServlet;\n\n  private static AuthServletAsync authServlet;\n\n  private static IbatisServletAsync ibatisServlet;\n\n  private static ReportingServletAsync reportingServlet;\n\n  public static AuthServletAsync getAuthorityServlet() {\n    if (authServlet == null) {\n      authServlet = GWT.create(AuthServlet.class);\n    }\n    return authServlet;\n  }\n\n  public static CreditTypeServletAsync getCreditTypeServlet() {\n    if (creditTypeServlet == null) {\n      creditTypeServlet = GWT.create(CreditTypeServlet.class);\n    }\n    return creditTypeServlet;\n  }\n\n  public static TeamServletAsync getTeamServlet() {\n    if (teamServlet == null) {\n      teamServlet = GWT.create(TeamServlet.class);\n    }\n    return teamServlet;\n  }\n\n  public static ChargingTypeServletAsync getChargingTypeServlet() {\n    if (chargingTypeServlet == null) {\n      chargingTypeServlet = GWT.create(ChargingTypeServlet.class);\n    }\n    return chargingTypeServlet;\n  }\n\n  public static IbatisServletAsync getIbatisServlet() {\n    if (ibatisServlet == null) {\n      ibatisServlet = GWT.create(IbatisServlet.class);\n    }\n    return ibatisServlet;\n  }\n\n  public static ReportingServletAsync getReportingServlet() {\n    if (reportingServlet == null) {\n      reportingServlet = GWT.create(ReportingServlet.class);\n    }\n    return reportingServlet;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ChargingTypeServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ChargingTypeServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 412,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.List;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\n\n@RemoteServiceRelativePath(\"cuco/chargingType.rpc\")\npublic interface ChargingTypeServlet extends RemoteService {\n  public List<ChargingType> getAllChargingTypes();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ReportingServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ReportingServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 598,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.cuco.core.bean.Reporting;\n\n@RemoteServiceRelativePath(\"cuco/reporting.rpc\")\npublic interface ReportingServlet extends RemoteService {\n  public ArrayList<Reporting> getAllReportings();\n\n  public ArrayList<HashMap<String, Object>> executeReporting(Long id) throws ReportingException;\n\n  public String exportReportAsExcel(Long id) throws ReportingException;\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ReportingException.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ReportingException.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 287,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.io.Serializable;\n\npublic class ReportingException extends RuntimeException implements Serializable {\n\n  public ReportingException() {\n    super();\n  }\n\n  public ReportingException(String string) {\n    super(string);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ChargingTypeServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ChargingTypeServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 306,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.List;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\n\npublic interface ChargingTypeServletAsync {\n  public void getAllChargingTypes(AsyncCallback<List<ChargingType>> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/IbatisServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/IbatisServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 431,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\npublic interface IbatisServletAsync {\n    public void getDaos(AsyncCallback<ArrayList<String>> callback);\n\n    public void flushDao(String name, AsyncCallback<RpcStatus> callback);\n\n    public void flushAll(AsyncCallback<RpcStatus> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/IbatisServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/IbatisServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 472,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@RemoteServiceRelativePath(\"cuco/ibatis.rpc\")\npublic interface IbatisServlet extends RemoteService {\n    public ArrayList<String> getDaos();\n\n    public RpcStatus flushDao(String name);\n\n    public RpcStatus flushAll();\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/CreditTypeServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/CreditTypeServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 517,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\npublic interface CreditTypeServletAsync {\n  public void getAllCreditTypes(AsyncCallback<ArrayList<CreditType>> callback);\n\n  public void saveCreditType(CreditType ct, AsyncCallback<CreditType> callback);\n\n  public void deleteCreditType(Long id, AsyncCallback<RpcStatus> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/TeamServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/TeamServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1392,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\npublic interface TeamServletAsync {\n  public void getTeam(Long id, AsyncCallback<Team> callback);\n\n  public void getAllTeams(AsyncCallback<ArrayList<Team>> callback);\n\n  public void saveTeam(Team team, AsyncCallback<Team> callback);\n\n  public void deleteTeam(Long teamId, AsyncCallback<RpcStatus> callback);\n\n  public void removeTeamMember(Long teamId, Long userId, AsyncCallback<RpcStatus> callback);\n\n  public void getAllUsers(AsyncCallback<ArrayList<BiteUser>> callback);\n\n  public void addTeamMembers(Long teamId, ArrayList<Long> userIds, AsyncCallback<RpcStatus> callback);\n\n  public void getNotLinkedServices(Long teamId, AsyncCallback<ArrayList<Service>> callback);\n\n  public void addServices(Long teamId, ArrayList<Long> serviceIds, AsyncCallback<RpcStatus> callback);\n\n  public void removeService(Long teamId, Long serviceId, AsyncCallback<RpcStatus> callback);\n\n  public void getService(String text, AsyncCallback<ArrayList<Service>> callback);\n\n  public void searchUsers(String name, String user, String orgunit, AsyncCallback<ArrayList<BiteUser>> callback);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/TeamServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/TeamServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1164,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@RemoteServiceRelativePath(\"cuco/team.rpc\")\npublic interface TeamServlet extends RemoteService {\n  public Team getTeam(Long id);\n\n  public ArrayList<Team> getAllTeams();\n\n  public Team saveTeam(Team team);\n\n  public RpcStatus deleteTeam(Long teamId);\n\n  public RpcStatus removeTeamMember(Long teamId, Long userId);\n\n  public RpcStatus removeService(Long teamId, Long serviceId);\n\n  public ArrayList<BiteUser> getAllUsers();\n\n  public RpcStatus addTeamMembers(Long teamId, ArrayList<Long> userIds);\n\n  public ArrayList<Service> getNotLinkedServices(Long teamId);\n\n  public RpcStatus addServices(Long teamId, ArrayList<Long> serviceIds);\n\n  public ArrayList<Service> getService(String service);\n\n  public ArrayList<BiteUser> searchUsers(String name, String user, String orgunit);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ReportingServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/ReportingServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 503,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.cuco.core.bean.Reporting;\n\npublic interface ReportingServletAsync {\n  public void getAllReportings(AsyncCallback<ArrayList<Reporting>> callback);\n\n  public void executeReporting(Long id, AsyncCallback<ArrayList<HashMap<String, Object>>> callback);\n\n  public void exportReportAsExcel(Long id, AsyncCallback<String> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/CreditTypeServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/CreditTypeServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 561,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@RemoteServiceRelativePath(\"cuco/creditType.rpc\")\npublic interface CreditTypeServlet extends RemoteService {\n  public ArrayList<CreditType> getAllCreditTypes();\n\n  public CreditType saveCreditType(CreditType ct);\n\n  public RpcStatus deleteCreditType(Long id);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/AuthServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/AuthServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 473,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.bite.core.shared.dto.security.Authority;\n\n@RemoteServiceRelativePath(\"cuco/auth.rpc\")\npublic interface AuthServlet extends RemoteService {\n  public ArrayList<Authority> getAllAuthorities();\n\n  public ArrayList<Authority> getAllAuthorities(String filter);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/AuthServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/webclient/cucosett/client/service/AuthServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 405,
    "content": "package at.a1ta.webclient.cucosett.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.bite.core.shared.dto.security.Authority;\n\npublic interface AuthServletAsync {\n  public void getAllAuthorities(AsyncCallback<ArrayList<Authority>> callback);\n\n  public void getAllAuthorities(String filter, AsyncCallback<ArrayList<Authority>> callback);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UsageStatisticsServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UsageStatisticsServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3861,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.io.PrintWriter;\nimport java.io.StringWriter;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.dto.TimeSpan;\nimport at.a1ta.bite.core.server.service.UserTrackingService;\nimport at.a1ta.bite.core.server.util.UsageStatistics;\nimport at.a1ta.bite.ui.server.servlet.CommonAuthenticationServlet;\nimport at.a1ta.cuco.core.shared.dto.Auth;\n\n@Component\npublic class UsageStatisticsServlet extends CommonAuthenticationServlet {\n  private static final long serialVersionUID = 1L;\n  private static final Logger logger = LoggerFactory.getLogger(UsageStatisticsServlet.class);\n  private static final String REQUEST_PARAM_END = \"end\";\n  private static final String REQUEST_PARAM_START = \"start\";\n  private static final String DATE_FORMAT_PATTERN = \"MM-yyyy\";\n\n  private UserTrackingService trackingService;\n\n  @Override\n  protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    super.service(request, response);\n    if (!hasAuthority(Auth.CONTENT_USERTRACKING)) {\n      forbidden();\n      return;\n    }\n    TimeSpan timeSpan = getReportTimeSpan(request);\n    prepareContentHeader(response);\n    writeWorkbook(createUsageReport(timeSpan), response.getOutputStream());\n    response.flushBuffer();\n  }\n\n  private void prepareContentHeader(HttpServletResponse response) {\n    response.setHeader(\"Content-Disposition\", \"attachment;filename=UsageReport_\" + new Date().getTime() + \".xls\");\n    response.setContentType(\"application/vnd.ms-excel\");\n  }\n\n  private TimeSpan getReportTimeSpan(HttpServletRequest request) {\n    SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_PATTERN);\n    TimeSpan span = null;\n    try {\n      span = TimeSpan.startingAt(sdf.parse(request.getParameter(REQUEST_PARAM_START))).to(sdf.parse(request.getParameter(REQUEST_PARAM_END)));\n    } catch (ParseException e) {\n      throw new IllegalArgumentException(e);\n    }\n    return span;\n  }\n\n  private HSSFWorkbook createUsageReport(TimeSpan span) {\n    UsageStatistics stats = new UsageStatistics(this.trackingService);\n    return stats.generateUsageReport(span);\n  }\n\n  private void writeWorkbook(HSSFWorkbook workbook, OutputStream stream) {\n    try {\n      workbook.write(stream);\n      stream.flush();\n    } catch (IOException e) {\n      StringWriter stack = new StringWriter();\n      e.printStackTrace(new PrintWriter(stack));\n      logger.debug(\"IOException: \" + stack.toString());\n    }\n  }\n\n  @Autowired\n  public void setTrackingService(UserTrackingService trackingService) {\n    this.trackingService = trackingService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/CCTOrgStructureElementUploadServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/CCTOrgStructureElementUploadServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 15939,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletOutputStream;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.List;\n\nimport org.apache.commons.fileupload.FileItem;\nimport org.apache.commons.fileupload.FileItemFactory;\nimport org.apache.commons.fileupload.FileUploadException;\nimport org.apache.commons.fileupload.disk.DiskFileItemFactory;\nimport org.apache.commons.fileupload.servlet.ServletFileUpload;\nimport org.apache.commons.lang.StringUtils;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.config.AutowireCapableBeanFactory;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.WebApplicationContext;\nimport org.springframework.web.context.support.WebApplicationContextUtils;\n\nimport at.a1ta.bite.core.server.service.RoleService;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.bite.core.shared.AuthorityHelper;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.ui.server.util.SessionAbstraction;\nimport at.a1ta.cuco.core.service.CCTOrgStructureElementService;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\n@Component\npublic class CCTOrgStructureElementUploadServlet extends HttpServlet {\n  private static final long serialVersionUID = 1L;\n\n  @Autowired\n  private SettingService settingService;\n\n  private static final String RIGHTS_ERROR = \"Berechtigungsfehler!\";\n  private static final String RIGHTS_MISSING = \"Sie haben keine Berechtigung zum Upload einer Datei!\";\n  private static final String CONTENT_DISPOSITION = \"Content-Disposition\";\n  private static final String ATTACHMENT_FILENAME = \"attachment; filename=\";\n  private static List<String> allUsersInDB = new ArrayList<String>();\n  private List<String> supervisorNotUserList = new ArrayList<String>();\n  private List<String> userNotInDBList = new ArrayList<String>();\n\n  @Autowired\n  public CCTOrgStructureElementService cCTOrgStructureElementService;\n  private CCTOrgStructureErrorExport cCTOrgStructureErrorExport = new CCTOrgStructureErrorExport();\n  private String uploadPath = System.getProperty(\"java.io.tmpdir\");\n  @Autowired\n  private TextService textService;\n  @Autowired\n  private RoleService roleService;\n  private String filename;\n  private static final Logger logger = LoggerFactory.getLogger(CCTOrgStructureElementUploadServlet.class);\n\n  @Override\n  public void init() throws ServletException {\n    super.init();\n\n    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());\n    AutowireCapableBeanFactory beanFactory = ctx.getAutowireCapableBeanFactory();\n    beanFactory.autowireBean(this);\n    uploadPath = getServletContext().getInitParameter(\"file-upload\") != null ? getServletContext().getInitParameter(\"file-upload\") : System.getProperty(\"java.io.tmpdir\");\n  }\n\n  @Override\n  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    ServletOutputStream out = response.getOutputStream();\n    response.setHeader(\"Content-Type\", \"text/html\");\n    try {\n      if (!ensureAuthority(request)) {\n        response.sendError(401, textService.getByKeyWithDefaultText(\"admin_portletOrgStructureMissingRights\", RIGHTS_ERROR + RIGHTS_MISSING + \"- Quote Clearance Administration\").getText());\n      } else {\n        readParameters(request, response, out);\n      }\n\n    } catch (Exception ex) {\n      String errorText = ex.toString();\n      errorText = (errorText.length() < 180) ? errorText : errorText.substring(0, 179);\n      logger.error(ex.getMessage(), ex);\n      response.sendError(402, textService.getByKeyWithDefaultText(\"admin_portletOrgStructureUnknownErrorMessage\", \"Unknown Error While Processing Entries : \" + ex.getMessage()).getText());\n    } finally {\n      out.flush();\n      out.close();\n    }\n  }\n\n  private List<String> headerArrayList() {\n    String defaultHeadersList = \"User ID,User Name,Rolle,Bereich,Stufe,Team,SAP ORG ID,Vorgesetzter User ID,Vorgesetzter Name\";\n    String[] headersList = settingService.getValueOrDefault(\"mariposa.admin.cctOrgStructureElementUploadFileHeaderList\", defaultHeadersList).split(\",\");\n    return new LinkedList<String>(Arrays.asList(headersList));\n  }\n\n  private FileItem readParameters(HttpServletRequest request, HttpServletResponse response, ServletOutputStream out) throws FileUploadException, IOException {\n    FileItemFactory factory = new DiskFileItemFactory();\n    ServletFileUpload upload = new ServletFileUpload(factory);\n\n    List<?> items = upload.parseRequest(request);\n    Iterator<?> it = items.iterator();\n    if (it.hasNext()) {\n      FileItem item = (FileItem) it.next();\n      try {\n        if (item.getName() != null || item.getName().endsWith(\".xls\") || item.getName().endsWith(\".xlsx\")) {\n          String readFileStatus = readFile(item, response, out);\n          logger.info(\"OrgStructure Import status: \" + readFileStatus);\n          out.println(readFileStatus);\n        }\n      } catch (Exception ex) {\n        logger.error(ex.getMessage(), ex);\n        response.sendError(404, textService.getByKeyWithDefaultText(\"admin_portletOrgStructureUnknownErrorMessage\", \"Unknown Error While Processing Entries : \" + ex.getMessage()).getText());\n      }\n\n    }\n    return null;\n  }\n\n  private String readFile(FileItem item, HttpServletResponse response, ServletOutputStream out) throws Exception {\n    allUsersInDB.clear();\n    supervisorNotUserList.clear();\n    userNotInDBList.clear();\n    List<String> headers = new ArrayList<String>();\n    ArrayList<CCTOrgStructureElement> cctOrglist = new ArrayList<CCTOrgStructureElement>();\n    ArrayList<String> userId = new ArrayList<String>();\n    ArrayList<String> superviserId = new ArrayList<String>();\n    filename = item.getName();\n    File excelFile = new File(uploadPath + File.separator + getFileName());\n    item.write(excelFile);\n\n    org.apache.poi.ss.usermodel.Workbook wbook = WorkbookFactory.create(excelFile);\n\n    if (wbook.getNumberOfSheets() == 1) {\n      org.apache.poi.ss.usermodel.Sheet sheet = wbook.getSheetAt(0);\n      Row row = sheet.getRow(0);\n      for (Cell cell : row) {\n        headers.add(cell.toString());\n      }\n\n      if (checkHeaders(headers)) {\n        for (int i = 1; i <= sheet.getLastRowNum(); i++) {\n          row = sheet.getRow(i);\n          Cell cellUserIdAndSupId = row.getCell(0);\n          if (!(userId.contains(cellUserIdAndSupId.toString().toLowerCase())) && (cellUserIdAndSupId.toString().trim().length() > 0)) {\n            userId.add(cellUserIdAndSupId.toString().toLowerCase());\n\n          }\n          cellUserIdAndSupId = row.getCell(7);\n          if (cellUserIdAndSupId != null && (cellUserIdAndSupId.toString().trim().length() > 0) && !(superviserId.contains(cellUserIdAndSupId.toString().toLowerCase()))) {\n            superviserId.add(cellUserIdAndSupId.toString().toLowerCase());\n          }\n        }\n\n        ArrayList<CCTOrgStructureElement> unmatchedsheets = new ArrayList<CCTOrgStructureElement>();\n        ArrayList<String> unmatchedUsers = new ArrayList<String>();\n        if (checkWhetherAllColumnsArePresent(headerArrayList(), headers)) {\n          unmatchedUsers.addAll(checkUsers(userId, superviserId));\n          if (unmatchedUsers.isEmpty()) {\n            for (int i = 1; i <= sheet.getLastRowNum(); i++) {\n              CCTOrgStructureElement cctOrg = new CCTOrgStructureElement();\n              row = sheet.getRow(i);\n              cctOrg.setUserID(row.getCell(0).toString().trim());\n              cctOrg.setUser(row.getCell(1).toString().trim());\n              if (row.getCell(2) != null && !row.getCell(2).getStringCellValue().trim().isEmpty()) {\n                cctOrg.setRolle(row.getCell(2).toString().trim());\n              } else {\n                return textService.getByKeyWithDefaultText(\"admin_portletOrgStructureBlankRolleEntryFailureErrorMessage\",\n                    \"Each entry in the 'Rolle' column is mandatory, an empty value was found in the Rolle column. Please add value and try again.\").getText();\n              }\n              cctOrg.setRole(row.getCell(3).toString().trim());\n              cctOrg.setApprovalLevel((int) (row.getCell(4).getNumericCellValue()));\n              cctOrg.setTeam(row.getCell(5).toString().trim());\n              row.getCell(6).setCellType(Cell.CELL_TYPE_STRING);\n              cctOrg.setOrgId(row.getCell(6).getStringCellValue());\n              cctOrg.setSupervisorUserID(row.getCell(7) != null ? row.getCell(7).toString().trim() : \" \");\n              cctOrg.setSupervisor(row.getCell(8) != null ? row.getCell(8).toString().trim() : \" \");\n              cctOrglist.add(cctOrg);\n            }\n            orgStructureSubmit(cctOrglist);\n            return \"Success: \" + textService.getByKeyWithDefaultText(\"admin_portletOrgStructureSuccessMessage\", \"Die Organisationstruktur wurde erfolgreich \u00fcbernommen\").getText();\n          } else {\n            unmatchedsheets.addAll(sheetForDownload(unmatchedUsers, sheet));\n            return streamErrorExcelFile(response, unmatchedsheets, out, response);\n          }\n        } else {\n          String missingColumnErrorMessage = textService.getByKeyWithDefaultText(\"admin_portletOrgStructureFailureMissingHeader\",\n              \"Error processing the organization structure file: required column is missing\").getText();\n          return missingColumnErrorMessage.replace(\"[0]\", StringUtils.join(checkWhichColumnIsMissing(headers), \", \"));\n        }\n      } else {\n        return textService.getByKeyWithDefaultText(\"admin_portletOrgStructureFailureHeadersMismatch\",\n            \"Error While Processing Entries : Header mismatch,Allowed Headers User ID,User Name,Rolle,Bereich,Stufe,Team,SAP ORG ID,Vorgesetzter User ID,Vorgesetzter Name\").getText();\n      }\n    } else {\n      return textService.getByKeyWithDefaultText(\"admin_portletOrgStructureFailureMultipleSheetsInXLS\", \"Error While Processing Entries : More than one sheet in XLS\").getText();\n\n    }\n  }\n\n  public ArrayList<CCTOrgStructureElement> sheetForDownload(ArrayList<String> unmatchedUsersIds, Sheet sheet) {\n    ArrayList<CCTOrgStructureElement> sheetElements = new ArrayList<CCTOrgStructureElement>();\n    Row row;\n    for (int i = 1; i <= sheet.getLastRowNum(); i++) {\n      CCTOrgStructureElement rowelements = new CCTOrgStructureElement();\n      row = sheet.getRow(i);\n      if (unmatchedUsersIds.contains(row.getCell(0).toString().toLowerCase()) || (row.getCell(7) != null && unmatchedUsersIds.contains(row.getCell(7).toString().toLowerCase()))) {\n        rowelements.setUserID(row.getCell(0).toString());\n        rowelements.setUser(row.getCell(1).getStringCellValue());\n        rowelements.setRolle(row.getCell(2) != null ? row.getCell(2).toString().trim() : \" \");\n        rowelements.setRole(row.getCell(3).getStringCellValue());\n        rowelements.setApprovalLevel((int) row.getCell(4).getNumericCellValue());\n        rowelements.setTeam(row.getCell(5).getStringCellValue());\n        row.getCell(6).setCellType(Cell.CELL_TYPE_STRING);\n        rowelements.setOrgId(row.getCell(6).getStringCellValue());\n        rowelements.setSupervisorUserID(row.getCell(7) != null ? row.getCell(7).toString() : \" \");\n        rowelements.setSupervisor(row.getCell(8) != null ? row.getCell(8).toString() : \" \");\n        sheetElements.add(rowelements);\n      }\n    }\n    return sheetElements;\n  }\n\n  private void orgStructureSubmit(ArrayList<CCTOrgStructureElement> cctOrglist) {\n    cCTOrgStructureElementService.updateCCTOrg(cctOrglist);\n\n  }\n\n  public String generateExcelFileName() {\n    if (filename == null) {\n      return null;\n    }\n    int slash = filename.lastIndexOf('\\\\');\n    if (slash == -1) {\n      slash = filename.lastIndexOf('/');\n      return \"errors_\" + filename.substring(slash + 1);\n    }\n    return \"errors_\" + filename.substring(slash + 1);\n  }\n\n  public String getFileName() {\n    if (filename == null) {\n      return null;\n    }\n    int slash = filename.lastIndexOf('\\\\');\n    if (slash == -1) {\n      slash = filename.lastIndexOf('/');\n      return filename.substring(slash + 1);\n    }\n    return filename.substring(slash + 1);\n  }\n\n  private String streamErrorExcelFile(final HttpServletResponse response, final ArrayList<CCTOrgStructureElement> unmatchedsheet, ServletOutputStream out, HttpServletResponse response2)\n      throws IOException {\n    try {\n      response.setContentType(getFileName().endsWith(\".xls\") ? \"application/vnd.ms-excel\" : \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n      response.setHeader(CONTENT_DISPOSITION, ATTACHMENT_FILENAME + generateExcelFileName());\n      cCTOrgStructureErrorExport.createExcelExport(out, unmatchedsheet, textService, supervisorNotUserList, userNotInDBList, getFileName());\n    } catch (Exception e) {\n      logger.error(e.getMessage(), e);\n      return textService.getByKeyWithDefaultText(\"admin_portletOrgStructureErrorReportGenerationFailure\", \"There are failures while generating Error report. Please contact support.\").getText();\n    }\n    return textService.getByKeyWithDefaultText(\"admin_portletOrgStructureFailureReportMessage\", \"Error While Processing Entries : Please refer downloaded Error report\").getText();\n\n  }\n\n  private ArrayList<String> checkUsers(ArrayList<String> userList, ArrayList<String> superviserList) {\n    ArrayList<String> rejectedUserList = new ArrayList<String>();\n    for (String superviser : superviserList) {\n      if (!userList.contains(superviser)) {\n        supervisorNotUserList.add(superviser);\n        rejectedUserList.add(superviser);\n      }\n    }\n    allUsersInDB.addAll(cCTOrgStructureElementService.getAllUsers());\n    for (String user : userList) {\n      if (allUsersInDB.contains(user.trim())) {\n        continue;\n      } else {\n        userNotInDBList.add(user.toLowerCase());\n        rejectedUserList.add(user.toLowerCase());\n      }\n    }\n    return rejectedUserList;\n  }\n\n  private boolean checkHeaders(List<String> headers) {\n    for (String header : headers) {\n      if (headerArrayList().contains(header)) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private boolean checkWhetherAllColumnsArePresent(List<String> one, List<String> two) {\n    if (one == null && two == null) {\n      return true;\n    }\n\n    if (one == null || two == null) {\n      return false;\n    }\n    if (one.size() != two.size()) {\n      return false;\n    }\n\n    // to avoid messing the order of the lists we will use a copy\n    one = new ArrayList<String>(one);\n    two = new ArrayList<String>(two);\n\n    Collections.sort(one);\n    Collections.sort(two);\n    return one.equals(two);\n  }\n\n  private List<String> checkWhichColumnIsMissing(List<String> headers) {\n    List<String> tempList = new ArrayList<String>();\n    tempList.addAll(headerArrayList());\n    tempList.removeAll(headers);\n    return tempList;\n  }\n\n  private boolean ensureAuthority(HttpServletRequest request) {\n    HttpSession session = request.getSession();\n    if (session.getAttribute(SessionAbstraction.USERINFO) != null) {\n      return AuthorityHelper.hasAuthority((UserInfo) session.getAttribute(SessionAbstraction.USERINFO), Auth.QUOTE_CLEARANCE_ADMIN);\n    }\n    return false;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UserRoleServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UserRoleServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3475,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.service.RoleGroupService;\nimport at.a1ta.bite.core.server.service.RoleService;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.server.service.UserService;\nimport at.a1ta.bite.core.shared.UnknownUsernameException;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.bite.core.shared.dto.security.RoleGroup;\nimport at.a1ta.bite.core.shared.dto.security.RoleWithGroup;\nimport at.a1ta.bite.ui.server.servlet.AuthenticationServlet;\nimport at.a1ta.cuco.admin.ui.common.client.service.UserRoleServlet;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@WebServlet(name = \"userRole\", urlPatterns = {\"/admin/cuco/role.rpc\"})\npublic class UserRoleServletImpl extends AuthenticationServlet implements UserRoleServlet {\n  // @formatter:off\n  @Autowired\n  private SettingService settingService;\n  @Autowired\n  private RoleGroupService roleGroupService;\n  @Autowired\n  private RoleService roleService;\n  @Autowired\n  private UserService userService;\n\n  // @formatter:on\n\n  @Override\n  public RpcStatus deleteRoleGroup(Long roleGroupId) {\n    roleGroupService.deleteRoleGroup(roleGroupId);\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public ArrayList<RoleGroup> getAllRoleGroups() {\n    return (ArrayList<RoleGroup>) roleGroupService.getAllRoleGroups();\n  }\n\n  @Override\n  public ArrayList<Role> getAllRoles(long[] apps) {\n    ArrayList<Role> all = new ArrayList<Role>(roleService.getAllRoles());\n    return all;\n  }\n\n  @Override\n  public ArrayList<Role> getAllRolesForSysMsg(Long userId) {\n    return (ArrayList<Role>) roleService.getAllRolesForSysMsg(userId, settingService.getValue(\"SYSMSG_GROUPS\"));\n  }\n\n  @Override\n  public ArrayList<RoleWithGroup> getAllRolesWithGroup(Long groupId) {\n    return (ArrayList<RoleWithGroup>) roleService.getAllRolesWithGroup(groupId);\n  }\n\n  @Override\n  public ArrayList<Role> getRolesInGroupsForUser(Long userId) {\n    return (ArrayList<Role>) roleService.getAllRolesWithGroupForUser(userId, settingService.getValue(\"ROLE_GROUPS\"));\n  }\n\n  @Override\n  public UserInfo getUser(String username) {\n    return userService.getByUsername(username);\n  }\n\n  @Override\n  public ArrayList<BiteUser> searchUsers(String username, String firstName, String lastName) {\n    ArrayList<BiteUser> ret = new ArrayList<BiteUser>(userService.searchUsers(username, firstName, lastName));\n    return ret;\n  }\n\n  @Override\n  public UserInfo getUserWithRoles(String username) throws UnknownUsernameException {\n    return userService.getUserWithRoles(username);\n  }\n\n  @Override\n  public RoleGroup saveRoleGroup(RoleGroup rg) {\n    roleGroupService.saveRoleGroup(rg);\n    roleGroupService.updateRolesForRoleGroup(rg);\n    roleService.updateAuthForRole(rg);\n    return rg;\n  }\n\n  @Override\n  public UserInfo saveUser(UserInfo user) {\n    userService.saveUser(user, getAuthenticatedUser());\n\n    return user;\n  }\n\n  @Override\n  public RpcStatus saveUsers(ArrayList<UserInfo> users) {\n    userService.saveUsers(users, getAuthenticatedUser());\n\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public ArrayList<String> getAllRolesNamesForGroup(String groupName) {\n    return roleService.getAllRolesNamesForGroup(groupName);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/CCTOrgStructureErrorExport.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/CCTOrgStructureErrorExport.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7185,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport java.io.IOException;\nimport java.io.OutputStream;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.Font;\nimport org.apache.poi.ss.usermodel.IndexedColors;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Scope;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\n@Component\n@Scope(\"prototype\")\npublic class CCTOrgStructureErrorExport {\n\n  private static String HEADER_STYLE = \"header\";\n  private static String DATE_STYLE = \"date\";\n\n  private TextService textService;\n  private List<String> supervisorNotUserList = new ArrayList<String>();\n  private List<String> userNotInDBList = new ArrayList<String>();\n  private String fileName;\n\n  private final Map<String, CellStyle> styles = new HashMap<String, CellStyle>();\n\n  public void createExcelExport(final OutputStream response, ArrayList<CCTOrgStructureElement> mismatchedIds, TextService textService2, List<String> supervisorNotUserList,\n      List<String> userNotInDBList, String fileName) throws IOException {\n    this.textService = textService2;\n    this.supervisorNotUserList = supervisorNotUserList;\n    this.userNotInDBList = userNotInDBList;\n    this.setFileName(fileName);\n    Workbook wb = fileName.endsWith(\".xls\") ? new HSSFWorkbook() : new XSSFWorkbook();\n    if (mismatchedIds.size() > 500) {\n      wb = fileName.endsWith(\".xls\") ? new HSSFWorkbook() : new XSSFWorkbook();\n    }\n    createStyles(wb);\n\n    Sheet sheet = wb.createSheet(\"errors\");\n    addHeaderRow(sheet);\n\n    int rowIndex = 1;\n    for (CCTOrgStructureElement cCTOrgID : mismatchedIds) {\n      addCCTOrgStructureElementRow(sheet, rowIndex, cCTOrgID);\n      rowIndex++;\n    }\n\n    sizeColumns(sheet);\n    wb.write(response);\n    response.flush();\n  }\n\n  private void addHeaderRow(Sheet sheet) {\n    Row headerRow = sheet.createRow(0);\n    addHeaderColumn(headerRow, 0, loadTextFromBundle(\"admin_exportUserId\"));\n    addHeaderColumn(headerRow, 1, loadTextFromBundle(\"admin_exportUserName\"));\n    addHeaderColumn(headerRow, 2, loadTextFromBundle(\"admin_exportUserRolle\"));\n    addHeaderColumn(headerRow, 3, loadTextFromBundle(\"admin_exportRole\"));\n    addHeaderColumn(headerRow, 4, loadTextFromBundle(\"admin_exportLevel\"));\n    addHeaderColumn(headerRow, 5, loadTextFromBundle(\"admin_exportTeam\"));\n    addHeaderColumn(headerRow, 6, loadTextFromBundle(\"admin_exportSAPId\"));\n    addHeaderColumn(headerRow, 7, loadTextFromBundle(\"admin_exportSupervisorID\"));\n    addHeaderColumn(headerRow, 8, loadTextFromBundle(\"admin_exportSupervisorName\"));\n    addHeaderColumn(headerRow, 9, loadTextFromBundle(\"admin_exportFailureReason\"));\n  }\n\n  private String loadTextFromBundle(String key) {\n    return textService.getByKey(key).getText();\n  }\n\n  private void addHeaderColumn(Row row, int index, String text) {\n    Cell cell = row.createCell(index);\n    cell.setCellStyle(styles.get(HEADER_STYLE));\n    cell.setCellValue(text);\n  }\n\n  private void addCCTOrgStructureElementRow(Sheet sheet, int rowIndex, CCTOrgStructureElement cCTOrgStructureElement) {\n    Row row = sheet.createRow(rowIndex);\n\n    addCCTOrgStructureElementColumn(row, 0, cCTOrgStructureElement.getUserID());\n    addCCTOrgStructureElementColumn(row, 1, cCTOrgStructureElement.getUser());\n    addCCTOrgStructureElementColumn(row, 2, cCTOrgStructureElement.getRolle());\n    addCCTOrgStructureElementColumn(row, 3, cCTOrgStructureElement.getRole());\n    addCCTOrgStructureElementColumn(row, 4, cCTOrgStructureElement.getApprovalLevel());\n    addCCTOrgStructureElementColumn(row, 5, cCTOrgStructureElement.getTeam());\n    addCCTOrgStructureElementColumn(row, 6, cCTOrgStructureElement.getOrgId());\n    addCCTOrgStructureElementColumn(row, 7, cCTOrgStructureElement.getSupervisorUserID());\n    addCCTOrgStructureElementColumn(row, 8, cCTOrgStructureElement.getSupervisor());\n    addCCTOrgStructureElementColumn(row, 9, getErrorMessage(cCTOrgStructureElement.getUserID(), cCTOrgStructureElement.getSupervisorUserID()));\n  }\n\n  private String getErrorMessage(String userID, String supervisorUserID) {\n    String msg = \"\";\n    if (userNotInDBList.contains(userID.toLowerCase())) {\n      msg += textService.getByKeyWithDefaultText(\"admin_portletOrgStructureFailureUserNotInDB\", \"User Not available in CuCo DB :\").getText() + userID + \"\\n\";\n    }\n    if (supervisorUserID != null && userNotInDBList.contains(supervisorUserID.toLowerCase())) {\n      if (msg.length() > 0) {\n        msg += \", \";\n      }\n      msg += textService.getByKeyWithDefaultText(\"admin_portletOrgStructureFailureSupervisorNotInDB\", \"Supervisor Not available in CuCo DB :\").getText() + supervisorUserID + \"\\n\";\n    }\n    if (supervisorUserID != null && supervisorNotUserList.contains(supervisorUserID.toLowerCase())) {\n      if (msg.length() > 0) {\n        msg += \", \";\n      }\n      msg += textService.getByKeyWithDefaultText(\"admin_portletOrgStructureFailureSupervisorNotInUserList\", \"Supervisor Not available in User List :\").getText() + supervisorUserID + \"\\n\";\n    }\n    return msg;\n  }\n\n  private void addCCTOrgStructureElementColumn(Row row, int index, String value) {\n    Cell cell = row.createCell(index);\n    cell.setCellValue(value);\n  }\n\n  private void addCCTOrgStructureElementColumn(Row row, int index, int value) {\n    Cell cell = row.createCell(index);\n    cell.setCellValue(value);\n  }\n\n  private void createStyles(Workbook wb) {\n    CellStyle style = wb.createCellStyle();\n    Font headerFont = wb.createFont();\n    headerFont.setBoldweight(Font.BOLDWEIGHT_BOLD);\n    style.setAlignment(CellStyle.ALIGN_CENTER);\n    style.setFillForegroundColor(IndexedColors.LIGHT_GREEN.getIndex());\n    style.setFillPattern(CellStyle.SOLID_FOREGROUND);\n    style.setFont(headerFont);\n    styles.put(HEADER_STYLE, style);\n\n    wb.getCreationHelper();\n    style = wb.createCellStyle();\n    style.setDataFormat(wb.getCreationHelper().createDataFormat().getFormat(\"dd.mm.yyyy\"));\n    styles.put(DATE_STYLE, style);\n  }\n\n  private void sizeColumns(Sheet sheet) {\n    sheet.setColumnWidth(0, 16 * 256);\n    sheet.setColumnWidth(1, 35 * 256);\n    sheet.setColumnWidth(2, 35 * 256);\n    sheet.setColumnWidth(3, 13 * 256);\n    sheet.setColumnWidth(4, 13 * 256);\n    sheet.setColumnWidth(5, 20 * 256);\n    sheet.setColumnWidth(6, 15 * 256);\n    sheet.setColumnWidth(7, 20 * 256);\n    sheet.setColumnWidth(8, 35 * 256);\n    sheet.setColumnWidth(9, 70 * 256);\n  }\n\n  @Autowired\n  public void setTextService(TextService textService) {\n    this.textService = textService;\n  }\n\n  public String getFileName() {\n    return fileName;\n  }\n\n  public void setFileName(String fileName) {\n    this.fileName = fileName;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/SystemTrackingServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/SystemTrackingServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3190,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.math.BigDecimal;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.service.UserTrackingService;\nimport at.a1ta.bite.ui.server.servlet.AuthenticationServlet;\nimport at.a1ta.cuco.admin.ui.common.client.service.SystemTrackingServlet;\n\n@WebServlet(name = \"systemTracking\", urlPatterns = {\"/admin/cuco/systemTracking.rpc\"})\npublic class SystemTrackingServletImpl extends AuthenticationServlet implements SystemTrackingServlet {\n  private static final Logger logger = LoggerFactory.getLogger(SystemTrackingServletImpl.class);\n\n  @Autowired\n  private UserTrackingService userTrackingService;\n\n  @Override\n  public ArrayList<BaseModelData> loadAnalysis4logon() {\n    final Calendar calEnd = Calendar.getInstance();\n    final Calendar calStart = Calendar.getInstance();\n    final Date end;\n    final Date start;\n\n    calStart.add(Calendar.MONTH, -1);\n    start = calStart.getTime();\n    end = calEnd.getTime();\n    return convertToModelData(userTrackingService.loadAnalysis4logon(start, end));\n  }\n\n  @Override\n  public ArrayList<BaseModelData> loadAnalysis4customerRequest() {\n    final Calendar calEnd = Calendar.getInstance();\n    final Calendar calStart = Calendar.getInstance();\n    final Date end;\n    final Date start;\n\n    calStart.add(Calendar.MONTH, -1);\n    start = calStart.getTime();\n    end = calEnd.getTime();\n    return convertToModelData(userTrackingService.loadAnalysis4customerLoad(start, end));\n  }\n\n  @Override\n  public ArrayList<BaseModelData> loadDetails4date(String dateString, String uuser) {\n    try {\n      Date date = new SimpleDateFormat(\"dd.MM.yyyy\").parse(dateString);\n      return convertToModelData(userTrackingService.loadDetails4date(date, uuser));\n    } catch (ParseException e) {\n      logger.error(\"Error during parsing date \" + dateString + \" for loading system trackig data for user \" + uuser, e);\n    }\n    return null;\n  }\n\n  private ArrayList<BaseModelData> convertToModelData(List<Map<String, Object>> result) {\n\n    ArrayList<BaseModelData> models = new ArrayList<BaseModelData>(result.size());\n    for (Map<String, Object> map : result) {\n      BaseModelData model = new BaseModelData();\n      model.set(\"date\", map.get(\"OCCURANCE_DATE\"));\n      if (map.get(\"OCCURANCES_DISTINCT\") != null) {\n        model.set(\"distinct\", Long.valueOf(((BigDecimal) map.get(\"OCCURANCES_DISTINCT\")).longValue()));\n      }\n      if (map.get(\"OCCURANCES_TOTAL\") != null) {\n        model.set(\"total\", Long.valueOf(((BigDecimal) map.get(\"OCCURANCES_TOTAL\")).longValue()));\n      }\n\n      model.set(\"uuser\", map.get(\"UUSER\"));\n      model.set(\"name\", map.get(\"USERNAME\"));\n      model.set(\"action\", map.get(\"ACTION_TYPE\"));\n      model.set(\"operation\", map.get(\"VAL_1\"));\n      models.add(model);\n    }\n    return models;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UserShopAssignmentUploadServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UserShopAssignmentUploadServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7935,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpSession;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.fileupload.FileItem;\nimport org.apache.commons.fileupload.FileItemFactory;\nimport org.apache.commons.fileupload.FileUploadException;\nimport org.apache.commons.fileupload.disk.DiskFileItemFactory;\nimport org.apache.commons.fileupload.servlet.ServletFileUpload;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.config.AutowireCapableBeanFactory;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.WebApplicationContext;\nimport org.springframework.web.context.support.WebApplicationContextUtils;\n\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.AuthInfo;\nimport at.a1ta.bite.core.shared.AuthorityHelper;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.ui.server.util.SessionAbstraction;\nimport at.a1ta.cuco.core.service.UserShopAssignmentService;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignment;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\n@Component\npublic class UserShopAssignmentUploadServlet extends HttpServlet {\n\n  @Autowired\n  private UserShopAssignmentService userShopAssignmentService;\n  @Autowired\n  private SettingService settingService;\n  private static final long MAX_FILE_SIZE = 12582912; // data length in bytes\n\n  private static final String FILE_NO_CSV = \"Es k\u00f6nnen nur CSV-Dateien hochgeladen werden!\";\n  private static final String FILE_EMPTY = \"Die hochgeladene Datei ist leer!\";\n  private static final String FILE_TOO_LARGE = \"Die hochgeladene Datei ist zu gro\u00df!\";\n  private static final String FILE_OK = \"Datei ist OK!\";\n  private static final String FILE_ERROR = \"Dateifehler!\";\n  private static final String PARSE_ERROR = \"Einlesefehler!\";\n  private static final String RIGHTS_ERROR = \"Berechtigungsfehler!\";\n  private static final String RIGHTS_MISSING = \"Sie haben keine Berechtigung zum Upload einer Datei!\";\n  private static final String USER_UNKNOWN = \"Der User ist im CuCo nicht bekannt!\";\n  private String comma = \";\";\n\n  @Override\n  public void init() throws ServletException {\n    super.init();\n\n    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());\n    AutowireCapableBeanFactory beanFactory = ctx.getAutowireCapableBeanFactory();\n    beanFactory.autowireBean(this);\n  }\n\n  @Override\n  protected void service(HttpServletRequest request, javax.servlet.http.HttpServletResponse response) throws ServletException, IOException {\n\n    try {\n      comma = settingService.getSetting(\"admin_importusershopdata_fileseperator\").getValue();\n      userShopAssignmentService.purgeLogEntries();\n      if (!ensureAuthority(request, Auth.USERSHOPASSIGNMENTUPLOADDOWNLOAD)) {\n        userShopAssignmentService.insertLogEntry(new UserShopAssignmentLogLine(\"ALL\", RIGHTS_ERROR + \" \" + RIGHTS_MISSING));\n        response.sendError(401, RIGHTS_ERROR + \" \" + RIGHTS_MISSING);\n        return;\n      }\n\n    } catch (Exception ex) {\n      response.sendError(401, RIGHTS_ERROR + \" \" + RIGHTS_MISSING + \" Exception: \" + ex.toString());\n      return;\n    }\n\n    try {\n\n      ArrayList<String> users = new ArrayList<String>(userShopAssignmentService.getUserNamesForAssignments());\n\n      FileItem fileItem = readParameters(request);\n      if (fileItem != null) {\n        String checkResult = validateFile(fileItem);\n        if (checkResult == FILE_OK) {\n          try {\n            userShopAssignmentService.purgeUserShopAssignments();\n            InputStreamReader input = new InputStreamReader(fileItem.getInputStream());\n            BufferedReader reader = new BufferedReader(input);\n            String line = reader.readLine();\n\n            while (line != null) {\n              String[] tokens = line.split(comma);\n              if (tokens.length == 2) {\n                if (tokens[0].length() > 1 && tokens[1].length() > 1) {\n\n                  if (users.contains(tokens[0].toUpperCase())) {\n                    userShopAssignmentService.insertUserShopAssignment(new UserShopAssignment(tokens[0], tokens[1]));\n                  } else {\n                    userShopAssignmentService.insertLogEntry(new UserShopAssignmentLogLine(tokens[0], PARSE_ERROR + \" \" + USER_UNKNOWN));\n                  }\n\n                } else {\n                  String username = \"ALL\";\n                  String errorText = line;\n                  errorText = (errorText.length() < 180) ? errorText : errorText.substring(0, 179);\n                  userShopAssignmentService.insertLogEntry(new UserShopAssignmentLogLine(username, PARSE_ERROR + \" \" + \" Folgende Zeile ist ung\u00fcltig: \" + errorText));\n                }\n              } else {\n                String username = \"ALL\";\n                String errorText = line;\n                errorText = (errorText.length() < 180) ? errorText : errorText.substring(0, 179);\n\n                if (tokens.length > 1 && tokens[0].length() > 1) {\n                  username = tokens[0];\n                }\n\n                userShopAssignmentService.insertLogEntry(new UserShopAssignmentLogLine(username, PARSE_ERROR + \" \" + \" Folgende Zeile ist ung\u00fcltig: \" + errorText));\n              }\n\n              line = reader.readLine();\n            }\n          } catch (Exception ex) {\n            String errorText = ex.toString();\n            errorText = (errorText.length() < 180) ? errorText : errorText.substring(0, 179);\n            userShopAssignmentService.insertLogEntry(new UserShopAssignmentLogLine(\"ALL\", PARSE_ERROR + \" \" + errorText));\n          }\n\n        } else {\n          userShopAssignmentService.insertLogEntry(new UserShopAssignmentLogLine(\"ALL\", FILE_ERROR + \" \" + checkResult));\n        }\n\n      } else {\n        userShopAssignmentService.insertLogEntry(new UserShopAssignmentLogLine(\"ALL\", FILE_ERROR + \" \" + FILE_EMPTY));\n      }\n\n    } catch (FileUploadException ex) {\n      String errorText = ex.toString();\n      errorText = (errorText.length() < 180) ? errorText : errorText.substring(0, 179);\n      userShopAssignmentService.insertLogEntry(new UserShopAssignmentLogLine(\"ALL\", FILE_ERROR + \" \" + errorText));\n    }\n\n  };\n\n  private FileItem readParameters(HttpServletRequest request) throws FileUploadException {\n    FileItemFactory factory = new DiskFileItemFactory();\n    ServletFileUpload upload = new ServletFileUpload(factory);\n\n    List<?> items = upload.parseRequest(request);\n    Iterator<?> it = items.iterator();\n    if (it.hasNext()) {\n      FileItem item = (FileItem) it.next();\n      return item;\n    }\n    return null;\n  }\n\n  protected String validateFile(FileItem fileItem) {\n    if (!fileItem.getName().substring(fileItem.getName().lastIndexOf(\".\") + 1).equalsIgnoreCase(\"csv\")) {\n      return FILE_NO_CSV;\n    } else if (fileItem.get().length == 0) {\n      return FILE_EMPTY;\n    } else if (fileItem.get().length > MAX_FILE_SIZE) {\n      return FILE_TOO_LARGE;\n    } else {\n      return FILE_OK;\n    }\n  }\n\n  private boolean ensureAuthority(HttpServletRequest request, AuthInfo authority) {\n    HttpSession session = request.getSession();\n    boolean isAuthenticated = isAuthenticated(session);\n\n    UserInfo userInfo;\n    if (isAuthenticated) {\n      userInfo = (UserInfo) session.getAttribute(SessionAbstraction.USERINFO);\n      return AuthorityHelper.hasAuthority(userInfo, authority);\n    }\n    return false;\n  }\n\n  private boolean isAuthenticated(HttpSession session) {\n    Object attribute = session.getAttribute(SessionAbstraction.USERINFO);\n    return attribute != null;\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UnknownAreaCodeServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UnknownAreaCodeServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1259,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet;\nimport at.a1ta.cuco.admin.ui.common.client.service.UnknownAreaCodeServlet;\nimport at.a1ta.cuco.core.service.UnknownAreaCodeService;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@WebServlet(name = \"unknownAreaCode\", urlPatterns = {\"/admin/cuco/unknownAreaCode.rpc\", \"/app/unknownAreaCode.rpc\"})\npublic class UnknownAreaCodeServletImpl extends SpringRemoteServiceServlet implements UnknownAreaCodeServlet {\n  @Autowired\n  private UnknownAreaCodeService unknownAreaCodeService;\n\n  @Override\n  public RpcStatus deleteUnknownAreaCode(Long id) {\n    unknownAreaCodeService.deleteUnknownAreaCode(id);\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public ArrayList<UnknownAreaCode> getAllUnknownAreaCodes() {\n    return (ArrayList<UnknownAreaCode>) unknownAreaCodeService.getAllUnknownAreaCodes();\n  }\n\n  @Override\n  public UnknownAreaCode saveUnknownAreaCode(UnknownAreaCode code) {\n    unknownAreaCodeService.saveUnknownAreaCode(code);\n    return code;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UserShopAssignmentServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UserShopAssignmentServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2142,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.HashMap;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.ui.server.servlet.AuthenticationServlet;\nimport at.a1ta.cuco.admin.ui.common.client.service.UserShopAssignmentServlet;\nimport at.a1ta.cuco.core.service.UserShopAssignmentService;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignment;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\n@WebServlet(name = \"userShopAssignment\", urlPatterns = {\"/admin/cuco/usershopassignment.rpc\"})\npublic class UserShopAssignmentServletImpl extends AuthenticationServlet implements UserShopAssignmentServlet {\n\n  @Autowired\n  private UserShopAssignmentService userShopAssignmentService;\n\n  @Override\n  public List<UserShopAssignment> getUserShopAssignments() {\n    return userShopAssignmentService.getUserShopAssignments();\n  }\n\n  @Override\n  public List<UserShopAssignmentLogLine> getLogEntries() {\n    return userShopAssignmentService.getLogEntries();\n  }\n\n  @Override\n  public Integer getLogEntriesCount() {\n    return userShopAssignmentService.getLogEntriesCount();\n  }\n\n  @Override\n  public void insertLogEntry(UserShopAssignmentLogLine logline) {\n    userShopAssignmentService.insertLogEntry(logline);\n  }\n\n  @Override\n  public void insertUserShopAssignment(UserShopAssignment assignment) {\n    userShopAssignmentService.insertUserShopAssignment(assignment);\n  }\n\n  @Override\n  public void purgeLogEntries() {\n    userShopAssignmentService.purgeLogEntries();\n  }\n\n  @Override\n  public void purgeUserShopAssignments() {\n    userShopAssignmentService.purgeUserShopAssignments();\n  }\n\n  @Override\n  public HashMap<String, String> getUserShopAssignmentsForUserManagement() {\n    return userShopAssignmentService.getUserShopAssignmentsForUserManagement();\n  }\n\n  @Override\n  public List<String> getUserNamesForAssignments() {\n    return userShopAssignmentService.getUserNamesForAssignments();\n  }\n\n  @Override\n  public List<String> getAssignedShopIDs() {\n    return userShopAssignmentService.getAssignedShopIDs();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/CCTOrgStructureElementServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/CCTOrgStructureElementServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1520,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.ui.server.servlet.AuthenticationServlet;\nimport at.a1ta.cuco.admin.ui.common.client.service.CCTOrgStructureElementServlet;\nimport at.a1ta.cuco.core.dao.db.CCTOrgStructureElementDao;\nimport at.a1ta.cuco.core.service.CCTOrgStructureElementService;\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\n@WebServlet(name = \"cctorgstructureelement\", urlPatterns = {\"/admin/cuco/cctorgstructureelement.rpc\"})\npublic class CCTOrgStructureElementServletImpl extends AuthenticationServlet implements CCTOrgStructureElementServlet {\n\n  @Autowired\n  private CCTOrgStructureElementService cctOrgStructureElementService;\n\n  private CCTOrgStructureElementDao cctOrgStructureElementDao;\n\n  @Autowired\n  public void setCctOrgStructureElementDao(CCTOrgStructureElementDao cctOrgStructureElementDao) {\n    this.cctOrgStructureElementDao = cctOrgStructureElementDao;\n  }\n\n  @Override\n  public List<String> getAllUsers() {\n    return cctOrgStructureElementService.getAllUsers();\n  }\n\n  @Override\n  public void eraseOldEntries() {\n    cctOrgStructureElementService.eraseOldEntries();\n  }\n\n  @Override\n  public void updateCCTOrg(ArrayList<CCTOrgStructureElement> user) {\n    for (CCTOrgStructureElement cctOrgElement : user) {\n      cctOrgStructureElementDao.updateCCTOrg(cctOrgElement);\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/ServiceServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/ServiceServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1220,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.annotation.WebServlet;\nimport java.util.ArrayList;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.ui.server.servlet.SpringRemoteServiceServlet;\nimport at.a1ta.cuco.admin.ui.common.client.service.ServiceServlet;\nimport at.a1ta.cuco.core.service.ServiceService;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@WebServlet(name = \"appServiceAdmin\", urlPatterns = {\"/admin/cuco/service.rpc\"})\npublic class ServiceServletImpl extends SpringRemoteServiceServlet implements ServiceServlet {\n  @Autowired\n  private ServiceService serviceService;\n\n  @Override\n  public RpcStatus deleteService(Long id) {\n    serviceService.deleteService(id);\n    return RpcStatus.OK;\n  }\n\n  @Override\n  public ArrayList<Service> getAllServices() {\n    return (ArrayList<Service>) serviceService.getAllServices();\n  }\n\n  @Override\n  public Service saveService(Service service) {\n    serviceService.saveService(service);\n    return service;\n  }\n\n  @Override\n  public ArrayList<Service> searchService(String service) {\n    return (ArrayList<Service>) serviceService.searchService(service);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/VIPHistoryServletImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/VIPHistoryServletImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4911,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.annotation.WebServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.Date;\nimport java.util.List;\n\nimport org.apache.commons.lang.time.FastDateFormat;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.util.ParseUtils;\nimport at.a1ta.bite.ui.server.servlet.AuthenticationServlet;\nimport at.a1ta.cuco.admin.ui.common.client.service.VIPHistoryServlet;\nimport at.a1ta.cuco.core.export.CSVFieldFormater;\nimport at.a1ta.cuco.core.export.CSVRowFormater;\nimport at.a1ta.cuco.core.export.DateFormater;\nimport at.a1ta.cuco.core.export.TableContent;\nimport at.a1ta.cuco.core.service.PartyService;\nimport at.a1ta.cuco.core.service.VIPHistoryService;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.VIPHistoryEntry;\nimport at.a1ta.cuco.core.shared.dto.VipExport;\n\n@Component\n@WebServlet(name = \"vipHistory\", urlPatterns = {\"/admin/cuco/vipHistory.rpc\"})\npublic class VIPHistoryServletImpl extends AuthenticationServlet implements VIPHistoryServlet {\n  private static final Logger logger = LoggerFactory.getLogger(VIPHistoryServletImpl.class);\n\n  private static final FastDateFormat sdf = FastDateFormat.getInstance(VipExport.EXPORT_DATE_FILE_PATTERN);\n\n  @Autowired\n  private VIPHistoryService vipHistoryService;\n  @Autowired\n  private PartyService customerService;\n\n  @Override\n  public List<VIPHistoryEntry> getVIPHistory(Date from, Date to, String searchTerm, String vipStatus) {\n    return vipHistoryService.getVIPHistory(from, to, searchTerm, vipStatus);\n  }\n\n  @Override\n  protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n    final String action = req.getParameter(\"action\");\n    if (action != null && VipExport.EXPORT_ACTION_CSV_BY_SEARCH.equals(action)) {\n      Date fromDate = null;\n      Date toDate = null;\n      String reporter = null;\n      String vipStatus = null;\n      if (req.getParameter(VipExport.SEARCH_FROM) != null) {\n        fromDate = ParseUtils.parseDate(req.getParameter(VipExport.SEARCH_FROM), VipExport.SERIALIZATION_DATE_PATTERN, null);\n      }\n      if (req.getParameter(VipExport.SEARCH_TO) != null) {\n        toDate = ParseUtils.parseDate(req.getParameter(VipExport.SEARCH_TO), VipExport.SERIALIZATION_DATE_PATTERN, null);\n      }\n      if (req.getParameter(VipExport.SEARCH_REPORTER) != null) {\n        reporter = req.getParameter(VipExport.SEARCH_REPORTER);\n      }\n      if (req.getParameter(VipExport.SEARCH_VIP_STATUS) != null) {\n        vipStatus = req.getParameter(VipExport.SEARCH_VIP_STATUS);\n      }\n\n      logger.debug(\"Creating VIP History export file.\");\n      writeExportFile(resp, getVIPHistory(fromDate, toDate, reporter, vipStatus));\n    } else {\n      super.doGet(req, resp);\n    }\n  }\n\n  private void writeExportFile(final HttpServletResponse resp, final List<VIPHistoryEntry> importHistory) throws IOException {\n    final String timestampStr = sdf.format(new Date());\n    final String fileName = \"VipExport_\" + timestampStr + VipExport.EXPORT_CSV_EXT;\n    resp.setHeader(\"Content-Disposition\", \"attachment; filename=\" + fileName);\n    resp.setContentType(VipExport.EXPORT_CSV_CONTENT_TYPE);\n\n    // write servlet response stream\n    final PrintWriter writer = resp.getWriter();\n    writer.write(getExportFileContent(importHistory));\n    writer.flush();\n    writer.close();\n  }\n\n  private String getExportFileContent(final List<VIPHistoryEntry> importHistory) {\n    final TableContent c = new TableContent();\n    c.setColumnFormater(0, VipExport.EXPORT_ROW_TITLES.length - 1, new CSVFieldFormater());\n    c.setTypeFormater(Date.class, new DateFormater(VipExport.EXPORT_DATE_PATTERN, \"\"));\n    c.setRowFormater(new CSVRowFormater());\n\n    // Header\n    c.addRow(VipExport.EXPORT_ROW_TITLES);\n\n    // Rows\n    for (VIPHistoryEntry history : importHistory) {\n      Long customerId = history.getCustomerId();\n      Party cust = customerService.get(customerId);\n      Integer newStatus = history.getNewStatus();\n      String reporter = history.getReported();\n      Date created = history.getCreated();\n\n      if (cust == null) {\n        logger.warn(\"Cannot export VIP History. Customer \" + customerId + \" doesn't exist.\");\n        continue;\n      }\n\n      c.addRow(customerId, cust.getTitle(), cust.getLastname(), cust.getFirstname(), newStatus, reporter, created, cust.getBusinessSegment(), cust.getPoBox(), cust.getCity(), cust.getStreet(), cust.getHousenumber(), cust.getEMailAddress(), cust.getBirthdate(), cust.getGender(), cust.getCommercialSector());\n    }\n    return c.asString();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UserShopAssignmentDownloadServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/server/UserShopAssignmentDownloadServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4005,
    "content": "package at.a1ta.cuco.admin.ui.common.server;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRequest;\nimport javax.servlet.ServletResponse;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\nimport java.io.IOException;\nimport java.util.ArrayList;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.config.AutowireCapableBeanFactory;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.WebApplicationContext;\nimport org.springframework.web.context.support.WebApplicationContextUtils;\n\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.AuthInfo;\nimport at.a1ta.bite.core.shared.AuthorityHelper;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.ui.server.util.SessionAbstraction;\nimport at.a1ta.cuco.core.service.UserShopAssignmentService;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\n@Component\npublic class UserShopAssignmentDownloadServlet extends HttpServlet {\n\n  @Autowired\n  private UserShopAssignmentService userShopAssignmentService;\n  @Autowired\n  private SettingService settingService;\n  private String comma = \";\";\n\n  @Override\n  public void init() throws ServletException {\n    super.init();\n\n    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());\n    AutowireCapableBeanFactory beanFactory = ctx.getAutowireCapableBeanFactory();\n    beanFactory.autowireBean(this);\n  }\n\n  @Override\n  public void service(ServletRequest request, ServletResponse response) throws ServletException, IOException {\n    if (!ensureAuthority((HttpServletRequest) request, Auth.USERSHOPASSIGNMENTUPLOADDOWNLOAD)) {\n      ((HttpServletResponse) response).sendError(401, \"Sind haben keine Berechtigung zum Download der Datei!\");\n      return;\n    }\n\n    try {\n      comma = settingService.getSetting(\"admin_importusershopdata_fileseperator\").getValue();\n      ArrayList<UserShopAssignmentLogLine> logdata = new ArrayList<UserShopAssignmentLogLine>(userShopAssignmentService.getLogEntries());\n\n      for (UserShopAssignmentLogLine line : logdata) {\n        StringBuilder str = new StringBuilder();\n\n        if (line != null && line.getUsername() != null && line.getLogText() != null) {\n          str.append(line.getUsername()).append(comma).append(line.getLogText()).append(\"\\n\");\n        } else if (line != null && line.getUsername() != null && line.getLogText() == null) {\n          str.append(line.getUsername()).append(comma).append(\"\\n\");\n        } else if (line != null && line.getUsername() == null && line.getLogText() != null) {\n          str.append(comma).append(line.getLogText()).append(\"\\n\");\n        } else {\n          str.append(\"\" + comma + \"\\n\");\n        }\n\n        response.getWriter().append(str.toString());\n      }\n\n      ((HttpServletResponse) response).setHeader(\"Content-Disposition\", \"attachment; filename=logdata.csv\");\n      response.setContentType(\"text/csv\");\n      response.getOutputStream().flush();\n      response.getOutputStream().close();\n\n    } catch (Exception ex) {\n      return;\n    }\n\n  }\n\n  private boolean ensureAuthority(HttpServletRequest request, AuthInfo authority) {\n    HttpSession session = request.getSession();\n    boolean isAuthenticated = isAuthenticated(session);\n\n    UserInfo userInfo;\n    if (isAuthenticated) {\n      userInfo = (UserInfo) session.getAttribute(SessionAbstraction.USERINFO);\n      return AuthorityHelper.hasAuthority(userInfo, authority);\n    }\n    return false;\n  }\n\n  private boolean isAuthenticated(HttpSession session) {\n    Object attribute = session.getAttribute(SessionAbstraction.USERINFO);\n    return attribute != null;\n  }\n\n  @Autowired\n  public void setSettingService(SettingService service) {\n    this.settingService = service;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/dto/ServiceModel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/dto/ServiceModel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1386,
    "content": "package at.a1ta.cuco.admin.ui.common.client.dto;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\n\nimport at.a1ta.cuco.core.shared.dto.Service;\n\npublic class ServiceModel extends BaseModelData {\n  private static final long serialVersionUID = 1L;\n  private static final String ID = \"id\";\n  private static final String NAME = \"name\";\n  private static final String COSTS = \"costs\";\n  private static final String BEAN = \"bean\";\n\n  public ServiceModel() {\n    // default constructor to support GWT parsing\n  }\n\n  public ServiceModel(Service service) {\n    setName(service.getName());\n    setCosts(service.getCosts());\n    setId(service.getId());\n    setBean(service);\n  }\n\n  public final void setName(String name) {\n    set(NAME, name);\n  }\n\n  public final void setCosts(Double costs) {\n    set(COSTS, costs);\n  }\n\n  public final void setId(Long id) {\n    set(ID, id);\n  }\n\n  public String getName() {\n    return get(NAME);\n  }\n\n  public Float getCosts() {\n    return get(COSTS);\n  }\n\n  public Long getId() {\n    return get(ID);\n  }\n\n  public final void setBean(Service service) {\n    set(BEAN, service);\n  }\n\n  public Service getBean() {\n    return get(BEAN);\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    ServiceModel m = (ServiceModel) obj;\n    return m != null && m.getId().equals(getId());\n  }\n\n  @Override\n  public int hashCode() {\n    return getId().hashCode();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/dto/RTCodeModel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/dto/RTCodeModel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1414,
    "content": "package at.a1ta.cuco.admin.ui.common.client.dto;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\n\nimport at.a1ta.cuco.core.shared.dto.RTCode;\n\npublic class RTCodeModel extends BaseModelData {\n  private static final long serialVersionUID = 1L;\n\n  public RTCodeModel() {\n    // default constructor to support GWT parsing\n  }\n\n  public RTCodeModel(RTCode code) {\n    setProdNum(code.getProdNum());\n    setDescription(code.getDescription());\n    setSales(code.getSales());\n    setMonths(code.getMonths());\n    setCode(code);\n  }\n\n  public final void setCode(RTCode c) {\n    set(\"code\", c);\n  }\n\n  public RTCode getCode() {\n    return get(\"code\");\n  }\n\n  public final void setProdNum(String prodNum) {\n    set(\"prodNum\", prodNum);\n  }\n\n  public final void setDescription(String description) {\n    set(\"description\", description);\n  }\n\n  public String getProdNum() {\n    return get(\"prodNum\");\n  }\n\n  public String getDescription() {\n    return get(\"description\");\n  }\n\n  public Number getMonths() {\n    return get(\"months\");\n  }\n\n  public final void setMonths(Number months) {\n    set(\"months\", months);\n  }\n\n  public String getSales() {\n    Boolean b = get(\"salesBoolean\");\n    if (b == null) {\n      return null;\n    }\n    if (b.booleanValue()) {\n      return \"J\";\n    }\n\n    return \"N\";\n  }\n\n  public final void setSales(String sales) {\n    set(\"sales\", sales);\n    set(\"salesBoolean\", sales.equals(\"J\"));\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/PortletHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/PortletHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1640,
    "content": "package at.a1ta.cuco.admin.ui.common.client.ui;\n\nimport com.extjs.gxt.ui.client.widget.LayoutContainer;\nimport com.extjs.gxt.ui.client.widget.WidgetComponent;\nimport com.extjs.gxt.ui.client.widget.tips.ToolTipConfig;\nimport com.google.gwt.resources.client.ImageResource;\nimport com.google.gwt.user.client.ui.Grid;\nimport com.google.gwt.user.client.ui.Image;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.ui.client.bundle.UI;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.framework.ui.client.util.PrintHelper;\n\npublic class PortletHelper {\n  private static WidgetComponent getInfoIcon() {\n    return getIcon(UI.IMAGES.iconInfoTiny());\n  }\n\n  public static LayoutContainer createInfoWidget(Widget widget, String tooltip) {\n    return createInfoWidget(widget, AdminUI.ADMINCOMMONTEXTPOOL.info(), tooltip);\n  }\n\n  private static LayoutContainer createInfoWidget(final Widget widget, final String title, final String tooltip) {\n    LayoutContainer c = new LayoutContainer();\n    if (!PrintHelper.isInPrintMode()) {\n      ToolTipConfig toolTipConfig = new ToolTipConfig(title, tooltip);\n      toolTipConfig.setDismissDelay(0);\n      c.setToolTip(toolTipConfig);\n\n      WidgetComponent infoIcon = getInfoIcon();\n\n      Grid grid = new Grid(1, 2);\n      grid.setWidget(0, 0, widget);\n      grid.setWidget(0, 1, infoIcon);\n      c.add(grid);\n    } else {\n      c.add(widget);\n    }\n    return c;\n  }\n\n  private static WidgetComponent getIcon(ImageResource imageResource) {\n    Image img = new Image(imageResource);\n    WidgetComponent component = new WidgetComponent(img);\n    return component;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/LocalPagingDetails.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/LocalPagingDetails.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4859,
    "content": "package at.a1ta.cuco.admin.ui.common.client.ui;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.extjs.gxt.ui.client.data.BasePagingLoader;\nimport com.extjs.gxt.ui.client.data.GroupingLoadConfig;\nimport com.extjs.gxt.ui.client.data.ListLoadResult;\nimport com.extjs.gxt.ui.client.data.LoadEvent;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.event.LoadListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.google.gwt.core.client.Scheduler;\nimport com.google.gwt.core.client.Scheduler.ScheduledCommand;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\nimport com.google.gwt.user.client.ui.FlexTable;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.framework.gxt.ui.DetailsDialog;\nimport at.a1ta.framework.gxt.ui.FilterablePagingMemoryProxy;\nimport at.a1ta.framework.gxt.ui.PagingGridContainer;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.ui.StyledLabel;\nimport at.a1ta.framework.ui.client.ui.StyledLabel.Font_Style;\nimport at.a1ta.framework.ui.client.util.PrintHelper;\n\npublic abstract class LocalPagingDetails<T extends Serializable> extends DetailsDialog {\n\n  private FilterablePagingMemoryProxy proxy;\n\n  private PagingGridContainer<ListStore<ModelData>, ModelData> gridContainer;\n\n  private FlexTable printTable;\n\n  public LocalPagingDetails(PortletDefinition portletDefinition, String header) {\n    super(portletDefinition, header);\n  }\n\n  @Override\n  protected void createDetailsContent() {\n    getContentPanel().clear();\n\n    BaseAsyncCallback<ArrayList<T>> callback = createCallback();\n    fetchDataFromServer(callback);\n  }\n\n  protected BaseAsyncCallback<ArrayList<T>> createCallback() {\n    BaseAsyncCallback<ArrayList<T>> callback = new BaseAsyncCallback<ArrayList<T>>(this) {\n\n      @Override\n      public void onSuccess(ArrayList<T> result) {\n        proxy = new FilterablePagingMemoryProxy(convertToBaseModelData(result));\n\n        // loader\n        final BasePagingLoader<PagingLoadResult<GroupingLoadConfig>> loader = new BasePagingLoader<PagingLoadResult<GroupingLoadConfig>>(proxy);\n\n        loader.setRemoteSort(true);\n        ListStore<ModelData> store = new ListStore<ModelData>(loader);\n        gridContainer = new PagingGridContainer<ListStore<ModelData>, ModelData>(store, createColumnModel(), getPagingSize(), getGridHeight());\n        gridContainer.setWidth(\"100%\");\n\n        if (!PrintHelper.isInPrintMode()) {\n          add(gridContainer);\n        } else {\n          printTable = new FlexTable();\n          printTable.setWidth(\"100%\");\n          add(printTable);\n        }\n\n        afterGridCreation();\n\n        loader.addLoadListener(new LoadListener() {\n\n          @Override\n          public void loaderBeforeLoad(LoadEvent le) {\n            if (PrintHelper.isInPrintMode()) {\n              showLoading();\n            }\n          }\n\n          @Override\n          public void loaderLoad(final LoadEvent le) {\n            if (PrintHelper.isInPrintMode()) {\n              fillPrintableTable();\n              showContent();\n            } else {\n              if (((ListLoadResult<?>) le.getData()).getData().isEmpty()) {\n                showEmptyContent();\n              } else {\n                showContent();\n              }\n              Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n                @Override\n                public void execute() {\n                  gridContainer.syncSize();\n                }\n              });\n            }\n          }\n\n        });\n        loader.load(0, getPagingSize());\n      }\n\n    };\n    return callback;\n  }\n\n  private void fillPrintableTable() {\n    printTable.clear();\n    printTable.removeAllRows();\n    for (int i = 0; i < gridContainer.getGrid().getColumnModel().getColumnCount(); i++) {\n      printTable.setWidget(0, i, new StyledLabel(gridContainer.getGrid().getColumnModel().getColumn(i).getHeader(), Font_Style.BOLD));\n      printTable.getColumnFormatter().setWidth(i, String.valueOf(gridContainer.getGrid().getColumnModel().getColumn(i).getWidth()));\n    }\n  }\n\n  private int getPagingSize() {\n    return PrintHelper.isInPrintMode() ? 25 : AdminUI.CONFIG.applicationPagingSize();\n  }\n\n  private int getGridHeight() {\n    return PrintHelper.isInPrintMode() ? 600 : 430;\n  }\n\n  private void afterGridCreation() {\n    // do nothing by default;\n  }\n\n  protected abstract void fetchDataFromServer(AsyncCallback<ArrayList<T>> callback);\n\n  protected abstract List<BaseModelData> convertToBaseModelData(ArrayList<T> beans);\n\n  protected abstract ColumnModel createColumnModel();\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/ImageRenderer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/ImageRenderer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2950,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.admin.ui.common.client.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.Events;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnData;\nimport com.extjs.gxt.ui.client.widget.grid.Grid;\nimport com.extjs.gxt.ui.client.widget.grid.GridCellRenderer;\nimport com.google.gwt.event.dom.client.ClickEvent;\nimport com.google.gwt.event.dom.client.ClickHandler;\nimport com.google.gwt.user.client.ui.Image;\n\nimport at.a1ta.bite.ui.client.bundle.UI;\n\npublic class ImageRenderer implements GridCellRenderer<ModelData> {\n\n  public static final int DELETE = 2;\n  public static final int DOWN = 5;\n  public static final int UP = 6;\n  public static final int DOWNLOAD = 7;\n  public static final int ERASE = 8; \n  \n  protected Listener<BaseEvent> listener;\n  protected String tooltip = null;\n  protected int type = 1;\n\n  public ImageRenderer(int type, Listener<BaseEvent> listener) {\n    this.listener = listener;\n    this.type = type;\n  }\n\n  @Override\n  public Object render(final ModelData model, String property, ColumnData config, final int rowIndex, final int colIndex,\n      ListStore<ModelData> store, Grid<ModelData> grid) {\n    Image img = null;\n\n    if (type == DELETE) {\n      img = new Image(UI.IMAGES.iconPlaceholder());\n    }\n    \n    if(type == DOWNLOAD) {\n      img = new Image(UI.IMAGES.iconDownload()); \n    }\n    \n    if(type == ERASE) {\n      img = new Image(UI.IMAGES.iconDelete());\n    }\n\n    if (type == DOWN) {\n      img = new Image(UI.IMAGES.iconCheck());\n    }\n\n    if (type == UP) {\n      img = new Image(UI.IMAGES.iconPlaceholder());\n    }\n\n    if (img == null) {\n      throw new RuntimeException(\"Invalid Imagetype: \" + type);\n    }\n\n    img.addStyleName(UI.STYLES.cursor_pointer());\n    img.addClickHandler(new ClickHandler() {\n\n      @Override\n      public void onClick(ClickEvent event) {\n        listener.handleEvent(new BaseEvent(Events.Select));\n      }\n    });\n\n    if (tooltip != null) {\n      return PortletHelper.createInfoWidget(img, tooltip);\n    }\n    return img;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/BooleanRenderer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/BooleanRenderer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 729,
    "content": "package at.a1ta.cuco.admin.ui.common.client.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnData;\nimport com.extjs.gxt.ui.client.widget.grid.Grid;\nimport com.extjs.gxt.ui.client.widget.grid.GridCellRenderer;\n\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\n\npublic class BooleanRenderer implements GridCellRenderer<ModelData> {\n  @Override\n  public Object render(ModelData model, String property, ColumnData config, int rowIndex, int colIndex, ListStore<ModelData> store, Grid<ModelData> grid) {\n    return ((Boolean) model.get(property)) ? AdminUI.ADMINCOMMONTEXTPOOL.yes() : AdminUI.ADMINCOMMONTEXTPOOL.no();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/SystemMessagePreviewComponent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/ui/SystemMessagePreviewComponent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1492,
    "content": "package at.a1ta.cuco.admin.ui.common.client.ui;\n\nimport com.google.gwt.user.client.ui.Grid;\n\nimport at.a1ta.bite.core.shared.dto.systemmessage.SystemMessage;\nimport at.a1ta.framework.gxt.ui.Util;\nimport at.a1ta.framework.ui.client.ErrorHandler;\nimport at.a1ta.framework.ui.client.command.BaseAsyncCallback;\nimport at.a1ta.framework.ui.client.service.ServiceLocator;\nimport at.a1ta.framework.ui.client.util.HtmlUtils;\nimport at.a1ta.framework.ui.client.util.Validator;\n\npublic class SystemMessagePreviewComponent extends Grid {\n  public SystemMessagePreviewComponent(final long messageId) {\n    super(2, 1);\n\n    ServiceLocator.getSystemMessageService().getMessageById(messageId, new BaseAsyncCallback<SystemMessage>() {\n      @Override\n      public void onFailure(Throwable caught) {\n        ErrorHandler.onError(\"Server ist nicht erreichbar. Bitte nochmals versuchen\", caught);\n      }\n\n      @Override\n      public void onSuccess(SystemMessage result) {\n        boolean hasImage = !Validator.isNullOrEmpty(result.getMessageContent().getImageUri());\n        setHTML(0, 0, HtmlUtils.getBold(result.getMessageContent().getTitle()));\n        String content = \"<img height=\\\"150\\\" style=\\\"float: left; margin-right: 10px; margin-bottom: 10px; + \"\n            + (hasImage ? \"\" : \"display:none;\") + \")\\\" src=\\\"\" + Util.getExtImgPath() + result.getMessageContent().getImageUri() + \"\\\">\"\n            + \"\" + result.getMessageContent().getText();\n        setHTML(1, 0, content);\n      }\n    });\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/bundle/AdminCommonTextPool.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/bundle/AdminCommonTextPool.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 18902,
    "content": "package at.a1ta.cuco.admin.ui.common.client.bundle;\n\nimport at.a1ta.bite.ui.client.generator.textpool.Prefix;\nimport at.a1ta.bite.ui.client.generator.textpool.TextPool;\n\n@Prefix(\"admin_\")\npublic interface AdminCommonTextPool extends TextPool {\n\n  String loading();\n\n  String noData();\n\n  String error();\n\n  String yes();\n\n  String no();\n\n  String info();\n\n  String save();\n\n  String cancel();\n\n  String delete();\n\n  String deleteQuestion(String name);\n\n  String deleted(String name);\n\n  String saved(String name);\n\n  String manage();\n\n  String segSettingsName();\n\n  String segSettingsDescription();\n\n  /* VIP */\n  String vipAmount();\n\n  String vipBtnExport();\n\n  String vipBtnSearch();\n\n  String vipCreated();\n\n  String vipCustomerID();\n\n  String vipFrom();\n\n  String vipName();\n\n  String vipReporter();\n\n  String vipSearch();\n\n  String vipSearchTooltip();\n\n  String vipSearchItem();\n\n  String vipStatus();\n\n  String vipTo();\n\n  String vipAdminStatus();\n\n  /* System messages */\n  String systemMessageHeader();\n\n  String smActive();\n\n  String smCopy();\n\n  String smDeleteImage();\n\n  String smEditMessage();\n\n  String smFrom();\n\n  String smId();\n\n  String smImage();\n\n  String smImageFile();\n\n  String smInactive();\n\n  String smNewMessage();\n\n  String smOptions();\n\n  String smOptionsOneTime();\n\n  String smOptionsOnlyMenue();\n\n  String smPickImage();\n\n  String smPreview();\n\n  String smRoles();\n\n  String smText();\n\n  String smTitle();\n\n  String smUntil();\n\n  String smValidity();\n\n  /* Check usage */\n  String checkUsageAction();\n\n  String checkUsageCustomerRequestOverview();\n\n  String checkUsageDate();\n\n  String checkUsageDistinct();\n\n  String checkUsageLoginOverview();\n\n  String checkUsageName();\n\n  String checkUsageOperation();\n\n  String checkUsageTotal();\n\n  String checkUsageUuser();\n\n  /* Reporting */\n  String reportingButtonLoad();\n\n  String reportingLabelJumpto();\n\n  String reportingGridHeadId();\n\n  String reportingGridHeadName();\n\n  String reportingGridHeadQuery();\n\n  String reportingGridHeadLongrunning();\n\n  /* Ibatis */\n  String administrationIbatisClearall();\n\n  String administrationIbatisClearallDone();\n\n  String administrationIbatisClearDone();\n\n  String administrationIbatisFlush();\n\n  String administrationIbatisColumnName();\n\n  /* Team */\n  String teamAddMember();\n\n  String teamName();\n\n  String teamNtAccount();\n\n  String teamOe();\n\n  String teamDelete();\n\n  String teamTeam();\n\n  String teamAddMemberError();\n\n  String teamDeleteMemberQuestion();\n\n  String teamDeleteTeammember();\n\n  String teamDeleteText();\n\n  String teamDeleteError();\n\n  String teamAdd();\n\n  String teamDesc();\n\n  String teamCreation();\n\n  String teamCreateDate();\n\n  String teamDeleteTeamQuestion();\n\n  String teamDeleteTeam();\n\n  String teamAddService();\n\n  String teamService();\n\n  String teamCosts();\n\n  String teamAddServiceError();\n\n  String teamDeleteServiceQuestion();\n\n  String teamDeleteService();\n\n  String teamSelectServiceHeading();\n\n  String teamButtonAdd();\n\n  String teamButtonDelete();\n\n  String teamSelectMemberDialog();\n\n  String teamDialogNameLabel();\n\n  String teamDialogDescriptionLabel();\n\n  /* Import User-Shop Assignment */\n\n  String importusershopdata_selectimportfile();\n\n  String importusershopdata_logerase();\n\n  String importusershopdata_logdownload();\n\n  String importusershopdata_logentries();\n\n  String importusershopdata_logfilename();\n\n  String importusershopdata_fileseperator();\n\n  /* Unknown area code */\n  String unknownareacodeNew();\n\n  String unknownareacodeGridColumnName();\n\n  String unknownareacodeGridColumnDescription();\n\n  String unknownareacodeGridColumnDelete();\n\n  String unknownareacodeDeleteQuestion();\n\n  String unknownareacodeLabel();\n\n  String unknownareacodeMessageDelete();\n\n  String unknownareacodeMessageSave();\n\n  String unknownareacodeDialogHeading();\n\n  String unknownareacodeDialogNameLabel();\n\n  String unknownareacodeDialogDescriptionLabel();\n\n  String unknownareacodeDialogValidation();\n\n  /* Credit type */\n  String credittypeNew();\n\n  String credittypeGridColumnName();\n\n  String credittypeGridColumnDescription();\n\n  String credittypeGridColumnActive();\n\n  String credittypeGridColumnDelete();\n\n  String credittypeDeleteQuestion();\n\n  String credittypeLabel();\n\n  String credittypeMessageDelete();\n\n  String credittypeMessageSave();\n\n  String credittypeDialogHeading();\n\n  String credittypeDialogNameLabel();\n\n  String credittypeDialogDescriptionLabel();\n\n  String credittypeDialogActivLabel();\n\n  String credittypeDialogValidation();\n\n  /* Services */\n  String serviceDialogHeading();\n\n  String serviceDialogCpServicedata();\n\n  String serviceDialogFromLabel();\n\n  String serviceDialogToLabel();\n\n  String serviceDialogNameLabel();\n\n  String serviceDialogDescription();\n\n  String serviceDialogEmployeeinfo();\n\n  String serviceDialogCpChargingdata();\n\n  String serviceDialogCostsLabel();\n\n  String serviceDialogCostsTooltip();\n\n  String serviceDialogMultiLabel();\n\n  String serviceDialogProductcodeLabel();\n\n  String serviceDialogChargingtypeLabel();\n\n  String serviceDialogCredittypeLabel();\n\n  String serviceDialogCpClarifydata();\n\n  String serviceDialogReason3Value();\n\n  String serviceDialogProductLabel();\n\n  String serviceDialogReason1Label();\n\n  String serviceDialogReason2Label();\n\n  String serviceDialogReason3Label();\n\n  String serviceDialogResultLabel();\n\n  String serviceDialogValidation();\n\n  String serviceDialogValidationCosts();\n\n  String serviceDialogValidationMulti();\n\n  String serviceNew();\n\n  String serviceGridColumnName();\n\n  String serviceGridColumnFrom();\n\n  String serviceGridColumnTo();\n\n  String serviceGridColumnCosts();\n\n  String serviceGridColumnDelete();\n\n  String serviceDeleteQuestion();\n\n  String serviceLabel();\n\n  String serviceMessageDelete();\n\n  String serviceMessageSave();\n\n  /* Authority configuration */\n  String authName();\n\n  String authGridColumnId();\n\n  String authGridColumnName();\n\n  String authGridColumnDescription();\n\n  String authGridColumnApp();\n\n  String authGridColumnDelete();\n\n  /* Configuration */\n  String configName();\n\n  String configGridColumnKey();\n\n  String configGridColumnValue();\n\n  String configGridColumnType();\n\n  String configGridColumnApp();\n\n  String configGridColumnSensitive();\n\n  String configGridColumnDelete();\n\n  /* App configuration portlet */\n  String appName();\n\n  String appGridColumnTabs();\n\n  String appGridColumnId();\n\n  String appGridColumnName();\n\n  String appGridColumnShort();\n\n  String appGridColumnType();\n\n  String appGridColumnDelete();\n\n  String messageboxDelete();\n\n  String messageboxSave();\n\n  String messageboxDeleteError();\n\n  String messageboxSaveError();\n\n  String dialogSave();\n\n  String dialogUse();\n\n  String dialogCancel();\n\n  String rtcodeSave();\n\n  String rtcodeSaveDone();\n\n  String rtcodeSaveError();\n\n  String uitexts_searchData();\n\n  String uitexts_saveData();\n\n  String uitexts_resetData();\n\n  String uitexts_changes();\n\n  String uitexts_searchInfo();\n\n  String uitexts_changesFailed(String errorcount);\n\n  String uitexts_sendEmailFailed();\n\n  String uitexts_changesFailedDetails(String key, String value);\n\n  String uitexts_changesDone(String amount);\n\n  String uitexts_UIkey();\n\n  String uitexts_UIvalue();\n\n  String uitexts_cancelSave();\n\n  String uitexts_acceptSave();\n\n  String uitexts_confirmationSave(String amount);\n\n  String adminGotoCuCo();\n\n  // new product overview configurations\n  String productBrowserTableViewAdminMenuName();\n\n  String productBrowserTableViewAmountOfSubscriptionToPreloadLabel();\n\n  String productBrowserTableViewDepthOfProductTreeLabel();\n\n  String productBrowserTableViewModeLabel();\n\n  String productBrowserTableViewWhitelistLabel();\n\n  String productBrowserTableViewBlacklistLabel();\n\n  String productBrowserTableViewWhitelist();\n\n  String productBrowserTableViewBlacklist();\n\n  String productBrowserTableViewWhitelistChoiceLabel();\n\n  String productBrowserTableViewBlacklistChoiceLabel();\n\n  String reset();\n\n  // Visit Product Entries Tab\n\n  String productEntries_administration_newProductEntry();\n\n  String productEntries_categorieColumn();\n\n  String productEntries_nameColumn();\n\n  String productEntries_aliasColumn();\n\n  String productEntries_activationColumn();\n\n  String productEntries_OrderToColumn();\n\n  String productEntries_ProductId();\n\n  String productEntries_ProductAlternativeId();\n\n  String productEntries_ProductDisplayName();\n\n  String productEntries_ProductCategory();\n\n  String productEntries_Active();\n\n  String productEntries_Sequence();\n\n  String productEntries_SetupType();\n\n  String productEntries_SetupCategory();\n\n  String productEntries_QuoteStatus();\n\n  String productEntries_AssigneeType();\n\n  String productEntries_DefaultConfig();\n\n  String productEntries_SINoteClass();\n\n  String productEntries_SaveButtonText();\n\n  String productEntries_NewSBSProductEntryButtonText();\n\n  String productEntries_columnKey();\n\n  String productEntries_columnValue();\n\n  String productEntries_typeOfContractsColumn();\n\n  String featureSegDisplay1Label();\n\n  String featureSegDisplay2Label();\n\n  String featureSegDisplay3Label();\n\n  String featureSegDisplay4Label();\n\n  String featureSegDisplay5Label();\n\n  // Org-Structure Tab\n\n  String importCalcOrgStructure();\n\n  String exportUserId();\n\n  String exportUserName();\n\n  String exportRole();\n\n  String exportLevel();\n\n  String exportTeam();\n\n  String exportSAPId();\n\n  String exportSupervisorID();\n\n  String exportSupervisorName();\n\n  String portletOrgStructureInfo();\n\n  String portletOrgStructureSuccessMessage();\n\n  String portletOrgStructureWaitingMessage();\n\n  String portletOrgStructureErrorFileStructureMessage();\n\n  String portletOrgStructureUnknownErrorMessage();\n\n  String portletOrgStructureMissingRights();\n\n  String portletOrgStructureFailureReportMessage();\n\n  String portletOrgStructureErrorReportGenerationFailure();\n\n  String portletOrgStructureFailureUserNotInDB();\n\n  String portletOrgStructureFailureSupervisorNotInDB();\n\n  String portletOrgStructureFailureSupervisorNotInUserList();\n\n  String portletOrgStructureFailureMultipleSheetsInXLS();\n\n  String portletOrgStructureFailureHeadersMismatch();\n\n  String marketingProduct_NameColumn();\n\n  String marketingProduct_ValueColumn();\n\n  String marketingProduct_TooltipColumn();\n\n  String marketingProduct_UrlColumn();\n\n  String marketingProduct_BindingColumn();\n\n  String marketingProduct_BillingFrequencyColumn();\n\n  String marketingProduct_SaleProductPriceColumn();\n\n  String marketingProduct_SaleOneTimePriceColumn();\n\n  String marketingProduct_LeaseProductPriceColumn();\n\n  String marketingProduct_LeaseOneTimePriceColumn();\n\n  String marketingProduct_SaleTypeValueSale();\n\n  String marketingProduct_SaleTypeValueLease();\n\n  String marketingProduct_AddColumnBaseMarketingProduct();\n\n  String marketingProduct_AddColumnGroup();\n\n  String marketingProduct_ActionColumnEdit();\n\n  String marketingProduct_ActionColumnExpand();\n\n  String marketingProduct_ActionColumnCollapse();\n\n  String marketingProduct_ActionColumnMoveDown();\n\n  String marketingProduct_ActionColumnMoveUp();\n\n  String marketingProduct_ActionColumnEnable();\n\n  String marketingProduct_ActionColumnDelete();\n\n  String marketingProduct_DeleteDialogMessageDeleteBaseMarketingProduct();\n\n  String marketingProduct_DeleteDialogMessageDeleteGroup();\n\n  String marketingProduct_DialogAddGroupLabel();\n\n  String marketingProduct_DialogEditGroupLabel();\n\n  String marketingProduct_DialogEditMarketingProductLabel();\n\n  String marketingProduct_DialogAddMarketingProductLabel();\n\n  String marketingProduct_DialogMarketingProductName();\n\n  String marketingProduct_DialogMarketingProductValue();\n\n  String marketingProduct_DialogMarketingProductMinQuantity();\n\n  String marketingProduct_DialogMarketingProductMaxQuantity();\n\n  String marketingProduct_DialogMarketingProductBinding();\n\n  String marketingProduct_DialogMarketingProductBillingFrequency();\n\n  String marketingProduct_DialogMarketingProductUrl();\n\n  String marketingProduct_DialogMarketingGroupName();\n\n  String marketingProduct_DialogMarketingProductTooltip();\n  \n  String marketingProduct_DialogMarketingProductInfoText();\n\n  String marketingProduct_DialogMarketingProductPrice();\n\n  String marketingProduct_DialogMarketingProductOneTimePrice();\n\n  String marketingProduct_DialogMarketingProductDiscount();\n\n  String marketingProduct_DialogMarketingProductSalesType();\n\n  String marketingProduct_DialogNameIsEmptyErrorMessage();\n\n  String marketingProduct_DialogSaveButton();\n\n  String marketingProduct_DialogCancelButton();\n\n  String marketingProduct_DialogInvalidPriceErrorMessage();\n\n  String marketingProduct_DialogInvalidDiscountErrorMessage();\n\n  String marketingProduct_DialogInvalidDiscountPercentErrorMessage();\n\n  String marketingProduct_AddNewProductButtonText();\n\n  String marketingProduct_ExpandAllProductsButtonText();\n\n  String marketingProduct_CollapseAllProductsButtonText();\n\n  String marketingProduct_LoadProductsErrorMessage();\n\n  String marketingProduct_AddBaseMarketingProductErrorMessage();\n\n  String marketingProduct_EditBaseMarketingProductErrorMessage();\n\n  String marketingProduct_DeleteBaseMarketingProductErrorMessage();\n\n  String marketingProduct_DisableBaseMarketingProductErrorMessage();\n\n  String marketingProduct_MoveBaseMarketingProductErrorMessage();\n\n  String marketingProduct_DeleteDialogDeleteButton();\n\n  String marketingProduct_DeleteDialogDisableButton();\n\n  String marketingProduct_DeleteDialogCancelButton();\n\n  String daas_MaxDiscountLabel();\n\n  String daas_SurchargeConfig();\n\n  String daas_DevicesHeading();\n\n  String daas_OptionsHeading();\n\n  String daas_DiscountColumn();\n\n  String daas_SurchargeColumn();\n\n  String daas_AddSurcharge();\n\n  String daas_DiscountEmpty();\n\n  String daas_SurchargeEmpty();\n\n  String daas_LoadPriceConfigErrorMessage();\n\n  String daas_SavePriceConfigErrorMessage();\n\n  String daas_DiscountPriceConfigExistsErrorMessage();\n\n  // clone products dialog\n\n  String marketplaceProduct_DialogCloneProducts_product_name_label();\n\n  String marketplaceProduct_DialogCloneProducts_product_offering_label();\n\n  String marketplaceProduct_DialogCloneProducts_clone_product_label();\n\n  // configurableListSelector dialog\n\n  String configurableListSelector_ConfigurationTitle();\n\n  String configurableListSelector_DialogEditConfigurableListSelectorLabel();\n\n  String configurableListSelector_DialogCreateConfigurableListSelectorLabel();\n\n  String configurableListSelector_DialogValueIsEmptyErrorMessage();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorValue();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorKey();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorFilterForValues();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorButtonName();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorTooltip();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorOfficialName();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorOverviewName();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorCuscoId();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorDefaultValue();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorMonthlyPrice();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorYearlyPrice();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorOneTimePrice();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorDiscountPrice();\n\n  String dialogConfigurableListSelector_DialogConfigurableListSelectorDiscountPercent();\n\n  String dialogConfigurableListSelector_DialogSaveButton();\n\n  String dialogConfigurableListSelector_DialogCancelButton();\n\n  String configurableListSelector_FieldLabel();\n\n  String configurableListSelector_AddButton();\n\n  String configurableListSelector_SaveButton();\n\n  String configurableListSelector_ProductSearchPlaceholder();\n\n  String configurableListSelector_ProductSearch();\n\n  String configurableListSelector_ProductResetSearch();\n\n  String configurableListSelector_LoadError();\n\n  String configurableListSelector_SaveError();\n\n  String configurableListSelector_ProductInstanceSaved();\n\n  String configurableListSelector_Value();\n\n  String configurableListSelector_FilterForValues();\n\n  String configurableListSelector_ButtonName();\n\n  String configurableListSelector_Tooltip();\n\n  String configurableListSelector_OfficialName();\n\n  String configurableListSelector_OverviewName();\n\n  String configurableListSelector_CuscoId();\n\n  String configurableListSelector_DefaultValue();\n\n  String configurableListSelector_MonthlyPrice();\n\n  String configurableListSelector_YearlyPrice();\n\n  String configurableListSelector_OneTimePrice();\n\n  String configurableListSelector_Discount();\n\n  String configurableListSelector_DiscountTo();\n\n  String configurableListSelector_DiscountFrom();\n\n  String configurableListSelector_TooltipMoveDown();\n\n  String configurableListSelector_TooltipMoveUp();\n\n  String configurableListSelector_TooltipEdit();\n\n  String configurableListSelector_TooltipDelete();\n\n  String configurableListSelector_DeletePopupMessage();\n\n  String configurableListSelector_Enable();\n\n  String configurableListSelector_Disable();\n\n  String cct_bfw_v1_BusinessCase_label();\n\n  String cct_bfw_v1_Access_label();\n\n  String cct_bfw_v1_A1BusinessFirewall_label();\n\n  String cct_bfw_v1_AdvancedRemoteAccess_label();\n\n  String cct_bfw_v1_Sla_label();\n\n  String cct_bfw_v1_Monitoring_label();\n\n  String cct_bfw_v1_MinimumContractPeriod_label();\n\n  String cct_a1bip_v1_GeneralSection_BusinessCase_label();\n\n  String cct_a1bip_v1_GeneralSection_OanGpon_label();\n\n  String cct_a1bip_v1_GeneralSection_ContractChange_label();\n\n  String cct_a1bip_v1_GeneralSection_AddMeinA1BusinessRegistration_label();\n\n  String cct_a1bip_v1_GeneralSection_Transfer_label();\n\n  String cct_a1bip_v1_GeneralSection_PrintAllContractPeriods_label();\n\n  String cct_a1bip_v1_GeneralSection_ContractPeriod_label();\n\n  String cct_a1bip_v1_BIPSection_TopService_label();\n\n  String cct_a1bip_v1_BIPSection_Speed_label();\n\n  String cct_a1bip_v1_BIPSection_AdditionalOptions_label();\n\n  String cct_a1bip_v1_BIPSection_ContractPeriod_label();\n\n  String cct_a1bip_v1_BIPSection_VpnAccess_label();\n\n  String cct_a1bip_v1_BIPSection_RouterConfig_label();\n\n  String cct_a1bip_v1_BIPSection_AdditionalIpPackets_label();\n\n  String cct_a1bip_v1_BusinessFirewallSection_A1BusinessFirewall_label();\n\n  String cct_a1bip_v1_BusinessFirewallSection_AdvancedRemoteAccess_label();\n\n  String cct_a1bip_v1_BusinessFirewallSection_Sla_label();\n\n  String cct_a1bip_v1_BusinessFirewallSection_Monitoring_label();\n\n  String cct_a1bip_v1_BusinessFirewallSection_MinimumContractPeriod_label();\n\n  String cct_a1bip_v1_BIPSection_ShowBusinessFirewall_label();\n\n  String cct_a1bip_v1_GeneralSection_ConfirmMcd_label();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/bundle/AdminUI.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/bundle/AdminUI.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 380,
    "content": "package at.a1ta.cuco.admin.ui.common.client.bundle;\n\nimport com.google.gwt.core.client.GWT;\n\nimport at.a1ta.cuco.admin.ui.common.client.bundle.configuration.CuCoConfiguration;\n\npublic class AdminUI {\n  public static final AdminCommonTextPool ADMINCOMMONTEXTPOOL = GWT.create(AdminCommonTextPool.class);\n\n  public static final CuCoConfiguration CONFIG = new CuCoConfiguration();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/bundle/configuration/SettingsManager.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/bundle/configuration/SettingsManager.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 569,
    "content": "package at.a1ta.cuco.admin.ui.common.client.bundle.configuration;\n\nimport java.util.Map;\n\npublic class SettingsManager {\n  private static Map<String, String> settings;\n\n  public static void setSettings(Map<String, String> settings) {\n    SettingsManager.settings = settings;\n  }\n\n  public String readString(String key) {\n    return settings.get(key);\n  }\n\n  private Integer readInteger(String key) {\n    String val = settings.get(key);\n    return new Integer(Integer.parseInt(val));\n  }\n\n  public int readInt(String key) {\n    return readInteger(key).intValue();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/bundle/configuration/CuCoConfiguration.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/bundle/configuration/CuCoConfiguration.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 472,
    "content": "package at.a1ta.cuco.admin.ui.common.client.bundle.configuration;\n\npublic class CuCoConfiguration extends SettingsManager {\n  public int applicationPagingSize() {\n    return readInt(\"application_pagingSize\");\n  }\n\n  public boolean segImportWriteCustomerInteractions() {\n    try {\n      final String s = readString(\"segimport_writeCustomerInteractions\");\n      return s == null ? false : Boolean.parseBoolean(s);\n    } catch (Exception e) {\n      return false;\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UnknownAreaCodeServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UnknownAreaCodeServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 610,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@RemoteServiceRelativePath(\"cuco/unknownAreaCode.rpc\")\npublic interface UnknownAreaCodeServlet extends RemoteService {\n  public ArrayList<UnknownAreaCode> getAllUnknownAreaCodes();\n\n  public UnknownAreaCode saveUnknownAreaCode(UnknownAreaCode code);\n\n  public RpcStatus deleteUnknownAreaCode(Long id);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/SystemTrackingServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/SystemTrackingServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 575,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\n@RemoteServiceRelativePath(\"cuco/systemTracking.rpc\")\npublic interface SystemTrackingServlet extends RemoteService {\n  public ArrayList<BaseModelData> loadAnalysis4logon();\n\n  public ArrayList<BaseModelData> loadAnalysis4customerRequest();\n\n  public ArrayList<BaseModelData> loadDetails4date(String date, String uuser);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/CCTOrgStructureElementServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/CCTOrgStructureElementServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 555,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\n@RemoteServiceRelativePath(\"cuco/cctorgstructureelement.rpc\")\npublic interface CCTOrgStructureElementServlet extends RemoteService {\n\n  List<String> getAllUsers();\n\n  public void eraseOldEntries();\n\n  void updateCCTOrg(ArrayList<CCTOrgStructureElement> user);\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/CommonServiceLocator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/CommonServiceLocator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1809,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport com.google.gwt.core.client.GWT;\n\npublic final class CommonServiceLocator {\n\n  private static SystemTrackingServletAsync systemTrackingServlet;\n  private static UserRoleServletAsync roleServlet;\n  private static ServiceServletAsync serviceServlet;\n  private static UnknownAreaCodeServletAsync unknownAreaCode;\n  private static VIPHistoryServletAsync vipHistoryServlet;\n  private static UserShopAssignmentServletAsync userShopAssignmentServlet;\n\n  private CommonServiceLocator() {}\n\n  public static SystemTrackingServletAsync getSystemTrackingServlet() {\n    if (systemTrackingServlet == null) {\n      systemTrackingServlet = GWT.create(SystemTrackingServlet.class);\n    }\n    return systemTrackingServlet;\n  }\n\n  public static UserRoleServletAsync getRoleServlet() {\n    if (roleServlet == null) {\n      roleServlet = GWT.create(UserRoleServlet.class);\n    }\n    return roleServlet;\n  }\n\n  public static ServiceServletAsync getServiceServlet() {\n    if (serviceServlet == null) {\n      serviceServlet = GWT.create(ServiceServlet.class);\n    }\n    return serviceServlet;\n  }\n\n  public static UnknownAreaCodeServletAsync getUnknownAreaCodeServlet() {\n    if (unknownAreaCode == null) {\n      unknownAreaCode = GWT.create(UnknownAreaCodeServlet.class);\n    }\n    return unknownAreaCode;\n  }\n\n  public static VIPHistoryServletAsync getVIPHistoryServlet() {\n    if (vipHistoryServlet == null) {\n      vipHistoryServlet = GWT.create(VIPHistoryServlet.class);\n    }\n    return vipHistoryServlet;\n  }\n\n  public static UserShopAssignmentServletAsync getUserShopAssignmentServlet() {\n    if (userShopAssignmentServlet == null) {\n      userShopAssignmentServlet = GWT.create(UserShopAssignmentServlet.class);\n    }\n    return userShopAssignmentServlet;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/VIPHistoryServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/VIPHistoryServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 488,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.cuco.core.shared.dto.VIPHistoryEntry;\n\n@RemoteServiceRelativePath(\"cuco/vipHistory.rpc\")\npublic interface VIPHistoryServlet extends RemoteService {\n  public List<VIPHistoryEntry> getVIPHistory(Date from, Date to, String searchTerm, String vipStatus);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/VIPHistoryServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/VIPHistoryServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 379,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.cuco.core.shared.dto.VIPHistoryEntry;\n\npublic interface VIPHistoryServletAsync {\n  void getVIPHistory(Date from, Date to, String searchTerm, String vipStatus, AsyncCallback<List<VIPHistoryEntry>> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UserShopAssignmentServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UserShopAssignmentServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1056,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignment;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\n@RemoteServiceRelativePath(\"cuco/usershopassignment.rpc\")\npublic interface UserShopAssignmentServlet extends RemoteService {\n\n  // select\n  public List<UserShopAssignment> getUserShopAssignments();\n\n  public HashMap<String, String> getUserShopAssignmentsForUserManagement();\n\n  public List<UserShopAssignmentLogLine> getLogEntries();\n\n  public Integer getLogEntriesCount();\n\n  public List<String> getUserNamesForAssignments();\n\n  public List<String> getAssignedShopIDs();\n\n  // insert\n  public void insertLogEntry(UserShopAssignmentLogLine logline);\n\n  public void insertUserShopAssignment(UserShopAssignment assignment);\n\n  // delete\n  public void purgeLogEntries();\n\n  public void purgeUserShopAssignments();\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UserShopAssignmentServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UserShopAssignmentServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1131,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignment;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\npublic interface UserShopAssignmentServletAsync {\n\n  // select\n  void getUserShopAssignments(AsyncCallback<List<UserShopAssignment>> callback);\n\n  void getUserShopAssignmentsForUserManagement(AsyncCallback<HashMap<String, String>> callback);\n\n  void getLogEntries(AsyncCallback<List<UserShopAssignmentLogLine>> callback);\n\n  void getLogEntriesCount(AsyncCallback<Integer> callback);\n\n  void getUserNamesForAssignments(AsyncCallback<List<String>> callback);\n\n  void getAssignedShopIDs(AsyncCallback<List<String>> callback);\n\n  // insert\n  void insertLogEntry(UserShopAssignmentLogLine logline, AsyncCallback<Void> callback);\n\n  void insertUserShopAssignment(UserShopAssignment assignment, AsyncCallback<Void> callback);\n\n  // delete\n  void purgeLogEntries(AsyncCallback<Void> callback);\n\n  void purgeUserShopAssignments(AsyncCallback<Void> callback);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UserRoleServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UserRoleServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1483,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.bite.core.shared.UnknownUsernameException;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.bite.core.shared.dto.security.RoleGroup;\nimport at.a1ta.bite.core.shared.dto.security.RoleWithGroup;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@RemoteServiceRelativePath(\"cuco/role.rpc\")\npublic interface UserRoleServlet extends RemoteService {\n\n  public RpcStatus deleteRoleGroup(Long roleGroupId);\n\n  public ArrayList<RoleGroup> getAllRoleGroups();\n\n  public ArrayList<Role> getAllRoles(long[] apps);\n\n  public ArrayList<Role> getAllRolesForSysMsg(Long userId);\n\n  public ArrayList<RoleWithGroup> getAllRolesWithGroup(Long groupId);\n\n  public ArrayList<String> getAllRolesNamesForGroup(String groupName);\n\n  public ArrayList<Role> getRolesInGroupsForUser(Long userId);\n\n  public UserInfo getUser(String username);\n\n  public ArrayList<BiteUser> searchUsers(String username, String firstName, String lastName);\n\n  public UserInfo getUserWithRoles(String username) throws UnknownUsernameException;\n\n  public RoleGroup saveRoleGroup(RoleGroup roleGroup);\n\n  public UserInfo saveUser(UserInfo user);\n\n  public RpcStatus saveUsers(ArrayList<UserInfo> users);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UnknownAreaCodeServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UnknownAreaCodeServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 561,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\npublic interface UnknownAreaCodeServletAsync {\n  public void getAllUnknownAreaCodes(AsyncCallback<ArrayList<UnknownAreaCode>> callback);\n\n  public void saveUnknownAreaCode(UnknownAreaCode code, AsyncCallback<UnknownAreaCode> callback);\n\n  public void deleteUnknownAreaCode(Long id, AsyncCallback<RpcStatus> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/SystemTrackingServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/SystemTrackingServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 525,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\npublic interface SystemTrackingServletAsync {\n  public void loadAnalysis4logon(AsyncCallback<ArrayList<BaseModelData>> callback);\n\n  public void loadAnalysis4customerRequest(AsyncCallback<ArrayList<BaseModelData>> callback);\n\n  public void loadDetails4date(String date, String uuser, AsyncCallback<ArrayList<BaseModelData>> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/ServiceServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/ServiceServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 557,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\npublic interface ServiceServletAsync {\n  void deleteService(Long id, AsyncCallback<RpcStatus> callback);\n\n  void getAllServices(AsyncCallback<ArrayList<Service>> callback);\n\n  void saveService(Service ct, AsyncCallback<Service> callback);\n\n  void searchService(String service, AsyncCallback<ArrayList<Service>> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/ServiceServlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/ServiceServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 596,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.RemoteService;\nimport com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\n@RemoteServiceRelativePath(\"cuco/service.rpc\")\npublic interface ServiceServlet extends RemoteService {\n  public ArrayList<Service> getAllServices();\n\n  public Service saveService(Service ct);\n\n  public RpcStatus deleteService(Long id);\n\n  public ArrayList<Service> searchService(String service);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UserRoleServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/UserRoleServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1745,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.bite.core.shared.UnknownUsernameException;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.bite.core.shared.dto.security.RoleGroup;\nimport at.a1ta.bite.core.shared.dto.security.RoleWithGroup;\nimport at.a1ta.framework.ui.client.dto.RpcStatus;\n\npublic interface UserRoleServletAsync {\n\n  public void deleteRoleGroup(Long roleGroupId, AsyncCallback<RpcStatus> callback);\n\n  public void getAllRoleGroups(AsyncCallback<ArrayList<RoleGroup>> callback);\n\n  public void getAllRoles(long[] apps, AsyncCallback<ArrayList<Role>> callback);\n\n  public void getAllRolesForSysMsg(Long userId, AsyncCallback<ArrayList<Role>> callback);\n\n  public void getAllRolesWithGroup(Long groupId, AsyncCallback<ArrayList<RoleWithGroup>> callback);\n\n  public void getRolesInGroupsForUser(Long userId, AsyncCallback<ArrayList<Role>> callback);\n\n  public void getUser(String username, AsyncCallback<UserInfo> callback);\n\n  public void searchUsers(String username, String firstName, String lastName, AsyncCallback<ArrayList<BiteUser>> callback);\n\n  public void getUserWithRoles(String username, AsyncCallback<UserInfo> callback) throws UnknownUsernameException;\n\n  public void saveRoleGroup(RoleGroup roleGroup, AsyncCallback<RoleGroup> callback);\n\n  public void saveUser(UserInfo user, AsyncCallback<UserInfo> callback);\n\n  public void saveUsers(ArrayList<UserInfo> users, AsyncCallback<RpcStatus> callback);\n\n  public void getAllRolesNamesForGroup(String groupName, AsyncCallback<ArrayList<String>> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/CCTOrgStructureElementServletAsync.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/service/CCTOrgStructureElementServletAsync.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 498,
    "content": "package at.a1ta.cuco.admin.ui.common.client.service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\npublic interface CCTOrgStructureElementServletAsync {\n\n  public void getAllUsers(AsyncCallback<List<String>> callback);\n\n  void eraseOldEntries(AsyncCallback<Void> callback);\n\n  void updateCCTOrg(ArrayList<CCTOrgStructureElement> user, AsyncCallback<Void> callback);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddCreditTypeEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddCreditTypeEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 497,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport at.a1ta.cuco.core.shared.dto.CreditType;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class AddCreditTypeEvent extends PortletEvent {\n  private CreditType credit;\n\n  public CreditType getCredit() {\n    return credit;\n  }\n\n  public void setCredit(CreditType credit) {\n    this.credit = credit;\n  }\n\n  public AddCreditTypeEvent(CreditType ct) {\n    super(null, CuCoEventType.UPDATECREDIT_TYPES);\n    setCredit(ct);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/SelectRolesEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/SelectRolesEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 443,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class SelectRolesEvent extends PortletEvent {\n  private List<Role> roles;\n\n  public SelectRolesEvent(List<Role> roles) {\n    super(null, CuCoEventType.SELECT_ROLES);\n    this.roles = roles;\n  }\n\n  public List<Role> getRoles() {\n    return roles;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddTeamMemberEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddTeamMemberEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 675,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class AddTeamMemberEvent extends PortletEvent {\n\n  private List<ModelData<BiteUser>> teamMember;\n\n  public AddTeamMemberEvent(List<ModelData<BiteUser>> teamMember) {\n    super(null, CuCoEventType.ADDTEAM_MEMBERS);\n    setTeamMember(teamMember);\n  }\n\n  public List<ModelData<BiteUser>> getTeamMember() {\n    return teamMember;\n  }\n\n  public void setTeamMember(List<ModelData<BiteUser>> teamMember) {\n    this.teamMember = teamMember;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddUnknownAreaCodeEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddUnknownAreaCodeEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 525,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class AddUnknownAreaCodeEvent extends PortletEvent {\n  private UnknownAreaCode code;\n\n  public UnknownAreaCode getCode() {\n    return code;\n  }\n\n  public void setCode(UnknownAreaCode code) {\n    this.code = code;\n  }\n\n  public AddUnknownAreaCodeEvent(UnknownAreaCode code) {\n    super(null, CuCoEventType.UPDATEUNKNOWN_AREACODES);\n    setCode(code);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/GwtAddTeamMembersEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/GwtAddTeamMembersEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 693,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.ui.common.client.ui.ModelData;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class GwtAddTeamMembersEvent extends PortletEvent {\n\n  private List<ModelData<BiteUser>> teamMembers;\n\n  public GwtAddTeamMembersEvent(List<ModelData<BiteUser>> teamMembers) {\n    super(null, CuCoEventType.ADDTEAM_MEMBERS);\n    setTeamMembers(teamMembers);\n  }\n\n  public List<ModelData<BiteUser>> getTeamMembers() {\n    return teamMembers;\n  }\n\n  public void setTeamMembers(List<ModelData<BiteUser>> teamMembers) {\n    this.teamMembers = teamMembers;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddTeamEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddTeamEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 437,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport at.a1ta.cuco.core.shared.dto.Team;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class AddTeamEvent extends PortletEvent {\n  private Team team;\n\n  public Team getTeam() {\n    return team;\n  }\n\n  public void setTeam(Team team) {\n    this.team = team;\n  }\n\n  public AddTeamEvent(Team team) {\n    super(null, CuCoEventType.UPDATE_TEAMS);\n    setTeam(team);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/CuCoEventType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/CuCoEventType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 545,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport at.a1ta.framework.ui.client.event.PortletEventType;\n\npublic enum CuCoEventType implements PortletEventType {\n  PRODUCT_GROUPUPDATE, LOAD_MESSAGES, ROLE_UPDATE, SELECT_ROLES, UPDATE_USERS, UPDATE_USER, UPDATECREDIT_TYPES, UPDATE_SERVICES, UPDATE_TEAMS, ACTIVATE_TEAM, ADDTEAM_MEMBERS, ADD_SERVICES, REMOVE_SERVICES, UPDATEUNKNOWN_AREACODES, UPDATE_ROLEGROUP, UPDATE_AUTHORITY, UPDATE_TAB, UPDATE_MENU, SEG_SEARCH, SEGSEARCH_EXPORT, SEGIMPORT_MAPPINGUPDATE, SEGIMPORT_MAPPINGHIGHLIGHT;\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddServicesEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddServicesEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 583,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.admin.ui.common.client.dto.ServiceModel;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class AddServicesEvent extends PortletEvent {\n  private List<ServiceModel> services;\n\n  public AddServicesEvent(List<ServiceModel> services) {\n    super(null, CuCoEventType.ADD_SERVICES);\n    setServices(services);\n  }\n\n  public List<ServiceModel> getServices() {\n    return services;\n  }\n\n  public void setServices(List<ServiceModel> services) {\n    this.services = services;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/RemoveServicesEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/RemoveServicesEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 499,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class RemoveServicesEvent extends PortletEvent {\n  private Service service;\n\n  public RemoveServicesEvent(Service service) {\n    super(null, CuCoEventType.REMOVE_SERVICES);\n    setService(service);\n  }\n\n  public Service getService() {\n    return service;\n  }\n\n  public void setService(Service service) {\n    this.service = service;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddTeamMembersEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/AddTeamMembersEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 617,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseModelData;\n\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class AddTeamMembersEvent extends PortletEvent {\n  private List<BaseModelData> teamMembers;\n\n  public AddTeamMembersEvent(List<BaseModelData> teamMembers) {\n    super(null, CuCoEventType.ADDTEAM_MEMBERS);\n    setTeamMembers(teamMembers);\n  }\n\n  public List<BaseModelData> getTeamMembers() {\n    return teamMembers;\n  }\n\n  public void setTeamMembers(List<BaseModelData> teamMembers) {\n    this.teamMembers = teamMembers;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/RoleEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/RoleEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 427,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class RoleEvent extends PortletEvent {\n  public enum UpdateType {\n    insert, update\n  }\n\n  private Role role;\n\n  public RoleEvent(Role role) {\n    super(null, CuCoEventType.ROLE_UPDATE);\n    this.role = role;\n  }\n\n  public Role get() {\n    return role;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/ProductgroupEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/cuco/admin/ui/common/client/event/ProductgroupEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 615,
    "content": "package at.a1ta.cuco.admin.ui.common.client.event;\n\nimport at.a1ta.cuco.core.shared.dto.ProductGroup;\nimport at.a1ta.framework.ui.client.event.PortletEvent;\n\npublic class ProductgroupEvent extends PortletEvent {\n  public enum UpdateType {\n    insert, update, none\n  }\n\n  private ProductGroup group;\n  private UpdateType type;\n\n  public ProductgroupEvent(ProductGroup group, UpdateType type) {\n    super(null, CuCoEventType.PRODUCT_GROUPUPDATE);\n    this.group = group;\n    this.type = type;\n  }\n\n  public ProductGroup getGroup() {\n    return group;\n  }\n\n  public UpdateType getUpdateType() {\n    return type;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/PopupImplExtended.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/PopupImplExtended.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 360,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.core.XDOM;\nimport com.google.gwt.dom.client.Element;\nimport com.google.gwt.user.client.ui.impl.PopupImpl;\n\npublic class PopupImplExtended extends PopupImpl {\n\n  @Override\n  public void onShow(Element popup) {\n    super.onShow(popup);\n    popup.getStyle().setZIndex(XDOM.getTopZIndex());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/Util.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/Util.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 791,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.widget.toolbar.PagingToolBar;\n\npublic class Util {\n\n  public static String getExtImgPath() {\n    return \"extImg/\";\n  }\n\n  // if no min width is set, the width of the button is set to 0\n  // see: http://www.extjs.com/forum/showthread.php?t=89068\n  private static class PagingToolBarFix extends PagingToolBar {\n    private static final int minWidth = 22;\n\n    public PagingToolBarFix(int pageSize) {\n      super(pageSize);\n      first.setMinWidth(minWidth);\n      prev.setMinWidth(minWidth);\n      next.setMinWidth(minWidth);\n      last.setMinWidth(minWidth);\n      refresh.setMinWidth(minWidth);\n    }\n  }\n\n  public static PagingToolBar createPagingToolBar(int pagingSize) {\n    return new PagingToolBarFix(pagingSize);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/PopupImplMozillaExtended.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/PopupImplMozillaExtended.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 380,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.core.XDOM;\nimport com.google.gwt.dom.client.Element;\nimport com.google.gwt.user.client.ui.impl.PopupImplMozilla;\n\npublic class PopupImplMozillaExtended extends PopupImplMozilla {\n\n  @Override\n  public void onShow(Element popup) {\n    super.onShow(popup);\n    popup.getStyle().setZIndex(XDOM.getTopZIndex());\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/PagingGridContainer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/PagingGridContainer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1824,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.data.PagingLoader;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.toolbar.PagingToolBar;\n\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\n\n/**\n * Extending {@link GridContainer}, this class provides a content panel containing a grid with paging functionality.\n */\npublic class PagingGridContainer<T extends ListStore<U>, U extends ModelData> extends GridContainer<T, U> {\n\n  private final int pagingSize;\n\n  private final PagingToolBar pagingToolBar;\n\n  public PagingGridContainer(T store, ColumnModel cm, int pagingSize) {\n    this(store, cm, pagingSize, 0);\n    getGrid().setAutoHeight(true);\n  }\n\n  public PagingGridContainer(T store, ColumnModel cm, int pagingSize, int height) {\n    this(store, cm, pagingSize, height, false);\n  }\n\n  private PagingGridContainer(T store, ColumnModel cm, int pagingSize, int height, boolean editable) {\n    super(store, cm, height, editable);\n    this.pagingSize = pagingSize;\n    pagingToolBar = Util.createPagingToolBar(pagingSize);\n    pagingToolBar.bind((PagingLoader<?>) store.getLoader());\n    pagingToolBar.setMessages(new PagingToolBar.PagingToolBarMessages() {\n\n      @Override\n      public String getEmptyMsg() {\n        return AdminUI.ADMINCOMMONTEXTPOOL.noData();\n      }\n\n    });\n    setBottomComponent(pagingToolBar);\n  }\n\n  @Override\n  public void reconfigure(T store) {\n    super.reconfigure(store);\n    pagingToolBar.bind((PagingLoader<?>) store.getLoader());\n  }\n\n  public PagingToolBar getToolbar() {\n    return pagingToolBar;\n  }\n\n  public int getPagingSize() {\n    return pagingSize;\n  }\n\n  public void first() {\n    pagingToolBar.first();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/ProxyFilterField.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/ProxyFilterField.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1540,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.data.BaseListLoader;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.event.ComponentEvent;\nimport com.extjs.gxt.ui.client.widget.form.TriggerField;\n\n/**\n * @author q909158 This is a FilterField for FilterablePagingMemoryProxy.\n * @param <M>\n */\npublic abstract class ProxyFilterField<M> extends TriggerField<M> implements ProxyFilter<M> {\n  private BaseListLoader<?> loader;\n\n  public ProxyFilterField() {\n    setAutoValidate(true);\n    setValidateOnBlur(false);\n    setTriggerStyle(\"x-form-clear-trigger\");\n  }\n\n  /**\n   * @see at.telekom.webclient.cuco.client.util.ProxyFilter#bind(com.extjs.gxt.ui.client.data.BaseListLoader)\n   */\n  @Override\n  public void bind(BaseListLoader<?> loader) {\n    this.loader = loader;\n    try {\n\n      FilterableMemoryProxy proxy = (FilterableMemoryProxy) loader.getProxy();\n      proxy.addFilter(this);\n\n    } catch (ClassCastException e) {\n      throw new RuntimeException(\"ProxyFilterField can only be bound to FilterablePagingMemoryProxy\");\n    }\n  }\n\n  private void onClick() {\n    loader.load();\n  }\n\n  @Override\n  protected void onTriggerClick(ComponentEvent ce) {\n    super.onTriggerClick(ce);\n    if (getValue() == null || getValue().equals(\"\")) {\n      return;\n    }\n    setValue(null);\n  }\n\n  @Override\n  protected boolean validateValue(String value) {\n    boolean ret = super.validateValue(value);\n    onClick();\n    return ret;\n  }\n\n  @Override\n  public abstract boolean doFilter(ModelData m);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/ButtonRenderer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/ButtonRenderer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1466,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.event.ButtonEvent;\nimport com.extjs.gxt.ui.client.event.SelectionListener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnData;\nimport com.extjs.gxt.ui.client.widget.grid.Grid;\nimport com.extjs.gxt.ui.client.widget.grid.GridCellRenderer;\n\nimport at.a1ta.framework.ui.client.util.Validator;\n\npublic class ButtonRenderer implements GridCellRenderer<ModelData> {\n  private SelectionListener<ButtonEvent> listener;\n  private String caption = null;\n\n  public ButtonRenderer(SelectionListener<ButtonEvent> listener, String caption) {\n    this.listener = listener;\n    this.caption = caption;\n  }\n\n  @Override\n  public Object render(final ModelData model, String property, ColumnData config, final int rowIndex, final int colIndex,\n      final ListStore<ModelData> store, Grid<ModelData> grid) {\n    Button b = new Button((String) model.get(property)) {\n\n      @Override\n      public String getId() {\n        return String.valueOf(store.indexOf(model));\n      }\n\n    };\n    if (!Validator.isNull(caption)) {\n      b.setText(caption);\n    }\n    b.setItemId((String) model.get(property));\n    // b.setId(String.valueOf(rowIndex));\n    b.setWidth(grid.getColumnModel().getColumnWidth(colIndex) - 10);\n    b.addSelectionListener(listener);\n\n    return b;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/ProxyFilter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/ProxyFilter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 951,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.data.BaseListLoader;\nimport com.extjs.gxt.ui.client.data.ModelData;\n\n\n/**\n * @author q909158 Basic Interface for ProxyFilters\n * @param <M>\n */\npublic interface ProxyFilter<M> {\n\n    /**\n     * bins this instance to a loader. The loader.load method is called when this filter is validated.<br>\n     * The filter can only be bound to loader which have a FilterablePagingMemoryProxy otherwise this function will throw an Exception<br>\n     * \n     * @see at.telekom.webclient.cuco.client.util.ProxyFilter#bind(com.extjs.gxt.ui.client.data.BaseListLoader)\n     * @param loader\n     * @throws Exception if proxy is not an instance of FilterablePagingMemoryProxy\n     */\n    public void bind(BaseListLoader<?> loader) throws Exception;\n\n    /**\n     * @param m\n     * @return false if row should be filtered out\n     */\n    public boolean doFilter(ModelData m);\n\n    public M getValue();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/NumberFieldFixed.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/NumberFieldFixed.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 445,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.GXT;\nimport com.extjs.gxt.ui.client.event.FieldEvent;\nimport com.extjs.gxt.ui.client.widget.form.NumberField;\n\n/**\n * Workaround for an issue with number fields and GWT2.1. Current GXT version: 2.1.2\n */\npublic class NumberFieldFixed extends NumberField {\n\n  @Override\n  protected void onKeyPress(FieldEvent fe) {\n    if ( !GXT.isGecko) {\n      super.onKeyPress(fe);\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/DetailsDialog.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/DetailsDialog.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7228,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.event.ComponentEvent;\nimport com.extjs.gxt.ui.client.event.Events;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.widget.Component;\nimport com.extjs.gxt.ui.client.widget.Dialog;\nimport com.extjs.gxt.ui.client.widget.LayoutContainer;\nimport com.extjs.gxt.ui.client.widget.button.Button;\nimport com.extjs.gxt.ui.client.widget.button.ToolButton;\nimport com.google.gwt.core.client.Scheduler;\nimport com.google.gwt.core.client.Scheduler.ScheduledCommand;\nimport com.google.gwt.event.logical.shared.ResizeEvent;\nimport com.google.gwt.event.logical.shared.ResizeHandler;\nimport com.google.gwt.event.shared.HandlerRegistration;\nimport com.google.gwt.user.client.Window;\nimport com.google.gwt.user.client.Window.ScrollEvent;\nimport com.google.gwt.user.client.Window.ScrollHandler;\nimport com.google.gwt.user.client.ui.SimplePanel;\nimport com.google.gwt.user.client.ui.VerticalPanel;\nimport com.google.gwt.user.client.ui.Widget;\n\nimport at.a1ta.bite.core.shared.dto.PortletDefinition;\nimport at.a1ta.bite.ui.client.widget.WaitingWidget;\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\nimport at.a1ta.framework.ui.client.ui.ErrorWidgetHolder;\nimport at.a1ta.framework.ui.client.ui.TextWidget;\n\n/**\n * Base class for all detail views of the portlets. Consists of a card layout to switch between different contents:\n * <ul>\n * <li>showLoading() - shows the loading widget</li>\n * <li>showContent() - shows the normal content</li>\n * <li>showEmptyContent() - shows that no content exists</li>\n * <li>showError() - shows an error label</li>\n * </ul>\n */\npublic abstract class DetailsDialog extends Dialog implements ErrorWidgetHolder {\n\n  // GXT wrapper for rootPanel. Allows to re-parent the rootPanel (i.e. the wrapper) to other widgets. Re-parenting\n  // GWT widgets only work if current parent implements HasWidgets interface.\n  private LayoutContainer wrapper = new LayoutContainer();\n\n  private SimplePanel rootPanel;\n\n  private WaitingWidget loadingWidget;\n\n  private TextWidget emptyContent;\n\n  private VerticalPanel contentPanel;\n\n  private TextWidget errorWidget;\n\n  // indicates whether the data is dirty and the details should render again or only show\n  private boolean dirty = true;\n\n  private ScrollHandler scrollHandler;\n\n  private HandlerRegistration windowScrollHandler;\n\n  private ResizeHandler resizeHandler;\n\n  private HandlerRegistration windowResizeHandler;\n\n  private final PortletDefinition portletDefinition;\n\n  public DetailsDialog(PortletDefinition portletDefinition, String header) {\n    this.portletDefinition = portletDefinition;\n    setModal(true);\n    setFrame(true);\n    setHeading(header);\n    setClosable(true);\n    setButtons(CLOSE);\n    setBodyBorder(false);\n    setBorders(false);\n    setOnEsc(true);\n    setSize(950, 500);\n    setPlain(true);\n    setShim(false);\n\n    scrollHandler = new ScrollHandler() {\n\n      @Override\n      public void onWindowScroll(ScrollEvent event) {\n        Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n          @Override\n          public void execute() {\n            el().center();\n          }\n        });\n      }\n    };\n\n    resizeHandler = new ResizeHandler() {\n\n      @Override\n      public void onResize(ResizeEvent event) {\n        Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n          @Override\n          public void execute() {\n            el().center();\n          }\n        });\n      }\n    };\n\n    createContent();\n  }\n\n  private void createContent() {\n    rootPanel = new SimplePanel();\n    rootPanel.setSize(\"100%\", \"100%\");\n    wrapper.add(rootPanel);\n\n    WaitingWidget lw = new WaitingWidget(AdminUI.ADMINCOMMONTEXTPOOL.loading());\n    lw.setSize(\"100%\", \"100%\");\n    loadingWidget = lw;\n\n    emptyContent = createEmptyContentWidget();\n    contentPanel = new VerticalPanel();\n    contentPanel.setSize(\"100%\", \"100%\");\n    contentPanel.setSpacing(3);\n\n    errorWidget = new TextWidget(AdminUI.ADMINCOMMONTEXTPOOL.error());\n  }\n\n  @Override\n  protected void initTools() {\n\n    if (isPrintable()) {\n      ToolButton printBtn = new ToolButton(\"x-tool-print\");\n      printBtn.addListener(Events.Select, new Listener<ComponentEvent>() {\n\n        @Override\n        public void handleEvent(ComponentEvent ce) {\n          print();\n        }\n      });\n      head.addTool(printBtn);\n    }\n    super.initTools();\n  }\n\n  private boolean isPrintable() {\n    return false;\n  }\n\n  private void print() {}\n\n  @Override\n  protected void onHide() {\n    super.onHide();\n    windowScrollHandler.removeHandler();\n    windowResizeHandler.removeHandler();\n  }\n\n  @Override\n  protected void onShow() {\n    super.onShow();\n    windowScrollHandler = Window.addWindowScrollHandler(scrollHandler);\n    windowResizeHandler = Window.addResizeHandler(resizeHandler);\n  }\n\n  @Override\n  protected void afterShow() {\n    super.afterShow();\n    el().center(true);\n  }\n\n  public final void init() {\n    showLoading();\n    super.removeAll();\n\n    Widget top = createTopComponent();\n    if (top != null) {\n      super.add(top);\n    }\n    super.add(wrapper);\n    layout();\n    showLoading();\n\n    // getContentPanel().removeAll();\n    Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n      @Override\n      public void execute() {\n        createDetailsContent();\n        Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n          @Override\n          public void execute() {\n            layout(); // layout content\n          }\n        });\n      }\n    });\n\n  }\n\n  public LayoutContainer getRootContainer() {\n    return wrapper;\n  }\n\n  private Widget createTopComponent() {\n    return null;\n  }\n\n  protected VerticalPanel getContentPanel() {\n    return contentPanel;\n  }\n\n  public void showLoading() {\n    loadingWidget.setSize(\"100%\", \"100%\");\n    rootPanel.setWidget(loadingWidget);\n  }\n\n  protected void showEmptyContent() {\n    emptyContent.setSize(\"100%\", \"100%\");\n    rootPanel.setWidget(emptyContent);\n  }\n\n  public void showContent() {\n    Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n      @Override\n      public void execute() {\n        contentPanel.setSize(\"100%\", \"100%\");\n        rootPanel.setWidget(contentPanel);\n        // contentPanel.layout();\n      }\n    });\n  }\n\n  @Override\n  public void showError() {\n    errorWidget.setSize(\"100%\", \"100%\");\n    rootPanel.setWidget(errorWidget);\n  }\n\n  @Override\n  public boolean add(Widget widget) {\n    contentPanel.add(widget);\n    return true;\n  }\n\n  @Override\n  public boolean add(Component c) {\n    contentPanel.add(c);\n    return true;\n  }\n\n  private TextWidget createEmptyContentWidget() {\n    return new TextWidget(getEmtpyWidgetLabel());\n  }\n\n  private String getEmtpyWidgetLabel() {\n    return AdminUI.ADMINCOMMONTEXTPOOL.noData();\n  }\n\n  protected abstract void createDetailsContent();\n\n  @Override\n  protected void onButtonPressed(Button button) {\n    hide(button);\n  }\n\n  public void setDirty(boolean dirty) {\n    this.dirty = dirty;\n  }\n\n  public boolean isDirty() {\n    return dirty;\n  }\n\n  public LayoutContainer getPrintContainer() {\n    return getRootContainer();\n  }\n\n  public PortletDefinition getPortletDefinition() {\n    return portletDefinition;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/FilterablePagingMemoryProxy.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/FilterablePagingMemoryProxy.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4456,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BasePagingLoadResult;\nimport com.extjs.gxt.ui.client.data.DataReader;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.data.PagingLoadConfig;\nimport com.extjs.gxt.ui.client.data.PagingLoadResult;\nimport com.extjs.gxt.ui.client.data.PagingModelMemoryProxy;\nimport com.extjs.gxt.ui.client.util.DefaultComparator;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\n/**\n * This is a PagingMemoryProxy capable of filtering the results. You can bind as many ProxyFilterFields as you want. But\n * increasing the amount of filters will decrease the performance as every row has to be validated by every filter.\n * \n * @author q909158\n */\npublic class FilterablePagingMemoryProxy extends PagingModelMemoryProxy implements FilterableMemoryProxy {\n\n  private List<ProxyFilter<?>> filters = new ArrayList<ProxyFilter<?>>();\n\n  /** Contains all models after filtering */\n  private List<? extends ModelData> filtered;\n\n  @SuppressWarnings(\"rawtypes\")\n  public FilterablePagingMemoryProxy(List data) {\n    super(data);\n  }\n\n  /**\n   * adds a filter to the proxy<br>\n   * this function should not be called by hand, but by the bind function of filters\n   * \n   * @param filter\n   */\n  @Override\n  public void addFilter(ProxyFilter<?> filter) {\n    filters.add(filter);\n  }\n\n  /**\n   * this is a direct copy of the load function of the basic class with the extension that it filters the rows with the\n   * ProxyFilters\n   * \n   * @see com.extjs.gxt.ui.client.data.PagingModelMemoryProxy#load(com.extjs.gxt.ui.client.data.DataReader, java.lang.Object,\n   *      com.google.gwt.user.client.rpc.AsyncCallback)\n   */\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  @Override\n  public void load(DataReader<PagingLoadResult<? extends ModelData>> reader, Object loadConfig,\n      AsyncCallback<PagingLoadResult<? extends ModelData>> callback) {\n    List<? extends ModelData> data = new ArrayList<ModelData>((Collection<ModelData>) getData());\n    final Comparator<Object> comparator = getComparator();\n\n    try {\n      if (reader != null) {\n        data = (List) reader.read(loadConfig, data);\n      }\n\n      // filters whom values are not null, increases performance\n      List<ProxyFilter<?>> notNull = new ArrayList<ProxyFilter<?>>();\n      for (ProxyFilter filter : filters) {\n        if (filter.getValue() != null) {\n          notNull.add(filter);\n        }\n      }\n\n      if (notNull.size() > 0) {\n        List<ModelData> removes = new ArrayList();\n        for (ModelData m : data) {\n          for (ProxyFilter filter : notNull) {\n            try {\n              if (!filter.doFilter(m)) {\n                removes.add(m);\n                break;\n              }\n            } catch (Exception e) {\n              removes.add(m);\n              break;\n            }\n          }\n        }\n        for (ModelData m : removes) {\n          data.remove(m);\n        }\n      }\n\n      PagingLoadConfig config = (PagingLoadConfig) loadConfig;\n\n      if (config.getSortInfo().getSortField() != null) {\n        final String sortField = config.getSortInfo().getSortField();\n        if (sortField != null) {\n          Collections.sort(data, config.getSortInfo().getSortDir().comparator(new Comparator<ModelData>() {\n\n            @Override\n            public int compare(ModelData o1, ModelData o2) {\n              Object v1 = o1.get(sortField);\n              Object v2 = o2.get(sortField);\n\n              if (comparator != null) {\n                return comparator.compare(v1, v2);\n              }\n              return DefaultComparator.INSTANCE.compare(v1, v2);\n            }\n          }));\n        }\n      }\n      ArrayList<ModelData> sublist = new ArrayList<ModelData>();\n      int start = config.getOffset();\n      int limit = data.size();\n      if (config.getLimit() > 0) {\n        limit = Math.min(start + config.getLimit(), limit);\n      }\n      for (int i = config.getOffset(); i < limit; i++) {\n        sublist.add(data.get(i));\n      }\n      filtered = new ArrayList<ModelData>(data);\n      callback.onSuccess(new BasePagingLoadResult<ModelData>(sublist, config.getOffset(), data.size()));\n    } catch (Exception e) {\n      callback.onFailure(e);\n    }\n  }\n\n  public List<? extends ModelData> getFiltered() {\n    return filtered;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/BaseFilterableMemoryProxy.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/BaseFilterableMemoryProxy.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3768,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\nimport com.extjs.gxt.ui.client.data.BaseListLoadConfig;\nimport com.extjs.gxt.ui.client.data.BaseListLoadResult;\nimport com.extjs.gxt.ui.client.data.DataReader;\nimport com.extjs.gxt.ui.client.data.ListLoadResult;\nimport com.extjs.gxt.ui.client.data.MemoryProxy;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.util.DefaultComparator;\nimport com.google.gwt.user.client.rpc.AsyncCallback;\n\n/**\n * This is a PagingMemoryProxy capable of filtering the results. You can bind as many ProxyFilterFields as you want. But\n * increasing the amount of filters will decrease the performance as every row has to be validated by every filter.\n * \n * @author q909158\n */\npublic class BaseFilterableMemoryProxy extends MemoryProxy<ListLoadResult<? extends ModelData>> implements FilterableMemoryProxy {\n\n  private List<ProxyFilter<?>> filters = new ArrayList<ProxyFilter<?>>();\n\n  /** Contains all models after filtering */\n  public BaseFilterableMemoryProxy(List<?> data) {\n    super(data);\n  }\n\n  /**\n   * adds a filter to the proxy<br>\n   * this function should not be called by hand, but by the bind function of filters\n   * \n   * @param filter\n   */\n  @Override\n  public void addFilter(ProxyFilter<?> filter) {\n    filters.add(filter);\n  }\n\n  /**\n   * this is a direct copy of the load function of the basic class with the extension that it filters the rows with the\n   * ProxyFilters\n   * \n   * @see com.extjs.gxt.ui.client.data.PagingModelMemoryProxy#load(com.extjs.gxt.ui.client.data.DataReader, java.lang.Object,\n   *      com.google.gwt.user.client.rpc.AsyncCallback)\n   */\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void load(DataReader<ListLoadResult<? extends ModelData>> reader, Object loadConfig,\n      AsyncCallback<ListLoadResult<? extends ModelData>> callback) {\n    List<ModelData> loadedData = new ArrayList<ModelData>((Collection<ModelData>) getData());\n\n    try {\n      if (reader != null) {\n        loadedData = (List<ModelData>) reader.read(loadConfig, loadedData);\n      }\n\n      // filters whom values are not null, increases performance\n      List<ProxyFilter<?>> notNull = new ArrayList<ProxyFilter<?>>();\n      for (ProxyFilter<?> filter : filters) {\n        if (filter.getValue() != null) {\n          notNull.add(filter);\n        }\n      }\n\n      if (notNull.size() > 0) {\n        List<ModelData> removes = new ArrayList<ModelData>();\n        for (ModelData m : loadedData) {\n          for (ProxyFilter<?> filter : notNull) {\n            try {\n              if (!filter.doFilter(m)) {\n                removes.add(m);\n                break;\n              }\n            } catch (Exception e) {\n              removes.add(m);\n              break;\n            }\n          }\n        }\n        for (ModelData m : removes) {\n          loadedData.remove(m);\n        }\n      }\n\n      BaseListLoadConfig config = (BaseListLoadConfig) loadConfig;\n\n      if (config.getSortInfo().getSortField() != null) {\n        final String sortField = config.getSortInfo().getSortField();\n        if (sortField != null) {\n          Collections.sort(loadedData, config.getSortInfo().getSortDir().comparator(new Comparator<ModelData>() {\n\n            @Override\n            public int compare(ModelData o1, ModelData o2) {\n              Object v1 = o1.get(sortField);\n              Object v2 = o2.get(sortField);\n\n              return DefaultComparator.INSTANCE.compare(v1, v2);\n            }\n          }));\n        }\n      }\n      callback.onSuccess(new BaseListLoadResult<ModelData>(loadedData));\n    } catch (Exception e) {\n      callback.onFailure(e);\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/LinkCellRenderer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/LinkCellRenderer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1526,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnData;\nimport com.extjs.gxt.ui.client.widget.grid.Grid;\nimport com.extjs.gxt.ui.client.widget.grid.GridCellRenderer;\nimport com.google.gwt.event.dom.client.ClickHandler;\n\nimport at.a1ta.framework.ui.client.util.HtmlUtils;\n\n/**\n * Renders an internal link\n * \n * @author q909158\n */\npublic class LinkCellRenderer implements GridCellRenderer<ModelData> {\n\n  private ClickHandler clickHandler;\n\n  /**\n   * @param clickHandler reference to the handler which should be calles when the link is clicked\n   */\n  public LinkCellRenderer(ClickHandler clickHandler) {\n    super();\n    this.clickHandler = clickHandler;\n  }\n\n  /**\n   * renders a link with the cellvalue as text\n   * \n   * @see com.extjs.gxt.ui.client.widget.grid.GridCellRenderer#render(com.extjs.gxt.ui.client.data.ModelData, java.lang.String,\n   *      com.extjs.gxt.ui.client.widget.grid.ColumnData, int, int, com.extjs.gxt.ui.client.store.ListStore,\n   *      com.extjs.gxt.ui.client.widget.grid.Grid)\n   */\n  @Override\n  public Object render(ModelData model, String property, ColumnData config, int rowIndex, int colIndex, ListStore<ModelData> store,\n      Grid<ModelData> grid) {\n    if (model.get(property) != null) {\n      return HtmlUtils.createInternalLink(model.get(property).toString(), clickHandler);\n    }\n    return HtmlUtils.createInternalLink(\"Not set\", clickHandler);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/GridContainer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/GridContainer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3383,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.Style.SelectionMode;\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.event.BaseEvent;\nimport com.extjs.gxt.ui.client.event.Events;\nimport com.extjs.gxt.ui.client.event.Listener;\nimport com.extjs.gxt.ui.client.store.ListStore;\nimport com.extjs.gxt.ui.client.widget.ContentPanel;\nimport com.extjs.gxt.ui.client.widget.grid.ColumnModel;\nimport com.extjs.gxt.ui.client.widget.grid.EditorGrid;\nimport com.extjs.gxt.ui.client.widget.grid.Grid;\nimport com.extjs.gxt.ui.client.widget.layout.FitLayout;\nimport com.google.gwt.core.client.Scheduler;\nimport com.google.gwt.core.client.Scheduler.ScheduledCommand;\n\nimport at.a1ta.cuco.admin.ui.common.client.bundle.AdminUI;\n\n/**\n * This class provides a grid wrapped in a content panel.By default the header of the content panel is not shown, the\n * grid's columns automatically resize to fit the grid's width and the load mask is shown. To include paging\n * functionality, see {@link PagingGridContainer}\n */\npublic class GridContainer<T extends ListStore<U>, U extends ModelData> extends ContentPanel {\n\n  private final Grid<U> grid;\n\n  public GridContainer(T store, ColumnModel cm) {\n    this(store, cm, 0, false);\n    grid.setAutoHeight(true);\n  }\n\n  public GridContainer(T store, ColumnModel cm, boolean editable) {\n    this(store, cm, 0, editable);\n    grid.setAutoHeight(true);\n  }\n\n  /**\n   * @param store The store of the grid.\n   * @param cm The column model of the grid.\n   * @param height The height of the grid. It has to be set to a fixed sized because of layout issues.\n   */\n  public GridContainer(T store, ColumnModel cm, int height) {\n    this(store, cm, height, false);\n  }\n\n  /**\n   * @param store The store of the grid.\n   * @param cm The column model of the grid.\n   * @param height The height of the grid. It has to be set to a fixed sized because of layout issues.\n   * @param editable True to add edit capabilities to grid.\n   */\n  public GridContainer(T store, ColumnModel cm, int height, boolean editable) {\n    // setSize(\"100%\", \"100%\");\n\n    // setFrame(true);\n    setHeaderVisible(false);\n    setLayout(new FitLayout());\n    setLayoutOnChange(true);\n    setHeight(height);\n\n    grid = editable ? new EditorGrid<U>(store, cm) : new Grid<U>(store, cm);\n    // grid.setAutoExpandColumn(cm.getColumn(cm.getColumnCount() -\n    // 1).getId());\n    grid.getView().setAutoFill(true);\n    grid.getView().setForceFit(true);\n    grid.getView().setEmptyText(AdminUI.ADMINCOMMONTEXTPOOL.noData());\n    grid.setStripeRows(true);\n\n    grid.setLoadMask(true);\n    grid.getSelectionModel().setSelectionMode(SelectionMode.SINGLE);\n    setBottomComponent(null);\n\n    grid.disableTextSelection(false);\n    add(grid);\n\n    setMonitorWindowResize(true);\n\n    grid.addListener(Events.Attach, new Listener<BaseEvent>() {\n\n      @Override\n      public void handleEvent(BaseEvent be) {\n        layout(true);\n        grid.getView().refresh(true);\n      }\n    });\n  }\n\n  public void reconfigure(T store) {\n    getGrid().reconfigure(store, getGrid().getColumnModel());\n  }\n\n  public Grid<U> getGrid() {\n    return grid;\n  }\n\n  @Override\n  protected void onWindowResize(int width, int height) {\n    Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n      @Override\n      public void execute() {\n        layout(true);\n      }\n    });\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/FilterableMemoryProxy.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/FilterableMemoryProxy.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 131,
    "content": "package at.a1ta.framework.gxt.ui;\n\n\npublic interface FilterableMemoryProxy {\n\n    public void addFilter(ProxyFilter<?> filter);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/ComboBoxFix.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/ComboBoxFix.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 367,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.data.ModelData;\nimport com.extjs.gxt.ui.client.widget.form.ComboBox;\n\npublic class ComboBoxFix<D extends ModelData> extends ComboBox<D> {\n\n    @Override\n    public void expand() {\n        try {\n            super.expand();\n        } catch (Exception e) {\n            super.expand();\n        }\n    }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "administration.ui/src/main/java/at/a1ta/framework/gxt/ui/PopupImplIE6Extended.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/administration.ui/src/main/java/at/a1ta/framework/gxt/ui/PopupImplIE6Extended.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 369,
    "content": "package at.a1ta.framework.gxt.ui;\n\nimport com.extjs.gxt.ui.client.core.XDOM;\nimport com.google.gwt.dom.client.Element;\nimport com.google.gwt.user.client.ui.impl.PopupImplIE6;\n\npublic class PopupImplIE6Extended extends PopupImplIE6 {\n\n  @Override\n  public void onShow(Element popup) {\n    super.onShow(popup);\n    popup.getStyle().setZIndex(XDOM.getTopZIndex());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/pom.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/pom.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 17046,
    "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <parent>\n    <groupId>at.a1ta.cuco</groupId>\n    <artifactId>cuco.pom</artifactId>\n    <version>2025.03.01</version>\n  </parent>\n\n  <artifactId>cuco-core</artifactId>\n  <packaging>jar</packaging>\n\n  <dependencies>\n    <dependency>\n      <groupId>at.a1ta.bite</groupId>\n      <artifactId>bite-core</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.bite</groupId>\n      <artifactId>bite-data-clarify</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.bite</groupId>\n      <artifactId>bite-data-solr</artifactId>\n      <exclusions>\n        <exclusion>\n          <artifactId>slf4j-simple</artifactId>\n          <groupId>org.slf4j</groupId>\n        </exclusion>\n        <exclusion>\n          <groupId>commons-logging</groupId>\n          <artifactId>commons-logging</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-core</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-tx</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.codehaus-woodstox</groupId>\n          <artifactId>wstx-asl</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>commons-codec</groupId>\n          <artifactId>commons-codec</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.bite</groupId>\n      <artifactId>bite-data-cusco</artifactId>\n      <exclusions>\n        <exclusion>\n          <groupId>commons-logging</groupId>\n          <artifactId>commons-logging</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>commons-codec</groupId>\n          <artifactId>commons-codec</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n\n    <dependency>\n      <groupId>com.mchange</groupId>\n      <artifactId>c3p0</artifactId>\n      <version>${c3p0.version}</version>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>net.sourceforge.cobertura</groupId>\n      <artifactId>cobertura</artifactId>\n      <version>2.1.1</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.sonarsource.scanner.maven</groupId>\n      <artifactId>sonar-maven-plugin</artifactId>\n      <version>3.3.0.603</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.microsoft.sqlserver</groupId>\n      <artifactId>jdbc</artifactId>\n      <version>3.0</version>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>commons-dbcp</groupId>\n      <artifactId>commons-dbcp</artifactId>\n      <version>${commons-dbcp.version}</version>\n      <scope>runtime</scope>\n      <exclusions>\n        <exclusion>\n          <artifactId>commons-pool</artifactId>\n          <groupId>commons-pool</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>commons-pool</groupId>\n      <artifactId>commons-pool</artifactId>\n      <version>${commons-pool.version}</version>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>javax.websocket</groupId>\n      <artifactId>javax.websocket-api</artifactId>\n      <version>${websocket.version}</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.java-websocket</groupId>\n      <artifactId>Java-WebSocket</artifactId>\n      <version>1.3.7</version>\n    </dependency>\n\n    <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-databind</artifactId>\n      <version>${jackson.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>net.sf.opencsv</groupId>\n      <artifactId>opencsv</artifactId>\n      <version>2.2</version>\n    </dependency>\n    <dependency>\n      <groupId>com.sun.media</groupId>\n      <artifactId>jai-codec</artifactId>\n      <version>1.1.3</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>FreeUnits</artifactId>\n      <version>1.1</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>BusinessCustomerEquipment</artifactId>\n      <version>1.4</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>CustomerInventory</artifactId>\n      <version>4.63</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>CustomerInventoryTermination</artifactId>\n      <version>1.4</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>PartyDeclarationOfConsent</artifactId>\n      <version>1.14</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>PartyProfile</artifactId>\n      <version>5.94</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>MasterSessionControl</artifactId>\n      <version>1.19</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb</groupId>\n      <artifactId>LKMSLocation</artifactId>\n      <version>1.33</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>MarketplaceInventory</artifactId>\n      <version>1.2</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>LandingPageDealer</artifactId>\n      <version>1.21</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>TariffGuide</artifactId>\n      <version>6.5</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>KUMSCommon</artifactId>\n      <version>1.9</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>KUMSCustomer</artifactId>\n      <version>1.82</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>KUMSAccount</artifactId>\n      <version>1.18</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>SAP5BillingInformation</artifactId>\n      <version>1.1</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>Party</artifactId>\n      <version>1.46</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>CustomerAssignment</artifactId>\n      <version>1.28</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>MptSvc</artifactId>\n      <version>1.8</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>brkSvc</artifactId>\n      <version>28.46</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>CrmAuthenticationSvc</artifactId>\n      <version>1.13</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>InsuranceBrokerCPI</artifactId>\n      <version>1.4</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>InsuranceBrokerHSI</artifactId>\n      <version>1.4</version>\n    </dependency>\n    <dependency>\n  \t  <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>CustomerLoyalty</artifactId>\n      <version>1.37</version>\n\t</dependency>\n  \t<dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>ODSRawDataInventory</artifactId>\n      <version>2.5</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>DuposMobileSignature</artifactId>\n      <version>1.4</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-websocket</artifactId>\n      <version>4.1.9.RELEASE</version>\n    </dependency>\n\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-aspects</artifactId>\n      <version>${spring.version}</version>\n      <scope>compile</scope>\n      <exclusions>\n        <exclusion>\n          <artifactId>aspectjweaver</artifactId>\n          <groupId>org.aspectj</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>org.aspectj</groupId>\n      <artifactId>aspectjrt</artifactId>\n      <version>${aspectj.version}</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.aspectj</groupId>\n      <artifactId>aspectjweaver</artifactId>\n      <version>${aspectj.version}</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>javax.persistence</groupId>\n      <artifactId>persistence-api</artifactId>\n      <version>1.0</version>\n    </dependency>\n\n    <dependency>\n      <groupId>org.apache.httpcomponents</groupId>\n      <artifactId>httpcore</artifactId>\n      <version>4.2.2</version>\n    </dependency>\n\n    <!-- METRICS -->\n    <dependency>\n      <groupId>com.codahale.metrics</groupId>\n      <artifactId>metrics-core</artifactId>\n      <version>${metrics.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>com.ryantenney.metrics</groupId>\n      <artifactId>metrics-spring</artifactId>\n      <version>3.0.0-RC2</version>\n    </dependency>\n    <dependency>\n      <groupId>cglib</groupId>\n      <artifactId>cglib</artifactId>\n      <version>2.2.2</version>\n    </dependency>\n    <dependency>\n      <groupId>org.elasticsearch</groupId>\n      <artifactId>metrics-elasticsearch-reporter</artifactId>\n      <version>1.0</version>\n      <exclusions>\n        <exclusion>\n          <artifactId>metrics-core</artifactId>\n          <groupId>com.codahale.metrics</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>${junit.version}</version>\n      <scope>test</scope>\n      <exclusions>\n        <exclusion>\n          <artifactId>hamcrest-core</artifactId>\n          <groupId>org.hamcrest</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>com.oracle</groupId>\n      <artifactId>ojdbc7</artifactId>\n      <version>12.1.0.2</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.oracle</groupId>\n      <artifactId>xdb</artifactId>\n      <version>11.2.0.2.0</version>\n    </dependency>\n    <dependency>\n      <groupId>com.oracle</groupId>\n      <artifactId>xmlparserv2</artifactId>\n      <version>11.2.0.2.0</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-orm</artifactId>\n      <version>${spring.version}</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.ibatis</groupId>\n      <artifactId>ibatis-sqlmap</artifactId>\n      <version>${ibatis.version}</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-core</artifactId>\n      <scope>compile</scope>\n      <exclusions>\n        <exclusion>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-core</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-beans</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-context</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-aop</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>net.sf.ehcache</groupId>\n      <artifactId>ehcache-core</artifactId>\n      <version>${ehcache.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.ws.commons.axiom</groupId>\n      <artifactId>axiom-api</artifactId>\n      <version>${axiom.version}</version>\n      <scope>runtime</scope>\n      <exclusions>\n        <exclusion>\n          <groupId>org.apache.geronimo.specs</groupId>\n          <artifactId>geronimo-activation_1.1_spec</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.apache.geronimo.specs</groupId>\n          <artifactId>geronimo-javamail_1.4_spec</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.apache.geronimo.specs</groupId>\n          <artifactId>geronimo-stax-api_1.0_spec</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.ws.commons.axiom</groupId>\n      <artifactId>axiom-impl</artifactId>\n      <version>${axiom.version}</version>\n      <scope>runtime</scope>\n      <exclusions>\n        <exclusion>\n          <artifactId>geronimo-javamail_1.4_spec</artifactId>\n          <groupId>org.apache.geronimo.specs</groupId>\n        </exclusion>\n        <exclusion>\n          <artifactId>geronimo-activation_1.1_spec</artifactId>\n          <groupId>org.apache.geronimo.specs</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.neethi</groupId>\n      <artifactId>neethi</artifactId>\n      <version>2.0.4</version>\n      <scope>runtime</scope>\n      <exclusions>\n        <exclusion>\n          <groupId>org.apache.ws.commons.axiom</groupId>\n          <artifactId>axiom-api</artifactId>\n        </exclusion>\n        <exclusion>\n          <artifactId>axiom-impl</artifactId>\n          <groupId>org.apache.ws.commons.axiom</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.commons</groupId>\n      <artifactId>commons-math3</artifactId>\n      <version>3.2</version>\n    </dependency>\n    <dependency>\n      <groupId>at.a1ta.esb.stub</groupId>\n      <artifactId>brianA1</artifactId>\n      <version>1.59</version>\n      <type>jar</type>\n    </dependency>\n\n    <dependency>\n      <groupId>net.sf.jasperreports</groupId>\n      <artifactId>jasperreports</artifactId>\n      <version>4.5.0</version>\n      <exclusions>\n        <exclusion>\n          <groupId>eclipse</groupId>\n          <artifactId>jdtcore</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.apache.poi</groupId>\n          <artifactId>poi</artifactId>\n        </exclusion>\n        <exclusion>\n          <artifactId>poi-ooxml</artifactId>\n          <groupId>org.apache.poi</groupId>\n        </exclusion>\n        <exclusion>\n          <artifactId>commons-beanutils</artifactId>\n          <groupId>commons-beanutils</groupId>\n        </exclusion>\n        <exclusion>\n          <artifactId>commons-logging</artifactId>\n          <groupId>commons-logging</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <configuration>\n          <source>1.8</source>\n          <target>1.8</target>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>gwt-maven-plugin</artifactId>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-release-plugin</artifactId>\n        <version>2.2.1</version>\n        <configuration>\n          <workingDirectory>./${project.artifactId}</workingDirectory>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>aspectj-maven-plugin</artifactId>\n        <version>1.7</version>\n        <configuration>\n          <complianceLevel>1.7</complianceLevel>\n          <encoding>UTF-8</encoding>\n          <aspectLibraries>\n            <aspectLibrary>\n              <groupId>org.springframework</groupId>\n              <artifactId>spring-aspects</artifactId>\n            </aspectLibrary>\n          </aspectLibraries>\n        </configuration>\n        <executions>\n          <execution>\n            <goals>\n              <goal>compile</goal>\n            </goals>\n          </execution>\n        </executions>\n        <dependencies>\n          <dependency>\n            <groupId>org.aspectj</groupId>\n            <artifactId>aspectjrt</artifactId>\n            <version>${aspectj.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>org.aspectj</groupId>\n            <artifactId>aspectjtools</artifactId>\n            <version>${aspectj.version}</version>\n          </dependency>\n        </dependencies>\n      </plugin>\n    </plugins>\n  </build>\n</project>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/SoapUiProjects/Party-soapui-project.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/SoapUiProjects/Party-soapui-project.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 179211,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<con:soapui-project name=\"Party 1.27\" resourceRoot=\"\" soapui-version=\"3.6.1\" xmlns:con=\"http://eviware.com/soapui/config\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local\"><![CDATA[<xml-fragment xmlns:con=\"http://eviware.com/soapui/config\">\n  <con:entry key=\"Global Properties\" value=\"\"/>\n  <con:entry key=\"TestSuite\" value=\"PartyPortTypeHttpBinding TestSuite\"/>\n  <con:entry key=\"Report to Generate\" value=\"\"/>\n  <con:entry key=\"Password\" value=\"\"/>\n  <con:entry key=\"soapui-setings.xml Password\" value=\"\"/>\n  <con:entry key=\"TestRunner Path\" value=\"\"/>\n  <con:entry key=\"Tool Args\" value=\"\"/>\n  <con:entry key=\"Ignore Errors\" value=\"false\"/>\n  <con:entry key=\"Host:Port\" value=\"\"/>\n  <con:entry key=\"WSS Password Type\" value=\"\"/>\n  <con:entry key=\"Save Project\" value=\"false\"/>\n  <con:entry key=\"Enable UI\" value=\"false\"/>\n  <con:entry key=\"System Properties\" value=\"\"/>\n  <con:entry key=\"Domain\" value=\"\"/>\n  <con:entry key=\"Coverage Report\" value=\"false\"/>\n  <con:entry key=\"Export JUnit Results\" value=\"false\"/>\n  <con:entry key=\"Open Report\" value=\"false\"/>\n  <con:entry key=\"Project Properties\" value=\"\"/>\n  <con:entry key=\"Project Password\" value=\"\"/>\n  <con:entry key=\"Export All\" value=\"false\"/>\n  <con:entry key=\"Report Format(s)\" value=\"\"/>\n  <con:entry key=\"TestCase\" value=\"&lt;all>\"/>\n  <con:entry key=\"Print Report\" value=\"false\"/>\n  <con:entry key=\"Username\" value=\"\"/>\n  <con:entry key=\"Root Folder\" value=\"\"/>\n  <con:entry key=\"Save After\" value=\"false\"/>\n  <con:entry key=\"Add Settings\" value=\"false\"/>\n  <con:entry key=\"Endpoint\" value=\"\"/>\n</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type=\"con:WsdlInterface\" wsaVersion=\"NONE\" name=\"PartyPortTypeHttpBinding\" type=\"wsdl\" bindingName=\"{http://eai.a1telekom.at/party/wsdl}PartyPortTypeHttpBinding\" soapVersion=\"1_1\" anonymous=\"optional\" definition=\"http://esb-i.a1telekom.inside:7800/wsdl/Party/-/vi/http\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:settings/><con:definitionCache type=\"TEXT\" rootPart=\"http://esb-i.a1telekom.inside:7800/wsdl/Party/-/vi/http\"><con:part><con:url>http://esb-i.a1telekom.inside:7800/wsdl/Party/-/vi/http</con:url><con:content><![CDATA[<!--Created by mag ESB WSDL-Generator v3-->\n<!--WSDL version 1.27-->\n<wsdl:definitions targetNamespace=\"http://eai.a1telekom.at/party/wsdl\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://eai.a1telekom.at/party/wsdl\" xmlns:ns0=\"http://eai.a1telekom.at/party\" xmlns:ns1=\"http://cdm.a1telekom.at/common/error\" xmlns:ns2=\"http://cdm.a1telekom.at/common\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\">\n  <wsdl:types>\n    <schema targetNamespace=\"http://eai.a1telekom.at/party\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:cdmparty=\"http://cdm.a1telekom.at/party\" xmlns:party=\"http://eai.a1telekom.at/party\" xmlns:common=\"http://cdm.a1telekom.at/common\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\">\n      <import namespace=\"http://cdm.a1telekom.at/common\"/>\n      <simpleType name=\"AccountManagementSegment\">\n        <annotation>\n          <documentation>KUMS: KUNDENSEGMENT\nDescription: KUMS: Kundensegment -Werte sind: KAM,TSME,ICA,CA,SOHO,SME,KO,INT,RES,KRE</documentation>\n        </annotation>\n        <restriction base=\"token\">\n          <maxLength value=\"20\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"Address\">\n        <sequence>\n          <element name=\"LkmsId\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: RECHNUNGSADRESSE\nDescription: Stammsitz bei Organisation, Meldeadresse bei Person</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"12\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Street\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: STRASSE\nDescription: Strassenbezeichnung</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"38\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"HouseNumber\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: HAUSNUMMER\nDescription: Hausnummer</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"7\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Block\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: BLOCK</documentation>\n            </annotation>\n          </element>\n          <element name=\"Staircase\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: STIEGE\nDescription: Stiege</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"3\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"FloorNumber\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: STOCK\nDescription: Stockwerk</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"3\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"DoorNumber\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: TUER\nDescription: Tuer</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"4\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Additional\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: ADRESSEN_EXTRA</documentation>\n            </annotation>\n          </element>\n          <element name=\"Postcode\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: PLZ\nDescription: Postleitzahl</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"12\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"City\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: PLZORT\nDescription: Bezeichnung des Postleitzahlen Ortes</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"38\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Village\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: ORT\nDescription: Bezeichnung des pol. Ortes</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"38\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Country\" minOccurs=\"0\">\n            <annotation>\n              <documentation>LKMS: INET_COUNTRY_CD\nDescription: 3-stelliger ISO-Code</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"token\">\n                <maxLength value=\"3\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <!--element name=\"FormattedAddress\" type=\"party:FormattedAddress\" minOccurs=\"0\"/-->\n        </sequence>\n      </complexType>\n      <simpleType name=\"BirthDate\">\n        <annotation>\n          <documentation>KUMS: GEBURTSDATUMDescription: Geburtsdatum bei einer Person</documentation>\n        </annotation>\n        <restriction base=\"date\"/>\n      </simpleType>\n      <simpleType name=\"ClubRegisterNumber\">\n        <annotation>\n          <documentation>KUMS: vereinsregister\nDescription: Kennung im Zentralen Vereinsregister</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"16\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"CompRegisterNumber\">\n        <annotation>\n          <documentation>KUMS: FIRMENBUCHNUMMER\nDescription: Externer Schluessel. Verweist auf den Eintrag des Kunden im Firmenbuch.</documentation>\n        </annotation>\n        <restriction base=\"token\">\n          <maxLength value=\"11\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"ContactMedium\" abstract=\"true\"/>\n      <complexType name=\"ContactPerson\">\n        <complexContent>\n          <extension base=\"party:PartyRole\"/>\n        </complexContent>\n      </complexType>\n      <simpleType name=\"ContractAllowed\">\n        <annotation>\n          <documentation>KUMS: VERTRAGSFAEHIG\nDescription: Vertragsfaehigkeit des Kunden</documentation>\n        </annotation>\n        <restriction base=\"boolean\"/>\n      </simpleType>\n      <simpleType name=\"CustomerPassword\">\n        <annotation>\n          <documentation>KUMS: Passwort, currently not in use</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"8\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"Dead\">\n        <annotation>\n          <documentation>verstorben, KUMS: Status, Statusdatum</documentation>\n        </annotation>\n        <restriction base=\"boolean\"/>\n      </simpleType>\n      <complexType name=\"EmailContact\">\n        <complexContent>\n          <extension base=\"party:ContactMedium\">\n            <sequence>\n              <element name=\"EmailAddress\">\n                <annotation>\n                  <documentation>KUMS: EMAIL\nDescription: Email adresse Im Internet-Format</documentation>\n                </annotation>\n                <simpleType>\n                  <restriction base=\"string\">\n                    <maxLength value=\"128\"/>\n                  </restriction>\n                </simpleType>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <simpleType name=\"FamilyName\">\n        <annotation>\n          <documentation>KUMS: NAMEDescription: Kundenname</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"250\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"FaxNumber\">\n        <complexContent>\n          <extension base=\"party:ContactMedium\">\n            <sequence>\n              <element name=\"FaxNumber\">\n                <annotation>\n                  <documentation>KUMS: FAX\nDescription: Rufnummer inkl. Aller Vorwahlen</documentation>\n                </annotation>\n                <simpleType>\n                  <restriction base=\"string\">\n                    <maxLength value=\"32\"/>\n                  </restriction>\n                </simpleType>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <simpleType name=\"ForeignCompRegisterNumber\">\n        <annotation>\n          <documentation>KUMS: AUSL_FBNR\nDescription: Auslaendische Firmenbuchnumme</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"16\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"FormattedAddress\">\n        <sequence>\n          <element name=\"AddressLine1\">\n            <annotation>\n              <documentation>LKMS: ADRESS_ZEILE_1\nDescription: 1. Zeile der postalischen Anschrift</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"128\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"AddressLine2\">\n            <annotation>\n              <documentation>LKMS: ADRESS_ZEILE_2\nDescription: 2. Zeile der postalischen Anschrift</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"128\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"AddressLine3\">\n            <annotation>\n              <documentation>LKMS: ADRESS_ZEILE_3\nDescription: 3. Zeile der postalischen Anschrift</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"128\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <simpleType name=\"Gender\">\n        <annotation>\n          <documentation>KUMS: GESCHLECHT</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <enumeration value=\"male\"/>\n          <enumeration value=\"female\"/>\n          <enumeration value=\"unknown\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"GivenName\">\n        <annotation>\n          <documentation>KUMS: VORNAME Description: Vorname</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"32\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"Individual\">\n        <complexContent>\n          <extension base=\"party:Party\">\n            <sequence>\n              <element name=\"Title\" type=\"party:Title\" minOccurs=\"0\"/>\n              <element name=\"GivenName\" minOccurs=\"0\">\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:GivenName\">\n                      <attribute name=\"writeable\" type=\"boolean\"/>\n                    </extension>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"FamilyName\" minOccurs=\"0\">\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:FamilyName\">\n                      <attribute name=\"writeable\" type=\"boolean\"/>\n                    </extension>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"Suffix\" type=\"party:Suffix\" minOccurs=\"0\"/>\n              <element name=\"BirthDate\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: GEBURTSDATUMDescription: Geburtsdatum bei einer Person, leer bei einer Organisation</documentation>\n                </annotation>\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:BirthDate\">\n                      <attribute name=\"writeable\" type=\"boolean\"/>\n                    </extension>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <!--element name=\"PlaceOfBirth\" minOccurs=\"0\">\n\t\t\t\t\t\t<annotation>\n\t\t\t\t\t\t\t<documentation>KUMS: tbd.</documentation>\n\t\t\t\t\t\t</annotation>\n\t\t\t\t\t\t<complexType>\n\t\t\t\t\t\t\t<simpleContent>\n\t\t\t\t\t\t\t\t<extension base=\"party:PlaceOfBirth\">\n\t\t\t\t\t\t\t\t\t<attribute name=\"writeable\" type=\"boolean\"/>\n\t\t\t\t\t\t\t\t</extension>\n\t\t\t\t\t\t\t</simpleContent>\n\t\t\t\t\t\t</complexType>\n\t\t\t\t\t</element-->\n              <element name=\"Gender\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: GESCHLECHTDescription: blank = Organisation, M = maennlich, W = weiblich, Rufzeichen = unbekannt</documentation>\n                </annotation>\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:Gender\">\n                      <attribute name=\"writeable\" type=\"boolean\"/>\n                    </extension>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"VIP\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: SONDERBEHANDLUNGDescription: VIP1-4 verschluesselt: Werte sind: 501,502,503,504</documentation>\n                </annotation>\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:VIP\">\n                      <attribute name=\"writeable\" type=\"boolean\"/>\n                    </extension>\n                  </simpleContent>\n                </complexType>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"IndividualCreate\">\n        <complexContent>\n          <extension base=\"party:PartyCreate\">\n            <sequence>\n              <element name=\"Title\" type=\"party:Title\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: A_TITELDescription: Akademischer Titel</documentation>\n                </annotation>\n              </element>\n              <element name=\"GivenName\" type=\"party:GivenName\">\n                <annotation>\n                  <documentation>KUMS: VORNAMEDescription: Vorname   /  bei Organisationen: blank</documentation>\n                </annotation>\n              </element>\n              <element name=\"FamilyName\" type=\"party:FamilyName\">\n                <annotation>\n                  <documentation>KUMS: NAMEDescription: Kundenname</documentation>\n                </annotation>\n              </element>\n              <element name=\"Suffix\" type=\"party:Suffix\" minOccurs=\"0\"/>\n              <element name=\"BirthDate\" type=\"party:BirthDate\">\n                <annotation>\n                  <documentation>KUMS: GEBURTSDATUMDescription: Geburtsdatum bei einer Person, leer bei einer Organisation</documentation>\n                </annotation>\n              </element>\n              <element name=\"Gender\" type=\"party:Gender\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"IndividualCreateWithAccount\">\n        <complexContent>\n          <extension base=\"party:PartyCreateWithAccount\">\n            <sequence>\n              <element name=\"Title\" type=\"party:Title\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: A_TITELDescription: Akademischer Titel</documentation>\n                </annotation>\n              </element>\n              <element name=\"GivenName\" type=\"party:GivenName\">\n                <annotation>\n                  <documentation>KUMS: VORNAMEDescription: Vorname   /  bei Organisationen: blank</documentation>\n                </annotation>\n              </element>\n              <element name=\"FamilyName\" type=\"party:FamilyName\">\n                <annotation>\n                  <documentation>KUMS: NAMEDescription: Kundenname</documentation>\n                </annotation>\n              </element>\n              <element name=\"Suffix\" type=\"party:Suffix\" minOccurs=\"0\"/>\n              <element name=\"BirthDate\" type=\"party:BirthDate\">\n                <annotation>\n                  <documentation>KUMS: GEBURTSDATUMDescription: Geburtsdatum bei einer Person, leer bei einer Organisation</documentation>\n                </annotation>\n              </element>\n              <element name=\"Gender\" type=\"party:Gender\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"IndividualSearch\">\n        <complexContent>\n          <extension base=\"party:PartySearch\">\n            <sequence>\n              <element name=\"BirthDate\" type=\"date\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: GEBURTSDATUMDescription: Geburtsdatum bei einer Person, leer bei einer Organisation</documentation>\n                </annotation>\n              </element>\n              <element name=\"VIP\" type=\"int\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: SONDERBEHANDLUNG\nDescription: VIP1-4</documentation>\n                </annotation>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"IndividualUpdate\">\n        <complexContent>\n          <extension base=\"party:PartyUpdate\">\n            <sequence>\n              <element name=\"Title\" type=\"party:Title\" minOccurs=\"0\"/>\n              <element name=\"GivenName\" minOccurs=\"0\">\n                <simpleType>\n                  <restriction base=\"string\">\n                    <maxLength value=\"32\"/>\n                  </restriction>\n                </simpleType>\n              </element>\n              <element name=\"FamilyName\" minOccurs=\"0\">\n                <simpleType>\n                  <restriction base=\"string\">\n                    <maxLength value=\"250\"/>\n                  </restriction>\n                </simpleType>\n              </element>\n              <element name=\"Suffix\" type=\"party:Suffix\" minOccurs=\"0\"/>\n              <element name=\"BirthDate\" type=\"party:BirthDate\" minOccurs=\"0\"/>\n              <!--element name=\"PlaceOfBirth\" type=\"string\" minOccurs=\"0\">\n\t\t\t\t\t\t<annotation>\n\t\t\t\t\t\t\t<documentation>KUMS: tbd.</documentation>\n\t\t\t\t\t\t</annotation>\n\t\t\t\t\t</element-->\n              <element name=\"Gender\" type=\"party:Gender\" minOccurs=\"0\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"Industry\"/>\n      <simpleType name=\"KSVNumber\">\n        <annotation>\n          <documentation>KUMS: ksv_nummer\nDescription: Kennung beim Kreditschutzverband</documentation>\n        </annotation>\n        <restriction base=\"token\">\n          <maxLength value=\"10\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"MunicipalNumber\">\n        <annotation>\n          <documentation>KUMS: gemeindekennung\nDescription: Spezielle Kennzeichnung fuer Gemeinde</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"16\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"Nationality\">\n        <restriction base=\"token\">\n          <maxLength value=\"3\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"Organisation\">\n        <complexContent>\n          <extension base=\"party:Party\">\n            <sequence>\n              <element name=\"Name\" minOccurs=\"0\">\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:OrganisationName\">\n                      <attribute name=\"writeable\" type=\"boolean\"/>\n                    </extension>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"OrganisationType\" minOccurs=\"0\">\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:OrganisationType\"/>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"LegalStructure\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: RECHTSFORM_WORTLAUT</documentation>\n                </annotation>\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"string\"/>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"CompRegisterNumber\" minOccurs=\"0\">\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:CompRegisterNumber\"/>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"ForeignCompRegisterNumber\" minOccurs=\"0\">\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:CompRegisterNumber\">\n                      <attribute name=\"writeable\" type=\"boolean\"/>\n                    </extension>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"ClubRegisterNumber\" minOccurs=\"0\">\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:ClubRegisterNumber\"/>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"MunicipalNumber\" minOccurs=\"0\">\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"party:MunicipalNumber\"/>\n                  </simpleContent>\n                </complexType>\n              </element>\n              <element name=\"NumberOfEmployees\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: MITARBEITERANZAHL\nDescription: Mitarbeiteranzahl</documentation>\n                </annotation>\n                <complexType>\n                  <simpleContent>\n                    <extension base=\"int\"/>\n                  </simpleContent>\n                </complexType>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"OrganisationCreate\">\n        <complexContent>\n          <extension base=\"party:PartyCreate\">\n            <sequence>\n              <element name=\"Name\" type=\"party:OrganisationName\">\n                <annotation>\n                  <documentation>KUMS: NAME\nDescription: Kundenname</documentation>\n                </annotation>\n              </element>\n              <element name=\"CompRegisterNumber\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: FIRMENBUCHNUMMER\nDescription: Externer Schluessel. Verweist auf den Eintrag des Kunden im Firmenbuch.</documentation>\n                </annotation>\n                <simpleType>\n                  <restriction base=\"string\">\n                    <maxLength value=\"11\"/>\n                  </restriction>\n                </simpleType>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"OrganisationCreateWithAccount\">\n        <complexContent>\n          <extension base=\"party:PartyCreateWithAccount\">\n            <sequence>\n              <element name=\"Name\" type=\"party:OrganisationName\">\n                <annotation>\n                  <documentation>KUMS: NAME\nDescription: Kundenname</documentation>\n                </annotation>\n              </element>\n              <element name=\"CompRegisterNumber\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: FIRMENBUCHNUMMER\nDescription: Externer Schluessel. Verweist auf den Eintrag des Kunden im Firmenbuch.</documentation>\n                </annotation>\n                <simpleType>\n                  <restriction base=\"string\">\n                    <maxLength value=\"11\"/>\n                  </restriction>\n                </simpleType>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <simpleType name=\"OrganisationName\">\n        <annotation>\n          <documentation>KUMS: NAME\nDescription: Kundenname</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"250\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"OrganisationSearch\">\n        <complexContent>\n          <extension base=\"party:PartySearch\">\n            <sequence>\n              <element name=\"CompRegisterNumber\" type=\"party:CompRegisterNumber\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: FIRMENBUCHNUMMER\nDescription: Externer Schluessel. Verweist auf den Eintrag des Kunden im Firmenbuch.</documentation>\n                </annotation>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <simpleType name=\"OrganisationType\">\n        <annotation>\n          <documentation>KUMS: ORG_TYP\nDescription: Entitaetsname aus dem logischen Datenmodell dzt. Organisation oder Person</documentation>\n        </annotation>\n        <restriction base=\"token\">\n          <maxLength value=\"3\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"OrganisationUpdate\">\n        <complexContent>\n          <extension base=\"party:PartyUpdate\">\n            <sequence>\n              <element name=\"Name\" type=\"party:OrganisationName\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: NAME\nDescription: Kundenname</documentation>\n                </annotation>\n              </element>\n              <element name=\"ForeignCompRegisterNumber\" type=\"party:ForeignCompRegisterNumber\" minOccurs=\"0\">\n                <annotation>\n                  <documentation>KUMS: AUSL_FBNR\nDescription: Auslaendische Firmenbuchnummer</documentation>\n                </annotation>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"Party\" abstract=\"true\">\n        <sequence>\n          <element name=\"PartyId\" type=\"party:PartyId\"/>\n          <element name=\"ShortName\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: KURZNAMEDescription: Kurzname, Abkuerzung</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"38\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"ContractAllowed\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: VERTRAGSFAEHIG\nDescription: Vertragsfaehigkeit des Kunden</documentation>\n            </annotation>\n            <complexType>\n              <simpleContent>\n                <extension base=\"boolean\">\n                  <attribute name=\"writeable\" type=\"anySimpleType\"/>\n                </extension>\n              </simpleContent>\n            </complexType>\n          </element>\n          <element name=\"Dead\" minOccurs=\"0\">\n            <annotation>\n              <documentation>verstorben, KUMS: Status, Statusdatum</documentation>\n            </annotation>\n            <complexType>\n              <simpleContent>\n                <extension base=\"boolean\">\n                  <attribute name=\"writeable\" type=\"boolean\"/>\n                </extension>\n              </simpleContent>\n            </complexType>\n          </element>\n          <element name=\"AccountManagementSegment\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: KUNDENSEGMENT\nDescription: KUMS: Kundensegment -Werte sind: KAM,TSME,ICA,CA,SOHO,SME,KO,INT,RES,KRE</documentation>\n            </annotation>\n            <complexType>\n              <simpleContent>\n                <extension base=\"party:AccountManagementSegment\">\n                  <attribute name=\"writeable\" type=\"boolean\"/>\n                </extension>\n              </simpleContent>\n            </complexType>\n          </element>\n          <element name=\"CustomerPassword\" minOccurs=\"0\">\n            <complexType>\n              <simpleContent>\n                <extension base=\"party:CustomerPassword\">\n                  <attribute name=\"writeable\" type=\"boolean\"/>\n                </extension>\n              </simpleContent>\n            </complexType>\n          </element>\n          <element name=\"KSVNumber\" minOccurs=\"0\">\n            <complexType>\n              <simpleContent>\n                <extension base=\"party:KSVNumber\">\n                  <attribute name=\"writeable\" type=\"anySimpleType\"/>\n                </extension>\n              </simpleContent>\n            </complexType>\n          </element>\n          <element name=\"Nationality\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: tbd.</documentation>\n            </annotation>\n            <complexType>\n              <simpleContent>\n                <extension base=\"party:Nationality\">\n                  <attribute name=\"writeable\" type=\"anySimpleType\"/>\n                </extension>\n              </simpleContent>\n            </complexType>\n          </element>\n          <element name=\"UIDs\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"UID\" type=\"party:UID\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"StandardAddress\" type=\"party:Address\" minOccurs=\"0\"/>\n          <element name=\"PartyRoles\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"PartyRole\" type=\"party:PartyRole\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"Solvency\" type=\"party:Solvency\" minOccurs=\"0\"/>\n          <element name=\"DualSegment\" type=\"party:DualSegmentType\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"DualSegmentType\">\n        <annotation>\n          <documentation>Values in KUMS:0 or empty string - White, 1 - Green, 2 - Black, 3 - Dual, 4 - Convergent, 5 - GreenAndConvergent, 6 - BlackAndConvergent, 7 - DualAndConvergent</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <enumeration value=\"White\"/>\n          <enumeration value=\"Green\"/>\n          <enumeration value=\"Black\"/>\n          <enumeration value=\"Dual\"/>\n          <enumeration value=\"Convergent\"/>\n          <enumeration value=\"GreenAndConvergent\"/>\n          <enumeration value=\"BlackAndConvergent\"/>\n          <enumeration value=\"DualAndConvergent\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"PartyCreate\" abstract=\"true\">\n        <sequence>\n          <element name=\"Nationality\" type=\"party:Nationality\" minOccurs=\"0\"/>\n          <element name=\"StandardAddress\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"LkmsId\">\n                  <annotation>\n                    <documentation>Description: Stammsitz bei Organisation, Meldeadresse bei Person</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"12\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"PartyRoles\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"PartyRole\" type=\"party:PartyRole\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"UID\" type=\"party:UID\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"PartyId\">\n        <annotation>\n          <documentation>KUMS: PARTNERID\nDescription: Kundennummer KUMS</documentation>\n        </annotation>\n        <restriction base=\"token\">\n          <maxLength value=\"12\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"PartyIdType\">\n        <annotation>\n          <documentation>KUMS: PARTNERID\nDescription: Kundennummer KUMS</documentation>\n        </annotation>\n        <restriction base=\"token\">\n          <maxLength value=\"12\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"PartyRole\" abstract=\"true\">\n        <sequence>\n          <element name=\"ContactMediums\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"ContactMedium\" type=\"party:ContactMedium\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"PartyCreateWithAccount\" abstract=\"true\">\n        <sequence>\n          <element name=\"Party\" type=\"party:PartyCreate\"/>\n          <element name=\"PartyId\" type=\"party:PartyId\" minOccurs=\"0\"/>\n          <element name=\"Account\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"CreateAccount\" type=\"boolean\"/>\n                <element name=\"AccountType\" type=\"token\" minOccurs=\"0\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"PartyUpdateWithNonLKMSAddress\">\n        <sequence>\n          <element name=\"PartyId\" type=\"party:PartyId\"/>\n          <element name=\"AttentionOf\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Zu Handen</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"NonLKMSAddress\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"Street\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>STRASSE Description: Strassenbezeichnung</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"38\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"HouseNumber\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>HAUSNUMMER Description: Hausnummer</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"7\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"Block\" type=\"string\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>BLOCK</documentation>\n                  </annotation>\n                </element>\n                <element name=\"Staircase\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>STIEGE Description: Stiege</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"3\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"FloorNumber\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>STOCK Description: Stockwerk</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"3\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"DoorNumber\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>TUER Description: Tuer</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"4\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"Additional\" type=\"string\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>ADRESSEN_EXTRA</documentation>\n                  </annotation>\n                </element>\n                <element name=\"Postcode\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>PLZ Description: Postleitzahl</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"12\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"City\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>PLZORT Description: Bezeichnung des Postleitzahlen Ortes</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"38\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"SubCity\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>NEBENORT</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"38\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"Village\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>ORT Description: Bezeichnung des pol. Ortes</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"38\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"Country\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>3-stelliger ISO-Code</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"token\">\n                      <length value=\"3\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"PartySearch\" abstract=\"true\">\n        <sequence>\n          <element name=\"PartyId\" type=\"party:PartyId\"/>\n          <element name=\"ContractAllowed\" type=\"party:ContractAllowed\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: VERTRAGSFAEHIG\nDescription: Vertragsfaehigkeit des Kunden</documentation>\n            </annotation>\n          </element>\n          <element name=\"ShortName\" type=\"party:ShortName\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: KURZNAMEDescription: Kurzname, Abkuerzung</documentation>\n            </annotation>\n          </element>\n          <element name=\"StandardAddress\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"ShortAddress\" type=\"string\"/>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"DualSegment\" type=\"party:DualSegmentType\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"PartyUpdate\" abstract=\"true\">\n        <sequence>\n          <element name=\"PartyId\" type=\"party:PartyId\"/>\n          <element name=\"Dead\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: StatusDatum\nDescription: Geschaeftspartner-Status (verschluesselt - KMT11600)</documentation>\n            </annotation>\n          </element>\n          <!--element name=\"CustomerPassword\" minOccurs=\"0\">\n\t\t\t\t<annotation>\n\t\t\t\t\t<documentation>KUMS: PASSWORT\nDesc: Kundenpasswort - nicht in Verwendung</documentation>\n\t\t\t\t</annotation>\n\t\t\t\t<simpleType>\n\t\t\t\t\t<restriction base=\"string\">\n\t\t\t\t\t\t<maxLength value=\"8\"/>\n\t\t\t\t\t</restriction>\n\t\t\t\t</simpleType>\n\t\t\t</element-->\n          <element name=\"Nationality\" type=\"string\" minOccurs=\"0\"/>\n          <element name=\"UIDs\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"UID\" type=\"party:UID\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"StandardAddress\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"LkmsId\">\n                  <annotation>\n                    <documentation>Description: Stammsitz bei Organisation, Meldeadresse bei Person</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"12\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"PartyRoles\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"PartyRole\" type=\"party:PartyRole\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n          <!--element name=\"LegalRepresentative\" minOccurs=\"0\">\n\t\t\t\t<complexType>\n\t\t\t\t\t<sequence>\n\t\t\t\t\t\t<element name=\"PartyId\" type=\"party:PartyId\"/>\n\t\t\t\t\t</sequence>\n\t\t\t\t</complexType>\n\t\t\t</element-->\n        </sequence>\n      </complexType>\n      <simpleType name=\"PlaceOfBirth\">\n        <annotation>\n          <documentation>KUMS:tbd</documentation>\n        </annotation>\n        <restriction base=\"string\"/>\n      </simpleType>\n      <simpleType name=\"ShortName\">\n        <annotation>\n          <documentation>KUMS: KURZNAME\nDescription: Kurzname, Abkuerzung</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"38\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"Solvency\">\n        <sequence>\n          <element name=\"Insolvency\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: INSOLVENZ\nDescriiption: K = Konkurs, A = Ausgleich, N = Konkursabweisung mangels Masse, S = Schuldenregulierung, Default = blank</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"1\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"InsolvencyDate\" type=\"date\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: INSOLVENZDATUM\nDescription: Insolvenzdatum</documentation>\n            </annotation>\n          </element>\n          <element name=\"CreditLimit\" type=\"float\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: KREDITLIMIT\nDescription: Ein Geldbetrag</documentation>\n            </annotation>\n          </element>\n          <element name=\"CreditCurrencyCode\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: KREDITLIMIT_W\nDescription: EUR Kreditlimit - Waehrung</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"3\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"BadCustomer\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: BAD_CUSTOMER\nDescription: Schlechter Kunde</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"1\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"CreditRiskCategory\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: BONITAET\nDescription: wird derzeit nicht verwendet</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"3\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"BlockDelivery\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: Z_LIEFERSPERR\nDescription: Zentrale Liefersperre: blank = keine Beschraenkung, N = Neu (bei Kundenanlage), G = Lieferbeschraenkung, R = Bestellung ablehnen</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"1\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <simpleType name=\"Suffix\">\n        <annotation>\n          <documentation>KUMS: NACHSATZ Description: Suffix, jun., sen.</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"32\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"TelephoneNumber\">\n        <complexContent>\n          <extension base=\"party:ContactMedium\">\n            <sequence>\n              <element name=\"PhoneNumber\">\n                <annotation>\n                  <documentation>KUMS: TELEFON\nDescription: Angaben zur Erreichbarkeit tagsueber.Rufnummer inkl. aller Vorwahlen.</documentation>\n                </annotation>\n                <simpleType>\n                  <restriction base=\"string\">\n                    <maxLength value=\"32\"/>\n                  </restriction>\n                </simpleType>\n              </element>\n              <element name=\"Type\" type=\"string\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <simpleType name=\"Title\">\n        <annotation>\n          <documentation>KUMS: TITEL, A_TITEL Description: Ist eine Vereinigung von akademischem und freien Titel</documentation>\n        </annotation>\n        <restriction base=\"string\">\n          <maxLength value=\"64\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"UID\">\n        <sequence>\n          <element name=\"Number\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS: UID_Nummer\nDescription: Umsatzsteuer-Identifikationsnummer (KUT00940)</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"22\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <!--element name=\"ValidationDate\" type=\"date\" minOccurs=\"0\">\n\t\t\t\t<annotation>\n\t\t\t\t\t<documentation>KUMS: Datum_Geprueft\nDescription: Datum d. Pruefung, Format: JJJJ-MM-TT, leer wenn GEPRUEFT=N.</documentation>\n\t\t\t\t</annotation>\n\t\t\t</element>\n\t\t\t<element name=\"Taxcode\" minOccurs=\"0\">\n\t\t\t\t<annotation>\n\t\t\t\t\t<documentation>KUMS: UID_Steuerkennzeichen\nDescription: Steuercode (KMT11600)</documentation>\n\t\t\t\t</annotation>\n\t\t\t\t<simpleType>\n\t\t\t\t\t<restriction base=\"string\">\n\t\t\t\t\t\t<maxLength value=\"3\"/>\n\t\t\t\t\t</restriction>\n\t\t\t\t</simpleType>\n\t\t\t</element-->\n        </sequence>\n      </complexType>\n      <simpleType name=\"VIP\">\n        <annotation>\n          <documentation>KUMS: SONDERBEHANDLUNGDescription: VIP1-4 verschluesselt: Werte sind: 501,502,503,504</documentation>\n        </annotation>\n        <restriction base=\"token\"/>\n      </simpleType>\n      <complexType name=\"createPartyRequest\">\n        <sequence>\n          <element name=\"Party\" type=\"party:PartyCreate\"/>\n          <element name=\"User\" type=\"token\">\n            <annotation>\n              <documentation>User Identification</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\"/>\n          <element name=\"Agent\" type=\"token\" minOccurs=\"0\">\n            <annotation>\n              <documentation>if User is a system user then the NT user can be but into this field for documentation purposes. The field is optional since the NT user might not be available in all cases</documentation>\n            </annotation>\n          </element>\n          <element name=\"TransactionId\" type=\"token\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS KI OrderNummer</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"createPartyWithAccountRequest\">\n        <sequence>\n          <element name=\"PartyWithAccount\">\n            <complexType>\n              <complexContent>\n                <extension base=\"party:PartyCreateWithAccount\"/>\n              </complexContent>\n            </complexType>\n          </element>\n          <element name=\"User\" type=\"token\">\n            <annotation>\n              <documentation>User Identification</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\"/>\n          <element name=\"Agent\" type=\"token\" minOccurs=\"0\">\n            <annotation>\n              <documentation>if User is a system user then the NT user can be but into this field for documentation purposes. The field is optional since the NT user might not be available in all cases</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"createPartyWithAccountResponse\">\n        <sequence>\n          <element name=\"PartyId\" type=\"party:PartyId\"/>\n          <element name=\"NewPartyCreated\" type=\"boolean\"/>\n          <element name=\"AccountId\" type=\"token\"/>\n          <element name=\"NewAccountCreated\" type=\"boolean\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"createPartyResponse\">\n        <sequence>\n          <element name=\"PartyId\" type=\"party:PartyId\"/>\n          <element name=\"NewPartyCreated\" type=\"boolean\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"getPartyRequest\">\n        <sequence>\n          <element name=\"GetBy\">\n            <complexType>\n              <choice>\n                <element name=\"ClubRegisterNumber\" type=\"party:ClubRegisterNumber\" default=\"token\"/>\n                <element name=\"CompRegisterNumber\" type=\"party:CompRegisterNumber\"/>\n                <element name=\"CustomerAccount\">\n                  <complexType>\n                    <choice>\n                      <element name=\"BAN\" type=\"token\"/>\n                      <element name=\"BNAccountId\" type=\"token\"/>\n                    </choice>\n                  </complexType>\n                </element>\n                <element name=\"CustomerBySubscription\">\n                  <complexType>\n                    <choice>\n                      <element name=\"AonAccountId\" type=\"token\"/>\n                      <element name=\"MSISDN\" type=\"common:CallNumber\"/>\n                      <element name=\"WirelineCallnumber\" type=\"common:CallNumber\"/>\n                    </choice>\n                  </complexType>\n                </element>\n                <element name=\"GenericIdentification\" type=\"string\">\n                  <annotation>\n                    <documentation>different identification attributes may be specified here. currently supported Mobile-Callnumber (MSISDN), Wirleine-Callnumber, Party-Id</documentation>\n                  </annotation>\n                </element>\n                <element name=\"PartyId\" type=\"party:PartyId\"/>\n                <element name=\"UIDNumber\">\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"22\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n              </choice>\n            </complexType>\n          </element>\n          <element name=\"User\" type=\"token\">\n            <annotation>\n              <documentation>User Identification</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"getPartyResponse\">\n        <sequence>\n          <element name=\"Party\" type=\"party:Party\"/>\n          <element name=\"LastChangeDate\">\n            <simpleType>\n              <restriction base=\"string\">\n                <length value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"searchPartyRequest\">\n        <sequence>\n          <element name=\"SearchCriteria\">\n            <complexType>\n              <sequence>\n                <element name=\"Name\" type=\"string\" minOccurs=\"0\"/>\n                <element name=\"GivenName\" minOccurs=\"0\">\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"32\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"FamilyName\" minOccurs=\"0\">\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"250\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"BirthDate\" type=\"date\" minOccurs=\"0\"/>\n                <element name=\"Street\" minOccurs=\"0\">\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"38\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"HouseNumber\" minOccurs=\"0\">\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"7\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"Postcode\" minOccurs=\"0\">\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"12\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"Country\" minOccurs=\"0\">\n                  <simpleType>\n                    <restriction base=\"token\">\n                      <maxLength value=\"3\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"IncludeProspects\" type=\"boolean\" minOccurs=\"0\">\n                  <annotation>\n                    <documentation>If field is omitted or set to false then prospects are not included, if true, they are included. Prospects are customers where the KUMS-ID/PartyId starts with 8.</documentation>\n                  </annotation>\n                </element>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"User\" type=\"token\">\n            <annotation>\n              <documentation>User Identification</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"searchPartyResponse\">\n        <sequence>\n          <element name=\"Parties\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"Party\" type=\"party:PartySearch\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"updatePartyRequest\">\n        <sequence>\n          <element name=\"Party\" type=\"party:PartyUpdate\"/>\n          <element name=\"User\" type=\"token\">\n            <annotation>\n              <documentation>User Identification</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\"/>\n          <element name=\"Agent\" type=\"token\" minOccurs=\"0\">\n            <annotation>\n              <documentation>if User is a system user then the NT user can be but into this field for documentation purposes. The field is optional since the NT user might not be available in all cases</documentation>\n            </annotation>\n          </element>\n          <element name=\"LastChangeDate\">\n            <simpleType>\n              <restriction base=\"string\">\n                <length value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"reportStatusToCaller\" type=\"boolean\">\n            <annotation>\n              <documentation>true: send info which fields have been automatically updated and which need manual update to the caller. No Clarify case or interaction is created.\nfalse: no info is sent back to the caller. A Clarify case is created for manual udpates, an interaction for automatic updates.</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"updatePartyWithNonLKMSAddressRequest\">\n        <sequence>\n          <element name=\"Party\" type=\"party:PartyUpdateWithNonLKMSAddress\"/>\n          <element name=\"User\" type=\"token\">\n            <annotation>\n              <documentation>User Identification</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\"/>\n          <element name=\"Agent\" type=\"token\" minOccurs=\"0\">\n            <annotation>\n              <documentation>if User is a system user then the NT user can be but into this field for documentation purposes. The field is optional since the NT user might not be available in all cases</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"updatePartyWithNonLKMSAddressResponse\"/>\n      <complexType name=\"updatePartyResponse\">\n        <choice>\n          <element name=\"UpdatesPerformedAutomatically\" type=\"party:PartyUpdate\">\n            <annotation>\n              <documentation>This element contains those elements of the request structure, for which an automated update was peformed in KUMS.</documentation>\n            </annotation>\n          </element>\n          <element name=\"UpdatesToBePerformedManually\" type=\"party:PartyUpdate\">\n            <annotation>\n              <documentation>This element contains those elements of the request structure for which a manual update needs to be performed, ie. which were not updated by the process in KUMS.</documentation>\n            </annotation>\n          </element>\n        </choice>\n      </complexType>\n      <element name=\"Address\" type=\"party:Address\"/>\n      <element name=\"ContactMedium\" type=\"party:ContactMedium\"/>\n      <element name=\"ContactPerson\" type=\"anyType\"/>\n      <element name=\"EmailContact\" type=\"party:EmailContact\"/>\n      <element name=\"FaxNumber\" type=\"party:FaxNumber\"/>\n      <element name=\"FormattedAddress\" type=\"party:FormattedAddress\"/>\n      <element name=\"Individual\" type=\"party:Individual\"/>\n      <element name=\"Industry\" type=\"party:Industry\"/>\n      <element name=\"Organisation\" type=\"party:Organisation\"/>\n      <element name=\"Solvency\" type=\"party:Solvency\"/>\n      <element name=\"TelephoneNumber\" type=\"party:TelephoneNumber\"/>\n      <element name=\"UID\" type=\"party:UID\"/>\n      <element name=\"createPartyRequest\" type=\"party:createPartyRequest\"/>\n      <element name=\"createPartyResponse\" type=\"party:createPartyResponse\"/>\n      <element name=\"createPartyWithAccountRequest\" type=\"party:createPartyWithAccountRequest\"/>\n      <element name=\"createPartyWithAccountResponse\" type=\"party:createPartyWithAccountResponse\"/>\n      <element name=\"getPartyRequest\" type=\"party:getPartyRequest\"/>\n      <element name=\"getPartyResponse\" type=\"party:getPartyResponse\"/>\n      <element name=\"searchPartyRequest\" type=\"party:searchPartyRequest\"/>\n      <element name=\"searchPartyResponse\" type=\"party:searchPartyResponse\"/>\n      <element name=\"updatePartyRequest\" type=\"party:updatePartyRequest\"/>\n      <element name=\"updatePartyResponse\" type=\"party:updatePartyResponse\"/>\n      <element name=\"updatePartyWithNonLKMSAddressRequest\" type=\"party:updatePartyWithNonLKMSAddressRequest\"/>\n      <element name=\"updatePartyWithNonLKMSAddressResponse\" type=\"party:updatePartyWithNonLKMSAddressResponse\"/>\n    </schema>\n    <schema targetNamespace=\"http://cdm.a1telekom.at/common/error\" version=\"1.1\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:error=\"http://cdm.a1telekom.at/common/error\">\n      <complexType name=\"ErrorDetailsType\">\n        <sequence>\n          <element name=\"ErrorCode\" type=\"token\">\n            <annotation>\n              <documentation>Code of the error. Should consist of \"prefix\"-\"code\" (e.g. AAA-12345), where \"prefix\" is unique code of the service and \"code\" is code within the service</documentation>\n            </annotation>\n          </element>\n          <element name=\"ErrorMessage\" type=\"token\">\n            <annotation>\n              <documentation>Error-Message</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\" minOccurs=\"0\">\n            <annotation>\n              <documentation>System where the error has its source. If in EAI, then \"EAI\"</documentation>\n            </annotation>\n          </element>\n          <element name=\"ErrorDetails\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Optional Error Details</documentation>\n            </annotation>\n          </element>\n          <element name=\"IsTechnical\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>1 .. technical error, 0 .. business error. Not present - unknown.</documentation>\n            </annotation>\n          </element>\n          <element name=\"Repeatable\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>1 .. execution repeatable, 0 .. non-repeatable. Not present - unknown.</documentation>\n            </annotation>\n          </element>\n          <element name=\"Additionals\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Additional Success/Error Messages</documentation>\n            </annotation>\n            <complexType>\n              <sequence>\n                <element name=\"Additional\" maxOccurs=\"unbounded\">\n                  <complexType>\n                    <sequence>\n                      <element name=\"Code\" type=\"token\"/>\n                      <element name=\"MessageTxt\" type=\"token\" minOccurs=\"0\"/>\n                    </sequence>\n                  </complexType>\n                </element>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <element name=\"ErrorDetails\" type=\"error:ErrorDetailsType\"/>\n    </schema>\n    <schema targetNamespace=\"http://cdm.a1telekom.at/common\" version=\"1.1\" elementFormDefault=\"unqualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:tns=\"http://cdm.a1telekom.at/common\">\n      <complexType name=\"CallNumber\">\n        <sequence>\n          <element name=\"CC\" type=\"token\">\n            <annotation>\n              <documentation>Country Code</documentation>\n            </annotation>\n          </element>\n          <element name=\"NDC\" type=\"token\">\n            <annotation>\n              <documentation>National Destination Code</documentation>\n            </annotation>\n          </element>\n          <element name=\"SN\" type=\"token\">\n            <annotation>\n              <documentation>Subscriber Number</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"Money\">\n        <sequence>\n          <element name=\"Units\" type=\"tns:MoneyUnit\"/>\n          <element name=\"Amount\" type=\"decimal\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"MoneyUnit\">\n        <restriction base=\"string\">\n          <enumeration value=\"EUR\"/>\n          <enumeration value=\"PERCENT\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"PeriodType\">\n        <restriction base=\"string\">\n          <enumeration value=\"monthly\"/>\n          <enumeration value=\"one-time\"/>\n          <enumeration value=\"installation\"/>\n          <enumeration value=\"change\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"PresenceType\">\n        <restriction base=\"string\">\n          <enumeration value=\"required\"/>\n          <enumeration value=\"optional\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"Quantity\">\n        <sequence>\n          <element name=\"Units\" type=\"string\"/>\n          <element name=\"Amount\" type=\"decimal\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"TimePeriod\">\n        <sequence>\n          <element name=\"StartDateTime\" type=\"dateTime\" minOccurs=\"0\"/>\n          <element name=\"EndDateTime\" type=\"dateTime\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"ValueType\">\n        <restriction base=\"string\">\n          <enumeration value=\"string\"/>\n          <enumeration value=\"long\"/>\n          <enumeration value=\"boolean\"/>\n          <enumeration value=\"dateTime\"/>\n          <enumeration value=\"decimal\"/>\n          <enumeration value=\"lkmsId\"/>\n          <enumeration value=\"mbit\"/>\n          <enumeration value=\"mb\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"sidId\">\n        <restriction base=\"token\"/>\n      </simpleType>\n      <element name=\"CallNumber\" type=\"tns:CallNumber\"/>\n    </schema>\n  </wsdl:types>\n  <wsdl:message name=\"createPartyRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:createPartyRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"createPartyResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:createPartyResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"createPartyWithAccountRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:createPartyWithAccountRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"createPartyWithAccountResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:createPartyWithAccountResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"partyError\">\n    <wsdl:part name=\"part1\" element=\"ns1:ErrorDetails\"/>\n  </wsdl:message>\n  <wsdl:message name=\"updatePartyRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:updatePartyRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"updatePartyResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:updatePartyResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"updatePartyWithNonLKMSAddressRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:updatePartyWithNonLKMSAddressRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"updatePartyWithNonLKMSAddressResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:updatePartyWithNonLKMSAddressResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getPartyRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getPartyRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getPartyResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getPartyResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"searchPartyRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:searchPartyRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"searchPartyResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:searchPartyResponse\"/>\n  </wsdl:message>\n  <wsdl:portType name=\"PartyPortType\">\n    <wsdl:operation name=\"createParty\">\n      <wsdl:documentation>creates a new Party in KUMS</wsdl:documentation>\n      <wsdl:input message=\"tns:createPartyRequest\"/>\n      <wsdl:output message=\"tns:createPartyResponse\"/>\n      <wsdl:fault name=\"partyError\" message=\"tns:partyError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"createPartyWithAccount\">\n      <wsdl:documentation>creates a new Party in KUMS</wsdl:documentation>\n      <wsdl:input name=\"createPartyWithAccountRequest\" message=\"tns:createPartyWithAccountRequest\"/>\n      <wsdl:output name=\"createPartyWithAccountResponse\" message=\"tns:createPartyWithAccountResponse\"/>\n      <wsdl:fault name=\"partyError\" message=\"tns:partyError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"updateParty\">\n      <wsdl:documentation>updates data for an existing party</wsdl:documentation>\n      <wsdl:input message=\"tns:updatePartyRequest\"/>\n      <wsdl:output message=\"tns:updatePartyResponse\"/>\n      <wsdl:fault name=\"partyError\" message=\"tns:partyError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"updatePartyWithNonLKMSAddress\">\n      <wsdl:documentation>updates address wich is not stored in LKMS for an existing party</wsdl:documentation>\n      <wsdl:input message=\"tns:updatePartyWithNonLKMSAddressRequest\"/>\n      <wsdl:output message=\"tns:updatePartyWithNonLKMSAddressResponse\"/>\n      <wsdl:fault name=\"partyError\" message=\"tns:partyError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"getParty\">\n      <wsdl:documentation>retrieves detail data for an existing party by providing one of several possible key attributes</wsdl:documentation>\n      <wsdl:input message=\"tns:getPartyRequest\"/>\n      <wsdl:output message=\"tns:getPartyResponse\"/>\n      <wsdl:fault name=\"partyError\" message=\"tns:partyError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"searchParty\">\n      <wsdl:documentation>searches for parties by providing several search critierias. delivers overview data for a party only.</wsdl:documentation>\n      <wsdl:input message=\"tns:searchPartyRequest\"/>\n      <wsdl:output message=\"tns:searchPartyResponse\"/>\n      <wsdl:fault name=\"partyError\" message=\"tns:partyError\"/>\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"PartyPortTypeHttpBinding\" type=\"tns:PartyPortType\">\n    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <wsdl:operation name=\"createParty\">\n      <soap:operation style=\"document\" soapAction=\"/esb/Party//createParty\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"partyError\">\n        <soap:fault name=\"partyError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"createPartyWithAccount\">\n      <soap:operation style=\"document\" soapAction=\"/esb/Party//createPartyWithAccount\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"partyError\">\n        <soap:fault name=\"partyError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"updateParty\">\n      <soap:operation style=\"document\" soapAction=\"/esb/Party//updateParty\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"partyError\">\n        <soap:fault name=\"partyError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"updatePartyWithNonLKMSAddress\">\n      <soap:operation style=\"document\" soapAction=\"/esb/Party//updatePartyWithNonLKMSAddress\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"partyError\">\n        <soap:fault name=\"partyError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"getParty\">\n      <soap:operation style=\"document\" soapAction=\"/esb/Party//getParty\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"partyError\">\n        <soap:fault name=\"partyError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"searchParty\">\n      <soap:operation style=\"document\" soapAction=\"/esb/Party//searchParty\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"partyError\">\n        <soap:fault name=\"partyError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"Party\">\n    <wsdl:port name=\"PartyPortTypeTa-devViHttpEndpoint\" binding=\"tns:PartyPortTypeHttpBinding\">\n      <soap:address location=\"http://esb-e.a1telekom.inside:8080/esb/si:ta-dev\"/>\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint></con:endpoints><con:operation isOneWay=\"false\" action=\"/esb/Party//createParty\" name=\"createParty\" bindingOperationName=\"createParty\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:createPartyRequest>\n         <par:Party>\n            <!--Optional:-->\n            <par:Nationality>?</par:Nationality>\n            <!--Optional:-->\n            <par:StandardAddress>\n               <par:LkmsId>?</par:LkmsId>\n            </par:StandardAddress>\n            <!--Optional:-->\n            <par:PartyRoles>\n               <!--1 or more repetitions:-->\n               <par:PartyRole>\n                  <!--Optional:-->\n                  <par:ContactMediums>\n                     <!--1 or more repetitions:-->\n                     <par:ContactMedium/>\n                  </par:ContactMediums>\n               </par:PartyRole>\n            </par:PartyRoles>\n            <!--Optional:-->\n            <par:UID>\n               <!--Optional:-->\n               <par:Number>?</par:Number>\n            </par:UID>\n         </par:Party>\n         <par:User>?</par:User>\n         <par:SourceSystem>?</par:SourceSystem>\n         <!--Optional:-->\n         <par:Agent>?</par:Agent>\n         <!--Optional:-->\n         <par:TransactionId>?</par:TransactionId>\n      </par:createPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//createParty\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/Party//createPartyWithAccount\" name=\"createPartyWithAccount\" bindingOperationName=\"createPartyWithAccount\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:createPartyWithAccountRequest>\n         <par:PartyWithAccount>\n            <par:Party>\n               <!--Optional:-->\n               <par:Nationality>?</par:Nationality>\n               <!--Optional:-->\n               <par:StandardAddress>\n                  <par:LkmsId>?</par:LkmsId>\n               </par:StandardAddress>\n               <!--Optional:-->\n               <par:PartyRoles>\n                  <!--1 or more repetitions:-->\n                  <par:PartyRole>\n                     <!--Optional:-->\n                     <par:ContactMediums>\n                        <!--1 or more repetitions:-->\n                        <par:ContactMedium/>\n                     </par:ContactMediums>\n                  </par:PartyRole>\n               </par:PartyRoles>\n               <!--Optional:-->\n               <par:UID>\n                  <!--Optional:-->\n                  <par:Number>?</par:Number>\n               </par:UID>\n            </par:Party>\n            <!--Optional:-->\n            <par:PartyId>?</par:PartyId>\n            <!--Optional:-->\n            <par:Account>\n               <par:CreateAccount>?</par:CreateAccount>\n               <!--Optional:-->\n               <par:AccountType>?</par:AccountType>\n            </par:Account>\n         </par:PartyWithAccount>\n         <par:User>?</par:User>\n         <par:SourceSystem>?</par:SourceSystem>\n         <!--Optional:-->\n         <par:Agent>?</par:Agent>\n      </par:createPartyWithAccountRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//createPartyWithAccount\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/Party//getParty\" name=\"getParty\" bindingOperationName=\"getParty\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:CustomerAccount><par:BNAccountId>912721062</par:BNAccountId></par:CustomerAccount></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/Party//searchParty\" name=\"searchParty\" bindingOperationName=\"searchParty\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n            <!--Optional:-->\n            <par:Name>?</par:Name>\n            <!--Optional:-->\n            <par:GivenName>?</par:GivenName>\n            <!--Optional:-->\n            <par:FamilyName>?</par:FamilyName>\n            <!--Optional:-->\n            <par:BirthDate>?</par:BirthDate>\n            <!--Optional:-->\n            <par:Street>?</par:Street>\n            <!--Optional:-->\n            <par:HouseNumber>?</par:HouseNumber>\n            <!--Optional:-->\n            <par:Postcode>?</par:Postcode>\n            <!--Optional:-->\n            <par:Country>?</par:Country>\n            <!--Optional:-->\n            <par:IncludeProspects>?</par:IncludeProspects>\n         </par:SearchCriteria>\n         <par:User>?</par:User>\n         <par:SourceSystem>?</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/Party//updateParty\" name=\"updateParty\" bindingOperationName=\"updateParty\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:updatePartyRequest>\n         <par:Party>\n            <par:PartyId>?</par:PartyId>\n            <!--Optional:-->\n            <par:Dead>?</par:Dead>\n            <!--Optional:-->\n            <par:Nationality>?</par:Nationality>\n            <!--Optional:-->\n            <par:UIDs>\n               <!--1 or more repetitions:-->\n               <par:UID>\n                  <!--Optional:-->\n                  <par:Number>?</par:Number>\n               </par:UID>\n            </par:UIDs>\n            <!--Optional:-->\n            <par:StandardAddress>\n               <par:LkmsId>?</par:LkmsId>\n            </par:StandardAddress>\n            <!--Optional:-->\n            <par:PartyRoles>\n               <!--1 or more repetitions:-->\n               <par:PartyRole>\n                  <!--Optional:-->\n                  <par:ContactMediums>\n                     <!--1 or more repetitions:-->\n                     <par:ContactMedium/>\n                  </par:ContactMediums>\n               </par:PartyRole>\n            </par:PartyRoles>\n         </par:Party>\n         <par:User>?</par:User>\n         <par:SourceSystem>?</par:SourceSystem>\n         <!--Optional:-->\n         <par:Agent>?</par:Agent>\n         <par:LastChangeDate>?</par:LastChangeDate>\n         <par:reportStatusToCaller>?</par:reportStatusToCaller>\n      </par:updatePartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//updateParty\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/Party//updatePartyWithNonLKMSAddress\" name=\"updatePartyWithNonLKMSAddress\" bindingOperationName=\"updatePartyWithNonLKMSAddress\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:updatePartyWithNonLKMSAddressRequest>\n         <par:Party>\n            <par:PartyId>?</par:PartyId>\n            <!--Optional:-->\n            <par:AttentionOf>?</par:AttentionOf>\n            <!--Optional:-->\n            <par:NonLKMSAddress>\n               <!--Optional:-->\n               <par:Street>?</par:Street>\n               <!--Optional:-->\n               <par:HouseNumber>?</par:HouseNumber>\n               <!--Optional:-->\n               <par:Block>?</par:Block>\n               <!--Optional:-->\n               <par:Staircase>?</par:Staircase>\n               <!--Optional:-->\n               <par:FloorNumber>?</par:FloorNumber>\n               <!--Optional:-->\n               <par:DoorNumber>?</par:DoorNumber>\n               <!--Optional:-->\n               <par:Additional>?</par:Additional>\n               <!--Optional:-->\n               <par:Postcode>?</par:Postcode>\n               <!--Optional:-->\n               <par:City>?</par:City>\n               <!--Optional:-->\n               <par:SubCity>?</par:SubCity>\n               <!--Optional:-->\n               <par:Village>?</par:Village>\n               <!--Optional:-->\n               <par:Country>?</par:Country>\n            </par:NonLKMSAddress>\n         </par:Party>\n         <par:User>?</par:User>\n         <par:SourceSystem>?</par:SourceSystem>\n         <!--Optional:-->\n         <par:Agent>?</par:Agent>\n      </par:updatePartyWithNonLKMSAddressRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//updatePartyWithNonLKMSAddress\"/></con:call></con:operation></con:interface><con:testSuite name=\"PartyPortTypeHttpBinding TestSuite\"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"getParty TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"getParty - getBy WirelineCallnumber\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy WirelineCallnumber\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:CustomerBySubscription><par:WirelineCallnumber><CC>43</CC><NDC>7941</NDC><SN>8089</SN></par:WirelineCallnumber></par:CustomerBySubscription></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy PartyId\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy PartyId\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:PartyId>104317370</par:PartyId></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy PartyId - PartyId with leading zeros\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy PartyId - PartyId with leading zeros\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:PartyId>00104317370</par:PartyId></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy PartyId - non existing PartyId\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy PartyId - non existing PartyId\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:PartyId>704317370</par:PartyId></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1002</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy PartyId - non numeric PartyId\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy PartyId - non numeric PartyId\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:PartyId>'</par:PartyId></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1002</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy PartyId - PartyId with special characters\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy PartyId - PartyId with special characters\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:PartyId>!104317370</par:PartyId></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1002</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy PartyId - PartyId with leading and trailing spaces\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy PartyId - PartyId with leading and trailing spaces\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:PartyId>  104317370  </par:PartyId></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy PartyId - PartyId with contained spaces\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy PartyId - PartyId with contained spaces\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:PartyId>1 04317370</par:PartyId></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1002</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy PartyId - PartyId > 12 characters\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy PartyId - PartyId > 12 characters\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:PartyId>1234567890123</par:PartyId></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [faultcode]\"><con:configuration><path>//faultcode[1]/text()</path><content>Server.FacadeError</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://eai.mobilkomaustriagroup.com/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>999</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy CustomerBySubscription - AonAccountId\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy CustomerBySubscription - AonAccountId\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:CustomerBySubscription><par:AonAccountId>914641284</par:AonAccountId></par:CustomerBySubscription></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy CustomerBySubscription - non existing AonAccountId\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy CustomerBySubscription - non existing AonAccountId\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:CustomerBySubscription><par:AonAccountId>904641284</par:AonAccountId></par:CustomerBySubscription></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1007</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy CustomerBySubscription - MSISDN - existing MSISDN\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy CustomerBySubscription - MSISDN - existing MSISDN\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:CustomerBySubscription><par:MSISDN><CC>43</CC><NDC>664</NDC><SN>75007603</SN></par:MSISDN></par:CustomerBySubscription></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>106268329</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy CustomerBySubscription - MSISDN - non existing MSISDN\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy CustomerBySubscription - MSISDN - non existing MSISDN\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:CustomerBySubscription><par:MSISDN><CC>43</CC><NDC>664</NDC><SN>2245286</SN></par:MSISDN></par:CustomerBySubscription></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy CustomerBySubscription - WirelineCallnumber - using MSISDN\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy CustomerBySubscription - WirelineCallnumber - using MSISDN\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:CustomerBySubscription><par:WirelineCallnumber><CC>43</CC><NDC>664</NDC><SN>75007603</SN></par:WirelineCallnumber></par:CustomerBySubscription></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"XPath Match\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>106268329</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - KUMSID\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - KUMSID\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>104317370</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - MSISDN - no leading 00\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - MSISDN - no leading 00\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>4366475007603</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>106268329</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - MSISDN - leading 00\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - MSISDN - leading 00\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>004366475007603</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>106268329</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - MSISDN - with spaces\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - MSISDN - with spaces\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>0043 664 75007603</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>106268329</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - MSISDN - with special characters\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - MSISDN - with special characters\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>0043-664-75007603</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>106268329</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - Wireline Callnumber - no leading 00\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - Wireline Callnumber - no leading 00\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>43794120544</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - Wireline Callnumber - leading 00\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - Wireline Callnumber - leading 00\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>0043794120544</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - Wireline Callnumber - leading +\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - Wireline Callnumber - leading +\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>+43794120544</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - Wireline Callnumber - national number with leading 0\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - Wireline Callnumber - national number with leading 0\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>0794120544</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - Wireline Callnumber - national number with no leading 0\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - Wireline Callnumber - national number with no leading 0\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>794120544</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getParty - getBy GenericIdentification - Wireline Callnumber - with appended extension station (Nebenstelle)\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>getParty</con:operation><con:request name=\"getParty - getBy GenericIdentification - Wireline Callnumber - with appended extension station (Nebenstelle)\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyRequest>\n         <par:GetBy>\n            <!--You have a CHOICE of the next 7 items at this level-->\n            \n            \n            \n            \n            \n            \n            \n         <par:GenericIdentification>4379412054411</par:GenericIdentification></par:GetBy>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:getPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:getPartyResponse[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"searchParty TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"searchParty - Name - Lastname-firstname with Wildcards\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Name - Lastname-firstname with Wildcards\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Name>Weiding% Ernesti%</par:Name></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Name - exact name - last name first\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Name - exact name - last name first\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Name>Weidinger Ernestine</par:Name></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Name - exact name - first name first\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Name - exact name - first name first\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Name>Ernestine Weidinger</par:Name></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\"><con:configuration/></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1003</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [faultstring]\"><con:configuration><path>//faultstring[1]/text()</path><content>PARTY-1003-KF081006 - KEIN KUNDE GEFUNDEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Name and Birthdate\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Name and Birthdate\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Name>Weidinger</par:Name><par:BirthDate>1964-11-30</par:BirthDate></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Name and wrong Birthdate\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Name and wrong Birthdate\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Name>Weidinger</par:Name><par:BirthDate>1964-11-29</par:BirthDate></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1008</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorMessage]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorMessage[1]/text()</path><content>No customer found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:SourceSystem]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:SourceSystem[1]/text()</path><content>KUMS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Birthdate only\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Birthdate only\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:BirthDate>1964-11-30</par:BirthDate></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1003</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorMessage]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorMessage[1]/text()</path><content>KF081007 - NAME ODER ADRESSE ANGEBEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:SourceSystem]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:SourceSystem[1]/text()</path><content>KUMS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Birthdate and Address\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Birthdate and Address\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:BirthDate>1964-11-30</par:BirthDate><par:Street>Albingdorf</par:Street><par:HouseNumber>29</par:HouseNumber><par:Postcode>4212</par:Postcode><par:Country>A</par:Country></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:BirthDate]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:BirthDate[1]/text()</path><content>1964-11-30</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Address only - one result\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Address only - one result\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Street>Albingdorf</par:Street><par:HouseNumber>29</par:HouseNumber><par:Postcode>4212</par:Postcode><par:Country>A</par:Country></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:BirthDate]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:BirthDate[1]/text()</path><content>1964-11-30</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Address only - multiple results\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Address only - multiple results\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Street>Wegscheider Stra\u00dfe</par:Street><par:HouseNumber>124</par:HouseNumber><par:Postcode>4060</par:Postcode><par:Country>A</par:Country></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Check count of [pfx7:Party]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\ncount( //pfx7:searchPartyResponse/pfx7:Parties/pfx7:Party) > 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Name and Address, but wrong GivenName and FamilyName\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Name and Address, but wrong GivenName and FamilyName\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Name>Weidinger</par:Name><par:GivenName>Hubert</par:GivenName><par:FamilyName>M\u00fcller</par:FamilyName><par:Street>Albingdorf</par:Street><par:HouseNumber>29</par:HouseNumber><par:Postcode>4212</par:Postcode><par:Country>A</par:Country></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"XPath Match\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - Name - Lastname with leading Wildcard\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - Name - Lastname with leading Wildcard\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Name>%Weidinger Ernestine</par:Name></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1003</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - GenericIdentification\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - GenericIdentification\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:Name>%Weidinger Ernestine</par:Name></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:ErrorCode]\"><con:configuration><path>declare namespace ns0='http://cdm.a1telekom.at/common/error';\n//detail[1]/ns0:ErrorDetails[1]/ns0:ErrorCode[1]/text()</path><content>PARTY-1003</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"searchParty - GivenName FamilyName\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>searchParty</con:operation><con:request name=\"searchParty - GivenName FamilyName\" outgoingWss=\"\" incomingWss=\"\" timeout=\"\" wssPasswordType=\"\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyRequest>\n         <par:SearchCriteria>\n         <par:GivenName>Ernesti%</par:GivenName><par:FamilyName>Weiding%</par:FamilyName></par:SearchCriteria>\n         <par:User>UCUCO01</par:User>\n         <par:SourceSystem>CUCO</par:SourceSystem>\n      </par:searchPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"SOAP Response\" name=\"SOAP Response\"/><con:assertion type=\"XPath Match\" name=\"Match content of [pfx7:PartyId]\"><con:configuration><path>declare namespace pfx7='http://eai.a1telekom.at/party';\n//pfx7:searchPartyResponse[1]/pfx7:Parties[1]/pfx7:Party[1]/pfx7:PartyId[1]/text()</path><content>104317370</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"updatePartyWithNonLKMSAddress TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"updatePartyWithNonLKMSAddress\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>PartyPortTypeHttpBinding</con:interface><con:operation>updatePartyWithNonLKMSAddress</con:operation><con:request name=\"updatePartyWithNonLKMSAddress\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:updatePartyWithNonLKMSAddressRequest>\n         <par:Party>\n            <par:PartyId>?</par:PartyId>\n            <!--Optional:-->\n            <par:AttentionOf>?</par:AttentionOf>\n            <!--Optional:-->\n            <par:NonLKMSAddress>\n               <!--Optional:-->\n               <par:Street>?</par:Street>\n               <!--Optional:-->\n               <par:HouseNumber>?</par:HouseNumber>\n               <!--Optional:-->\n               <par:Block>?</par:Block>\n               <!--Optional:-->\n               <par:Staircase>?</par:Staircase>\n               <!--Optional:-->\n               <par:FloorNumber>?</par:FloorNumber>\n               <!--Optional:-->\n               <par:DoorNumber>?</par:DoorNumber>\n               <!--Optional:-->\n               <par:Additional>?</par:Additional>\n               <!--Optional:-->\n               <par:Postcode>?</par:Postcode>\n               <!--Optional:-->\n               <par:City>?</par:City>\n               <!--Optional:-->\n               <par:SubCity>?</par:SubCity>\n               <!--Optional:-->\n               <par:Village>?</par:Village>\n               <!--Optional:-->\n               <par:Country>?</par:Country>\n            </par:NonLKMSAddress>\n         </par:Party>\n         <par:User>?</par:User>\n         <par:SourceSystem>?</par:SourceSystem>\n         <!--Optional:-->\n         <par:Agent>?</par:Agent>\n      </par:updatePartyWithNonLKMSAddressRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/Party//updatePartyWithNonLKMSAddress\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"true\" maxResults=\"0\" name=\"Web TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"httprequest\" name=\"localhost:8080\"><con:settings/><con:config method=\"GET\" xsi:type=\"con:HttpRequest\" name=\"localhost:8080\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:mockService port=\"8088\" path=\"/mockPartyPortTypeHttpBinding\" host=\"ATCSL651344\" name=\"PartyPortTypeHttpBinding MockService\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action\">false</con:setting></con:settings><con:mockOperation name=\"getParty\" interface=\"PartyPortTypeHttpBinding\" operation=\"getParty\"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name=\"Response 1\" encoding=\"UTF-8\"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:getPartyResponse>\n         <par:Party>\n            <par:PartyId>?</par:PartyId>\n            <!--Optional:-->\n            <par:ShortName>?</par:ShortName>\n            <!--Optional:-->\n            <par:ContractAllowed writeable=\"?\">?</par:ContractAllowed>\n            <!--Optional:-->\n            <par:Dead writeable=\"?\">?</par:Dead>\n            <!--Optional:-->\n            <par:AccountManagementSegment writeable=\"?\">?</par:AccountManagementSegment>\n            <!--Optional:-->\n            <par:CustomerPassword writeable=\"?\">?</par:CustomerPassword>\n            <!--Optional:-->\n            <par:KSVNumber writeable=\"?\">?</par:KSVNumber>\n            <!--Optional:-->\n            <par:Nationality writeable=\"?\">?</par:Nationality>\n            <!--Optional:-->\n            <par:UIDs>\n               <!--1 or more repetitions:-->\n               <par:UID>\n                  <!--Optional:-->\n                  <par:Number>?</par:Number>\n               </par:UID>\n            </par:UIDs>\n            <!--Optional:-->\n            <par:StandardAddress>\n               <!--Optional:-->\n               <par:LkmsId>?</par:LkmsId>\n               <!--Optional:-->\n               <par:Street>?</par:Street>\n               <!--Optional:-->\n               <par:HouseNumber>?</par:HouseNumber>\n               <!--Optional:-->\n               <par:Block>?</par:Block>\n               <!--Optional:-->\n               <par:Staircase>?</par:Staircase>\n               <!--Optional:-->\n               <par:FloorNumber>?</par:FloorNumber>\n               <!--Optional:-->\n               <par:DoorNumber>?</par:DoorNumber>\n               <!--Optional:-->\n               <par:Additional>?</par:Additional>\n               <!--Optional:-->\n               <par:Postcode>?</par:Postcode>\n               <!--Optional:-->\n               <par:City>?</par:City>\n               <!--Optional:-->\n               <par:Village>?</par:Village>\n               <!--Optional:-->\n               <par:Country>?</par:Country>\n            </par:StandardAddress>\n            <!--Optional:-->\n            <par:PartyRoles>\n               <!--1 or more repetitions:-->\n               <par:PartyRole>\n                  <!--Optional:-->\n                  <par:ContactMediums>\n                     <!--1 or more repetitions:-->\n                     <par:ContactMedium/>\n                  </par:ContactMediums>\n               </par:PartyRole>\n            </par:PartyRoles>\n            <!--Optional:-->\n            <par:Solvency>\n               <!--Optional:-->\n               <par:Insolvency>?</par:Insolvency>\n               <!--Optional:-->\n               <par:InsolvencyDate>?</par:InsolvencyDate>\n               <!--Optional:-->\n               <par:CreditLimit>?</par:CreditLimit>\n               <!--Optional:-->\n               <par:CreditCurrencyCode>?</par:CreditCurrencyCode>\n               <!--Optional:-->\n               <par:BadCustomer>?</par:BadCustomer>\n               <!--Optional:-->\n               <par:CreditRiskCategory>?</par:CreditRiskCategory>\n               <!--Optional:-->\n               <par:BlockDelivery>?</par:BlockDelivery>\n            </par:Solvency>\n            <par:DualSegment>?</par:DualSegment>\n         </par:Party>\n         <par:LastChangeDate>?</par:LastChangeDate>\n      </par:getPartyResponse>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//getParty\"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name=\"searchParty\" interface=\"PartyPortTypeHttpBinding\" operation=\"searchParty\"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name=\"Response 1\" encoding=\"UTF-8\"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:searchPartyResponse>\n         <!--Optional:-->\n         <par:Parties>\n            <!--1 or more repetitions:-->\n            <par:Party>\n               <par:PartyId>?</par:PartyId>\n               <!--Optional:-->\n               <par:ContractAllowed>?</par:ContractAllowed>\n               <!--Optional:-->\n               <par:ShortName>?</par:ShortName>\n               <!--Optional:-->\n               <par:StandardAddress>\n                  <par:ShortAddress>?</par:ShortAddress>\n               </par:StandardAddress>\n               <par:DualSegment>?</par:DualSegment>\n            </par:Party>\n         </par:Parties>\n      </par:searchPartyResponse>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//searchParty\"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name=\"updatePartyWithNonLKMSAddress\" interface=\"PartyPortTypeHttpBinding\" operation=\"updatePartyWithNonLKMSAddress\"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name=\"Response 1\" encoding=\"UTF-8\"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:par=\"http://eai.a1telekom.at/party\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <par:updatePartyWithNonLKMSAddressResponse/>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/Party//updatePartyWithNonLKMSAddress\"/></con:response><con:dispatchConfig/></con:mockOperation><con:properties/></con:mockService><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/SoapUiProjects/CustomerAssignment-soapui-project.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/SoapUiProjects/CustomerAssignment-soapui-project.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 70714,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<con:soapui-project name=\"CustomerAssignment\" resourceRoot=\"${projectDir}\" soapui-version=\"3.6.1\" xmlns:con=\"http://eviware.com/soapui/config\"><con:settings/><con:interface xsi:type=\"con:WsdlInterface\" wsaVersion=\"NONE\" name=\"CustomerAssignmentPortTypeHttpBinding\" type=\"wsdl\" bindingName=\"{http://xmlns.example.com/1299666729563}CustomerAssignmentPortTypeHttpBinding\" soapVersion=\"1_1\" anonymous=\"optional\" definition=\"http://esb-i.telekom.inside:7800/wsdl/CustomerAssignment/-/vi/http\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:settings/><con:definitionCache type=\"TEXT\" rootPart=\"http://esb-i.telekom.inside:7800/wsdl/CustomerAssignment/-/vi/http\"><con:part><con:url>http://esb-i.telekom.inside:7800/wsdl/CustomerAssignment/-/vi/http</con:url><con:content><![CDATA[<!--Created by mag ESB WSDL-Generator v3-->\n<!--WSDL version 1.26-->\n<wsdl:definitions targetNamespace=\"http://xmlns.example.com/1299666729563\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://xmlns.example.com/1299666729563\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:ns0=\"http://eai.a1telekom.at/customerassignment/xsd\" xmlns:ns1=\"http://cdm.a1telekom.at/common/error\">\n  <wsdl:types>\n    <schema targetNamespace=\"http://cdm.a1telekom.at/common/error\" version=\"0.1\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:error=\"http://cdm.a1telekom.at/common/error\">\n      <complexType name=\"ErrorDetailsType\">\n        <sequence>\n          <element name=\"ErrorCode\" type=\"token\">\n            <annotation>\n              <documentation>Code of the error. Should consist of \"prefix\"-\"code\" (e.g. AAA-12345), where \"prefix\" is unique code of the service and \"code\" is code within the service</documentation>\n            </annotation>\n          </element>\n          <element name=\"ErrorMessage\" type=\"token\">\n            <annotation>\n              <documentation>Error-Message</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\" minOccurs=\"0\">\n            <annotation>\n              <documentation>System where the error has its source. If in EAI, then \"EAI\"</documentation>\n            </annotation>\n          </element>\n          <element name=\"ErrorDetails\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Optional Error Details</documentation>\n            </annotation>\n          </element>\n          <element name=\"IsTechnical\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>1 .. technical error, 0 .. business error. Not present - unknown.</documentation>\n            </annotation>\n          </element>\n          <element name=\"Repeatable\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>1 .. execution repeatable, 0 .. non-repeatable. Not present - unknown.</documentation>\n            </annotation>\n          </element>\n          <element name=\"Additionals\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Additional Success/Error Messages</documentation>\n            </annotation>\n            <complexType>\n              <sequence>\n                <element name=\"Additional\" maxOccurs=\"unbounded\">\n                  <complexType>\n                    <sequence>\n                      <element name=\"Code\" type=\"token\"/>\n                      <element name=\"MessageTxt\" type=\"token\" minOccurs=\"0\"/>\n                    </sequence>\n                  </complexType>\n                </element>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <element name=\"ErrorDetails\" type=\"error:ErrorDetailsType\"/>\n    </schema>\n    <schema targetNamespace=\"http://eai.a1telekom.at/customerassignment/xsd\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:ca=\"http://eai.a1telekom.at/customerassignment/xsd\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\">\n      <complexType name=\"Account\">\n        <sequence>\n          <element name=\"BAN\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Billing Account Number</documentation>\n            </annotation>\n          </element>\n          <element name=\"LinkStatus\" type=\"ca:LinkStatus\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Linkstatus</documentation>\n            </annotation>\n          </element>\n          <element name=\"ValidFrom\" type=\"date\" minOccurs=\"0\"/>\n          <element name=\"ValidTo\" type=\"date\" minOccurs=\"0\"/>\n          <element name=\"AccountStatus\" type=\"ca:BANStatus\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Billing Account Status (BANStatus)</documentation>\n            </annotation>\n          </element>\n          <element name=\"AccountType\" type=\"string\">\n            <annotation>\n              <documentation>Billing Account Type</documentation>\n            </annotation>\n          </element>\n          <element name=\"ModifiedBy\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Link-Bearbeiter</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"AccountStatus\">\n        <sequence>\n          <element name=\"PartyIdOld\" type=\"string\">\n            <annotation>\n              <documentation>KUMS Kundennummer</documentation>\n            </annotation>\n          </element>\n          <element name=\"PartyIdNew\" type=\"string\">\n            <annotation>\n              <documentation>KUMS Kundennummer</documentation>\n            </annotation>\n          </element>\n          <element name=\"PartyStatus\" type=\"ca:CustomerStatus\">\n            <annotation>\n              <documentation>Kundenstatus</documentation>\n            </annotation>\n          </element>\n          <element name=\"ModifiedBy\" type=\"string\">\n            <annotation>\n              <documentation>Linkbearbeiter</documentation>\n            </annotation>\n          </element>\n          <element name=\"LinkDescription\" type=\"string\">\n            <annotation>\n              <documentation>Reaseon for special link status</documentation>\n            </annotation>\n          </element>\n          <element name=\"LinkDescriptionID\" type=\"string\">\n            <annotation>\n              <documentation>ID for LinkDescription</documentation>\n            </annotation>\n          </element>\n          <element name=\"BAN\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Billing Account Number</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"9\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"LinkStatus\" type=\"ca:LinkStatus\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Link Status</documentation>\n            </annotation>\n          </element>\n          <element name=\"ValidFrom\" type=\"date\" minOccurs=\"0\"/>\n          <element name=\"ValidTo\" type=\"date\" minOccurs=\"0\"/>\n          <element name=\"AccountStatus\" type=\"ca:BANStatus\">\n            <annotation>\n              <documentation>Billing Account Status (BANStatus)</documentation>\n            </annotation>\n          </element>\n          <element name=\"AccountType\" type=\"string\">\n            <annotation>\n              <documentation>Billing Account Type</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"BANAccount\">\n        <sequence>\n          <element name=\"BAN\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Billing Account Number</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"9\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <simpleType name=\"BANStatus\">\n        <restriction base=\"string\">\n          <enumeration value=\"NoChange\"/>\n          <enumeration value=\"E_SisUnknown\"/>\n          <enumeration value=\"E_SisTentative\"/>\n          <enumeration value=\"E_SisReserved\"/>\n          <enumeration value=\"E_SisOpen\"/>\n          <enumeration value=\"E_SisActive\"/>\n          <enumeration value=\"E_SisSuspended\"/>\n          <enumeration value=\"E_SisCancelled\"/>\n          <enumeration value=\"E_SisClosed\"/>\n          <enumeration value=\"E_SisSuspend2\"/>\n          <enumeration value=\"E_SisSuspend3\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"CustomerStatus\">\n        <restriction base=\"string\">\n          <enumeration value=\"Active\"/>\n          <enumeration value=\"Not Clear\"/>\n          <enumeration value=\"In Cancellation\"/>\n          <enumeration value=\"Deleted\"/>\n          <enumeration value=\"Internally Deleted\"/>\n          <enumeration value=\"Externally Deleted\"/>\n          <enumeration value=\"Deceased\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"LinkStatus\">\n        <restriction base=\"string\">\n          <enumeration value=\"Valid\"/>\n          <enumeration value=\"Invalid\"/>\n          <enumeration value=\"Evidence\"/>\n          <enumeration value=\"InProgress\"/>\n          <enumeration value=\"Delete\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"PartyUpdateStatus\">\n        <restriction base=\"string\">\n          <enumeration value=\"NoCh\"/>\n          <enumeration value=\"Auto\"/>\n          <enumeration value=\"Manu\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"PartyUpdateType\">\n        <sequence>\n          <element name=\"LastChangeDate\">\n            <annotation>\n              <documentation>Last change date of the customer. This needs to be obtained by the caller when reading the customer data from KUMS. The \nvalue should be in the same format as received by KUMS, for example via Party.getParty.getPartyResponse.LastChangeDate</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <length value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"FamilyNameStatus\" type=\"ca:PartyUpdateStatus\"/>\n          <element name=\"FamilyName\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>New value for the family name (last name).</documentation>\n            </annotation>\n          </element>\n          <element name=\"BirthDateStatus\" type=\"ca:PartyUpdateStatus\"/>\n          <element name=\"BirthDate\" type=\"date\" minOccurs=\"0\"/>\n          <element name=\"LkmsIdStatus\" type=\"ca:PartyUpdateStatus\"/>\n          <element name=\"LkmsId\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>New LKMS ID for the customer's standard address. \nThe LKMS ID needs to be provided as 11-digit number. If the number itself is shorter, then leading zeros need to be provided.</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"assignContractToOwnerRequest\">\n        <sequence>\n          <element name=\"PartyId\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS Kundennummer</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"9\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"BAN\">\n            <annotation>\n              <documentation>Billing Account Number</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"9\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"AccountStatus\" type=\"ca:BANStatus\">\n            <annotation>\n              <documentation>Billing Account Status</documentation>\n            </annotation>\n          </element>\n          <element name=\"AccountType\" type=\"string\">\n            <annotation>\n              <documentation>Billing Account Type</documentation>\n            </annotation>\n          </element>\n          <element name=\"ValidFrom\" type=\"date\" minOccurs=\"0\">\n            <annotation>\n              <documentation>StartDate of ContractOwnerAssignment -  (Default: current date)</documentation>\n            </annotation>\n          </element>\n          <element name=\"ValidTo\" type=\"date\" minOccurs=\"0\">\n            <annotation>\n              <documentation>EndDate of ContractOwnerAssignment - (Default: High Value (9999-12-31))</documentation>\n            </annotation>\n          </element>\n          <element name=\"User\">\n            <annotation>\n              <documentation>User from which the requests originates. Required for all KUMS operations. The user needs to be set up in KUMS. Depending on the source system the user can be a system user or an NT user.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"8\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"SourceSystem\">\n            <annotation>\n              <documentation>Source system from which the requests originates.  \nNote: this value is used both for calling KUMS transactions and for creating the Clarify case (value FrontendSystem). Values provided here therefore need to be known/set up in both systems.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Agent\" minOccurs=\"0\">\n            <annotation>\n              <documentation>If the user is a system user, then the agent field can be used to document the user from which the request originates. This field is used by KUMS for documentation purposes only, not for authorization.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"8\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"assignContractToOwnerResponse\">\n        <sequence>\n          <element name=\"LinkId\" type=\"string\">\n            <annotation>\n              <documentation>Primary Key Link DB</documentation>\n            </annotation>\n          </element>\n          <element name=\"RequiresManualCase\" type=\"boolean\">\n            <annotation>\n              <documentation>if true then manual action is required to complete the operation.</documentation>\n            </annotation>\n          </element>\n          <element name=\"ManualReason\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>if RequiresManualCase is trie then this field contains a description that describes the  required manual action to be taken.</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"changeCustomerRequest\">\n        <sequence>\n          <element ref=\"ca:PartyIds\" minOccurs=\"0\"/>\n          <element ref=\"ca:BANAccounts\" minOccurs=\"0\"/>\n          <element name=\"PartyUpdate\" type=\"ca:PartyUpdateType\" minOccurs=\"0\">\n            <annotation>\n              <documentation>If present, then the master data of the customer is updated with the provided data. \nNote: only update of residential customers is supported.</documentation>\n            </annotation>\n          </element>\n          <element name=\"IsManual\" type=\"boolean\">\n            <annotation>\n              <documentation>If true, then no automatic processing will take place. A TA-Clarify-Case will be created for all changes. \nIf false, then automatic processing will take place as far as possible. However, there might still be a case created for manual processing of some of the updates.</documentation>\n            </annotation>\n          </element>\n          <element name=\"ManualReason\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Textual description of the reason why the case shall be manual.</documentation>\n            </annotation>\n          </element>\n          <element name=\"User\">\n            <annotation>\n              <documentation>User from which the requests originates. Required for all KUMS operations. The user needs to be set up in KUMS. Depending on the source system the user can be a system user or an NT user.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"8\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"SourceSystem\">\n            <annotation>\n              <documentation>Source system from which the requests originates.  \nNote: the value sent by the client needs to be know/set up in KUMS, TA Clarify and IXOS</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Agent\" minOccurs=\"0\">\n            <annotation>\n              <documentation>If the user is a system user, then the agent field can be used to document the user from which the request originates. This field is used by KUMS for documentation purposes only, not for authorization.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"8\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"CustomerContactNumber\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Phone number at which the customer can be reached in case there are any questions regarding the change.</documentation>\n            </annotation>\n          </element>\n          <element name=\"Note\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Optional description of the change. If a manual change of master data is required, a textual description needs \nto be provided here. The content of this field will not be processed automatically but included in the TA Clarify \ncase.</documentation>\n            </annotation>\n          </element>\n          <element name=\"BANOfKKW\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Contains the BAN of which the customer provided the password (Kundenkennwort) to prove his identity.</documentation>\n            </annotation>\n          </element>\n          <element name=\"TransactionId\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>If the caller has a unique ID for the business transaction then it should be provided in this field. The ID will be sent to Clarify as \"FrontendID\". If no ID is provided, then the process will generate an ID.</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"changeCustomerResponse\">\n        <sequence>\n          <element name=\"Status\">\n            <simpleType>\n              <restriction base=\"string\">\n                <enumeration value=\"Accepted\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"getAssignmentStatusListRequest\">\n        <sequence>\n          <element name=\"Status\" type=\"ca:LinkStatus\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Linkstatus</documentation>\n            </annotation>\n          </element>\n          <element name=\"ValidDate\" type=\"date\" minOccurs=\"0\">\n            <annotation>\n              <documentation>optionally returns historic data for this date</documentation>\n            </annotation>\n          </element>\n          <element name=\"User\">\n            <annotation>\n              <documentation>User from which the requests originates. Required for all KUMS operations. The user needs to be set up in KUMS. Depending on the source system the user can be a system user or an NT user.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"8\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"SourceSystem\">\n            <annotation>\n              <documentation>Source system from which the requests originates.  \nNote: this value is used both for calling KUMS transactions and for creating the Clarify case (value FrontendSystem). Values provided here therefore need to be known/set up in both systems.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"getAssignmentStatusListResponse\">\n        <sequence>\n          <element name=\"Accounts\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"Account\" type=\"ca:AccountStatus\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"getContractOwnerAssignmentRequest\">\n        <sequence>\n          <element name=\"getBy\">\n            <complexType>\n              <choice>\n                <element name=\"BAN\">\n                  <annotation>\n                    <documentation>Billing Account Number</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"9\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n                <element name=\"PartyId\">\n                  <annotation>\n                    <documentation>KUMS Kundennummer</documentation>\n                  </annotation>\n                  <simpleType>\n                    <restriction base=\"string\">\n                      <maxLength value=\"9\"/>\n                    </restriction>\n                  </simpleType>\n                </element>\n              </choice>\n            </complexType>\n          </element>\n          <element name=\"ListAllBANs\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>when set, then returns all linked BANs for a KUMS, default false</documentation>\n            </annotation>\n          </element>\n          <element name=\"ValidDate\" type=\"date\" minOccurs=\"0\">\n            <annotation>\n              <documentation>optionally returns historic data for this date</documentation>\n            </annotation>\n          </element>\n          <element name=\"User\">\n            <annotation>\n              <documentation>User from which the requests originates. Required for all KUMS operations. The user needs to be set up in KUMS. Depending on the source system the user can be a system user or an NT user.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"8\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"SourceSystem\">\n            <annotation>\n              <documentation>Source system from which the requests originates.  \nNote: this value is used both for calling KUMS transactions and for creating the Clarify case (value FrontendSystem). Values provided here therefore need to be known/set up in both systems.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"getContractOwnerAssignmentResponse\">\n        <sequence>\n          <element name=\"PartyId\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS Kundennummer</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"9\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"CustomerStatus\" type=\"ca:CustomerStatus\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Stauts Kunde</documentation>\n            </annotation>\n          </element>\n          <element name=\"Accounts\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"Account\" type=\"ca:Account\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"updateContractOwnerAssignmentStatusRequest\">\n        <sequence>\n          <element name=\"PartyId\" minOccurs=\"0\">\n            <annotation>\n              <documentation>KUMS Kundennummer</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"9\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"BAN\">\n            <annotation>\n              <documentation>Billing Account Number</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"9\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Status\" type=\"ca:LinkStatus\">\n            <annotation>\n              <documentation>Linkstatus</documentation>\n            </annotation>\n          </element>\n          <element name=\"Reason\" type=\"string\">\n            <annotation>\n              <documentation>Reason for invalidation</documentation>\n            </annotation>\n          </element>\n          <element name=\"ValidFrom\" type=\"date\" minOccurs=\"0\">\n            <annotation>\n              <documentation>StartDate of ContractOwnerAssignment -  (Default: current date)</documentation>\n            </annotation>\n          </element>\n          <element name=\"ValidTo\" type=\"date\" minOccurs=\"0\">\n            <annotation>\n              <documentation>EndDate of ContractOwnerAssignment - (Default: High Value (9999-12-31))</documentation>\n            </annotation>\n          </element>\n          <element name=\"User\">\n            <annotation>\n              <documentation>User from which the requests originates. Required for all KUMS operations. The user needs to be set up in KUMS. Depending on the source system the user can be a system user or an NT user.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"8\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"SourceSystem\">\n            <annotation>\n              <documentation>Source system from which the requests originates.  \nNote: this value is used both for calling KUMS transactions and for creating the Clarify case (value FrontendSystem). Values provided here therefore need to be known/set up in both systems.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"20\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"Agent\" minOccurs=\"0\">\n            <annotation>\n              <documentation>If the user is a system user, then the agent field can be used to document the user from which the request originates. This field is used by KUMS for documentation purposes only, not for authorization.</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"string\">\n                <maxLength value=\"8\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"updateContractOwnerAssignmentStatusResponse\">\n        <sequence>\n          <element name=\"LinkId\" type=\"string\">\n            <annotation>\n              <documentation>Primary Key Link DB</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <element name=\"BANAccounts\">\n        <complexType>\n          <sequence>\n            <element name=\"BANAccount\" type=\"ca:BANAccount\" maxOccurs=\"unbounded\"/>\n          </sequence>\n        </complexType>\n      </element>\n      <element name=\"PartyIds\">\n        <complexType>\n          <sequence>\n            <element name=\"PartyId\" minOccurs=\"0\">\n              <simpleType>\n                <restriction base=\"string\">\n                  <maxLength value=\"9\"/>\n                </restriction>\n              </simpleType>\n            </element>\n          </sequence>\n        </complexType>\n      </element>\n      <element name=\"assignContractToOwnerRequest\" type=\"ca:assignContractToOwnerRequest\"/>\n      <element name=\"assignContractToOwnerResponse\" type=\"ca:assignContractToOwnerResponse\"/>\n      <element name=\"changeCustomerRequest\" type=\"ca:changeCustomerRequest\"/>\n      <element name=\"changeCustomerResponse\" type=\"ca:changeCustomerResponse\"/>\n      <element name=\"getAssignmentStatusListRequest\" type=\"ca:getAssignmentStatusListRequest\"/>\n      <element name=\"getAssignmentStatusListResponse\" type=\"ca:getAssignmentStatusListResponse\"/>\n      <element name=\"getContractOwnerAssignmentRequest\" type=\"ca:getContractOwnerAssignmentRequest\"/>\n      <element name=\"getContractOwnerAssignmentResponse\" type=\"ca:getContractOwnerAssignmentResponse\"/>\n      <element name=\"updateContractOwnerAssignmentStatusRequest\" type=\"ca:updateContractOwnerAssignmentStatusRequest\"/>\n      <element name=\"updateContractOwnerAssignmentStatusResponse\" type=\"ca:updateContractOwnerAssignmentStatusResponse\"/>\n    </schema>\n  </wsdl:types>\n  <wsdl:message name=\"getAssignmentStatusListRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getAssignmentStatusListRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getAssignmentStatusListResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getAssignmentStatusListResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"CustomerAssignmentError\">\n    <wsdl:part name=\"part1\" element=\"ns1:ErrorDetails\"/>\n  </wsdl:message>\n  <wsdl:message name=\"assignContractToOwnerRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:assignContractToOwnerRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"assignContractToOwnerResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:assignContractToOwnerResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"changeCustomerRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:changeCustomerRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"changeCustomerResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:changeCustomerResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getContractOwnerAssignmentRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getContractOwnerAssignmentRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getContractOwnerAssignmentResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getContractOwnerAssignmentResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"updateContractOwnerAssignmentStatusRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:updateContractOwnerAssignmentStatusRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"updateContractOwnerAssignmentStatusResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:updateContractOwnerAssignmentStatusResponse\"/>\n  </wsdl:message>\n  <wsdl:portType name=\"CustomerAssignmentPortType\">\n    <wsdl:operation name=\"getAssignmentStatusList\">\n      <wsdl:documentation>Get a list of customer assignments with a special status</wsdl:documentation>\n      <wsdl:input message=\"tns:getAssignmentStatusListRequest\"/>\n      <wsdl:output message=\"tns:getAssignmentStatusListResponse\"/>\n      <wsdl:fault name=\"CustomerAssignmentError\" message=\"tns:CustomerAssignmentError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"assignContractToOwner\">\n      <wsdl:documentation>Assign a contract to an owner</wsdl:documentation>\n      <wsdl:input message=\"tns:assignContractToOwnerRequest\"/>\n      <wsdl:output message=\"tns:assignContractToOwnerResponse\"/>\n      <wsdl:fault name=\"CustomerAssignmentError\" message=\"tns:CustomerAssignmentError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"changeCustomer\">\n      <wsdl:documentation>Change Customer status</wsdl:documentation>\n      <wsdl:input message=\"tns:changeCustomerRequest\"/>\n      <wsdl:output message=\"tns:changeCustomerResponse\"/>\n      <wsdl:fault name=\"CustomerAssignmentError\" message=\"tns:CustomerAssignmentError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"getContractOwnerAssignment\">\n      <wsdl:documentation>Get a contract owner assigment from LinkDB</wsdl:documentation>\n      <wsdl:input message=\"tns:getContractOwnerAssignmentRequest\"/>\n      <wsdl:output message=\"tns:getContractOwnerAssignmentResponse\"/>\n      <wsdl:fault name=\"CustomerAssignmentError\" message=\"tns:CustomerAssignmentError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"updateContractOwnerAssignmentStatus\">\n      <wsdl:documentation>Invalidate a contract owner assignment</wsdl:documentation>\n      <wsdl:input message=\"tns:updateContractOwnerAssignmentStatusRequest\"/>\n      <wsdl:output message=\"tns:updateContractOwnerAssignmentStatusResponse\"/>\n      <wsdl:fault name=\"CustomerAssignmentError\" message=\"tns:CustomerAssignmentError\"/>\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"CustomerAssignmentPortTypeHttpBinding\" type=\"tns:CustomerAssignmentPortType\">\n    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <wsdl:operation name=\"getAssignmentStatusList\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAssignment//getAssignmentStatusList\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"CustomerAssignmentError\">\n        <soap:fault name=\"CustomerAssignmentError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"assignContractToOwner\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAssignment//assignContractToOwner\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"CustomerAssignmentError\">\n        <soap:fault name=\"CustomerAssignmentError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"changeCustomer\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAssignment//changeCustomer\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"CustomerAssignmentError\">\n        <soap:fault name=\"CustomerAssignmentError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"getContractOwnerAssignment\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAssignment//getContractOwnerAssignment\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"CustomerAssignmentError\">\n        <soap:fault name=\"CustomerAssignmentError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"updateContractOwnerAssignmentStatus\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAssignment//updateContractOwnerAssignmentStatus\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"CustomerAssignmentError\">\n        <soap:fault name=\"CustomerAssignmentError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"CustomerAssignment\">\n    <wsdl:port name=\"CustomerAssignmentPortTypeTa-devViHttpEndpoint\" binding=\"tns:CustomerAssignmentPortTypeHttpBinding\">\n      <soap:address location=\"http://esb-e.a1telekom.inside:8080/esb/si:ta-dev\"/>\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:endpoint>http://ATCSL651344:8088/mockCustomerAssignmentPortTypeHttpBinding</con:endpoint></con:endpoints><con:operation isOneWay=\"false\" action=\"/esb/CustomerAssignment//assignContractToOwner\" name=\"assignContractToOwner\" bindingOperationName=\"assignContractToOwner\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:assignContractToOwnerRequest>\n         <!--Optional:-->\n         <xsd:PartyId>?</xsd:PartyId>\n         <xsd:BAN>?</xsd:BAN>\n         <xsd:AccountStatus>?</xsd:AccountStatus>\n         <xsd:AccountType>?</xsd:AccountType>\n         <!--Optional:-->\n         <xsd:ValidFrom>?</xsd:ValidFrom>\n         <!--Optional:-->\n         <xsd:ValidTo>?</xsd:ValidTo>\n         <xsd:User>?</xsd:User>\n         <xsd:SourceSystem>?</xsd:SourceSystem>\n         <!--Optional:-->\n         <xsd:Agent>?</xsd:Agent>\n      </xsd:assignContractToOwnerRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//assignContractToOwner\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerAssignment//changeCustomer\" name=\"changeCustomer\" bindingOperationName=\"changeCustomer\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:changeCustomerRequest>\n         <!--Optional:-->\n         <xsd:PartyIds>\n            <!--Optional:-->\n            <xsd:PartyId>?</xsd:PartyId>\n         </xsd:PartyIds>\n         <!--Optional:-->\n         <xsd:BANAccounts>\n            <!--1 or more repetitions:-->\n            <xsd:BANAccount>\n               <!--Optional:-->\n               <xsd:BAN>?</xsd:BAN>\n            </xsd:BANAccount>\n         </xsd:BANAccounts>\n         <!--Optional:-->\n         <xsd:PartyUpdate>\n            <xsd:LastChangeDate>?</xsd:LastChangeDate>\n            <xsd:FamilyNameStatus>?</xsd:FamilyNameStatus>\n            <!--Optional:-->\n            <xsd:FamilyName>?</xsd:FamilyName>\n            <xsd:BirthDateStatus>?</xsd:BirthDateStatus>\n            <!--Optional:-->\n            <xsd:BirthDate>?</xsd:BirthDate>\n            <xsd:LkmsIdStatus>?</xsd:LkmsIdStatus>\n            <!--Optional:-->\n            <xsd:LkmsId>?</xsd:LkmsId>\n         </xsd:PartyUpdate>\n         <xsd:IsManual>?</xsd:IsManual>\n         <!--Optional:-->\n         <xsd:ManualReason>?</xsd:ManualReason>\n         <xsd:User>?</xsd:User>\n         <xsd:SourceSystem>?</xsd:SourceSystem>\n         <!--Optional:-->\n         <xsd:Agent>?</xsd:Agent>\n         <!--Optional:-->\n         <xsd:CustomerContactNumber>?</xsd:CustomerContactNumber>\n         <!--Optional:-->\n         <xsd:Note>?</xsd:Note>\n         <!--Optional:-->\n         <xsd:BANOfKKW>?</xsd:BANOfKKW>\n         <!--Optional:-->\n         <xsd:TransactionId>?</xsd:TransactionId>\n      </xsd:changeCustomerRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//changeCustomer\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerAssignment//getAssignmentStatusList\" name=\"getAssignmentStatusList\" bindingOperationName=\"getAssignmentStatusList\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getAssignmentStatusListRequest>\n         <!--Optional:-->\n         <xsd:Status>?</xsd:Status>\n         <!--Optional:-->\n         <xsd:ValidDate>?</xsd:ValidDate>\n         <xsd:User>?</xsd:User>\n         <xsd:SourceSystem>?</xsd:SourceSystem>\n      </xsd:getAssignmentStatusListRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//getAssignmentStatusList\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerAssignment//getContractOwnerAssignment\" name=\"getContractOwnerAssignment\" bindingOperationName=\"getContractOwnerAssignment\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getContractOwnerAssignmentRequest>\n         <xsd:getBy>\n            <!--You have a CHOICE of the next 2 items at this level-->\n            \n            \n         <xsd:BAN>278900796</xsd:BAN></xsd:getBy>\n         <!--Optional:-->\n         <xsd:ListAllBANs>true</xsd:ListAllBANs>\n         <!--Optional:-->\n         <xsd:ValidDate>2011-04-27+02:00</xsd:ValidDate>\n         <xsd:User>UCUCO01</xsd:User>\n         <xsd:SourceSystem>CUCO</xsd:SourceSystem>\n      </xsd:getContractOwnerAssignmentRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//getContractOwnerAssignment\"/><con:wsrmConfig version=\"1.2\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerAssignment//updateContractOwnerAssignmentStatus\" name=\"updateContractOwnerAssignmentStatus\" bindingOperationName=\"updateContractOwnerAssignmentStatus\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:updateContractOwnerAssignmentStatusRequest>\n         <!--Optional:-->\n         <xsd:PartyId>?</xsd:PartyId>\n         <xsd:BAN>?</xsd:BAN>\n         <xsd:Status>?</xsd:Status>\n         <xsd:Reason>?</xsd:Reason>\n         <!--Optional:-->\n         <xsd:ValidFrom>?</xsd:ValidFrom>\n         <!--Optional:-->\n         <xsd:ValidTo>?</xsd:ValidTo>\n         <xsd:User>?</xsd:User>\n         <xsd:SourceSystem>?</xsd:SourceSystem>\n         <!--Optional:-->\n         <xsd:Agent>?</xsd:Agent>\n      </xsd:updateContractOwnerAssignmentStatusRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//updateContractOwnerAssignmentStatus\"/></con:call></con:operation></con:interface><con:testSuite name=\"CustomerAssignmentPortTypeHttpBinding TestSuite\"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"assignContractToOwner TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"assignContractToOwner\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAssignmentPortTypeHttpBinding</con:interface><con:operation>assignContractToOwner</con:operation><con:request name=\"assignContractToOwner\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:assignContractToOwnerRequest>\n         <!--Optional:-->\n         <xsd:PartyId>?</xsd:PartyId>\n         <xsd:BAN>?</xsd:BAN>\n         <xsd:AccountStatus>?</xsd:AccountStatus>\n         <xsd:AccountType>?</xsd:AccountType>\n         <!--Optional:-->\n         <xsd:ValidFrom>?</xsd:ValidFrom>\n         <!--Optional:-->\n         <xsd:ValidTo>?</xsd:ValidTo>\n         <xsd:User>?</xsd:User>\n         <xsd:SourceSystem>?</xsd:SourceSystem>\n         <!--Optional:-->\n         <xsd:Agent>?</xsd:Agent>\n      </xsd:assignContractToOwnerRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerAssignment//assignContractToOwner\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"changeCustomer TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"changeCustomer\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAssignmentPortTypeHttpBinding</con:interface><con:operation>changeCustomer</con:operation><con:request name=\"changeCustomer\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:changeCustomerRequest>\n         <!--Optional:-->\n         <xsd:PartyIds>\n            <!--Optional:-->\n            <xsd:PartyId>?</xsd:PartyId>\n         </xsd:PartyIds>\n         <!--Optional:-->\n         <xsd:BANAccounts>\n            <!--1 or more repetitions:-->\n            <xsd:BANAccount>\n               <!--Optional:-->\n               <xsd:BAN>?</xsd:BAN>\n            </xsd:BANAccount>\n         </xsd:BANAccounts>\n         <!--Optional:-->\n         <xsd:PartyUpdate>\n            <xsd:LastChangeDate>?</xsd:LastChangeDate>\n            <xsd:FamilyNameStatus>?</xsd:FamilyNameStatus>\n            <!--Optional:-->\n            <xsd:FamilyName>?</xsd:FamilyName>\n            <xsd:BirthDateStatus>?</xsd:BirthDateStatus>\n            <!--Optional:-->\n            <xsd:BirthDate>?</xsd:BirthDate>\n            <xsd:LkmsIdStatus>?</xsd:LkmsIdStatus>\n            <!--Optional:-->\n            <xsd:LkmsId>?</xsd:LkmsId>\n         </xsd:PartyUpdate>\n         <xsd:IsManual>?</xsd:IsManual>\n         <!--Optional:-->\n         <xsd:ManualReason>?</xsd:ManualReason>\n         <xsd:User>?</xsd:User>\n         <xsd:SourceSystem>?</xsd:SourceSystem>\n         <!--Optional:-->\n         <xsd:Agent>?</xsd:Agent>\n         <!--Optional:-->\n         <xsd:CustomerContactNumber>?</xsd:CustomerContactNumber>\n         <!--Optional:-->\n         <xsd:Note>?</xsd:Note>\n         <!--Optional:-->\n         <xsd:BANOfKKW>?</xsd:BANOfKKW>\n         <!--Optional:-->\n         <xsd:TransactionId>?</xsd:TransactionId>\n      </xsd:changeCustomerRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerAssignment//changeCustomer\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"getAssignmentStatusList TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"getAssignmentStatusList\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAssignmentPortTypeHttpBinding</con:interface><con:operation>getAssignmentStatusList</con:operation><con:request name=\"getAssignmentStatusList\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getAssignmentStatusListRequest>\n         <!--Optional:-->\n         <xsd:Status>?</xsd:Status>\n         <!--Optional:-->\n         <xsd:ValidDate>?</xsd:ValidDate>\n         <xsd:User>?</xsd:User>\n         <xsd:SourceSystem>?</xsd:SourceSystem>\n      </xsd:getAssignmentStatusListRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerAssignment//getAssignmentStatusList\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"getContractOwnerAssignment TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"getContractOwnerAssignment - getBy PartyId - list all BANs false - multiple BANs\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAssignmentPortTypeHttpBinding</con:interface><con:operation>getContractOwnerAssignment</con:operation><con:request name=\"getContractOwnerAssignment - getBy PartyId - list all BANs false - multiple BANs\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getContractOwnerAssignmentRequest>\n         <xsd:getBy>\n            <!--You have a CHOICE of the next 2 items at this level-->\n            \n            \n         <xsd:PartyId>106268329</xsd:PartyId></xsd:getBy>\n         <!--Optional:-->\n         <xsd:ListAllBANs>false</xsd:ListAllBANs>\n         <!--Optional:-->\n         \n         <xsd:User>UCUC01</xsd:User>\n         <xsd:SourceSystem>CUCO</xsd:SourceSystem>\n      </xsd:getContractOwnerAssignmentRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:BAN]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\n//ns0:getContractOwnerAssignmentResponse[1]/ns0:Accounts[1]/ns0:Account[1]/ns0:BAN[1]/text()</path><content>336674914</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:BAN]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\n//ns0:getContractOwnerAssignmentResponse[1]/ns0:Accounts[1]/ns0:Account[2]/ns0:BAN[1]/text()</path><content>330575150</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:BAN]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\n//ns0:getContractOwnerAssignmentResponse[1]/ns0:Accounts[1]/ns0:Account[3]/ns0:BAN[1]/text()</path><content>330575183</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:BAN]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\n//ns0:getContractOwnerAssignmentResponse[1]/ns0:Accounts[1]/ns0:Account[4]/ns0:BAN[1]/text()</path><content>334572268</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:CustomerStatus]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\n//ns0:getContractOwnerAssignmentResponse[1]/ns0:CustomerStatus[1]/text()</path><content>Active</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAssignment//getContractOwnerAssignment\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getContractOwnerAssignment - getBy PartyId - list all BANs false - non existing PartyId\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAssignmentPortTypeHttpBinding</con:interface><con:operation>getContractOwnerAssignment</con:operation><con:request name=\"getContractOwnerAssignment - getBy PartyId - list all BANs false - non existing PartyId\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getContractOwnerAssignmentRequest>\n         <xsd:getBy>\n            <!--You have a CHOICE of the next 2 items at this level-->\n            \n            \n         <xsd:PartyId>196268329</xsd:PartyId></xsd:getBy>\n         <!--Optional:-->\n         <xsd:ListAllBANs>false</xsd:ListAllBANs>\n         <!--Optional:-->\n         \n         <xsd:User>UCUC01</xsd:User>\n         <xsd:SourceSystem>CUCO</xsd:SourceSystem>\n      </xsd:getContractOwnerAssignmentRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"XPath Match\" name=\"Check count of [ns0:getContractOwnerAssignmentResponse/*]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\ncount( //ns0:getContractOwnerAssignmentResponse/*)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAssignment//getContractOwnerAssignment\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getContractOwnerAssignment - getBy BAN - list all BANs false\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAssignmentPortTypeHttpBinding</con:interface><con:operation>getContractOwnerAssignment</con:operation><con:request name=\"getContractOwnerAssignment - getBy BAN - list all BANs false\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getContractOwnerAssignmentRequest>\n         <xsd:getBy>\n            <!--You have a CHOICE of the next 2 items at this level-->\n            \n            \n         <xsd:BAN>336674914</xsd:BAN></xsd:getBy>\n         <!--Optional:-->\n         <xsd:ListAllBANs>false</xsd:ListAllBANs>\n         <!--Optional:-->\n         \n         <xsd:User>UCUC01</xsd:User>\n         <xsd:SourceSystem>CUCO</xsd:SourceSystem>\n      </xsd:getContractOwnerAssignmentRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:PartyId]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\n//ns0:getContractOwnerAssignmentResponse[1]/ns0:PartyId[1]/text()</path><content>106268329</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Check count of [ns0:CustomerStatus]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\ncount( //ns0:getContractOwnerAssignmentResponse/ns0:CustomerStatus)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAssignment//getContractOwnerAssignment\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getContractOwnerAssignment - getBy BAN - list all BANs true\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAssignmentPortTypeHttpBinding</con:interface><con:operation>getContractOwnerAssignment</con:operation><con:request name=\"getContractOwnerAssignment - getBy BAN - list all BANs true\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getContractOwnerAssignmentRequest>\n         <xsd:getBy>\n            <!--You have a CHOICE of the next 2 items at this level-->\n            \n            \n         <xsd:BAN>336674914</xsd:BAN></xsd:getBy>\n         <!--Optional:-->\n         <xsd:ListAllBANs>true</xsd:ListAllBANs>\n         <!--Optional:-->\n         \n         <xsd:User>UCUC01</xsd:User>\n         <xsd:SourceSystem>CUCO</xsd:SourceSystem>\n      </xsd:getContractOwnerAssignmentRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:assertion type=\"XPath Match\" name=\"Match content of [ns0:PartyId]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\n//ns0:getContractOwnerAssignmentResponse[1]/ns0:PartyId[1]/text()</path><content>106268329</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type=\"XPath Match\" name=\"Check count of [ns0:Account]\"><con:configuration><path>declare namespace ns0='http://eai.a1telekom.at/customerassignment/xsd';\ncount( //ns0:getContractOwnerAssignmentResponse/ns0:Accounts/ns0:Account)</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAssignment//getContractOwnerAssignment\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"updateContractOwnerAssignmentStatus TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"updateContractOwnerAssignmentStatus\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAssignmentPortTypeHttpBinding</con:interface><con:operation>updateContractOwnerAssignmentStatus</con:operation><con:request name=\"updateContractOwnerAssignmentStatus\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:updateContractOwnerAssignmentStatusRequest>\n         <!--Optional:-->\n         <xsd:PartyId>?</xsd:PartyId>\n         <xsd:BAN>?</xsd:BAN>\n         <xsd:Status>?</xsd:Status>\n         <xsd:Reason>?</xsd:Reason>\n         <!--Optional:-->\n         <xsd:ValidFrom>?</xsd:ValidFrom>\n         <!--Optional:-->\n         <xsd:ValidTo>?</xsd:ValidTo>\n         <xsd:User>?</xsd:User>\n         <xsd:SourceSystem>?</xsd:SourceSystem>\n         <!--Optional:-->\n         <xsd:Agent>?</xsd:Agent>\n      </xsd:updateContractOwnerAssignmentStatusRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerAssignment//updateContractOwnerAssignmentStatus\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:mockService port=\"8088\" path=\"/mockCustomerAssignmentPortTypeHttpBinding\" host=\"ATCSL651344\" name=\"CustomerAssignmentPortTypeHttpBinding MockService\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.mock.WsdlMockService@require-soap-action\">false</con:setting></con:settings><con:mockOperation name=\"assignContractToOwner\" interface=\"CustomerAssignmentPortTypeHttpBinding\" operation=\"assignContractToOwner\"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name=\"Response 1\" encoding=\"UTF-8\"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:assignContractToOwnerResponse>\n         <xsd:LinkId>?</xsd:LinkId>\n         <xsd:RequiresManualCase>?</xsd:RequiresManualCase>\n         <!--Optional:-->\n         <xsd:ManualReason>?</xsd:ManualReason>\n      </xsd:assignContractToOwnerResponse>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//assignContractToOwner\"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name=\"changeCustomer\" interface=\"CustomerAssignmentPortTypeHttpBinding\" operation=\"changeCustomer\"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name=\"Response 1\" encoding=\"UTF-8\"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:changeCustomerResponse>\n         <xsd:Status>?</xsd:Status>\n      </xsd:changeCustomerResponse>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//changeCustomer\"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name=\"getAssignmentStatusList\" interface=\"CustomerAssignmentPortTypeHttpBinding\" operation=\"getAssignmentStatusList\"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name=\"Response 1\" encoding=\"UTF-8\"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getAssignmentStatusListResponse>\n         <!--Optional:-->\n         <xsd:Accounts>\n            <!--Zero or more repetitions:-->\n            <xsd:Account>\n               <xsd:PartyIdOld>?</xsd:PartyIdOld>\n               <xsd:PartyIdNew>?</xsd:PartyIdNew>\n               <xsd:PartyStatus>?</xsd:PartyStatus>\n               <xsd:ModifiedBy>?</xsd:ModifiedBy>\n               <xsd:LinkDescription>?</xsd:LinkDescription>\n               <xsd:LinkDescriptionID>?</xsd:LinkDescriptionID>\n               <!--Optional:-->\n               <xsd:BAN>?</xsd:BAN>\n               <!--Optional:-->\n               <xsd:LinkStatus>?</xsd:LinkStatus>\n               <!--Optional:-->\n               <xsd:ValidFrom>?</xsd:ValidFrom>\n               <!--Optional:-->\n               <xsd:ValidTo>?</xsd:ValidTo>\n               <xsd:AccountStatus>?</xsd:AccountStatus>\n               <xsd:AccountType>?</xsd:AccountType>\n            </xsd:Account>\n         </xsd:Accounts>\n      </xsd:getAssignmentStatusListResponse>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//getAssignmentStatusList\"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name=\"getContractOwnerAssignment\" interface=\"CustomerAssignmentPortTypeHttpBinding\" operation=\"getContractOwnerAssignment\"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name=\"Response 1\" encoding=\"UTF-8\"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:getContractOwnerAssignmentResponse>\n         <!--Optional:-->\n         <xsd:PartyId>?</xsd:PartyId>\n         <!--Optional:-->\n         <xsd:CustomerStatus>?</xsd:CustomerStatus>\n         <!--Optional:-->\n         <xsd:Accounts>\n            <!--1 or more repetitions:-->\n            <xsd:Account>\n               <!--Optional:-->\n               <xsd:BAN>?</xsd:BAN>\n               <!--Optional:-->\n               <xsd:LinkStatus>?</xsd:LinkStatus>\n               <!--Optional:-->\n               <xsd:ValidFrom>?</xsd:ValidFrom>\n               <!--Optional:-->\n               <xsd:ValidTo>?</xsd:ValidTo>\n               <!--Optional:-->\n               <xsd:AccountStatus>?</xsd:AccountStatus>\n               <xsd:AccountType>?</xsd:AccountType>\n               <!--Optional:-->\n               <xsd:ModifiedBy>?</xsd:ModifiedBy>\n            </xsd:Account>\n         </xsd:Accounts>\n      </xsd:getContractOwnerAssignmentResponse>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//getContractOwnerAssignment\"/></con:response><con:dispatchConfig/></con:mockOperation><con:mockOperation name=\"updateContractOwnerAssignmentStatus\" interface=\"CustomerAssignmentPortTypeHttpBinding\" operation=\"updateContractOwnerAssignmentStatus\"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:defaultResponse>Response 1</con:defaultResponse><con:response name=\"Response 1\" encoding=\"UTF-8\"><con:settings/><con:responseContent><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://eai.a1telekom.at/customerassignment/xsd\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <xsd:updateContractOwnerAssignmentStatusResponse>\n         <xsd:LinkId>?</xsd:LinkId>\n      </xsd:updateContractOwnerAssignmentStatusResponse>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:responseContent><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAssignment//updateContractOwnerAssignmentStatus\"/></con:response><con:dispatchConfig/></con:mockOperation><con:properties/></con:mockService><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/SoapUiProjects/CustomerAccount-soapui-project.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/SoapUiProjects/CustomerAccount-soapui-project.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 52129,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<con:soapui-project name=\"CustomerAccount\" resourceRoot=\"${projectDir}\" soapui-version=\"3.6\" xmlns:con=\"http://eviware.com/soapui/config\"><con:settings/><con:interface xsi:type=\"con:WsdlInterface\" wsaVersion=\"NONE\" name=\"CustomerAccountPortTypeHttpBinding\" type=\"wsdl\" bindingName=\"{http://eai.a1telekom.at/CustomerAccount/wsdl}CustomerAccountPortTypeHttpBinding\" soapVersion=\"1_1\" anonymous=\"optional\" definition=\"http://esb-i.telekom.inside:7800/wsdl/CustomerAccount/-/vi/http\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:settings/><con:definitionCache type=\"TEXT\" rootPart=\"http://esb-i.telekom.inside:7800/wsdl/CustomerAccount/-/vi/http\"><con:part><con:url>http://esb-i.telekom.inside:7800/wsdl/CustomerAccount/-/vi/http</con:url><con:content><![CDATA[<!--Created by mag ESB WSDL-Generator v3-->\n<!--WSDL version 1.10-->\n<wsdl:definitions targetNamespace=\"http://eai.a1telekom.at/CustomerAccount/wsdl\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://eai.a1telekom.at/CustomerAccount/wsdl\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:ns0=\"http://eai.a1telekom.at/CustomerAccount\" xmlns:ns1=\"http://eai.mobilkomaustriagroup.com/common/error\" xmlns:ns2=\"http://cdm.a1telekom.at/common\">\n  <wsdl:types>\n    <schema targetNamespace=\"http://eai.mobilkomaustriagroup.com/common/error\" version=\"1.1\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:error=\"http://eai.mobilkomaustriagroup.com/common/error\">\n      <complexType name=\"ErrorDetailsType\">\n        <sequence>\n          <element name=\"ErrorCode\" type=\"token\"/>\n          <element name=\"ErrorMessage\" type=\"token\">\n            <annotation>\n              <documentation>Error-Message</documentation>\n            </annotation>\n          </element>\n          <element name=\"ErrorDetails\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Optional Error Details</documentation>\n            </annotation>\n          </element>\n          <element name=\"IsTechnical\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>1 .. technical error, 0 .. business error</documentation>\n            </annotation>\n          </element>\n          <element name=\"Repeatable\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>1 .. execution repeatable, 0 .. non-repeatable</documentation>\n            </annotation>\n          </element>\n          <element name=\"Additionals\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Additional Success/Error Messages</documentation>\n            </annotation>\n            <complexType>\n              <sequence>\n                <element name=\"Additional\" maxOccurs=\"unbounded\">\n                  <complexType>\n                    <sequence>\n                      <element name=\"Code\" type=\"token\"/>\n                      <element name=\"MessageTxt\" type=\"token\" minOccurs=\"0\"/>\n                    </sequence>\n                  </complexType>\n                </element>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <element name=\"ErrorDetails\" type=\"error:ErrorDetailsType\"/>\n    </schema>\n    <schema targetNamespace=\"http://cdm.a1telekom.at/common\" version=\"1.1\" elementFormDefault=\"unqualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:tns=\"http://cdm.a1telekom.at/common\">\n      <complexType name=\"CallNumber\">\n        <sequence>\n          <element name=\"CC\" type=\"token\">\n            <annotation>\n              <documentation>Country Code</documentation>\n            </annotation>\n          </element>\n          <element name=\"NDC\" type=\"token\">\n            <annotation>\n              <documentation>National Destination Code</documentation>\n            </annotation>\n          </element>\n          <element name=\"SN\" type=\"token\">\n            <annotation>\n              <documentation>Subscriber Number</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"Money\">\n        <sequence>\n          <element name=\"Units\" type=\"tns:MoneyUnit\"/>\n          <element name=\"Amount\" type=\"decimal\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"MoneyUnit\">\n        <restriction base=\"string\">\n          <enumeration value=\"EUR\"/>\n          <enumeration value=\"PERCENT\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"PeriodType\">\n        <restriction base=\"string\">\n          <enumeration value=\"monthly\"/>\n          <enumeration value=\"one-time\"/>\n          <enumeration value=\"installation\"/>\n          <enumeration value=\"change\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"PresenceType\">\n        <restriction base=\"string\">\n          <enumeration value=\"required\"/>\n          <enumeration value=\"optional\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"Quantity\">\n        <sequence>\n          <element name=\"Units\" type=\"string\"/>\n          <element name=\"Amount\" type=\"decimal\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"TimePeriod\">\n        <sequence>\n          <element name=\"StartDateTime\" type=\"dateTime\" minOccurs=\"0\"/>\n          <element name=\"EndDateTime\" type=\"dateTime\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"ValueType\">\n        <restriction base=\"string\">\n          <enumeration value=\"string\"/>\n          <enumeration value=\"long\"/>\n          <enumeration value=\"boolean\"/>\n          <enumeration value=\"dateTime\"/>\n          <enumeration value=\"decimal\"/>\n          <enumeration value=\"lkmsId\"/>\n          <enumeration value=\"mbit\"/>\n          <enumeration value=\"mb\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"sidId\">\n        <restriction base=\"token\"/>\n      </simpleType>\n      <element name=\"CallNumber\" type=\"tns:CallNumber\"/>\n    </schema>\n    <xs:schema targetNamespace=\"http://eai.a1telekom.at/CustomerAccount\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n      <xs:import namespace=\"http://cdm.a1telekom.at/common\"/>\n      <xs:complexType name=\"ADXAccount\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:CustomerAccount\"/>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"ADXBillingEntity\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:BillingArrangement\">\n            <xs:sequence>\n              <xs:element name=\"BEN\" type=\"xs:string\"/>\n            </xs:sequence>\n          </xs:extension>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"Address\">\n        <xs:sequence>\n          <xs:element name=\"LkmsId\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>KUMS: RECHNUNGSADRESSE\nDescription: Stammsitz bei Organisation, Meldeadresse bei Person</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"12\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"Street\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: STRASSE\nDescription: Strassenbezeichnung</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"38\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"HouseNumber\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: HAUSNUMMER\nDescription: Hausnummer</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"7\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"Block\" type=\"xs:string\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: BLOCK</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"Staircase\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: STIEGE\nDescription: Stiege</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"3\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"FloorNumber\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: STOCK\nDescription: Stockwerk</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"3\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"DoorNumber\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: TUER\nDescription: Tuer</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"4\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"Additional\" type=\"xs:string\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>KUMS: ADRESSEN_EXTRA</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"Postcode\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: PLZ\nDescription: Postleitzahl</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"12\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"City\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: PLZORT\nDescription: Bezeichnung des Postleitzahlen Ortes</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"38\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"Village\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: ORT\nDescription: Bezeichnung des pol. Ortes</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"38\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"Country\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>LKMS: INET_COUNTRY_CD\nDescription: 3-stelliger ISO-Code</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"4\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"postOfficeBox\" type=\"xs:anyType\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>Description: Post Office Box. Number.</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"FormattedAddress\" type=\"ns0:FormattedAddress\" minOccurs=\"0\"/>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"BNAccount\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:CustomerAccount\"/>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"BNInvoice\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:BillingArrangement\">\n            <xs:sequence>\n              <xs:element name=\"BNAccountId\" type=\"xs:string\"/>\n            </xs:sequence>\n          </xs:extension>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"BankAccount\">\n        <xs:sequence>\n          <xs:element name=\"AccountNumber\" type=\"xs:string\">\n            <xs:annotation>\n              <xs:documentation>Bankkontonummer</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"AccountOwner\" type=\"xs:string\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>Bankkontobesitzer</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"BankCode\" type=\"xs:token\">\n            <xs:annotation>\n              <xs:documentation>Kode der Bank</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"BankName\" type=\"xs:string\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>Name der Bank</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"BillingArrangement\" abstract=\"true\">\n        <xs:sequence>\n          <xs:element name=\"BankAccount\" type=\"ns0:BankAccount\"/>\n          <xs:element name=\"originalInvoiceMedium\" type=\"ns0:InvoiceMedium\"/>\n          <xs:element name=\"duplicateInvoiceMedium\" type=\"ns0:InvoiceMedium\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n          <xs:element name=\"InvoiceAddress\" type=\"ns0:Address\"/>\n          <xs:element name=\"InvoiceContact\" type=\"ns0:Contact\" minOccurs=\"0\"/>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"CDRomInvoice\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:InvoiceMedium\"/>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"Contact\">\n        <xs:sequence>\n          <xs:element name=\"firstName\" type=\"xs:anyType\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>First Name of the Contact</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"lastName\" type=\"xs:anyType\" minOccurs=\"0\">\n            <xs:annotation>\n              <xs:documentation>Last Name of the Contact</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"name\" type=\"xs:anyType\">\n            <xs:annotation>\n              <xs:documentation>Full Name of the Contact. For Persons concatenation of First Name and Last Name.</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"ContactMedium\" abstract=\"true\"/>\n      <xs:complexType name=\"CustomerAccount\">\n        <xs:sequence>\n          <xs:element name=\"AccountNumber\" type=\"xs:string\">\n            <xs:annotation>\n              <xs:documentation>Kundenkontonummer</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"Subscriptions\" minOccurs=\"0\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"Subscription\" type=\"ns0:Subscription\" maxOccurs=\"unbounded\"/>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n          <xs:element name=\"BillingArrangements\" minOccurs=\"0\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"BillingArrangement\" type=\"ns0:BillingArrangement\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"EmailContact\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:ContactMedium\">\n            <xs:sequence>\n              <xs:element name=\"EmailAddress\">\n                <xs:annotation>\n                  <xs:documentation>KUMS: EMAIL\nDescription: Email adresse Im Internet-Format</xs:documentation>\n                </xs:annotation>\n                <xs:simpleType>\n                  <xs:restriction base=\"xs:string\">\n                    <xs:maxLength value=\"128\"/>\n                  </xs:restriction>\n                </xs:simpleType>\n              </xs:element>\n            </xs:sequence>\n          </xs:extension>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"FaxNumber\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:ContactMedium\">\n            <xs:sequence>\n              <xs:element name=\"FaxNumber\">\n                <xs:annotation>\n                  <xs:documentation>KUMS: FAX\nDescription: Rufnummer inkl. Aller Vorwahlen</xs:documentation>\n                </xs:annotation>\n                <xs:simpleType>\n                  <xs:restriction base=\"xs:string\">\n                    <xs:maxLength value=\"32\"/>\n                  </xs:restriction>\n                </xs:simpleType>\n              </xs:element>\n            </xs:sequence>\n          </xs:extension>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"FormattedAddress\">\n        <xs:sequence>\n          <xs:element name=\"AddressLine1\">\n            <xs:annotation>\n              <xs:documentation>LKMS: ADRESS_ZEILE_1\nDescription: 1. Zeile der postalischen Anschrift</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"128\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"AddressLine2\">\n            <xs:annotation>\n              <xs:documentation>LKMS: ADRESS_ZEILE_2\nDescription: 2. Zeile der postalischen Anschrift</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"128\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n          <xs:element name=\"AddressLine3\">\n            <xs:annotation>\n              <xs:documentation>LKMS: ADRESS_ZEILE_3\nDescription: 3. Zeile der postalischen Anschrift</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:string\">\n                <xs:maxLength value=\"128\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"InvoiceMedium\" abstract=\"true\">\n        <xs:sequence>\n          <xs:element name=\"notification\" type=\"ns0:ContactMedium\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"OnlineInvoice\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:InvoiceMedium\"/>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"PaperInvoice\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:InvoiceMedium\"/>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:simpleType name=\"PartyId\">\n        <xs:annotation>\n          <xs:documentation>KUMS: PARTNERID\nDescription: Kundennummer KUMS</xs:documentation>\n        </xs:annotation>\n        <xs:restriction base=\"xs:token\">\n          <xs:maxLength value=\"12\"/>\n        </xs:restriction>\n      </xs:simpleType>\n      <xs:complexType name=\"Subscription\">\n        <xs:sequence>\n          <xs:element name=\"Id\" type=\"xs:anyType\"/>\n          <xs:element ref=\"ns2:CallNumber\"/>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"TelephoneNumber\">\n        <xs:complexContent>\n          <xs:extension base=\"ns0:ContactMedium\">\n            <xs:sequence>\n              <xs:element name=\"PhoneNumber\">\n                <xs:annotation>\n                  <xs:documentation>KUMS: TELEFON\nDescription: Angaben zur Erreichbarkeit tagsueber.A\u201a A\u201a Rufnummer inkl. aller Vorwahlen.</xs:documentation>\n                </xs:annotation>\n                <xs:simpleType>\n                  <xs:restriction base=\"xs:string\">\n                    <xs:maxLength value=\"32\"/>\n                  </xs:restriction>\n                </xs:simpleType>\n              </xs:element>\n              <xs:element name=\"Type\" type=\"xs:string\"/>\n            </xs:sequence>\n          </xs:extension>\n        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"getBillingArrangementRequest\">\n        <xs:choice>\n          <xs:element name=\"BEN\" type=\"xs:token\">\n            <xs:annotation>\n              <xs:documentation>Mobile Billing Arrangement ID</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"BNAccountId\" type=\"xs:token\">\n            <xs:annotation>\n              <xs:documentation>Billing Account Number - Fest Netz</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n        </xs:choice>\n      </xs:complexType>\n      <xs:complexType name=\"getBillingArrangementResponse\">\n        <xs:sequence>\n          <xs:element name=\"BillingArrangement\" minOccurs=\"0\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"BillingArrangement\" type=\"ns0:BillingArrangement\"/>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"getBillingArrangementsForAccountRequest\">\n        <xs:choice>\n          <xs:element name=\"BAN\" type=\"xs:token\">\n            <xs:annotation>\n              <xs:documentation>Billing Account Number - Mobile Netz</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n          <xs:element name=\"BNAccountId\" type=\"xs:token\">\n            <xs:annotation>\n              <xs:documentation>Billing Account Number - Fest Netz</xs:documentation>\n            </xs:annotation>\n          </xs:element>\n        </xs:choice>\n      </xs:complexType>\n      <xs:complexType name=\"getBillingArrangementsForAccountResponse\">\n        <xs:sequence>\n          <xs:element name=\"BillingArrangements\" minOccurs=\"0\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"BillingArrangement\" type=\"ns0:BillingArrangement\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"getBillingArrangementsForPartyRequest\">\n        <xs:sequence>\n          <xs:element name=\"PartyId\" type=\"ns0:PartyId\"/>\n          <xs:element name=\"loadOptions\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"GetMobile\" type=\"xs:boolean\">\n                  <xs:annotation>\n                    <xs:documentation>true, wenn Mobil Kontos gefordert sind</xs:documentation>\n                  </xs:annotation>\n                </xs:element>\n                <xs:element name=\"GetFixedLine\" type=\"xs:boolean\">\n                  <xs:annotation>\n                    <xs:documentation>true, wenn Festnetz Kontos gefordert sind</xs:documentation>\n                  </xs:annotation>\n                </xs:element>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"getBillingArrangementsForPartyResponse\">\n        <xs:sequence>\n          <xs:element name=\"BillingArrangements\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"BillingArrangement\" type=\"ns0:BillingArrangement\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"getBillingArrangementsForSubscriptionRequest\">\n        <xs:sequence>\n          <xs:choice>\n            <xs:element name=\"CallNumber\" type=\"ns2:CallNumber\">\n              <xs:annotation>\n                <xs:documentation>Telefonnummer</xs:documentation>\n              </xs:annotation>\n            </xs:element>\n            <xs:element name=\"SubscriptionId\" type=\"xs:token\">\n              <xs:annotation>\n                <xs:documentation>TNV_ID oder contractID</xs:documentation>\n              </xs:annotation>\n            </xs:element>\n          </xs:choice>\n          <xs:element name=\"SubscriptionType\">\n            <xs:annotation>\n              <xs:documentation>Wireline, Mobile, Mixed</xs:documentation>\n            </xs:annotation>\n            <xs:simpleType>\n              <xs:restriction base=\"xs:token\">\n                <xs:enumeration value=\"Wireline\"/>\n                <xs:enumeration value=\"Mobile\"/>\n                <xs:enumeration value=\"Mixed\"/>\n              </xs:restriction>\n            </xs:simpleType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"getBillingArrangementsForSubscriptionResponse\">\n        <xs:sequence>\n          <xs:element name=\"BillingArrangements\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"BillingArrangement\" type=\"ns0:BillingArrangement\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"getCustomerAccountsForPartyRequest\">\n        <xs:sequence>\n          <xs:element name=\"PartyId\" type=\"ns0:PartyId\"/>\n          <xs:element name=\"loadOptions\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"GetMobile\" type=\"xs:boolean\">\n                  <xs:annotation>\n                    <xs:documentation>true, wenn Mobil Kontos gefordert sind</xs:documentation>\n                  </xs:annotation>\n                </xs:element>\n                <xs:element name=\"GetFixedLine\" type=\"xs:boolean\">\n                  <xs:annotation>\n                    <xs:documentation>true, wenn Festnetz Kontos gefordert sind</xs:documentation>\n                  </xs:annotation>\n                </xs:element>\n                <xs:element name=\"GetBillingArrangements\" type=\"xs:boolean\">\n                  <xs:annotation>\n                    <xs:documentation>true, wenn Billing Arrangements gefordert sind</xs:documentation>\n                  </xs:annotation>\n                </xs:element>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"getCustomerAccountsForPartyResponse\">\n        <xs:sequence>\n          <xs:element name=\"CustomerAccounts\" minOccurs=\"0\">\n            <xs:complexType>\n              <xs:sequence>\n                <xs:element name=\"CustomerAccount\" type=\"ns0:CustomerAccount\" maxOccurs=\"unbounded\"/>\n              </xs:sequence>\n            </xs:complexType>\n          </xs:element>\n        </xs:sequence>\n      </xs:complexType>\n      <xs:element name=\"getBillingArrangementRequest\" type=\"ns0:getBillingArrangementRequest\"/>\n      <xs:element name=\"getBillingArrangementResponse\" type=\"ns0:getBillingArrangementResponse\"/>\n      <xs:element name=\"getBillingArrangementsForAccountRequest\" type=\"ns0:getBillingArrangementsForAccountRequest\"/>\n      <xs:element name=\"getBillingArrangementsForAccountResponse\" type=\"ns0:getBillingArrangementsForAccountResponse\"/>\n      <xs:element name=\"getBillingArrangementsForSubscriptionRequest\" type=\"ns0:getBillingArrangementsForSubscriptionRequest\"/>\n      <xs:element name=\"getBillingArrangementsForSubscriptionResponse\" type=\"ns0:getBillingArrangementsForSubscriptionResponse\"/>\n      <xs:element name=\"getCustomerAccountsForPartyRequest\" type=\"ns0:getCustomerAccountsForPartyRequest\"/>\n      <xs:element name=\"getCustomerAccountsForPartyResponse\" type=\"ns0:getCustomerAccountsForPartyResponse\"/>\n    </xs:schema>\n  </wsdl:types>\n  <wsdl:message name=\"getBillingArrangementsForAccountRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getBillingArrangementsForAccountRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getBillingArrangementsForAccountResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getBillingArrangementsForAccountResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getBillingArrangementsForAccountRequestError\">\n    <wsdl:part name=\"part1\" element=\"ns1:ErrorDetails\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getBillingArrangementsForSubscriptionRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getBillingArrangementsForSubscriptionRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getBillingArrangementsForSubscriptionResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getBillingArrangementsForSubscriptionResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getBillingArrangementsForSubscriptionError\">\n    <wsdl:part name=\"part1\" element=\"ns1:ErrorDetails\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getBillingArrangementRequest\">\n    <wsdl:part name=\"parameter\" element=\"ns0:getBillingArrangementRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getBillingArrangementResponse\">\n    <wsdl:part name=\"parameter\" element=\"ns0:getBillingArrangementResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getBillingArrangementError\">\n    <wsdl:part name=\"part1\" element=\"ns1:ErrorDetails\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getCustomerAccountsForPartyRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getCustomerAccountsForPartyRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getCustomerAccountsForPartyResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getCustomerAccountsForPartyResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getCustomerAccountsForPartyError\">\n    <wsdl:part name=\"part1\" element=\"ns1:ErrorDetails\"/>\n  </wsdl:message>\n  <wsdl:portType name=\"CustomerAccountPortType\">\n    <wsdl:operation name=\"getBillingArrangementsForAccount\">\n      <wsdl:input message=\"tns:getBillingArrangementsForAccountRequest\"/>\n      <wsdl:output message=\"tns:getBillingArrangementsForAccountResponse\"/>\n      <wsdl:fault name=\"getBillingArrangementsForAccountRequestError\" message=\"tns:getBillingArrangementsForAccountRequestError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"getBillingArrangementsForSubscription\">\n      <wsdl:input message=\"tns:getBillingArrangementsForSubscriptionRequest\"/>\n      <wsdl:output message=\"tns:getBillingArrangementsForSubscriptionResponse\"/>\n      <wsdl:fault name=\"getBillingArrangementsForSubscriptionError\" message=\"tns:getBillingArrangementsForSubscriptionError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"getBillingArrangement\">\n      <wsdl:input message=\"tns:getBillingArrangementRequest\"/>\n      <wsdl:output message=\"tns:getBillingArrangementResponse\"/>\n      <wsdl:fault name=\"getBillingArrangementError\" message=\"tns:getBillingArrangementError\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"getCustomerAccountsForParty\">\n      <wsdl:input message=\"tns:getCustomerAccountsForPartyRequest\"/>\n      <wsdl:output message=\"tns:getCustomerAccountsForPartyResponse\"/>\n      <wsdl:fault name=\"getCustomerAccountsForPartyError\" message=\"tns:getCustomerAccountsForPartyError\"/>\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"CustomerAccountPortTypeHttpBinding\" type=\"tns:CustomerAccountPortType\">\n    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <wsdl:operation name=\"getBillingArrangementsForAccount\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAccount//getBillingArrangementsForAccount\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"getBillingArrangementsForAccountRequestError\">\n        <soap:fault name=\"getBillingArrangementsForAccountRequestError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"getBillingArrangementsForSubscription\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAccount//getBillingArrangementsForSubscription\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"getBillingArrangementsForSubscriptionError\">\n        <soap:fault name=\"getBillingArrangementsForSubscriptionError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"getBillingArrangement\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAccount//getBillingArrangement\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"getBillingArrangementError\">\n        <soap:fault name=\"getBillingArrangementError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"getCustomerAccountsForParty\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerAccount//getCustomerAccountsForParty\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"getCustomerAccountsForPartyError\">\n        <soap:fault name=\"getCustomerAccountsForPartyError\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"CustomerAccount\">\n    <wsdl:port name=\"CustomerAccountPortTypeTa-devViHttpEndpoint\" binding=\"tns:CustomerAccountPortTypeHttpBinding\">\n      <soap:address location=\"http://esb-e.a1telekom.inside:8080/esb/si:ta-dev\"/>\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint></con:endpoints><con:operation isOneWay=\"false\" action=\"/esb/CustomerAccount//getBillingArrangement\" name=\"getBillingArrangement\" bindingOperationName=\"getBillingArrangement\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getBillingArrangementRequest>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         <cus:BEN>?</cus:BEN>\n         <cus:BNAccountId>?</cus:BNAccountId>\n      </cus:getBillingArrangementRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAccount//getBillingArrangement\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerAccount//getBillingArrangementsForAccount\" name=\"getBillingArrangementsForAccount\" bindingOperationName=\"getBillingArrangementsForAccount\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getBillingArrangementsForAccountRequest>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         <cus:BAN>?</cus:BAN>\n         <cus:BNAccountId>?</cus:BNAccountId>\n      </cus:getBillingArrangementsForAccountRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAccount//getBillingArrangementsForAccount\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerAccount//getBillingArrangementsForSubscription\" name=\"getBillingArrangementsForSubscription\" bindingOperationName=\"getBillingArrangementsForSubscription\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getBillingArrangementsForSubscriptionRequest>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         <cus:CallNumber>\n            <CC>?</CC>\n            <NDC>?</NDC>\n            <SN>?</SN>\n         </cus:CallNumber>\n         <cus:SubscriptionId>?</cus:SubscriptionId>\n         <cus:SubscriptionType>?</cus:SubscriptionType>\n      </cus:getBillingArrangementsForSubscriptionRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAccount//getBillingArrangementsForSubscription\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerAccount//getCustomerAccountsForParty\" name=\"getCustomerAccountsForParty\" bindingOperationName=\"getCustomerAccountsForParty\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getCustomerAccountsForPartyRequest>\n         <cus:PartyId>?</cus:PartyId>\n         <cus:loadOptions>\n            <cus:GetMobile>?</cus:GetMobile>\n            <cus:GetFixedLine>?</cus:GetFixedLine>\n            <cus:GetBillingArrangements>?</cus:GetBillingArrangements>\n         </cus:loadOptions>\n      </cus:getCustomerAccountsForPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerAccount//getCustomerAccountsForParty\"/></con:call></con:operation></con:interface><con:testSuite name=\"CustomerAccountPortTypeHttpBinding TestSuite\"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"getBillingArrangement TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"getBillingArrangement\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAccountPortTypeHttpBinding</con:interface><con:operation>getBillingArrangement</con:operation><con:request name=\"getBillingArrangement\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getBillingArrangementRequest>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         <cus:BEN>?</cus:BEN>\n         <cus:BNAccountId>?</cus:BNAccountId>\n      </cus:getBillingArrangementRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerAccount//getBillingArrangement\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"getBillingArrangementsForAccount TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"getBillingArrangementsForAccount\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAccountPortTypeHttpBinding</con:interface><con:operation>getBillingArrangementsForAccount</con:operation><con:request name=\"getBillingArrangementsForAccount\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getBillingArrangementsForAccountRequest>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         \n         <cus:BNAccountId>?</cus:BNAccountId>\n      </cus:getBillingArrangementsForAccountRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAccount//getBillingArrangementsForAccount\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"getBillingArrangementsForSubscription TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"getBillingArrangementsForSubscription\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAccountPortTypeHttpBinding</con:interface><con:operation>getBillingArrangementsForSubscription</con:operation><con:request name=\"getBillingArrangementsForSubscription\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getBillingArrangementsForSubscriptionRequest>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         <cus:CallNumber>\n            <CC>?</CC>\n            <NDC>?</NDC>\n            <SN>?</SN>\n         </cus:CallNumber>\n         <cus:SubscriptionId>?</cus:SubscriptionId>\n         <cus:SubscriptionType>?</cus:SubscriptionType>\n      </cus:getBillingArrangementsForSubscriptionRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerAccount//getBillingArrangementsForSubscription\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"getCustomerAccountsForParty TestCase\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"getCustomerAccountsForParty - GetMobile true, GetFixedLine true, getBillingArrangements true\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAccountPortTypeHttpBinding</con:interface><con:operation>getCustomerAccountsForParty</con:operation><con:request name=\"getCustomerAccountsForParty - GetMobile true, GetFixedLine true, getBillingArrangements true\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getCustomerAccountsForPartyRequest>\n         <cus:PartyId>104389355</cus:PartyId>\n         <cus:loadOptions>\n            <cus:GetMobile>true</cus:GetMobile>\n            <cus:GetFixedLine>true</cus:GetFixedLine>\n            <cus:GetBillingArrangements>true</cus:GetBillingArrangements>\n         </cus:loadOptions>\n      </cus:getCustomerAccountsForPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAccount//getCustomerAccountsForParty\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getCustomerAccountsForParty - GetMobile true, GetFixedLine false, getBillingArrangements false\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAccountPortTypeHttpBinding</con:interface><con:operation>getCustomerAccountsForParty</con:operation><con:request name=\"getCustomerAccountsForParty - GetMobile true, GetFixedLine false, getBillingArrangements false\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getCustomerAccountsForPartyRequest>\n         <cus:PartyId>104389355</cus:PartyId>\n         <cus:loadOptions>\n            <cus:GetMobile>true</cus:GetMobile>\n            <cus:GetFixedLine>false</cus:GetFixedLine>\n            <cus:GetBillingArrangements>false</cus:GetBillingArrangements>\n         </cus:loadOptions>\n      </cus:getCustomerAccountsForPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAccount//getCustomerAccountsForParty\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getCustomerAccountsForParty - GetMobile false, GetFixedLine true, getBillingArrangements false\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAccountPortTypeHttpBinding</con:interface><con:operation>getCustomerAccountsForParty</con:operation><con:request name=\"getCustomerAccountsForParty - GetMobile false, GetFixedLine true, getBillingArrangements false\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getCustomerAccountsForPartyRequest>\n         <cus:PartyId>104389355</cus:PartyId>\n         <cus:loadOptions>\n            <cus:GetMobile>false</cus:GetMobile>\n            <cus:GetFixedLine>true</cus:GetFixedLine>\n            <cus:GetBillingArrangements>false</cus:GetBillingArrangements>\n         </cus:loadOptions>\n      </cus:getCustomerAccountsForPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAccount//getCustomerAccountsForParty\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getCustomerAccountsForParty - GetMobile false, GetFixedLine false, getBillingArrangements true\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAccountPortTypeHttpBinding</con:interface><con:operation>getCustomerAccountsForParty</con:operation><con:request name=\"getCustomerAccountsForParty - GetMobile false, GetFixedLine false, getBillingArrangements true\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getCustomerAccountsForPartyRequest>\n         <cus:PartyId>104389355</cus:PartyId>\n         <cus:loadOptions>\n            <cus:GetMobile>false</cus:GetMobile>\n            <cus:GetFixedLine>false</cus:GetFixedLine>\n            <cus:GetBillingArrangements>false</cus:GetBillingArrangements>\n         </cus:loadOptions>\n      </cus:getCustomerAccountsForPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAccount//getCustomerAccountsForParty\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getCustomerAccountsForParty - GetMobile false, GetFixedLine false, getBillingArrangements false\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerAccountPortTypeHttpBinding</con:interface><con:operation>getCustomerAccountsForParty</con:operation><con:request name=\"getCustomerAccountsForParty - GetMobile false, GetFixedLine false, getBillingArrangements false\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerAccount\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getCustomerAccountsForPartyRequest>\n         <cus:PartyId>104389355</cus:PartyId>\n         <cus:loadOptions>\n            <cus:GetMobile>false</cus:GetMobile>\n            <cus:GetFixedLine>false</cus:GetFixedLine>\n            <cus:GetBillingArrangements>true</cus:GetBillingArrangements>\n         </cus:loadOptions>\n      </cus:getCustomerAccountsForPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:credentials><con:username>ta-cuco</con:username><con:password>ta</con:password></con:credentials><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig action=\"/esb/CustomerAccount//getCustomerAccountsForParty\" mustUnderstand=\"NONE\" version=\"200508\"/><con:wsrmConfig version=\"1.2\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/SoapUiProjects/CustomerInventory-soapui-project.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/SoapUiProjects/CustomerInventory-soapui-project.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 43926,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<con:soapui-project name=\"CustomerInventory\" resourceRoot=\"\" soapui-version=\"3.6\" xmlns:con=\"http://eviware.com/soapui/config\"><con:settings/><con:interface xsi:type=\"con:WsdlInterface\" wsaVersion=\"NONE\" name=\"CustomerInventoryPortTypeHttpBinding\" type=\"wsdl\" bindingName=\"{http://eai.a1telekom.at/CustomerInventory/wsdl}CustomerInventoryPortTypeHttpBinding\" soapVersion=\"1_1\" anonymous=\"optional\" definition=\"http://esb-i.a1telekom.inside:7800/wsdl/CustomerInventory/-/vi/http\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:settings/><con:definitionCache type=\"TEXT\" rootPart=\"http://esb-i.a1telekom.inside:7800/wsdl/CustomerInventory/-/vi/http\"><con:part><con:url>http://esb-i.a1telekom.inside:7800/wsdl/CustomerInventory/-/vi/http</con:url><con:content><![CDATA[<!--Created by mag ESB WSDL-Generator v3-->\n<!--WSDL version 1.11-->\n<wsdl:definitions targetNamespace=\"http://eai.a1telekom.at/CustomerInventory/wsdl\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:tns=\"http://eai.a1telekom.at/CustomerInventory/wsdl\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:ns0=\"http://eai.a1telekom.at/CustomerInventory\" xmlns:ns1=\"http://cdm.a1telekom.at/common/error\" xmlns:ns2=\"http://cdm.a1telekom.at/common\">\n  <wsdl:types>\n    <schema targetNamespace=\"http://cdm.a1telekom.at/common\" version=\"1.1\" elementFormDefault=\"unqualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:tns=\"http://cdm.a1telekom.at/common\">\n      <complexType name=\"CallNumber\">\n        <sequence>\n          <element name=\"CC\" type=\"token\">\n            <annotation>\n              <documentation>Country Code</documentation>\n            </annotation>\n          </element>\n          <element name=\"NDC\" type=\"token\">\n            <annotation>\n              <documentation>National Destination Code</documentation>\n            </annotation>\n          </element>\n          <element name=\"SN\" type=\"token\">\n            <annotation>\n              <documentation>Subscriber Number</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"Money\">\n        <sequence>\n          <element name=\"Units\" type=\"tns:MoneyUnit\"/>\n          <element name=\"Amount\" type=\"decimal\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"MoneyUnit\">\n        <restriction base=\"string\">\n          <enumeration value=\"EUR\"/>\n          <enumeration value=\"PERCENT\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"PeriodType\">\n        <restriction base=\"string\">\n          <enumeration value=\"monthly\"/>\n          <enumeration value=\"one-time\"/>\n          <enumeration value=\"installation\"/>\n          <enumeration value=\"change\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"PresenceType\">\n        <restriction base=\"string\">\n          <enumeration value=\"required\"/>\n          <enumeration value=\"optional\"/>\n        </restriction>\n      </simpleType>\n      <complexType name=\"Quantity\">\n        <sequence>\n          <element name=\"Units\" type=\"string\"/>\n          <element name=\"Amount\" type=\"decimal\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"TimePeriod\">\n        <sequence>\n          <element name=\"StartDateTime\" type=\"dateTime\" minOccurs=\"0\"/>\n          <element name=\"EndDateTime\" type=\"dateTime\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"ValueType\">\n        <restriction base=\"string\">\n          <enumeration value=\"string\"/>\n          <enumeration value=\"long\"/>\n          <enumeration value=\"boolean\"/>\n          <enumeration value=\"dateTime\"/>\n          <enumeration value=\"decimal\"/>\n          <enumeration value=\"lkmsId\"/>\n          <enumeration value=\"mbit\"/>\n          <enumeration value=\"mb\"/>\n        </restriction>\n      </simpleType>\n      <simpleType name=\"sidId\">\n        <restriction base=\"token\"/>\n      </simpleType>\n      <element name=\"CallNumber\" type=\"tns:CallNumber\"/>\n    </schema>\n    <schema targetNamespace=\"http://cdm.a1telekom.at/common/error\" version=\"0.1\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:error=\"http://cdm.a1telekom.at/common/error\">\n      <complexType name=\"ErrorDetailsType\">\n        <sequence>\n          <element name=\"ErrorCode\" type=\"token\">\n            <annotation>\n              <documentation>Code of the error. Should consist of \"prefix\"-\"code\" (e.g. AAA-12345), where \"prefix\" is unique code of the service and \"code\" is code within the service</documentation>\n            </annotation>\n          </element>\n          <element name=\"ErrorMessage\" type=\"token\">\n            <annotation>\n              <documentation>Error-Message</documentation>\n            </annotation>\n          </element>\n          <element name=\"SourceSystem\" type=\"token\" minOccurs=\"0\">\n            <annotation>\n              <documentation>System where the error has its source. If in EAI, then \"EAI\"</documentation>\n            </annotation>\n          </element>\n          <element name=\"ErrorDetails\" type=\"string\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Optional Error Details</documentation>\n            </annotation>\n          </element>\n          <element name=\"IsTechnical\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>1 .. technical error, 0 .. business error. Not present - unknown.</documentation>\n            </annotation>\n          </element>\n          <element name=\"Repeatable\" type=\"boolean\" minOccurs=\"0\">\n            <annotation>\n              <documentation>1 .. execution repeatable, 0 .. non-repeatable. Not present - unknown.</documentation>\n            </annotation>\n          </element>\n          <element name=\"Additionals\" minOccurs=\"0\">\n            <annotation>\n              <documentation>Additional Success/Error Messages</documentation>\n            </annotation>\n            <complexType>\n              <sequence>\n                <element name=\"Additional\" maxOccurs=\"unbounded\">\n                  <complexType>\n                    <sequence>\n                      <element name=\"Code\" type=\"token\"/>\n                      <element name=\"MessageTxt\" type=\"token\" minOccurs=\"0\"/>\n                    </sequence>\n                  </complexType>\n                </element>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <element name=\"ErrorDetails\" type=\"error:ErrorDetailsType\"/>\n    </schema>\n    <schema targetNamespace=\"http://eai.a1telekom.at/CustomerInventory\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" xmlns=\"http://www.w3.org/2001/XMLSchema\" xmlns:custinv=\"http://eai.a1telekom.at/CustomerInventory\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:common=\"http://cdm.a1telekom.at/common\">\n      <import namespace=\"http://cdm.a1telekom.at/common\"/>\n      <complexType name=\"ADXAccount\">\n        <complexContent>\n          <extension base=\"custinv:CustomerAccount\"/>\n        </complexContent>\n      </complexType>\n      <complexType name=\"AllowanceProdOferPriceAlteration\">\n        <complexContent>\n          <extension base=\"custinv:ProdOfferPriceAlteration\"/>\n        </complexContent>\n      </complexType>\n      <complexType name=\"AtomicProductSpecification\" abstract=\"true\">\n        <complexContent>\n          <extension base=\"custinv:ProductSpecification\">\n            <sequence>\n              <element name=\"CustomerFacingServiceSpec\" type=\"custinv:CustomerFacingServiceSpec\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"BNAccount\">\n        <complexContent>\n          <extension base=\"custinv:CustomerAccount\"/>\n        </complexContent>\n      </complexType>\n      <complexType name=\"BundledProdOfferOption\" abstract=\"true\">\n        <sequence>\n          <element name=\"ProductOffering\" type=\"custinv:ProductOffering\"/>\n          <element name=\"MinCardinality\" type=\"xs:int\" minOccurs=\"0\"/>\n          <element name=\"MaxCardinality\" type=\"xs:int\" minOccurs=\"0\"/>\n          <element name=\"DefaultCardinality\" type=\"xs:int\" minOccurs=\"0\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"BundledProductOffering\">\n        <complexContent>\n          <extension base=\"custinv:ProductOffering\">\n            <sequence>\n              <element name=\"BundledProdOfferOption\" type=\"custinv:BundledProdOfferOption\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"ComponentProdOfferPrice\" abstract=\"true\">\n        <complexContent>\n          <extension base=\"custinv:ProductOfferingPrice\">\n            <sequence>\n              <element name=\"PriceType\" type=\"xs:string\"/>\n              <element name=\"Price\" type=\"common:Money\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"CompositeProductSpecification\">\n        <complexContent>\n          <extension base=\"custinv:ProductSpecification\">\n            <sequence>\n              <element name=\"ProductSpecification\" type=\"custinv:ProductSpecification\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"ConfigurableProductSpeCharacteristic\">\n        <complexContent>\n          <extension base=\"custinv:ProductSpecCharacteristic\"/>\n        </complexContent>\n      </complexType>\n      <complexType name=\"CustomerAccount\" abstract=\"true\">\n        <sequence>\n          <element name=\"AccountNumber\" type=\"xs:string\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"CustomerFacingServiceSpec\" abstract=\"true\">\n        <complexContent>\n          <extension base=\"custinv:ServiceSpecification\"/>\n        </complexContent>\n      </complexType>\n      <complexType name=\"DiscountProdOferPriceAlteration\">\n        <complexContent>\n          <extension base=\"custinv:ProdOfferPriceAlteration\">\n            <sequence>\n              <element name=\"ProdOfferPriceChargeSidId\" type=\"common:sidId\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n                <annotation>\n                  <documentation>The charges that the alteration targets</documentation>\n                </annotation>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"DistributionChannel\" abstract=\"true\">\n        <sequence>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"FormattedAddress\">\n        <sequence>\n          <element name=\"AddressLine1\">\n            <annotation>\n              <documentation>LKMS: ADRESS_ZEILE_1\nDescription: 1. Zeile der postalischen Anschrift</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"xs:string\">\n                <maxLength value=\"128\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"AddressLine2\">\n            <annotation>\n              <documentation>LKMS: ADRESS_ZEILE_2\nDescription: 2. Zeile der postalischen Anschrift</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"xs:string\">\n                <maxLength value=\"128\"/>\n              </restriction>\n            </simpleType>\n          </element>\n          <element name=\"AddressLine3\">\n            <annotation>\n              <documentation>LKMS: ADRESS_ZEILE_3\nDescription: 3. Zeile der postalischen Anschrift</documentation>\n            </annotation>\n            <simpleType>\n              <restriction base=\"xs:string\">\n                <maxLength value=\"128\"/>\n              </restriction>\n            </simpleType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"MarketSegment\">\n        <sequence>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"Modem\">\n        <complexContent>\n          <extension base=\"custinv:PhysicalResource\"/>\n        </complexContent>\n      </complexType>\n      <complexType name=\"OneTimeChargeProdOfferPriceCharge\" abstract=\"true\">\n        <complexContent>\n          <extension base=\"custinv:ProdOfferPriceCharge\">\n            <sequence>\n              <element name=\"TaxRate\" type=\"xs:decimal\" minOccurs=\"0\"/>\n              <element name=\"ChangeToProductOfferingSidId\" type=\"common:sidId\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n                <annotation>\n                  <documentation>This charge is valid if a change to the specifiedProductOffering is performed</documentation>\n                </annotation>\n              </element>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"PhysicalResource\" abstract=\"true\">\n        <sequence>\n          <element name=\"name\" type=\"xs:string\"/>\n          <element name=\"serialNumber\" type=\"xs:token\" minOccurs=\"0\"/>\n          <element name=\"versionNumber\" type=\"xs:token\"/>\n          <element name=\"installationDate\" type=\"xs:date\" minOccurs=\"0\"/>\n          <element name=\"firmwareVersion\" type=\"xs:token\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProdOfferPriceAlteration\" abstract=\"true\">\n        <complexContent>\n          <extension base=\"custinv:ComponentProdOfferPrice\">\n            <sequence>\n              <element name=\"ProdOfferPromotion\" type=\"custinv:ProductPromotion\" minOccurs=\"0\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"ProdOfferPriceCharge\" abstract=\"true\">\n        <complexContent>\n          <extension base=\"custinv:ComponentProdOfferPrice\">\n            <sequence>\n              <element name=\"Period\" type=\"xs:string\" minOccurs=\"0\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"Product\" abstract=\"true\">\n        <sequence>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Brand\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ProductStatus\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ProductSerialNumber\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"PhysicalResources\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element ref=\"custinv:PhysicalResource\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n          <element name=\"ProductCharacteristicValues\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"ProductCharacteristicValue\" type=\"custinv:ProductCharacteristicValue\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductBundle\">\n        <complexContent>\n          <extension base=\"custinv:Product\">\n            <sequence>\n              <element name=\"BundledProducts\" type=\"custinv:Product\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n              <element name=\"BundledProductOfferingId\" type=\"xs:token\" minOccurs=\"0\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"ProductCatalog\" abstract=\"true\">\n        <sequence>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ProductOffering\" type=\"custinv:ProductOffering\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductCategory\" abstract=\"true\">\n        <complexContent>\n          <extension base=\"custinv:ProductSpecificationType\"/>\n        </complexContent>\n      </complexType>\n      <complexType name=\"ProductCharacteristicValue\">\n        <sequence>\n          <element name=\"Value\" type=\"xs:string\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"ProductSpecCharacteristic\" type=\"custinv:ProductSpecCharacteristic\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductComponent\">\n        <complexContent>\n          <extension base=\"custinv:Product\">\n            <sequence>\n              <element name=\"SimpleProductOfferingId\" type=\"xs:token\" minOccurs=\"0\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"ProductOffering\" abstract=\"true\">\n        <sequence>\n          <element name=\"ProductOfferingId\" type=\"custinv:ProductOfferingId\"/>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"ProductOfferingPrice\" type=\"custinv:ProductOfferingPrice\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n          <element name=\"DistributionChannel\" type=\"custinv:DistributionChannel\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n          <element name=\"ProductOfferingTerm\" type=\"custinv:ProductOfferingTerm\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n          <element name=\"ProductOfferingRelationship\" type=\"custinv:ProductOfferingRelationship\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n          <element name=\"MarketSegment\" type=\"custinv:MarketSegment\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductOfferingGroup\">\n        <complexContent>\n          <extension base=\"custinv:BundledProductOffering\">\n            <sequence>\n              <element name=\"MinChoices\" default=\"1\" type=\"xs:int\"/>\n              <element name=\"MaxChoices\" default=\"1\" type=\"xs:int\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <simpleType name=\"ProductOfferingId\">\n        <restriction base=\"xs:token\"/>\n      </simpleType>\n      <complexType name=\"ProductOfferingPrice\" abstract=\"true\">\n        <sequence>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductOfferingRelationship\" abstract=\"true\">\n        <sequence>\n          <element name=\"TypeRelationship\" type=\"xs:string\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <choice>\n            <element name=\"DefaultCardinality\" type=\"xs:int\" minOccurs=\"0\"/>\n            <element name=\"MaxCardinality\" type=\"xs:int\" minOccurs=\"0\"/>\n            <element name=\"MinCardinality\" type=\"xs:int\" minOccurs=\"0\"/>\n            <element name=\"ProductOfferingGroup\">\n              <annotation>\n                <documentation>This Group includes several references to a productOffering, where only one of them must be applicable (OR-Relation)</documentation>\n              </annotation>\n              <complexType>\n                <sequence>\n                  <element name=\"ProductOfferingId\" type=\"common:sidId\" maxOccurs=\"unbounded\"/>\n                </sequence>\n              </complexType>\n            </element>\n            <element name=\"ProductOfferingId\" type=\"common:sidId\"/>\n          </choice>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductOfferingTerm\">\n        <sequence>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"Type\" type=\"xs:string\"/>\n          <element name=\"Value\" type=\"xs:string\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductPromotion\" abstract=\"true\">\n        <sequence>\n          <element name=\"PromotionId\" type=\"xs:string\"/>\n          <element name=\"PromotionName\" type=\"xs:string\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductSpecCharacteristic\">\n        <sequence>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ValueType\" type=\"common:ValueType\"/>\n          <element name=\"Presence\" type=\"common:PresenceType\" minOccurs=\"0\"/>\n          <element name=\"ProductSpecCharacteristicValue\" type=\"custinv:ProductSpecCharacteristicValue\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"TranslateToServiceSpecCharacteristic\" type=\"common:sidId\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <annotation>\n              <documentation>The SID IDs ServiceSpecCharacteristic</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductSpecCharacteristicValue\" abstract=\"true\">\n        <sequence>\n          <element name=\"Value\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"InfluencedProductOfferingPrice\" type=\"common:sidId\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n            <annotation>\n              <documentation>The SID IDs of prices that are influenced by this object</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"ProductSpecification\">\n        <sequence>\n          <element name=\"ProductSpecificationId\" type=\"custinv:ProductSpecificationId\"/>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ProductSpecCharacteristic\" type=\"custinv:ProductSpecCharacteristic\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"productSpecificationType\" type=\"custinv:ProductSpecificationType\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n        </sequence>\n      </complexType>\n      <simpleType name=\"ProductSpecificationId\">\n        <restriction base=\"xs:token\"/>\n      </simpleType>\n      <complexType name=\"ProductSpecificationType\" abstract=\"true\">\n        <sequence>\n          <element name=\"Type\" type=\"xs:string\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"RecurringChargeProdOfferPriceCharge\" abstract=\"true\">\n        <complexContent>\n          <extension base=\"custinv:ProdOfferPriceCharge\">\n            <sequence>\n              <element name=\"TaxRate\" type=\"xs:decimal\" minOccurs=\"0\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"ServiceSpecCharacteristic\" abstract=\"true\">\n        <sequence>\n          <element name=\"Name\" type=\"xs:string\"/>\n          <element name=\"Presence\" type=\"common:PresenceType\" minOccurs=\"0\"/>\n          <element name=\"ValueType\" type=\"common:ValueType\"/>\n          <element name=\"Description\" type=\"xs:string\" minOccurs=\"0\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"ServiceSpecCharacteristicValue\" type=\"custinv:ServiceSpecCharacteristicValue\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ServiceSpecCharacteristicValue\" abstract=\"true\">\n        <sequence>\n          <element name=\"Value\" type=\"xs:string\"/>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"ServiceSpecification\" abstract=\"true\">\n        <sequence>\n          <element name=\"ValidFor\" type=\"common:TimePeriod\" minOccurs=\"0\"/>\n          <element name=\"ServiceSpecCharacteristic\" type=\"custinv:ServiceSpecCharacteristic\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"SimpleProductOffering\">\n        <complexContent>\n          <extension base=\"custinv:ProductOffering\">\n            <sequence>\n              <element name=\"ProductSpecification\" type=\"custinv:ProductSpecification\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"Subscription\">\n        <sequence>\n          <element name=\"Id\" type=\"xs:token\"/>\n          <element name=\"CustomerAccount\" type=\"custinv:CustomerAccount\"/>\n          <element name=\"Products\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element ref=\"custinv:Product\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n          <element ref=\"common:CallNumber\" minOccurs=\"0\"/>\n          <element name=\"AdoId\" type=\"xs:token\" minOccurs=\"0\"/>\n          <element name=\"LocationId\" type=\"xs:token\" minOccurs=\"0\"/>\n          <element name=\"FormattedAddress\" type=\"custinv:FormattedAddress\" minOccurs=\"0\"/>\n          <element name=\"Type\" type=\"xs:token\">\n            <annotation>\n              <documentation>e.g. Wireline, Mobile, Mixed</documentation>\n            </annotation>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"VoiceProduct\">\n        <complexContent>\n          <extension base=\"custinv:ProductComponent\">\n            <sequence>\n              <element name=\"Type\" type=\"xs:token\"/>\n              <element ref=\"common:CallNumber\"/>\n              <element name=\"UnlistedNumber\" type=\"xs:boolean\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"getProductsForCustomerLocationRequestType\">\n        <complexContent>\n          <extension base=\"custinv:getProductsRequestType\">\n            <sequence>\n              <element name=\"PartyId\" type=\"xs:token\"/>\n              <element name=\"LocationId\" type=\"xs:token\" minOccurs=\"0\"/>\n            </sequence>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"getProductsForCustomerLocationResponseType\">\n        <sequence>\n          <element name=\"Subscription\" type=\"custinv:Subscription\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"getProductsForSubscriptionRequestType\">\n        <complexContent>\n          <extension base=\"custinv:getProductsRequestType\">\n            <choice>\n              <element ref=\"common:CallNumber\"/>\n              <element name=\"SubscriptionId\" type=\"xs:token\"/>\n            </choice>\n          </extension>\n        </complexContent>\n      </complexType>\n      <complexType name=\"getProductsRequestType\">\n        <sequence>\n          <element name=\"LoadOptions\">\n            <complexType>\n              <sequence>\n                <element name=\"GetResources\" type=\"xs:boolean\">\n                  <annotation>\n                    <documentation>additionally returns Customer resources when set to true, false by default</documentation>\n                  </annotation>\n                </element>\n                <element name=\"GetMobileNet\" type=\"xs:boolean\"/>\n                <element name=\"GetFixedNet\" type=\"xs:boolean\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"getProductsResponseType\">\n        <sequence>\n          <element name=\"Subscription\" type=\"custinv:Subscription\" minOccurs=\"0\"/>\n        </sequence>\n      </complexType>\n      <complexType name=\"getSubscriptionsForPartyRequestType\">\n        <sequence>\n          <element name=\"PartyId\" type=\"xs:token\"/>\n          <choice>\n            <element name=\"BAN\" type=\"xs:token\" minOccurs=\"0\"/>\n            <element name=\"BNAccountId\" type=\"xs:token\" minOccurs=\"0\"/>\n          </choice>\n          <element name=\"loadOptions\">\n            <complexType>\n              <sequence>\n                <element name=\"GetFixedNet\" type=\"xs:boolean\"/>\n                <element name=\"GetMobileNet\" type=\"xs:boolean\"/>\n                <element name=\"GetProducts\" type=\"xs:boolean\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"getSubscriptionsForPartyResponseType\">\n        <sequence>\n          <element name=\"Subscriptions\" minOccurs=\"0\">\n            <complexType>\n              <sequence>\n                <element name=\"Subscription\" type=\"custinv:Subscription\" maxOccurs=\"unbounded\"/>\n              </sequence>\n            </complexType>\n          </element>\n        </sequence>\n      </complexType>\n      <complexType name=\"mediaBox\">\n        <complexContent>\n          <extension base=\"custinv:PhysicalResource\"/>\n        </complexContent>\n      </complexType>\n      <element name=\"CustomerAccount\" type=\"custinv:CustomerAccount\"/>\n      <element name=\"PhysicalResource\" type=\"custinv:PhysicalResource\"/>\n      <element name=\"Product\" type=\"custinv:Product\"/>\n      <element name=\"ProductCatalog\" type=\"custinv:ProductCatalog\"/>\n      <element name=\"ProductOffering\" type=\"custinv:ProductOffering\"/>\n      <element name=\"ProductSpecification\" type=\"custinv:ProductSpecification\"/>\n      <element name=\"getProductsForCustomerLocationRequest\" type=\"custinv:getProductsForCustomerLocationRequestType\"/>\n      <element name=\"getProductsForCustomerLocationResponse\" type=\"custinv:getProductsForCustomerLocationResponseType\"/>\n      <element name=\"getProductsForSubscriptionRequest\" type=\"custinv:getProductsForSubscriptionRequestType\"/>\n      <element name=\"getProductsForSubscriptionResponse\" type=\"custinv:getProductsResponseType\"/>\n      <element name=\"getSubscriptionsForPartyRequest\" type=\"custinv:getSubscriptionsForPartyRequestType\"/>\n      <element name=\"getSubscriptionsForPartyResponse\" type=\"custinv:getSubscriptionsForPartyResponseType\"/>\n    </schema>\n  </wsdl:types>\n  <wsdl:message name=\"getProductsForCustomerLocationRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getProductsForCustomerLocationRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getProductsForCustomerLocationResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getProductsForCustomerLocationResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"Error\">\n    <wsdl:part name=\"part1\" element=\"ns1:ErrorDetails\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getSubscriptionsForPartyRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getSubscriptionsForPartyRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getSubscriptionsForPartyResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getSubscriptionsForPartyResponse\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getProductsForSubscriptionRequest\">\n    <wsdl:part name=\"part1\" element=\"ns0:getProductsForSubscriptionRequest\"/>\n  </wsdl:message>\n  <wsdl:message name=\"getProductsForSubscriptionResponse\">\n    <wsdl:part name=\"part1\" element=\"ns0:getProductsForSubscriptionResponse\"/>\n  </wsdl:message>\n  <wsdl:portType name=\"CustomerInventoryPortType\">\n    <wsdl:operation name=\"getProductsForCustomerLocation\">\n      <wsdl:input message=\"tns:getProductsForCustomerLocationRequest\"/>\n      <wsdl:output message=\"tns:getProductsForCustomerLocationResponse\"/>\n      <wsdl:fault name=\"Error\" message=\"tns:Error\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"getSubscriptionsForParty\">\n      <wsdl:input message=\"tns:getSubscriptionsForPartyRequest\"/>\n      <wsdl:output message=\"tns:getSubscriptionsForPartyResponse\"/>\n      <wsdl:fault name=\"Error\" message=\"tns:Error\"/>\n    </wsdl:operation>\n    <wsdl:operation name=\"getProductsForSubscription\">\n      <wsdl:input message=\"tns:getProductsForSubscriptionRequest\"/>\n      <wsdl:output message=\"tns:getProductsForSubscriptionResponse\"/>\n      <wsdl:fault name=\"Error\" message=\"tns:Error\"/>\n    </wsdl:operation>\n  </wsdl:portType>\n  <wsdl:binding name=\"CustomerInventoryPortTypeHttpBinding\" type=\"tns:CustomerInventoryPortType\">\n    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>\n    <wsdl:operation name=\"getProductsForCustomerLocation\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerInventory//getProductsForCustomerLocation\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"Error\">\n        <soap:fault name=\"Error\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"getSubscriptionsForParty\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerInventory//getSubscriptionsForParty\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"Error\">\n        <soap:fault name=\"Error\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n    <wsdl:operation name=\"getProductsForSubscription\">\n      <soap:operation style=\"document\" soapAction=\"/esb/CustomerInventory//getProductsForSubscription\"/>\n      <wsdl:input>\n        <soap:body use=\"literal\"/>\n      </wsdl:input>\n      <wsdl:output>\n        <soap:body use=\"literal\"/>\n      </wsdl:output>\n      <wsdl:fault name=\"Error\">\n        <soap:fault name=\"Error\" use=\"literal\"/>\n      </wsdl:fault>\n    </wsdl:operation>\n  </wsdl:binding>\n  <wsdl:service name=\"CustomerInventory\">\n    <wsdl:port name=\"CustomerInventoryPortTypeTa-devViHttpEndpoint\" binding=\"tns:CustomerInventoryPortTypeHttpBinding\">\n      <soap:address location=\"http://esb-e.a1telekom.inside:8080/esb/si:ta-dev\"/>\n    </wsdl:port>\n  </wsdl:service>\n</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint></con:endpoints><con:operation isOneWay=\"false\" action=\"/esb/CustomerInventory//getProductsForCustomerLocation\" name=\"getProductsForCustomerLocation\" bindingOperationName=\"getProductsForCustomerLocation\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerInventory\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getProductsForCustomerLocationRequest>\n         <cus:LoadOptions>\n            <cus:GetResources>true</cus:GetResources>\n            <cus:GetMobileNet>true</cus:GetMobileNet>\n            <cus:GetFixedNet>true</cus:GetFixedNet>\n         </cus:LoadOptions>\n         <cus:PartyId>104600789</cus:PartyId>\n         <!--Optional:-->\n         \n      </cus:getProductsForCustomerLocationRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerInventory//getProductsForCustomerLocation\"/><con:wsrmConfig version=\"1.2\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerInventory//getProductsForSubscription\" name=\"getProductsForSubscription\" bindingOperationName=\"getProductsForSubscription\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerInventory\" xmlns:com=\"http://cdm.a1telekom.at/common\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getProductsForSubscriptionRequest>\n         <cus:LoadOptions>\n            <cus:GetResources>true</cus:GetResources>\n            <cus:GetMobileNet>true</cus:GetMobileNet>\n            <cus:GetFixedNet>true</cus:GetFixedNet>\n         </cus:LoadOptions>\n         <!--You have a CHOICE of the next 2 items at this level-->\n \n         <cus:SubscriptionId>899999997727713</cus:SubscriptionId>\n         \n      </cus:getProductsForSubscriptionRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerInventory//getProductsForSubscription\"/><con:wsrmConfig version=\"1.2\"/></con:call></con:operation><con:operation isOneWay=\"false\" action=\"/esb/CustomerInventory//getSubscriptionsForParty\" name=\"getSubscriptionsForParty\" bindingOperationName=\"getSubscriptionsForParty\" type=\"Request-Response\" inputName=\"\" receivesAttachments=\"false\" sendsAttachments=\"false\" anonymous=\"optional\"><con:settings/><con:call name=\"Request 1\"><con:settings><con:setting id=\"com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers\">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerInventory\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getSubscriptionsForPartyRequest>\n         <cus:PartyId>104600789</cus:PartyId>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         <!--Optional:-->\n         \n         <!--Optional:-->\n         \n         <cus:loadOptions>\n            <cus:GetFixedNet>true</cus:GetFixedNet>\n            <cus:GetMobileNet>true</cus:GetMobileNet>\n            <cus:GetProducts>true</cus:GetProducts>\n         </cus:loadOptions>\n      </cus:getSubscriptionsForPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode=\"PERSISTENT\"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand=\"NONE\" version=\"200508\" action=\"/esb/CustomerInventory//getSubscriptionsForParty\"/><con:wsrmConfig version=\"1.2\"/></con:call></con:operation></con:interface><con:testSuite name=\"CustomerInventoryPortTypeHttpBinding TestSuite\"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError=\"true\" failTestCaseOnErrors=\"true\" keepSession=\"false\" maxResults=\"0\" name=\"CustomerInventoryPortTypeHttpBinding TestSuite\" searchProperties=\"true\"><con:settings/><con:testStep type=\"request\" name=\"getProductsForCustomerLocation\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerInventoryPortTypeHttpBinding</con:interface><con:operation>getProductsForCustomerLocation</con:operation><con:request name=\"getProductsForCustomerLocation\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerInventory\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getProductsForCustomerLocationRequest>\n         <cus:LoadOptions>\n            <cus:GetResources>?</cus:GetResources>\n            <cus:GetMobileNet>?</cus:GetMobileNet>\n            <cus:GetFixedNet>?</cus:GetFixedNet>\n         </cus:LoadOptions>\n         <cus:PartyId>?</cus:PartyId>\n         <!--Optional:-->\n         <cus:LocationId>?</cus:LocationId>\n      </cus:getProductsForCustomerLocationRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerInventory//getProductsForCustomerLocation\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getProductsForSubscription\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerInventoryPortTypeHttpBinding</con:interface><con:operation>getProductsForSubscription</con:operation><con:request name=\"getProductsForSubscription\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerInventory\" xmlns:com=\"http://cdm.a1telekom.at/common\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getProductsForSubscriptionRequest>\n         <cus:LoadOptions>\n            <cus:GetResources>?</cus:GetResources>\n            <cus:GetMobileNet>?</cus:GetMobileNet>\n            <cus:GetFixedNet>?</cus:GetFixedNet>\n         </cus:LoadOptions>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         <com:CallNumber>\n            <CC>?</CC>\n            <NDC>?</NDC>\n            <SN>?</SN>\n         </com:CallNumber>\n         <cus:SubscriptionId>?</cus:SubscriptionId>\n      </cus:getProductsForSubscriptionRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerInventory//getProductsForSubscription\"/></con:request></con:config></con:testStep><con:testStep type=\"request\" name=\"getSubscriptionsForParty\"><con:settings/><con:config xsi:type=\"con:RequestStep\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:interface>CustomerInventoryPortTypeHttpBinding</con:interface><con:operation>getSubscriptionsForParty</con:operation><con:request name=\"getSubscriptionsForParty\"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:cus=\"http://eai.a1telekom.at/CustomerInventory\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <cus:getSubscriptionsForPartyRequest>\n         <cus:PartyId>?</cus:PartyId>\n         <!--You have a CHOICE of the next 2 items at this level-->\n         <!--Optional:-->\n         <cus:BAN>?</cus:BAN>\n         <!--Optional:-->\n         <cus:BNAccountId>?</cus:BNAccountId>\n         <cus:loadOptions>\n            <cus:GetFixedNet>?</cus:GetFixedNet>\n            <cus:GetMobileNet>?</cus:GetMobileNet>\n            <cus:GetProducts>?</cus:GetProducts>\n         </cus:loadOptions>\n      </cus:getSubscriptionsForPartyRequest>\n   </soapenv:Body>\n</soapenv:Envelope>]]></con:request><con:wsaConfig action=\"/esb/CustomerInventory//getSubscriptionsForParty\"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type=\"con:DefaultEndpointStrategy\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"><con:endpoint mode=\"COMPLEMENT\" username=\"ta-cuco\" password=\"ta\">http://esb-e.a1telekom.inside:8080/esb/si:ta-dev</con:endpoint></con:endpointStrategy><con:properties/><con:wssContainer/><con:databaseConnectionContainer/></con:soapui-project>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/logback.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/logback.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 950,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration>\n<configuration debug=\"true\" scan=\"true\">\n  \n <appender name=\"AUDITLOG\" class=\"at.a1ta.bite.audit.core.RollingFileAuditAppender\">\n    <!-- encoder is optional if not specified default layout will be used -->\n    <encoder class=\"ch.qos.logback.core.encoder.LayoutWrappingEncoder\">\n      <layout class=\"at.a1ta.bite.audit.core.AuditEventLayout\" />\n    </encoder>\n    <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n      <!-- minutely rollover for local testing -->\n      <fileNamePattern>D:/logs/cuco/cuco.audit.%d{yyyy-MM-dd_HH-mm}.log</fileNamePattern>\n      <maxHistory>30</maxHistory>\n    </rollingPolicy>\n  </appender>\n\n  <logger name=\"AUDIT\" level=\"INFO\" additivity=\"false\">\n    <appender-ref ref=\"AUDITLOG\" />\n  </logger>\n\n  <root>\n    <level value=\"INFO\" />\n    <appender-ref ref=\"FILE\" />\n    <appender-ref ref=\"STDOUT\" />\n  </root>\n\n</configuration>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/ehcache.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/ehcache.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1538,
    "content": "<ehcache xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"https://www.ehcache.org/ehcache.xsd\">\n  <diskStore path=\"java.io.tmpdir\"/>\n  \n  <defaultCache\n    maxElementsInMemory=\"10000\"\n    eternal=\"false\"\n    timeToIdleSeconds=\"120\"\n    timeToLiveSeconds=\"120\"\n    overflowToDisk=\"true\"\n    diskSpoolBufferSizeMB=\"30\"\n    maxElementsOnDisk=\"10000000\"\n    diskPersistent=\"false\"\n    diskExpiryThreadIntervalSeconds=\"20\"\n    memoryStoreEvictionPolicy=\"LRU\"\n    statistics=\"false\" />\n    \n  <cache name=\"ldapCache\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\"/>\n  <cache name=\"orgUnitCache\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\"/>\n  <cache name=\"at.a1ta.cusi.bom.addresstypes.Country\" maxElementsInMemory=\"10000\" overflowToDisk=\"false\" timeToLiveSeconds=\"0\" eternal=\"true\"/>\n  <cache name=\"customerEquipmentCache\" maxElementsInMemory=\"1000\" overflowToDisk=\"false\" timeToLiveSeconds=\"3600\" eternal=\"false\"/>\n  <cache name=\"phoneNumberCache\" maxElementsInMemory=\"200\" overflowToDisk=\"false\" timeToLiveSeconds=\"36000\" eternal=\"false\"/>\n  <cache name=\"VIPCache\" maxElementsInMemory=\"2000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\"/>\n  <cache name=\"mobilPoints\" maxElementsInMemory=\"2000\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\"/>\n  <cache name=\"UDPCache\" maxElementsInMemory=\"100\" overflowToDisk=\"false\" timeToLiveSeconds=\"86400\" eternal=\"false\"/>\n</ehcache>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/testApplicationContext-cuco-core.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/testApplicationContext-cuco-core.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1705,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop=\"http://www.springframework.org/schema/aop\"\n\txmlns:context=\"http://www.springframework.org/schema/context\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n\txsi:schemaLocation=\"http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\n    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n\n  <bean id=\"metricsRegistry\" class=\"com.codahale.metrics.SharedMetricRegistries\" factory-method=\"getOrCreate\">\n    <constructor-arg type=\"java.lang.String\" value=\"OFFERSERVERMETRICS\" />\n  </bean>\n  <context:property-placeholder location=\"classpath:configuration.properties\" />\n  <import resource=\"classpath:/at/a1ta/bite/core/applicationContext-bite-core.xml\" />\n  <import resource=\"classpath:/at/a1ta/bite/data/cusco/applicationContext-bite-data-cusco.xml\" />\n  <import resource=\"classpath:/at/a1ta/bite/data/clarify/service/applicationContext-clarify-service.xml\" />\n  <import resource=\"classpath:/at/a1ta/cuco/core/dao/db/applicationContext-cuco-dao-db.xml\" />\n  <import resource=\"classpath:/at/a1ta/cuco/core/dao/billingcycle/applicationContext-cuco-dao-bc.xml\" />\n  \n  <context:component-scan base-package=\"at.a1ta.cuco.core.dao.esb\"/>\n  <context:component-scan base-package=\"at.a1ta.cuco.core.service\"/>\n\n</beans>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetTariffOfferSimulationResponse.MSISDN_and_BAN.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetTariffOfferSimulationResponse.MSISDN_and_BAN.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 29621,
    "content": "<GetTariffOfferSimulationResponse xmlns=\"http://bit.mobilkom.at/TariffGuide/\">\n  <GetTariffOfferSimulationResult>\n    <CurrentTariff>\n      <Code>A1NV12_2</Code>\n      <Name>A1 Mobil Network Smart 2</Name>\n    </CurrentTariff>\n    <CurrentServices>\n      <Service>\n        <Code>O_SMS1000</Code>\n        <Name>A1 SMS 1000</Name>\n      </Service>\n      <Service>\n        <Code>EU100_12</Code>\n        <Name>A1 EU+ 100</Name>\n      </Service>\n    </CurrentServices>\n    <AdditionalInformation>\n      <Code>P</Code>\n      <Text>POK-Wechsel;Es gab bei mindestens einer Rufnummer des BANs w\ufffdhrend oder nach dem Simulationszeitraum einen Tarif- bzw. Optionswechsel.</Text>\n    </AdditionalInformation>\n    <SimulatedTariffs>\n      <SimulatedTariff>\n        <Tariff>\n          <Code>A1NV12_4</Code>\n          <Name>A1 Network Smart Unlimited</Name>\n        </Tariff>\n        <AllOffers>\n          <TariffOfferType>\n            <Services />\n            <DB2Value>\n            \t<Gross>4652</Gross>\n\t\t\t\t<Net>4652</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-3000</Gross>\n\t\t\t\t<Net>-3000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n            \t<Gross>4490</Gross>\n\t\t\t\t<Net>4300</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>2461</Gross>\n\t\t\t\t<Net>2461</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-2000</Gross>\n\t\t\t\t<Net>-2000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>7223</Gross>\n\t\t\t\t<Net>7223</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>2267</Gross>\n\t\t\t\t<Net>2267</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-2000</Gross>\n\t\t\t\t<Net>-2000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>6640</Gross>\n\t\t\t\t<Net>6640</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>2184</Gross>\n\t\t\t\t<Net>2184</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-2000</Gross>\n\t\t\t\t<Net>-2000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>6390</Gross>\n\t\t\t\t<Net>6390</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>2103</Gross>\n\t\t\t\t<Net>2103</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>6148</Gross>\n\t\t\t\t<Net>6148</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1989</Gross>\n\t\t\t\t<Net>1989</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>5807</Gross>\n\t\t\t\t<Net>5807</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1909</Gross>\n\t\t\t\t<Net>1909</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>5565</Gross>\n\t\t\t\t<Net>5565</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n           <DB2Value>\n            \t<Gross>1825</Gross>\n\t\t\t\t<Net>1825</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>5315</Gross>\n\t\t\t\t<Net>5315</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1714</Gross>\n\t\t\t\t<Net>1714</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>4982</Gross>\n\t\t\t\t<Net>4982</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n        </AllOffers>\n        <Recommended>true</Recommended>\n        <RecommendedReasons>\n          <Reason>Voice</Reason>\n          <Reason>SMS</Reason>\n        </RecommendedReasons>\n      </SimulatedTariff>\n      <SimulatedTariff>\n        <Tariff>\n          <Code>A1NV12_3</Code>\n          <Name>A1 Mobil Network Smart 3</Name>\n        </Tariff>\n        <AllOffers>\n          <TariffOfferType>\n            <Services />\n            <DB2Value>\n            \t<Gross>3152</Gross>\n\t\t\t\t<Net>3152</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2290</Gross>\n\t\t\t\t<Net>2290</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n\t\t\t\t<Gross>1961</Gross>\n\t\t\t\t<Net>1961</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>5723</Gross>\n\t\t\t\t<Net>5723</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1767</Gross>\n\t\t\t\t<Net>1767</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>5140</Gross>\n\t\t\t\t<Net>5140</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1684</Gross>\n\t\t\t\t<Net>1684</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>4890</Gross>\n\t\t\t\t<Net>4890</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1603</Gross>\n\t\t\t\t<Net>1603</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1000</Gross>\n\t\t\t\t<Net>-1000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>4648</Gross>\n\t\t\t\t<Net>4648</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1489</Gross>\n\t\t\t\t<Net>1489</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1000</Gross>\n\t\t\t\t<Net>-1000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>4307</Gross>\n\t\t\t\t<Net>4307</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1409</Gross>\n\t\t\t\t<Net>1409</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1000</Gross>\n\t\t\t\t<Net>-1000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>4065</Gross>\n\t\t\t\t<Net>4065</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1325</Gross>\n\t\t\t\t<Net>1325</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-700</Gross>\n\t\t\t\t<Net>-700</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3815</Gross>\n\t\t\t\t<Net>3815</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1214</Gross>\n\t\t\t\t<Net>1214</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-700</Gross>\n\t\t\t\t<Net>-700</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3482</Gross>\n\t\t\t\t<Net>3482</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n        </AllOffers>\n      </SimulatedTariff>\n      <SimulatedTariff>\n        <Tariff>\n          <Code>A1NV12_2</Code>\n          <Name>A1 Mobil Network Smart 2</Name>\n        </Tariff>\n        <AllOffers>\n          <TariffOfferType>\n            <Services />\n            <DB2Value>\n            \t<Gross>4258</Gross>\n\t\t\t\t<Net>2458</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-500</Gross>\n\t\t\t\t<Net>-500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2290</Gross>\n\t\t\t\t<Net>2290</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1728</Gross>\n\t\t\t\t<Net>1728</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1500</Gross>\n\t\t\t\t<Net>-1500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>5023</Gross>\n\t\t\t\t<Net>5023</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1534</Gross>\n\t\t\t\t<Net>1534</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1000</Gross>\n\t\t\t\t<Net>-1000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>4440</Gross>\n\t\t\t\t<Net>4440</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1450</Gross>\n\t\t\t\t<Net>1450</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1000</Gross>\n\t\t\t\t<Net>-1000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>4190</Gross>\n\t\t\t\t<Net>4190</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1370</Gross>\n\t\t\t\t<Net>1370</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1000</Gross>\n\t\t\t\t<Net>-1000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3948</Gross>\n\t\t\t\t<Net>3948</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1256</Gross>\n\t\t\t\t<Net>1256</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-700</Gross>\n\t\t\t\t<Net>-700</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3607</Gross>\n\t\t\t\t<Net>3607</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1177</Gross>\n\t\t\t\t<Net>1177</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-700</Gross>\n\t\t\t\t<Net>-700</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3365</Gross>\n\t\t\t\t<Net>3365</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1092</Gross>\n\t\t\t\t<Net>1092</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-500</Gross>\n\t\t\t\t<Net>-500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3115</Gross>\n\t\t\t\t<Net>3115</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>983</Gross>\n\t\t\t\t<Net>983</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-500</Gross>\n\t\t\t\t<Net>-500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2782</Gross>\n\t\t\t\t<Net>2782</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n        </AllOffers>\n      </SimulatedTariff>\n      <SimulatedTariff>\n        <Tariff>\n          <Code>A1NV12_5</Code>\n          <Name>A1 Mobil Network Talk</Name>\n        </Tariff>\n        <AllOffers>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1850</Gross>\n\t\t\t\t<Net>1850</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>0</Gross>\n\t\t\t\t<Net>0</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>1182</Gross>\n\t\t\t\t<Net>1182</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1361</Gross>\n\t\t\t\t<Net>1361</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-700</Gross>\n\t\t\t\t<Net>-700</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3923</Gross>\n\t\t\t\t<Net>3923</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1241</Gross>\n\t\t\t\t<Net>1241</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-700</Gross>\n\t\t\t\t<Net>-700</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2448</Gross>\n\t\t\t\t<Net>2448</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1167</Gross>\n\t\t\t\t<Net>1167</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-500</Gross>\n\t\t\t\t<Net>-500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3340</Gross>\n\t\t\t\t<Net>3340</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1084</Gross>\n\t\t\t\t<Net>1084</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-500</Gross>\n\t\t\t\t<Net>-500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3090</Gross>\n\t\t\t\t<Net>3090</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>963</Gross>\n\t\t\t\t<Net>963</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-300</Gross>\n\t\t\t\t<Net>-300</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2015</Gross>\n\t\t\t\t<Net>2015</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>889</Gross>\n\t\t\t\t<Net>889</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-300</Gross>\n\t\t\t\t<Net>-300</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2507</Gross>\n\t\t\t\t<Net>2507</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>811</Gross>\n\t\t\t\t<Net>811</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-300</Gross>\n\t\t\t\t<Net>-300</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2265</Gross>\n\t\t\t\t<Net>2265</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services />\n            <DB2Value>\n            \t<Gross>691</Gross>\n\t\t\t\t<Net>691</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-300</Gross>\n\t\t\t\t<Net>-300</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>1190</Gross>\n\t\t\t\t<Net>1190</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n        </AllOffers>\n      </SimulatedTariff>\n      <SimulatedTariff>\n        <Tariff>\n          <Code>A1NV12_1</Code>\n          <Name>A1 Mobil Network Smart 1</Name>\n        </Tariff>\n        <AllOffers>\n          <TariffOfferType>\n            <Services />\n            <DB2Value>\n            \t<Gross>1658</Gross>\n\t\t\t\t<Net>1658</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-300</Gross>\n\t\t\t\t<Net>-300</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>1490</Gross>\n\t\t\t\t<Net>1490</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1461</Gross>\n\t\t\t\t<Net>1461</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-1000</Gross>\n\t\t\t\t<Net>-1000</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>4223</Gross>\n\t\t\t\t<Net>4223</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1267</Gross>\n\t\t\t\t<Net>1267</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-700</Gross>\n\t\t\t\t<Net>-700</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3640</Gross>\n\t\t\t\t<Net>3640</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1184</Gross>\n\t\t\t\t<Net>1184</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-700</Gross>\n\t\t\t\t<Net>-700</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3390</Gross>\n\t\t\t\t<Net>3390</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU300_12</Code>\n                <Name>A1 EU+ 300</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>1103</Gross>\n\t\t\t\t<Net>1103</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-500</Gross>\n\t\t\t\t<Net>-500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>3148</Gross>\n\t\t\t\t<Net>3148</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>989</Gross>\n\t\t\t\t<Net>989</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-500</Gross>\n\t\t\t\t<Net>-500</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2807</Gross>\n\t\t\t\t<Net>2807</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS1000</Code>\n                <Name>A1 SMS 1000</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>911</Gross>\n\t\t\t\t<Net>911</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-300</Gross>\n\t\t\t\t<Net>-300</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2565</Gross>\n\t\t\t\t<Net>2565</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>EU100_12</Code>\n                <Name>A1 EU+ 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n            \t<Gross>825</Gross>\n\t\t\t\t<Net>825</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-300</Gross>\n\t\t\t\t<Net>-300</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>2315</Gross>\n\t\t\t\t<Net>2315</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n          <TariffOfferType>\n            <Services>\n              <Service>\n                <Code>O_SMS100</Code>\n                <Name>A1 SMS 100</Name>\n              </Service>\n            </Services>\n            <DB2Value>\n\t\t\t\t<Gross>716</Gross>\n\t\t\t\t<Net>600</Net>\n\t\t\t</DB2Value>\n            <DB2Indicator>Green</DB2Indicator>\n            <InvoiceAmountChange>\n            \t<Gross>-300</Gross>\n\t\t\t\t<Net>-300</Net>\n\t\t\t</InvoiceAmountChange>\n            <BaseFee>\n\t\t\t\t<Gross>1982</Gross>\n\t\t\t\t<Net>1982</Net>\n\t\t\t</BaseFee>\n          </TariffOfferType>\n        </AllOffers>\n      </SimulatedTariff>\n    </SimulatedTariffs>\n    <CurrentBaseFee>\n\t\t<Gross>2290</Gross>\n\t\t<Net>2280</Net>\n\t</CurrentBaseFee>\n    <CurrentAvgInvoiceAmount>\n\t\t<Gross>1881</Gross>\n\t\t<Net>1853</Net>\n\t</CurrentAvgInvoiceAmount>\n\t<SimulatedInvoiceAmount>\n\t\t<Gross>2081</Gross>\n\t\t<Net>1953</Net>\n\t</SimulatedInvoiceAmount>\n\t<SubscriberAmountInCalculation>2</SubscriberAmountInCalculation>\n    <SubscriberListInCalculation>\n      <Subscriber>0664 123345</Subscriber>\n      <Subscriber>+43 664 123345</Subscriber>\n    </SubscriberListInCalculation>\n  </GetTariffOfferSimulationResult>\n</GetTariffOfferSimulationResponse>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetProductsForSubscriptionResponse_ProductCatalogDetails.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetProductsForSubscriptionResponse_ProductCatalogDetails.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 58559,
    "content": "      <ns0:getProductsForSubscriptionResponse xmlns:ns0=\"http://eai.a1telekom.at/CustomerInventory\">\n         <pfx3:Subscription xmlns:pfx3=\"http://eai.a1telekom.at/CustomerInventory\">\n            <pfx3:Id>899999999161557</pfx3:Id>\n            <pfx3:CustomerAccount xsi:type=\"pfx3:BNAccount\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n               <pfx3:AccountNumber>200007055567</pfx3:AccountNumber>\n            </pfx3:CustomerAccount>\n            <pfx3:Products>\n               <pfx:Product xsi:type=\"pfx:ProductBundle\" xmlns:pfx=\"http://eai.a1telekom.at/CustomerInventory\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n                  <pfx:Name>A1 Kombi</pfx:Name>\n                  <pfx:Brand>A1</pfx:Brand>\n                  <pfx:Description>A1 Kombi</pfx:Description>\n                  <pfx:ValidFor/>\n                  <pfx:BundledProductList>\n                     <pfx:BundledProduct>\n                        <pfx:MinCardinality>1</pfx:MinCardinality>\n                        <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                        <pfx:DefaultCardinality>1</pfx:DefaultCardinality>\n                        <pfx:Product xsi:type=\"pfx:VoiceProduct\">\n                           <pfx:Name>A1 Festnetz-Telefonie</pfx:Name>\n                           <pfx:Brand>A1</pfx:Brand>\n                           <pfx:Description>A1 Festnetz-Telefonie, Kombi-Bestandteil</pfx:Description>\n                           <pfx:ProductStatus>a</pfx:ProductStatus>\n                           <pfx:ProductSerialNumber>16981248</pfx:ProductSerialNumber>\n                           <pfx:ValidFor>\n                              <StartDateTime>2008-09-09T00:00:00+02:00</StartDateTime>\n                              <EndDateTime>9999-12-31T00:00:00</EndDateTime>\n                           </pfx:ValidFor>\n                           <pfx:ProductCharacteristicValues>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>2011-09-30</pfx:Value>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:ProductSpecCharacteristicId>PSC_ENDE_DER_BINDUNG</pfx:ProductSpecCharacteristicId>\n                                    <pfx:Name>Ende der Bindung</pfx:Name>\n                                    <pfx:ValueType>dateTime</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>AK</pfx:Value>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:Name>Tarif</pfx:Name>\n                                    <pfx:ValueType>string</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>Standard</pfx:Value>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:Name>Netzservice</pfx:Name>\n                                    <pfx:ValueType>string</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>Berechtigt - Nicht Aktiviert</pfx:Value>\n                                 <pfx:ValidFor>\n                                    <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                 </pfx:ValidFor>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:ProductSpecCharacteristicId>PSC_ZUSDIE_ENTGELTANZEIGE</pfx:ProductSpecCharacteristicId>\n                                    <pfx:Name>Entgeltanzeige</pfx:Name>\n                                    <pfx:ValueType>string</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>Berechtigt - Nicht Aktiviert</pfx:Value>\n                                 <pfx:ValidFor>\n                                    <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                 </pfx:ValidFor>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:ProductSpecCharacteristicId>PSC_ZUSDIE_AUTOMATISCHER_RUECKRUF</pfx:ProductSpecCharacteristicId>\n                                    <pfx:Name>Automatischer R\u00fcckruf</pfx:Name>\n                                    <pfx:ValueType>string</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>Berechtigt - Nicht Aktiviert</pfx:Value>\n                                 <pfx:ValidFor>\n                                    <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                 </pfx:ValidFor>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:ProductSpecCharacteristicId>PSC_ZUSDIE_RUFUMLEITUNG_DURCHWAHL</pfx:ProductSpecCharacteristicId>\n                                    <pfx:Name>Rufumleitung mit Durchwahl bei besetzt.</pfx:Name>\n                                    <pfx:Description>Rufumleitung: FNr bei gest\u00f6rt Durchwahl mitsenden</pfx:Description>\n                                    <pfx:ValueType>string</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>Berechtigt - Nicht Aktiviert</pfx:Value>\n                                 <pfx:ValidFor>\n                                    <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                 </pfx:ValidFor>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:ProductSpecCharacteristicId>PSC_ZUSDIE_3ER_GESPRAECH</pfx:ProductSpecCharacteristicId>\n                                    <pfx:Name>3er Gespr\u00e4ch</pfx:Name>\n                                    <pfx:ValueType>string</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>Eintrag ins Telefonbuch</pfx:Value>\n                                 <pfx:ValidFor>\n                                    <StartDateTime>2012-08-28T00:00:00+02:00</StartDateTime>\n                                 </pfx:ValidFor>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:ProductSpecCharacteristicId>PSC_TELEFONBUCHEINTRAG</pfx:ProductSpecCharacteristicId>\n                                    <pfx:Name>Telefonbucheintrag</pfx:Name>\n                                    <pfx:Description>Telefonbucheintrag f\u00fcr Fixed Line Produkte</pfx:Description>\n                                    <pfx:ValueType>string</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                              <pfx:ProductCharacteristicValue>\n                                 <pfx:Value>Berechtigt - Aktiviert,Berechtigt - Nicht Aktiviert</pfx:Value>\n                                 <pfx:ValidFor>\n                                    <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                 </pfx:ValidFor>\n                                 <pfx:ProductSpecCharacteristic>\n                                    <pfx:ProductSpecCharacteristicId>PSC_ZUSDIE_CLIP</pfx:ProductSpecCharacteristicId>\n                                    <pfx:Name>CLIP</pfx:Name>\n                                    <pfx:ValueType>string</pfx:ValueType>\n                                 </pfx:ProductSpecCharacteristic>\n                              </pfx:ProductCharacteristicValue>\n                           </pfx:ProductCharacteristicValues>\n                           <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                              <pfx:Type>FIXEDNET</pfx:Type>\n                           </pfx:ProductSpecificationType>\n                           <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                              <pfx:Type>VOICE</pfx:Type>\n                           </pfx:ProductSpecificationType>\n                           <pfx:SimpleProductOffering>\n                              <pfx:ProductOfferingId>SPO_FESTNETZ</pfx:ProductOfferingId>\n                              <pfx:Name>A1 Festnetz-Telefonie</pfx:Name>\n                              <pfx:SortWeight>300</pfx:SortWeight>\n                              <pfx:ProductOfferingTypes>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>A1 Festnetz</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktlinie</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_LEVEL_2</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>Zusatzprodukt</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLEVEL</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktlevel</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_OPTION</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>Option</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUCTCATEGORY</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktkategorie</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                              </pfx:ProductOfferingTypes>\n                           </pfx:SimpleProductOffering>\n                           <pfx:Type>Fixed</pfx:Type>\n                           <ns1:CallNumber xmlns:ns1=\"http://cdm.a1telekom.at/common\">\n                              <CC>43</CC>\n                              <NDC>1</NDC>\n                              <SN>6981248</SN>\n                           </ns1:CallNumber>\n                           <pfx:UnlistedNumber>false</pfx:UnlistedNumber>\n                        </pfx:Product>\n                     </pfx:BundledProduct>\n                     <pfx:BundledProduct>\n                        <pfx:MinCardinality>0</pfx:MinCardinality>\n                        <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                        <pfx:DefaultCardinality>0</pfx:DefaultCardinality>\n                        <pfx:Product xsi:type=\"pfx:ProductComponent\">\n                           <pfx:Name>A1 Internetschutz</pfx:Name>\n                           <pfx:Brand>A1</pfx:Brand>\n                           <pfx:Description>A1 Internetschutz bietet Ihnen dreifachen Schutz: im A1 Netz, f\u00fcr Ihre Mailbox und Ihren Computer.</pfx:Description>\n                           <pfx:ProductStatus>a</pfx:ProductStatus>\n                           <pfx:ProductSerialNumber>24616813</pfx:ProductSerialNumber>\n                           <pfx:ValidFor>\n                              <StartDateTime>2010-03-15T00:00:00+01:00</StartDateTime>\n                              <EndDateTime>9999-12-31T00:00:00</EndDateTime>\n                           </pfx:ValidFor>\n                           <pfx:SimpleProductOffering>\n                              <pfx:ProductOfferingId>SPO_INTERNETSCHUTZ</pfx:ProductOfferingId>\n                              <pfx:Name>A1 Internetschutz</pfx:Name>\n                              <pfx:SortWeight>10</pfx:SortWeight>\n                              <pfx:ProductOfferingTypes>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ_INTERNET</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>A1 Festnetz Internet</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktlinie</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_LEVEL_2</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>Zusatzprodukt</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLEVEL</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktlevel</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_OPTION</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>Option</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUCTCATEGORY</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktkategorie</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                              </pfx:ProductOfferingTypes>\n                           </pfx:SimpleProductOffering>\n                        </pfx:Product>\n                     </pfx:BundledProduct>\n                     <pfx:BundledProduct>\n                        <pfx:MinCardinality>1</pfx:MinCardinality>\n                        <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                        <pfx:DefaultCardinality>1</pfx:DefaultCardinality>\n                        <pfx:Product xsi:type=\"pfx:ProductGroup\">\n                           <pfx:Name>A1 Netzservices</pfx:Name>\n                           <pfx:Brand>A1</pfx:Brand>\n                           <pfx:ValidFor/>\n                           <pfx:BundledProductList>\n                              <pfx:BundledProduct>\n                                 <pfx:MinCardinality>0</pfx:MinCardinality>\n                                 <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                                 <pfx:DefaultCardinality>1</pfx:DefaultCardinality>\n                                 <pfx:Product xsi:type=\"pfx:ProductComponent\">\n                                    <pfx:Name>A1 Netzservice Standard</pfx:Name>\n                                    <pfx:Brand>A1</pfx:Brand>\n                                    <pfx:ProductStatus>a</pfx:ProductStatus>\n                                    <pfx:ValidFor/>\n                                    <pfx:SimpleProductOffering>\n                                       <pfx:ProductOfferingId>SPO_A1_NETZSERVICE_STANDARD_2013</pfx:ProductOfferingId>\n                                       <pfx:Name>A1 Netzservice Standard</pfx:Name>\n                                       <pfx:SortWeight>4</pfx:SortWeight>\n                                       <pfx:ProductOfferingTypes>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>A1 Festnetz</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktlinie</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_DIENSTLEISTUNG</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>Dienstleistung</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUCTCATEGORY</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktkategorie</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_LEVEL_2</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>Zusatzprodukt</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLEVEL</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktlevel</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                       </pfx:ProductOfferingTypes>\n                                    </pfx:SimpleProductOffering>\n                                 </pfx:Product>\n                              </pfx:BundledProduct>\n                           </pfx:BundledProductList>\n                           <pfx:BundledProductOffering>\n                              <pfx:ProductOfferingId>POG_A1_NETZSERVICES_2013</pfx:ProductOfferingId>\n                              <pfx:Name>A1 Netzservices</pfx:Name>\n                              <pfx:SortWeight>5</pfx:SortWeight>\n                              <pfx:ProductOfferingTypes>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>A1 Festnetz</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktlinie</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                              </pfx:ProductOfferingTypes>\n                           </pfx:BundledProductOffering>\n                        </pfx:Product>\n                     </pfx:BundledProduct>\n                     <pfx:BundledProduct>\n                        <pfx:MinCardinality>1</pfx:MinCardinality>\n                        <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                        <pfx:DefaultCardinality>1</pfx:DefaultCardinality>\n                        <pfx:Product xsi:type=\"pfx:ProductGroup\">\n                           <pfx:Name>A1 Festnetz-Internet</pfx:Name>\n                           <pfx:Brand>A1</pfx:Brand>\n                           <pfx:ValidFor/>\n                           <pfx:BundledProductList>\n                              <pfx:BundledProduct>\n                                 <pfx:MinCardinality>0</pfx:MinCardinality>\n                                 <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                                 <pfx:DefaultCardinality>1</pfx:DefaultCardinality>\n                                 <pfx:Product xsi:type=\"pfx:ProductComponent\">\n                                    <pfx:Name>A1 Internet</pfx:Name>\n                                    <pfx:Brand>A1</pfx:Brand>\n                                    <pfx:Description>A1 Internet (fuer Kombi Produkte)</pfx:Description>\n                                    <pfx:ProductStatus>a</pfx:ProductStatus>\n                                    <pfx:ProductSerialNumber>32771677</pfx:ProductSerialNumber>\n                                    <pfx:ValidFor>\n                                       <StartDateTime>2012-04-02T20:02:27+02:00</StartDateTime>\n                                       <EndDateTime>9999-12-31T00:00:00</EndDateTime>\n                                    </pfx:ValidFor>\n                                    <pfx:ProductCharacteristicValues>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>913185144</pfx:Value>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId/>\n                                             <pfx:Name>A1 Kundennummer</pfx:Name>\n                                             <pfx:ValueType>string</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>false</pfx:Value>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId/>\n                                             <pfx:Name>ISPA Anschluss</pfx:Name>\n                                             <pfx:ValueType>boolean</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>1024</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_BANDBREITE_DOWNLOAD_MIN</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Minimale Downloadgeschwindigkeit</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>768</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_BANDBREITE_UPLOAD_MAX</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Maximale Uploadgeschwindigkeit</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>256</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2012-06-14T00:00:00+02:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_SPECIFIED_MIN_DOWNLOAD_BANDWIDTH</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Specified min Download Bandwidth</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>64</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2012-06-14T00:00:00+02:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_SPECIFIED_MIN_UPLOAD_BANDWIDTH</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Specified min Upload Bandwidth</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>768</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2012-06-14T00:00:00+02:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_UPLOAD_BANDWIDTH</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Erwartete Upload Bandbreite</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>256</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_BANDBREITE_UPLOAD_MIN</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Minimale Uploadgeschwindigkeit</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>768</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2012-06-14T00:00:00+02:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_UP_TO_UPLOAD_BANDWIDTH</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Maximale Upload Bandbreite</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>Quality of Service Residential</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_QUALITY_OF_SERVICE</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Quality of Service</pfx:Name>\n                                             <pfx:Description>Quality of Service Einstellungen der Leitung.</pfx:Description>\n                                             <pfx:ValueType>string</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>8192</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_BANDBREITE_DOWNLOAD_MAX</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Maximale Downloadgeschwindigkeit</pfx:Name>\n                                             <pfx:Description>Geschwindigkeit die im Download maximal erreicht werden kann.</pfx:Description>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>8736</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2012-06-14T00:00:00+02:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_UP_TO_DOWNLOAD_BANDWIDTH</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Maximale Download Bandbreite</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>8736</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2012-06-14T00:00:00+02:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_DOWNLOAD_BANDWIDTH</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Erwartete Download Bandbreite</pfx:Name>\n                                             <pfx:ValueType>kbit</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>2012-03-14</pfx:Value>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_ENDE_DER_BINDUNG</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Ende der Bindung</pfx:Name>\n                                             <pfx:ValueType>dateTime</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value/>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:Name>Download Bandbreite</pfx:Name>\n                                             <pfx:ValueType>string</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value/>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:Name>Upload Bandbreite</pfx:Name>\n                                             <pfx:ValueType>string</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                    </pfx:ProductCharacteristicValues>\n                                    <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                                       <pfx:Type>ACCESS</pfx:Type>\n                                    </pfx:ProductSpecificationType>\n                                    <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                                       <pfx:Type>BROADBAND</pfx:Type>\n                                    </pfx:ProductSpecificationType>\n                                    <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                                       <pfx:Type>FIXEDNET</pfx:Type>\n                                    </pfx:ProductSpecificationType>\n                                    <pfx:SimpleProductOffering>\n                                       <pfx:ProductOfferingId>SPO_BREITBAND_INTERNET_8MBIT</pfx:ProductOfferingId>\n                                       <pfx:Name>A1 Internet</pfx:Name>\n                                       <pfx:SortWeight>95</pfx:SortWeight>\n                                       <pfx:ProductOfferingTypes>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ_INTERNET</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>A1 Festnetz Internet</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktlinie</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_LEVEL_2</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>Zusatzprodukt</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLEVEL</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktlevel</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_OPTION</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>Option</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUCTCATEGORY</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktkategorie</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                       </pfx:ProductOfferingTypes>\n                                    </pfx:SimpleProductOffering>\n                                 </pfx:Product>\n                              </pfx:BundledProduct>\n                           </pfx:BundledProductList>\n                           <pfx:BundledProductOffering>\n                              <pfx:ProductOfferingId>POG_BREITBAND_INTERNET</pfx:ProductOfferingId>\n                              <pfx:Name>A1 Festnetz-Internet</pfx:Name>\n                              <pfx:SortWeight>500</pfx:SortWeight>\n                              <pfx:ProductOfferingTypes>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ_INTERNET</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>A1 Festnetz Internet</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktlinie</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                              </pfx:ProductOfferingTypes>\n                           </pfx:BundledProductOffering>\n                        </pfx:Product>\n                     </pfx:BundledProduct>\n                     <pfx:BundledProduct>\n                        <pfx:MinCardinality>1</pfx:MinCardinality>\n                        <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                        <pfx:DefaultCardinality>1</pfx:DefaultCardinality>\n                        <pfx:Product xsi:type=\"pfx:ProductGroup\">\n                           <pfx:Name>A1 Online Festplatte</pfx:Name>\n                           <pfx:Brand>A1</pfx:Brand>\n                           <pfx:Description>Einfach und sicher: Die Online-Festplatte ist ein einfacher und sicherer Online-Speicherplatz f\u00fcr jede Art von Dateien.</pfx:Description>\n                           <pfx:ValidFor/>\n                           <pfx:BundledProductList>\n                              <pfx:BundledProduct>\n                                 <pfx:MinCardinality>0</pfx:MinCardinality>\n                                 <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                                 <pfx:DefaultCardinality>1</pfx:DefaultCardinality>\n                                 <pfx:Product xsi:type=\"pfx:ProductComponent\">\n                                    <pfx:Name>A1 Online-Festplatte 1GB</pfx:Name>\n                                    <pfx:Brand>A1</pfx:Brand>\n                                    <pfx:ProductStatus>a</pfx:ProductStatus>\n                                    <pfx:ProductSerialNumber>21813097</pfx:ProductSerialNumber>\n                                    <pfx:ValidFor>\n                                       <StartDateTime>2009-08-12T17:18:37+02:00</StartDateTime>\n                                       <EndDateTime>9999-12-31T00:00:00</EndDateTime>\n                                    </pfx:ValidFor>\n                                    <pfx:ProductCharacteristicValues>\n                                       <pfx:ProductCharacteristicValue>\n                                          <pfx:Value>1024</pfx:Value>\n                                          <pfx:ValidFor>\n                                             <StartDateTime>2013-10-31T00:00:00+01:00</StartDateTime>\n                                          </pfx:ValidFor>\n                                          <pfx:ProductSpecCharacteristic>\n                                             <pfx:ProductSpecCharacteristicId>PSC_ONLINE_FESTPLATTE_STANDARD_SIZE</pfx:ProductSpecCharacteristicId>\n                                             <pfx:Name>Speicherkapazit\u00e4t Standard</pfx:Name>\n                                             <pfx:ValueType>mb</pfx:ValueType>\n                                          </pfx:ProductSpecCharacteristic>\n                                       </pfx:ProductCharacteristicValue>\n                                    </pfx:ProductCharacteristicValues>\n                                    <pfx:SimpleProductOffering>\n                                       <pfx:ProductOfferingId>SPO_ONLINE_FESTPLATTE_1GB</pfx:ProductOfferingId>\n                                       <pfx:Name>A1 Online-Festplatte 1GB</pfx:Name>\n                                       <pfx:SortWeight>3</pfx:SortWeight>\n                                       <pfx:ProductOfferingTypes>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ_INTERNET</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>A1 Festnetz Internet</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktlinie</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_LEVEL_2</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>Zusatzprodukt</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLEVEL</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktlevel</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_OPTION</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>Option</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUCTCATEGORY</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktkategorie</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                       </pfx:ProductOfferingTypes>\n                                    </pfx:SimpleProductOffering>\n                                 </pfx:Product>\n                              </pfx:BundledProduct>\n                           </pfx:BundledProductList>\n                           <pfx:BundledProductOffering>\n                              <pfx:ProductOfferingId>POG_ONLINE_FESTPLATTE</pfx:ProductOfferingId>\n                              <pfx:Name>A1 Online Festplatte</pfx:Name>\n                              <pfx:SortWeight>15</pfx:SortWeight>\n                              <pfx:ProductOfferingTypes>\n                                 <pfx:ProductOfferingType>\n                                    <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ_INTERNET</pfx:ProductOfferingTypeId>\n                                    <pfx:Name>A1 Festnetz Internet</pfx:Name>\n                                    <pfx:ProductOfferingTypeGroup>\n                                       <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                       <pfx:Name>Produktlinie</pfx:Name>\n                                    </pfx:ProductOfferingTypeGroup>\n                                 </pfx:ProductOfferingType>\n                              </pfx:ProductOfferingTypes>\n                           </pfx:BundledProductOffering>\n                        </pfx:Product>\n                     </pfx:BundledProduct>\n                     <pfx:BundledProduct>\n                        <pfx:MinCardinality>0</pfx:MinCardinality>\n                        <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                        <pfx:DefaultCardinality>0</pfx:DefaultCardinality>\n                        <pfx:Product xsi:type=\"pfx:ProductGroup\">\n                           <pfx:Name>A1 TV</pfx:Name>\n                           <pfx:Brand>A1</pfx:Brand>\n                           <pfx:ValidFor/>\n                           <pfx:BundledProductList>\n                              <pfx:BundledProduct>\n                                 <pfx:MinCardinality>0</pfx:MinCardinality>\n                                 <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                                 <pfx:DefaultCardinality>0</pfx:DefaultCardinality>\n                                 <pfx:Product xsi:type=\"pfx:ProductBundle\">\n                                    <pfx:Name>A1 TV</pfx:Name>\n                                    <pfx:Brand>A1</pfx:Brand>\n                                    <pfx:Description>A1 Kabel TV</pfx:Description>\n                                    <pfx:ValidFor/>\n                                    <pfx:BundledProductList>\n                                       <pfx:BundledProduct>\n                                          <pfx:MinCardinality>1</pfx:MinCardinality>\n                                          <pfx:MaxCardinality>1</pfx:MaxCardinality>\n                                          <pfx:DefaultCardinality>1</pfx:DefaultCardinality>\n                                          <pfx:Product xsi:type=\"pfx:ProductComponent\">\n                                             <pfx:Name>A1 MediaBox</pfx:Name>\n                                             <pfx:Brand>A1</pfx:Brand>\n                                             <pfx:Description>Set-Top-Box inkl. Infrarot Fernbedienung</pfx:Description>\n                                             <pfx:ProductStatus>a</pfx:ProductStatus>\n                                             <pfx:ProductSerialNumber>26839250</pfx:ProductSerialNumber>\n                                             <pfx:ValidFor>\n                                                <StartDateTime>2010-09-17T15:43:02+02:00</StartDateTime>\n                                                <EndDateTime>9999-12-31T00:00:00</EndDateTime>\n                                             </pfx:ValidFor>\n                                             <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                                                <pfx:Type>ADDON</pfx:Type>\n                                             </pfx:ProductSpecificationType>\n                                             <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                                                <pfx:Type>TV</pfx:Type>\n                                             </pfx:ProductSpecificationType>\n                                             <pfx:SimpleProductOffering>\n                                                <pfx:ProductOfferingId>SPO_TV_MEDIABOX</pfx:ProductOfferingId>\n                                                <pfx:Name>A1 MediaBox</pfx:Name>\n                                                <pfx:SortWeight>3</pfx:SortWeight>\n                                                <pfx:ProductOfferingTypes>\n                                                   <pfx:ProductOfferingType>\n                                                      <pfx:ProductOfferingTypeId>POTYP_A1_TV</pfx:ProductOfferingTypeId>\n                                                      <pfx:Name>A1 TV</pfx:Name>\n                                                      <pfx:ProductOfferingTypeGroup>\n                                                         <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                                         <pfx:Name>Produktlinie</pfx:Name>\n                                                      </pfx:ProductOfferingTypeGroup>\n                                                   </pfx:ProductOfferingType>\n                                                   <pfx:ProductOfferingType>\n                                                      <pfx:ProductOfferingTypeId>POTYP_HARDWARE</pfx:ProductOfferingTypeId>\n                                                      <pfx:Name>Hardware</pfx:Name>\n                                                      <pfx:ProductOfferingTypeGroup>\n                                                         <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUCTCATEGORY</pfx:ProductOfferingTypeGroupId>\n                                                         <pfx:Name>Produktkategorie</pfx:Name>\n                                                      </pfx:ProductOfferingTypeGroup>\n                                                   </pfx:ProductOfferingType>\n                                                   <pfx:ProductOfferingType>\n                                                      <pfx:ProductOfferingTypeId>POTYP_LEVEL_2</pfx:ProductOfferingTypeId>\n                                                      <pfx:Name>Zusatzprodukt</pfx:Name>\n                                                      <pfx:ProductOfferingTypeGroup>\n                                                         <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLEVEL</pfx:ProductOfferingTypeGroupId>\n                                                         <pfx:Name>Produktlevel</pfx:Name>\n                                                      </pfx:ProductOfferingTypeGroup>\n                                                   </pfx:ProductOfferingType>\n                                                </pfx:ProductOfferingTypes>\n                                             </pfx:SimpleProductOffering>\n                                          </pfx:Product>\n                                       </pfx:BundledProduct>\n                                    </pfx:BundledProductList>\n                                    <pfx:BundledProductOffering>\n                                       <pfx:ProductOfferingId>BPO_KABEL_TV</pfx:ProductOfferingId>\n                                       <pfx:Name>A1 TV</pfx:Name>\n                                       <pfx:SortWeight>400</pfx:SortWeight>\n                                       <pfx:ProductOfferingTypes>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_A1_TV</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>A1 TV</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktlinie</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_LEVEL_1</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>Einzelprodukt</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLEVEL</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktlevel</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                          <pfx:ProductOfferingType>\n                                             <pfx:ProductOfferingTypeId>POTYP_OPTION</pfx:ProductOfferingTypeId>\n                                             <pfx:Name>Option</pfx:Name>\n                                             <pfx:ProductOfferingTypeGroup>\n                                                <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUCTCATEGORY</pfx:ProductOfferingTypeGroupId>\n                                                <pfx:Name>Produktkategorie</pfx:Name>\n                                             </pfx:ProductOfferingTypeGroup>\n                                          </pfx:ProductOfferingType>\n                                       </pfx:ProductOfferingTypes>\n                                    </pfx:BundledProductOffering>\n                                 </pfx:Product>\n                              </pfx:BundledProduct>\n                           </pfx:BundledProductList>\n                           <pfx:BundledProductOffering>\n                              <pfx:ProductOfferingId>POG_TV_PRODUCTS</pfx:ProductOfferingId>\n                              <pfx:Name>A1 TV</pfx:Name>\n                              <pfx:SortWeight>400</pfx:SortWeight>\n                           </pfx:BundledProductOffering>\n                        </pfx:Product>\n                     </pfx:BundledProduct>\n                  </pfx:BundledProductList>\n                  <pfx:BundledProductOffering>\n                     <pfx:ProductOfferingId>BPO_KOMBI</pfx:ProductOfferingId>\n                     <pfx:Name>A1 Kombi</pfx:Name>\n                     <pfx:SortWeight>1200</pfx:SortWeight>\n                     <pfx:ProductOfferingTypes>\n                        <pfx:ProductOfferingType>\n                           <pfx:ProductOfferingTypeId>POTYP_A1_FESTNETZ_INTERNET</pfx:ProductOfferingTypeId>\n                           <pfx:Name>A1 Festnetz Internet</pfx:Name>\n                           <pfx:ProductOfferingTypeGroup>\n                              <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLINIE</pfx:ProductOfferingTypeGroupId>\n                              <pfx:Name>Produktlinie</pfx:Name>\n                           </pfx:ProductOfferingTypeGroup>\n                        </pfx:ProductOfferingType>\n                        <pfx:ProductOfferingType>\n                           <pfx:ProductOfferingTypeId>POTYP_KOMBI</pfx:ProductOfferingTypeId>\n                           <pfx:Name>Kombi</pfx:Name>\n                           <pfx:ProductOfferingTypeGroup>\n                              <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUCTCATEGORY</pfx:ProductOfferingTypeGroupId>\n                              <pfx:Name>Produktkategorie</pfx:Name>\n                           </pfx:ProductOfferingTypeGroup>\n                        </pfx:ProductOfferingType>\n                        <pfx:ProductOfferingType>\n                           <pfx:ProductOfferingTypeId>POTYP_LEVEL_0</pfx:ProductOfferingTypeId>\n                           <pfx:Name>Produktbundle</pfx:Name>\n                           <pfx:ProductOfferingTypeGroup>\n                              <pfx:ProductOfferingTypeGroupId>POTYPG_PRODUKTLEVEL</pfx:ProductOfferingTypeGroupId>\n                              <pfx:Name>Produktlevel</pfx:Name>\n                           </pfx:ProductOfferingTypeGroup>\n                        </pfx:ProductOfferingType>\n                     </pfx:ProductOfferingTypes>\n                  </pfx:BundledProductOffering>\n               </pfx:Product>\n            </pfx3:Products>\n            <ns1:CallNumber xmlns:ns1=\"http://cdm.a1telekom.at/common\">\n               <CC>43</CC>\n               <NDC>1</NDC>\n               <SN>6981248</SN>\n            </ns1:CallNumber>\n            <pfx3:LocationId>24787685</pfx3:LocationId>\n            <pfx3:FormattedAddress>\n               <pfx3:AddressLine1>Stipcakgasse 18-22/4/26</pfx3:AddressLine1>\n               <pfx3:AddressLine2>1230 Wien</pfx3:AddressLine2>\n               <pfx3:AddressLine3/>\n            </pfx3:FormattedAddress>\n            <pfx3:Type>Wireline</pfx3:Type>\n         </pfx3:Subscription>\n      </ns0:getProductsForSubscriptionResponse>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetProductsForSubscriptionResponse.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetProductsForSubscriptionResponse.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4173,
    "content": "<ns0:getProductsForSubscriptionResponse xmlns:ns0=\"http://eai.a1telekom.at/CustomerInventory\">\n   <ns0:Subscription>\n      <ns0:Id>899999997212761</ns0:Id>\n      <wsdlPfx:CustomerAccount xsi:type=\"wsdlPfx:BNAccount\" xmlns:wsdlPfx=\"http://eai.a1telekom.at/CustomerInventory\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n         <wsdlPfx:AccountNumber>200007874513</wsdlPfx:AccountNumber>\n      </wsdlPfx:CustomerAccount>\n      <wsdlPfx:Products xmlns:wsdlPfx=\"http://eai.a1telekom.at/CustomerInventory\">\n         <pfx:Product xsi:type=\"pfx:ProductBundle\" xmlns:pfx=\"http://eai.a1telekom.at/CustomerInventory\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n            <pfx:Name>alte POTS Produkte</pfx:Name>\n            <pfx:Brand>A1</pfx:Brand>\n            <pfx:BundledProducts xsi:type=\"pfx:VoiceProduct\">\n               <pfx:Name>Sprachtelefonie POTS</pfx:Name>\n               <pfx:Brand>A1</pfx:Brand>\n               <pfx:ValidFor>\n                  <StartDateTime>2011-04-29T00:00:00+02:00</StartDateTime>\n                  <EndDateTime>9999-12-31T00:00:00+01:00</EndDateTime>\n               </pfx:ValidFor>\n               <pfx:ProductCharacteristicValues>\n                  <pfx:ProductCharacteristicValue>\n                     <pfx:Value>AB</pfx:Value>\n                     <pfx:ProductSpecCharacteristic>\n                        <pfx:Name>Tarif</pfx:Name>\n                        <pfx:ValueType>string</pfx:ValueType>\n                     </pfx:ProductSpecCharacteristic>\n                  </pfx:ProductCharacteristicValue>\n                  <pfx:ProductCharacteristicValue>\n                     <pfx:Value>2012-03-31</pfx:Value>\n                     <pfx:ProductSpecCharacteristic>\n                        <pfx:Name>Ende der Bindung</pfx:Name>\n                        <pfx:ValueType>dateTime</pfx:ValueType>\n                     </pfx:ProductSpecCharacteristic>\n                  </pfx:ProductCharacteristicValue>\n                  <pfx:ProductCharacteristicValue>\n                     <pfx:Value>Standard</pfx:Value>\n                     <pfx:ProductSpecCharacteristic>\n                        <pfx:Name>Netzservice</pfx:Name>\n                        <pfx:ValueType>string</pfx:ValueType>\n                     </pfx:ProductSpecCharacteristic>\n                  </pfx:ProductCharacteristicValue>\n               </pfx:ProductCharacteristicValues>\n               <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                  <pfx:Type>VOICE</pfx:Type>\n               </pfx:ProductSpecificationType>\n               <pfx:ProductSpecificationType xsi:type=\"pfx:ProductCategory\">\n                  <pfx:Type>FIXEDNET</pfx:Type>\n               </pfx:ProductSpecificationType>\n               <pfx:SimpleProductOfferingId>SPO_SPRACHE_POTS</pfx:SimpleProductOfferingId>\n               <pfx:Type>Fixed</pfx:Type>\n               <ns1:CallNumber xmlns:ns1=\"http://cdm.a1telekom.at/common\">\n                  <CC>43</CC>\n                  <NDC>7229</NDC>\n                  <SN>63651</SN>\n               </ns1:CallNumber>\n               <pfx:UnlistedNumber>true</pfx:UnlistedNumber>\n            </pfx:BundledProducts>\n            <pfx:BundledProductOfferingId>BPO_POTS_LEGACY</pfx:BundledProductOfferingId>\n         </pfx:Product>\n      </wsdlPfx:Products>\n      <ns1:CallNumber xmlns:wsdlPfx=\"http://eai.a1telekom.at/CustomerInventory\" xmlns:ns1=\"http://cdm.a1telekom.at/common\">\n         <CC>43</CC>\n         <NDC>7229</NDC>\n         <SN>63651</SN>\n      </ns1:CallNumber>\n      <ns0:LocationId>4598890</ns0:LocationId>\n       \n          <wsdlPfx:Address xmlns:wsdlPfx=\"http://eai.a1telekom.at/CustomerInventory\">\n                  <wsdlPfx:Postcode>6060</wsdlPfx:Postcode>\n                  <wsdlPfx:City>Hall in Tirol</wsdlPfx:City>\n                 <wsdlPfx:FormattedAddress>\n            <wsdlPfx:AddressLine1>Gewerbepark-Wagram 7</wsdlPfx:AddressLine1>\n            <wsdlPfx:AddressLine2>4061 Pasching</wsdlPfx:AddressLine2>\n            <wsdlPfx:AddressLine3/>\n         </wsdlPfx:FormattedAddress>\n               </wsdlPfx:Address>\n    \n      <ns0:Type>Wireline</ns0:Type>\n   </ns0:Subscription>\n</ns0:getProductsForSubscriptionResponse>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetSubscriptionsForPartyResponse.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetSubscriptionsForPartyResponse.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2353,
    "content": " <ns0:getSubscriptionsForPartyResponse xmlns:ns0=\"http://eai.a1telekom.at/CustomerInventory\">\n   <ns0:Subscriptions>\n      <pfx:Subscription xmlns:pfx=\"http://eai.a1telekom.at/CustomerInventory\">\n         <pfx:Id>899999997212761</pfx:Id>\n         <pfx:CustomerAccount xsi:type=\"pfx:BNAccount\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n            <pfx:AccountNumber>200007874513</pfx:AccountNumber>\n         </pfx:CustomerAccount>\n         <ns1:CallNumber xmlns:ns1=\"http://cdm.a1telekom.at/common\">\n            <CC>43</CC>\n            <NDC>7229</NDC>\n            <SN>63651</SN>\n         </ns1:CallNumber>\n         <pfx:LocationId>4598890</pfx:LocationId>\n          <pfx:Address xmlns:pfx=\"http://eai.a1telekom.at/CustomerInventory\">\n                  <pfx:Postcode>6060</pfx:Postcode>\n                  <pfx:City>Hall in Tirol</pfx:City>\n                 <pfx:FormattedAddress>\n            <pfx:AddressLine1>Gewerbepark-Wagram 7</pfx:AddressLine1>\n            <pfx:AddressLine2>4061 Pasching</pfx:AddressLine2>\n            <pfx:AddressLine3/>\n         </pfx:FormattedAddress>\n               </pfx:Address>\n         \n        \n         <pfx:Type>Wireline</pfx:Type>\n      </pfx:Subscription>\n      <pfx:Subscription xmlns:pfx=\"http://eai.a1telekom.at/CustomerInventory\">\n         <pfx:Id>899999997712675</pfx:Id>\n         <pfx:CustomerAccount xsi:type=\"pfx:BNAccount\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n            <pfx:AccountNumber>200007874513</pfx:AccountNumber>\n         </pfx:CustomerAccount>\n         <ns1:CallNumber xmlns:ns1=\"http://cdm.a1telekom.at/common\">\n            <CC>43</CC>\n            <NDC>9499</NDC>\n            <SN>36008</SN>\n         </ns1:CallNumber>\n         <pfx:LocationId>4598890</pfx:LocationId>\n                 <pfx:Address xmlns:pfx=\"http://eai.a1telekom.at/CustomerInventory\">\n                  <pfx:Postcode>6060</pfx:Postcode>\n                  <pfx:City>Hall in Tirol</pfx:City>\n                 <pfx:FormattedAddress>\n            <pfx:AddressLine1>Gewerbepark-Wagram 7</pfx:AddressLine1>\n            <pfx:AddressLine2>4061 Pasching</pfx:AddressLine2>\n            <pfx:AddressLine3/>\n         </pfx:FormattedAddress>\n               </pfx:Address>\n         \n         <pfx:Type>Wireline</pfx:Type>\n      </pfx:Subscription>\n   </ns0:Subscriptions>\n</ns0:getSubscriptionsForPartyResponse>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetTariffOfferSimulationNoSimulationData.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetTariffOfferSimulationNoSimulationData.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 722,
    "content": "<GetTariffOfferSimulationResponse xmlns=\"http://bit.mobilkom.at/TariffGuide/\">\n   <GetTariffOfferSimulationResult>\n      <CurrentTariff>\n         <Code>A1S12_7</Code>\n         <Name>A1 Xcite</Name>\n      </CurrentTariff>\n      <CurrentServices/>\n      <AdditionalInformation>\n         <Code>M</Code>\n         <Text>noch keine 3 Monate aktiv;Die Rufnummer war w\u00e4hrend des Simulationszeitraums nicht durchgehend aktiv.</Text>\n      </AdditionalInformation>\n      <CurrentBaseFee>\n      \t<Gross>2000</Gross>\n\t\t<Net>2000</Net> \n      </CurrentBaseFee>\n      <CurrentAvgInvoiceAmount>\n\t\t<Gross>4527</Gross>\n\t\t<Net>4400</Net>\n\t</CurrentAvgInvoiceAmount>\n   </GetTariffOfferSimulationResult>\n</GetTariffOfferSimulationResponse>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetTariffOfferSimulationResponse.MSISDN_no_BAN.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetTariffOfferSimulationResponse.MSISDN_no_BAN.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 437,
    "content": "<GetTariffOfferSimulationResponse xmlns=\"http://bit.mobilkom.at/TariffGuide/\">\n  <GetTariffOfferSimulationResult>\n    <CurrentTariff />\n    <AdditionalInformation />\n    <SimulatedTariffs />\n    <CurrentBaseFee>\n\t\t<Gross>0</Gross>\n\t\t<Net>0</Net> \n\t</CurrentBaseFee>\n    <CurrentAvgInvoiceAmount>\n    \t<Gross>0</Gross>\n    \t<Net>0</Net>\t\t\n\t</CurrentAvgInvoiceAmount>\n  </GetTariffOfferSimulationResult>\n</GetTariffOfferSimulationResponse>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetSimulationRelevantChartDataListResponseDocument.MSISDN_and_BAN.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/dao/esb/GetSimulationRelevantChartDataListResponseDocument.MSISDN_and_BAN.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1684,
    "content": "<GetSimulationRelevantChartDataListResponse xmlns=\"http://bit.mobilkom.at/TariffGuide/\">\n   <GetSimulationRelevantChartDataListResult>\n      <DataPairItem>\n         <SegmentDescription>Min. inkl. EU</SegmentDescription>\n         <SegmentValue>144.77776666666666</SegmentValue>\n      </DataPairItem>\n      <DataPairItem>\n         <SegmentDescription>A1 o. Banintern</SegmentDescription>\n         <SegmentValue>75.88890000000000</SegmentValue>\n      </DataPairItem>\n      <DataPairItem>\n         <SegmentDescription>Festnetz</SegmentDescription>\n         <SegmentValue>35.22223333333333</SegmentValue>\n      </DataPairItem>\n      <DataPairItem>\n         <SegmentDescription>SMS Inland</SegmentDescription>\n         <SegmentValue>30.88890000000000</SegmentValue>\n      </DataPairItem>\n      <DataPairItem>\n         <SegmentDescription>to other mobiles</SegmentDescription>\n         <SegmentValue>24.33330000000000</SegmentValue>\n      </DataPairItem>\n      <DataPairItem>\n         <SegmentDescription>Banintern</SegmentDescription>\n         <SegmentValue>5.22223333333333</SegmentValue>\n      </DataPairItem>\n      <DataPairItem>\n         <SegmentDescription>mobilbox</SegmentDescription>\n         <SegmentValue>4.00000000000000</SegmentValue>\n      </DataPairItem>\n      <DataPairItem>\n         <SegmentDescription>Ausland EU</SegmentDescription>\n         <SegmentValue>0.11110000000000</SegmentValue>\n      </DataPairItem>\n      <DataPairItem>\n         <SegmentDescription>SMS Ausland</SegmentDescription>\n         <SegmentValue>0.00000000000000</SegmentValue>\n      </DataPairItem>\n   </GetSimulationRelevantChartDataListResult>\n</GetSimulationRelevantChartDataListResponse>\n         ",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/service/impl/Kums_KundeBearbeiten_response_ok.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/service/impl/Kums_KundeBearbeiten_response_ok.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 395,
    "content": "<xml-fragment xmlns:ns0=\"WSKUMS_S_WSToKUMSKundeBearbeiten_WSKUMS_S_WSToKUMSKundeBearbeiten\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <WS_KUMS_KUNDE_BEARBEITEN>\n    <WS_KUMS_KUNDE_BEARBEITEN_Output>\n      <Kundennummer>103678446</Kundennummer>\n      <Meldung>Kundendaten ge\u00e4ndert</Meldung>\n    </WS_KUMS_KUNDE_BEARBEITEN_Output>\n  </WS_KUMS_KUNDE_BEARBEITEN>\n</xml-fragment>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/resources/at/a1ta/cuco/core/service/impl/Kums_KundeBearbeiten_response_nok.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/resources/at/a1ta/cuco/core/service/impl/Kums_KundeBearbeiten_response_nok.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 456,
    "content": "<xml-fragment xmlns:ns0=\"WSKUMS_S_WSToKUMSKundeBearbeiten_WSKUMS_S_WSToKUMSKundeBearbeiten\" xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <WS_KUMS_KUNDE_BEARBEITEN>\n    <WS_KUMS_KUNDE_BEARBEITEN_ReturnCode>\n      <RC>8</RC>\n      <FEHLERNR>KFU03002</FEHLERNR>\n      <FEHLERTEXT>KFU03002 Kundennummer 789789908 nicht vorhanden</FEHLERTEXT>\n    </WS_KUMS_KUNDE_BEARBEITEN_ReturnCode>\n    <Fault/>\n  </WS_KUMS_KUNDE_BEARBEITEN>\n</xml-fragment>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/EsbBrianDaoBeanConverterTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/EsbBrianDaoBeanConverterTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3280,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.text.SimpleDateFormat;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.dao.esb.BrianDaoImpl.PayableTicket2AddCreditRequestConverter;\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.mobilkom.brian.wsdl.BrianSisAddCreditRequest;\n\npublic class EsbBrianDaoBeanConverterTest {\n\n  private PayableTicket2AddCreditRequestConverter converter;\n\n  @Before\n  public void setUp() {\n    converter = PayableTicket2AddCreditRequestConverter.INSTANCE;\n  }\n\n  @Test\n  public void testConverterReturnsEmptyAddCreditRequestWhenCalledWithNull() {\n    Assert.assertNotNull(converter.convert(null));\n  }\n\n  @Test\n  public void testConverterConvertsPayableTicketCorrectly() {\n    BiteUser user = new BiteUser();\n    user.setUsername(\"q907291\");\n    PayableTicket ticket = PayableTicket.builder().forPhoneNumber(createPhoneNumber(\"123456789\")).disposeExpenses(100D).withProductCode(\"#s2gx\").createdBy(user).build();\n    ticket.setId(987654321L);\n\n    BrianSisAddCreditRequest request = converter.convert(ticket);\n    Assert.assertEquals(\"BCRD\", request.getAdcrdCmd().getActivityCode());\n    Assert.assertEquals(100D, request.getAdcrdCmd().getAmount(), 0.0F);\n    Assert.assertEquals(\"123456789\", request.getAdcrdCmd().getBan());\n    Assert.assertEquals(\"#s2gx\", request.getAdcrdCmd().getChargeCode());\n    Assert.assertEquals(new SimpleDateFormat(\"yyyy/MM/dd\").format(ticket.getCreateDate()), request.getAdcrdCmd().getEffectDate());\n    Assert.assertEquals(\"PAST: 987654321 (q907291)\", request.getAdcrdCmd().getMemo());\n    Assert.assertEquals(\"+437322222\", request.getAdcrdCmd().getMsisdn());\n    Assert.assertTrue(request.getAdcrdCmd().getNextBill());\n    Assert.assertEquals(\"q907291\", request.getAdcrdCmd().getUid());\n\n    Assert.assertNull(request.getAdcrdCmd().getBen());\n    Assert.assertNull(request.getAdcrdCmd().getBillAddComments());\n    Assert.assertNull(request.getAdcrdCmd().getBillComment());\n    Assert.assertNull(request.getAdcrdCmd().getSoc());\n  }\n\n  @Test\n  public void testNumberConversionPositiveNoScale() {\n    Assert.assertEquals(100D, converter.formatDouble(100D), 0.0F);\n    Assert.assertEquals(-100D, converter.formatDouble(-100D), 0.0F);\n  }\n\n  @Test\n  public void testNumberConversionNegativeNoScale() {\n    Assert.assertEquals(-100D, converter.formatDouble(-100D), 0.0F);\n  }\n\n  @Test\n  public void testNumberConversionWithScale2MustRemainUntouched() {\n    Assert.assertEquals(100.56D, converter.formatDouble(100.56D), 0.0F);\n  }\n\n  @Test\n  public void testNumberConversionWithScale3MustBeRoundedUpAndScaledTo2Digits() {\n    Assert.assertEquals(100.57D, converter.formatDouble(100.56912544D), 0.0F);\n  }\n\n  @Test\n  public void testNumberConversionWithScale3MustBeRoundedDownAndScaledTo2Digits() {\n    Assert.assertEquals(100.56D, converter.formatDouble(100.56412544D), 0.0F);\n  }\n\n  private PhoneNumber createPhoneNumber(String ban) {\n    PhoneNumber number = new PhoneNumber();\n    number.setBanId(ban);\n    number.setCountryIdentificationNumber(\"+43\");\n    number.setCityIdentificationNumber(\"732\");\n    number.setSubscriberNumber(\"2222\");\n    return number;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/ITestESBLocationService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/ITestESBLocationService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1977,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Ignore;\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.rules.ExpectedException;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.data.clarify.dao.ClarifyInteractionAndWorkflowDao;\nimport at.a1ta.cuco.core.service.impl.LocationServiceImpl;\nimport at.a1telekom.eai.lkmslocation.AddressDetail;\nimport at.a1telekom.eai.lkmslocation.Coordinates;\n\n@RunWith(MockitoJUnitRunner.class)\n@Ignore(\"This are integration Tests and not Unittests\")\npublic class ITestESBLocationService extends AbstractParametrizedESBDaoTest {\n\n  @Mock\n  private ClarifyInteractionAndWorkflowDao clarifyInteractionAndWorkflowDaoMock;\n\n  private LocationServiceImpl locationService;\n  @Rule\n  public ExpectedException expectedEx = ExpectedException.none();\n\n  @Before\n  public void setUp() {\n    use(ESB_A1TA_INT_PARAMETERS);\n\n    locationService = new LocationServiceImpl();\n    locationService.setClarifyInteractionAndWorkflowDao(clarifyInteractionAndWorkflowDaoMock);\n  }\n\n  @Test\n  public void testGetLkmsLocation() {\n    AddressDetail addressDetailForLocation = locationService.getAddressDetailForLocation(\"10089398\");\n    Coordinates coordinates = addressDetailForLocation.getCoordinates();\n    Assert.assertEquals(\"48.184490\", coordinates.getXWorld());\n    Assert.assertEquals(\"15.257159\", coordinates.getYWorld());\n  }\n\n  @Test\n  public void testGetInvalidLkmsLocation() {\n    expectedEx.expect(RuntimeException.class);\n    expectedEx.expectMessage(\"Zu der angegeben Lokations-ID wurde kein LKMS-Objekt (Adresse, Grundst\u00fcck) gefunden.\");\n    locationService.getAddressDetailForLocation(\"INVALID\");\n  }\n\n  @Test\n  public void testLkmsLocationIdIsNull() {\n    AddressDetail addressDetailForLocation = locationService.getAddressDetailForLocation(null);\n    Assert.assertNull(addressDetailForLocation);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/AbstractParametrizedESBDaoTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/AbstractParametrizedESBDaoTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2241,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport org.junit.runner.RunWith;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.dao.EsbAccessParameterDao;\nimport at.a1ta.bite.core.server.dto.EsbAccessParameter;\nimport at.a1ta.bite.core.server.esb.EsbStubFactory;\nimport at.a1ta.bite.core.server.esb.StubCache;\n\n@RunWith(MockitoJUnitRunner.class)\npublic abstract class AbstractParametrizedESBDaoTest {\n\n  public static final EsbAccessParameter ESB_A1TA_DEV_PARAMETERS = new EsbAccessParameter(\"DEV_A1TA\", \"ems1e.a1telekom.inside:17322\", \"ems1e.a1telekom.inside:17322\", \"ta-cuco\", \"ta\", 60000l, \"a1ta-dev\", \"http://esb-e-ar1:8080/si:a1ta-dev\");\n\n  public static final EsbAccessParameter ESB_MK_DEV_PARAMETERS = new EsbAccessParameter(\"DEV_MK\", \"ems1e.a1telekom.inside:17322\", \"ems1e.a1telekom.inside:17322\", \"ta-cuco\", \"ta\", 60000l, \"mk\", \"http://esb-e-ar1:8080/si:mk\");\n\n  public static final EsbAccessParameter ESB_A1TA_INT_PARAMETERS = new EsbAccessParameter(\"INT_A1TA\", \"ems1i.telekom.inside:17322\", \"ems2i.telekom.inside:17322\", \"ta-cuco\", \"cuco2010\", 60000l, \"a1ta-int\", \"http://esb-i.telekom.inside:8080/esb/si:a1ta-int\");\n\n  public static final EsbAccessParameter ESB_A1TA_PROD_PARAMETERS = new EsbAccessParameter(\"PROD_A1TA\", \"ems1p.telekom.inside:17322\", \"ems2p.telekom.inside:17322\", \"ta-cuco\", \"cuco2412\", 60000l, \"a1ta-prod\", \"http://esb-p.telekom.inside:8080/esb/si:a1ta-prod\");\n\n  public static final EsbAccessParameter ESB_TA_PROD_PARAMETERS = new EsbAccessParameter(\"PROD\", \"ems1p.telekom.inside:17322\", \"ems2p.telekom.inside:17322\", \"ta-cuco\", \"cuco2412\", 60000l, \"ta-prod\", \"http://esb-p.telekom.inside:8080/esb/si:ta-prod\");\n\n  protected EsbStubFactory esbStubFactory;\n\n  @Mock\n  protected EsbAccessParameterDao parameterDaoMock;\n\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void before() {\n    esbStubFactory = new EsbStubFactory();\n    esbStubFactory.setEsbAccessParameterDao(parameterDaoMock);\n    esbStubFactory.setStubCache(new StubCache());\n  }\n\n  protected void use(EsbAccessParameter esbparam) {\n    Mockito.when(parameterDaoMock.get(Matchers.anyString())).thenReturn(esbparam);\n    before();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/CustomerInventoryTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/CustomerInventoryTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7121,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotNull;\nimport static org.junit.Assert.assertTrue;\nimport static org.mockito.Matchers.any;\nimport static org.mockito.Mockito.when;\n\nimport java.io.IOException;\n\nimport org.apache.commons.io.FileUtils;\nimport org.apache.xmlbeans.XmlException;\nimport org.junit.Before;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.Spy;\nimport org.mockito.runners.MockitoJUnitRunner;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\n\nimport at.a1ta.cuco.core.service.customerequipment.ProductBrowserServiceImpl;\nimport at.a1telekom.eai.customerinventory.GetProductsForSubscriptionRequestDocument;\nimport at.a1telekom.eai.customerinventory.GetProductsForSubscriptionResponseDocument;\nimport at.a1telekom.eai.customerinventory.GetProductsResponseType;\nimport at.a1telekom.eai.customerinventory.GetSubscriptionsForPartyRequestDocument;\nimport at.a1telekom.eai.customerinventory.GetSubscriptionsForPartyResponseDocument;\nimport at.a1telekom.eai.customerinventory.GetSubscriptionsForPartyResponseType;\nimport at.a1telekom.eai.customerinventory.Product;\nimport at.a1telekom.eai.customerinventory.ProductBundle;\nimport at.a1telekom.eai.customerinventory.Subscription;\nimport at.a1telekom.eai.customerinventory.impl.GetProductsForSubscriptionRequestDocumentImpl;\nimport at.a1telekom.eai.customerinventory.impl.GetSubscriptionsForPartyRequestDocumentImpl;\nimport at.mobilkom.eai.esb.EsbParam;\n\nimport com.telekomaustriagroup.esb.customerinventory.CustomerInventoryStub;\nimport com.telekomaustriagroup.esb.customerinventory.Error;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class CustomerInventoryTest {\n\n  private static final String FILE_RESOURCE_RESPONSE_SUBSCRIPTIONS_FOR_PARTY = \"GetSubscriptionsForPartyResponse.xml\";\n  private static final String FILE_RESOURCE_RESPONSE_PRODUCTS_FOR_SUBSCRIPTION = \"GetProductsForSubscriptionResponse.xml\";\n  private static final String FILE_RESOURCE_RESPONSE_PRODUCTS_FOR_SUBSCRIPTION_PRODUCT_CATALOG_DETAILS = \"GetProductsForSubscriptionResponse_ProductCatalogDetails.xml\";\n\n  @Mock\n  private CustomerInventoryStub customerInventoryStub;\n\n  @Spy\n  private ProductBrowserServiceImpl productBrowserServiceImpl;\n\n  @Before\n  public void setUp() {}\n\n  @Test\n  public void testGetSubscriptionsForParty() throws XmlException, IOException, Error {\n\n    when(customerInventoryStub.getSubscriptionsForParty(any(GetSubscriptionsForPartyRequestDocument.class), any(EsbParam.class))).thenReturn(fromFileSource(FILE_RESOURCE_RESPONSE_SUBSCRIPTIONS_FOR_PARTY));\n\n    GetSubscriptionsForPartyResponseDocument responseDoc = customerInventoryStub.getSubscriptionsForParty(new GetSubscriptionsForPartyRequestDocumentImpl(null), null);\n    assertNotNull(responseDoc);\n    GetSubscriptionsForPartyResponseType resp = responseDoc.getGetSubscriptionsForPartyResponse();\n    assertNotNull(resp);\n    resp.getSubscriptions();\n    assertEquals(2, resp.getSubscriptions().getSubscriptionArray().length);\n    Subscription subscription = resp.getSubscriptions().getSubscriptionArray(0);\n    assertEquals(\"899999997212761\", subscription.getId());\n    assertEquals(\"200007874513\", subscription.getCustomerAccount().getAccountNumber());\n    assertEquals(\"43\", subscription.getCallNumber().getCC());\n    assertEquals(\"7229\", subscription.getCallNumber().getNDC());\n    assertEquals(\"63651\", subscription.getCallNumber().getSN());\n    assertEquals(\"Gewerbepark-Wagram 7\", subscription.getAddress().getFormattedAddress().getAddressLine1());\n    assertEquals(\"4061 Pasching\", subscription.getAddress().getFormattedAddress().getAddressLine2());\n    assertEquals(\"Wireline\", subscription.getType());\n  }\n\n  @Test\n  public void testGetProductsForSubscription() throws XmlException, IOException, Error {\n\n    when(customerInventoryStub.getProductsForSubscription(any(GetProductsForSubscriptionRequestDocument.class), any(EsbParam.class))).thenReturn(fromFileSource2(FILE_RESOURCE_RESPONSE_PRODUCTS_FOR_SUBSCRIPTION));\n\n    GetProductsForSubscriptionResponseDocument responseDoc = customerInventoryStub.getProductsForSubscription(new GetProductsForSubscriptionRequestDocumentImpl(null), null);\n    assertNotNull(responseDoc);\n    GetProductsResponseType resp = responseDoc.getGetProductsForSubscriptionResponse();\n    assertNotNull(resp);\n    Subscription subscription = resp.getSubscription();\n    assertEquals(\"899999997212761\", subscription.getId());\n    assertEquals(\"200007874513\", subscription.getCustomerAccount().getAccountNumber());\n    assertEquals(1, resp.getSubscription().getProducts().sizeOfProductArray());\n    ProductBundle bundle = (ProductBundle) resp.getSubscription().getProducts().getProductArray(0);\n    assertNotNull(bundle);\n    assertEquals(\"alte POTS Produkte\", bundle.getName());\n    assertEquals(\"A1\", bundle.getBrand());\n    assertEquals(\"43\", subscription.getCallNumber().getCC());\n    assertEquals(\"7229\", subscription.getCallNumber().getNDC());\n    assertEquals(\"63651\", subscription.getCallNumber().getSN());\n    assertEquals(\"Gewerbepark-Wagram 7\", subscription.getAddress().getFormattedAddress().getAddressLine1());\n    assertEquals(\"4061 Pasching\", subscription.getAddress().getFormattedAddress().getAddressLine2());\n    assertEquals(\"Wireline\", subscription.getType());\n  }\n\n  @Test\n  @Ignore\n  // reactivate when getProductsForSubscriptions delivers ProductCatalogDetails\n  public void testGetProductsForSubscriptionProductCatalogDetails() throws XmlException, IOException, Error {\n\n    when(customerInventoryStub.getProductsForSubscription(any(GetProductsForSubscriptionRequestDocument.class), any(EsbParam.class))).thenReturn(fromFileSource2(FILE_RESOURCE_RESPONSE_PRODUCTS_FOR_SUBSCRIPTION_PRODUCT_CATALOG_DETAILS));\n\n    GetProductsForSubscriptionResponseDocument responseDoc = customerInventoryStub.getProductsForSubscription(new GetProductsForSubscriptionRequestDocumentImpl(null), null);\n    assertNotNull(responseDoc);\n    GetProductsResponseType resp = responseDoc.getGetProductsForSubscriptionResponse();\n    assertNotNull(resp);\n\n    for (Product product : resp.getSubscription().getProducts().getProductArray()) {\n      if (product instanceof ProductBundle) {\n        ProductBundle productBundle = (ProductBundle) product;\n        assertTrue(productBrowserServiceImpl.isTv(productBundle));\n      }\n    }\n  }\n\n  private GetSubscriptionsForPartyResponseDocument fromFileSource(String file) throws IOException, XmlException {\n    return GetSubscriptionsForPartyResponseDocument.Factory.parse(FileUtils.readFileToString(getClasspathResource(file).getFile()));\n  }\n\n  private GetProductsForSubscriptionResponseDocument fromFileSource2(String file) throws IOException, XmlException {\n    return GetProductsForSubscriptionResponseDocument.Factory.parse(FileUtils.readFileToString(getClasspathResource(file).getFile()));\n  }\n\n  private Resource getClasspathResource(String file) {\n    return new ClassPathResource(\"at/a1ta/cuco/core/dao/esb/\" + file);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/EsbBrianDaoTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/EsbBrianDaoTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3000,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport static org.mockito.Matchers.*;\nimport static org.mockito.Mockito.*;\n\nimport java.rmi.RemoteException;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.mobilkom.brian.wsdl.BrianSisAddCreditRequestDocument;\nimport at.mobilkom.eai.esb.EsbParam;\n\nimport com.telekomaustriagroup.esb.briana1.BrianA1Stub;\nimport com.telekomaustriagroup.esb.briana1.BwsErrMsg;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class EsbBrianDaoTest {\n\n  @Mock\n  private BrianA1Stub brainA1Stub;\n\n  private BrianDaoImpl brianDao = new BrianDaoImpl();\n  private BiteUser user;\n\n  @Before\n  public void setUp() {\n    user = new BiteUser();\n    user.setUsername(\"darkknight\");\n    user.setFirstName(\"Bat\");\n    user.setLastName(\"Man\");\n    brianDao.setStub(brainA1Stub);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testAddCreditThrowsIllegalArgumentExceptionWhenCalledWithNull() {\n    brianDao.addCreditRecord(null);\n  }\n\n  @Test\n  public void testAddCreditSendsCreditRequestCorrectly() throws RemoteException, BwsErrMsg {\n    PayableTicket ticket = PayableTicket.builder().forPhoneNumber(createPhoneNumber()).disposeExpenses(100D).createdBy(user).withProductCode(\"#s2gx\").build();\n\n    brianDao.addCreditRecord(ticket);\n\n    verify(brainA1Stub, timeout(1)).brianSisAddCredit(any(BrianSisAddCreditRequestDocument.class), isNull(EsbParam.class));\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Test(expected = EsbException.class)\n  public void testAddCreditThrowsEsbExceptionOnRemoteFault() throws RemoteException, BwsErrMsg {\n    PayableTicket ticket = PayableTicket.builder().forPhoneNumber(createPhoneNumber()).disposeExpenses(100D).createdBy(user).withProductCode(\"#s2gx\").build();\n\n    when(brainA1Stub.brianSisAddCredit(any(BrianSisAddCreditRequestDocument.class), isNull(EsbParam.class))).thenThrow(RemoteException.class);\n    brianDao.addCreditRecord(ticket);\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Test(expected = EsbException.class)\n  public void testAddCreditThorwsEsbEceptionBwsError() throws RemoteException, BwsErrMsg {\n    PayableTicket ticket = PayableTicket.builder().forPhoneNumber(createPhoneNumber()).disposeExpenses(100D).createdBy(user).withProductCode(\"#s2gx\").build();\n\n    when(brainA1Stub.brianSisAddCredit(any(BrianSisAddCreditRequestDocument.class), isNull(EsbParam.class))).thenThrow(BwsErrMsg.class);\n    brianDao.addCreditRecord(ticket);\n  }\n\n  private PhoneNumber createPhoneNumber() {\n    PhoneNumber number = new PhoneNumber();\n    number.setBanId(\"123456789\");\n    number.setCountryIdentificationNumber(\"+43\");\n    number.setCityIdentificationNumber(\"732\");\n    number.setSubscriberNumber(\"2222\");\n    return number;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/ITestDefaultPartnerCenterLandingPageDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/ITestDefaultPartnerCenterLandingPageDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1620,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.cuco.core.shared.dto.AccessToken;\nimport at.a1ta.cuco.core.shared.dto.PartnerCenterAccessTokenRequest;\n\n@RunWith(MockitoJUnitRunner.class)\n@Ignore(\"This are integration Tests and not Unittests\")\npublic class ITestDefaultPartnerCenterLandingPageDao extends AbstractParametrizedESBDaoTest {\n\n  private PartnerCenterLandingPageDaoImpl dao;\n\n  @Before\n  public void setUp() {\n    use(ESB_A1TA_INT_PARAMETERS);\n\n    dao = new PartnerCenterLandingPageDaoImpl();\n  }\n\n  @Test\n  public void test() {\n    PartnerCenterAccessTokenRequest request = createPartnerCenterAccessTokenRequest(\"43 664 88603737\", \"CuCo\", \"Next\");\n    AccessToken result = dao.getAccessToken(request);\n    Assert.assertNotNull(result);\n    Assert.assertNotNull(result.getToken());\n    Assert.assertEquals(request.getTargetSystem(), result.getTargetSystem());\n  }\n\n  private PartnerCenterAccessTokenRequest createPartnerCenterAccessTokenRequest(String phone, String sourceSystem, String processId) {\n    PartnerCenterAccessTokenRequest request = new PartnerCenterAccessTokenRequest();\n\n    request.setTargetSystem(\"Black\");\n    request.setSourceSystem(sourceSystem);\n\n    String[] msisdnParts = phone.split(\" \");\n    request.setCountryCode(msisdnParts[0]);\n    request.setNationalDestinationCode(msisdnParts[1]);\n    request.setSubscriberNumber(msisdnParts[0]);\n    request.setProcessId(processId);\n\n    return request;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/ITestESBPartyService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/ITestESBPartyService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1973,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport org.junit.Assert;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport at.a1ta.cuco.core.service.impl.EsbPartyServiceImpl;\nimport at.a1ta.cuco.core.shared.dto.EsbParty;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress;\n\n@Ignore(\"Integration Test\")\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = {\"classpath:testApplicationContext-cuco-core.xml\"})\npublic class ITestESBPartyService extends AbstractParametrizedESBDaoTest {\n\n  @Autowired\n  private EsbPartyServiceImpl esbPartyService;\n\n  // @Before\n  // public void setUp() {\n  //\n  // EsbPartyDaoImpl esbPartyDao = new EsbPartyDaoImpl();\n  // esbPartyDao.setEsbStubFactory(esbStubFactory);\n  //\n  // esbPartyService = new EsbPartyServiceImpl();\n  // esbPartyService.setEsbPartyDao(esbPartyDao);\n  // }\n\n  @Test\n  public void testGetEsbParty() {\n    EsbParty party = esbPartyService.getESBParty(103303208l);\n    Assert.assertNotNull(party);\n    StandardAddress address = party.getAddress();\n    Assert.assertNotNull(address);\n    Assert.assertEquals(\"3142205\", address.getLkmsId());\n    Assert.assertEquals(\"G\u00f6tschka\", address.getStreet());\n    Assert.assertEquals(\"37\", address.getHouseNumber());\n    Assert.assertEquals(null, address.getBlock());\n    Assert.assertEquals(null, address.getStaircase());\n    Assert.assertEquals(null, address.getFloorNumber());\n    Assert.assertEquals(null, address.getDoorNumber());\n    Assert.assertEquals(null, address.getAdditional());\n    Assert.assertEquals(\"4212\", address.getPostcode());\n    Assert.assertEquals(\"Neumarkt im M\u00fchlkreis\", address.getCity());\n    Assert.assertEquals(\"G\u00f6tschka\", address.getVillage());\n    Assert.assertEquals(\"\", address.getCountry());\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/ITestProductBrowser.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/esb/ITestProductBrowser.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2527,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map.Entry;\n\nimport org.junit.Before;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\n\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.bite.core.shared.dto.Text;\nimport at.a1ta.cuco.core.service.customerequipment.ProductBrowserServiceImpl;\nimport at.a1ta.cuco.core.shared.dto.product.CallNumber;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultSubscriptionNode;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionTree;\nimport at.a1telekom.eai.customerinventory.Subscription;\n\n@Ignore(\"This are integration Tests and not Unittests\")\npublic class ITestProductBrowser extends AbstractParametrizedESBDaoTest {\n  private ProductBrowserServiceImpl productBrowserServiceImpl = new ProductBrowserServiceImpl();\n\n  @Mock\n  private TextService textService;\n\n  @Before\n  public void setUp() {\n    use(ESB_A1TA_PROD_PARAMETERS);\n    // productBrowserServiceImpl.setPartyService(partyService);\n    // productBrowserServiceImpl.setCustomerEquipmentService(customerEquipmentService);\n    productBrowserServiceImpl.setTextService(textService);\n\n    Text text = new Text();\n    text.setText(\"asdf\");\n    Mockito.when(textService.getByKeyWithDefaultText(Matchers.anyString(), Matchers.anyString())).thenReturn(text);\n  }\n\n  @Test\n  public void testGetLocationSubscriptionsMap() {\n    long partyId = 100126287;\n    String sessionId = \"123456\";\n    HashMap<String, ArrayList<Subscription>> map = productBrowserServiceImpl.getLocationSubscriptionsMap(partyId);\n    System.out.println(\"getLocationSubscriptionsMap: \" + map);\n\n    for (Entry<String, ArrayList<Subscription>> entry : map.entrySet()) {\n      String key = entry.getKey();\n      ArrayList<Subscription> subscriptions = entry.getValue();\n\n      for (Subscription subscription : subscriptions) {\n        DefaultSubscriptionNode subscriptionNode = new DefaultSubscriptionNode();\n        subscriptionNode.setId(subscription.getId());\n        if (subscription.getCallNumber() != null) {\n          subscriptionNode.setCallNumber(new CallNumber(subscription.getCallNumber().getCC(), subscription.getCallNumber().getNDC(), subscription.getCallNumber().getSN()));\n\n          SubscriptionTree tree = productBrowserServiceImpl.getDefaultProductNodes(subscriptionNode, sessionId, false);\n          System.out.println(\"getDefaultProductNodes: \" + tree);\n        }\n      }\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/util/PhoneNumberParserTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/util/PhoneNumberParserTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4828,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport static org.junit.Assert.assertArrayEquals;\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\n\npublic class PhoneNumberParserTest {\n\n  private static final List<String> COUNTRY_CODES = Arrays.asList(new String[] {\"43\"});\n  private static final List<String> SPECIAL_ONKZS = Arrays.asList(new String[] {\"0800\", \"0810\"});\n  private static final List<String> ONKZS = Arrays.asList(new String[] {\"664\", \"7227\"});\n\n  @Test\n  public void testTrimAndClean_IllegalChararcters() {\n    assertEquals(\"+436641234567\", PhoneNumberParser.trimAndClean(\" +43 (664) 1234567\"));\n    assertEquals(\"+4372721234567\", PhoneNumberParser.trimAndClean(\" +43 / 7272 / 12345 - 67\"));\n    assertEquals(\"004372721234567\", PhoneNumberParser.trimAndClean(\"004372721234567\"));\n    assertEquals(\"004372721234567\", PhoneNumberParser.trimAndClean(\"0043.7272.1234567\"));\n  }\n\n  @Test\n  public void testTrimAndClean_ZeroInBrackets() {\n    assertEquals(\"004372721234567\", PhoneNumberParser.trimAndClean(\"0043(0)7272/1234567\"));\n    assertEquals(\"004372721234567\", PhoneNumberParser.trimAndClean(\" 0043 ( 0 ) 7272 / 1234567 \"));\n  }\n\n  @Test\n  public void testSplitAfterOnkz_SpecialOnkz() {\n    assertArrayEquals(new String[] {\"0800\", \"100100\"}, PhoneNumberParser.splitAfterOnkz(\"0800100100\", ONKZS, SPECIAL_ONKZS));\n    assertArrayEquals(new String[] {\"0810\", \"100100\"}, PhoneNumberParser.splitAfterOnkz(\"0810100100\", ONKZS, SPECIAL_ONKZS));\n  }\n\n  @Test\n  public void testSplitAfterOnkz_Onkz() {\n    assertArrayEquals(new String[] {\"7227\", \"12345\"}, PhoneNumberParser.splitAfterOnkz(\"722712345\", ONKZS, SPECIAL_ONKZS));\n    assertArrayEquals(new String[] {\"7227\", \"12345\"}, PhoneNumberParser.splitAfterOnkz(\"0722712345\", ONKZS, SPECIAL_ONKZS));\n    assertArrayEquals(new String[] {\"664\", \"12345\"}, PhoneNumberParser.splitAfterOnkz(\"66412345\", ONKZS, SPECIAL_ONKZS));\n    assertArrayEquals(new String[] {\"664\", \"12345\"}, PhoneNumberParser.splitAfterOnkz(\"066412345\", ONKZS, SPECIAL_ONKZS));\n  }\n\n  @Test\n  public void testContainsNonDigits() {\n\n    assertTrue(PhoneNumberParser.containsNonDigits(\"abc\"));\n    assertTrue(PhoneNumberParser.containsNonDigits(\" a b c \"));\n\n    assertFalse(PhoneNumberParser.containsNonDigits(null));\n    assertFalse(PhoneNumberParser.containsNonDigits(\"\"));\n    assertFalse(PhoneNumberParser.containsNonDigits(\"1\"));\n    assertFalse(PhoneNumberParser.containsNonDigits(\"123\"));\n    assertFalse(PhoneNumberParser.containsNonDigits(\"1111\"));\n    assertFalse(PhoneNumberParser.containsNonDigits(\" 1111 \"));\n  }\n\n  @Test\n  public void testGeneratePossibleNumbers() {\n    assertEquals(Arrays.asList(new String[] {}), PhoneNumberParser.generateListOfPossibleNumbers(\"\"));\n    assertEquals(Arrays.asList(new String[] {}), PhoneNumberParser.generateListOfPossibleNumbers(\"1\"));\n    assertEquals(Arrays.asList(new String[] {}), PhoneNumberParser.generateListOfPossibleNumbers(\"21\"));\n    assertEquals(Arrays.asList(new String[] {\"321\"}), PhoneNumberParser.generateListOfPossibleNumbers(\"321\"));\n    assertEquals(Arrays.asList(new String[] {\"3210\", \"321\"}), PhoneNumberParser.generateListOfPossibleNumbers(\"3210\"));\n    assertEquals(Arrays.asList(new String[] {\"3 2 1\", \"3 2 \", \"3 2\"}), PhoneNumberParser.generateListOfPossibleNumbers(\"3 2 1\"));\n  }\n\n  @Test\n  public void testIsFullyParsed() {\n\n    // null or empty\n    assertFalse(PhoneNumberParser.isFullyParsed(null));\n    assertFalse(PhoneNumberParser.isFullyParsed(new String[] {}));\n\n    // null values\n    assertFalse(PhoneNumberParser.isFullyParsed(new String[] {null, null, null, null}));\n    assertFalse(PhoneNumberParser.isFullyParsed(new String[] {\"43\", null, null, null}));\n    assertFalse(PhoneNumberParser.isFullyParsed(new String[] {\"43\", \"7227\", null, null}));\n    assertFalse(PhoneNumberParser.isFullyParsed(new String[] {\"43\", \"7227\", \"12345\", null}));\n    assertFalse(PhoneNumberParser.isFullyParsed(new String[] {null, \"7227\", \"12345\", \"67\"}));\n\n    // illegal length\n    assertFalse(PhoneNumberParser.isFullyParsed(new String[] {\"43\", \"7227\", \"12345\"}));\n    assertFalse(PhoneNumberParser.isFullyParsed(new String[] {\"43\", \"7227\", \"12345\", \"67\", \"89\"}));\n\n    // valid\n    assertTrue(PhoneNumberParser.isFullyParsed(new String[] {\"43\", \"7227\", \"12345\", \"67\"}));\n    assertTrue(PhoneNumberParser.isFullyParsed(new String[] {\"43\", \"7227\", \"12345\", \"\"}));\n  }\n\n  @Test\n  public void testSplitAfterCountryCode() {\n    assertArrayEquals(new String[] {\"43\", \"722712345\"}, PhoneNumberParser.splitAfterCountryCode(\"+43722712345\", COUNTRY_CODES));\n    assertArrayEquals(new String[] {\"43\", \"722712345\"}, PhoneNumberParser.splitAfterCountryCode(\"0043722712345\", COUNTRY_CODES));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/cusco/impl/HttpPostCusCoDaoTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/cusco/impl/HttpPostCusCoDaoTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5833,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.cusco.impl;\n\nimport static org.junit.Assert.*;\n\nimport org.joda.time.DateTime;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.data.cusco.CusCoConfigurtationBean;\nimport at.a1ta.bite.data.cusco.CusCoMessage;\nimport at.a1ta.bite.data.cusco.CusCoMessageBuilder;\nimport at.a1ta.bite.data.cusco.http.CusCoHttpOperations;\nimport at.a1ta.cuco.core.shared.dto.Customer;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class HttpPostCusCoDaoTest {\n\n  private static final byte[] PDF_RAW_DATA = \"0000062268 00000 n 0000062387 00000 n trailer<</Size 27/Info 4 0 R/Root 1 0 R/ID[<291E31B2DA429A5F86CB347D3E3598F6><291E31B2DA429A5F86CB347D3E3598F6>]>>startxref63374%%EOF\".getBytes();\n  private static final String SOURCE_SYSTEM = \"source\";\n  private static final String PASSWORD = \"password\";\n  private static final String JOB_ID = \"job-1\";\n\n  private static final CusCoConfigurtationBean CONFIG = new CusCoConfigurtationBean(SOURCE_SYSTEM, PASSWORD);\n\n  @Mock\n  private CusCoHttpOperations operationsMock;\n\n  private HttpPostCusCoDao cuscoDao;\n\n  @Before\n  public void setUp() {\n    cuscoDao = new HttpPostCusCoDao();\n    cuscoDao.setOperations(operationsMock);\n    cuscoDao.setConfig(CONFIG);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testCheckStatusForSignedWithNullValue() {\n    cuscoDao.checkStatusForSigned(null);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testCheckStatusForSignedEmptyStringValue() {\n    cuscoDao.checkStatusForSigned(\"\");\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testPrepareForSignWihtNullCustomer() {\n    cuscoDao.prepareForSign(null, new UserInfo(), null, null);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testPrepareForSignWihtNullUser() {\n    cuscoDao.prepareForSign(new Customer(), null, null, null);\n  }\n\n  @Test\n  public void testAppendMessageData() {\n    CusCoMessage message = new CusCoMessageBuilder(new CusCoConfigurtationBean(\"test\", \"test\")).createForOperation(\"PrepareForSign\", \"job-1\");\n\n    Customer customer = new Customer();\n    customer.setId(12345);\n    customer.setBirthdate(new DateTime(2012, 10, 11, 0, 0).toDate());\n    customer.setTitle(\"Mag\");\n    customer.setSalutation(\"Herr\");\n    customer.setFirstname(\"Roland\");\n    customer.setLastname(\"Konrad Kobald\");\n    customer.setStreet(\"Lassallestrasse\");\n    customer.setHousenumber(\"9\");\n    customer.setCountry(\"A\");\n    customer.setPoBox(\"1020\");\n    customer.setCity(\"Wien\");\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.getBiteUser().setUsername(\"MKW8KT\");\n    userInfo.getBiteUser().setFirstName(\"Andreas\");\n    userInfo.getBiteUser().setLastName(\"Stollmayer\");\n\n    String contactPerson = \"Dr. Klaus Hagenauer\";\n\n    cuscoDao.appendMessageData(customer, userInfo, contactPerson, message);\n\n    assertEquals(\"12345\", message.get(\"PartyId\"));\n    assertEquals(\"11.10.2012\", message.get(\"PartyBirthdate\"));\n    assertEquals(\"false\", message.get(\"CustomerIsCompany\"));\n    assertEquals(\"Mag\", message.get(\"ContractTitle\"));\n    assertEquals(\"Herr\", message.get(\"ContractSalutation\"));\n    assertEquals(\"Roland\", message.get(\"ContractFirstName\"));\n    assertEquals(\"Konrad Kobald\", message.get(\"ContractLastName\"));\n    assertEquals(\"Lassallestrasse\", message.get(\"ContractStreet\"));\n    assertEquals(\"9\", message.get(\"ContractHousenr\"));\n    assertEquals(\"A\", message.get(\"ContractCountry\"));\n    assertEquals(\"1020\", message.get(\"ContractZipCode\"));\n    assertEquals(\"Wien\", message.get(\"ContractCity\"));\n    assertEquals(\"MKW8KT\", message.get(\"DealerId\"));\n    assertEquals(\"Andreas Stollmayer\", message.get(\"DealerSalesPerson\"));\n    assertEquals(\"Dr. Klaus Hagenauer\", message.get(\"ContactPersonFullName\"));\n  }\n\n  @Test\n  public void testAppendMessageDataIsNotFirma() {\n    CusCoMessage message = new CusCoMessageBuilder(new CusCoConfigurtationBean(\"test\", \"test\")).createForOperation(\"PrepareForSign\", \"job-1\");\n\n    Customer customer = new Customer();\n    UserInfo userInfo = new UserInfo();\n    String contactPerson = \"Test Contact Person\";\n\n    cuscoDao.appendMessageData(customer, userInfo, contactPerson, message);\n\n    assertEquals(\"false\", message.get(\"CustomerIsCompany\"));\n    assertEquals(null, message.get(\"ContractCompNumber\"));\n  }\n\n  @Test\n  public void testAppendMessageDataFirma() {\n    CusCoMessage message = new CusCoMessageBuilder(new CusCoConfigurtationBean(\"test\", \"test\")).createForOperation(\"PrepareForSign\", \"job-1\");\n\n    Customer customer = new Customer();\n    customer.setSalutation(\"Firma\");\n    customer.setCommercialRegisterNumber(\"777\");\n\n    UserInfo userInfo = new UserInfo();\n    String contactPerson = \"Test Contact Person\";\n\n    cuscoDao.appendMessageData(customer, userInfo, contactPerson, message);\n\n    assertEquals(\"true\", message.get(\"CustomerIsCompany\"));\n    assertEquals(\"777\", message.get(\"ContractCompNumber\"));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/solr/SolrPartyQueryHelperTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/solr/SolrPartyQueryHelperTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 12739,
    "content": "package at.a1ta.cuco.core.dao.solr;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.junit.Assert;\nimport org.junit.Test;\n\nimport at.a1ta.bite.data.solr.core.query.Field;\nimport at.a1ta.bite.data.solr.core.query.Query;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\n\npublic class SolrPartyQueryHelperTest {\n\n  @Test\n  public void testConvertToQueryWithEmptyCriteria() {\n    Query query = SolrPartyQueryHelper.convertToQuery(new PartySearch());\n    Assert.assertNotNull(query);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testConvertToQueryWithNullCriteria() {\n    SolrPartyQueryHelper.convertToQuery(null);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testConvertToQueryWithAonAccountNumber() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setAonAccountNumber(\"aonNumber\");\n    SolrPartyQueryHelper.convertToQuery(partySearch);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testConvertToFindCustomersByIdQueryWithNullValue() {\n    SolrPartyQueryHelper.convertToFindCustomersByIdQuery(null);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testConvertToFindCustomersByIdQueryWithEmptyList() {\n    SolrPartyQueryHelper.convertToFindCustomersByIdQuery(Collections.<Long> emptyList());\n  }\n\n  @Test\n  public void testToFindCustomersByIdQueryWithSingleId() {\n    List<Long> ids = Arrays.asList(Long.valueOf(1));\n    Query query = SolrPartyQueryHelper.convertToFindCustomersByIdQuery(ids);\n    assertQueryField(SolrPartyQuery.SearchField.CUSTOMER_NUMBER, Long.valueOf(1), query);\n  }\n\n  @Test\n  public void testToFindCustomersByIdQueryWithMultipleIds() {\n    List<Long> ids = Arrays.asList(Long.valueOf(1), Long.valueOf(2), Long.valueOf(3));\n    Query query = SolrPartyQueryHelper.convertToFindCustomersByIdQuery(ids);\n\n    assertQueryField(SolrPartyQuery.SearchField.CUSTOMER_NUMBER, Long.valueOf(1), query);\n    assertQueryField(SolrPartyQuery.SearchField.CUSTOMER_NUMBER, Long.valueOf(2), query);\n    assertQueryField(SolrPartyQuery.SearchField.CUSTOMER_NUMBER, Long.valueOf(3), query);\n\n    Assert.assertTrue(query.getQueryString().contains(\" OR \"));\n    Assert.assertFalse(query.getQueryString().contains(\" AND \"));\n  }\n\n  @Test\n  public void testConvertToQueryWithMultipleCriterias() {\n    // incrementally add new parameters and verify result\n    PartySearch partySearch = new PartySearch();\n\n    partySearch.setFirstName(\"firstname\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setLastName(\"lastname\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setStreet(\"street\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setPostcode(\"postcode\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setHouseNumber(\"housenumber\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setCity(\"city\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setId(\"customernumber\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setBillingAccountNumber(\"billingaccountnumber\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setCallNumber(\"callNumber\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setOkz(\"okz\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setLkz(\"lkz\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n\n    partySearch.setCommercialRegisterNumber(\"commercialRegisterNumber\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n  }\n\n  @Test\n  public void testConvertToQueryWithMultiValuedFields() {\n    PartySearch partySearch = new PartySearch();\n\n    partySearch.setFirstName(\"ANNA   MARIA\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n  }\n\n  @Test\n  public void testConvertToQueryWithFulltext() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setFulltext(true);\n    partySearch.setFulltextTerm(\"huber al\");\n    validateQuery(SolrPartyQueryHelper.convertToQuery(partySearch), partySearch);\n  }\n\n  @Test\n  public void testConvertToQueryWithBlankFulltext() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setFulltext(true);\n    partySearch.setFulltextTerm(\"   \");\n    Query query = SolrPartyQueryHelper.convertToQuery(partySearch);\n    Assert.assertTrue(query.getQueryString().equals(\"*:*\"));\n  }\n\n  @Test\n  public void testConvertToQueryWithSpecialCharacters() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setFulltext(true);\n    partySearch.setFulltextTerm(\"huber & al\");\n    Query query = SolrPartyQueryHelper.convertToQuery(partySearch);\n    Assert.assertTrue(query.getQueryString().contains(\"(huber* al*)\"));\n  }\n\n  @Test\n  public void testReservedCharacterReplacementForSearch() {\n    validateReservedCharacterReplacement(\"i_j\", \"i j\");\n    validateReservedCharacterReplacement(\"i/j\", \"i j\");\n    validateReservedCharacterReplacement(\"i%j\", \"i j\");\n    validateReservedCharacterReplacement(\"i;j\", \"i j\");\n    validateReservedCharacterReplacement(\"i'j\", \"i j\");\n    validateReservedCharacterReplacement(\"i#j\", \"i j\");\n    validateReservedCharacterReplacement(\"i@j\", \"i j\");\n    validateReservedCharacterReplacement(\"i,j\", \"i j\");\n    validateReservedCharacterReplacement(\"i.j\", \"i j\");\n    validateReservedCharacterReplacement(\"i\\\"j\", \"i j\");\n    validateReservedCharacterReplacement(\"i+j\", \"i j\");\n    validateReservedCharacterReplacement(\"i-j\", \"i j\");\n    validateReservedCharacterReplacement(\"i&j\", \"i j\");\n    validateReservedCharacterReplacement(\"i|j\", \"i j\");\n    validateReservedCharacterReplacement(\"i!j\", \"i j\");\n    validateReservedCharacterReplacement(\"i(j\", \"i j\");\n    validateReservedCharacterReplacement(\"i)j\", \"i j\");\n    validateReservedCharacterReplacement(\"i{j\", \"i j\");\n    validateReservedCharacterReplacement(\"i}j\", \"i j\");\n    validateReservedCharacterReplacement(\"i[j\", \"i j\");\n    validateReservedCharacterReplacement(\"i]j\", \"i j\");\n    validateReservedCharacterReplacement(\"i^j\", \"i j\");\n    validateReservedCharacterReplacement(\"i~j\", \"i j\");\n    validateReservedCharacterReplacement(\"i*j\", \"i j\");\n    validateReservedCharacterReplacement(\"i?j\", \"i j\");\n    validateReservedCharacterReplacement(\"i:j\", \"i j\");\n    validateReservedCharacterReplacement(\"i\\\\j\", \"i j\");\n  }\n\n  @Test\n  public void testReplaceSingleCustomerNumbersAtBeginningForFulltextSearch() {\n    validateReseredCharacterReplacement(\"1 i\", \"i\", true);\n    validateReseredCharacterReplacement(\"10 i\", \"i\", true);\n    validateReseredCharacterReplacement(\"100 i\", \"i\", true);\n  }\n\n  @Test\n  public void testReplaceMultipleCustomerNumbersAtBeginningForFulltextSearch() {\n    validateReseredCharacterReplacement(\"1 100 i\", \"i\", true);\n    validateReseredCharacterReplacement(\"10 10 i\", \"i\", true);\n    validateReseredCharacterReplacement(\"100 1 i\", \"i\", true);\n  }\n\n  @Test\n  public void testReplaceSingleCustomerNumbersInMiddleForFulltextSearch() {\n    validateReseredCharacterReplacement(\"i 1 j\", \"i j\", true);\n    validateReseredCharacterReplacement(\"i 10 j\", \"i j\", true);\n    validateReseredCharacterReplacement(\"i 100 j\", \"i j\", true);\n  }\n\n  public void testReplaceMultipleCustomerNumbersInMiddleForFulltextSearch() {\n    validateReseredCharacterReplacement(\"i 1 1 j\", \"i j\", true);\n    validateReseredCharacterReplacement(\"i 10 10 j\", \"i j\", true);\n    validateReseredCharacterReplacement(\"i 100 100 j\", \"i j\", true);\n\n    validateReseredCharacterReplacement(\"i 1 100 j\", \"i j\", true);\n    validateReseredCharacterReplacement(\"i 10 10 j\", \"i j\", true);\n    validateReseredCharacterReplacement(\"i 100 1 j\", \"i j\", true);\n  }\n\n  @Test\n  public void testReplaceSingleCustomerNumbersAtEndForFulltextSearch() {\n    validateReseredCharacterReplacement(\"i 1\", \"i\", true);\n    validateReseredCharacterReplacement(\"i 10\", \"i\", true);\n    validateReseredCharacterReplacement(\"i 100\", \"i\", true);\n  }\n\n  @Test\n  public void testReplaceMultipleCustomerNumbersAtEndForFulltextSearch() {\n    validateReseredCharacterReplacement(\"i 1 100\", \"i\", true);\n    validateReseredCharacterReplacement(\"i 10 10\", \"i\", true);\n    validateReseredCharacterReplacement(\"i 100 1\", \"i\", true);\n  }\n\n  @Test\n  public void testReplaceSoleCustomerNumber() {\n    validateReseredCharacterReplacement(\"1\", \"*:*\", true);\n    validateReseredCharacterReplacement(\"10\", \"*:*\", true);\n    validateReseredCharacterReplacement(\"100\", \"*:*\", true);\n\n    validateReseredCharacterReplacement(\"1 100\", \"*:*\", true);\n    validateReseredCharacterReplacement(\"10 10\", \"*:*\", true);\n    validateReseredCharacterReplacement(\"100 1\", \"*:*\", true);\n  }\n\n  @Test\n  public void testDontReplaceCustomerNumber() {\n    validateReseredCharacterReplacement(\"1000\", \"1000\", true);\n    validateReseredCharacterReplacement(\"1001\", \"1001\", true);\n    validateReseredCharacterReplacement(\"2\", \"2\", true);\n    validateReseredCharacterReplacement(\"11\", \"11\", true);\n    validateReseredCharacterReplacement(\"101\", \"101\", true);\n  }\n\n  private void validateReservedCharacterReplacement(String character, String expectedQuery) {\n    validateReseredCharacterReplacement(character, expectedQuery, false);\n  }\n\n  private void validateReseredCharacterReplacement(String searchString, String expectedQuery, boolean isFulltext) {\n    PartySearch partySearch = new PartySearch();\n    if (isFulltext) {\n      partySearch.setFulltext(true);\n      partySearch.setFulltextTerm(searchString);\n    } else {\n      partySearch.setLastName(searchString);\n    }\n    Query query = SolrPartyQueryHelper.convertToQuery(partySearch);\n    if (StringUtils.isBlank(expectedQuery)) {\n      Assert.assertTrue(\"Expecined to replace '\" + searchString + \"' with '\" + expectedQuery + \"' .\", query.getQueryString()\n          .contains(\"*:*\"));\n    } else {\n      String[] replacements = StringUtils.split(expectedQuery);\n      Assert.assertTrue(\"Expecined to replace '\" + searchString + \"' with '\" + expectedQuery + \"' .\",\n          query.getQueryString().contains(StringUtils.join(replacements, \"* \")));\n    }\n  }\n\n  private void validateQuery(Query query, PartySearch partySearch) {\n    assertQueryField(SolrPartyQuery.SearchField.FIRSTNAME, partySearch.getFirstName(), query);\n    assertQueryField(SolrPartyQuery.SearchField.LASTNAME, partySearch.getLastName(), query);\n    assertQueryField(SolrPartyQuery.SearchField.STREET, partySearch.getStreet(), query);\n    assertQueryField(SolrPartyQuery.SearchField.POSTCODE, partySearch.getPostcode(), query);\n    assertQueryField(SolrPartyQuery.SearchField.HOUSENUMBER, partySearch.getHouseNumber(), query);\n    assertQueryField(SolrPartyQuery.SearchField.CITY, partySearch.getCity(), query);\n    assertQueryField(SolrPartyQuery.SearchField.CUSTOMER_NUMBER, partySearch.getId(), query);\n    assertQueryField(SolrPartyQuery.SearchField.BAN, partySearch.getBillingAccountNumber(), query);\n    assertQueryField(SolrPartyQuery.SearchField.PHONE_SUBSCRIBER_NUMBER, partySearch.getCallNumber(), query);\n    assertQueryField(SolrPartyQuery.SearchField.PHONE_DESTINATION_CODE, partySearch.getOkz(), query);\n    assertQueryField(SolrPartyQuery.SearchField.PHONE_COUNTRY_CODE, partySearch.getLkz(), query);\n    assertQueryField(SolrPartyQuery.SearchField.COMMERCIAL_REGISTER_NUMBER, partySearch.getCommercialRegisterNumber(), query);\n  }\n\n  private void assertQueryField(Field field, Object value, Query query) {\n    if (value == null || (value instanceof String && StringUtils.isEmpty((String) value))) {\n      Assert.assertFalse(\"Found unexpected field \\\"\" + field + \"\\\" in query.\", query.getQueryString().contains(field.getName()));\n    } else {\n      String searchString = StringUtils.lowerCase(value.toString());\n      Assert.assertTrue(\"Expected to find field \\\"\" + field + \"\\\" in query.\", query.getQueryString().contains(field.getName()));\n      if (searchString.contains(\" \")) {\n        Assert.assertTrue(\"Expected to find field \\\"\" + searchString + \"\\\" for field \\\"\" + field + \"\\\"  in query.\", query.getQueryString()\n            .contains(field.getName() + \":(\"));\n      } else {\n        Assert.assertTrue(\"Expected to find field \\\"\" + searchString + \"\\\" for field \\\"\" + field + \"\\\"  in query.\", query.getQueryString()\n            .contains(field.getName() + \":\" + searchString));\n      }\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/solr/SolrPartyRepositoryWithPhoneNumbersTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/solr/SolrPartyRepositoryWithPhoneNumbersTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5009,
    "content": "package at.a1ta.cuco.core.dao.solr;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNull;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.ArgumentCaptor;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\n\nimport at.a1ta.bite.data.solr.core.query.Query;\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic class SolrPartyRepositoryWithPhoneNumbersTest extends AbstractSolrRepositoryTest {\n\n  private SolrPartyRepositoryWithPhoneNumbers repository;\n  private Page<Party> page;\n\n  @Mock\n  private PhoneNumberDao phoneNumberDaoMock;\n\n  @Before\n  public void setUp() {\n    repository = new SolrPartyRepositoryWithPhoneNumbers();\n    initMockedRepository(repository);\n\n    repository.setPhoneNumberDao(phoneNumberDaoMock);\n\n    page = new PageImpl<Party>(Collections.<Party> emptyList());\n    Mockito.when(solrTemplateMock.executeObjectQuery(Matchers.any(Query.class), Matchers.eq(Party.class))).thenReturn(new Party());\n    Mockito.when(solrTemplateMock.executeListQuery(Matchers.any(Query.class), Matchers.eq(Party.class))).thenReturn(page);\n  }\n\n  @Test\n  public void testSearch() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setLastName(\"lastname\");\n\n    repository.search(partySearch, 300);\n    ArgumentCaptor<Query> queryCaptor = ArgumentCaptor.forClass(Query.class);\n\n    Mockito.verify(solrTemplateMock, Mockito.times(1)).executeListQuery(queryCaptor.capture(), Matchers.eq(Party.class));\n    assertEquals(300, queryCaptor.getValue().getPageRequest().getPageSize());\n    assertEquals(0, queryCaptor.getValue().getPageRequest().getPageNumber());\n  }\n\n  @Test\n  public void testSearchPhoneNumberNotParsable() {\n    PartySearch customerSearch = new PartySearch();\n    String phoneNumber = \"789789\";\n    customerSearch.setPhoneNumber(phoneNumber);\n\n    Mockito.when(phoneNumberDaoMock.parse(phoneNumber)).thenReturn(null);\n    Page<Party> page = repository.search(customerSearch, new PageRequest(0, 10));\n\n    Mockito.verify(phoneNumberDaoMock, Mockito.times(1)).parse(Matchers.eq(phoneNumber));\n    assertNull(customerSearch.getLkz());\n    assertNull(customerSearch.getOkz());\n    assertNull(customerSearch.getCallNumber());\n    assertEquals(0, page.getTotalElements());\n  }\n\n  @Test\n  public void testSearchPhoneNumberParsable() {\n    PartySearch customerSearch = new PartySearch();\n    String phoneNumber = \"789789\";\n    customerSearch.setPhoneNumber(phoneNumber);\n\n    Mockito.when(phoneNumberDaoMock.parse(Matchers.eq(phoneNumber))).thenReturn(new PhoneNumberStructure(\"TestCode\", \"TestOnkz\", \"TestNumber\"));\n    Page<Party> page = repository.search(customerSearch, new PageRequest(0, 10));\n\n    Mockito.verify(phoneNumberDaoMock, Mockito.times(1)).parse(Matchers.eq(phoneNumber));\n    assertEquals(customerSearch.getLkz(), \"TestCode\");\n    assertEquals(customerSearch.getOkz(), \"TestOnkz\");\n    assertEquals(customerSearch.getCallNumber(), \"TestNumber\");\n    assertEquals(0, page.getTotalElements()); // nothing will be found anyway\n  }\n\n  @Test\n  public void testRemoveDuplicates() {\n    ArrayList<Party> parties = new ArrayList<Party>();\n    parties.add(new Party(1));\n    parties.add(new Party(2));\n    parties.add(new Party(1));\n\n    List<Party> filtered = repository.removeDuplicates(parties);\n    assertEquals(2, filtered.size());\n  }\n\n  @Test\n  public void testRippleLoad() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setLastName(\"lastname\");\n\n    page = new PageImpl<Party>(Arrays.asList(new Party(1), new Party(1)));\n    Mockito.when(solrTemplateMock.executeListQuery(Matchers.any(Query.class), Matchers.eq(Party.class))).thenReturn(page);\n\n    repository.search(partySearch, 2);\n    ArgumentCaptor<Query> queryCaptor = ArgumentCaptor.forClass(Query.class);\n\n    Mockito.verify(solrTemplateMock, Mockito.times(1)).executeListQuery(queryCaptor.capture(), Matchers.eq(Party.class));\n  }\n\n  @Test\n  public void testRippleLoadWithTrim() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setLastName(\"lastname\");\n\n    page = new PageImpl<Party>(Arrays.asList(new Party(1), new Party(2), new Party(3)));\n    Mockito.when(solrTemplateMock.executeListQuery(Matchers.any(Query.class), Matchers.eq(Party.class))).thenReturn(page);\n\n    List<Party> result = repository.search(partySearch, 2).getContent();\n    ArgumentCaptor<Query> queryCaptor = ArgumentCaptor.forClass(Query.class);\n\n    Mockito.verify(solrTemplateMock, Mockito.times(1)).executeListQuery(queryCaptor.capture(), Matchers.eq(Party.class));\n    assertEquals(2, result.size());\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/solr/SolrPartyRepositoryTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/solr/SolrPartyRepositoryTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4401,
    "content": "package at.a1ta.cuco.core.dao.solr;\n\nimport java.util.Collections;\n\nimport junit.framework.Assert;\n\nimport org.apache.commons.lang.NotImplementedException;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.mockito.ArgumentCaptor;\nimport org.mockito.Matchers;\nimport org.mockito.Mockito;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\n\nimport at.a1ta.bite.data.solr.core.query.Query;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\n\npublic class SolrPartyRepositoryTest extends AbstractSolrRepositoryTest {\n\n  private SolrPartyRepository repository;\n  \n  @Before\n  public void setUp() {\n    repository = new SolrPartyRepository();\n    initMockedRepository(repository);\n    \n    Page<Party> page = new PageImpl<Party>(Collections.<Party>emptyList());\n    Mockito.when(solrTemplateMock.executeObjectQuery(Matchers.any(Query.class), Matchers.eq(Party.class))).thenReturn(new Party());\n    Mockito.when(solrTemplateMock.executeListQuery(Matchers.any(Query.class), Matchers.eq(Party.class))).thenReturn(page);\n  }\n  \n  \n  @Test\n  public void testFindOne()  {\n    repository.findOne(Long.valueOf(1));\n    ArgumentCaptor<Query> queryCaptor = ArgumentCaptor.forClass(Query.class);\n    Mockito.verify(solrTemplateMock, Mockito.times(1)).executeObjectQuery(queryCaptor.capture(), Matchers.eq(Party.class));\n    \n    Assert.assertEquals(\"customernumber:1\", queryCaptor.getValue().getQueryString());\n  }\n  \n  @Test\n  public void testLoadParty()  {\n    repository.loadParty(Long.valueOf(1));\n    ArgumentCaptor<Query> queryCaptor = ArgumentCaptor.forClass(Query.class);\n    Mockito.verify(solrTemplateMock, Mockito.times(1)).executeObjectQuery(queryCaptor.capture(), Matchers.eq(Party.class));\n    \n    Assert.assertEquals(\"customernumber:1\", queryCaptor.getValue().getQueryString());\n  }\n  \n  @Test(expected=IllegalArgumentException.class)\n  public void testFindOneWithNullValue()  {\n    repository.findOne(null);\n  }\n  \n  @Test(expected=IllegalArgumentException.class)\n  public void testLoadPartyWithNull()  {\n    repository.loadParty(null);\n  }\n  \n  @Test\n  public void testSearch() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setLastName(\"lastname\");\n    \n    repository.search(partySearch, 300);\n    ArgumentCaptor<Query> queryCaptor = ArgumentCaptor.forClass(Query.class);\n    \n    Mockito.verify(solrTemplateMock, Mockito.times(1)).executeListQuery(queryCaptor.capture(), Matchers.eq(Party.class));\n    Assert.assertEquals(300, queryCaptor.getValue().getPageRequest().getPageSize());\n    Assert.assertEquals(0, queryCaptor.getValue().getPageRequest().getPageNumber());\n  }\n  \n  @Test(expected=IllegalArgumentException.class)\n  public void testSearchWithNullParameter() {\n    repository.search(null, 300);\n  }\n  \n  @Test\n  public void testFacetedSearch() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setLastName(\"lastname\");\n    \n    repository.facetedSearch(partySearch, SolrPartyQuery.SearchField.FIRSTNAME);\n    ArgumentCaptor<Query> queryCaptor = ArgumentCaptor.forClass(Query.class);\n    \n    Mockito.verify(solrTemplateMock, Mockito.times(1)).executeFacetQuery(queryCaptor.capture());\n    Assert.assertEquals(SolrPartyQuery.SearchField.FIRSTNAME, queryCaptor.getValue().getFacets().get(0));\n  }\n  \n  @Test(expected=IllegalArgumentException.class)\n  public void testFacetedSearchWithNullField() {\n    PartySearch partySearch = new PartySearch();\n    partySearch.setLastName(\"lastname\");\n    \n    repository.facetedSearch(partySearch, null);\n  }\n  \n  @Test(expected=NotImplementedException.class)\n  public void testGetCustomers4Header() {\n    repository.getCustomers4Header(1, 1, 1);\n  }\n  \n  @Test(expected=NotImplementedException.class)\n  public void testCountCustomers4Header() {\n    repository.countCustomers4Header(1);\n  }\n  \n  @Test(expected=NotImplementedException.class)\n  public void testIsSubsidised() {\n    repository.isSubsidised(1, null);\n  }\n  \n  @Test(expected=NotImplementedException.class)\n  public void testGetAllSegments() {\n    repository.getAllSegments();\n  }\n  \n  @Test(expected=NotImplementedException.class)\n  public void testSaveCucoCustomer() {\n    repository.saveCucoCustomer(null);\n  }\n  \n  @Test(expected=NotImplementedException.class)\n  public void testGetHierarchyForParty() {\n    repository.getHierarchyForParty(1);\n  }\n  \n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/solr/AbstractSolrRepositoryTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/solr/AbstractSolrRepositoryTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 525,
    "content": "package at.a1ta.cuco.core.dao.solr;\n\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.data.solr.core.SolrTemplate;\nimport at.a1ta.bite.data.solr.repository.support.SimpleSolrRepository;\n\n@RunWith(MockitoJUnitRunner.class)\npublic abstract class AbstractSolrRepositoryTest {\n  \n  @Mock\n  SolrTemplate solrTemplateMock;\n  \n  void initMockedRepository(SimpleSolrRepository<?, ?> repository) {\n    repository.setSolrTemplate(solrTemplateMock);\n  }\n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/db/impl/SalesInfoDaoImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/db/impl/SalesInfoDaoImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1093,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.List;\n\nimport org.junit.Assert;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SbsNoteReportRow;\n\n@Ignore\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = {\"classpath:testApplicationContext-cuco-core.xml\"})\npublic class SalesInfoDaoImplTest {\n\n  SimpleDateFormat sdf = new SimpleDateFormat(\"dd.MM.yyyy\");\n\n  @Autowired\n  SalesInfoDaoImpl salesInfoDaoImpl;\n\n  @Test\n  public void testAll() throws Exception {\n\n    Date begin = sdf.parse(\"01.01.2013\");\n    Date end = sdf.parse(\"01.01.2015\");\n\n    List<SbsNoteReportRow> reportData = salesInfoDaoImpl.getSbsNoteReportData(begin, end);\n    Assert.assertNotNull(reportData);\n    System.out.println(reportData.toString());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/db/impl/MyNotesDaoImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/db/impl/MyNotesDaoImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2085,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.junit.Assert;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.MyNotesDao;\nimport at.a1ta.cuco.core.shared.dto.NotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\n@Ignore\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = {\"classpath:testApplicationContext-cuco-core.xml\"})\npublic class MyNotesDaoImplTest {\n\n  @Autowired\n  MyNotesDao myNotesDao;\n\n  @Test\n  public void testAll() {\n    List<SalesInfoNoteType> salesInfoNoteTypesToLoad = new ArrayList<SalesInfoNoteType>();\n    salesInfoNoteTypesToLoad.add(SalesInfoNoteType.SI_SIMPLE_NOTE);\n    salesInfoNoteTypesToLoad.add(SalesInfoNoteType.SI_COMPETITOR_NOTE);\n\n    NotesFilter filter = new NotesFilter();\n    filter.setReminderOperator(null);\n    filter.setUserId(36668);\n    SearchResult<SalesInfoNote> searchResult = myNotesDao.loadMyNotes(filter, salesInfoNoteTypesToLoad);\n\n    ArrayList<SalesInfoNote> results = searchResult.getResults();\n    Assert.assertTrue(results.size() > 0);\n  }\n\n  @Test\n  public void testEqual() {\n\n    List<SalesInfoNoteType> salesInfoNoteTypesToLoad = new ArrayList<SalesInfoNoteType>();\n    salesInfoNoteTypesToLoad.add(SalesInfoNoteType.SI_SIMPLE_NOTE);\n    salesInfoNoteTypesToLoad.add(SalesInfoNoteType.SI_COMPETITOR_NOTE);\n\n    NotesFilter filter = new NotesFilter();\n    filter.setReminderOperator(\"=\");\n    filter.setUserId(36668);\n    SearchResult<SalesInfoNote> searchResult = myNotesDao.loadMyNotes(filter, salesInfoNoteTypesToLoad);\n\n    ArrayList<SalesInfoNote> results = searchResult.getResults();\n    Assert.assertTrue(results.size() > 0);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/dao/db/impl/CustomerUnlockRequestDaoImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/dao/db/impl/CustomerUnlockRequestDaoImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7637,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.Date;\nimport java.util.HashMap;\n\nimport junit.framework.Assert;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.ArgumentCaptor;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\nimport org.springframework.orm.ibatis.SqlMapClientTemplate;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.access.ContextAwareCustomerUnlockRequest;\nimport at.a1ta.cuco.core.shared.dto.access.UnlockStateEnum;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class CustomerUnlockRequestDaoImplTest {\n\n  @Mock\n  private SqlMapClientTemplate sqlMapClientTemplateMock;\n\n  private CustomerUnlockRequestDaoImpl dao;\n\n  @Before\n  public void setUp() {\n    dao = new CustomerUnlockRequestDaoImpl();\n    dao.setSqlMapClientTemplate(sqlMapClientTemplateMock);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testInsertWithNull() {\n    dao.insert(null);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testInsertWithNegativeCustomerId() {\n    ContextAwareCustomerUnlockRequest request = createRequest(-1, 10L, \"session\");\n    request.setJobId(\"jobId\");\n    dao.insert(request);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testInsertWithEmptyJobId() {\n    ContextAwareCustomerUnlockRequest request = createRequest(1, 10L, \"session\");\n    request.setJobId(\"\");\n    dao.insert(request);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testInsertWithEmptyUsername() {\n    ContextAwareCustomerUnlockRequest request = createRequest(1, null, \"session\");\n    request.setJobId(\"job\");\n    dao.insert(request);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testInsertWithEmptySessionKey() {\n    ContextAwareCustomerUnlockRequest request = createRequest(1, 10L, \"\");\n    request.setJobId(\"job\");\n    dao.insert(request);\n  }\n\n  @Test\n  public void testInsert() {\n    ContextAwareCustomerUnlockRequest request = createRequest(1, 10L, \"session\");\n    request.setJobId(\"job\");\n\n    ArgumentCaptor<String> statementCaptor = ArgumentCaptor.forClass(String.class);\n    ArgumentCaptor<Object> paramsCaptor = ArgumentCaptor.forClass(Object.class);\n\n    dao.insert(request);\n\n    Mockito.verify(sqlMapClientTemplateMock, Mockito.times(1)).insert(statementCaptor.capture(), paramsCaptor.capture());\n    Assert.assertEquals(\"CustomerUnlockRequest.insert\", statementCaptor.getValue());\n    Assert.assertEquals(request, paramsCaptor.getValue());\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testUpdateWithNull() {\n    dao.update(null);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testUpdateWithNegativeCustomerId() {\n    ContextAwareCustomerUnlockRequest request = createRequest(-1, 10L, \"session\");\n    request.setJobId(\"jobId\");\n    dao.update(request);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testUpdateWithEmptyJobId() {\n    ContextAwareCustomerUnlockRequest request = createRequest(1, 10L, \"session\");\n    request.setJobId(\"\");\n    dao.update(request);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testUpdateWithEmptyUsername() {\n    ContextAwareCustomerUnlockRequest request = createRequest(1, null, \"session\");\n    request.setJobId(\"job\");\n    dao.update(request);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testUpdateWithEmptySessionKey() {\n    ContextAwareCustomerUnlockRequest request = createRequest(1, 10L, \"\");\n    request.setJobId(\"job\");\n    dao.update(request);\n  }\n\n  @Test\n  public void testUpate() {\n    ContextAwareCustomerUnlockRequest request = createRequest(1, 10L, \"session\");\n    request.setJobId(\"job\");\n    request.setFinished(new Date());\n    request.setState(UnlockStateEnum.FINISHED_UNLOCKED);\n\n    ArgumentCaptor<String> statementCaptor = ArgumentCaptor.forClass(String.class);\n    ArgumentCaptor<Object> paramsCaptor = ArgumentCaptor.forClass(Object.class);\n\n    dao.update(request);\n\n    Mockito.verify(sqlMapClientTemplateMock, Mockito.times(1)).update(statementCaptor.capture(), paramsCaptor.capture());\n    Assert.assertEquals(\"CustomerUnlockRequest.update\", statementCaptor.getValue());\n    Assert.assertEquals(request, paramsCaptor.getValue());\n  }\n\n  @SuppressWarnings({\"rawtypes\"})\n  @Test\n  public void testFindByCustomerIdAndUsernameAndJobIdAndSessionKey() {\n    long customerId = 100100100;\n    BiteUser user = new BiteUser();\n    user.setId(10L);\n    String jobId = \"jobId\";\n    String sessionKey = \"sessionKey\";\n\n    ArgumentCaptor<String> statementCaptor = ArgumentCaptor.forClass(String.class);\n    ArgumentCaptor<HashMap> paramsCaptor = ArgumentCaptor.forClass(HashMap.class);\n\n    dao.findByCustomerIdAndUsernameAndJobIdAndSessionKey(customerId, user, jobId, sessionKey);\n\n    Mockito.verify(sqlMapClientTemplateMock, Mockito.times(1)).queryForObject(statementCaptor.capture(), paramsCaptor.capture());\n    Assert.assertEquals(\"CustomerUnlockRequest.findCustomerUnlockRequestByCustomerIdAndUsernameAndJobIdAndSessionKey\", statementCaptor.getValue());\n\n    Assert.assertEquals(jobId, paramsCaptor.getValue().get(\"jobId\"));\n    Assert.assertEquals(customerId, paramsCaptor.getValue().get(\"customerId\"));\n    Assert.assertEquals(10L, paramsCaptor.getValue().get(\"userId\"));\n    Assert.assertEquals(sessionKey, paramsCaptor.getValue().get(\"sessionKey\"));\n\n  }\n\n  @SuppressWarnings({\"rawtypes\"})\n  @Test\n  public void testFindByCustomerIdAndUsernameAndSessionKey() {\n    BiteUser user = new BiteUser();\n    user.setId(10L);\n    long customerId = 100100100;\n    String sessionKey = \"sessionKey\";\n\n    ArgumentCaptor<String> statementCaptor = ArgumentCaptor.forClass(String.class);\n    ArgumentCaptor<HashMap> paramsCaptor = ArgumentCaptor.forClass(HashMap.class);\n\n    dao.findByCustomerIdAndUsernameAndContextKey(customerId, user, sessionKey);\n\n    Mockito.verify(sqlMapClientTemplateMock, Mockito.times(1)).queryForList(statementCaptor.capture(), paramsCaptor.capture());\n    Assert.assertEquals(\"CustomerUnlockRequest.findCustomerUnlockRequestByCustomerIdAndUsernameAndSessionKey\", statementCaptor.getValue());\n\n    Assert.assertEquals(customerId, paramsCaptor.getValue().get(\"customerId\"));\n    Assert.assertEquals(10L, paramsCaptor.getValue().get(\"userId\"));\n    Assert.assertEquals(sessionKey, paramsCaptor.getValue().get(\"sessionKey\"));\n  }\n\n  private ContextAwareCustomerUnlockRequest createRequest(int i, Long userId, String sessionKey) {\n    ContextAwareCustomerUnlockRequest request = new ContextAwareCustomerUnlockRequest();\n    request.setCustomerId(i);\n    if (userId != null) {\n      BiteUser user = new BiteUser();\n      user.setId(userId);\n      request.setUser(user);\n    }\n    request.setSessionKey(sessionKey);\n    return request;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/dto/IndexationStatusTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/dto/IndexationStatusTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2098,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\npublic class IndexationStatusTest {\n\n  @Before\n  public void setUp() throws Exception {}\n\n  @Test\n  public void testGetForDWHValue_Indexed() {\n    Assert.assertEquals(IndexationStatus.INDEXED, IndexationStatus.getForDWHValue(\"INDEXED_PRODUCTS\"));\n  }\n\n  @Test\n  public void testGetForDWHValue_NotIndexed() {\n    Assert.assertEquals(IndexationStatus.NOT_INDEXED, IndexationStatus.getForDWHValue(\"EXCLUDED\"));\n  }\n\n  @Test\n  public void testGetForDWHValue_IndexedNotUsed() {\n    Assert.assertEquals(IndexationStatus.INDEXED_NOT_STARTED, IndexationStatus.getForDWHValue(\"INDEXED_PRODUCTS_NOT_USED\"));\n  }\n\n  @Test\n  public void testGetForDWHValue_Null() {\n    Assert.assertEquals(IndexationStatus.NOT_AVAILABLE, IndexationStatus.getForDWHValue(null));\n  }\n\n  @Test\n  public void testGetForDWHValue_EmptyString() {\n    Assert.assertEquals(IndexationStatus.NOT_AVAILABLE, IndexationStatus.getForDWHValue(\"\"));\n  }\n\n  @Test\n  public void testGetForDWHValue_InvalidString() {\n    Assert.assertEquals(IndexationStatus.NOT_AVAILABLE, IndexationStatus.getForDWHValue(\"test\"));\n  }\n\n  @Test\n  public void testGetForCIValue_Indexed() {\n    Assert.assertEquals(IndexationStatus.INDEXED, IndexationStatus.getForCIValue(2));\n  }\n\n  @Test\n  public void testGetForCIValue_NotIndexed() {\n    Assert.assertEquals(IndexationStatus.NOT_INDEXED, IndexationStatus.getForCIValue(3));\n  }\n\n  @Test\n  public void testGetForCIValue_IndexedNotUsed() {\n    Assert.assertEquals(IndexationStatus.INDEXED_NOT_STARTED, IndexationStatus.getForCIValue(1));\n  }\n\n  @Test\n  public void testGetForCIValue_Zero() {\n    Assert.assertEquals(IndexationStatus.NOT_AVAILABLE, IndexationStatus.getForCIValue(0));\n  }\n\n  @Test\n  public void testGetForCIValue_Negative() {\n    Assert.assertEquals(IndexationStatus.NOT_AVAILABLE, IndexationStatus.getForCIValue(-1));\n  }\n\n  @Test\n  public void testGetForCIValue_InvalidNumber() {\n    Assert.assertEquals(IndexationStatus.NOT_AVAILABLE, IndexationStatus.getForCIValue(99999));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/HousenumberValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/HousenumberValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 527,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class HousenumberValidatorTest {\n\n  private HousenumberValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new HousenumberValidator();\n  }\n\n  @Test\n  public void validHouseNumberWithStreetAndWithCity() {\n    assertTrue(validator.isValid());\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/CityValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/CityValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 822,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class CityValidatorTest {\n\n  @Mock\n  private CityValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new CityValidator();\n  }\n\n  @Test\n  public void validCityNull() {\n    assertTrue(validator.isValid(null));\n  }\n\n  @Test\n  public void validCityEmpty() {\n    assertTrue(validator.isValid(\"\"));\n  }\n\n  @Test\n  public void invalidCityTooShort() {\n    assertFalse(validator.isValid(\"L\"));\n  }\n\n  @Test\n  public void validCity() {\n    assertTrue(validator.isValid(\"Li\"));\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/FirstnameValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/FirstnameValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 509,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class FirstnameValidatorTest {\n\n  private FirstnameValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new FirstnameValidator();\n  }\n\n  @Test\n  public void validateCorrectFirstname() {\n    assertTrue(validator.isValid());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/ZipCodeValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/ZipCodeValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1029,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class ZipCodeValidatorTest {\n\n  private ZipCodeValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new ZipCodeValidator();\n  }\n\n  @Test\n  public void validZIPCodeNull() {\n    assertTrue(validator.isValid(null));\n  }\n\n  @Test\n  public void validZIPCodeEmpty() {\n    assertTrue(validator.isValid(\"\"));\n  }\n\n  @Test\n  public void invalidZIPCodeTooShort3Digits() {\n    assertFalse(validator.isValid(\"123\"));\n  }\n\n  @Test\n  public void invalidZIPCodeTooLong6Digits() {\n    assertFalse(validator.isValid(\"123456\"));\n  }\n\n  @Test\n  public void validZIPCode4Digits() {\n    assertTrue(validator.isValid(\"1234\"));\n  }\n\n  @Test\n  public void validZIPCode5Digits() {\n    assertTrue(validator.isValid(\"12345\"));\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/AONNumberValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/AONNumberValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 964,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class AONNumberValidatorTest {\n\n  private AONNumberValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new AONNumberValidator();\n  }\n\n  @Test\n  public void validAONNumberNull() {\n    assertTrue(validator.isValid(null));\n  }\n\n  @Test\n  public void validAONNumberEmpty() {\n    assertTrue(validator.isValid(\"\"));\n  }\n\n  @Test\n  public void validateCorrectAONNumber() {\n    assertTrue(validator.isValid(\"123456\"));\n  }\n\n  @Test\n  public void invalidAONNumberTooShort() {\n    assertFalse(validator.isValid(\"12345\"));\n  }\n\n  @Test\n  public void invalidAONNumberContainsInvalidCharacter() {\n    assertFalse(validator.isValid(\"12345678x\"));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/StreetValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/StreetValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 806,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class StreetValidatorTest {\n\n  private StreetValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new StreetValidator();\n  }\n\n  @Test\n  public void validStreetNull() {\n    assertTrue(validator.isValid(null));\n  }\n\n  @Test\n  public void validStreetEmpty() {\n    assertTrue(validator.isValid(\"\"));\n  }\n\n  @Test\n  public void invalidStreetTooShort() {\n    assertFalse(validator.isValid(\"Pa\"));\n  }\n\n  @Test\n  public void validStreet() {\n    assertTrue(validator.isValid(\"Lin\"));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/PartyIdValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/PartyIdValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 949,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class PartyIdValidatorTest {\n\n  private PartyIdValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new PartyIdValidator();\n  }\n\n  @Test\n  public void validPartyIdNull() {\n    assertTrue(validator.isValid(null));\n  }\n\n  @Test\n  public void validPartyIdEmpty() {\n    assertTrue(validator.isValid(\"\"));\n  }\n\n  @Test\n  public void validateCorrectPartyId() {\n    assertTrue(validator.isValid(\"123456789\"));\n  }\n\n  @Test\n  public void invalidPartyIdTooShort() {\n    assertFalse(validator.isValid(\"123\"));\n  }\n\n  @Test\n  public void invalidPartyIdContainsInvalidCharacter() {\n    assertFalse(validator.isValid(\"12345678x\"));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/LastnameValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/LastnameValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 828,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class LastnameValidatorTest {\n\n  private LastnameValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new LastnameValidator();\n  }\n\n  @Test\n  public void validLastnameNull() {\n    assertTrue(validator.isValid(null));\n  }\n\n  @Test\n  public void validLastnameEmpty() {\n    assertTrue(validator.isValid(\"\"));\n  }\n\n  @Test\n  public void validateCorrectLastname() {\n    assertTrue(validator.isValid(\"Preinfalk\"));\n  }\n\n  @Test\n  public void invalidLastname() {\n    assertFalse(validator.isValid(\"Pr\"));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/PhonenumberValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/PhonenumberValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 517,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class PhonenumberValidatorTest {\n\n  private PhonenumberValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new PhonenumberValidator();\n  }\n\n  @Test\n  public void validateCorrectPhonenumber() {\n    assertTrue(validator.isValid());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/BANValidatorTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/shared/validator/BANValidatorTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 917,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\nimport static org.junit.Assert.assertFalse;\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class BANValidatorTest {\n\n  private BANValidator validator;\n\n  @Before\n  public void setup() {\n    validator = new BANValidator();\n  }\n\n  @Test\n  public void validBANNull() {\n    assertTrue(validator.isValid(null));\n  }\n\n  @Test\n  public void validBANEmpty() {\n    assertTrue(validator.isValid(\"\"));\n  }\n\n  @Test\n  public void validateCorrectBAN() {\n    assertTrue(validator.isValid(\"123456789\"));\n  }\n\n  @Test\n  public void invalidBANTooShort() {\n    assertFalse(validator.isValid(\"123\"));\n  }\n\n  @Test\n  public void invalidBANContainsInvalidCharacter() {\n    assertFalse(validator.isValid(\"12345678x\"));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/FlashInfoServiceTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/FlashInfoServiceTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5194,
    "content": "package at.a1ta.cuco.core.service;\n\nimport static org.mockito.Matchers.any;\nimport static org.mockito.Matchers.anyLong;\nimport static org.mockito.Mockito.times;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.Mockito.when;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.cuco.core.dao.db.impl.FlashInfoDaoImpl;\nimport at.a1ta.cuco.core.service.impl.FlashInfoServiceImpl;\nimport at.a1ta.cuco.core.shared.dto.CustomerBlock;\nimport at.a1ta.cuco.core.shared.dto.FlashInfo;\nimport at.a1ta.cuco.core.shared.dto.Tupel;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class FlashInfoServiceTest {\n\n  private FlashInfoServiceImpl service = new FlashInfoServiceImpl();\n  @Mock\n  private FlashInfoDaoImpl flashInfoDao;\n  @Mock\n  private CustomerBlockService customerBlockService;\n\n  @Before\n  public void setUp() {\n    service.setFlashInfoDao(flashInfoDao);\n    service.setCustomerBlockService(customerBlockService);\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void createNew() {\n    FlashInfo flash = new FlashInfo();\n    flash.setRoles(generateRoleList(\"1\", \"2\", \"3\", \"4\"));\n    ArrayList<CustomerBlock> blocks = generateCustomerBlocks(1, 2);\n    blocks.get(0).setData(\"1;2;3\");\n    blocks.get(1).setData(\"4;5;6\");\n    flash.setCustomerBlocks(blocks);\n\n    service.saveFlashInfo(flash);\n    verify(flashInfoDao, times(1)).insertFlashInfo(flash);\n    verify(flashInfoDao, times(4)).insertFlashRole(anyLong(), Matchers.anyString());\n    verify(flashInfoDao, times(1)).insertFlashCustomer((Collection<Tupel<Long, Long>>) any());\n    verify(customerBlockService, times(2)).insertCustomerBlock((CustomerBlock) any());\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void createNewBlocksWithSameCustomers() {\n    FlashInfo flash = new FlashInfo();\n    flash.setRoles(generateRoleList(\"1\"));\n    ArrayList<CustomerBlock> blocks = generateCustomerBlocks(1, 2);\n    blocks.get(0).setData(\"1;2;3\");\n    blocks.get(1).setData(\"2;3;6\");\n    flash.setCustomerBlocks(blocks);\n\n    service.saveFlashInfo(flash);\n    verify(flashInfoDao, times(1)).insertFlashInfo(flash);\n    verify(flashInfoDao, times(1)).insertFlashCustomer((Collection<Tupel<Long, Long>>) any());\n    verify(customerBlockService, times(2)).insertCustomerBlock((CustomerBlock) any());\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void updateNoNewBlocks() {\n    FlashInfo flash = new FlashInfo();\n    flash.setId(1);\n    flash.setRoles(generateRoleList(\"1\", \"2\", \"3\", \"4\"));\n    ArrayList<CustomerBlock> blocks = generateCustomerBlocks(1, 2);\n    blocks.get(0).setData(\"1;2;3\");\n    blocks.get(1).setData(\"4;5;6\");\n    flash.setCustomerBlocks(blocks);\n\n    when(customerBlockService.getCustomerBlocksForFlashInfo(1)).thenReturn(blocks);\n\n    service.saveFlashInfo(flash);\n    verify(flashInfoDao, times(1)).updateFlashInfo(flash);\n    verify(flashInfoDao, times(4)).insertFlashRole(anyLong(), Matchers.anyString());\n    verify(flashInfoDao, times(1)).insertFlashCustomer((Collection<Tupel<Long, Long>>) any());\n    verify(customerBlockService, times(2)).updateCustomerBlock((CustomerBlock) any());\n  }\n\n  @Test\n  public void updateOneNewBlock() {\n    FlashInfo flash = new FlashInfo();\n    flash.setId(1);\n    flash.setRoles(generateRoleList(\"1\"));\n    ArrayList<CustomerBlock> blocks = generateCustomerBlocks(1, 2);\n    blocks.add(new CustomerBlock());\n    flash.setCustomerBlocks(blocks);\n\n    when(customerBlockService.getCustomerBlocksForFlashInfo(1)).thenReturn(generateCustomerBlocks(1, 2));\n\n    service.saveFlashInfo(flash);\n    verify(flashInfoDao, times(1)).updateFlashInfo(flash);\n    verify(customerBlockService, times(2)).updateCustomerBlock((CustomerBlock) any());\n    verify(customerBlockService, times(1)).insertCustomerBlock((CustomerBlock) any());\n  }\n\n  @Test\n  public void updateOneBlockToDelete() {\n    FlashInfo flash = new FlashInfo();\n    flash.setId(1);\n    flash.setRoles(generateRoleList(\"1\"));\n    ArrayList<CustomerBlock> blocks = generateCustomerBlocks(1, 2);\n    flash.setCustomerBlocks(blocks);\n\n    when(customerBlockService.getCustomerBlocksForFlashInfo(1)).thenReturn(generateCustomerBlocks(1, 2, 3));\n\n    service.saveFlashInfo(flash);\n    verify(flashInfoDao, times(1)).updateFlashInfo(flash);\n    verify(customerBlockService, times(2)).updateCustomerBlock((CustomerBlock) any());\n    verify(customerBlockService, times(1)).deleteCustomerBlock(3);\n  }\n\n  private ArrayList<Role> generateRoleList(String... roleNames) {\n    ArrayList<Role> roles = new ArrayList<Role>();\n    for (String name : roleNames) {\n      Role role = new Role();\n      role.setName(name);\n      roles.add(role);\n    }\n    return roles;\n  }\n\n  private ArrayList<CustomerBlock> generateCustomerBlocks(long... ids) {\n    ArrayList<CustomerBlock> blocks = new ArrayList<CustomerBlock>();\n    for (long id : ids) {\n      CustomerBlock block = new CustomerBlock();\n      block.setId(id);\n      blocks.add(block);\n    }\n    return blocks;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/InvoiceServiceTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/InvoiceServiceTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4785,
    "content": "package at.a1ta.cuco.core.service;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Matchers.any;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.times;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.Mockito.when;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.dao.db.InvoiceDao;\nimport at.a1ta.cuco.core.service.impl.InvoiceServiceImpl;\nimport at.a1ta.cuco.core.shared.dto.ClearingAccount;\nimport at.a1ta.cuco.core.shared.dto.Invoice;\nimport at.mobilkom.eai.esb.EsbParam;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSFault;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5IXOSAddress;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5IXOSAddressRes;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromDocument;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponseDocument;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponseDocument.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponse;\n\nimport com.telekomaustriagroup.esb.sap5billinginformation.SAP5BillingInformationStub;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class InvoiceServiceTest {\n  @Mock\n  private SAP5BillingInformationStub stub;\n  @Mock\n  private InvoiceDao invoiceDao;\n  @Mock\n  private SettingService settingService;\n\n  private InvoiceServiceImpl service = new InvoiceServiceImpl();\n\n  @Before\n  public void setup() throws Exception {\n    service.setStub(stub);\n    service.setInvoiceDao(invoiceDao);\n    service.setSettingService(settingService);\n\n    when(settingService.getValue(\"interfaces_ws_WSSAP5_S_RetrieveIXOSAddress_verb\")).thenReturn(\"verb\");\n    when(settingService.getValue(\"interfaces_ws_WSSAP5_S_RetrieveIXOSAddress_sourcesystem\")).thenReturn(\"sourcesystem\");\n    when(settingService.getValue(\"interfaces_ws_WSSAP5_S_RetrieveIXOSAddress_documenttype\")).thenReturn(\"doc\");\n    when(settingService.getValue(\"ext_link_invoiceArchive\")).thenReturn(\"http://arcdb.pta.at:8080/archive?get&docId=[documentId]&contRep=[repositoryId]&pVersion=0045\");\n  }\n\n  @Test\n  public void testInvoiceData() {\n    ArrayList<Long> partyIds = new ArrayList<Long>();\n    partyIds.add(100L);\n    partyIds.add(200L);\n\n    ClearingAccountService clearingAccountService = mock(ClearingAccountService.class);\n    service.setClearingAccountService(clearingAccountService);\n\n    final List<ClearingAccount> clearingAccountsResults = new ArrayList<ClearingAccount>();\n    final ClearingAccount account1 = new ClearingAccount(1L);\n    account1.setPartyId(100L);\n    final ClearingAccount account2 = new ClearingAccount(2L);\n    account2.setPartyId(200L);\n\n    clearingAccountsResults.add(account1);\n    clearingAccountsResults.add(account2);\n\n    when(clearingAccountService.getByPartyIds(partyIds)).thenReturn(clearingAccountsResults);\n\n    service.getInvoiceData(partyIds);\n\n    verify(invoiceDao, times(1)).getByPartyIds(partyIds);\n  }\n\n  @Test\n  public void testGetDownloadLink() throws Exception {\n    // Mocking the ESB service response\n    WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponse response = WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponse.Factory.newInstance();\n    response.setWSSAP5IXOSAddress(WSSAP5IXOSAddress.Factory.newInstance());\n    response.getWSSAP5IXOSAddress().setFault(WSFault.Factory.newInstance());\n    response.getWSSAP5IXOSAddress().getFault().setFaultString(\"\");\n    response.getWSSAP5IXOSAddress().setResponse(WSSAP5IXOSAddressRes.Factory.newInstance());\n    response.getWSSAP5IXOSAddress().getResponse().setArchiveID(\"_archiveID_\");\n    response.getWSSAP5IXOSAddress().getResponse().setDocumentID(\"_documentID_\");\n\n    WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponseDocument responseDocument = mock(WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponseDocument.class);\n    when(stub.retrieveIXOSAddress(any(WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromDocument.class), any(EsbParam.class))).thenReturn(responseDocument);\n    when(responseDocument.getWSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponse()).thenReturn(response);\n\n    String urlAfterExpected = \"http://arcdb.pta.at:8080/archive?get&docId=_documentID_&contRep=_archiveID_&pVersion=0045\";\n\n    Invoice invoice = new Invoice();\n    invoice.setInvoiceId(123456l);\n    String urlAfter = service.getFixedLineInvoiceDownloadLink(invoice);\n    assertEquals(urlAfterExpected, urlAfter);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/CustomerAssignmentServiceTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/CustomerAssignmentServiceTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1361,
    "content": "package at.a1ta.cuco.core.service;\n\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport at.a1ta.cuco.core.dao.esb.CustomerAssignmentDao;\nimport at.a1ta.cuco.core.service.impl.CustomerAssignmentService;\nimport at.a1ta.cuco.core.shared.dto.ContractOwnerAssignment;\n\npublic class CustomerAssignmentServiceTest {\n\n  private CustomerAssignmentService customerAssignmentService;\n  private CustomerAssignmentDao customerAssignmentDao;\n\n  @Before\n  public void setup() {\n    customerAssignmentService = new CustomerAssignmentService();\n    customerAssignmentDao = mock(CustomerAssignmentDao.class);\n  }\n\n  @Test\n  public void testGetParty() {\n    customerAssignmentService.setCustomerAssignmentDao(customerAssignmentDao);\n    ContractOwnerAssignment contractOwnerAssignment1 = mock(ContractOwnerAssignment.class);\n    when(contractOwnerAssignment1.getPartyId()).thenReturn(\"123456\");\n    when(customerAssignmentDao.getContractOwnerAssignmentByBan(\"278900796\")).thenReturn(contractOwnerAssignment1);\n    ContractOwnerAssignment contractOwnerAssignment2 = customerAssignmentService.getContractOwnerAssignmentByBan(\"278900796\");\n    Assert.assertNotNull(contractOwnerAssignment2);\n    Assert.assertEquals(\"123456\", contractOwnerAssignment2.getPartyId());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/IMailServiceTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/IMailServiceTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2385,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.dao.db.SalesInfoDao;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.Task;\n\n@Ignore(\"Integration Test without asserts\")\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = {\"classpath:testApplicationContext-cuco-core.xml\"})\npublic class IMailServiceTest {\n\n  @Autowired\n  MailService mailService;\n\n  @Autowired\n  SalesInfoDao salesInfoDao;\n\n  @Test\n  public void sendTestMail() throws Exception {\n\n    BiteUser assigneeUser = new BiteUser();\n    assigneeUser.setUsername(\"q379421\");\n\n    Task task = new Task();\n    task.setStartDate(new Date());\n    task.setEndDate(new Date());\n    task.setAssigneeUser(assigneeUser);\n\n    SalesInfoNote siNote = new SalesInfoNote();\n    siNote.setTask(task);\n    siNote.setNoteText(\"Das ist der Note Text\");\n    siNote.setPartyId(103303208L);\n    siNote.setSalesInfoNoteId(123L);\n    siNote.setLastModificationUser(assigneeUser);\n\n    mailService.sendVcalMail(siNote);\n  }\n\n  @Test\n  public void sendTestMailNullComment() throws Exception {\n\n    BiteUser assigneeUser = new BiteUser();\n    assigneeUser.setUsername(\"q379421\");\n\n    Task task = new Task();\n    task.setStartDate(new Date());\n    task.setEndDate(new Date());\n    task.setAssigneeUser(assigneeUser);\n\n    SalesInfoNote siNote = new SalesInfoNote();\n    siNote.setTask(task);\n    siNote.setNoteText(null);\n    siNote.setPartyId(103303208L);\n    siNote.setSalesInfoNoteId(123L);\n    siNote.setLastModificationUser(assigneeUser);\n\n    mailService.sendVcalMail(siNote);\n  }\n\n  @Test\n  public void testTaskMailJob() {\n    sendTaskReminderMails();\n  }\n\n  private void sendTaskReminderMails() {\n    List<SalesInfoNote> todaysNotes = salesInfoDao.getNotesForReminderMail();\n    for (SalesInfoNote note : todaysNotes) {\n      try {\n        mailService.sendTaskReminderMail(note);\n      } catch (Exception e) {\n        // logger.error(e.getMessage(), e);\n      }\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/AccessTokenServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/AccessTokenServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5626,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.UUID;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.Setting;\nimport at.a1ta.cuco.core.dao.esb.PartnerCenterLandingPageDao;\nimport at.a1ta.cuco.core.service.AccessTokenService;\nimport at.a1ta.cuco.core.shared.dto.AccessToken;\nimport at.a1ta.cuco.core.shared.dto.PartnerCenterAccessTokenRequest;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class AccessTokenServiceImplTest {\n\n  private static final String DEFAULT_SOURCE_SYSTEM = \"CuCo\";\n  private static final String DEFAULT_TARGET_SYSTEM = \"Black\";\n  private static final String DEFAULT_PORCESS_ID = \"Next\";\n\n  @Mock\n  private PartnerCenterLandingPageDao daoMock;\n\n  @Mock\n  private SettingService settingsMock;\n\n  private AccessTokenServiceImpl service;\n\n  @Before\n  public void setUp() {\n    service = new AccessTokenServiceImpl();\n    service.setLandingPageDao(daoMock);\n    service.setConfigurationService(settingsMock);\n  }\n\n  @Test\n  public void testGetAccessTokenForPartnerCenter() {\n    Mockito.when(daoMock.getAccessToken(Matchers.any(PartnerCenterAccessTokenRequest.class))).thenReturn(createDefaultAccessToken());\n\n    PartnerCenterAccessTokenRequest request = createPartnerCenterAccessTokenRequest(\"43 664 88603737\", DEFAULT_SOURCE_SYSTEM,\n        DEFAULT_PORCESS_ID);\n    AccessToken token = service.getAccessTokenForPartnerCenter(request);\n\n    Assert.assertNotNull(token);\n    Mockito.verifyZeroInteractions(settingsMock);\n    Mockito.verify(daoMock, Mockito.times(1)).getAccessToken(Matchers.any(PartnerCenterAccessTokenRequest.class));\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testGetAccessTokenForPartnerCenterWithoutSourceSystemSet() {\n    PartnerCenterAccessTokenRequest request = createPartnerCenterAccessTokenRequest(\"43 664 88603737\", \"\", DEFAULT_PORCESS_ID);\n    service.getAccessTokenForPartnerCenter(request);\n  }\n\n  @Test\n  public void testGetAccessTokenForPartnerCenterWithSourceSystemFallback() {\n    String settingsKey = AccessTokenService.LANDING_PAGE_DEALER_SETTING_PREFIX + \".frontEndSystem\";\n\n    Mockito.when(daoMock.getAccessToken(Matchers.any(PartnerCenterAccessTokenRequest.class))).thenReturn(createDefaultAccessToken());\n    Mockito.when(settingsMock.getSetting(settingsKey)).thenReturn(createSetting(\"key\", DEFAULT_SOURCE_SYSTEM));\n\n    PartnerCenterAccessTokenRequest request = createPartnerCenterAccessTokenRequest(\"43 664 88603737\", \"\", DEFAULT_PORCESS_ID);\n    AccessToken token = service.getAccessTokenForPartnerCenter(request);\n\n    Assert.assertNotNull(token);\n    Mockito.verify(settingsMock, Mockito.times(1)).getSetting(Matchers.eq(settingsKey));\n    Mockito.verify(daoMock, Mockito.times(1)).getAccessToken(Matchers.any(PartnerCenterAccessTokenRequest.class));\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testGetAccessTokenForPartnerCenterWithoutProcessIdSet() {\n    PartnerCenterAccessTokenRequest request = createPartnerCenterAccessTokenRequest(\"43 664 88603737\", DEFAULT_SOURCE_SYSTEM, \"\");\n    service.getAccessTokenForPartnerCenter(request);\n  }\n\n  @Test\n  public void testGetAccessTokenForPartnerCenterWithProcessIdFallback() {\n    String settingsKey = AccessTokenService.LANDING_PAGE_DEALER_SETTING_PREFIX + \".processId\";\n\n    Mockito.when(daoMock.getAccessToken(Matchers.any(PartnerCenterAccessTokenRequest.class))).thenReturn(createDefaultAccessToken());\n    Mockito.when(settingsMock.getSetting(settingsKey)).thenReturn(createSetting(\"key\", DEFAULT_SOURCE_SYSTEM));\n\n    PartnerCenterAccessTokenRequest request = createPartnerCenterAccessTokenRequest(\"43 664 88603737\", DEFAULT_SOURCE_SYSTEM, \"\");\n    AccessToken token = service.getAccessTokenForPartnerCenter(request);\n\n    Assert.assertNotNull(token);\n    Mockito.verify(settingsMock, Mockito.times(1)).getSetting(Matchers.eq(settingsKey));\n    Mockito.verify(daoMock, Mockito.times(1)).getAccessToken(Matchers.any(PartnerCenterAccessTokenRequest.class));\n  }\n\n  @Test\n  public void testGetAccessTokenForPartnerCenterWhenESBThrowsException() {\n    Mockito.when(daoMock.getAccessToken(Matchers.any(PartnerCenterAccessTokenRequest.class))).thenThrow(\n        new EsbException(\"exception message\"));\n    PartnerCenterAccessTokenRequest request = createPartnerCenterAccessTokenRequest(\"43 664 88603737\", DEFAULT_SOURCE_SYSTEM,\n        DEFAULT_PORCESS_ID);\n    AccessToken token = service.getAccessTokenForPartnerCenter(request);\n\n    Assert.assertEquals(AccessToken.NONE, token);\n  }\n\n  private PartnerCenterAccessTokenRequest createPartnerCenterAccessTokenRequest(String phone, String sourceSystem, String processId) {\n    PartnerCenterAccessTokenRequest request = new PartnerCenterAccessTokenRequest();\n\n    request.setSourceSystem(sourceSystem);\n    String[] msisdnParts = phone.split(\" \");\n    request.setCountryCode(msisdnParts[0]);\n    request.setNationalDestinationCode(msisdnParts[1]);\n    request.setSubscriberNumber(msisdnParts[2]);\n    request.setProcessId(processId);\n\n    return request;\n  }\n\n  private Setting createSetting(String key, String value) {\n    Setting setting = new Setting();\n    setting.setKey(key);\n    setting.setValue(value);\n    return setting;\n  }\n\n  private AccessToken createDefaultAccessToken() {\n    return new AccessToken(DEFAULT_TARGET_SYSTEM, UUID.randomUUID().toString());\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/UnknownAreaCodeServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/UnknownAreaCodeServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3697,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\nimport junit.framework.Assert;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.cuco.core.dao.db.UnknownAreaCodeDao;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class UnknownAreaCodeServiceImplTest {\n\n  private static final String[] AREA_CODES = {\"732\", \"0732\", \"664\", \"0664\", \"699\", \"0699\"};\n\n  @Mock\n  private UnknownAreaCodeDao unknownAreaCodeDaoMock;\n\n  private UnknownAreaCodeServiceImpl service;\n\n  @Before\n  public void setUp() {\n    this.service = new UnknownAreaCodeServiceImpl();\n    service.setUnknownAreaCodeDao(unknownAreaCodeDaoMock);\n  }\n\n  @Test\n  public void testFilterNoUnknownAreaCodes() {\n    Mockito.when(unknownAreaCodeDaoMock.getAllUnknownAreaCodes()).thenReturn(Collections.<UnknownAreaCode> emptyList());\n    List<PhoneNumber> result = service.filterPhoneNumbersWithUnknownAreaCode(initDefaultPhoneNumbers());\n    Assert.assertEquals(6, result.size(), 0);\n  }\n\n  @Test\n  public void testFilterAreaCodesWithoutLeadingZero() {\n    initUnknownAreaCodes(\"699\", \"650\");\n    List<PhoneNumber> result = service.filterPhoneNumbersWithUnknownAreaCode(initDefaultPhoneNumbers());\n    Assert.assertEquals(4, result.size(), 0);\n    for (PhoneNumber number : result) {\n      Assert.assertFalse(number.getCityIdentificationNumber().contains(\"699\"));\n      Assert.assertFalse(number.getCityIdentificationNumber().contains(\"650\"));\n    }\n  }\n\n  @Test\n  public void testFilterAreaCodesWithLeadingZero() {\n    initUnknownAreaCodes(\"0699\", \"0650\");\n    List<PhoneNumber> result = service.filterPhoneNumbersWithUnknownAreaCode(initDefaultPhoneNumbers());\n    Assert.assertEquals(4, result.size(), 0);\n    for (PhoneNumber number : result) {\n      Assert.assertFalse(number.getCityIdentificationNumber().contains(\"699\"));\n      Assert.assertFalse(number.getCityIdentificationNumber().contains(\"650\"));\n    }\n  }\n\n  private List<PhoneNumber> initDefaultPhoneNumbers() {\n    return initPhoneNumbers(AREA_CODES);\n  }\n\n  private List<PhoneNumber> initPhoneNumbers(String... strings) {\n    List<PhoneNumber> numbers = new ArrayList<PhoneNumber>(strings.length);\n    for (String s : strings) {\n      PhoneNumber phoneNumber = new PhoneNumber();\n      phoneNumber.setCityIdentificationNumber(s);\n      numbers.add(phoneNumber);\n    }\n    return numbers;\n  }\n\n  private void initUnknownAreaCodes(String... strings) {\n    List<UnknownAreaCode> codes = new ArrayList<UnknownAreaCode>(strings.length);\n    for (String s : strings) {\n      codes.add(new UnknownAreaCode(s, \"\"));\n    }\n    Mockito.when(unknownAreaCodeDaoMock.getAllUnknownAreaCodes()).thenReturn(codes);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/KumsCustomerServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/KumsCustomerServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5674,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport static org.junit.Assert.*;\nimport static org.mockito.Matchers.*;\nimport static org.mockito.Mockito.*;\n\nimport java.rmi.RemoteException;\n\nimport net.sf.ehcache.CacheManager;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.dto.EsbAccessParameter;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.shared.dto.VipStatus;\nimport at.mobilkom.eai.esb.EsbParam;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSUCHEPRIMBERECHT2;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSUCHEPRIMBERECHTAttr;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSUCHEPRIMBERECHTOutput2;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseDocument;\n\nimport com.telekomaustriagroup.esb.kumscustomer.KUMSCustomerStub;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class KumsCustomerServiceImplTest {\n\n  final static EsbAccessParameter STUB_PARAMS = new EsbAccessParameter(\"DEV\", \"ems1e.a1telekom.inside:17322\", \"ems1e.a1telekom.inside:17322\", \"ta-cuco\", \"ta\", 60000l, \"ta-dev\", \"http://esb-e.a1telekom.inside:8080/esb/si:ta-dev\");\n\n  private static final String PARTY_ID = \"12345678\";\n\n  @Mock\n  private SettingService settingService;\n\n  @Mock\n  private KUMSCustomerStub stub;\n\n  private KumsCustomerServiceImpl customerService = new KumsCustomerServiceImpl();\n\n  @Before\n  public void setUp() {\n    customerService.setStub(stub);\n    customerService.setSettingService(settingService);\n    CacheManager.getInstance().getCache(\"VIPCache\").removeAll();\n  }\n\n  @Test\n  public void webserviceError() throws RemoteException {\n    when(stub.SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull())).thenThrow(new RuntimeException());\n    VipStatus vipStatus = customerService.getVipStatus(PARTY_ID);\n\n    verify(stub).SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull());\n    assertEquals(VipStatus.State.UNKNOWN, vipStatus.getState());\n  }\n\n  @Test\n  public void workingCallVip() throws RemoteException {\n    when(stub.SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull())).thenReturn(createResponseDocument());\n    VipStatus vipStatus = customerService.getVipStatus(PARTY_ID);\n\n    verify(stub).SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull());\n    assertEquals(VipStatus.State.VIP, vipStatus.getState());\n  }\n\n  @Test\n  public void workingCallAndCacheHitVip() throws RemoteException {\n    when(stub.SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull())).thenReturn(createResponseDocument());\n    VipStatus vipStatus = customerService.getVipStatus(PARTY_ID);\n    customerService.getVipStatus(PARTY_ID);\n\n    verify(stub, times(1)).SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull());\n    assertEquals(VipStatus.State.VIP, vipStatus.getState());\n  }\n\n  @Test\n  public void workingCallNoVip() throws RemoteException {\n    WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseDocument response = createResponseDocument();\n    response.getWSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponse().getWSKUMSSUCHEPRIMBERECHT2().getWSKUMSSUCHEPRIMBERECHTOutput().setSbText(null);\n    when(stub.SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull())).thenReturn(response);\n\n    VipStatus vipStatus = customerService.getVipStatus(PARTY_ID);\n\n    verify(stub).SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull());\n    assertEquals(VipStatus.State.NO_VIP, vipStatus.getState());\n  }\n\n  @Test\n  public void workingCallFault() throws RemoteException {\n    WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseDocument response = createResponseDocument();\n    response.getWSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponse().getWSKUMSSUCHEPRIMBERECHT2().getFault().setFaultString(\"irgendwas\");\n    when(stub.SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull())).thenReturn(response);\n\n    VipStatus vipStatus = customerService.getVipStatus(PARTY_ID);\n\n    verify(stub).SuchePrimaer((WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument) any(), (EsbParam) isNull());\n    assertEquals(VipStatus.State.UNKNOWN, vipStatus.getState());\n  }\n\n  private WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseDocument createResponseDocument() {\n    WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseDocument doc = WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseDocument.Factory.newInstance();\n    WSKUMSSUCHEPRIMBERECHT2 response = doc.addNewWSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponse().addNewWSKUMSSUCHEPRIMBERECHT2();\n    response.addNewFault();\n\n    WSKUMSSUCHEPRIMBERECHTOutput2 output = response.addNewWSKUMSSUCHEPRIMBERECHTOutput();\n    WSKUMSSUCHEPRIMBERECHTAttr sbText = WSKUMSSUCHEPRIMBERECHTAttr.Factory.newInstance();\n    sbText.setValue(\"1\");\n    output.setSbText(sbText);\n    return doc;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/CustomerUnlockServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/CustomerUnlockServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8995,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.ArgumentCaptor;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.dao.db.CustomerUnlockRequestDao;\nimport at.a1ta.cuco.core.service.CuscoUnlockService;\nimport at.a1ta.cuco.core.shared.dto.Customer;\nimport at.a1ta.cuco.core.shared.dto.access.ContextAwareCustomerUnlockRequest;\nimport at.a1ta.cuco.core.shared.dto.access.UnlockStateEnum;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class CustomerUnlockServiceImplTest {\n\n  @Mock\n  private CustomerUnlockRequestDao unlockDaoMock;\n\n  @Mock\n  private CuscoUnlockService cuscoUnlockService;\n\n  private CustomerUnlockServiceImpl unlockService;\n\n  @Before\n  public void setUp() {\n    unlockService = new CustomerUnlockServiceImpl();\n    unlockService.setCuscoUnlockService(cuscoUnlockService);\n    unlockService.setUnlockDao(unlockDaoMock);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testCheckIfUnlockedNullCusomer() {\n    unlockService.checkIfUnlockded(null, new UserInfo(), \"session-id\", \"job-id\");\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testCheckIfUnlockedNullUser() {\n    unlockService.checkIfUnlockded(new Customer(), null, \"session-id\", \"job-id\");\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testCheckIfUnlockedNullJob() {\n    unlockService.checkIfUnlockded(new Customer(), new UserInfo(), \"session-id\", null);\n  }\n\n  @Test\n  public void testCheckIfUnlockedDaoRetunsNull() {\n    Assert.assertFalse(unlockService.checkIfUnlockded(new Customer(), new UserInfo(), \"session-id\", \"job-id\"));\n  }\n\n  @Test\n  public void testCheckIfUnlockedRequestPending() {\n    ContextAwareCustomerUnlockRequest result = createFor(0, 12, \"session\");\n    result.setState(UnlockStateEnum.PENDING);\n    Mockito.when(unlockDaoMock.findByCustomerIdAndUsernameAndJobIdAndSessionKey(Matchers.anyLong(), (BiteUser) Matchers.anyObject(), Matchers.anyString(), Matchers.anyString())).thenReturn(result);\n\n    Assert.assertFalse(unlockService.checkIfUnlockded(new Customer(), new UserInfo(), \"session-id\", \"job-id\"));\n    Mockito.verify(unlockDaoMock, Mockito.times(1)).findByCustomerIdAndUsernameAndJobIdAndSessionKey(Matchers.eq(0L), (BiteUser) Matchers.anyObject(), Matchers.eq(\"job-id\"),\n        Matchers.eq(\"session-id\"));\n  }\n\n  @Test\n  public void testCheckIfUnlockedRequestFinishedWithError() {\n    ContextAwareCustomerUnlockRequest result = createFor(0, 12, \"session\");\n    result.setState(UnlockStateEnum.FINISHED_ERROR);\n    Mockito.when(unlockDaoMock.findByCustomerIdAndUsernameAndJobIdAndSessionKey(Matchers.anyLong(), (BiteUser) Matchers.anyObject(), Matchers.anyString(), Matchers.anyString())).thenReturn(result);\n\n    Assert.assertFalse(unlockService.checkIfUnlockded(new Customer(), new UserInfo(), \"session-id\", \"job-id\"));\n    Mockito.verify(unlockDaoMock, Mockito.times(1)).findByCustomerIdAndUsernameAndJobIdAndSessionKey(Matchers.eq(0L), (BiteUser) Matchers.anyObject(), Matchers.eq(\"job-id\"),\n        Matchers.eq(\"session-id\"));\n  }\n\n  @Test\n  public void testCheckIfUnlockedRequestFinishedLocked() {\n    ContextAwareCustomerUnlockRequest result = createFor(0, 12, \"session\");\n    result.setState(UnlockStateEnum.FINISHED_LOCKED);\n    Mockito.when(unlockDaoMock.findByCustomerIdAndUsernameAndJobIdAndSessionKey(Matchers.anyLong(), (BiteUser) Matchers.anyObject(), Matchers.anyString(), Matchers.anyString())).thenReturn(result);\n\n    Assert.assertFalse(unlockService.checkIfUnlockded(new Customer(), new UserInfo(), \"session-id\", \"job-id\"));\n    Mockito.verify(unlockDaoMock, Mockito.times(1)).findByCustomerIdAndUsernameAndJobIdAndSessionKey(Matchers.eq(0L), (BiteUser) Matchers.anyObject(), Matchers.eq(\"job-id\"),\n        Matchers.eq(\"session-id\"));\n  }\n\n  @Test\n  public void testCheckIfUnlockedRequestFinishedUnlocked() {\n    ContextAwareCustomerUnlockRequest result = createFor(0, 12, \"session\");\n    result.setState(UnlockStateEnum.FINISHED_UNLOCKED);\n    Mockito.when(unlockDaoMock.findByCustomerIdAndUsernameAndJobIdAndSessionKey(Matchers.anyLong(), (BiteUser) Matchers.anyObject(), Matchers.anyString(), Matchers.anyString())).thenReturn(result);\n\n    Assert.assertTrue(unlockService.checkIfUnlockded(new Customer(), new UserInfo(), \"session-id\", \"job-id\"));\n    Mockito.verify(unlockDaoMock, Mockito.times(1)).findByCustomerIdAndUsernameAndJobIdAndSessionKey(Matchers.eq(0L), (BiteUser) Matchers.anyObject(), Matchers.eq(\"job-id\"),\n        Matchers.eq(\"session-id\"));\n  }\n\n  @Test\n  public void testCheckIfUnlockedForSessionTrue() {\n    ContextAwareCustomerUnlockRequest bean = createFor(0, 12, \"session\");\n    bean.setState(UnlockStateEnum.FINISHED_UNLOCKED);\n    ArrayList<ContextAwareCustomerUnlockRequest> result = new ArrayList<ContextAwareCustomerUnlockRequest>();\n    result.add(bean);\n\n    Mockito.when(unlockDaoMock.findByCustomerIdAndUsernameAndContextKey(Matchers.anyLong(), (BiteUser) Matchers.anyObject(), Matchers.anyString())).thenReturn(result);\n\n    Assert.assertTrue(unlockService.checkIfUnlockedForSession(new Customer(), new UserInfo(), \"session-id\"));\n  }\n\n  @Test\n  public void testCheckIfUnlockedForSessionFalse() {\n    ContextAwareCustomerUnlockRequest bean = createFor(0, 12, \"session\");\n    bean.setState(UnlockStateEnum.FINISHED_LOCKED);\n    ArrayList<ContextAwareCustomerUnlockRequest> result = new ArrayList<ContextAwareCustomerUnlockRequest>();\n    result.add(bean);\n\n    Mockito.when(unlockDaoMock.findByCustomerIdAndUsernameAndContextKey(Matchers.anyLong(), (BiteUser) Matchers.anyObject(), Matchers.anyString())).thenReturn(result);\n\n    Assert.assertFalse(unlockService.checkIfUnlockedForSession(new Customer(), new UserInfo(), \"session-id\"));\n  }\n\n  @Test\n  public void testCheckIfUnlockedForSessionMultiResult() {\n    ContextAwareCustomerUnlockRequest locked = createFor(0, 12, \"session\");\n    locked.setState(UnlockStateEnum.FINISHED_LOCKED);\n    ContextAwareCustomerUnlockRequest unlocked = createFor(0, 12, \"session\");\n    unlocked.setState(UnlockStateEnum.FINISHED_UNLOCKED);\n\n    ArrayList<ContextAwareCustomerUnlockRequest> result = new ArrayList<ContextAwareCustomerUnlockRequest>();\n    result.add(locked);\n    result.add(unlocked);\n\n    Mockito.when(unlockDaoMock.findByCustomerIdAndUsernameAndContextKey(Matchers.anyLong(), (BiteUser) Matchers.anyObject(), Matchers.anyString())).thenReturn(result);\n\n    Assert.assertTrue(unlockService.checkIfUnlockedForSession(new Customer(), new UserInfo(), \"session-id\"));\n  }\n\n  @Test\n  public void testLockOverride() {\n    ContextAwareCustomerUnlockRequest locked = createFor(0, 12, \"session\");\n    locked.setState(UnlockStateEnum.FINISHED_LOCKED);\n    ArrayList<ContextAwareCustomerUnlockRequest> result = new ArrayList<ContextAwareCustomerUnlockRequest>();\n    result.add(locked);\n\n    Mockito.when(unlockDaoMock.findByCustomerIdAndUsernameAndContextKey(Matchers.anyLong(), (BiteUser) Matchers.anyObject(), Matchers.anyString())).thenReturn(result);\n\n    unlockService.lockOverride(new Customer(), new UserInfo(), \"session-id\", UnlockStateEnum.FINISHED_UNLOCKED);\n\n    ArgumentCaptor<ContextAwareCustomerUnlockRequest> captor = ArgumentCaptor.forClass(ContextAwareCustomerUnlockRequest.class);\n    Mockito.verify(unlockDaoMock, Mockito.times(1)).update(captor.capture());\n\n    Assert.assertEquals(UnlockStateEnum.FINISHED_UNLOCKED, captor.getValue().getState());\n    Assert.assertTrue(captor.getValue().getFinished().getTime() >= captor.getValue().getCreated().getTime());\n    Assert.assertEquals(locked.getSessionKey(), captor.getValue().getSessionKey());\n  }\n\n  private ContextAwareCustomerUnlockRequest createFor(long customerId, long userId, String session) {\n    ContextAwareCustomerUnlockRequest request = new ContextAwareCustomerUnlockRequest();\n    request.setUser(new BiteUser());\n    request.setCustomerId(customerId);\n    request.getUser().setId(userId);\n    request.setSessionKey(session);\n    return request;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/PayableTicketServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/PayableTicketServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4547,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.impl;\n\nimport java.util.Collections;\nimport java.util.Date;\n\nimport org.hamcrest.Matchers;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.dao.PersonDao;\nimport at.a1ta.bite.core.shared.Strategy;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.cd.CdPerson;\nimport at.a1ta.bite.data.clarify.service.ClarifyInteractionService;\nimport at.a1ta.bite.data.clarify.shared.dto.ClarifyInteraction;\nimport at.a1ta.cuco.core.dao.db.PayableTicketDao;\nimport at.a1ta.cuco.core.dao.esb.BrianDao;\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class PayableTicketServiceImplTest {\n\n  private static final String NT_USER = \"q907291\";\n  private long CHARGE_TYPE_ADX = 3;\n  private long CHARGE_TYPE_SIMBA = 2;\n\n  @Mock\n  private PayableTicketDao ticketDaoMock;\n\n  @Mock\n  private BrianDao brainDaoMock;\n\n  @Mock\n  private ClarifyInteractionService interactionServiceMock;\n\n  @Mock\n  private PersonDao personDaoMock;\n\n  private PayableTicketServiceImpl ticketService;\n\n  @Before\n  public void setUp() {\n    ticketService = new PayableTicketServiceImpl(Collections.<Strategy<PayableTicket>> emptyList());\n    ticketService.setPayableTicketDao(ticketDaoMock);\n    ticketService.setBrianDao(brainDaoMock);\n    ticketService.setPersonDao(personDaoMock);\n    ticketService.setInteractionService(interactionServiceMock);\n\n    Mockito.when(personDaoMock.getPerson(org.mockito.Matchers.any(String.class))).thenReturn(new CdPerson(NT_USER));\n  }\n\n  @Test\n  public void testInsertTicketSetsExportDateToNowWhenChargingTypeIsAdx() {\n    Date timestamp = new Date();\n    PayableTicket ticket = createDefaultTicket(CHARGE_TYPE_ADX);\n    ticketService.insertTicket(ticket);\n\n    Assert.assertThat(timestamp, Matchers.lessThanOrEqualTo(ticket.getExportedDate()));\n  }\n\n  @Test\n  public void testInsertTicketDoesNotSetExportDateWhenChargingTypeIsNonAdx() {\n    PayableTicket ticket = createDefaultTicket(CHARGE_TYPE_SIMBA);\n    ticketService.insertTicket(ticket);\n\n    Assert.assertNull(ticket.getExportedDate());\n  }\n\n  @Test\n  public void testInsertTicketCreatesInteractionWhenTransactionSucessfullAndChargeTypeIsSimba() {\n    ticketService.afterPropertiesSet();\n    PayableTicket ticket = createDefaultTicket(CHARGE_TYPE_SIMBA);\n    ticketService.insertTicket(ticket);\n\n    Mockito.verify(interactionServiceMock, Mockito.times(1)).saveInteraction(org.mockito.Matchers.any(ClarifyInteraction.class));\n  }\n\n  @Test\n  public void testInsertTicketDoesNotCreateInteractionWhenTransactionSucessfullAndChargeTypeIsAdx() {\n    ticketService.afterPropertiesSet();\n    PayableTicket ticket = createDefaultTicket(CHARGE_TYPE_ADX);\n    ticketService.insertTicket(ticket);\n\n    Mockito.verifyZeroInteractions(interactionServiceMock);\n  }\n\n  @Test\n  public void testInsertTicketDoesNotCreateInteractionOnError() {\n    ticketService.afterPropertiesSet();\n    try {\n      ticketService.insertTicket(createDefaultTicket(CHARGE_TYPE_ADX));\n    } catch (Exception e) {\n      // do nothing\n    }\n    Mockito.verifyZeroInteractions(interactionServiceMock);\n  }\n\n  private PayableTicket createDefaultTicket(long chargeType) {\n    BiteUser user = new BiteUser();\n    user.setUsername(\"username\");\n    user.setFirstName(\"asdf\");\n    user.setLastName(\"asdf\");\n    user.setId(120L);\n    PayableTicket ticket = PayableTicket.builder().chargedAs(new ChargingType(chargeType)).createdBy(user).build();\n    ticket.setClearingAccountNumber(1L);\n    ticket.setCustomerId(1L);\n    return ticket;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/IAutoVvlServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/IAutoVvlServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1598,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.junit.Assert;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport at.a1ta.cuco.core.service.AutoVvlService;\nimport at.a1ta.cuco.core.shared.dto.product.AutoVvlInfo;\nimport at.a1ta.cuco.core.shared.dto.product.CallNumber;\n\n@Ignore\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = {\"classpath:testApplicationContext-cuco-core.xml\"})\npublic class IAutoVvlServiceImplTest {\n\n  @Autowired\n  AutoVvlService autoVvlService;\n\n  @Test\n  public void testBan() {\n    AutoVvlInfo autoVvlInfo = autoVvlService.getAutoVvlInfoByBan(\"1\");\n    Assert.assertNotNull(autoVvlInfo);\n    // TODO extend asserts\n  }\n\n  @Test\n  public void testCallnumber() {\n    CallNumber callNumber = new CallNumber();\n    callNumber.setCountryCode(\"0\");\n    callNumber.setOnkz(\"0\");\n    callNumber.setTnum(\"2\");\n\n    AutoVvlInfo autoVvlInfo = autoVvlService.getAutoVvlInfoByCallNumber(callNumber);\n    Assert.assertNotNull(autoVvlInfo);\n    Assert.assertNotNull(autoVvlInfo.getAutoVvlStatus());\n    Assert.assertNotNull(autoVvlInfo.getAutoExtendedCommitmentActPeriodStartTime());\n    Assert.assertNotNull(autoVvlInfo.getAutoExtendedCommitmentActPeriodEndTime());\n    Assert.assertNotNull(autoVvlInfo.getAutoExtendedCommitmentNextPeriodStartTime());\n    Assert.assertNotNull(autoVvlInfo.getLatestCommitmentEndDate());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/GamificationHttpServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/GamificationHttpServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2258,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.impl;\n\nimport junit.framework.Assert;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.cuco.core.shared.dto.GamificationResponse;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class GamificationHttpServiceImplTest {\n\n  private static final String[] AREA_CODES = {\"732\", \"0732\", \"664\", \"0664\", \"699\", \"0699\"};\n\n  private GamificationHttpServiceImpl service;\n\n  @Before\n  public void setUp() {\n    this.service = new GamificationHttpServiceImpl();\n  }\n\n  @Test\n  public void testFilterNoUnknownAreaCodes() {\n    // TODO\n    // String input =\n    // \"{\\\"data\\\": {\\\"cucoMessages\\\": {\\\"agentId\\\": \\\"1\\\",\\\"messages\\\":    [            {         \\\"messageUid\\\": \\\"d3dcab1f-2591-41ab-9dfe-9e812150011b\\\",         \\\"timestamp\\\": \\\"1502705968714\\\",         \\\"title\\\": \\\"Seamless multimedia analyzer\\\",         \\\"message\\\": \\\"Accusamus ad et eligendi voluptatibus in.\\\",         \\\"type\\\": \\\"battle\\\",         \\\"url\\\": \\\"http://www.google.at\\\"      },            {         \\\"messageUid\\\": \\\"6dad222d-6d19-4eb2-ad14-5f1b1bcd91c3\\\",         \\\"timestamp\\\": \\\"1502705968715\\\",         \\\"title\\\": \\\"User-centric bi-directional ability\\\",         \\\"message\\\": \\\"Illum fugiat sunt laudantium qui quia.\\\",         \\\"type\\\": \\\"battle\\\",         \\\"url\\\": \\\"http://www.google.at\\\"      }   ]}}}\";\n    GamificationResponse result = new GamificationResponse();\n    Assert.assertNotNull(result);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/ProductBrowserServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/ProductBrowserServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 14979,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport static org.mockito.Matchers.anyLong;\nimport static org.mockito.Mockito.doReturn;\nimport static org.mockito.Mockito.when;\n\nimport java.net.MalformedURLException;\nimport java.rmi.RemoteException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\n\nimport org.hamcrest.core.IsInstanceOf;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.Spy;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.service.CustomerEquipmentService;\nimport at.a1ta.cuco.core.service.PartyService;\nimport at.a1ta.cuco.core.service.customerequipment.ProductBrowserServiceImpl;\nimport at.a1ta.cuco.core.shared.dto.IndexationStatus;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentConsignee;\nimport at.a1ta.cuco.core.shared.dto.product.AccountNode;\nimport at.a1ta.cuco.core.shared.dto.product.BaseNode;\nimport at.a1ta.cuco.core.shared.dto.product.Location;\nimport at.a1ta.cuco.core.shared.dto.product.LocationNode;\nimport at.a1ta.cuco.core.shared.dto.product.ProductTree;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionNode;\nimport at.a1telekom.eai.customerinventory.Address;\nimport at.a1telekom.eai.customerinventory.FormattedAddress;\nimport at.a1telekom.eai.customerinventory.Subscription;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class ProductBrowserServiceImplTest {\n\n  public enum Kind {\n    SINGLE(1), SAME_ADDR(2), SAME_LOC(3), SIMILAR_ADDR(4), DIFFERENT(5);\n\n    long partyId;\n\n    private Kind(long partyId) {\n      this.partyId = partyId;\n\n    }\n  }\n\n  @Spy\n  ProductBrowserServiceImpl productBrowserServiceImpl;\n\n  @Mock\n  PartyService partyServiceImpl;\n\n  @Mock\n  SettingService settingService;\n  @Mock\n  CustomerEquipmentService customerEquipmentService;\n\n  @Before\n  public void setup() throws MalformedURLException, RemoteException {\n    Party party = new Party();\n    doReturn(party).when(partyServiceImpl).get(anyLong());\n\n    productBrowserServiceImpl.setPartyService(partyServiceImpl);\n\n    ArrayList<EquipmentConsignee> consignees = new ArrayList<EquipmentConsignee>();\n    doReturn(consignees).when(customerEquipmentService).getEquipmentConsignees(anyLong());\n    productBrowserServiceImpl.setCustomerEquipmentService(customerEquipmentService);\n    when(settingService.getValue(\"productBrowser.showMAMInfo\")).thenReturn(\"true\");\n    productBrowserServiceImpl.setSettingService(settingService);\n    doReturn(createMockSubscriptions(Kind.SINGLE)).when(productBrowserServiceImpl).getLocationSubscriptionsMap(Kind.SINGLE.partyId);\n    doReturn(createMockSubscriptions(Kind.SAME_ADDR)).when(productBrowserServiceImpl).getLocationSubscriptionsMap(Kind.SAME_ADDR.partyId);\n    doReturn(createMockSubscriptions(Kind.SAME_LOC)).when(productBrowserServiceImpl).getLocationSubscriptionsMap(Kind.SAME_LOC.partyId);\n    doReturn(createMockSubscriptions(Kind.SIMILAR_ADDR)).when(productBrowserServiceImpl).getLocationSubscriptionsMap(Kind.SIMILAR_ADDR.partyId);\n    doReturn(createMockSubscriptions(Kind.DIFFERENT)).when(productBrowserServiceImpl).getLocationSubscriptionsMap(Kind.DIFFERENT.partyId);\n\n  }\n\n  @Test\n  public void singleAddresseTest() {\n    test(Kind.SINGLE.partyId, 1);\n  }\n\n  @Test\n  public void differentAddressesTest() {\n    test(Kind.DIFFERENT.partyId, 2);\n  }\n\n  @Test\n  public void sameAddressTest() {\n    test(Kind.SAME_ADDR.partyId, 1);\n  }\n\n  @Test\n  public void sameLocTest() {\n    test(Kind.SAME_LOC.partyId, 1);\n  }\n\n  @Test\n  public void similarAddressTest() {\n    test(Kind.SIMILAR_ADDR.partyId, 1);\n  }\n\n  @Test\n  public void testMapSubscritionTreeToParent() {\n    LocationNode parent = new LocationNode();\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.addNewCustomerAccount().setAccountNumber(\"1234\");\n    subscription.setPartyId(\"1\");\n    productBrowserServiceImpl.mapSubscritionTreeToParent(Arrays.asList(subscription), parent);\n\n    ArrayList<BaseNode> nodes = parent.getChildren();\n    Assert.assertThat(nodes.get(0), IsInstanceOf.instanceOf(AccountNode.class));\n\n    AccountNode banNode = (AccountNode) nodes.iterator().next();\n\n    Assert.assertEquals(\"1234\", banNode.getAccountNumber());\n    Assert.assertEquals(parent, banNode.getParent());\n    Assert.assertEquals(1, banNode.getChildren().size());\n    Assert.assertEquals(banNode, banNode.getChildren().get(0).getParent());\n  }\n\n  @Test\n  public void testMapSubscritionTreeToParent_IndexedAccount() {\n    LocationNode parent = new LocationNode();\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.setPartyId(\"1\");\n    subscription.addNewCustomerAccount().setAccountNumber(\"1234\");\n    subscription.getCustomerAccount().setIdxExemption(false);\n    productBrowserServiceImpl.mapSubscritionTreeToParent(Arrays.asList(subscription), parent);\n\n    ArrayList<BaseNode> nodes = parent.getChildren();\n    Assert.assertThat(nodes.get(0), IsInstanceOf.instanceOf(AccountNode.class));\n\n    AccountNode banNode = (AccountNode) nodes.iterator().next();\n\n    Assert.assertEquals(IndexationStatus.INDEXED, banNode.getIdxStatus());\n  }\n\n  @Test\n  public void testMapSubscritionTreeToParent_NotIndexedAccount() {\n    LocationNode parent = new LocationNode();\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.setPartyId(\"1\");\n    subscription.addNewCustomerAccount().setAccountNumber(\"1234\");\n    subscription.getCustomerAccount().setIdxExemption(true);\n    productBrowserServiceImpl.mapSubscritionTreeToParent(Arrays.asList(subscription), parent);\n\n    ArrayList<BaseNode> nodes = parent.getChildren();\n    Assert.assertThat(nodes.get(0), IsInstanceOf.instanceOf(AccountNode.class));\n\n    AccountNode banNode = (AccountNode) nodes.iterator().next();\n\n    Assert.assertEquals(IndexationStatus.NOT_INDEXED, banNode.getIdxStatus());\n  }\n\n  @Test\n  public void testMapSubscritionTreeToParent_NotAvailable() {\n    LocationNode parent = new LocationNode();\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.setPartyId(\"1\");\n    subscription.addNewCustomerAccount().setAccountNumber(\"1234\");\n    productBrowserServiceImpl.mapSubscritionTreeToParent(Arrays.asList(subscription), parent);\n\n    ArrayList<BaseNode> nodes = parent.getChildren();\n    Assert.assertThat(nodes.get(0), IsInstanceOf.instanceOf(AccountNode.class));\n\n    AccountNode banNode = (AccountNode) nodes.iterator().next();\n\n    Assert.assertEquals(IndexationStatus.NOT_AVAILABLE, banNode.getIdxStatus());\n  }\n\n  @Test\n  public void testMapSubscritionTreeToParentNoBanPresent() {\n    LocationNode parent = new LocationNode();\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.setPartyId(\"1\");\n    productBrowserServiceImpl.mapSubscritionTreeToParent(Arrays.asList(subscription), parent);\n    Assert.assertThat(parent.getChildren().get(0), IsInstanceOf.instanceOf(SubscriptionNode.class));\n  }\n\n  private void test(long partyId, int expectedNumberOfLocations) {\n    ArrayList<Long> partyIds = new ArrayList<Long>();\n    partyIds.add(partyId);\n\n    ProductTree tree = productBrowserServiceImpl.getSubscriptionTree(partyIds, \"\", false);\n    HashMap<Long, ArrayList<Location>> locationMap = tree.getLocationMap();\n    ArrayList<Location> list = locationMap.get(partyId);\n    Assert.assertEquals(expectedNumberOfLocations, list.size());\n  }\n\n  private HashMap<String, ArrayList<Subscription>> createMockSubscriptions(Kind kind) {\n    HashMap<String, ArrayList<Subscription>> mockSubscriptions = null;\n\n    switch (kind) {\n      case SINGLE:\n        return createSingleSubscription();\n      case DIFFERENT:\n        return createDifferentSubscriptions();\n      case SAME_ADDR:\n        return createSameAddressSubscriptions();\n      case SAME_LOC:\n        return createSameLocSubscriptions();\n      case SIMILAR_ADDR:\n        return createSimilarAddressSubscriptions();\n      default:\n        break;\n    }\n\n    return mockSubscriptions;\n  }\n\n  private HashMap<String, ArrayList<Subscription>> createSingleSubscription() {\n    FormattedAddress formattedAddress = FormattedAddress.Factory.newInstance();\n    formattedAddress.setAddressLine1(\"Seebach 11\");\n    formattedAddress.setAddressLine2(\"4560 Kirchdorf\");\n    formattedAddress.setAddressLine3(\"\");\n\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.setPartyId(\"1\");\n    Address address = Address.Factory.newInstance();\n    address.setFormattedAddress(formattedAddress);\n    subscription.setAddress(address);\n\n    ArrayList<Subscription> subscriptions = new ArrayList<Subscription>();\n    subscriptions.add(subscription);\n\n    HashMap<String, ArrayList<Subscription>> mockSubscriptions = new HashMap<String, ArrayList<Subscription>>();\n    mockSubscriptions.put(\"123\", subscriptions);\n\n    return mockSubscriptions;\n  }\n\n  private HashMap<String, ArrayList<Subscription>> createDifferentSubscriptions() {\n    FormattedAddress formattedAddress = FormattedAddress.Factory.newInstance();\n    formattedAddress.setAddressLine1(\"Seebach 11\");\n    formattedAddress.setAddressLine2(\"4560 Kirchdorf\");\n    formattedAddress.setAddressLine3(\"\");\n\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.setPartyId(\"1\");\n    Address address = Address.Factory.newInstance();\n    address.setFormattedAddress(formattedAddress);\n    subscription.setAddress(address);\n    FormattedAddress formattedAddress1 = FormattedAddress.Factory.newInstance();\n    formattedAddress1.setAddressLine1(\"Steinfeld 58\");\n    formattedAddress1.setAddressLine2(\"4563 Micheldorf\");\n    formattedAddress1.setAddressLine3(\"\");\n\n    Subscription subscription1 = Subscription.Factory.newInstance();\n    Address address1 = Address.Factory.newInstance();\n    address1.setFormattedAddress(formattedAddress1);\n    subscription1.setAddress(address1);\n    subscription1.setPartyId(\"1\");\n    ArrayList<Subscription> subscriptions = new ArrayList<Subscription>();\n    subscriptions.add(subscription);\n    ArrayList<Subscription> subscriptions1 = new ArrayList<Subscription>();\n    subscriptions1.add(subscription1);\n\n    HashMap<String, ArrayList<Subscription>> mockSubscriptions = new HashMap<String, ArrayList<Subscription>>();\n    mockSubscriptions.put(\"123\", subscriptions);\n    mockSubscriptions.put(\"234\", subscriptions1);\n\n    return mockSubscriptions;\n  }\n\n  private HashMap<String, ArrayList<Subscription>> createSameAddressSubscriptions() {\n    FormattedAddress formattedAddress = FormattedAddress.Factory.newInstance();\n    formattedAddress.setAddressLine1(\"Seebach 11\");\n    formattedAddress.setAddressLine2(\"4560 Kirchdorf\");\n    formattedAddress.setAddressLine3(\"\");\n\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.setPartyId(\"1\");\n    Address address = Address.Factory.newInstance();\n    address.setFormattedAddress(formattedAddress);\n    subscription.setAddress(address);\n    FormattedAddress formattedAddress1 = FormattedAddress.Factory.newInstance();\n    formattedAddress1.setAddressLine1(\"Seebach 11\");\n    formattedAddress1.setAddressLine2(\"4560 Kirchdorf\");\n    formattedAddress1.setAddressLine3(\"\");\n\n    Subscription subscription1 = Subscription.Factory.newInstance();\n    subscription1.setPartyId(\"1\");\n    Address address1 = Address.Factory.newInstance();\n    address1.setFormattedAddress(formattedAddress1);\n    subscription1.setAddress(address1);\n    ArrayList<Subscription> subscriptions = new ArrayList<Subscription>();\n    subscriptions.add(subscription);\n    ArrayList<Subscription> subscriptions1 = new ArrayList<Subscription>();\n    subscriptions1.add(subscription1);\n\n    HashMap<String, ArrayList<Subscription>> mockSubscriptions = new HashMap<String, ArrayList<Subscription>>();\n    mockSubscriptions.put(\"123\", subscriptions);\n    mockSubscriptions.put(\"234\", subscriptions1);\n\n    return mockSubscriptions;\n  }\n\n  private HashMap<String, ArrayList<Subscription>> createSameLocSubscriptions() {\n    FormattedAddress formattedAddress = FormattedAddress.Factory.newInstance();\n    formattedAddress.setAddressLine1(\"Seebach 11\");\n    formattedAddress.setAddressLine2(\"4560 Kirchdorf\");\n    formattedAddress.setAddressLine3(\"\");\n\n    Subscription subscription = Subscription.Factory.newInstance();\n    subscription.setPartyId(\"1\");\n    Address address = Address.Factory.newInstance();\n    address.setFormattedAddress(formattedAddress);\n    subscription.setAddress(address);\n    FormattedAddress formattedAddress1 = FormattedAddress.Factory.newInstance();\n    formattedAddress1.setAddressLine1(\"Seebach 11\");\n    formattedAddress1.setAddressLine2(\"4560 Kirchdorf\");\n    formattedAddress1.setAddressLine3(\"\");\n\n    Subscription subscription1 = Subscription.Factory.newInstance();\n    subscription1.setPartyId(\"1\");\n    Address address1 = Address.Factory.newInstance();\n    address1.setFormattedAddress(formattedAddress1);\n    subscription1.setAddress(address1);\n    ArrayList<Subscription> subscriptions = new ArrayList<Subscription>();\n    subscriptions.add(subscription);\n    subscriptions.add(subscription1);\n\n    HashMap<String, ArrayList<Subscription>> mockSubscriptions = new HashMap<String, ArrayList<Subscription>>();\n    mockSubscriptions.put(\"123\", subscriptions);\n\n    return mockSubscriptions;\n  }\n\n  private HashMap<String, ArrayList<Subscription>> createSimilarAddressSubscriptions() {\n    FormattedAddress formattedAddress = FormattedAddress.Factory.newInstance();\n    formattedAddress.setAddressLine1(\"Seebach 11\");\n    formattedAddress.setAddressLine2(\"4560 Kirchdorf\");\n    formattedAddress.setAddressLine3(\"\");\n\n    Subscription subscription = Subscription.Factory.newInstance();\n    Address address = Address.Factory.newInstance();\n    address.setFormattedAddress(formattedAddress);\n    subscription.setAddress(address);\n    subscription.setPartyId(\"1\");\n    FormattedAddress formattedAddress1 = FormattedAddress.Factory.newInstance();\n    formattedAddress1.setAddressLine1(\"Seebach 11\");\n    formattedAddress1.setAddressLine2(\"4560\");\n    formattedAddress1.setAddressLine3(\"Kirchdorf\");\n\n    Subscription subscription1 = Subscription.Factory.newInstance();\n    Address address1 = Address.Factory.newInstance();\n    subscription1.setPartyId(\"1\");\n    address1.setFormattedAddress(formattedAddress1);\n    subscription1.setAddress(address1);\n    ArrayList<Subscription> subscriptions = new ArrayList<Subscription>();\n    subscriptions.add(subscription);\n    ArrayList<Subscription> subscriptions1 = new ArrayList<Subscription>();\n    subscriptions1.add(subscription1);\n\n    HashMap<String, ArrayList<Subscription>> mockSubscriptions = new HashMap<String, ArrayList<Subscription>>();\n    mockSubscriptions.put(\"123\", subscriptions);\n    mockSubscriptions.put(\"234\", subscriptions1);\n\n    return mockSubscriptions;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/BillingCycleServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/BillingCycleServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4387,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport static org.junit.Assert.assertNull;\nimport static org.junit.Assert.assertTrue;\nimport static org.mockito.Matchers.anyLong;\nimport static org.mockito.Matchers.anyString;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.Mockito.when;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Date;\n\nimport org.junit.Test;\n\nimport at.a1ta.cuco.core.dao.billingcycle.BillingCycleDao;\nimport at.a1ta.cuco.core.shared.dto.BillingCycle;\nimport at.a1ta.cuco.core.shared.dto.BillingCycleEntry;\nimport at.telekom.www.eai.wstokumsretrieveaccount.WSKUMSRetrieveAccountResponseACC1ACCOUNTType;\n\npublic class BillingCycleServiceImplTest {\n\n  private final Date endDate = new Date();\n\n  @Test\n  public void testGetBillingCycle1() throws Exception {\n    BillingCycleDao daoMock = mock(BillingCycleDao.class);\n    KumsAccountService accountServiceMock = mock(KumsAccountService.class);\n    BillingCycleServiceImpl service = createService(daoMock, accountServiceMock);\n\n    when(accountServiceMock.getAccount(anyString())).thenReturn(createAccountObject());\n    when(daoMock.getBillingCycle(anyString())).thenReturn(new ArrayList<BillingCycle>());\n\n    service.getBillingCycle(Long.valueOf(1234567));\n\n    verify(accountServiceMock).getAccount(anyString());\n    verify(daoMock).getBillingCycle(anyString());\n  }\n\n  private WSKUMSRetrieveAccountResponseACC1ACCOUNTType createAccountObject() {\n    WSKUMSRetrieveAccountResponseACC1ACCOUNTType account = WSKUMSRetrieveAccountResponseACC1ACCOUNTType.Factory.newInstance();\n    account.setBILLCYCLID(\"testId\");\n    return account;\n  }\n\n  @Test\n  public void testGetUsageEndDateNoCycles() throws Exception {\n    BillingCycleServiceImpl serviceMock = createServicePartialMock();\n    when(serviceMock.getBillingCycle(anyLong())).thenReturn(new ArrayList<BillingCycle>());\n    when(serviceMock.getUsageEndDate(anyLong())).thenCallRealMethod();\n\n    Date usageEndDate = serviceMock.getUsageEndDate(Long.valueOf(1234567));\n\n    verify(serviceMock).getBillingCycle(anyLong());\n    assertNull(usageEndDate);\n  }\n\n  @Test\n  public void testGetUsageEndDateWithCyclesNotingFound() throws Exception {\n    BillingCycleServiceImpl serviceMock = createServicePartialMock();\n\n    BillingCycleEntry entity = createInvalidEntity();\n    ArrayList<BillingCycle> bcs = createCycleList(entity);\n\n    when(serviceMock.getBillingCycle(anyLong())).thenReturn(bcs);\n\n    Date usageEndDate = serviceMock.getUsageEndDate(Long.valueOf(1234567));\n\n    verify(serviceMock).getBillingCycle(anyLong());\n    assertNull(usageEndDate);\n  }\n\n  @Test\n  public void testGetUsageEndDateWithCyclesSomethingFound() throws Exception {\n    BillingCycleServiceImpl serviceMock = createServicePartialMock();\n\n    BillingCycleEntry entity = createValidEntity();\n    ArrayList<BillingCycle> bcs = createCycleList(entity);\n\n    when(serviceMock.getBillingCycle(anyLong())).thenReturn(bcs);\n\n    Date usageEndDate = serviceMock.getUsageEndDate(Long.valueOf(1234567));\n\n    verify(serviceMock).getBillingCycle(anyLong());\n    assertTrue(endDate.equals(usageEndDate));\n  }\n\n  private ArrayList<BillingCycle> createCycleList(BillingCycleEntry entity) {\n    ArrayList<BillingCycle> bcs = new ArrayList<BillingCycle>();\n    BillingCycle cycle = new BillingCycle();\n    cycle.setEntries(Arrays.asList(entity));\n    bcs.add(cycle);\n    return bcs;\n  }\n\n  private BillingCycleEntry createInvalidEntity() {\n    BillingCycleEntry entity = new BillingCycleEntry();\n    entity.setStep(\"non-existent-step\");\n    entity.setFrom(endDate);\n    return entity;\n  }\n\n  private BillingCycleEntry createValidEntity() {\n    BillingCycleEntry entity = new BillingCycleEntry();\n    entity.setStep(\"Usage End-Date\");\n    entity.setFrom(endDate);\n    return entity;\n  }\n\n  private BillingCycleServiceImpl createServicePartialMock() throws Exception {\n    BillingCycleServiceImpl mock = mock(BillingCycleServiceImpl.class);\n    when(mock.getUsageEndDate(anyLong())).thenCallRealMethod();\n\n    return mock;\n  }\n\n  private BillingCycleServiceImpl createService(BillingCycleDao daoMock, KumsAccountService accountServiceMock) {\n    BillingCycleServiceImpl service = new BillingCycleServiceImpl();\n    service.setBillingCycleDao(daoMock);\n    service.setKumsAccountService(accountServiceMock);\n    return service;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/CustomerInteractionServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/CustomerInteractionServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4104,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotNull;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport org.apache.commons.lang.time.DateUtils;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.data.clarify.dao.ClarifyInteractionAndWorkflowDao;\nimport at.a1ta.bite.data.clarify.shared.dto.ClarifyCustomerInteractionResponse;\nimport at.a1ta.bite.data.clarify.shared.dto.CustomerInteraction;\nimport at.a1ta.cuco.core.dao.db.MKInteractionDao;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class CustomerInteractionServiceImplTest {\n\n  CustomerInteractionServiceImpl serviceSpy;\n\n  @Mock\n  private ClarifyInteractionAndWorkflowDao clarifyDaoMock;\n  @Mock\n  private MKInteractionDao mkInteractionDaoMock;\n\n  @Before\n  public void setUp() {\n    CustomerInteractionServiceImpl service = new CustomerInteractionServiceImpl();\n    service.setClarifyInteractionAndWorkflowDao(clarifyDaoMock);\n    service.setMkInteractionDao(mkInteractionDaoMock);\n\n    Date middle = new Date();\n    Date later = DateUtils.addHours(middle, 5);\n    Date earlier = DateUtils.addHours(middle, -5);\n\n    List<CustomerInteraction> interactions = new ArrayList<CustomerInteraction>();\n    addInteraction(later, \"order_3\", interactions);\n    addInteraction(earlier, \"order_1\", interactions);\n    Mockito.when(mkInteractionDaoMock.listMKInteractions(Matchers.anyLong())).thenReturn(interactions);\n\n    ClarifyCustomerInteractionResponse response = new ClarifyCustomerInteractionResponse();\n    ArrayList<CustomerInteraction> respInteractions = new ArrayList<CustomerInteraction>();\n    addInteraction(null, \"order_null\", respInteractions);\n    addInteraction(middle, \"order_2\", respInteractions);\n    response.setInteractions(respInteractions);\n    Mockito.when(clarifyDaoMock.getClarifyInteractionsViaSite(Matchers.anyLong(), Matchers.anyString())).thenReturn(response);\n\n    serviceSpy = Mockito.spy(service);\n  }\n\n  private void addInteraction(Date startDate, String orderIdString, List<CustomerInteraction> interactionList) {\n    CustomerInteraction inter1 = new CustomerInteraction();\n    inter1.setStartDate(startDate);\n    inter1.setOrderId(orderIdString);\n    interactionList.add(inter1);\n  }\n\n  @Test\n  public void testListAllInteractionsNoInteractions() {\n    // siteId starts with \"MK\", no call of listInteractions(...)\n    // addMKInteractions = false, no call of listMKInteractions(...)\n    serviceSpy.listAllInteractions(123, \"MK_testSiteId\", false);\n\n    Mockito.verify(serviceSpy, Mockito.never()).listInteractions(Matchers.anyLong(), Matchers.anyString());\n    Mockito.verify(clarifyDaoMock, Mockito.never()).getClarifyInteractions(Matchers.anyLong(), Matchers.anyString());\n\n    Mockito.verify(serviceSpy, Mockito.never()).listMKInteractions(Matchers.anyLong());\n    Mockito.verify(mkInteractionDaoMock, Mockito.never()).listMKInteractions(Matchers.anyLong());\n  }\n\n  @Test\n  public void testListAllInteractionsIsCalled() {\n    serviceSpy.listAllInteractions(123, \"testSiteId\", true);\n\n    Mockito.verify(serviceSpy).listInteractions(Matchers.anyLong(), Matchers.anyString());\n    Mockito.verify(clarifyDaoMock).getClarifyInteractionsViaSite(Matchers.anyLong(), Matchers.anyString());\n\n    Mockito.verify(serviceSpy).listMKInteractions(Matchers.anyLong());\n    Mockito.verify(mkInteractionDaoMock).listMKInteractions(Matchers.anyLong());\n  }\n\n  @Test\n  public void testListAllInteractionsCheckSorting() {\n    List<CustomerInteraction> actionList = serviceSpy.listAllInteractions(123, \"testSiteId\", true);\n\n    assertNotNull(actionList);\n    assertEquals(4, actionList.size());\n\n    assertEquals(\"order_3\", actionList.get(0).getOrderId());\n    assertEquals(\"order_2\", actionList.get(1).getOrderId());\n    assertEquals(\"order_1\", actionList.get(2).getOrderId());\n    assertEquals(\"order_null\", actionList.get(3).getOrderId());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/LocationServiceImplTests.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/LocationServiceImplTests.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3511,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.impl;\n\nimport java.util.Collections;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.ArgumentCaptor;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.data.domain.Pageable;\n\nimport at.a1ta.bite.data.clarify.dao.ClarifyInteractionAndWorkflowDao;\nimport at.a1ta.bite.data.clarify.shared.dto.Location;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class LocationServiceImplTests {\n\n  @Mock\n  private ClarifyInteractionAndWorkflowDao clarifyInteractionAndWorkflowDaoMock;\n\n  private LocationServiceImpl locationService;\n\n  @Before\n  public void setUp() {\n    locationService = new LocationServiceImpl();\n    locationService.setClarifyInteractionAndWorkflowDao(clarifyInteractionAndWorkflowDaoMock);\n  }\n\n  @Test\n  public void testGetClarifyLocationsForCustomer() {\n    Page<Location> page = new PageImpl<Location>(Collections.<Location> emptyList());\n    Mockito.when(clarifyInteractionAndWorkflowDaoMock.findLocationsByCustomerId(Matchers.anyLong(), Matchers.any(Pageable.class))).thenReturn(page);\n\n    ArgumentCaptor<Pageable> captor = ArgumentCaptor.forClass(Pageable.class);\n    locationService.getClarifyLocationsForCustmomer(100100100L, new PageRequest(0, 100));\n\n    Mockito.verify(clarifyInteractionAndWorkflowDaoMock, Mockito.times(1)).findLocationsByCustomerId(Matchers.eq(100100100L), captor.capture());\n    Assert.assertEquals(0, captor.getValue().getPageNumber());\n    Assert.assertEquals(100, captor.getValue().getPageSize());\n  }\n\n  @Test\n  public void testGetClarifyLocationsForCustomerWithNullPageable() {\n    Page<Location> page = new PageImpl<Location>(Collections.<Location> emptyList());\n    Mockito.when(clarifyInteractionAndWorkflowDaoMock.findLocationsByCustomerId(Matchers.anyLong(), Matchers.any(Pageable.class))).thenReturn(page);\n\n    ArgumentCaptor<Pageable> captor = ArgumentCaptor.forClass(Pageable.class);\n    locationService.getClarifyLocationsForCustmomer(100100100L, null);\n\n    Mockito.verify(clarifyInteractionAndWorkflowDaoMock, Mockito.times(1)).findLocationsByCustomerId(Matchers.eq(100100100L), captor.capture());\n    Assert.assertEquals(0, captor.getValue().getPageNumber());\n    Assert.assertEquals(10, captor.getValue().getPageSize());\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testGetClarifyLocationsForCustomerWithNullCustomerId() {\n    locationService.getClarifyLocationsForCustmomer(null, new PageRequest(0, 100));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/ClearingAccountServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/ClearingAccountServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2651,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNull;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.Mockito.when;\n\nimport java.util.ArrayList;\n\nimport org.apache.commons.lang.NullArgumentException;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.cuco.core.dao.db.ClearingAccountDao;\nimport at.a1ta.cuco.core.shared.dto.ClearingAccount;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class ClearingAccountServiceImplTest {\n\n  private ClearingAccountServiceImpl service;\n  private static final Long ACCOUNT_NUMBER = Long.valueOf(123);\n\n  @Mock\n  private ClearingAccountDao accountDaoMock;\n\n  @Before\n  public void setUp() {\n    service = new ClearingAccountServiceImpl();\n    service.setClearingAccountDao(accountDaoMock);\n\n    ClearingAccount account = new ClearingAccount(ACCOUNT_NUMBER);\n    Mockito.when(accountDaoMock.getClearingAccountForPhonenumber(Matchers.isNotNull(String.class))).thenReturn(account);\n  }\n\n  @Test\n  public void getClearingNumberForPhonenumber() {\n    Long number = service.getClearingNumberForPhonenumber(\"+43/1234567\");\n\n    verify(accountDaoMock).getClearingAccountForPhonenumber(Matchers.anyString());\n    assertEquals(ACCOUNT_NUMBER, number);\n  }\n\n  @Test\n  public void getClearingNumberForPhonenumberNull() {\n    Mockito.when(accountDaoMock.getClearingAccountForPhonenumber(Matchers.isNotNull(String.class))).thenReturn(null);\n\n    Long number = service.getClearingNumberForPhonenumber(\"+43/1234567\");\n\n    verify(accountDaoMock).getClearingAccountForPhonenumber(Matchers.anyString());\n    assertNull(number);\n  }\n\n  @Test(expected = NullArgumentException.class)\n  public void getClearingNumberForPhonenumberWithException() {\n    service.getClearingNumberForPhonenumber(null);\n  }\n\n  @Test\n  public void testGetByAccountNumber() {\n    service.getByAccountNumber(ACCOUNT_NUMBER);\n\n    verify(accountDaoMock).getByAccountNumber(Matchers.anyLong());\n  }\n\n  @Test\n  public void testGetActiveTaByPartyId() {\n    service.getActiveTaByPartyId(Long.valueOf(333));\n\n    verify(accountDaoMock).getActiveTaByPartyId(Matchers.anyLong());\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testGetByPartyId() {\n    when(accountDaoMock.getByPartyIds(Matchers.any(ArrayList.class))).thenReturn(new ArrayList<ClearingAccount>());\n\n    service.getByPartyId(Long.valueOf(123));\n    verify(accountDaoMock).getByPartyIds(Matchers.any(ArrayList.class));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/ContactPersonServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/ContactPersonServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4999,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotNull;\nimport static org.mockito.Mockito.when;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.dao.SettingDao;\nimport at.a1ta.bite.core.shared.dto.Setting;\nimport at.a1ta.cuco.core.dao.db.ContactPersonDao;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.shared.dto.ContactPerson;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class ContactPersonServiceImplTest {\n\n  private ContactPersonServiceImpl service;\n\n  @Mock\n  private ContactPersonDao contactPersonDaoMock;\n  @Mock\n  private PartyDao partyDaoMock;\n\n  @Mock\n  private SettingDao settingDaoMock;\n\n  @Before\n  public void setUp() {\n    service = new ContactPersonServiceImpl(contactPersonDaoMock);\n    service.setPartyDao(partyDaoMock);\n    Setting nullSetting = new Setting();\n\n    Setting setting = new Setting();\n    String settingValue = \"Test\";\n    setting.setValue(settingValue);\n    when(settingDaoMock.getSetting(Matchers.anyString())).thenReturn(setting);\n    when(settingDaoMock.getSetting(\"sbs.productTabChanges.active\")).thenReturn(nullSetting);\n  }\n\n  @Test\n  public void testListContactPersonsEmpty() {\n    List<ContactPerson> persons = service.listContactPersons(makeIdsList());\n    Mockito.verify(contactPersonDaoMock).listContactPersonsInclLocalContacts(Matchers.anyListOf(Long.class));\n    Mockito.verify(partyDaoMock).loadParties(Matchers.anyListOf(Long.class));\n    assertNotNull(persons);\n    assertEquals(0, persons.size());\n  }\n\n  @Test\n  public void testListContactPersonsFromContacts() {\n    Long contactId = Long.valueOf(\"123\");\n\n    List<ContactPerson> contacts = makeContactList(contactId);\n    Mockito.when(contactPersonDaoMock.listContactPersonsInclLocalContacts(Matchers.anyListOf(Long.class))).thenReturn(contacts);\n    List<ContactPerson> persons = service.listContactPersons(makeIdsList());\n\n    assertEquals(1, persons.size());\n    assertEquals(contactId, persons.get(0).getCustomerId());\n  }\n\n  @Test\n  public void testListContactPersonsFromPartiesNothingFound() {\n    // won't be converted to ContactPerson as it doesnt't have name, email or phone number\n    List<Party> partyList = makePartyList(345, null, null, null, null);\n    Mockito.when(partyDaoMock.loadParties(Matchers.anyListOf(Long.class))).thenReturn(partyList);\n\n    List<ContactPerson> persons = service.listContactPersons(makeIdsList());\n    assertEquals(0, persons.size());\n  }\n\n  @Test\n  public void testListContactPersonsFromPartiesSomethingFound() {\n    // will be converted to ContactPerson\n    List<Party> partyList = makePartyList(345, \"Nick\", \"Bonkers\", \"aaa@bbb.at\", null);\n    Mockito.when(partyDaoMock.loadParties(Matchers.anyListOf(Long.class))).thenReturn(partyList);\n\n    List<ContactPerson> persons = service.listContactPersons(makeIdsList());\n    assertEquals(1, persons.size());\n  }\n\n  @Test\n  public void testListContactPersonsFromPartiesWithoutEmailAndPhone() {\n    // won't be converted to ContactPerson as it doesnt't have neither email nor phone number\n    List<Party> partyList = makePartyList(345, \"Nick\", \"Bonkers\", null, null);\n    Mockito.when(partyDaoMock.loadParties(Matchers.anyListOf(Long.class))).thenReturn(partyList);\n\n    List<ContactPerson> persons = service.listContactPersons(makeIdsList());\n    assertEquals(0, persons.size());\n  }\n\n  @Test\n  public void testListContactPersonsFromPartiesWithoutName() {\n    // won't be converted to ContactPerson as it doesnt't have first name\n    List<Party> partyList = makePartyList(345, null, \"Bonkers\", \"aaa@bbb.at\", \"+43566789\");\n    Mockito.when(partyDaoMock.loadParties(Matchers.anyListOf(Long.class))).thenReturn(partyList);\n\n    List<ContactPerson> persons = service.listContactPersons(makeIdsList());\n    assertEquals(0, persons.size());\n  }\n\n  /**\n   * @return an arraylist with one Party object (id=123)\n   */\n  private List<Party> makePartyList(long id, String firstName, String lastName, String email, String phoneNumber) {\n    List<Party> parties = new ArrayList<Party>();\n    Party party = new Party(id);\n    parties.add(party);\n    party.setContactPersonFirstName(firstName);\n    party.setContactPersonLastName(lastName);\n    party.setEMailAddress(email);\n    party.setContactPhoneNumber1(phoneNumber);\n    return parties;\n  }\n\n  private List<ContactPerson> makeContactList(Long id) {\n    List<ContactPerson> contacts = new ArrayList<ContactPerson>();\n    ContactPerson contact = new ContactPerson();\n    contact.setCustomerId(id);\n    contacts.add(contact);\n    return contacts;\n  }\n\n  private List<Long> makeIdsList() {\n    return Arrays.asList(Long.valueOf(123), Long.valueOf(456));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/PartyServiceTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/PartyServiceTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 12208,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport junit.framework.Assert;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.ArgumentCaptor;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.dto.PartySearchEvent;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.server.service.UserTrackingService;\nimport at.a1ta.bite.data.solr.SolrApiUsageException;\nimport at.a1ta.bite.data.solr.core.query.BasicField;\nimport at.a1ta.bite.data.solr.core.query.Field;\nimport at.a1ta.bite.data.solr.core.query.result.BasicFacetResult;\nimport at.a1ta.bite.data.solr.core.query.result.FacetResult;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.service.PartySearchValueFormatHelper;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.SimplePage;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class PartyServiceTest {\n\n  private PartyServiceImpl customerService;\n\n  private static final List<Party> SINGLE_PARTY_LIST = Arrays.asList(new Party(1l));\n  private static final int NR_ENTRIES = 300;\n\n  @Mock\n  private PartyDao oraclePartyDaoMock;\n  @Mock\n  private PartyDao solrPartyRepositoryMock;\n  @Mock\n  private PartyDao solrPhoneRepositoryMock;\n  @Mock\n  private PhoneNumberDao phoneNumberDaoMock;\n\n  @Mock\n  private SettingService settingsServiceMock;\n  \n  @Mock\n  private UserTrackingService userTrackingServiceMock;\n\n  @Before\n  public void setUp() {\n    customerService = new PartyServiceImpl();\n\n    Mockito.when(settingsServiceMock.getIntValue(\"Partysearch.maxResults\", PartyServiceImpl.DEFAULT_MAX_ELEM)).thenReturn(NR_ENTRIES);\n    Mockito.when(settingsServiceMock.getBooleanValue(PartyServiceImpl.PARTYSEARCH_SOLR_ENABLED, false)).thenReturn(true);\n    Mockito.when(settingsServiceMock.getBooleanValue(PartyServiceImpl.PARTYSEARCH_SOLR_ENABLED, true)).thenReturn(true);\n\n    Mockito.when(settingsServiceMock.getBooleanValue(PartyServiceImpl.FACETED_PARTYSEARCH_ENABLED, true)).thenReturn(true);\n\n    customerService.setCustomerDao(oraclePartyDaoMock);\n    customerService.setPartySolrRepository(solrPartyRepositoryMock);\n    customerService.setPartySolrRepositoryWithPhoneNumbers(solrPhoneRepositoryMock);\n    customerService.setSettingService(settingsServiceMock);\n    customerService.setPartySearchFormatterHelper(new PartySearchValueFormatHelper(phoneNumberDaoMock));\n    customerService.setUserTrackingService(userTrackingServiceMock);\n  }\n\n  @Test\n  public void testPrimarySearch() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"lastname\");\n\n    ArrayList<Party> list = new ArrayList<Party>();\n    list.addAll(SINGLE_PARTY_LIST);\n\n    SimplePage<Party> resultPage = new SimplePage<Party>();\n    resultPage.setContent(list);\n    Mockito.when(solrPartyRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n    customerService.search(searchCriteria);\n\n    Mockito.verify(solrPartyRepositoryMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verifyZeroInteractions(oraclePartyDaoMock, solrPhoneRepositoryMock);\n  }\n\n  @Test\n  public void testPrimarySearchWithNoResultFromSolr() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"lastname\");\n\n    ArrayList<Party> list = new ArrayList<Party>();\n    list.addAll(Collections.<Party> emptyList());\n\n    SimplePage<Party> resultPage = new SimplePage<Party>();\n    resultPage.setContent(list);\n    Mockito.when(solrPartyRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n    customerService.search(searchCriteria);\n\n    Mockito.verify(solrPartyRepositoryMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verify(oraclePartyDaoMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verifyZeroInteractions(solrPhoneRepositoryMock);\n  }\n\n  @Test\n  public void testPrimarySearchWithExceptionFromSolr() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"lastname\");\n\n    Mockito.when(solrPartyRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenThrow(new SolrApiUsageException());\n\n    customerService.search(searchCriteria);\n\n    Mockito.verify(solrPartyRepositoryMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verify(oraclePartyDaoMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verifyZeroInteractions(solrPhoneRepositoryMock);\n  }\n\n  @Test\n  public void testBANSearch() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setBillingAccountNumber(\"billingAccountNumber\");\n\n    ArrayList<Party> list = new ArrayList<Party>();\n    list.addAll(SINGLE_PARTY_LIST);\n\n    SimplePage<Party> resultPage = new SimplePage<Party>();\n    resultPage.setContent(list);\n    Mockito.when(solrPartyRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n    customerService.search(searchCriteria);\n\n    Mockito.verify(solrPhoneRepositoryMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verifyZeroInteractions(solrPartyRepositoryMock);\n  }\n\n  @Test\n  public void testAonAccountSearch() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setAonAccountNumber(\"aonAccountNumber\");\n\n    ArrayList<Party> list = new ArrayList<Party>();\n    list.addAll(SINGLE_PARTY_LIST);\n\n    SimplePage<Party> resultPage = new SimplePage<Party>();\n    resultPage.setContent(list);\n    Mockito.when(oraclePartyDaoMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n    customerService.search(searchCriteria);\n\n    Mockito.verify(oraclePartyDaoMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verifyZeroInteractions(solrPartyRepositoryMock, solrPhoneRepositoryMock);\n  }\n\n  @Test\n  public void testPhoneNumberSearch() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLkz(\"lkz\");\n    searchCriteria.setOkz(\"okz\");\n    searchCriteria.setCallNumber(\"callNumber\");\n\n    ArrayList<Party> list = new ArrayList<Party>();\n    list.addAll(SINGLE_PARTY_LIST);\n\n    SimplePage<Party> resultPage = new SimplePage<Party>();\n    resultPage.setContent(list);\n    Mockito.when(solrPhoneRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n    customerService.search(searchCriteria);\n\n    Mockito.verify(solrPhoneRepositoryMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verifyZeroInteractions(solrPartyRepositoryMock, oraclePartyDaoMock);\n  }\n\n  @Test\n  public void testFacetedSearch() {\n    Field facetField = new BasicField(\"lastname_ci\");\n    FacetResult result = new BasicFacetResult(facetField.getName(), \"lastname\", 1);\n    List<FacetResult> resultList = Arrays.asList(result);\n\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"lastname\");\n    searchCriteria.setActiveSearchField(facetField.getName());\n\n    Mockito.when(solrPartyRepositoryMock.facetedSearch(searchCriteria, facetField)).thenReturn(resultList);\n\n    customerService.facetedSearch(searchCriteria, facetField);\n\n    Mockito.verify(solrPartyRepositoryMock, Mockito.times(1)).facetedSearch(searchCriteria, facetField);\n    Mockito.verifyZeroInteractions(oraclePartyDaoMock, solrPhoneRepositoryMock);\n  }\n\n  @Test\n  public void testFacetedSearchWithExceptionFromSolr() {\n    Field facetField = new BasicField(\"lastname\");\n\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"lastname\");\n    searchCriteria.setActiveSearchField(facetField.getName());\n\n    Mockito.when(solrPartyRepositoryMock.facetedSearch(searchCriteria, facetField)).thenThrow(new SolrApiUsageException());\n\n    customerService.facetedSearch(searchCriteria, facetField);\n\n    Mockito.verify(solrPartyRepositoryMock, Mockito.times(1)).facetedSearch(searchCriteria, facetField);\n    Mockito.verifyZeroInteractions(oraclePartyDaoMock, solrPhoneRepositoryMock);\n  }\n\n  @Test(expected = IllegalArgumentException.class)\n  public void testFacetedSearchWithNoActiveField() {\n    Field facetField = null;\n\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"lastname\");\n\n    customerService.facetedSearch(searchCriteria, facetField);\n\n    Mockito.verify(solrPartyRepositoryMock, Mockito.times(1)).facetedSearch(searchCriteria, facetField);\n    Mockito.verifyZeroInteractions(solrPartyRepositoryMock, oraclePartyDaoMock, solrPhoneRepositoryMock);\n  }\n\n  @Test\n  public void testPrimarySearchConstraints() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"la\");\n\n    SimplePage<Party> resultPage = new SimplePage<Party>();\n    Mockito.when(solrPartyRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n    SimplePage<Party> result = customerService.search(searchCriteria);\n\n    Mockito.verify(solrPartyRepositoryMock, Mockito.times(1)).search(searchCriteria, NR_ENTRIES);\n    Mockito.verifyZeroInteractions(oraclePartyDaoMock, solrPhoneRepositoryMock);\n    Assert.assertFalse(result.isInputValid());\n  }\n  \n  \n  @Test\n  public void testSearchTrackingWithSolrResultAvailable() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"lastname\");\n    searchCriteria.setSearchExecutingUserName(\"myUsername\");\n\n    ArrayList<Party> list = new ArrayList<Party>();\n    list.addAll(SINGLE_PARTY_LIST);\n\n    SimplePage<Party> resultPage = new SimplePage<Party>();\n    resultPage.setContent(list);\n    Mockito.when(solrPartyRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n    customerService.search(searchCriteria);\n    \n    ArgumentCaptor<PartySearchEvent> captor = ArgumentCaptor.forClass(PartySearchEvent.class);\n\n    Mockito.verify(userTrackingServiceMock, Mockito.times(1)).trackUserEvent(captor.capture());\n    \n    Assert.assertEquals(searchCriteria.getSearchExecutingUserName(), captor.getValue().getUserName());\n    Assert.assertEquals(\"SEARCH_SOL\", captor.getValue().getEventName());\n  }\n  \n  @Test\n  public void testSearchTrackingWithDatabaseFallback() {\n    PartySearch searchCriteria = new PartySearch();\n    searchCriteria.setLastName(\"lastname\");\n    searchCriteria.setSearchExecutingUserName(\"myUsername\");\n\n    ArrayList<Party> list = new ArrayList<Party>();\n\n    SimplePage<Party> resultPage = new SimplePage<Party>();\n    resultPage.setContent(list);\n    Mockito.when(solrPartyRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n    customerService.search(searchCriteria);\n    \n    ArgumentCaptor<PartySearchEvent> captor = ArgumentCaptor.forClass(PartySearchEvent.class);\n\n    Mockito.verify(userTrackingServiceMock, Mockito.times(2)).trackUserEvent(captor.capture());\n    List<PartySearchEvent> values = captor.getAllValues();\n    Assert.assertEquals(searchCriteria.getSearchExecutingUserName(), captor.getValue().getUserName());\n    Assert.assertEquals(\"SEARCH_SOL\", values.get(0).getEventName());\n    Assert.assertEquals(\"SEARCH_FB\", values.get(1).getEventName());\n  }\n  \n  @Test\n  public void testSearchTrackingWithFulltextSearch() {\n      PartySearch searchCriteria = new PartySearch();\n      searchCriteria.setFulltextTerm(\"fulltextTerm\");\n      searchCriteria.setFulltext(true);\n\n      ArrayList<Party> list = new ArrayList<Party>();\n\n      SimplePage<Party> resultPage = new SimplePage<Party>();\n      resultPage.setContent(list);\n      Mockito.when(solrPartyRepositoryMock.search(searchCriteria, NR_ENTRIES)).thenReturn(resultPage);\n\n      customerService.search(searchCriteria);\n      \n      ArgumentCaptor<PartySearchEvent> captor = ArgumentCaptor.forClass(PartySearchEvent.class);\n\n      Mockito.verify(userTrackingServiceMock, Mockito.times(1)).trackUserEvent(captor.capture());\n\n      Assert.assertEquals(searchCriteria.getSearchExecutingUserName(), captor.getValue().getUserName());\n      Assert.assertEquals(\"SEARCH_FT\", captor.getValue().getEventName());\n  }\n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/IAttributeServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/impl/IAttributeServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1920,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.junit.Assert;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport at.a1ta.cuco.core.service.AttributeService;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig.ConfigTypes;\n\n@Ignore\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = {\"classpath:testApplicationContext-cuco-core.xml\"})\npublic class IAttributeServiceImplTest {\n\n  @Autowired\n  AttributeService attributeService;\n\n  @Test\n  public void testInsertConfig() {\n\n    AttributeConfig config = new AttributeConfig();\n    config.setAttributeName(\"Anzahl der Freiminuten (TEST)\");\n    config.setAttributeType(ConfigTypes.NUMBER);\n    config.setOrderNum(4);\n    config.setLowerBounds(0);\n    config.setUpperBounds(1000);\n    config.setActive(true);\n\n    AttributeConfig insertConfig = attributeService.insertConfig(config, 36668);\n\n    Assert.assertNotNull(insertConfig);\n    Assert.assertNotNull(insertConfig.getAttributeConfigId());\n    Assert.assertNotNull(insertConfig.getCreator());\n    Assert.assertNotNull(insertConfig.getCreateDate());\n    Assert.assertNotNull(insertConfig.getLastModifier());\n    Assert.assertNotNull(insertConfig.getLastUpdate());\n    Assert.assertNotNull(insertConfig.getOrderNum());\n\n    Assert.assertEquals(true, insertConfig.getActive());\n    Assert.assertEquals(false, insertConfig.getDeleted());\n\n    insertConfig = attributeService.deactivateConfig(insertConfig, 36668);\n\n    Assert.assertEquals(false, insertConfig.getActive());\n\n    insertConfig = attributeService.activateConfig(insertConfig, 36668);\n\n    Assert.assertEquals(true, insertConfig.getActive());\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/visitreport/VisitReportServiceImplTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/visitreport/VisitReportServiceImplTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 962,
    "content": "package at.a1ta.cuco.core.service.visitreport;\n\nimport static org.junit.Assert.assertNotNull;\n\nimport java.math.BigDecimal;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.DigitalSellingNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.InternetSpeedType;\n\npublic class VisitReportServiceImplTest {\n\n  private VisitReportServiceImpl service;\n\n  @Before\n  public void beforeTest() {\n    service = new VisitReportServiceImpl();\n  }\n\n  @Test\n  public void testMarshalling() {\n    DigitalSellingNote note = new DigitalSellingNote();\n    note.getHousehold().setFloor(12);\n    note.getInternetSpeed().getInternetSpeedOld().setInternetSpeedType(InternetSpeedType.MBIT_150);\n    note.getInternetSpeed().getInternetSpeedNew().setA1CyberProtectionPrice(new BigDecimal(150));\n    String result = service.marshalDigitalSellingNote(note);\n    assertNotNull(result);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentHelperTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentHelperTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1469,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport static org.junit.Assert.assertEquals;\n\nimport org.junit.Test;\n\npublic class CustomerEquipmentHelperTest {\n\n  @Test\n  public void testCleanEquipmentNumberNull() {\n    assertEquals(\"null\", null, CustomerEquipmentHelper.cleanEquipmentNumber(null));\n  }\n\n  @Test\n  public void testCleanEquipmentNumberEmpty() {\n    assertEquals(\"empty\", \"\", CustomerEquipmentHelper.cleanEquipmentNumber(\"\"));\n  }\n\n  @Test\n  public void testCleanEquipmentNumberJustZeros() {\n    assertEquals(\"Just zeros\", \"\", CustomerEquipmentHelper.cleanEquipmentNumber(\"000\"));\n  }\n\n  @Test\n  public void testCleanEquipmentNumberNoZeros() {\n    assertEquals(\"no zeros\", \"123\", CustomerEquipmentHelper.cleanEquipmentNumber(\"123\"));\n  }\n\n  @Test\n  public void testCleanEquipmentNumberOneLeadingZeros() {\n    assertEquals(\"one leading zeros\", \"123\", CustomerEquipmentHelper.cleanEquipmentNumber(\"0123\"));\n  }\n\n  @Test\n  public void testCleanEquipmentNumberManyLeadingZeros() {\n    assertEquals(\"many leading zeros\", \"123\", CustomerEquipmentHelper.cleanEquipmentNumber(\"0000123\"));\n  }\n\n  @Test\n  public void testCleanEquipmentNumberZerosInTheMiddle() {\n    assertEquals(\"zeroes in the middle\", \"10203\", CustomerEquipmentHelper.cleanEquipmentNumber(\"000010203\"));\n  }\n\n  @Test\n  public void testCleanEquipmentNumberZerosAtTheEnd() {\n    assertEquals(\"zeros at the end\", \"123000\", CustomerEquipmentHelper.cleanEquipmentNumber(\"0000123000\"));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/report/ITestUserActionStatistics.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/report/ITestUserActionStatistics.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1622,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.report;\n\nimport java.util.List;\n\nimport org.junit.Assert;\nimport org.junit.Test;\n\nimport at.a1ta.bite.core.server.dto.UserActionRecord;\nimport at.a1ta.cuco.core.service.report.UserActionStatistics.ActionRecordStatistics;\n\npublic class ITestUserActionStatistics extends UserActionStatisticsTestBase {\n\n  @Test\n  public void testActionCountExceedsAllowedMaximum() {\n    List<UserActionRecord> historicalData = readRecordsFromFile(\"weeklyUserActionData.txt\");\n    UserActionStatistics stats = new UserActionStatistics(historicalData);\n\n    List<UserActionRecord> currentData = readRecordsFromFile(\"dailyUserActionData.txt\");\n\n    List<ActionRecordStatistics> pThreat = stats.findSuspicious(currentData);\n    for (ActionRecordStatistics rec : pThreat) {\n      Assert.assertTrue(rec.getActionCount() > rec.getAllowedMax());\n    }\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/report/DepartmentActionStatisticsTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/report/DepartmentActionStatisticsTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2654,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.report;\n\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport org.hamcrest.collection.IsEmptyCollection;\nimport org.hamcrest.core.IsEqual;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport at.a1ta.bite.core.server.dto.DepartmentActionRecord;\n\npublic class DepartmentActionStatisticsTest {\n\n  private DepartmentActionStatistics stats;\n\n  @Before\n  public void setUp() {\n    stats = new DepartmentActionStatistics(generate());\n  }\n\n  @Test\n  public void testCreateKeyCapturesDepartmentCorrectly() {\n    stats.createKey(createActionRecord(\"action\", 1L, \"department\"));\n\n    Assert.assertThat(stats.getDepartments(), IsEqual.equalTo((Set<String>) new HashSet<String>() {\n      {\n        add(\"department\");\n      }\n    }));\n  }\n\n  @Test\n  public void testCreateKeyCapturesDepartmentOnlyOnceEvenIfAddedMultipleTimes() {\n    stats.createKey(createActionRecord(\"action\", 1L, \"department\"));\n    stats.createKey(createActionRecord(\"action\", 2L, \"department\"));\n    stats.createKey(createActionRecord(\"action\", 3L, \"department\"));\n\n    Assert.assertThat(stats.getDepartments(), IsEqual.equalTo((Set<String>) new HashSet<String>() {\n      {\n        add(\"department\");\n      }\n    }));\n  }\n\n  @Test\n  public void testGetDepartmentsRetursEmptyListWhenNoDataAvailable() {\n    Assert.assertThat(stats.getDepartments(), IsEmptyCollection.empty());\n  }\n\n  private DepartmentActionRecord createActionRecord(String action, Long actionCount, String department) {\n    DepartmentActionRecord actionRecord = new DepartmentActionRecord();\n    actionRecord.setAction(action);\n    actionRecord.setActionCount(actionCount);\n    actionRecord.setDepartment(department);\n    return actionRecord;\n  }\n\n  private Collection<DepartmentActionRecord> generate() {\n    return Collections.emptyList();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/report/UserActionStatisticsTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/report/UserActionStatisticsTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4229,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.report;\n\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport at.a1ta.bite.core.server.dto.UserActionRecord;\nimport at.a1ta.cuco.core.service.report.UserActionStatistics.ActionRecordStatistics;\n\npublic class UserActionStatisticsTest extends UserActionStatisticsTestBase {\n\n  private final String LOW_USAGE_USER = \"lowUsageUser\";\n  private final String MEDIUM_USAGE_USER = \"mediumUsageUser\";\n  private final String HIGH_USAGE_USER = \"highUsageUser\";\n\n  /* @formatter:off */\n  private final String [] REFERENCE_DATA_LINES = {\n      //mean: ; standardDeviation: ;\n      LOW_USAGE_USER+\",\"+ACTION+\",01.08.2013,5\",\n      LOW_USAGE_USER+\",\"+ACTION+\",29.07.2013,10\",\n      LOW_USAGE_USER+\",\"+ACTION+\",30.07.2013,5\",\n      LOW_USAGE_USER+\",\"+ACTION+\",31.07.2013,20\",\n      HIGH_USAGE_USER+\",\"+ACTION+\",01.08.2013,20\",\n      HIGH_USAGE_USER+\",\"+ACTION+\",29.07.2013,70\",\n      HIGH_USAGE_USER+\",\"+ACTION+\",30.07.2013,50\",\n      HIGH_USAGE_USER+\",\"+ACTION+\",31.07.2013,60\",\n      MEDIUM_USAGE_USER+\",\"+ACTION+\",01.08.2013,30\",\n      MEDIUM_USAGE_USER+\",\"+ACTION+\",29.07.2013,32\",\n      MEDIUM_USAGE_USER+\",\"+ACTION+\",30.07.2013,27\",\n      MEDIUM_USAGE_USER+\",\"+ACTION+\",31.07.2013,29\"};\n  /* @formatter:on */\n\n  private final String VIOLATING_DATA_LINE = (LOW_USAGE_USER + \",\" + ACTION + \",02.08.2013,55\");\n  private final String NON_VIOLATING_DATA_LINE = (MEDIUM_USAGE_USER + \",\" + ACTION + \",02.08.2013,31\");\n\n  private UserActionStatistics stats;\n\n  @Before\n  public void setUp() {\n    stats = new UserActionStatistics(generate());\n  }\n\n  @Test\n  public void testGetStatisticsForUserAndAction() {\n    DescriptiveStatistics statistics = stats.getStatistics(stats.createKey(LOW_USAGE_USER, ACTION));\n    Assert.assertEquals(4, statistics.getN());\n  }\n\n  @Test\n  public void testGetStatisticsForUserAndActionReturnsEmptyStatisticWhenNoDataForUserAvailable() {\n    DescriptiveStatistics statistics = stats.getStatistics(stats.createKey(\"NoDataAvailable\", ACTION));\n    Assert.assertNotNull(statistics);\n    Assert.assertEquals(0, statistics.getN());\n  }\n\n  @Test\n  public void testGetStatisticsForUserAndActionReturnsEmptyStatisticWhenNoDataForActionAvailable() {\n    DescriptiveStatistics statistics = stats.getStatistics(stats.createKey(LOW_USAGE_USER, \"NoDataAvailable\"));\n    Assert.assertNotNull(statistics);\n    Assert.assertEquals(0, statistics.getN());\n  }\n\n  @Test\n  public void testFindSuspicousReturnsEmptyListIfNoDataAvailable() {\n    stats = new UserActionStatistics(Collections.<UserActionRecord> emptyList());\n    Assert.assertTrue(stats.findSuspicious(Arrays.asList(new UserActionRecord())).isEmpty());\n  }\n\n  @Test\n  public void testFindSuspicousReturnsEmptyListIfRequestedForEmptyList() {\n    Assert.assertTrue(stats.findSuspicious(Collections.<UserActionRecord> emptyList()).isEmpty());\n  }\n\n  @Test\n  public void testFindSuspicousReturnsCorrectUsers() {\n    List<UserActionRecord> violating = Arrays.asList(createActionRecordFromDataLine(VIOLATING_DATA_LINE), createActionRecordFromDataLine(NON_VIOLATING_DATA_LINE));\n\n    List<ActionRecordStatistics> result = stats.findSuspicious(violating);\n    Assert.assertEquals(1, result.size());\n  }\n\n  private List<UserActionRecord> generate() {\n    return generate(Arrays.asList(REFERENCE_DATA_LINES));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/report/UserActionStatisticsTestBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/report/UserActionStatisticsTestBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1913,
    "content": "package at.a1ta.cuco.core.service.report;\n\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.net.URISyntaxException;\nimport java.text.DateFormat;\nimport java.text.ParseException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Locale;\n\nimport org.apache.commons.io.FileUtils;\nimport org.springframework.util.ResourceUtils;\nimport org.springframework.util.StringUtils;\n\nimport at.a1ta.bite.core.server.dto.UserActionRecord;\n\npublic abstract class UserActionStatisticsTestBase {\n\n  protected final String ACTION = \"LOAD_CUSTO\";\n\n  protected List<UserActionRecord> generate(List<String> lines) {\n    List<UserActionRecord> records = new ArrayList<UserActionRecord>(lines.size());\n    for (String line : lines) {\n      UserActionRecord record = createActionRecordFromDataLine(line);\n      records.add(record);\n    }\n    return records;\n  }\n\n  protected UserActionRecord createActionRecordFromDataLine(String line) {\n    String[] data = StringUtils.commaDelimitedListToStringArray(line);\n    UserActionRecord record = new UserActionRecord();\n    record.setLogin(data[0]);\n    record.setAction(data[1]);\n    try {\n      DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, Locale.GERMAN);\n      record.setDate(df.parse(data[2]));\n    } catch (ParseException e) {\n      throw new IllegalArgumentException(e);\n    }\n    record.setActionCount(Long.valueOf(data[3]));\n    return record;\n  }\n\n  protected List<UserActionRecord> readRecordsFromFile(String name) {\n    try {\n      List<String> lines = FileUtils.readLines(new File(ResourceUtils.toURI(this.getClass().getResource(name))));\n      return generate(lines);\n    } catch (FileNotFoundException e) {\n      throw new RuntimeException(e);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    } catch (URISyntaxException e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/cron/DataTheftRapidAlertJobTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/cron/DataTheftRapidAlertJobTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4383,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.cron;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Date;\nimport java.util.List;\n\nimport org.apache.commons.lang.time.DateUtils;\nimport org.joda.time.LocalDate;\nimport org.joda.time.LocalDateTime;\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.ArgumentCaptor;\nimport org.mockito.Matchers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.runners.MockitoJUnitRunner;\n\nimport at.a1ta.bite.core.server.dto.TimeSpan;\nimport at.a1ta.bite.core.server.dto.UserActionRecord;\nimport at.a1ta.bite.core.server.dto.UserRecordActionType;\nimport at.a1ta.bite.core.server.service.UserTrackingService;\nimport at.a1ta.cuco.core.service.impl.MailService;\nimport at.a1ta.cuco.core.service.report.UserActionStatistics.ActionRecordStatistics;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class DataTheftRapidAlertJobTest {\n\n  @Mock\n  private UserTrackingService trackingServiceMock;\n\n  @Mock\n  private MailService mailServiceMock;\n\n  private DataTheftRapidAlertJob job;\n\n  @Before\n  public void setUp() {\n    job = new DataTheftRapidAlertJob(trackingServiceMock, mailServiceMock);\n  }\n\n  @Test\n  public void testGetJobIdReturnsClassNameInPropertyStyle() {\n    Assert.assertEquals(\"dataTheftRapidAlertJob\", job.getJobId());\n  }\n\n  @Test\n  public void testProcessLoadsDataCorrectly() {\n    ArgumentCaptor<TimeSpan> captor = ArgumentCaptor.forClass(TimeSpan.class);\n    job.process();\n\n    Mockito.verify(trackingServiceMock, Mockito.times(2)).findUserActionsForDateGroupByAction(captor.capture(), Matchers.any(UserRecordActionType.class));\n    Assert.assertTrue(DateUtils.isSameDay(new Date(), captor.getValue().getStart()));\n    Assert.assertTrue(DateUtils.isSameDay(LocalDate.now().minusDays(14).toDate(), captor.getAllValues().get(0).getStart()));\n    Assert.assertTrue(DateUtils.isSameDay(LocalDateTime.now().minusDays(1).toDate(), captor.getAllValues().get(0).getEnd()));\n  }\n\n  @Test\n  public void testReportThreatsToExceutivesWorksCorrectlyWhenDataAvailable() throws Exception {\n    List<ActionRecordStatistics> satisticRecords = new ArrayList<ActionRecordStatistics>();\n    satisticRecords.add(createRecordStatistics(\"user-1\"));\n\n    ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n    job.reportThreatsToExecutives(satisticRecords);\n\n    Mockito.verify(mailServiceMock, Mockito.times(1)).sendThreatReportMail(captor.capture());\n    Assert.assertEquals(\"<ul><li>Benutzer user-1 hat 100 Kunden aufgerufen. [Durchschnitt: 25 | Erlaubt: 50]</li></ul>\", captor.getValue());\n  }\n\n  @Test\n  public void testReportThreatsDoesNotSendMailWhenNoDataAvailable() throws Exception {\n    job.reportThreatsToExecutives(Collections.<ActionRecordStatistics> emptyList());\n\n    Mockito.verifyZeroInteractions(mailServiceMock);\n  }\n\n  @Test\n  public void testReportThreatsDoesNotSendMailWhenNullPassedIn() throws Exception {\n    job.reportThreatsToExecutives(null);\n\n    Mockito.verifyZeroInteractions(mailServiceMock);\n  }\n\n  private ActionRecordStatistics createRecordStatistics(String username) {\n    ActionRecordStatistics stats = new ActionRecordStatistics(createUserActionRecord(username));\n    stats.setAllowedMax(50);\n    stats.setDeviation(5);\n    stats.setMean(25);\n    return stats;\n  }\n\n  private UserActionRecord createUserActionRecord(String username) {\n    UserActionRecord record = new UserActionRecord();\n    record.setLogin(username);\n    record.setActionCount(100L);\n    record.setDate(new Date());\n    record.setAction(\"action\");\n\n    return record;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/test/java/at/a1ta/cuco/core/service/cron/IKumsSkzShopSynchronizationJobTest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/test/java/at/a1ta/cuco/core/service/cron/IKumsSkzShopSynchronizationJobTest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 990,
    "content": "package at.a1ta.cuco.core.service.cron;\n\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport at.a1ta.bite.core.server.dao.CronjobConfigurationDao;\nimport at.a1ta.bite.core.server.service.KumsCommonService;\n\n@Ignore\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = {\"classpath:testApplicationContext-cuco-core.xml\"})\npublic class IKumsSkzShopSynchronizationJobTest {\n\n  @Autowired\n  KumsCommonService kumsCommonService;\n\n  @Autowired\n  CronjobConfigurationDao cronjobConfigurationDao;\n\n  @Test\n  public void runJobTest() {\n    KumsSkzShopSynchronizationJob job = new KumsSkzShopSynchronizationJob();\n    job.setKumsCommonService(kumsCommonService);\n    job.setCronjobConfigurationDao(cronjobConfigurationDao);\n    job.run();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/CucoCore.gwt.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/CucoCore.gwt.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 241,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Google Inc.//DTD Google Web Toolkit 2.5.1//EN\" \"http://www.gwtproject.org/doctype/2.5.1/gwt-module.dtd\">\n<module>\n  <source path=\"shared\"/>\n  <source path=\"bean\"/>\n</module>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/billingcycle/sqlmap-billingCycle.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/billingcycle/sqlmap-billingCycle.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1388,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"BillingCycle\">\n\n\t<typeAlias alias=\"cycle\" type=\"at.a1ta.cuco.core.shared.dto.BillingCycle\"/>\n\t<typeAlias alias=\"entry\" type=\"at.a1ta.cuco.core.shared.dto.BillingCycleEntry\"/>\n\n\t<resultMap id=\"billingCycle-result\" class=\"cycle\" groupBy=\"billingDate\">\n\t\t<result property=\"billingDate\" column=\"Rechnung\" />\n\t\t<result property=\"entries\" column=\"Rechnung\" resultMap=\"BillingCycle.entry-result\"/>\n\t</resultMap>\n\t\n\t<resultMap class=\"entry\" id=\"entry-result\">\n\t\t<result property=\"id\" column=\"id\" />\n\t\t<result property=\"vBlock\" column=\"VBlock\" />\n\t\t<result property=\"column\" column=\"Spalte\" />\n\t\t<result property=\"step\" column=\"Schritt\" />\n\t\t<result property=\"from\" column=\"von\" />\n\t\t<result property=\"to\" column=\"bis\" />\n\t\t<result property=\"hr\" column=\"HR\" />\n\t</resultMap>\n\n\t<select id=\"getVBlock\" resultMap=\"billingCycle-result\" parameterClass=\"java.lang.String\">\n\t\tSELECT     \n\t\t\tid, CONVERT(datetime, Rechnung) AS rechnung, VBlock, Spalte, Schritt, von, bis, HR\n\t\tFROM         dbo.Arbeitsplan_begin_1\n\t\tWHERE     \n\t\t\t(VBlock = #vblock#) \n\t\tAND \n\t\t\t(CONVERT(datetime, Rechnung) &gt; GETDATE()) \n\t\tAND \n\t\t\t(CONVERT(datetime, Rechnung) &lt; GETDATE() + 67)\n\t\tORDER BY CONVERT(datetime, Rechnung)\n\t</select>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/billingcycle/applicationContext-cuco-dao-bc.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/billingcycle/applicationContext-cuco-dao-bc.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1740,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:aop=\"http://www.springframework.org/schema/aop\"\n\txmlns:context=\"http://www.springframework.org/schema/context\"\n\txmlns:tx=\"http://www.springframework.org/schema/tx\"\n\txsi:schemaLocation=\"http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n\t\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n\t\thttp://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\n\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n    <bean id=\"dataSourceBC\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\" lazy-init=\"false\">\n      <property name=\"driverClassName\" value=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\" />\n      <property name=\"url\" value=\"jdbc:sqlserver://${bc.host};databaseName=${bc.dbname}\" />\n      <property name=\"username\" value=\"${bc.username}\" />\n      <property name=\"password\" value=\"${bc.password}\" />\n      <property name=\"maxIdle\" value=\"600\" />\n    </bean>\n\n    <bean id=\"sqlMapClientBC\" class=\"org.springframework.orm.ibatis.SqlMapClientFactoryBean\">\n      <property name=\"configLocation\" value=\"classpath:/at/a1ta/cuco/core/dao/billingcycle/sqlmap-config-bc.xml\" />\n      <property name=\"dataSource\"><ref local=\"dataSourceBC\" /></property>\n    </bean>\n\n    <bean id=\"billingCycleDao\" class=\"at.a1ta.cuco.core.dao.billingcycle.DefaultBillingCycleDao\">\n        <property name=\"sqlMapClient\" ref=\"sqlMapClientBC\" />\n    </bean>\n\n</beans>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/billingcycle/sqlmap-config-bc.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/billingcycle/sqlmap-config-bc.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 492,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMapConfig PUBLIC \"-//ibatis.apache.org//DTD SQL Map Config 2.0//EN\" \"http://ibatis.apache.org/dtd/sql-map-config-2.dtd\">\n<sqlMapConfig>\n\t<settings useStatementNamespaces=\"true\" cacheModelsEnabled=\"true\" lazyLoadingEnabled=\"false\" />\n  \n    <typeAlias alias=\"ehcacheProvider\" type=\"at.a1ta.bite.sqlmap.engine.chache.ehcache.EhCacheController\" />\n  \n\t<sqlMap resource=\"at/a1ta/cuco/core/dao/cmdb/sqlmap-cmDBICTService.xml\" />\n</sqlMapConfig>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-inventoryProductGroup.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-inventoryProductGroup.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 7801,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"InventoryProductGroup\">\n  <typeAlias alias=\"inventoryProductGroup\" type=\"at.a1ta.cuco.core.shared.dto.InventoryProductGroup\"/>\n  <typeAlias alias=\"product\" type=\"at.a1ta.cuco.core.shared.dto.Product\"/>\n  <typeAlias alias=\"productLevel\" type=\"at.a1ta.cuco.core.shared.dto.ProductLevel\"/>\n  <typeAlias alias=\"inventoryProductGroupAssignation\" type=\"at.a1ta.cuco.core.shared.dto.InventoryProductGroupAssignation\"/>\n  <typeAlias alias=\"inventoryProductGroupUsage\" type=\"at.a1ta.cuco.core.shared.dto.InventoryProductGroupUsage\"/>\n  \n  <cacheModel type=\"ehcacheProvider\" id=\"inventoryProductGroupCache\">\n    <flushOnExecute statement=\"InventoryProductGroup.Insert\"/>\n    <flushOnExecute statement=\"InventoryProductGroup.Update\"/>\n    <flushOnExecute statement=\"InventoryProductGroup.Delete\"/>\n    <flushOnExecute statement=\"InventoryProductGroup.MoveUp\"/>\n    <flushOnExecute statement=\"InventoryProductGroup.MoveDown\"/>\n    <flushOnExecute statement=\"InventoryProductGroup.MoveUpFrom\"/>\n    <flushInterval hours=\"1\"/>\n    <property name=\"size\" value=\"1000\"/>\n  </cacheModel>\n\n  <resultMap id=\"inventoryProductGroup-result\" class=\"inventoryProductGroup\">\n\t<result property=\"id\" column=\"BESTAND_PRODUKTGRUPPE_ID\" />\n\t<result property=\"name\" column=\"NAME\" />\n\t<result property=\"order\" column=\"REIHUNG\" />\n\t<result property=\"visible\" column=\"SICHTBAR\" />\n\t<result property=\"anb\" column=\"ANB\" />\n  </resultMap>\n  \n  <resultMap id=\"inventoryProductGroupUsage-result\" class=\"inventoryProductGroupUsage\">\n\t<result property=\"name\" column=\"NAME\" />\n\t<result property=\"anb\" column=\"ANB\" />\n\t<result property=\"number\" column=\"NUM\" />\n\t<result property=\"order\" column=\"REIHUNG\" />\n  </resultMap>\n  \n  <resultMap id=\"product-result\" class=\"product\">\n\t<result property=\"productId\" column=\"SSA_PRODUKT_ID\" />\n\t<result property=\"productDescription\" column=\"PRODUKT_BES\" />\n  </resultMap>\n  \n  <resultMap id=\"productLevel-result\" class=\"productLevel\">\n\t<result property=\"productLevelId\" column=\"PRODUKTEBENE_ID\" />\n\t<result property=\"productLevelDescription\" column=\"PRODUKTEBENE_BES\" />\n  </resultMap>\n  \n  <resultMap id=\"InventoryProductGroupAssignations-result\" class=\"inventoryProductGroupAssignation\">\n\t<result property=\"inventoryProductGroupId\" column=\"BESTAND_PRODUKTGRUPPE_ID\" />\n\t<result property=\"productId\" column=\"SSA_PRODUKT_ID\" />\n\t<result property=\"levelId\" column=\"PRODUKTEBENE_ID\" nullValue=\"0\"/>\n  </resultMap>\n    \n  <select id=\"Get\" resultMap=\"inventoryProductGroup-result\" parameterClass=\"java.lang.Long\" cacheModel=\"inventoryProductGroupCache\">\n    SELECT * FROM CUCO_BESTAND_PRODUKTGRUPPE\n    <isParameterPresent>\n\t  WHERE BESTAND_PRODUKTGRUPPE_ID=#id#\n\t</isParameterPresent>\n\t<isNotParameterPresent>\n\t  ORDER BY REIHUNG\n\t</isNotParameterPresent>\n  </select>\n  \n  <select id=\"GetUsagesByPartyId\" resultMap=\"inventoryProductGroupUsage-result\" parameterClass=\"java.lang.Long\">\n  \tSELECT /*+ parallel (BPPH,8) */ /*+ parallel (PH,8) *//*+ parallel (B,8) *//*+ parallel (BP,8) *//*+ parallel (R,8) */ BP.NAME, BP.ANB, COUNT(*) AS NUM, BP.REIHUNG\n\tFROM CUCO_BEST_PRODGRP_PROD_HIER BPPH, V_PRODUKT_HIERARCHIE PH, V_BESTAND B, CUCO_BESTAND_PRODUKTGRUPPE BP, V_RUFNUMMER R\n\tWHERE (BPPH.SSA_PRODUKT_ID=PH.SSA_PRODUKT_ID OR BPPH.PRODUKTEBENE_ID=PH.PRODUKTEBENE_1_ID OR BPPH.PRODUKTEBENE_ID=PH.PRODUKTEBENE_2_ID OR BPPH.PRODUKTEBENE_ID=PH.PRODUKTEBENE_3_ID OR BPPH.PRODUKTEBENE_ID=PH.PRODUKTEBENE_4_ID)\n\t  AND B.SSA_PRODUKT_ID=PH.SSA_PRODUKT_ID\n\t  AND BP.BESTAND_PRODUKTGRUPPE_ID=BPPH.BESTAND_PRODUKTGRUPPE_ID\n\t  AND BP.SICHTBAR=1\n\t  AND B.KUNDE_ID=#partyId#\n\t  AND R.VERTRAG_ID=B.VERTRAG_ID\n      AND (((R.RUFNUMMERNSYSTEM_CD='TA' AND (B.PRODUKTKATEGORIE_TYP_CD='V' OR (B.PRODUKTKATEGORIE_TYP_CD='B' AND B.PRODUKT_BES IS NOT NULL))) \n           OR (R.RUFNUMMERNSYSTEM_CD<![CDATA[<>]]>'TA' AND B.PRODUKT_BES IS NOT NULL)))\n\tGROUP BY BP.NAME, BP.ANB, BP.REIHUNG\n </select>\n \n <select id=\"GetAnbSsaProductIds\" resultClass=\"string\">\n  SELECT SSA_PRODUKT_ID\n  FROM v_visible_products\n  WHERE ANB=1\n </select>\n\n  <insert id=\"Insert\" parameterClass=\"inventoryProductGroup\">\n    <selectKey resultClass=\"long\" keyProperty=\"id\">SELECT SEQ_CUCO_BESTAND_PRODUKTGRUPPE.nextval AS id FROM dual</selectKey>\n    INSERT INTO CUCO_BESTAND_PRODUKTGRUPPE(BESTAND_PRODUKTGRUPPE_ID, NAME, REIHUNG, SICHTBAR, ANB)\n    VALUES (#id#, #name#, (SELECT COUNT(*) FROM CUCO_BESTAND_PRODUKTGRUPPE), #visible#, #anb#)\n  </insert>\n  \n  <update id=\"Update\" parameterClass=\"inventoryProductGroup\">\n    UPDATE CUCO_BESTAND_PRODUKTGRUPPE\n    SET NAME=#name#,\n      REIHUNG=#order#,\n      SICHTBAR=#visible#,\n      ANB=#anb#\n    WHERE BESTAND_PRODUKTGRUPPE_ID=#id#\n  </update>\n\n  <delete id=\"Delete\" parameterClass=\"long\">\n    DELETE FROM CUCO_BESTAND_PRODUKTGRUPPE\n    WHERE BESTAND_PRODUKTGRUPPE_ID=#id#\n  </delete>\n  \n  <select id=\"GetProductsForInventoryProductGroup\" resultMap=\"product-result\" parameterClass=\"java.lang.Long\">\n\tselect BPPH.SSA_PRODUKT_ID, PRODUKT_BES \n\tfrom V_PRODUKT_HIERARCHIE PH, CUCO_BEST_PRODGRP_PROD_HIER BPPH\n\twhere PH.SSA_PRODUKT_ID=BPPH.SSA_PRODUKT_ID\n\tand BESTAND_PRODUKTGRUPPE_ID=#id#\n    order by PRODUKT_BES\n  </select>\n  \n  <select id=\"GetProductLevelsForInventoryProductGroup\" resultMap=\"productLevel-result\" parameterClass=\"java.lang.Long\">\n\tselect DISTINCT BPPH.PRODUKTEBENE_ID, decode(\n        BPPH.PRODUKTEBENE_ID, PH.PRODUKTEBENE_1_ID, ph.produktebene_1_bes,\n                              PH.PRODUKTEBENE_2_ID, ph.produktebene_2_bes,\n                              PH.PRODUKTEBENE_3_ID, ph.produktebene_3_bes,\n                              PH.PRODUKTEBENE_4_ID, ph.produktebene_4_bes\n    ) AS PRODUKTEBENE_BES\n    from V_PRODUKT_HIERARCHIE PH, CUCO_BEST_PRODGRP_PROD_HIER BPPH\n    where (PH.PRODUKTEBENE_1_ID=BPPH.PRODUKTEBENE_ID OR PH.PRODUKTEBENE_2_ID=BPPH.PRODUKTEBENE_ID OR PH.PRODUKTEBENE_3_ID=BPPH.PRODUKTEBENE_ID OR PH.PRODUKTEBENE_4_ID=BPPH.PRODUKTEBENE_ID) \n    and BESTAND_PRODUKTGRUPPE_ID=#id#\n    order by 2\n  </select>\n  \n  <select id=\"getInventoryProductGroupAssignations\" resultMap=\"InventoryProductGroupAssignations-result\">\n    SELECT * FROM CUCO_BEST_PRODGRP_PROD_HIER\n  </select>\n  \n  <insert id=\"AddProduct\" parameterClass=\"java.util.Map\">\n    INSERT INTO CUCO_BEST_PRODGRP_PROD_HIER(BESTAND_PRODUKTGRUPPE_ID, SSA_PRODUKT_ID)\n    VALUES (#inventoryProductGroupId#, #productId#)\n  </insert>\n  \n  <insert id=\"AddLevel\" parameterClass=\"java.util.Map\">\n    INSERT INTO CUCO_BEST_PRODGRP_PROD_HIER(BESTAND_PRODUKTGRUPPE_ID, PRODUKTEBENE_ID)\n    VALUES (#inventoryProductGroupId#, #levelId#)\n  </insert>\n  \n  <delete id=\"RemoveProduct\" parameterClass=\"java.util.Map\">\n    DELETE FROM CUCO_BEST_PRODGRP_PROD_HIER\n    WHERE BESTAND_PRODUKTGRUPPE_ID=#inventoryProductGroupId# AND SSA_PRODUKT_ID=#productId#\n  </delete>\n  \n  <delete id=\"RemoveLevel\" parameterClass=\"java.util.Map\">\n    DELETE FROM CUCO_BEST_PRODGRP_PROD_HIER\n    WHERE BESTAND_PRODUKTGRUPPE_ID=#inventoryProductGroupId# AND PRODUKTEBENE_ID=#levelId#\n  </delete>\n  \n  <update id=\"MoveUp\" parameterClass=\"java.lang.Integer\">\n    UPDATE CUCO_BESTAND_PRODUKTGRUPPE\n    SET REIHUNG = decode (REIHUNG, #order#, #order# - 1,\n    \t\t\t\t\t\t\t   #order# - 1 , #order#)\n    WHERE REIHUNG=#order# OR REIHUNG=#order# - 1\n  </update>\n  \n  <update id=\"MoveDown\" parameterClass=\"java.lang.Integer\">\n    UPDATE CUCO_BESTAND_PRODUKTGRUPPE\n    SET REIHUNG = decode (REIHUNG, #order#, #order# + 1,\n    \t\t\t\t\t\t\t   #order# + 1 , #order#)\n    WHERE REIHUNG=#order# OR REIHUNG=#order# + 1\n  </update>\n  \n  <update id=\"MoveUpFrom\" parameterClass=\"java.lang.Integer\">\n    UPDATE CUCO_BESTAND_PRODUKTGRUPPE\n    SET REIHUNG = REIHUNG - 1\n    WHERE REIHUNG>=#order#\n  </update>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-customerUnlockRequest.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-customerUnlockRequest.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2194,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"CustomerUnlockRequest\">\n\n  <typeAlias alias=\"customerUnlockRequest\" type=\"at.a1ta.cuco.core.shared.dto.access.ContextAwareCustomerUnlockRequest\" />\n\n  <resultMap class=\"customerUnlockRequest\" id=\"customerUnlockRequest-result\">\n    <result property=\"customerId\" column=\"kunde_id\" />\n    <result property=\"user\" column=\"user_id\" select=\"User.getBiteUserById\" />\n    <result property=\"jobId\" column=\"job_ref_num\" />\n    <result property=\"sessionKey\" column=\"kontext_ref_num\" />\n    <result property=\"context\" column=\"kontext_radius\" />\n    <result property=\"created\" column=\"anfrage_erzeugt\" />\n    <result property=\"finished\" column=\"anfrage_erledigt\" />\n    <result property=\"state\" column=\"anfrage_status\" />\n  </resultMap>\n\n  <select id=\"findCustomerUnlockRequestByCustomerIdAndUsernameAndJobIdAndSessionKey\" parameterClass=\"java.util.Map\" resultMap=\"customerUnlockRequest-result\">\n    SELECT * FROM cuco_freischaltung\n     WHERE kunde_id = #customerId#\n       AND user_id = #userId#\n       AND job_ref_num = #jobId#\n       AND kontext_ref_num = #sessionKey#\n  </select>\n  \n  <select id=\"findCustomerUnlockRequestByCustomerIdAndUsernameAndSessionKey\" parameterClass=\"java.util.Map\" resultMap=\"customerUnlockRequest-result\">\n    SELECT * FROM cuco_freischaltung\n     WHERE kunde_id = #customerId#\n       AND user_id = #userId#\n       AND kontext_ref_num = #sessionKey#\n  </select>\n  \n  <insert id=\"insert\" parameterClass=\"customerUnlockRequest\">\n    INSERT INTO cuco_freischaltung (kunde_id, user_id, job_ref_num, kontext_ref_num, kontext_radius, anfrage_erzeugt, anfrage_status)\n         VALUES (#customerId#,#user.id#,#jobId#,#sessionKey#,#context#,#created#,#state#)\n  </insert>\n  \n  <update id=\"update\" parameterClass=\"customerUnlockRequest\">\n    UPDATE cuco_freischaltung SET\n      anfrage_erledigt = #finished#,\n      anfrage_status = #state#\n    WHERE kunde_id = #customerId#\n       AND user_id = #user.id#\n       AND job_ref_num = #jobId#\n       AND kontext_ref_num = #sessionKey#\n  </update>\n \n</sqlMap> \n  ",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-standardAddress.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-standardAddress.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4311,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"StandardAddress\">\n  <typeAlias alias=\"StandardAddress\" type=\"at.a1ta.cuco.core.shared.dto.StandardAddress\" />\n  <typeAlias alias=\"Country\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.Country\" />\n\n  <cacheModel type=\"ehcacheProvider\" id=\"address-cache\">\n    <flushOnExecute statement=\"StandardAddress.insertAddress\"/>\n    <flushOnExecute statement=\"StandardAddress.updateAddress\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <cacheModel type=\"ehcacheProvider\" id=\"country-cache\">\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <resultMap id=\"address-resultmap\" class=\"StandardAddress\">\n    <result property=\"addressId\" column=\"address_id\" />\n    <result property=\"lkmsId\" column=\"lkms_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"street\" column=\"street\" />\n    <result property=\"houseNumber\" column=\"house_number\" />\n    <result property=\"block\" column=\"block\" />\n    <result property=\"staircase\" column=\"staircase\" />\n    <result property=\"floorNumber\" column=\"floor_number\" />\n    <result property=\"doorNumber\" column=\"door_number\" />\n    <result property=\"additional\" column=\"additional\" />\n    <result property=\"postcode\" column=\"postcode\" />\n    <result property=\"city\" column=\"city\" />\n    <result property=\"country\" column=\"country\" />\n    <result property=\"creationUser\" column=\"creation_user\" select=\"User.getBiteUserById\"/>\n    <result property=\"creationDate\" column=\"creation_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n    <result property=\"lastModificationDate\" column=\"last_update\" />\n    <result property=\"dataSource\" column=\"data_source\" />\n  </resultMap>\n  \n  <resultMap id=\"country-resultmap\" class=\"Country\">\n     <result property=\"iso3166Alpha2\"               column=\"iso_3166_1_alpha_2\" />\n     <result property=\"iso3166Alpha3\"               column=\"iso_3166_1_alpha_3\" />\n     <result property=\"nameGerman\"                  column=\"name_german\" />\n  </resultMap>\n  \n  <select id=\"getAddress\" resultMap=\"address-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"address-cache\">\n      SELECT *\n        FROM cuco_standard_address\n       WHERE address_id = #addressId#\n  </select>\n  \n  <select id=\"getAddressByLkmsIdAndPartyId\" resultMap=\"address-resultmap\" cacheModel=\"address-cache\">\n      SELECT *\n        FROM cuco_standard_address\n      WHERE lkms_id=#lkmsId# AND kunde_id=#partyId#\n  </select>\n  \n  <select id=\"loadCountries\" resultMap=\"country-resultmap\" cacheModel=\"country-cache\">\n    select *\n    from cuco_country\n    order by name_german asc\n  </select>\n  \n  <insert id=\"insertAddress\" parameterClass=\"StandardAddress\">\n    <selectKey resultClass=\"long\" keyProperty=\"addressId\">SELECT seq_cuco_standard_address.nextval AS addressId FROM dual</selectKey>\n    insert into cuco_standard_address \n     (address_id, lkms_id, kunde_id, street, house_number, block, staircase, floor_number, door_number, additional, postcode, city, country, creation_user, creation_date, last_modifier, last_update, data_source)\n    values \n     (#addressId#, #lkmsId#, #partyId#, #street#, #houseNumber#, #block#, #staircase#, #floorNumber#, #doorNumber#, #additional#, #postcode#, #city#, #country#, #creationUser.id#, #creationDate#, #lastModificationUser.id#, #lastModificationDate#, #dataSource#)\n  </insert>\n  \n  <update id=\"updateAddress\" parameterClass=\"StandardAddress\">\n    update cuco_standard_address \n       set lkms_id= #lkmsId#, \n           street= #street#, \n           house_number= #houseNumber#, \n           block= #block#, \n           staircase= #staircase#, \n           floor_number= #floorNumber#, \n           door_number= #doorNumber#, \n           additional= #additional#, \n           postcode= #postcode#, \n           city= #city#, \n           country= #country#,\n           last_modifier = #lastModificationUser.id#,\n           last_update = #lastModificationDate#,\n           data_source = #dataSource#\n     WHERE address_id = #addressId#\n  </update>  \n  \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-gamification.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-gamification.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2323,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"Gamification\">\n  <resultMap id=\"gamification-result-minimal\" class=\"at.a1ta.cuco.core.shared.dto.GamificationMessage\">\n    <result property=\"messageUid\" column=\"messageUid\" />\n    <result property=\"title\" column=\"title\" />\n    <result property=\"message\" column=\"message\" />\n    <result property=\"url\" column=\"url\" />\n    <result property=\"agentUserId\" column=\"agentUserId\"/>\n    <result property=\"readByAgent\" column=\"readByAgent\" />\n  </resultMap>\n\n  <insert id=\"insert\" parameterClass=\"java.util.HashMap\">\n    Insert into GAMIFICATION_MESSAGE_LOG (messageUid,\"type\",title,message,url,agentUserId,readByAgent,\"timestamp\")\n    values\n    (#message.messageUid#,'MESSAGE',#message.title#,#message.message#,#message.url#,#agentUserId#,#message.readByAgent#,systimestamp)\n  </insert>\n\n  <select id=\"getAlreadyStoredMessages\" parameterClass=\"java.util.HashMap\" resultClass=\"at.a1ta.cuco.core.shared.dto.GamificationMessage\">\n    SELECT * FROM GAMIFICATION_MESSAGE_LOG WHERE messageUid in <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"messageIds\">#messageIds[]#</iterate>\n    and agentUserId=#agentUserId# and \"type\"='MESSAGE'\n  </select>\n  \n  \n  <update id=\"markMessageAsRead\" parameterClass=\"java.util.HashMap\">\n    UPDATE GAMIFICATION_MESSAGE_LOG\n    SET readByAgent=1\n    WHERE messageUid = #messageUid#\n    and agentUserId=#agentUserId#\n  </update>\n  \n  <update id=\"expireGamificationOneTimeToken\" parameterClass=\"java.util.HashMap\">\n    UPDATE GAMIFICATION_MESSAGE_LOG\n    SET expired=1\n    WHERE messageUid = #token# and \"type\"='AUTH_REQUEST'\n  </update>\n  \n  <select id=\"getMatchingActiveTokensCount\"  resultClass=\"java.lang.Integer\" parameterClass=\"java.util.HashMap\">\n    SELECT count(1) FROM GAMIFICATION_MESSAGE_LOG WHERE messageUid =#token#\n    and expired <![CDATA[<>]]> '1' and \"type\"='AUTH_REQUEST'\n  </select>\n  \n  <insert id=\"creatGamificationOneTimeToken\" parameterClass=\"java.util.HashMap\">\n    Insert into GAMIFICATION_MESSAGE_LOG (messageUid,\"type\",title,message,agentUserId,readByAgent,\"timestamp\",expired)\n    values\n    (#token#,'AUTH_REQUEST','LOGIN','LOGIN',#agentUserId#,'0',systimestamp,'0')\n  </insert>\n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-invoice.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-invoice.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2015,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: christoph.strobl@telekom.at -->\n<sqlMap namespace=\"Invoice\">\n\t<cacheModel id=\"invoice-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t\t<flushInterval hours=\"3\" />\n\t\t<property name=\"cache-size\" value=\"1000\" />\n\t</cacheModel>\n\n\t<resultMap id=\"invoice-result\" class=\"at.a1ta.cuco.core.shared.dto.Invoice\">\n\t\t<result property=\"invoiceId\" column=\"rechnung_id\" />\n\t\t<result property=\"clearingAccountNumber\" column=\"konto_id\" />\n\t\t<result property=\"customerId\" column=\"kunde_id\" />\n\t\t<result property=\"invoiceDate\" column=\"rechnung_lauf_dat\" />\n\t\t<result property=\"invoiceRunId\" column=\"rechnung_lauf_id\" />\n\t\t<result property=\"paymentDate\" column=\"faelligkeit_dat\" />\n\t\t<result property=\"totalFee\" column=\"gesamt_bet\" nullValue=\"0\"/>\n\t\t<result property=\"totalGrossFee\" column=\"GesamtBruttobetrag_Bet\" nullValue=\"0\"/>\n\t\t<result property=\"totalPaymentFee\" column=\"zuzahlender_bet\" nullValue=\"0\"/>\n\t</resultMap>\n\n\t<sql id=\"attributes_v_rechnung\">\n      v_rechnung.rechnung_id, v_rechnung.kunde_id, v_rechnung.konto_id, v_rechnung.rechnung_lauf_dat, v_rechnung.faelligkeit_dat, v_rechnung.gesamt_bet, v_rechnung.rechnung_lauf_id, v_rechnung.GesamtBruttobetrag_Bet, v_rechnung.zuzahlender_bet\n    </sql>\n\n\t<select id=\"getByPartyIds\" resultMap=\"invoice-result\" cacheModel=\"invoice-cache\">\n\t\tSELECT <include refid=\"attributes_v_rechnung\" />\n\t\t  FROM v_rechnung\n\t\t  <dynamic prepend=\"WHERE\">\n\t\t  \t<isNotEmpty prepend=\"AND\" property=\"partyIds\">\n\t\t  \t\tkunde_id in <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"partyIds\">#partyIds[]#</iterate>\n\t\t  \t</isNotEmpty>\n\t\t  </dynamic>\n\t      ORDER BY rechnung_lauf_dat DESC\n\t</select>\n\t\n\t<select id=\"getById\" resultMap=\"invoice-result\" cacheModel=\"invoice-cache\">\n    SELECT <include refid=\"attributes_v_rechnung\" /> FROM v_rechnung WHERE v_rechnung.rechnung_id = #id#\n  </select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-user.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-user.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4609,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"User\">\n\n  <typeAlias alias=\"biteUser\" type=\"at.a1ta.bite.core.shared.dto.BiteUser\" />\n\n  <cacheModel id=\"app-user-cache\" type=\"ehcacheProvider\"/>\n  <resultMap class=\"biteUser\" id=\"biteUser-result-slim\">\n    <result property=\"id\" column=\"user_id\" />\n    <result property=\"username\" column=\"login\" />\n    <result property=\"firstName\" column=\"firstname\" />\n    <result property=\"lastName\" column=\"lastname\" />\n    <result property=\"email\" column=\"email\" />\n  </resultMap>\n  \n  <resultMap class=\"biteUser\" id=\"biteUser-result\">\n    <result property=\"id\" column=\"user_id\" />\n    <result property=\"username\" column=\"login\" />\n    <result property=\"firstName\" column=\"firstname\" />\n    <result property=\"lastName\" column=\"lastname\" />\n    <result property=\"email\" column=\"email\" />\n    <result property=\"salesTitle\" column=\"login\" select=\"User.getRolleByUserName\"/>\n    <result property=\"managementLevel1OrgUnitNumber\" column=\"ml1_orgunit_id\" />\n    <result property=\"managementLevel1OrgUnitShort\" column=\"ml1_orgunit_short\" />\n    <result property=\"managementLevel1OrgUnitDescription\" column=\"ml1_orgunit_desc\" />\n  \n    <result property=\"managementLevel2OrgUnitNumber\" column=\"ml2_orgunit_id\" />\n    <result property=\"managementLevel2OrgUnitShort\" column=\"ml2_orgunit_short\" />\n    <result property=\"managementLevel2OrgUnitDescription\" column=\"ml2_orgunit_desc\" />\n  \n    <result property=\"managementLevel3OrgUnitNumber\" column=\"ml3_orgunit_id\" />\n    <result property=\"managementLevel3OrgUnitShort\" column=\"ml3_orgunit_short\" />\n    <result property=\"managementLevel3OrgUnitDescription\" column=\"ml3_orgunit_desc\" />\n  \n    <result property=\"managementLevel4OrgUnitNumber\" column=\"ml4_orgunit_id\" />\n    <result property=\"managementLevel4OrgUnitShort\" column=\"ml4_orgunit_short\" />\n    <result property=\"managementLevel4OrgUnitDescription\" column=\"ml4_orgunit_desc\" />\n    <result property=\"assignedToShopIds\" column=\"login\" select=\"User.getUserShops\" />\n  </resultMap>\n\n\n  <select id=\"getBiteUserById\" cacheModel=\"app-user-cache\" resultMap=\"biteUser-result\" parameterClass=\"long\">\n    SELECT * FROM bite_user\n    WHERE user_id = #id#\n  </select>\n  \n   <select id=\"getBiteUserByIdSlim\" cacheModel=\"app-user-cache\" resultMap=\"biteUser-result-slim\" parameterClass=\"long\">\n    SELECT * FROM bite_user\n    WHERE user_id = #id#\n  </select>\n  \n  <select id=\"getBiteUserByUserNameSlim\" cacheModel=\"app-user-cache\" resultMap=\"biteUser-result-slim\" parameterClass=\"String\">\n    SELECT * FROM bite_user\n    WHERE login = #username#\n  </select>\n  \n  <select id=\"getAllLogin\" resultClass=\"java.lang.String\" parameterClass=\"java.util.ArrayList\">\n    SELECT lower(login) FROM bite_user\n  </select>\n  \n    <select id=\"GetAllUsers\" resultMap=\"biteUser-result\" parameterClass=\"java.lang.String\">\n    SELECT u.*\n      FROM bite_user u, bite_role_auth ra, bite_user_role ur, bite_auth auth\n     WHERE \n        auth.name = #auth#   \n     and\n            auth.name = ra.auth\n         and\n            ra.role = ur.role\n         and\n            ur.user_id = u.user_id\n  </select>\n  \n  <select id=\"getUserShops\" resultClass=\"java.lang.String\" parameterClass=\"java.lang.String\">\n    select shop.SHOPID from CUCO_USERSHOPASSIGNMENT shop where lower(shop.USERNAME)=lower(#login#) \n  </select>\n  \n  <select id=\"GetUsersForTeam\" resultMap=\"biteUser-result\" parameterClass=\"java.lang.Long\">\n    select u.* from bite_user u, cuco_team t, cuco_team_user tb\n    where u.user_id = tb.user_id and t.team_id = tb.team_id\n    and t.team_id = #teamId#\n  </select>\n  \n  <select id=\"searchAll\" resultMap=\"biteUser-result\" parameterClass=\"java.util.Map\" >\n    select *  from bite_user  \n    <dynamic prepend=\"where\">\n      <isNotEmpty prepend=\"and\" removeFirstPrepend=\"true\" property=\"usr\">\n        lower(LOGIN) like lower(#usr#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"and\" removeFirstPrepend=\"true\" property=\"name\">\n        lower(FIRSTNAME) like lower(#name#) or lower(LASTNAME) like lower(#name#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"and\" removeFirstPrepend=\"true\" property=\"orgunit\">\n         lower(ML1_ORGUNIT_SHORT) like lower(#orgunit#)\n      </isNotEmpty>\n    </dynamic>\n  </select>\n  \n  <select id=\"getRolleByUserName\" resultClass=\"java.lang.String\" parameterClass=\"java.lang.String\">\n    SELECT a.ROLLE FROM CCT_APPROVER_HIERARCHY a\n    <isParameterPresent>\n    WHERE lower(a.USER_ID) = lower(#login#)\n    </isParameterPresent>\n  </select>\n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-billingCycle.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-billingCycle.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1388,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"BillingCycle\">\n\n\t<typeAlias alias=\"cycle\" type=\"at.a1ta.cuco.core.shared.dto.BillingCycle\"/>\n\t<typeAlias alias=\"entry\" type=\"at.a1ta.cuco.core.shared.dto.BillingCycleEntry\"/>\n\n\t<resultMap id=\"billingCycle-result\" class=\"cycle\" groupBy=\"billingDate\">\n\t\t<result property=\"billingDate\" column=\"Rechnung\" />\n\t\t<result property=\"entries\" column=\"Rechnung\" resultMap=\"BillingCycle.entry-result\"/>\n\t</resultMap>\n\t\n\t<resultMap class=\"entry\" id=\"entry-result\">\n\t\t<result property=\"id\" column=\"id\" />\n\t\t<result property=\"vBlock\" column=\"VBlock\" />\n\t\t<result property=\"column\" column=\"Spalte\" />\n\t\t<result property=\"step\" column=\"Schritt\" />\n\t\t<result property=\"from\" column=\"von\" />\n\t\t<result property=\"to\" column=\"bis\" />\n\t\t<result property=\"hr\" column=\"HR\" />\n\t</resultMap>\n\n\t<select id=\"getVBlock\" resultMap=\"billingCycle-result\" parameterClass=\"java.lang.String\">\n\t\tSELECT     \n\t\t\tid, CONVERT(datetime, Rechnung) AS rechnung, VBlock, Spalte, Schritt, von, bis, HR\n\t\tFROM         dbo.Arbeitsplan_begin_1\n\t\tWHERE     \n\t\t\t(VBlock = #vblock#) \n\t\tAND \n\t\t\t(CONVERT(datetime, Rechnung) &gt; GETDATE()) \n\t\tAND \n\t\t\t(CONVERT(datetime, Rechnung) &lt; GETDATE() + 67)\n\t\tORDER BY CONVERT(datetime, Rechnung)\n\t</select>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-vipHistory.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-vipHistory.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2353,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"VIPHistory\">\n\n\t<resultMap id=\"vipHistory-result\" class=\"at.a1ta.cuco.core.shared.dto.VIPHistoryEntry\">\n\t\t<result property=\"vipHistoryId\" column=\"VIP_HISTORY_ID\" />\n\t\t<result property=\"customerId\" column=\"KUNDE_ID\" />\n\t\t<result property=\"created\" column=\"CREATION_DATE\" />\n\t\t<result property=\"userId\" column=\"BENUTZER_ID\" />\n\t\t<result property=\"reported\" column=\"REPORTED\" />\n\t\t<result property=\"oldStatus\" column=\"OLD_STATUS\" />\n\t\t<result property=\"newStatus\" column=\"NEW_STATUS\" />\n\t\t<result property=\"name\" column=\"NAME\" />\n\t</resultMap>\n\n\t<insert id=\"SaveVIPHistory\" parameterClass=\"at.a1ta.cuco.core.shared.dto.VIPHistoryEntry\">\n\t\t<selectKey keyProperty=\"vipHistoryId\" resultClass=\"java.lang.Long\" type=\"pre\">\n\t\t\tSELECT SEQ_CUCO_VIP_HISTORY.NEXTVAL AS id FROM DUAL\n\t\t</selectKey>\n\t\tinsert into CUCO_VIP_HISTORY (VIP_HISTORY_ID, KUNDE_ID, BENUTZER_ID, REPORTED, OLD_STATUS, NEW_STATUS)\n\t\tVALUES(#vipHistoryId#, #customerId#, #userId#, #reported#, #oldStatus#, #newStatus#)\n\t</insert>\n\n\t<select id=\"GetVIPHistory\" resultMap=\"vipHistory-result\" parameterClass=\"java.lang.Long\">\n\t\tselect V.VIP_HISTORY_ID, V.KUNDE_ID, V.CREATION_DATE, V.BENUTZER_ID, V.REPORTED, V.OLD_STATUS, V.NEW_STATUS, u.NAME\n\t\tfrom cuco_vip_history v, bite_user u\n\t\twhere kunde_id=#customerId# and u.user_id=v.benutzer_id\n\t\torder by VIP_HISTORY_ID desc\n\t</select>\n\n\t<select id=\"SearchVIPHistory\" resultMap=\"vipHistory-result\" parameterClass=\"java.util.Map\">\n\t\tSELECT * FROM cuco_vip_history v, bite_user u\n\t\tWHERE u.user_id = v.benutzer_id\n\t\t<isNotNull property=\"from\">\n\t\t AND v.creation_date <![CDATA[>]]> #from#\n\t\t</isNotNull>\n\t\t<isNotNull property=\"to\">\n\t\t AND v.creation_date <![CDATA[<]]> #to#\n\t\t</isNotNull>\n\t\t<isNotEmpty property=\"searchTerm\">\n\t\t AND (LOWER(v.reported) like LOWER('%$searchTerm$%') OR LOWER(u.name) like LOWER('%$searchTerm$%') OR TO_CHAR(v.kunde_id) like '%$searchTerm$%')\n\t\t</isNotEmpty>\n\t\t<isPropertyAvailable property=\"vipStatus\">\n\t\t <isNull property=\"vipStatus\" >\n\t\t\t AND v.new_status is null\n\t\t </isNull>\n\t\t <isNotNull property=\"vipStatus\" >\n\t\t \tAND v.new_status = #vipStatus#\n\t\t </isNotNull>\n\t\t</isPropertyAvailable>\n\t\tORDER BY v.vip_history_id DESC\n\t</select>\n\n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-team.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-team.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4036,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"Team\">\n\n\t<resultMap id=\"team-result\" class=\"at.a1ta.cuco.core.shared.dto.Team\">\n\t\t<result property=\"id\" column=\"TEAM_ID\" />\n\t\t<result property=\"name\" column=\"NAME\" />\n\t\t<result property=\"description\" column=\"BESCHREIBUNG\" />\n\t\t<result property=\"creator\" column=\"creator\" select=\"User.getBiteUserById\" />\n\t\t<result property=\"createDate\" column=\"ERSTELLT_AM\" />\n\t</resultMap>\n\t\n\t<resultMap id=\"service-result\" class=\"at.a1ta.cuco.core.shared.dto.Service\">\n\t\t<result property=\"id\" column=\"SERVICE_ID\" />\n\t\t<result property=\"name\" column=\"NAME\" />\n\t\t<result property=\"validity.validStartDate\" column=\"AKTIV_VON\" />\n\t\t<result property=\"validity.validUntilDate\" column=\"AKTIV_BIS\" />\n\t\t<result property=\"product\" column=\"PRODUKT\" />\n\t\t<result property=\"costs\" column=\"KOSTEN\" />\n\t</resultMap>\n\t\n\t<select id=\"GetAllTeams\" resultMap=\"team-result\">\n\t\tselect * from CUCO_TEAM \n\t</select>\n\t\n\t<delete id=\"RemoveMember\" parameterClass=\"java.util.Map\">\n\t\tdelete from CUCO_TEAM_USER where USER_ID = #userId# and TEAM_ID = #teamId# \n\t</delete>\n\t\n\t<insert id=\"AddMember\" parameterClass=\"java.util.Map\">\n\t\tinsert into CUCO_TEAM_USER VALUES (#teamId#, #userId#)\n\t</insert>\n\t\n\t<delete id=\"RemoveService\" parameterClass=\"java.util.Map\">\n\t\tdelete from cuco_team_dienstleistung where dienstleistung_ID = #serviceId# and TEAM_ID = #teamId# \n\t</delete>\n\t\n\t<insert id=\"AddService\" parameterClass=\"java.util.Map\">\n\t\tinsert into cuco_team_dienstleistung VALUES (#teamId#, #serviceId#)\n\t</insert>\n\t\n\t<delete id=\"DeleteTeam\" parameterClass=\"java.lang.Long\">\n\t\tdelete from CUCO_TEAM where TEAM_ID = #teamId#\n\t</delete>\n\t\n\t<insert id=\"AddTeam\" parameterClass=\"at.a1ta.cuco.core.shared.dto.Team\">\n\t\t<selectKey keyProperty=\"id\" resultClass=\"java.lang.Long\" type=\"pre\">\n\t\t\tSELECT SEQ_CUCO_TEAM.NEXTVAL AS id FROM DUAL\n\t\t</selectKey>\n\t\tinsert into CUCO_TEAM VALUES(#id#, #name#, #description#, #createDate#, #creator.id#)\n\t</insert>\n\t\n\t<select id=\"GetTeam\" resultMap=\"team-result\" parameterClass=\"java.lang.Long\">\n\t\tselect * from CUCO_TEAM where TEAM_ID = #teamId#\t\n\t</select>\n\t\n\t<select id=\"GetTeamForUser\" resultMap=\"team-result\" parameterClass=\"java.lang.Long\">\n\t\tselect c.* \n\t\tfrom \n\t\t\tcuco_team c,\n\t\t\tcuco_team_user tu\n\t\twhere\n\t\t\ttu.team_id = c.team_id\n\t\tand\n\t\t\ttu.user_id = #id#\n\t</select>\n\t\n\t<select id=\"GetServicesForTeam\" resultMap=\"service-result\" parameterClass=\"java.lang.Long\">\n\t\tselect s.DIENSTLEISTUNG_ID SERVICE_ID, s.NAME NAME, AKTIV_VON, AKTIV_BIS, PRODUKT, KOSTEN from  CUCO_dienstleistung s, cuco_team t, cuco_team_dienstleistung ts\n\t\twhere s.dienstleistung_id = ts.dienstleistung_id and t.team_id = ts.team_id\n\t\tand t.team_id = #teamId#\n\t</select>\t\n\t\n\t<update id=\"UpdateTeam\" parameterClass=\"at.a1ta.cuco.core.shared.dto.Team\">\n\t\tupdate CUCO_TEAM set NAME = #name#, BESCHREIBUNG = #description# where TEAM_ID = #id#\n\t</update>\n\t\n\t<delete id=\"RemoveAllMembers\" parameterClass=\"java.lang.Long\">\n\t\tdelete from CUCO_TEAM_USER where TEAM_ID = #teamId#\n\t</delete>\n\t\n\t<delete id=\"RemoveAllServices\" parameterClass=\"java.lang.Long\">\n\t\tdelete from cuco_team_dienstleistung where TEAM_ID = #teamId#\n\t</delete>\n\t\n\t<delete id=\"removeUserFromTeam\" parameterClass=\"java.lang.Long\">\n\t\tdelete from cuco_team_user where user_id = #userId#\n\t</delete>\n\t\n\t<select id=\"GetNotLinkedServices\" parameterClass=\"java.lang.Long\" resultMap=\"service-result\">\n\t\tselect s.DIENSTLEISTUNG_ID SERVICE_ID, s.NAME NAME, s.AKTIV_VON, s.AKTIV_BIS, s.PRODUKT, s.KOSTEN from \n\t\tCUCO_dienstleistung s where s.dienstleistung_id not in (select dienstleistung_id from cuco_team_dienstleistung ts where ts.team_id = #teamId#)\n\t</select>\n\t\n\t<select id=\"getService\" parameterClass=\"java.lang.String\" resultMap=\"service-result\">\n\t    select s.DIENSTLEISTUNG_ID SERVICE_ID, s.NAME NAME, s.AKTIV_VON, s.AKTIV_BIS, s.PRODUKT, s.KOSTEN from CUCO_dienstleistung s where lower(s.Name) like lower(#service#)\n\t</select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-customerBlock.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-customerBlock.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1570,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"CustomerBlock\">\n\n  <typeAlias alias=\"customerBlock\" type=\"at.a1ta.cuco.core.shared.dto.CustomerBlock\" />\n\n  <resultMap class=\"customerBlock\" id=\"customerBlock-result\">\n    <result property=\"id\" column=\"kundenblock_id\" />\n    <result property=\"name\" column=\"name\" />\n    <result property=\"count\" column=\"anzahl\" />\n    <result property=\"imported\" column=\"import\" />\n    <result property=\"data\" column=\"data\" />\n    <result property=\"flashInfo.id\" column=\"flash_id\"/>\n  </resultMap>\n\n  <select id=\"getForFlashInfo\" parameterClass=\"long\" resultMap=\"customerBlock-result\">\n    SELECT * FROM cuco_kundenblock\n    WHERE flash_id = #id#\n  </select>\n  \n  <select id=\"get\" parameterClass=\"long\" resultMap=\"customerBlock-result\">\n    SELECT * FROM cuco_kundenblock\n    WHERE kundenblock_id = #id#\n  </select>\n  \n  <insert id=\"insert\" parameterClass=\"customerBlock\">\n    <selectKey type=\"pre\" keyProperty=\"id\">SELECT seq_cuco_kundenblock.nextval FROM DUAL</selectKey>\n    INSERT INTO cuco_kundenblock VALUES (#id#,#name#,#count#,#imported#,#data#,#flashInfo.id#)\n  </insert>\n  \n  <update id=\"update\" parameterClass=\"customerBlock\">\n    UPDATE cuco_kundenblock SET\n      name = #name#,\n      anzahl = #count#,\n      data = #data#\n    WHERE kundenblock_id = #id#\n  </update>\n  \n  <delete id=\"delete\" parameterClass=\"long\">\n    DELETE FROM cuco_kundenblock WHERE kundenblock_id = #id#\n  </delete>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-vbmProducts.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-vbmProducts.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 7737,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"vbmProducts\">\n  <cacheModel id=\"vbmProducts-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval minutes=\"1\" />\n    <property name=\"cache-size\" value=\"1000\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"parser-cache\">\n    <property name=\"cache-size\" value=\"10\" />\n  </cacheModel>\n\n  <resultMap id=\"vbmProductScoring-result\" class=\"at.a1ta.cuco.core.shared.dto.nbo.VBMProduct\">\n    <result property=\"customerId\" column=\"KUNDE_ID\" />\n    <result property=\"productId\" column=\"PRODUCT_ID\" />\n    <result property=\"monthYearPeriod\" column=\"MONTH_YEAR_PERIOD\" />\n    <result property=\"scoringTotal\" column=\"SCORING\" />\n    <result property=\"productDetails\" column=\"{productId=PRODUCT_ID}\" select=\"vbmProducts.getProduktInfo\" />\n    <result property=\"productFeedback\" column=\"{customerId=KUNDE_ID, productId=PRODUCT_ID,monthYearPeriod=MONTH_YEAR_PERIOD}\" select=\"vbmProducts.getFeedbackForProdukt\" />\n    <result property=\"availableDeclineReasons\" column=\"{productId=PRODUCT_ID}\" select=\"vbmProducts.getAvailableFeedbackReasons\" />\n  </resultMap>\n\n  <resultMap id=\"vbmProductFeedback-result\" class=\"at.a1ta.cuco.core.shared.dto.nbo.VBMProductFeedback\">\n    <result property=\"customerId\" column=\"KUNDE_ID\" />\n    <result property=\"productId\" column=\"PRODUCT_ID\" />\n    <result property=\"monthYearPeriod\" column=\"MONTH_YEAR_PERIOD\" />\n    <result property=\"feedBackGiven\" column=\"FEEDBACK_YN\" />\n    <result property=\"selectedDeclineReason\" column=\"{declineReasonId=FEEDBACK_REASON_ID}\" select=\"vbmProducts.getFeedbackReasonById\" />\n    <result property=\"feedbackTime\" column=\"FEEDBACK_TS\" />\n    <result property=\"feedbackUserName\" column=\"FEEDBACK_USER_NAME\" />\n    <result property=\"feedbackUserId\" column=\"FEEDBACK_USER_ID\" />\n  </resultMap>\n\n  <resultMap id=\"vbmProductInfo-result\" class=\"at.a1ta.cuco.core.shared.dto.nbo.VBMProductDetails\">\n    <result property=\"productId\" column=\"PRODUCT_ID\" />\n    <result property=\"partWebProductId\" column=\"PRODUCT_PARTNERWEB_ID\" />\n    <result property=\"clarifyProductId\" column=\"PRODUCT_CLARIFY_ID\" />\n    <result property=\"productName\" column=\"PRODUCT_NAME\" />\n    <result property=\"productDetailsURL\" column=\"URL\" />\n    <result property=\"description\" column=\"MARKETING_TEXT\" />\n    <result property=\"maxScoring\" column=\"MAX_SCORING\" />\n  </resultMap>\n\n  <resultMap id=\"vbmFeedbackReasons-result\" class=\"at.a1ta.cuco.core.shared.dto.nbo.VBMDeclineReason\">\n    <result property=\"declineReasonId\" column=\"REASON_ID\" />\n    <result property=\"declineReasonText\" column=\"REASON_TXT\" />\n    <result property=\"productId\" column=\"PRODUCT_ID\" />\n  </resultMap>\n\n  <sql id=\"attributes_VBM_SCORING\">\n    KUNDE_ID, PRODUCT_ID,MONTH_YEAR_PERIOD , SCORING\n  </sql>\n\n  <sql id=\"attributes_VBM_PRODUCT\">\n    PRODUCT_ID, PRODUCT_PARTNERWEB_ID,PRODUCT_CLARIFY_ID ,\n    PRODUCT_NAME,URL,MARKETING_TEXT,MAX_SCORING\n  </sql>\n\n  <sql id=\"attributes_VBM_SCORING_FEEDBACK\">\n    KUNDE_ID, PRODUCT_ID,MONTH_YEAR_PERIOD ,\n    FEEDBACK_YN,FEEDBACK_REASON_ID,FEEDBACK_TS,FEEDBACK_USER_NAME,FEEDBACK_USER_ID\n  </sql>\n\n  <sql id=\"attributes_VBM_FEEDBACK_REASONS\">\n    REASON_ID,REASON_TXT,PRODUCT_ID\n  </sql>\n\n  <select id=\"getFeedbackForProdukt\" resultMap=\"vbmProductFeedback-result\" parameterClass=\"java.util.HashMap\">\n    SELECT\n    <include refid=\"attributes_VBM_SCORING_FEEDBACK\" />\n    FROM VBM_SCORING_FEEDBACK\n    <dynamic prepend=\"WHERE\">\n      <isNotNull prepend=\"AND\" property=\"customerId\">\n        KUNDE_ID=#customerId#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"productId\">\n        PRODUCT_ID=#productId#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"monthYearPeriod\">\n        MONTH_YEAR_PERIOD=#monthYearPeriod#\n      </isNotNull>\n    </dynamic>\n  </select>\n\n  <select id=\"listAvailableOffersForKunde\" resultMap=\"vbmProductScoring-result\" parameterClass=\"java.util.HashMap\">\n    <!-- selectKey resultClass=\"long\" keyProperty=\"attributeId\">SELECT value AS threshold FROM bite_setting where key='vbm.scoring.threshold'</selectKey -->\n    SELECT\n    <include refid=\"attributes_VBM_SCORING\" />\n    FROM VBM_SCORING offer\n    <dynamic prepend=\"WHERE\">\n      <isNotNull prepend=\"AND\" property=\"customerId\">\n        offer.KUNDE_ID=#customerId#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"productId\">\n        offer.PRODUCT_NAME=#productId#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"monthYearPeriod\">\n        offer.MONTH_YEAR_PERIOD=#monthYearPeriod#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"scoreThreshold\">\n        \n      </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"customerId\">\n         offer.SCORING &gt;= (SELECT value FROM bite_setting where key='vbm.scoring.threshold')\n         AND NOT EXISTS(\n            select 1 from VBM_SCORING_FEEDBACK feedback \n                       where feedback.KUNDE_ID=offer.KUNDE_ID \n                         and feedback.PRODUCT_ID=offer.PRODUCT_ID \n                         and feedback.MONTH_YEAR_PERIOD=offer.MONTH_YEAR_PERIOD)\n      </isNotNull>\n    </dynamic>\n    Order by  offer.SCORING desc\n   \n  </select>\n\n  <!-- select id=\"listAvailableOffersForKundeHavingGivenProductIds\" resultMap=\"vbmProductScoring-result\" parameterClass=\"java.util.HashMap\" cacheModel=\"vbmProducts-cache\"> select <include refid=\"attributes_VBM_SCORING\" /> FROM VBM_SCORING where kunde_id=any( SELECT kunde_id FROM VBM_SCORING <dynamic prepend=\"WHERE\"> <isNotNull prepend=\"AND\" property=\"customerId\"> KUNDE_ID=#customerId# </isNotNull> <isNotNull prepend=\"AND\" property=\"productId\" open=\"(\" close=\")\" conjunction=\"OR\"> PRODUCT_NAME=#productId[]# \n    </isNotNull> </dynamic> ) </select -->\n\n  <select id=\"getProduktInfo\" resultMap=\"vbmProductInfo-result\" parameterClass=\"java.util.HashMap\">\n    SELECT\n    <include refid=\"attributes_VBM_PRODUCT\" />\n    FROM VBM_PRODUCT\n    <dynamic prepend=\"WHERE\">\n      <isNotNull prepend=\"AND\" property=\"productId\">\n        PRODUCT_ID=#productId#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"productName\">\n        PRODUCT_NAME=#productName#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"monthYearPeriod\">\n        MONTH_YEAR_PERIOD=#monthYearPeriod#\n      </isNotNull>\n    </dynamic>\n  </select>\n\n  <select id=\"getAvailableFeedbackReasons\" resultMap=\"vbmFeedbackReasons-result\" parameterClass=\"java.util.HashMap\">\n    SELECT\n    <include refid=\"attributes_VBM_FEEDBACK_REASONS\" />\n    FROM VBM_FEEDBACK_REASON\n    <dynamic prepend=\"WHERE\">\n      <isNotNull prepend=\"AND\" property=\"declineReasonId\">\n        REASON_ID=#declineReasonId#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"declineReasonText\">\n        REASON_TXT=#declineReasonText#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"productId\">\n        PRODUCT_ID=#productId#\n      </isNotNull>\n\n    </dynamic>\n  </select>\n\n  <select id=\"getFeedbackReasonById\" resultMap=\"vbmFeedbackReasons-result\" parameterClass=\"java.util.HashMap\">\n    SELECT\n    <include refid=\"attributes_VBM_FEEDBACK_REASONS\" />\n    FROM VBM_FEEDBACK_REASON\n    where REASON_ID=#declineReasonId#\n  </select>\n\n  <insert id=\"registerFeedback\" parameterClass=\"at.a1ta.cuco.core.shared.dto.nbo.VBMProductFeedback\">\n    insert into VBM_SCORING_FEEDBACK\n    (KUNDE_ID,PRODUCT_ID,MONTH_YEAR_PERIOD,FEEDBACK_YN,FEEDBACK_REASON_ID,FEEDBACK_TS,FEEDBACK_USER_NAME,FEEDBACK_USER_ID)\n    values\n    (#customerId#, #productId#, #monthYearPeriod#, #feedBackGiven#, #selectedDeclineReason.declineReasonId#, #feedbackTime#,#feedbackUserName#, #feedbackUserId#)\n  </insert>\n\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-customer.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-customer.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 32303,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"Customer\">\n<typeAlias alias=\"Opportunity\" type=\"at.a1ta.cuco.cct.shared.dto.Opportunity\" />\n  <typeAlias alias=\"ehcacheProvider\" type=\"at.a1ta.bite.sqlmap.engine.chache.ehcache.EhCacheController\" />\n\n  <cacheModel id=\"customer-cache\" type=\"ehcacheProvider\" readOnly=\"true\">\n    <flushInterval hours=\"3\" />\n    <flushOnExecute statement=\"Customer.insert\" />\n    <flushOnExecute statement=\"Customer.update\" />\n    <property name=\"cache-size\" value=\"1000\" />\n  </cacheModel>\n\n  <!-- EXPERIMENTAL: EhCache -->\n  <!-- <typeAlias alias=\"cacheProvider\" type=\"at.a1ta.bite.sqlmap.engine.chache.ehcache.EhCacheController\" /> \n  <cacheModel id=\"customer-cache\" type=\"cacheProvider\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval hours=\"3\" />\n    <flushOnExecute statement=\"Customer.insert\" />\n    <flushOnExecute statement=\"Customer.update\" />\n  </cacheModel>\n  -->\n\n  <cacheModel id=\"customer-list-chache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval hours=\"2\" />\n    <property name=\"cache-size\" value=\"100\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"segment-cache\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval hours=\"1\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"mycuco-customer-cache\">\n    <flushInterval minutes=\"10\" />\n    <property name=\"cache-size\" value=\"200\" />\n  </cacheModel>\n\n  <resultMap id=\"customer-result\" class=\"at.a1ta.cuco.core.shared.dto.Party\">\n    <result property=\"id\" column=\"kunde_id\" />\n    <result property=\"headerId\" column=\"header_id\" />\n    <result property=\"customerType\" column=\"kunde_typ_cd\" />\n    <result property=\"businessSegment\" column=\"seg_cd\" />\n    <result property=\"title\" column=\"titel_bes\" />\n    <result property=\"gender\" column=\"geschlecht_cd\" />\n    <result property=\"salutation\" column=\"anrede_bes\" />\n    <result property=\"firstname\" column=\"kunde_vorname\" />\n    <result property=\"lastname\" column=\"kunde_nam\" />\n    <result property=\"country\" column=\"staat_cd\" />\n    <result property=\"city\" column=\"hauptort\" />\n    <result property=\"village\" column=\"ort\" />\n    <result property=\"country\" column=\"staat_cd\" />\n    <result property=\"poBox\" column=\"plz\" />\n    <result property=\"street\" column=\"strasse\" />\n    <result property=\"housenumber\" column=\"hausnummer\" />\n    <result property=\"birthdate\" column=\"GEBURT_DAT\" />\n    <result property=\"contactPhoneNumber1\" column=\"KONTAKTRUFNUMMER_1\" />\n    <result property=\"contactPhoneNumber2\" column=\"KONTAKTRUFNUMMER_2\" />\n    <result property=\"mobilePhoneNumber\" column=\"MOBIL_NR\" />\n    <result property=\"eMailAddress\" column=\"EMAIL\" />\n    <result property=\"region\" column=\"REGION_DS\" />\n    <result property=\"teamName\" column=\"TEAM_DS\" />\n    <result property=\"supportUserName\" column=\"BETREUER_NAM\" />\n    <result property=\"supportUserId\" column=\"betreuer_uuser_cd\" />\n    <result property=\"customerWorthclass\" column=\"KUNDENWERT_KLASSE_CD\" />\n    <result property=\"listedInFramework\" column=\"FRAMEWORK_JN\" typeHandler=\"at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler\" />\n    <result property=\"cooperationDescription\" column=\"KOOPERATION_BES\" />\n    <result property=\"commercialRegisterNumber\" column=\"FIRMENBUCHNUMMER\" />\n    <result property=\"centralAssociationNumber\" column=\"VEREINSREGISTER_CD\" />\n    <result property=\"deliveryBlock\" column=\"LIEFERSPERRE_JN\" typeHandler=\"at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler\" />\n    <result property=\"commercialSector\" column=\"BRANCHE_BES\" />\n    <result property=\"nrEmployees\" column=\"MITARBEITER_ANZ\" />\n    <result property=\"contactPersonLastName\" column=\"AP_NAM\" />\n    <result property=\"contactPersonFirstName\" column=\"AP_VORNAME\" />\n    <result property=\"contactPersonGender\" column=\"AP_GESCHLECHT_CD\" />\n    <result property=\"contactPersonSalutation\" column=\"AP_ANREDE_BES\" />\n    <result property=\"contactPersonTitle\" column=\"AP_TITEL_BES\" />\n    <result property=\"faxNumber\" column=\"FAX_NR\" />\n    <result property=\"homepageAddress\" column=\"HOMEPAGE\" />\n    <result property=\"onRobinsonlist\" column=\"ROBINSONLISTE_JN\" typeHandler=\"at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler\" />\n    <result property=\"onBlacklist\" column=\"BLACKLIST_JN\" typeHandler=\"at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler\" />\n    <result property=\"creditworthiness\" column=\"BONITAETSCORING_CD\" />\n    <result property=\"vipStatus\" column=\"VIP_JN\" typeHandler=\"at.a1ta.cuco.core.dao.util.VIPStatusHandler\" />\n    <result property=\"indexation\" column=\"CPI_STATUS\" />\n    <result property=\"idxStatus\" column=\"CPI_STATUS\"  typeHandler=\"at.a1ta.cuco.core.dao.util.IdxStatusDBMappingHandler\" />\n  </resultMap>\n\n  <resultMap id=\"customer-result-hierarchy\" class=\"at.a1ta.cuco.core.shared.dto.Party\">\n    <result property=\"id\" column=\"kunde_id\" />\n    <result property=\"headerId\" column=\"header_id\" />\n    <result property=\"lastname\" column=\"kunde_nam\" />\n  </resultMap>\n\n  <resultMap id=\"customer-result-full\" class=\"at.a1ta.cuco.core.shared.dto.Party\" extends=\"customer-result\">\n    <result property=\"productUsagePPC\" column=\"PRODUKT_NUTZUNG_PPC_CD\" />\n    <result property=\"churnLikeliness\" column=\"churngefahr_cd\" />\n    <result property=\"currentBinding\" column=\"BINDUNG_BES\" />\n    <result property=\"currentBindingRuntime\" column=\"bindung_cd\" />\n    <result property=\"timestamp\" column=\"ANLAGE_TS\" />\n    <result property=\"hasOpenOffer\" column=\"ANGEBOT_IN_CLARIFY_OFFEN_JN\" typeHandler=\"at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler\" />\n    <result property=\"type\" column=\"dual_segment\" nullValue=\"0\" />\n    <result property=\"kumsSkzShop\" column=\"betreuende_stelle_cd\" select=\"KumsSkzShop.getShop\" />\n  </resultMap>\n\n  <resultMap id=\"customer-result-mycuco\" class=\"at.a1ta.cuco.core.shared.dto.Party\">\n    <result property=\"id\" column=\"kunde_id\" />\n    <result property=\"businessSegment\" column=\"seg_cd\" />\n    <result property=\"gender\" column=\"geschlecht_cd\" />\n    <result property=\"firstname\" column=\"kunde_vorname\" />\n    <result property=\"lastname\" column=\"kunde_nam\" />\n    <result property=\"country\" column=\"staat_cd\" />\n    <result property=\"city\" column=\"ort\" />\n    <result property=\"poBox\" column=\"plz\" />\n    <result property=\"street\" column=\"strasse\" />\n    <result property=\"housenumber\" column=\"hausnummer\" />\n    <result property=\"birthdate\" column=\"GEBURT_DAT\" />\n    <result property=\"supportUserId\" column=\"betreuer_uuser_cd\" />\n    <result property=\"customerWorthclass\" column=\"KUNDENWERT_KLASSE_CD\" />\n    <result property=\"commercialRegisterNumber\" column=\"FIRMENBUCHNUMMER\" />\n    <result property=\"creditworthiness\" column=\"BONITAETSCORING_CD\" />\n    <result property=\"vipStatus\" column=\"VIP_JN\" typeHandler=\"at.a1ta.cuco.core.dao.util.VIPStatusHandler\" />\n    <result property=\"churnLikeliness\" column=\"churngefahr_cd\" />\n    <result property=\"type\" column=\"dual_segment\" nullValue=\"0\" />\n    <result property=\"turnover\" column=\"umsatz\" />\n    <result property=\"flashInfoCount\" column=\"flashinfos\" />\n    <result property=\"maxMobileChurnLikeliness\" column=\"churngefahr_mobil_cd\" />\n    <result property=\"indexation\" column=\"CPI_STATUS\" />\n    <result property=\"idxStatus\" column=\"CPI_STATUS\"  typeHandler=\"at.a1ta.cuco.core.dao.util.IdxStatusDBMappingHandler\" />\n    <result property=\"availableVbmProducts\"\n      column=\"{customerId=kunde_id, productId=productId}\"\n      select=\"vbmProducts.listAvailableOffersForKunde\" /> \n  </resultMap>\n\n  <resultMap class=\"at.a1ta.cuco.core.shared.dto.Tupel\" id=\"turnoverResult\">\n    <result property=\"value1\" column=\"kunde_id\" javaType=\"long\" />\n    <result property=\"value2\" column=\"umsatz\" />\n  </resultMap>\n\n  <resultMap id=\"customer-result-search\" class=\"at.a1ta.cuco.core.shared.dto.Party\">\n    <result property=\"id\" column=\"kunde_id\" />\n    <result property=\"businessSegment\" column=\"seg_cd\" />\n    <result property=\"gender\" column=\"geschlecht_cd\" />\n    <result property=\"firstname\" column=\"kunde_vorname\" />\n    <result property=\"lastname\" column=\"kunde_nam\" />\n    <result property=\"city\" column=\"hauptort\" />\n    <result property=\"village\" column=\"ort\" />\n    <result property=\"poBox\" column=\"plz\" />\n    <result property=\"street\" column=\"strasse\" />\n    <result property=\"housenumber\" column=\"hausnummer\" />\n    <result property=\"birthdate\" column=\"GEBURT_DAT\" />\n    <result property=\"type\" column=\"dual_segment\" nullValue=\"0\" />\n    <result property=\"supportUserName\" column=\"BETREUER_NAM\" />\n    <result property=\"supportUserId\" column=\"betreuer_uuser_cd\" />\n    <result property=\"country\" column=\"staat_cd\" />\n  </resultMap>\n  \n  <resultMap id=\"noncustomer-result-search\" class=\"at.a1ta.cuco.core.shared.dto.Party\">\n    <result property=\"leadId\" column=\"lead_id\" />\n    <result property=\"leadNote\" column=\"note\" />\n    <result property=\"gender\" column=\"gender_cd\" />\n    <result property=\"salutation\" column=\"salutation_cd\" />\n    <result property=\"businessSegment\" column=\"seg_cd\" />\n    <result property=\"firstname\" column=\"lead_vorname\" />\n    <result property=\"lastname\" column=\"lead_nachnam\" />\n    <result property=\"city\" column=\"ort\" />\n    <result property=\"poBox\" column=\"plz\" />\n    <result property=\"street\" column=\"strasse\" />\n    <result property=\"housenumber\" column=\"hausnummer\" />\n    <result property=\"birthdate\" column=\"GEBURT_DAT\" />\n    <result property=\"country\" column=\"staat_cd\" />\n    <result property=\"type\" column=\"dual_segment\" nullValue=\"9\" />\n     <result property=\"supportUserName\" column=\"betreuer_nam\" />\n    <result property=\"supportUserId\" column=\"betreuer_uuser_cd\" />\n     <result property=\"vipStatus\" column=\"VIP_JN\" typeHandler=\"at.a1ta.cuco.core.dao.util.VIPStatusHandler\" />\n  </resultMap>\n\n  <resultMap id=\"customer-type-count\" class=\"java.util.HashMap\">\n    <result property=\"key\" column=\"type\" />\n    <result property=\"value\" column=\"count\" />\n  </resultMap>\n\n  <resultMap id=\"customer-worth-count\" class=\"java.util.HashMap\">\n    <result property=\"key\" column=\"wert\" />\n    <result property=\"value\" column=\"count\" />\n  </resultMap>\n\n  <sql id=\"attributes_v_kunde_detail\">\n    v_kunde_detail.produkt_nutzung_ppc_cd, v_kunde_detail.churngefahr_cd,\n    v_kunde_detail.letzter_persoenl_kontakt_dat, v_kunde_detail.letzter_telefon_kontakt_dat, v_kunde_detail.letzter_kauf_dat,\n    v_kunde_detail.lk_verkaufsbuero_bes, v_kunde_detail.lk_verkaufsgruppe_bes, v_kunde_detail.lk_verkaeufer_bes,\n    v_kunde_detail.lk_produkt_bes, v_kunde_detail.letzte_beschwerde_dat, v_kunde_detail.letzte_beschwerde_bes,\n    v_kunde_detail.letzte_kuendigung_dat, v_kunde_detail.letzte_kuendigung_produkt_bes, v_kunde_detail.angebot_in_clarify_offen_jn,\n    v_kunde_detail.bindung_bes, v_kunde_detail.bindung_cd, v_kunde_detail.dual_segment\n  </sql>\n\n  <sql id=\"attributes_v_kunde\">\n    v_kunde.header_id, v_kunde.kunde_id, seg_cd, v_kunde.kunde_typ_cd,\n    v_kunde.titel_bes, v_kunde.geschlecht_cd, v_kunde.anrede_bes,\n    v_kunde.kunde_vorname, v_kunde.kunde_nam, v_kunde.staat_cd,\n    v_kunde.ort, v_kunde.hauptort , v_kunde.plz, v_kunde.strasse,\n    v_kunde.hausnummer, v_kunde.geburt_dat, v_kunde.firmenbuchnummer, v_kunde.vereinsregister_cd,\n    v_kunde.branche_bes, v_kunde.mitarbeiter_anz, v_kunde.region_ds,\n    v_kunde.team_ds, v_kunde.betreuer_nam, v_kunde.betreuer_uuser_cd,\n    v_kunde.kontaktrufnummer_1, v_kunde.kontaktrufnummer_2,\n    v_kunde.ap_nam, v_kunde.ap_vorname, v_kunde.ap_geschlecht_cd,\n    v_kunde.ap_anrede_bes, v_kunde.ap_titel_bes, v_kunde.email,\n    v_kunde.mobil_nr, v_kunde.fax_nr, v_kunde.homepage,\n    v_kunde.robinsonliste_jn, v_kunde.blacklist_jn, v_kunde.kundenwert_klasse_cd,\n    v_kunde.liefersperre_jn, v_kunde.bonitaetscoring_cd,\n    v_kunde.framework_jn, v_kunde.kooperation_bes, v_kunde.anlage_ts,\n    v_kunde.vip_jn, v_kunde.betreuende_stelle_cd,v_kunde.CPI_STATUS\n  </sql>\n\n  <!-- Get the customer with all required attributes from database -->\n  <select id=\"loadParties\" resultMap=\"customer-result-full\" cacheModel=\"customer-cache\">\n    SELECT\n    <include refid=\"attributes_v_kunde\" />\n    ,\n    <include refid=\"attributes_v_kunde_detail\" />\n    FROM v_kunde\n    LEFT OUTER JOIN v_kunde_detail ON v_kunde.kunde_id = v_kunde_detail.kunde_id\n    LEFT OUTER JOIN cuco_kunde_erweitert ON v_kunde.kunde_id = cuco_kunde_erweitert.kunde_id\n    <isParameterPresent>\n      WHERE v_kunde.kunde_id IN\n      <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"partyIds\">#partyIds[]#</iterate>\n    </isParameterPresent>\n  </select>\n\n  <!-- Get the customer with all required attributes from database -->\n  <select id=\"loadParty\" resultMap=\"customer-result-full\" parameterClass=\"long\" cacheModel=\"customer-cache\">\n    SELECT\n    <include refid=\"attributes_v_kunde\" />\n    ,\n    <include refid=\"attributes_v_kunde_detail\" />\n    FROM v_kunde\n    LEFT OUTER JOIN v_kunde_detail ON v_kunde.kunde_id = v_kunde_detail.kunde_id\n    LEFT OUTER JOIN cuco_kunde_erweitert ON v_kunde.kunde_id = cuco_kunde_erweitert.kunde_id\n    <isParameterPresent>\n      WHERE v_kunde.kunde_id = #partyId#\n    </isParameterPresent>\n  </select>\n\n  <!-- Get the header of a customer with given id -->\n  <select id=\"GetHeader4CustomerId\" resultMap=\"customer-result\" parameterClass=\"java.lang.Long\" cacheModel=\"customer-cache\">\n    SELECT\n    <include refid=\"attributes_v_kunde\" />\n    FROM v_kunde\n    <isParameterPresent>\n      WHERE kunde_id = (SELECT DISTINCT header_id FROM v_kunde WHERE kunde_id = #kunde_id#)\n    </isParameterPresent>\n  </select>\n\n  <!-- Get the list of customers having a common given header -->\n  <select id=\"GetCustomer4Header\" resultMap=\"customer-result\" parameterClass=\"java.lang.Long\" cacheModel=\"customer-cache\">\n    SELECT\n    <include refid=\"attributes_v_kunde\" />\n    FROM v_kunde\n    <isParameterPresent>\n      WHERE header_id = #header_id#\n      AND kunde_id &lt;&gt; #header_id#\n    </isParameterPresent>\n  </select>\n\n  <select id=\"CountCustomer4Header\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.Long\" cacheModel=\"customer-cache\">\n    SELECT count(kunde_id)\n    FROM v_kunde\n    <isParameterPresent>\n      WHERE header_id = #header_id#\n      AND kunde_id &lt;&gt; #header_id#\n    </isParameterPresent>\n  </select>\n\n  <select id=\"GetCustomerByHeaderId\" resultMap=\"customer-result\" parameterClass=\"java.lang.Long\" cacheModel=\"customer-cache\">\n    SELECT\n    <include refid=\"attributes_v_kunde\" />\n    FROM v_kunde\n    <isParameterPresent>\n      WHERE header_id = #header_id#\n      AND kunde_id = header_id\n    </isParameterPresent>\n  </select>\n\n  <select id=\"getHierarchy\" resultMap=\"customer-result-hierarchy\" parameterClass=\"java.lang.Long\" cacheModel=\"customer-cache\">\n    SELECT header_id, kunde_id, kunde_nam\n    FROM v_kunde\n    CONNECT BY NOCYCLE PRIOR kunde_id = header_id\n    START WITH kunde_id = (\n    SELECT header_id from (\n    SELECT rownum rnum, header_id\n    FROM v_kunde\n    CONNECT BY NOCYCLE PRIOR header_id=kunde_id\n    START WITH kunde_id = #partyId#\n    )\n    where rnum = (\n    SELECT count(1)\n    FROM v_kunde\n    CONNECT BY NOCYCLE PRIOR header_id=kunde_id\n    start with kunde_id = #partyId#\n    )\n    )\n    ORDER\n    SIBLINGS BY kunde_nam\n  </select>\n\n<select id=\"SearchNonCustomerNonMerged\" resultMap=\"noncustomer-result-search\" parameterClass=\"at.a1ta.cuco.core.shared.dto.PartySearch\" fetchSize=\"300\">\n    SELECT '9' as dual_segment,lead.*,'N' as VIP_JN\n    FROM lead \n    <dynamic prepend=\"WHERE\">\n        lead_id is NOT NULL AND\n      <isNotEmpty prepend=\"AND\" property=\"leadId\">\n        LOWER(lead_id)=LOWER(#leadId#)\n      </isNotEmpty> \n        <isNotNull prepend=\"AND\" property=\"id\">\n          LOWER(lead_id) like LOWER('%$id$%')\n       </isNotNull>\n      <isNotEmpty prepend=\"AND\" property=\"supportUserId\">\n        LOWER(betreuer_uuser_cd)=LOWER(#supportUserId#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"lastName\">\n        LOWER(lead_nachnam) LIKE LOWER(#lastName#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"firstName\">\n        LOWER(lead_vorname) LIKE LOWER(#firstName#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"postcode\">\n         LOWER(plz) LIKE LOWER(#postcode#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"city\">\n        LOWER(ort) LIKE LOWER(#city#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"country\">\n        LOWER(staat_cd) = LOWER(#country#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"street\">\n        LOWER(strasse) LIKE LOWER(#street#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"houseNumber\">\n        LOWER(hausnummer) LIKE LOWER(#houseNumber#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"commercialRegisterNumber\">\n        LOWER(firmenbuchnummer) LIKE LOWER(#commercialRegisterNumber#)\n      </isNotEmpty>\n      and MERGED_WITH_CUSTOMER='0'\n      order by lead_nachnam, lead_vorname\n    </dynamic>\n  </select>\n  \n  <select id=\"SearchNonCustomerAll\" resultMap=\"noncustomer-result-search\" parameterClass=\"at.a1ta.cuco.core.shared.dto.PartySearch\" fetchSize=\"300\">\n    SELECT '9' as dual_segment,lead.*,'N' as VIP_JN\n    FROM lead \n    <dynamic prepend=\"WHERE\">\n        lead_id is NOT NULL AND\n       <isNotEmpty prepend=\"AND\" property=\"supportUserId\">\n        LOWER(betreuer_uuser_cd)=LOWER(#supportUserId#)\n      </isNotEmpty>\n      \n       <isNotNull prepend=\"AND\" property=\"id\">\n          LOWER(lead_id) like LOWER('%$id$%')\n       </isNotNull>\n      <isNotEmpty prepend=\"AND\" property=\"leadId\">\n        LOWER(lead_id) like lower('%$leadId$%')\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"lastName\">\n        LOWER(lead_nachnam) LIKE LOWER(#lastName#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"firstName\">\n        LOWER(lead_vorname) LIKE LOWER(#firstName#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"postcode\">\n        LOWER(plz) LIKE LOWER(#postcode#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"city\">\n        LOWER(ort) LIKE LOWER(#city#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"country\">\n        LOWER(staat_cd) = LOWER(#country#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"street\">\n        LOWER(strasse) LIKE LOWER(#street#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"houseNumber\">\n        LOWER(hausnummer) LIKE LOWER(#houseNumber#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"commercialRegisterNumber\">\n        LOWER(firmenbuchnummer) LIKE LOWER(#commercialRegisterNumber#)\n      </isNotEmpty>\n      and MERGED_WITH_CUSTOMER='0'\n      order by lead_nachnam, lead_vorname\n    </dynamic>\n  </select>\n  \n  <resultMap class=\"Opportunity\" id=\"opportunity-minimal\">\n    <result property=\"id\" column=\"opportunity_id\"/>\n    <result property=\"partyId\" column=\"party_id\"/>\n    <result property=\"leadId\" column=\"lead_id\"/>\n  </resultMap>\n  \n  <select id=\"getPartyIdForQuoteNumber\" resultClass=\"java.lang.String\" parameterClass=\"java.lang.String\">\n   select CASE WHEN opportunity.party_id = '0' or opportunity.party_id is null \n                          THEN opportunity.lead_id \n                       ELSE cast(opportunity.party_id as varchar(20)) \n                    END as party_id_str from CCT_OPPORTUNITY opportunity,CCT_QUOTE quote \n   where quote.OPPORTUNITY_ID = opportunity.OPPORTUNITY_ID and quote.QUOTE_NUMBER=#offerNumber#\n   </select>\n\n  <select id=\"SearchCustomer\" resultMap=\"customer-result-search\" parameterClass=\"at.a1ta.cuco.core.shared.dto.PartySearch\" cacheModel=\"customer-list-chache\" fetchSize=\"300\">\n    SELECT /*+ parallel (v_kunde,8) */ /*+ parallel (v_kunde_detail,8) */\n    v_kunde.kunde_id, seg_cd, v_kunde.kunde_vorname, v_kunde.kunde_nam,\n    v_kunde.ort, v_kunde.HAUPTORT , v_kunde.staat_cd , v_kunde.plz, v_kunde.strasse,v_kunde.betreuer_nam, v_kunde.betreuer_uuser_cd,\n    v_kunde.hausnummer, v_kunde.geschlecht_cd,v_kunde.geburt_dat, v_kunde_detail.dual_segment\n    FROM v_kunde, v_kunde_detail\n    <dynamic>\n      <isNotEmpty property=\"lkz\">, v_rufnummer</isNotEmpty>\n      <isEmpty property=\"lkz\">\n        <isNotEmpty property=\"okz\">, v_rufnummer</isNotEmpty>\n        <isEmpty property=\"okz\">\n          <isNotEmpty property=\"callNumber\">, v_rufnummer</isNotEmpty>\n        </isEmpty>\n      </isEmpty>\n    </dynamic>\n    <dynamic prepend=\"WHERE\">\n      v_kunde.kunde_id = v_kunde_detail.kunde_id AND\n      <isNull prepend=\"AND\" property=\"id\">\n        v_kunde.kunde_nam IS NOT NULL\n      </isNull>\n      <isNotNull prepend=\"AND\" property=\"id\">\n        v_kunde.kunde_id = #id#\n      </isNotNull>\n      <isNotEmpty prepend=\"AND\" property=\"lastName\">\n        LOWER(v_kunde.kunde_nam) LIKE LOWER(#lastName#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"firstName\">\n        LOWER(v_kunde.kunde_vorname) LIKE LOWER(#firstName#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"postcode\">\n        LOWER(plz) LIKE LOWER(#postcode#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"city\">\n       ( \n       LOWER(hauptort) LIKE LOWER(#city#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"OR\" property=\"city\">\n        LOWER(ORT) LIKE LOWER(#city#)\n        )\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"country\">\n        LOWER(staat_cd) = LOWER(#country#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"street\">\n        LOWER(strasse) LIKE LOWER(#street#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"houseNumber\">\n        LOWER(hausnummer) LIKE LOWER(#houseNumber#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"lkz\">\n        v_kunde.kunde_id = v_rufnummer.kunde_id\n        and\n        v_rufnummer.lkz = #lkz#\n        <isNotEmpty prepend=\"AND\" property=\"okz\">\n          v_rufnummer.onkz=#okz#\n        </isNotEmpty>\n        <isNotEmpty prepend=\"AND\" property=\"callNumber\">\n          v_rufnummer.tn_num LIKE (#callNumber#)\n        </isNotEmpty>\n      </isNotEmpty>\n      <isEmpty property=\"lkz\">\n        <isNotEmpty prepend=\"AND\" property=\"okz\">\n          v_kunde.kunde_id = v_rufnummer.kunde_id\n          and\n          v_rufnummer.onkz=#okz#\n          <isNotEmpty prepend=\"AND\" property=\"callNumber\">\n            v_rufnummer.tn_num LIKE (#callNumber#)\n          </isNotEmpty>\n        </isNotEmpty>\n        <isEmpty property=\"okz\">\n          <isNotEmpty prepend=\"AND\" property=\"callNumber\">\n            v_kunde.kunde_id = v_rufnummer.kunde_id\n            and\n            v_rufnummer.tn_num LIKE (#callNumber#)\n          </isNotEmpty>\n        </isEmpty>\n      </isEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"billingAccountNumber\">\n        v_kunde.kunde_id in (select distinct kunde_id from v_rufnummer where ban_id = #billingAccountNumber#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"aonAccountNumber\">\n        v_kunde.kunde_id in (select distinct kunde_id from v_bestand where aon_kundennummer_id = #aonAccountNumber#)\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"commercialRegisterNumber\">\n        LOWER(firmenbuchnummer) LIKE LOWER(#commercialRegisterNumber#)\n      </isNotEmpty>\n      order by v_kunde.kunde_nam, v_kunde.kunde_vorname\n    </dynamic>\n  </select>\n\n  <select id=\"GetMobilkomIds\" resultClass=\"java.util.HashMap\" parameterClass=\"java.lang.Long\">\n    SELECT mk_kunde_id, status_cd\n    FROM v_mobilkomkunde\n    WHERE kunde_id = #customerId#\n  </select>\n\n  <select id=\"IsSubsidised\" resultClass=\"java.lang.Integer\" parameterClass=\"java.util.HashMap\">\n    SELECT count(1)\n    FROM v_bestand\n    WHERE kunde_id = #customerId#\n    AND produkt_bes IN\n    <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"tarifs\">#tarifs[]#</iterate>\n  </select>\n\n  <select id=\"getAllSegments\" resultClass=\"java.lang.String\" cacheModel=\"segment-cache\">\n    select distinct(seg_cd) from v_kunde where seg_cd is not null\n  </select>\n\n  <insert id=\"insert\" parameterClass=\"at.a1ta.cuco.core.shared.dto.Party\">\n    insert into cuco_kunde_erweitert(kunde_id, vip_tooltip)\n    VALUES (#id#,#vipTooltip#)\n  </insert>\n\n  <update id=\"update\" parameterClass=\"at.a1ta.cuco.core.shared.dto.Party\">\n    update cuco_kunde_erweitert set vip_tooltip=#vipTooltip# where kunde_id=#id#\n  </update>\n\n  <select id=\"GetNumberOfCustomersForSupportUser\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.String\" cacheModel=\"mycuco-customer-cache\">\n    select count(*)\n    from kunde_gesamt\n    where LOWER(betreuer_uuser_cd)=LOWER(#uUser#)\n    \n  </select>\n\n  <select id=\"GetNumberOfCustomersWithChurnForSupportUser\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.String\" cacheModel=\"mycuco-customer-cache\">\n    SELECT COUNT(*)\n    FROM kunde_gesamt\n    WHERE churngefahr_cd in ('1. Sehr Hoch','2. Hoch','3. Mittel','4. Niedrig')\n    AND LOWER(betreuer_uuser_cd)=LOWER(#uUser#)\n  </select>\n <select id=\"GetNumberOfCustomersWithIndexationForSupportUser\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.String\" cacheModel=\"mycuco-customer-cache\">\n    SELECT COUNT(*)\n    FROM kunde_gesamt kg,v_kunde k\n    WHERE \n    kg.kunde_id=k.kunde_id\n    AND\n    k.cpi_status in ('INDEXED_PRODUCTS','INDEXED_PRODUCTS_NOT_USED','EXCLUDED')\n    AND LOWER(kg.betreuer_uuser_cd)=LOWER(#uUser#)\n  </select>\n  <select id=\"GetNumberOfCustomersWithFlashInfosForSupportUser\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.String\">\n    SELECT COUNT(*)\n    FROM kunde_gesamt k, cuco_flash_kunde fk\n    WHERE k.kunde_id=fk.kunde_id AND LOWER(betreuer_uuser_cd)=LOWER(#uUser#)\n  </select>\n\n  <select id=\"GetNumberOfCustomersWithVIPForSupportUser\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.String\" cacheModel=\"mycuco-customer-cache\">\n    SELECT COUNT(*)\n    FROM kunde_gesamt\n    WHERE vip_jn='J' and LOWER(betreuer_uuser_cd)=LOWER(#uUser#)\n  </select>\n  \n  <select id=\"GetNumberOfCustomersWithVBMForSupportUser\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.String\" cacheModel=\"mycuco-customer-cache\">\n    SELECT count(distinct(kunde_gesamt.KUNDE_ID))\n    FROM  VBM_SCORING , kunde_gesamt\n    WHERE LOWER(kunde_gesamt.betreuer_uuser_cd)=LOWER(#uUser#) and VBM_SCORING.KUNDE_ID=kunde_gesamt.KUNDE_ID\n    AND VBM_SCORING.SCORING &gt;= (SELECT value FROM bite_setting where key='vbm.scoring.threshold')\n  </select>\n\n  <select id=\"GetNumberOfCustomersByTypeForSupportUser\" resultMap=\"customer-type-count\" parameterClass=\"java.lang.String\" cacheModel=\"mycuco-customer-cache\">\n    SELECT dual_segment as type, COUNT(*) as count\n    FROM kunde_gesamt\n    WHERE LOWER(betreuer_uuser_cd)=LOWER(#uUser#)\n    GROUP BY dual_segment\n  </select>\n\n  <select id=\"GetNumberOfCustomersByWorthclassForSupportUser\" resultMap=\"customer-worth-count\" parameterClass=\"java.lang.String\" cacheModel=\"mycuco-customer-cache\">\n    SELECT kundenwert_klasse_cd AS wert, COUNT(*) as count\n    FROM kunde_gesamt k\n    WHERE LOWER(betreuer_uuser_cd)=LOWER(#uUser#)\n    GROUP BY kundenwert_klasse_cd\n  </select>\n\n  <select id=\"GetNumberOfCustomersInTurnoverRangeForSupportUser\" resultMap=\"turnoverResult\" parameterClass=\"string\" fetchSize=\"5000\" cacheModel=\"mycuco-customer-cache\">\n    SELECT kunde_id, umsatz\n    FROM kunde_gesamt\n    WHERE LOWER(betreuer_uuser_cd)=LOWER(#uUser#)\n  </select>\n\n  <select id=\"GetCustomerIdsForSupportUser\" resultClass=\"java.lang.Long\" parameterClass=\"java.lang.String\" fetchSize=\"5000\" cacheModel=\"mycuco-customer-cache\">\n    SELECT k.kunde_id\n    FROM v_kunde k\n    WHERE LOWER(betreuer_uuser_cd)=LOWER(#uUser#)\n  </select>\n\n  <select id=\"FilterCustomersForSupportUser\" resultMap=\"customer-result-mycuco\" parameterClass=\"java.util.HashMap\" fetchSize=\"5000\" >\n    SELECT kg.*, (select count(1) from cuco_flash_kunde fk where fk.kunde_id=kg.kunde_id) as flashinfos,k.cpi_status,#productId# as productId\n    FROM kunde_gesamt kg ,v_kunde k\n    WHERE \n    kg.kunde_id=k.kunde_id\n    and\n    LOWER(kg.betreuer_uuser_cd)=LOWER(#uUser#)\n    <isEqual prepend=\"AND\" property=\"flash\" compareValue=\"FLASH\">\n      kg.kunde_id IN (select kunde_id from cuco_flash_kunde)\n    </isEqual>\n    <isEqual prepend=\"AND\" property=\"flash\" compareValue=\"NOFLASH\">\n      kg.kunde_id NOT IN (select kunde_id from cuco_flash_kunde)\n    </isEqual>\n    <isEqual prepend=\"AND\" property=\"churn\" compareValue=\"DANGER\">\n      ((kg.churngefahr_cd&lt;&gt;'(unbekannt)' and kg.churngefahr_cd&lt;&gt;'5. Kein') or (kg.churngefahr_mobil_cd is not null))\n    </isEqual>\n    <isEqual prepend=\"AND\" property=\"churn\" compareValue=\"NODANGER\">\n      ((kg.churngefahr_cd='(unbekannt)' or kg.churngefahr_cd='5. Kein') and kg.churngefahr_mobil_cd is null)\n    </isEqual>\n    <isEqual prepend=\"AND\" property=\"indexation\" compareValue=\"MitIndexierung\">\n     k.cpi_status='INDEXED_PRODUCTS'\n    </isEqual>\n    <isEqual prepend=\"AND\" property=\"indexation\" compareValue=\"MitIndexanpassung\">\n     k.cpi_status='INDEXED_PRODUCTS_NOT_USED'\n    </isEqual>\n    <isEqual prepend=\"AND\" property=\"indexation\" compareValue=\"OhneIndexierung\">\n     k.cpi_status='EXCLUDED'\n    </isEqual>\n    <isEqual prepend=\"AND\" property=\"vip\" compareValue=\"VIP\">\n      kg.vip_jn='J'\n    </isEqual>\n    <isEqual prepend=\"AND\" property=\"vip\" compareValue=\"NOVIP\">\n      kg.vip_jn='N'\n    </isEqual>\n    <isNotNull prepend=\"AND\" property=\"partyId\">\n      to_char(kg.kunde_id) like '%$partyId$%'\n    </isNotNull>\n    <isNotNull prepend=\"AND\" property=\"plz\">\n      to_char(kg.plz) like  #plz# || '%'\n    </isNotNull>\n\n    <iterate prepend=\"AND\" property=\"dualSegments\" open=\"(\" close=\")\" conjunction=\"OR\">\n      kg.dual_segment=#dualSegments[]#\n    </iterate>\n    <iterate prepend=\"AND\" property=\"worthClasses\" open=\"(\" close=\")\" conjunction=\"OR\">\n      kg.KUNDENWERT_KLASSE_CD=#worthClasses[]#\n    </iterate>\n    <iterate prepend=\"AND\" property=\"turnoverRanges\" open=\"(\" close=\")\" conjunction=\"OR\">\n      kg.umsatz &gt;= #turnoverRanges[].value1#\n      and kg.umsatz &lt; #turnoverRanges[].value2#\n    </iterate>\n  </select>\n\n  <select id=\"LoadPartiesOfFlashInfo\" resultMap=\"customer-result-mycuco\" parameterClass=\"long\">\n    SELECT *\n    FROM kunde_gesamt\n    WHERE kunde_id IN (\n    SELECT DISTINCT kunde_id\n    FROM cuco_flash_kunde\n    WHERE flash_id=#flashId#\n    )\n  </select>\n  \n  <resultMap id=\"customer-result-mycuco-minimal\" class=\"at.a1ta.cuco.core.shared.dto.Party\">\n    <result property=\"id\" column=\"kunde_id\" />\n    <result property=\"firstname\" column=\"kunde_vorname\" />\n    <result property=\"lastname\" column=\"kunde_nam\" />\n    <result property=\"type\" column=\"dual_segment\" nullValue=\"0\" />\n  </resultMap>\n  \n  <select id=\"getByIdMinimal\" cacheModel=\"customer-cache\" parameterClass=\"string\" resultMap=\"customer-result-mycuco-minimal\">\n    SELECT kunde.kunde_id as kunde_id, kunde.kunde_vorname as kunde_vorname, kunde.kunde_nam as kunde_nam , kunde_details.dual_segment as dual_segment\n    FROM v_kunde kunde,v_kunde_detail kunde_details\n    <isParameterPresent>\n      WHERE kunde.kunde_id = replace(#id# ,'L','')\n      AND   kunde_details.kunde_id = replace(#id#,'L','')\n    </isParameterPresent>\n    Union\n    SELECT cast(replace(lead_id,'L','1') as number) as kunde_id, LEAD_VORNAME as kunde_vorname,LEAD_NACHNAM as kunde_nam, 9 as dual_segment\n    FROM lead\n    <isParameterPresent>\n      WHERE lower(lead_id) = lower(#id#)\n    </isParameterPresent>\n  </select>\n\n  <insert id=\"InsertNonCustomer\"  parameterClass=\"at.a1ta.cuco.core.shared.dto.Party\">\n    insert into lead(KUNDE_TYP_CD,GENDER_CD,SALUTATION_CD,LEAD_VORNAME,LEAD_NACHNAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,NOTE,betreuer_nam,betreuer_uuser_cd,lastupdate) \n    values (#customerType#,#gender#,#salutation#,#firstname#,#lastname#,#country#,#city#,#poBox#,#street#,#housenumber#,#birthdate#,#commercialRegisterNumber#,#leadNote#,#supportUserName#,#supportUserId#,sysdate)\n  </insert>\n  \n  <update id=\"markNonCustomerMerged\" parameterClass=\"at.a1ta.cuco.core.shared.dto.Party\">\n    update lead set MERGED_WITH_CUSTOMER='1',PARTY_ID=#id#,merged_by_uuser_cd=#supportUserId#,lastupdate=sysdate where LOWER(lead_Id)=LOWER(#leadId#)\n  </update>\n  \n  <update id=\"mergeNonCustomerAndTransferOffers\" parameterClass=\"at.a1ta.cuco.core.shared.dto.Party\">\n    update cct_opportunity set party_id=#id# where LOWER(lead_Id)=LOWER(#leadId#)\n  </update>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-cucoLogs.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-cucoLogs.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 688,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"CucoLogs\">\n\n\t<parameterMap id=\"cucoLogEntry-insert\" class=\"java.util.Map\">\n\t\t<parameter property=\"kunde_id\"/>\n\t\t<parameter property=\"name\" jdbcType=\"VARCHAR\"/>\n\t\t<parameter property=\"user_id\"/>\n\t\t<parameter property=\"passwordType\"/>\n\t\t<parameter property=\"ban\"/>\n\t\t<parameter property=\"log_Type\"/>\n\t</parameterMap>\n\n\t<insert id=\"InsertLogEntry\" parameterMap=\"cucoLogEntry-insert\">\n\t\tINSERT INTO cuco_logs (kunde_id, name, user_id, passwordType, ban, log_Type)\n\t\t\t VALUES (?, ?, ?, ?, ?, ?)\n\t</insert>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-usageData.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-usageData.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 10721,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"UsageData\">\n\n  <cacheModel id=\"voiceUsage-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval hours=\"3\" />\n    <property name=\"cache-size\" value=\"1000\" />\n  </cacheModel>\n  \n  <cacheModel id=\"inetUsage-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval hours=\"3\" />\n    <property name=\"cache-size\" value=\"1000\" />\n  </cacheModel>\n  \n  <cacheModel id=\"mobileUsage-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval hours=\"3\" />\n    <property name=\"cache-size\" value=\"1000\" />\n  </cacheModel>\n  \n  <resultMap id=\"fixedLine-result\" class=\"at.a1ta.cuco.core.shared.dto.usagedata.VoiceUsage\">\n    <result property=\"date\" column=\"monat_start\" />\n    <result property=\"duration\" column=\"duration\" />\n    <result property=\"connectionFee\" column=\"betrag\" />\n  </resultMap>\n  \n  <select id=\"GetFixedLineUsage\" resultMap=\"fixedLine-result\"\n    parameterClass=\"java.util.Map\" cacheModel=\"voiceUsage-cache\">\n    SELECT /*+ parallel (v_voice_nutzung,8) */  monat_start, \n      SUM(duration) AS duration,\n      SUM(ve_bet) AS betrag\n    FROM v_voice_nutzung\n    <dynamic prepend=\"WHERE\">\n      <isNotNull property=\"customerId\" prepend=\"AND\">\n           kunde_id = #customerId#\n      </isNotNull>\n      <isNotNull property=\"customerIds\" prepend=\"AND\">\n           kunde_id IN <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"customerIds\">#customerIds[]#</iterate>\n      </isNotNull>\n      <isNotNull property=\"phoneNumber\" prepend=\"AND\">\n           rufnummer like #phoneNumber#\n      </isNotNull>\n    </dynamic>\n    GROUP BY monat_start\n    ORDER BY monat_start\n  </select>\n  \n  <resultMap id=\"voiceusage-zones_result\" class=\"at.a1ta.cuco.core.shared.dto.usagedata.VoiceUsage\">\n    <result property=\"date\" column=\"monat_start\" />\n    <result property=\"zone\" column=\"zonen_3_bes\" />\n    <result property=\"duration\" column=\"duration\" />\n    <result property=\"connectionFee\" column=\"betrag\" />\n  </resultMap>\n\n  <select id=\"GetFixedLineZoneUsage\" resultMap=\"voiceusage-zones_result\" parameterClass=\"java.util.Map\" \n    cacheModel=\"voiceUsage-cache\">\n    SELECT monat_start, zonen_3_bes, SUM(duration) AS duration, SUM(ve_bet) AS betrag\n      FROM v_voice_nutzung_detail\n    <dynamic prepend=\"WHERE\">\n      <isNotNull property=\"customerId\" prepend=\"AND\">\n             kunde_id = #customerId#\n      </isNotNull>\n      <isNotNull property=\"phoneNumber\" prepend=\"AND\">\n             rufnummer like #phoneNumber#\n      </isNotNull>\n    </dynamic>\n    GROUP BY monat_start, zonen_3_bes\n    ORDER BY monat_start, zonen_3_bes\n  </select>\n  \n  <resultMap id=\"voiceusage-result-timezones\" class=\"at.a1ta.cuco.core.shared.dto.usagedata.VoiceUsage\" groupBy=\"zeitfenster_cd\">\n    <result property=\"date\" column=\"monat_start\" />\n    <result property=\"timeType\" column=\"zeitfenster_cd\" />\n    <result property=\"duration\" column=\"duration\" />\n  </resultMap>\n  \n  <select id=\"GetTimeZones\" resultMap=\"voiceusage-result-timezones\" parameterClass=\"java.util.Map\" \n    cacheModel=\"voiceUsage-cache\">\n    SELECT monat_start, zeitfenster_cd, SUM(duration) AS duration\n      FROM v_voice_nutzung_gzfz\n      <dynamic prepend=\"WHERE\">\n        <isNotNull property=\"customerId\" prepend=\"AND\">\n               kunde_id = #customerId#\n        </isNotNull>\n        <isNotNull property=\"phoneNumber\" prepend=\"AND\">\n               rufnummer like #phoneNumber#\n        </isNotNull>\n      </dynamic>\n    GROUP BY monat_start, zeitfenster_cd\n    ORDER BY monat_start, zeitfenster_cd\n  </select>\n  \n\n  <resultMap id=\"mobileUsage-result\" class=\"at.a1ta.cuco.core.shared.dto.usagedata.MobileUsage\">\n    <result property=\"date\" column=\"monat\" />\n    <result property=\"duration\" column=\"duration\" />\n    <result property=\"connectionFees\" column=\"connectionFees\" />\n    <result property=\"upload\" column=\"upload\" />\n    <result property=\"download\" column=\"download\" />\n    \n    <result property=\"mou_ib_a_othermobiles_div\" column=\"mou_ib_a_othermobiles_div\" />\n    <result property=\"mou_ib_a_international\" column=\"mou_ib_a_international\" />\n    <result property=\"mou_ib_a_national\" column=\"mou_ib_a_national\" />\n    <result property=\"mou_ib_a_mobilkom\" column=\"mou_ib_a_mobilkom\" />\n    <result property=\"mou_ib_a_mobilbox\" column=\"mou_ib_a_mobilbox\" />\n    <result property=\"mou_ib_a_services\" column=\"mou_ib_a_services\" />\n    <result property=\"sms_a_sms\" column=\"sms_a_sms\" />\n    \n    <result property=\"chg_ib_a_othermobiles_div\" column=\"chg_ib_a_othermobiles_div\" />\n    <result property=\"chg_ib_a_international\" column=\"chg_ib_a_international\" />\n    <result property=\"chg_ib_a_national\" column=\"chg_ib_a_national\" />\n    <result property=\"chg_ib_a_mobilkom\" column=\"chg_ib_a_mobilkom\" />\n    <result property=\"chg_ib_a_mobilbox\" column=\"chg_ib_a_mobilbox\" />\n    <result property=\"chg_ib_a_services\" column=\"chg_ib_a_services\" />\n    <result property=\"chg_a_sms\" column=\"chg_a_sms\" />\n    \n    <result property=\"gbIbData\" column=\"gb_ib_data\" />\n    <result property=\"gbObEuData\" column=\"gb_ob_eu_data\" />\n    <result property=\"gbObInternationalData\" column=\"gb_ob_international_data\" />\n    \n    <result property=\"chg_ib_data\" column=\"chg_ib_data\" />\n    <result property=\"chg_ob_eu_data\" column=\"chg_ob_eu_data\" />\n    <result property=\"chg_ob_international_data\" column=\"chg_ob_international_data\" />\n    \n  </resultMap>\n\n  <select id=\"GetMobileUsageData\" resultMap=\"mobileUsage-result\"\n    parameterClass=\"java.util.Map\" cacheModel=\"mobileUsage-cache\">\n    SELECT MONAT,\n\n      SUM(MOU_IB_A + MOU_OB_A) as duration,\n      SUM(chg_ib_a + chg_ib_p + chg_ob_a + chg_ob_p) as connectionFees,\n      SUM(upl_ib_a_data + upl_ob_a_data)as upload,\n      SUM(dnl_ib_a_data + dnl_ob_a_data)as download,\n      \n      SUM(mou_ib_a_mobilkom) as mou_ib_a_mobilkom,\n      SUM(mou_ib_a_othermobiles_div) as mou_ib_a_othermobiles_div,\n      SUM(mou_ib_a_international) as mou_ib_a_international,\n      \n      SUM(mou_ib_a_national) as mou_ib_a_national,\n      SUM(mou_ib_a_mobilbox) as mou_ib_a_mobilbox,\n      SUM(mou_ib_a_services) as mou_ib_a_services,\n      SUM(sms_a_sms) as sms_a_sms,\n      \n      SUM(gb_ib_data) as gb_ib_data,\n      SUM(gb_ob_eu_data) as gb_ob_eu_data,\n      SUM(gb_ob_international_data) as gb_ob_international_data,\n      \n      SUM(chg_ib_a_othermobiles_div) as chg_ib_a_othermobiles_div,\n      \n      SUM(chg_ib_a_international) as chg_ib_a_international,\n      SUM(chg_ib_a_national) as chg_ib_a_national,\n      SUM(chg_ib_a_mobilkom) as chg_ib_a_mobilkom,\n      SUM(chg_ib_a_mobilbox) as chg_ib_a_mobilbox,\n      SUM(chg_ib_a_services) as chg_ib_a_services,\n      SUM(chg_a_sms) as chg_a_sms,\n      SUM(chg_ib_data) as chg_ib_data,\n      SUM(chg_ob_eu_data) as chg_ob_eu_data,\n      SUM(chg_ob_international_data) as chg_ob_international_data\n      \n    FROM v_mobil_nutzung\n    \n    <dynamic prepend=\"WHERE\">\n      <isNotNull property=\"customerId\" prepend=\"AND\">\n           kunde_id = #customerId#\n      </isNotNull>\n      <isNotNull property=\"customerIds\" prepend=\"AND\">\n           kunde_id IN <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"customerIds\">#customerIds[]#</iterate>\n      </isNotNull>\n      <isNotNull property=\"banId\" prepend=\"AND\">\n           rufnummer in (SELECT LKZ || ' ' || ONKZ || ' ' || TN_NUM  from v_rufnummer where ban_id = #banId# AND rufnummerntyp_cd = 'M')\n      </isNotNull>\n      <isNotNull property=\"phoneNumber\" prepend=\"AND\">\n           rufnummer like #phoneNumber#\n      </isNotNull>\n    </dynamic>\n    GROUP BY MONAT\n    ORDER BY MONAT\n  </select>\n  \n  <resultMap id=\"inetusage-result\" class=\"at.a1ta.cuco.core.shared.dto.usagedata.InetUsage\">\n    <result property=\"date\" column=\"monat_start_dat\" />\n    <result property=\"subscriptionFee\" column=\"grundentgelt_bet\" />\n    <result property=\"variableFee\" column=\"variablesentgelt_bet\" />\n    <result property=\"highUsageFee\" column=\"highusageentgelt_bet\" />\n    <result property=\"uploadVolume\" column=\"uploadvolumen\" />\n    <result property=\"downloadVolume\" column=\"downloadvolumen\" />\n    <result property=\"transferVolumeOverrun\" column=\"volumen_ueberschreitung\" />\n    <result property=\"duration\" column=\"duration\" />\n  </resultMap>\n  \n  <select id=\"GetAonUsageData\" resultMap=\"inetusage-result\"  parameterClass=\"java.util.Map\" cacheModel=\"inetUsage-cache\">\n    SELECT n.monat_start_dat,\n        SUM(n.volumen_ueberschreitung) as volumen_ueberschreitung,\n        SUM(n.uploadvolumen) as uploadvolumen,\n        SUM(n.downloadvolumen) as downloadvolumen,\n        SUM(n.grundentgelt_bet) as grundentgelt_bet,\n        SUM(n.variablesentgelt_bet) as variablesentgelt_bet,\n        SUM(n.highusageentgelt_bet) as highusageentgelt_bet,\n        SUM(n.duration) as duration\n    FROM v_internet_nutzung n\n       <dynamic prepend=\"WHERE\">\n          <isNotNull prepend=\"AND\" property=\"customerId\">\n            n.kunde_id=#customerId#\n          </isNotNull>\n          <isNotNull prepend=\"AND\" property=\"customerIds\">\n            n.kunde_id IN <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"customerIds\">#customerIds[]#</iterate>\n          </isNotNull>\n        <isNotNull  prepend=\"AND\" property=\"phoneNumber\">\n           rufnummer like #phoneNumber#\n      </isNotNull>\n      </dynamic>\n        GROUP BY n.monat_start_dat\n        ORDER BY n.monat_start_dat ASC\n  </select>\n  \n  <select id=\"GetFixedLineNumbers\" resultClass=\"java.lang.String\" parameterClass=\"long\" >\n    SELECT DISTINCT LKZ || ' ' || ONKZ || ' ' || TN_NUM as rufnummer\n      FROM v_rufnummer\n     WHERE kunde_id=#customerId#\n       AND rufnummerntyp_cd in ('FV','FVI')\n    ORDER BY rufnummer\n  </select>\n\n  <select id=\"GetMobileBans\" resultClass=\"java.lang.String\" parameterClass=\"long\" >\n     SELECT DISTINCT ban_id\n      FROM v_rufnummer\n     WHERE kunde_id=#customerId#\n       AND rufnummerntyp_cd = 'M'\n       AND not (ban_id is null)\n    ORDER BY ban_id\n  </select>\n\n  <select id=\"GetMobileNumbers\" resultClass=\"java.lang.String\" parameterClass=\"java.util.Map\" >\n      SELECT DISTINCT LKZ || ' ' || ONKZ || ' ' || TN_NUM as rufnummer\n      FROM v_rufnummer\n     WHERE kunde_id=#customerId#\n       AND ban_id = #banId#\n       AND rufnummerntyp_cd = 'M'\n       AND not (ban_id is null)\n    ORDER BY rufnummer\n  </select>\n  \n  <select id=\"GetAonNumbers\" resultClass=\"java.lang.String\" parameterClass=\"long\">\n     SELECT DISTINCT LKZ || ' ' || ONKZ || ' ' || TN_NUM as rufnummer\n     FROM custc.v_rufnummer\n     WHERE kunde_id=#customerId#\n      AND rufnummerntyp_cd in ('FI','FVI')\n    ORDER BY rufnummer\n  </select>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-businessOffers.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-businessOffers.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1274,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: christoph.strobl@telekom.at -->\n<sqlMap namespace=\"BusinessOffer\">\n\t<cacheModel id=\"businessoffer-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t\t<flushInterval hours=\"3\" />\n\t\t<property name=\"cache-size\" value=\"100\" />\n\t</cacheModel>\n\n\t<resultMap id=\"bussinessOffer-result\" class=\"at.a1ta.cuco.core.shared.dto.BusinessOffer\">\n\t\t<result property=\"customerId\" column=\"kunde_id\" />\n\t\t<result property=\"productDescription\" column=\"produkt_bes\" />\n\t</resultMap>\n\n\t<sql id=\"attributes_v_business_angebot\">\n\t\tkunde_id, produkt_bes\n\t</sql>\n\n\t<select id=\"GetBusinessOffers4Customer\" resultMap=\"bussinessOffer-result\" parameterClass=\"java.lang.Long\" cacheModel=\"businessoffer-cache\">\n\t\tSELECT <include refid=\"attributes_v_business_angebot\" />\n\t\t  FROM v_business_angebot\n\t\t WHERE kunde_id = #customer_id#\n\t  ORDER BY produkt_bes\n\t</select>\n\n\t<select id=\"CountBusinessOffers4Customer\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.Long\" cacheModel=\"businessoffer-cache\">\n\t\tSELECT count(produkt_bes)\n\t\t  FROM v_business_angebot\n\t\t WHERE kunde_id = #customer_id#\n\t</select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-myquote.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-myquote.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 18073,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"MyQuote\">\n\n  <typeAlias alias=\"MyOpportunity\" type=\"at.a1ta.cuco.core.shared.dto.MyOpportunity\" />\n  <typeAlias alias=\"Quote\" type=\"at.a1ta.cuco.cct.shared.dto.Quote\" />\n  <typeAlias alias=\"Opportunity\" type=\"at.a1ta.cuco.cct.shared.dto.Opportunity\" />\n   <typeAlias alias=\"Salesstage\" type=\"at.a1ta.cuco.core.shared.dto.Salesstage\" />\n\n  <resultMap id=\"myOpportunities-result-mycuco\" class=\"MyOpportunity\">\n    <result property=\"partyid\"           column=\"partyid\" />\n    <result property=\"leadId\"           column=\"leadid\" />\n    <result property=\"partyType\" column=\"partytype\" nullValue=\"0\" />\n    <result property=\"quoteNumber\"       column=\"quoteNumber\" />\n    <result property=\"firstname\"         column=\"firstname\" />\n    <result property=\"lastname\"          column=\"lastname\" />\n    <result property=\"creator\"           column=\"creator\" />\n    <result property=\"creatorPerson\"     column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModifier\"      column=\"last_modifier\" />\n    <result property=\"lastModifierPerson\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"productOffering\"   column=\"productoffering_id\" javaType=\"at.a1ta.cuco.core.shared.dto.ProductOffering\"/>\n    <result property=\"status\"            column=\"status\" />\n    <result property=\"createDate\"        column=\"create_date\" />\n    <result property=\"validToDate\"       column=\"valid_to_date\" />\n    <result property=\"monthlyTurnoverFixed\"  column=\"monthly_turnover_fixed\" />\n    <result property=\"monthlyTurnoverMobile\" column=\"monthly_turnover_mobile\" />\n    <result property=\"monthlyTurnoverOther\"  column=\"monthly_turnover_other\" />\n    <result property=\"onetimeCostTotal\"      column=\"onetime_cost_total\" />\n    <result property=\"yearlyCostTotal\"       column=\"yearly_cost_total\" />\n    <result property=\"monthlyCostTotal\"      column=\"monthly_cost_total\" />\n    <result property=\"clearanceInitiator\" column=\"clearance_initiator\" />\n    <result property=\"clearanceFinalApprover\" column=\"clearance_final_approver\" />\n    <result property=\"clearancePendingWith\" column=\"clearance_pending_with\" />\n  </resultMap>\n   \n  <select id=\"LoadMyOpportunities\" resultMap=\"myOpportunities-result-mycuco\" parameterClass=\"java.util.HashMap\" fetchSize=\"5000\">\n    SELECT k.kunde_id             AS partyid,\n           kunde_details.dual_segment AS partytype,\n           q.quote_number         AS quoteNumber,\n           k.kunde_vorname        AS firstname, \n           k.kunde_nam            AS lastname,\n           q.creator              AS creator,\n           q.last_modifier        AS last_modifier,\n           pov.productoffering_id AS productoffering_id,\n           s.status               AS status,\n           q.create_date          AS create_date,\n           q.valid_to             AS valid_to_date,\n           NVL(q.monthly_turnover_fixed, 0.0)   AS monthly_turnover_fixed,\n           NVL(q.monthly_turnover_mobile, 0.0)  AS monthly_turnover_mobile,\n           NVL(q.monthly_turnover_other, 0.0)   AS monthly_turnover_other,\n           NVL(q.onetime_cost_total, 0.0)       AS onetime_cost_total,\n           NVL(q.yearly_cost_total, 0.0)        AS yearly_cost_total,\n           NVL(q.monthly_cost_total, 0.0)       AS monthly_cost_total,\n           0                      AS leadid,\n           q.clearance_initiator AS clearance_initiator,\n           q.clearance_final_approver AS clearance_final_approver,\n           q.clearance_pending_with AS clearance_pending_with\n      FROM cct_opportunity o, \n           cct_quote q, \n           v_kunde k,\n           v_kunde_detail kunde_details, \n           cct_pov pov, \n           cct_salesstage s\n     WHERE 1=1 \n       <isNotNull prepend=\"AND\" property=\"userId\">\n         lower(q.creator) = #userId#\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"betreuer\">\n         lower(k.betreuer_uuser_cd) = #betreuer#\n       </isNotNull>\n       AND q.opportunity_id = o.opportunity_id\n       AND k.kunde_id = o.party_id\n       AND kunde_details.kunde_id=o.party_id\n       AND pov.pov_id = o.pov_id\n       AND s.quote_id = q.quote_id\n       AND s.change_date IN (SELECT MAX(change_date) \n                              FROM cct_salesstage s1 \n                             WHERE s1.quote_id = s.quote_id\n                            )\n       AND s.status != 'ARCHIVED'\n       <isNotNull prepend=\"AND\" property=\"createDate\">\n         trunc(q.create_date) <![CDATA[>=]]> trunc(#createDate:DATE#)\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"validToDate\">\n         trunc(q.create_date) <![CDATA[<=]]> trunc(#validToDate:DATE#)\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"quoteNumber\">\n         q.quote_number like '%$quoteNumber$%'\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"partyId\">\n         to_char(k.kunde_id) like '%$partyId$%'\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"firstName\">\n         lower(k.kunde_vorname) like lower('%$firstName$%')\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"lastName\">\n         lower(k.kunde_nam) like lower('%$lastName$%')\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"productOfferingName\">\n         pov.productoffering_id like '%$productOfferingName$%'\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"status\">\n         s.status like '%$status$%'\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"creatorName\">\n         lower(q.creator) in ( select user_id from bite_user where lower (firstname||' '||lastname) like lower ('%$creatorName$%') )\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"lastModifierName\">\n         lower(q.last_modifier) in ( select user_id from bite_user where lower (firstname||' '||lastname) like lower ('%$lastModifierName$%') )\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"clearanceUserId\">\n\t\t(q.clearance_pending_with is not null AND (lower(q.clearance_initiator) = #clearanceUserId# OR lower(q.clearance_pending_with) = #clearanceUserId# OR lower(q.clearance_final_approver) = #clearanceUserId#))\n       </isNotNull>\n  </select> \n  \n  <select id=\"LoadMyOpportunitiesForNonCustomers\" resultMap=\"myOpportunities-result-mycuco\" parameterClass=\"java.util.HashMap\" fetchSize=\"5000\">\n    SELECT lead.party_id          AS partyid,\n           lead.lead_id           AS leadid,\n           9                      AS partytype,\n           q.quote_number         AS quoteNumber,\n           lead.lead_vorname      AS firstname, \n           lead.lead_nachnam      AS lastname,\n           q.creator              AS creator,\n           q.last_modifier        AS last_modifier,\n           pov.productoffering_id AS productoffering_id,\n           s.status               AS status,\n           q.create_date          AS create_date,\n           q.valid_to             AS valid_to_date,\n           NVL(q.monthly_turnover_fixed, 0.0)   AS monthly_turnover_fixed,\n           NVL(q.monthly_turnover_mobile, 0.0)  AS monthly_turnover_mobile,\n           NVL(q.monthly_turnover_other, 0.0)   AS monthly_turnover_other,\n           NVL(q.onetime_cost_total, 0.0)       AS onetime_cost_total,\n           NVL(q.yearly_cost_total, 0.0)        AS yearly_cost_total,\n           NVL(q.monthly_cost_total, 0.0)       AS monthly_cost_total,\n           q.clearance_initiator AS clearance_initiator,\n           q.clearance_final_approver AS clearance_final_approver,\n           q.clearance_pending_with AS clearance_pending_with\n      FROM cct_opportunity o, \n           cct_quote q, \n           lead lead,\n           cct_pov pov, \n           cct_salesstage s\n     WHERE 1=1 \n       <isNotNull prepend=\"AND\" property=\"userId\">\n         lower(q.creator) = #userId#\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"betreuer\">\n         lower(lead.betreuer_uuser_cd) = #betreuer#\n       </isNotNull>\n       AND q.opportunity_id = o.opportunity_id\n       AND lead.lead_id = o.lead_id\n       AND pov.pov_id = o.pov_id\n       AND s.quote_id = q.quote_id\n       AND o.party_id='0'\n       AND s.change_date IN (SELECT MAX(change_date) \n                              FROM cct_salesstage s1 \n                             WHERE s1.quote_id = s.quote_id\n                            )\n       AND s.status != 'ARCHIVED'\n        <isNotNull prepend=\"AND\" property=\"createDate\">\n         trunc(q.create_date) <![CDATA[>=]]> trunc(#createDate:DATE#)\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"validToDate\">\n         trunc(q.create_date) <![CDATA[<=]]> trunc(#validToDate:DATE#)\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"quoteNumber\">\n         q.quote_number like '%$quoteNumber$%'\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"partyId\">\n         to_char(lead.lead_id) like '%$partyId$%'\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"firstName\">\n         lower(lead.lead_vorname) like lower('%$firstName$%')\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"lastName\">\n         lower(lead.lead_nachnam) like lower('%$lastName$%')\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"productOfferingName\">\n         pov.productoffering_id like '%$productOfferingName$%'\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"status\">\n         s.status like '%$status$%'\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"creatorName\">\n         lower(q.creator) in ( select user_id from bite_user where lower (firstname||' '||lastname) like lower ('%$creatorName$%') )\n       </isNotNull>\n       <isNotNull prepend=\"AND\" property=\"lastModifierName\">\n         lower(q.last_modifier) in ( select user_id from bite_user where lower (firstname||' '||lastname) like lower ('%$lastModifierName$%') )\n       </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"clearanceUserId\">\n\t\t(q.clearance_pending_with is not null AND (lower(q.clearance_initiator) = #clearanceUserId# OR lower(q.clearance_pending_with) = #clearanceUserId# OR  lower(q.clearance_final_approver) = #clearanceUserId#))\n       </isNotNull>\n  </select> \n    \n <resultMap id=\"myQuotesForOverview-result-mycuco\" class=\"Quote\">\n  <result property=\"id\"                          column=\"quote_id\" />\n  <result property=\"title\"                       column=\"title\" />\n  <result property=\"quoteNumber\"                 column=\"quote_number\" />\n  <result property=\"salesstages\"                 column=\"quote_id\" select=\"MyQuote.getForQuote\"/>\n  <result property=\"opportunity\"                 column=\"opportunity_id\" select=\"MyQuote.getOppForOverview\"/>\n  <result property=\"creator\"                     column=\"creator\" select=\"User.getBiteUserById\"/>\n  <result property=\"lastModifier\"                column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n  <result property=\"lastUpdate\"                  column=\"last_update\" />\n </resultMap>\n   \n <select id=\"loadMyQuotesForOverview\" resultMap=\"myQuotesForOverview-result-mycuco\" parameterClass=\"java.util.HashMap\" fetchSize=\"5000\">\n   SELECT q.quote_id             AS quote_id,\n          q.quote_number         AS quote_number,\n          q.title                AS title,\n          q.creator              AS creator,\n          q.last_modifier        AS last_modifier,\n          q.last_update          AS last_update,\n          q.opportunity_id       AS opportunity_id\n     FROM cct_opportunity o, \n          cct_quote q, \n          v_kunde k, \n          cct_salesstage s\n    WHERE 1=1 \n      <isNotNull prepend=\"AND\" property=\"userId\">\n        q.creator = #userId#\n      </isNotNull>\n      AND q.opportunity_id = o.opportunity_id\n      AND k.kunde_id = o.party_id\n      AND s.quote_id = q.quote_id\n      AND s.change_date IN (SELECT MAX(change_date) \n                             FROM cct_salesstage s1 \n                            WHERE s1.quote_id = s.quote_id\n                           )\n      AND s.status != 'ARCHIVED'\n       <isNotNull property=\"creatorName\">\n         AND q.creator in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#creatorName#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#creatorName#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"lastModifier\">\n         AND q.last_modifier in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#lastModifier#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#lastModifier#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"assignee\">\n         AND q.last_modifier in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#assignee#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#assignee#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"modDate\">\n         AND trunc(q.last_update) = trunc(#modDate#)\n       </isNotNull>\n       <isNotNull property=\"title\">\n         AND lower(q.title) like '%' || lower(#title#) || '%' \n       </isNotNull>\n       <isNotNull property=\"partyId\">\n         AND o.party_id = #partyId#       \n       </isNotNull>\n       <isNotNull property=\"firstName\">\n         AND lower(k.kunde_vorname) like lower(#firstName#) || '%' \n       </isNotNull>\n       <isNotNull property=\"lastName\">\n         AND lower(k.kunde_nam) like lower(#lastName#) || '%' \n       </isNotNull>\n       ORDER BY q.last_update DESC\n  </select> \n  \n  <select id=\"loadMyQuotesForOverviewForLeads\" resultMap=\"myQuotesForOverview-result-mycuco\" parameterClass=\"java.util.HashMap\" fetchSize=\"5000\">\n   SELECT q.quote_id             AS quote_id,\n          q.quote_number         AS quote_number,\n          q.title                AS title,\n          q.creator              AS creator,\n          q.last_modifier        AS last_modifier,\n          q.last_update          AS last_update,\n          q.opportunity_id       AS opportunity_id\n     FROM cct_opportunity o, \n          cct_quote q, \n          lead lead, \n          cct_salesstage s\n    WHERE 1=1 \n      <isNotNull prepend=\"AND\" property=\"userId\">\n        q.creator = #userId#\n      </isNotNull>\n      AND q.opportunity_id = o.opportunity_id\n      AND lead.lead_id = o.lead_id\n      AND o.party_id=0\n      AND s.quote_id = q.quote_id\n      AND s.change_date IN (SELECT MAX(change_date) \n                             FROM cct_salesstage s1 \n                            WHERE s1.quote_id = s.quote_id\n                           )\n      AND s.status != 'ARCHIVED'\n       <isNotNull property=\"creatorName\">\n         AND q.creator in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#creatorName#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#creatorName#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"lastModifier\">\n         AND q.last_modifier in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#lastModifier#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#lastModifier#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"assignee\">\n         AND q.last_modifier in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#assignee#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#assignee#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"modDate\">\n         AND trunc(q.last_update) = trunc(#modDate#)\n       </isNotNull>\n       <isNotNull property=\"title\">\n         AND lower(q.title) like '%' || lower(#title#) || '%' \n       </isNotNull>\n       <isNotNull property=\"partyId\">\n         AND o.lead_id = #partyId#       \n       </isNotNull>\n       <isNotNull property=\"firstName\">\n         AND lower(lead.lead_vorname) like lower(#firstName#) || '%' \n       </isNotNull>\n       <isNotNull property=\"lastName\">\n         AND lower(lead.lead_nachnam) like lower(#lastName#) || '%' \n       </isNotNull>\n       ORDER BY q.last_update DESC\n  </select> \n  \n  <resultMap class=\"Salesstage\" id=\"salesstage-result\">\n    <result property=\"status\" column=\"status\"/>\n    <result property=\"changeDate\" column=\"change_Date\"/>\n    <result property=\"quoteId\" column=\"quote_id\"/>\n    <result property=\"executor\" column=\"executor\" select=\"User.getBiteUserById\"/>\n  </resultMap>\n  \n  <select id=\"getForQuote\" parameterClass=\"java.lang.Long\" resultMap=\"salesstage-result\">\n    select * from cct_salesstage\n    where quote_id = #id#\n    order by change_date desc\n  </select>\n  \n    <resultMap class=\"Opportunity\" id=\"opportunity-result-overview\">\n    <result property=\"id\" column=\"opportunity_id\"/>\n    <result property=\"partyId\" column=\"party_id\"/>\n    <result property=\"leadId\" column=\"lead_id\"/>\n    <result property=\"party\" column=\"party_id_str\" select=\"Customer.getByIdMinimal\"/>\n  </resultMap>\n  \n  <select id=\"getOppForOverview\" parameterClass=\"java.lang.Long\" resultMap=\"opportunity-result-overview\">\n    select opportunity_id,CASE \n                          WHEN party_id = '0' or party_id is null \n                          THEN lead_id \n                       ELSE cast(party_id as varchar(20)) \n                    END as party_id_str,party_id,lead_id\n      from cct_opportunity\n    <isParameterPresent>\n    where opportunity_id = #id#\n    </isParameterPresent>\n  </select>\n  \n   <resultMap class=\"Quote\" id=\"quote-result\">\n    <result property=\"quoteNumber\" column=\"quote_number\"/>\n    <result property=\"opportunity\" column=\"opportunity_id\" select=\"Opportunity.getMinimal\"/>\n  </resultMap> \n  \n  <select id=\"getOpportunityIdForQuoteNumber\" parameterClass=\"java.lang.String\">\n    select opportunity_id from cct_quote \n    <isParameterPresent>\n    where quote_number = #quoteNumber#\n    </isParameterPresent>\n  </select>\n  \n  <select id=\"loadPartyForQuoteNumber\" resultClass=\"java.lang.String\" parameterClass=\"java.lang.String\">\n    select party_id from cct_opportunity\n    <isParameterPresent>\n    where opportunity_id = #id#\n    </isParameterPresent>\n  </select>\n  \n    \n    \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-location.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-location.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1872,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"Location\">\n\t<cacheModel id=\"location-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t\t<flushInterval hours=\"3\" />\n\t\t<property name=\"cache-size\" value=\"1000\" />\n\t</cacheModel>\n\n\t<resultMap id=\"location-result\" class=\"at.a1ta.bite.data.clarify.shared.dto.Location\">\n\t\t<result property=\"id\" column=\"LOKATION_ID\" />\n\t\t<result property=\"country\" column=\"staat_cd\" />\n\t\t<result property=\"city\" column=\"ort\" />\n\t\t<result property=\"poBox\" column=\"plz\" />\n\t\t<result property=\"street\" column=\"strasse\" />\n\t\t<result property=\"housenumber\" column=\"hausnummer\"  />\n\t</resultMap>\n\n\t<sql id=\"attributes_v_standort\">\n\t\tv_standort.kunde_id, v_standort.lokation_id, v_standort.staat_cd, v_standort.ort, v_standort.plz, v_standort.strasse,  v_standort.hausnummer\n\t</sql>\n\n\t<select id=\"CountDistinctLocations4customer\" resultClass=\"java.lang.Long\" parameterClass=\"java.lang.Long\" cacheModel=\"location-cache\">\n\t\tselect count(*) from (\n         SELECT /*+ parallel (s,8) */ /*+ parallel (b,8) *//*+ parallel (r,8) */ ort, replace(strasse,' ','')||hausnummer FROM v_standort s, v_bestand b, v_rufnummer r\n\t\t WHERE b.kunde_id=#customerId#\n         and r.kunde_id=#customerId#\n         and s.kunde_id=#customerId#\n         and b.vertrag_id=r.vertrag_id\n         and s.lokation_id=r.lokation_id\n         group by ort, replace(strasse,' ','')||hausnummer\n        )\n\t</select>\t\n\n    <select id=\"getLocations4Customers\" resultMap=\"location-result\" cacheModel=\"location-cache\">\n      SELECT <include refid=\"attributes_v_standort\" />\n      FROM v_standort\n      WHERE v_standort.kunde_id IN <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"customerIds\">#customerIds[]#</iterate>\n    </select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-kumsskzshop.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-kumsskzshop.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1046,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"KumsSkzShop\">\n\n  <typeAlias alias=\"kumsSkzShop\" type=\"at.a1ta.bite.core.shared.dto.KumsSkzShop\" />\n  \n   \n  <cacheModel id=\"kumsSkzShop-cache\" type=\"ehcacheProvider\" readOnly=\"true\">\n    <flushInterval hours=\"1\" />\n    <property name=\"cache-size\" value=\"300\" />\n  </cacheModel>\n  \n  <resultMap id=\"kumsSkzShop-result\" class=\"kumsSkzShop\">\n    <result property=\"betreuteStelleCd\" column=\"betreuende_stelle_cd\"/>\n    <result property=\"betreuteStelleNam\" column=\"betreuende_stelle_nam\"/>\n    <result property=\"shopBetreut\" column=\"shop_betreut_jn\"/>\n    <result property=\"created\" column=\"created\"/>\n  </resultMap>\n  \n  <select id=\"getShop\" resultMap=\"kumsSkzShop-result\" parameterClass=\"String\" cacheModel=\"kumsSkzShop-cache\">\n    SELECT * \n      FROM cuco_kums_skz_shop\n     WHERE betreuende_stelle_cd = #betreuteStelleCd#\n       AND rownum = 1\n  </select>\n  \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-turnover.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-turnover.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1212,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: rene.weidinger@telekom.at -->\n<sqlMap namespace=\"Turnover\">\n\t<typeAlias alias=\"turnover\" type=\"at.a1ta.cuco.core.shared.dto.Turnover\"/>\n\t\n\t<cacheModel id=\"turnover-cache\" type=\"ehcacheProvider\" readOnly=\"false\" serialize=\"true\">\n\t\t<flushInterval hours=\"2\" />\n\t\t<property name=\"cache-size\" value=\"5000\" />\n\t</cacheModel>\n\n\t<resultMap id=\"turnover-result\" class=\"turnover\">\n\t\t<result property=\"partyId\" column=\"KUNDE_ID\" />\n\t\t<result property=\"month\" column=\"MONAT\" />\n\t\t<result property=\"turnoverTa\" column=\"UMSATZ_TA\" />\n\t\t<result property=\"marginTa\" column=\"DECKUNGSBEITRAG_TA\" />\n\t\t<result property=\"turnoverMk\" column=\"UMSATZ_MK\" />\n\t\t<result property=\"marginMk\" column=\"DECKUNGSBEITRAG_MK\" />\n\t</resultMap>\n\n\t<select id=\"get\" resultMap=\"turnover-result\" cacheModel=\"turnover-cache\" parameterClass=\"java.lang.Long\">\n\t\tSELECT kunde_id, monat, umsatz_ta, deckungsbeitrag_ta, umsatz_mk, deckungsbeitrag_mk\n\t\tFROM v_umsatz\n\t\t<isParameterPresent>\n\t\tWHERE kunde_id=#id#\n\t\t</isParameterPresent>\n        order by monat asc\n\t</select>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-config.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-config.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 3601,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMapConfig PUBLIC \"-//ibatis.apache.org//DTD SQL Map Config 2.0//EN\" \"http://ibatis.apache.org/dtd/sql-map-config-2.dtd\">\n<sqlMapConfig>\n\n  <settings useStatementNamespaces=\"true\" cacheModelsEnabled=\"true\" lazyLoadingEnabled=\"false\" />\n\n  <typeAlias alias=\"ehcacheProvider\" type=\"at.a1ta.bite.sqlmap.engine.chache.ehcache.EhCacheController\" />\n\n  <typeHandler javaType=\"at.a1ta.cuco.core.shared.dto.ProductOffering\" callback=\"at.a1ta.cuco.core.shared.dto.ProductOfferingTypeHandler\"/>\n\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-chargingtype.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-clearingAccount.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-contactPerson.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-credittype.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-customer.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-customerBlock.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-flashInfo.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-image.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-imageSize.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-invoice.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-inventory.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-inventoryProductGroup.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-location.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-mkinteraction.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-payableticket.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-phoneNumber.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-productHierarchy.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-reporting.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-service.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-team.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-unknownareacode.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-vipHistory.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-turnover.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-usageData.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-userInfoStatistics.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-customerUnlockRequest.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-myquote.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-attribute.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-salesInfo.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-mynotes.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/visitreport/sqlmap-visitreport.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-standardAddress.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-user.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-kumsskzshop.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-vbmProducts.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-userShopAssignments.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-textseditor.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-cucoSettings.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-gamification.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-cucoLogs.xml\" />\n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-cCTOrgStructureElement.xml\" /> \n  <sqlMap resource=\"at/a1ta/cuco/core/dao/db/sqlmap-linksPortlet.xml\" />\n</sqlMapConfig>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-linksPortlet.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-linksPortlet.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 703,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"LinksPortlet\">\n\n  <typeAlias alias=\"linksPortlet\" type=\"at.a1ta.cuco.core.shared.dto.LinksPortlet\" />\n\n  \n  <resultMap id=\"linksPortletdata\" class=\"linksPortlet\">\n    <result property=\"key\" column=\"LINK_KEY\" />\n    <result property=\"text\" column=\"DISPLAY_TEXT\" />\n    <result property=\"url\" column=\"URL\" />\n    <result property=\"requiredAuthority\" column=\"AUTHORITY\" />\n  </resultMap>\n  \n   <select id=\"getAllLinks\" resultMap=\"linksPortletdata\">\n    SELECT cl.* FROM CUCO_LINKS cl order by link_index\n  </select>\n  \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-credittype.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-credittype.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1860,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: rene.weidinger@telekom.at -->\n<sqlMap namespace=\"CreditType\">\n\t<typeAlias alias=\"creditType\" type=\"at.a1ta.cuco.core.shared.dto.CreditType\"/>\n\t\n\t<cacheModel id=\"credittype-cache\" type=\"ehcacheProvider\" readOnly=\"true\">\n\t\t<flushInterval minutes=\"15\" />\n\t\t<flushOnExecute statement=\"CreditType.insert\"/>\n\t\t<flushOnExecute statement=\"CreditType.update\"/>\n\t\t<flushOnExecute statement=\"CreditType.delete\"/>\n\t\t<property name=\"cache-size\" value=\"30\" />\n\t</cacheModel>\n\n\t<resultMap id=\"credittype-result\" class=\"creditType\">\n\t\t<result property=\"id\" column=\"dienstleistungsart_ID\" />\n\t\t<result property=\"name\" column=\"name\" />\n\t\t<result property=\"description\" column=\"beschreibung\" />\n\t\t<result property=\"active\" column=\"aktiv\" />\n\t</resultMap>\n\n\t<select id=\"get\" resultMap=\"credittype-result\" cacheModel=\"credittype-cache\" parameterClass=\"java.lang.Long\">\n\t\tSELECT dienstleistungsart_id,name,beschreibung,aktiv\n\t\tFROM cuco_dienstleistungsart\n\t\t<isParameterPresent>\n\t\tWHERE dienstleistungsart_id=#id#\n\t\t</isParameterPresent>\n\t</select>\n\n\t<insert id=\"insert\" parameterClass=\"creditType\">\n\t\t<selectKey resultClass=\"long\" keyProperty=\"id\">SELECT seq_cuco_dienstleistungsart.nextval AS id FROM dual</selectKey>\n\t\tINSERT INTO cuco_dienstleistungsart(dienstleistungsart_id,name,beschreibung,aktiv)\n\t\tVALUES (#id#, #name#,#description#,#active#)\n\t</insert>\n\n\t<update id=\"update\" parameterClass=\"creditType\">\n\t\tUPDATE cuco_dienstleistungsart\n\t\tSET name=#name#,\n\t\t\tbeschreibung=#description#,\n\t\t\taktiv=#active#\n\t\tWHERE dienstleistungsart_id=#id#\n\t</update>\n\n\t<delete id=\"delete\" parameterClass=\"java.lang.Long\">\n\t\tDELETE FROM cuco_dienstleistungsart\n\t\tWHERE dienstleistungsart_id=#id#\n\t</delete>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-textseditor.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-textseditor.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1047,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n  \n<sqlMap namespace=\"TextsEditor\">\n\n  <typeAlias alias=\"UIText\" type=\"at.a1ta.cuco.core.shared.dto.UIText\" />\n\n  <resultMap id=\"textdata\" class=\"UIText\">\n    <result property=\"key\" column=\"key\" />\n    <result property=\"value\" column=\"text\" />\n  </resultMap>\n\n  <select id=\"getUITexts\" resultMap=\"textdata\">\n    SELECT key, text FROM BITE_TEXT\n    ORDER BY 1 ASC\n  </select>\n\n  <update id=\"updateUIText\" parameterClass=\"UIText\">\n    UPDATE BITE_TEXT SET\n      text = #value#\n    WHERE\n      key = #key#\n  </update>\n  \n  <select id=\"searchText\" parameterClass=\"java.lang.String\" resultMap=\"textdata\">\n    SELECT key, text FROM BITE_TEXT\n    WHERE key in (\n      SELECT key FROM BITE_TEXT \n      WHERE dbms_lob.instr(LOWER(text), LOWER(#value#)) > 0 \n      UNION \n      SELECT key FROM BITE_TEXT \n      WHERE LOWER(key) like LOWER('%$value$%')\n    )\n    ORDER BY 1 ASC\n  </select>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-reporting.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-reporting.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1195,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n\t<!-- @author: rene.weidinger@telekom.at -->\n<sqlMap namespace=\"Reporting\">\n\t<typeAlias alias=\"Reporting\" type=\"at.a1ta.cuco.core.bean.Reporting\"/>\n\n\t<resultMap id=\"reporting-result\" class=\"Reporting\">\n\t\t<result property=\"id\" column=\"reporting_id\" />\n\t\t<result property=\"name\" column=\"name\" />\n\t\t<result property=\"query\" column=\"query\" />\n\t\t<result property=\"longRunning\" column=\"long_running\" />\n\t\t<result property=\"tableName\" column=\"tablename\" />\n\t</resultMap>\n\n\t<select id=\"get\" resultMap=\"reporting-result\" parameterClass=\"java.lang.Long\">\n\t\tSELECT *\n\t\tFROM app_reporting\n\t\t<isParameterPresent>\n\t    \tWHERE reporting_id = #id#\n\t    </isParameterPresent>\n\t    order by reporting_id desc\n\t</select>\n\n\t<!-- The LinkedHashMap is used because it provides predictable ordering. This is necessary because otherwise\n\t\tthe column-order on the client would be different to the queries order\n\t\t-->\n\t<select id=\"execute\" remapResults=\"true\" resultClass=\"java.util.LinkedHashMap\" parameterClass=\"java.lang.String\">\n\t\t$stmt$\n\t</select>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-flashInfo.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-flashInfo.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4931,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"FlashInfo\">\n\n  <typeAlias alias=\"flashInfo\" type=\"at.a1ta.cuco.core.shared.dto.FlashInfo\" />\n  <typeAlias alias=\"myFlashInfo\" type=\"at.a1ta.cuco.core.shared.dto.MyFlashInfo\" />\n  <typeAlias alias=\"role\" type=\"at.a1ta.bite.core.shared.dto.security.Role\"/>\n  \n  <resultMap class=\"flashInfo\" id=\"flashInfo-base-result\">\n    <result property=\"id\" column=\"flash_id\"/>\n    <result property=\"title\" column=\"titel\"/>\n    <result property=\"text\" column=\"text\"/>\n    <result property=\"from\" column=\"von\"/>\n    <result property=\"to\" column=\"bis\"/>\n    <result property=\"active\" column=\"aktiv\"/>\n    <result property=\"popup\" column=\"popup\"/>\n  </resultMap>\n  \n  <resultMap class=\"flashInfo\" id=\"flashInfo-admin-result\" extends=\"flashInfo-base-result\">\n    <result property=\"customerBlocks\" column=\"flash_id\" select=\"CustomerBlock.getForFlashInfo\"/>\n    <result property=\"roles\" column=\"flash_id\" select=\"FlashInfo.getRolesForFlash\"/>\n    <result property=\"creator\" column=\"ersteller\" select=\"User.getBiteUserById\"/>\n  </resultMap>\n  \n  <resultMap class=\"flashInfo\" id=\"flashInfo-result\" extends=\"flashInfo-base-result\">\n    <result property=\"viewed\" column=\"viewed\"/>\n  </resultMap>\n  \n  <resultMap class=\"myFlashInfo\" id=\"myFlashInfo-result\" extends=\"flashInfo-base-result\">\n    <result property=\"partyId\" column=\"KUNDE_ID\"/>\n    <result property=\"creatorName\" column=\"ERSTELLERNAME\" />\n  </resultMap>\n  \n  <select id=\"get\" parameterClass=\"long\" resultMap=\"flashInfo-admin-result\" fetchSize=\"100\">\n    SELECT * FROM cuco_flash\n    WHERE not ersteller = '84857'\n    AND not ersteller = '85736'\n    <isParameterPresent>\n    AND flash_id = #id#\n    </isParameterPresent>\n    ORDER BY von DESC\n  </select>\n \n  <select id=\"getForUserAndCustomer\" parameterClass=\"java.util.Map\" resultMap=\"flashInfo-result\">\n  SELECT \n    sub.*,\n    (SELECT text FROM CUCO_FLASH WHERE flash_id = sub.flash_id) AS text,\n    (SELECT COUNT(*) FROM cuco_flash_viewed fv WHERE fv.flash_id = sub.flash_id AND fv.kunde_id = #kundeId# AND fv.benutzer_id = #userId#) AS viewed\n  FROM \n  (\n      SELECT DISTINCT\n          f.flash_id,\n          f.titel,\n          f.von,\n          f.bis,\n          f.aktiv,\n          f.popup,\n          f.ersteller\n      FROM \n          cuco_flash f,\n          cuco_flash_rolle fr,\n          bite_user_role ur,\n          cuco_flash_kunde fk\n      WHERE\n          f.flash_id = fr.flash_id\n      AND fr.role = ur.role\n      AND ur.user_id= #userId#\n      AND f.flash_id = fk.flash_id\n      AND fk.kunde_id = #kundeId#\n      AND f.aktiv = 1\n      AND f.von &lt; SYSDATE\n      AND f.bis &gt; SYSDATE\n  ) sub\n  ORDER BY \n    viewed ASC,\n    sub.von ASC\n  </select>\n  \n  <select id=\"filterFlashInfos\" resultMap=\"flashInfo-base-result\">\n    SELECT f.*\n    FROM cuco_flash f\n    WHERE f.flash_id IN (\n      SELECT DISTINCT flash_id\n      FROM cuco_flash_kunde\n      WHERE kunde_id = #partyId#\n    )\n    <isNotEmpty prepend=\"AND\" property=\"title\">\n      LOWER(f.titel) LIKE LOWER('%$title$%')\n    </isNotEmpty>\n  </select>\n  \n  <insert id=\"insert\" parameterClass=\"flashInfo\">\n    <selectKey type=\"pre\" keyProperty=\"id\">SELECT seq_cuco_flash.nextval FROM DUAL</selectKey>\n    INSERT INTO cuco_flash VALUES (#id#,#title#,#text#,#from#,#to#,#active#,#popup#,#creator.id#)\n  </insert>\n  \n  <update id=\"update\" parameterClass=\"flashInfo\">\n    UPDATE cuco_flash SET\n      titel = #title#,\n      text = #text#,\n      von = #from#,\n      bis = #to#,\n      aktiv = #active#,\n      popup = #popup#\n    WHERE flash_id = #id#\n  </update>\n  \n  <delete id=\"delete\" parameterClass=\"long\">\n    DELETE FROM cuco_flash WHERE flash_id = #id#\n  </delete>\n  \n  <insert id=\"insertFlashKunde\" parameterClass=\"java.util.Map\">\n    INSERT INTO cuco_flash_kunde VALUES (#flashId#,#kundeId#)\n  </insert>\n  \n  <delete id=\"deleteFlashKundeForFlash\" parameterClass=\"long\">\n    DELETE FROM cuco_flash_kunde WHERE flash_id = #flashId#\n  </delete>\n  \n  <insert id=\"insertFlashRolle\" parameterClass=\"java.util.Map\">\n    INSERT INTO cuco_flash_rolle VALUES(#flashId#,#roleName#)\n  </insert>\n  \n  <delete id=\"deleteFlashRolleForFlash\" parameterClass=\"long\">\n    DELETE FROM cuco_flash_rolle WHERE flash_id = #flashId#\n  </delete>\n  \n  <insert id=\"insertView\" parameterClass=\"java.util.Map\">\n    INSERT INTO cuco_flash_viewed VALUES (#flashId#,#kundeId#,#userId#,SYSTIMESTAMP)\n  </insert>\n  \n  <!-- Role -->\n  <resultMap id=\"role-result\" class=\"role\">\n    <result property=\"name\" column=\"name\" />\n    <result property=\"description\" column=\"description\" />\n  </resultMap>\n  \n  <select id=\"getRolesForFlash\" parameterClass=\"long\" resultMap=\"role-result\">\n    SELECT r.* FROM \n      bite_role r,\n      cuco_flash_rolle fr\n    WHERE\n      r.name = fr.role\n    AND\n      fr.flash_id = #flash_id#\n  </select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-userInfoStatistics.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-userInfoStatistics.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2637,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"UserInfoStats\">\n  <typeAlias alias=\"stats\" type=\"at.a1ta.cuco.core.shared.dto.UserInfoStatistics\" />\n  \n  <cacheModel id=\"stats-cache\" type=\"ehcacheProvider\" readOnly=\"true\">\n    <flushInterval minutes=\"1\" />\n    <property name=\"cache-size\" value=\"500\" />\n  </cacheModel>\n\n\n  <resultMap id=\"stats-result\" class=\"stats\">\n    <result property=\"nrOfCustomers\" column=\"nrOfCustomers\" />\n    <result property=\"nrOfExpiringBindings\" column=\"nrOfExpiringBindings\" />\n    <result property=\"nrOfQuotes\" column=\"nrOfQuotes\" />\n    <result property=\"nrOfTasks\" column=\"nrOfTasks\" />\n    <result property=\"nrOfOpenToDos\" column=\"nrOfOpenToDos\" />\n  </resultMap>\n\n  <select id=\"getStats\" cacheModel=\"stats-cache\" resultMap=\"stats-result\">\n    SELECT \n      (\n        select /*+ parallel (8,3) */ ((SELECT count(*) FROM kunde_gesamt kunde_gesamt\n           WHERE lower(kunde_gesamt.betreuer_uuser_cd) =lower(#uuser#)) +(\n        SELECT count(*) FROM lead lead\n           WHERE lower(lead.betreuer_uuser_cd) =lower(#uuser#) and MERGED_WITH_CUSTOMER='0')) from dual\n      ) AS nrOfCustomers,  \n      \n      (\n        SELECT /*+ parallel (8,3) */ COUNT(*) FROM v_bestand b,kunde_gesamt k\n        WHERE betreuer_uuser_cd = lower(#uuser#)\n        AND k.kunde_id = b.kunde_id\n        AND b.vertragsbindung_dat &gt; SYSDATE\n        AND b.vertragsbindung_dat &lt; SYSDATE + #bindingDayLimit#\n      ) AS nrOfExpiringBindings,  \n      \n      (\n       select /*+ parallel (8,3) */ count(*) from cct_quote q, cct_salesstage s,bite_user usr\n        where lower(usr.login) = lower(#uuser#)\n        and q.creator=usr.USER_ID\n        and q.quote_id = s.quote_id\n        and upper(s.status)='FINALIZED'\n      ) as nrOfQuotes,\n      \n      (\n        select /*+ parallel (8,3) */ count(*) from si_task t, bite_user u\n        where u.user_id = t.assignee_user\n        and lower(u.login) = lower(#uuser#)\n        and t.active = 1\n        and t.date_start > sysdate\n      ) as nrOfTasks,\n      \n      (\n        select /*+ parallel (8,3) */ count(*)\n        from  si_note n,bite_user usr,si_todo_group_note gn\n        where \n        n.deleted=0 and  n.si_note_class ='SI_TODO_GROUP_NOTE'\n        and n.si_note_id=gn.si_note_id\n        and lower(usr.login) = lower(#uuser#)\n        and (usr.user_id = n.creator OR usr.user_id=n.last_modifier OR gn.ASSIGNEE_USER_ID=usr.user_id) \n        and upper(gn.todo_status) <![CDATA[<>'DONE']]>      \n      ) as nrOfOpenToDos from dual\n  </select>\n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-mkinteraction.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-mkinteraction.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1293,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"MKInteraction\">\n\n\t<cacheModel id=\"mkInteraction-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t\t<flushInterval hours=\"3\" />\n\t\t<property name=\"cache-size\" value=\"1000\" />\n\t</cacheModel>\n\n\t<resultMap id=\"mkInteraction-result\" class=\"at.a1ta.bite.data.clarify.shared.dto.CustomerInteraction\">\n\t\t<result property=\"customerId\" column=\"KUNDE_ID\" />\n\t\t<result property=\"startDate\" column=\"ENTSTEHUNG_DAT\" />\n\t\t<result property=\"direction\" column=\"RICHTUNG\" />\n\t\t<result property=\"duration\" column=\"DAUER\" />\n\t\t<result property=\"interactionType\" column=\"TYP\" />\n\t\t<result property=\"productName\" column=\"PRODUKT\" />\n\t\t<result property=\"reason01\" column=\"GRUND1\" />\n\t\t<result property=\"reason02\" column=\"GRUND2\" />\n\t\t<result property=\"reason03\" column=\"GRUND3\" />\n\t\t<result property=\"result\" column=\"RESULTAT\" />\n\t\t<result property=\"notes\" column=\"INTERACT_NOTES\" />\n\t</resultMap>\n\t\n\t<select id=\"GetInteractionsByCustomerId\" resultMap=\"mkInteraction-result\" parameterClass=\"java.lang.Long\" cacheModel=\"mkInteraction-cache\">\n\t\tSELECT * FROM v_mk_interaktion WHERE kunde_id=#customerId#\n\t</select>\n\n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-userShopAssignments.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-userShopAssignments.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1962,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n  \n<sqlMap namespace=\"ImportUserShopAssignment\">\n\n  <typeAlias alias=\"logline\" type=\"at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine\" />\n  <typeAlias alias=\"assignment\" type=\"at.a1ta.cuco.core.shared.dto.UserShopAssignment\" />\n\n  <resultMap id=\"loglinedata\" class=\"logline\">\n    <result property=\"userName\" column=\"username\" />\n    <result property=\"logText\" column=\"logtext\" />\n  </resultMap>\n\n  <resultMap id=\"assignmentdata\" class=\"assignment\">\n    <result property=\"userName\" column=\"username\" />\n    <result property=\"shopID\" column=\"shopid\" />\n  </resultMap>\n  \n  <select id=\"getUserIDs4Assignments\" resultClass=\"java.lang.String\">\n    SELECT DISTINCT upper(login) FROM BITE_USER\n  </select>\n  \n  <select id=\"getAssignedShopIDs\" resultClass=\"java.lang.String\">\n    SELECT DISTINCT shopid FROM CUCO_USERSHOPASSIGNMENT\n  </select>\n  \n  <select id=\"getLogEntries\" resultMap=\"loglinedata\">\n    SELECT username, logtext FROM CUCO_USERSHOPASSIGNMENTLOGS\n  </select>\n  \n  <select id=\"getLogEntriesCount\" resultClass=\"java.lang.Integer\">\n    SELECT COUNT(*) FROM CUCO_USERSHOPASSIGNMENTLOGS\n  </select>\n  \n  <insert id=\"insertLogEntry\" parameterClass=\"logline\">\n    INSERT INTO CUCO_USERSHOPASSIGNMENTLOGS( username, logtext ) VALUES ( #userName#, #logText# )\n  </insert>\n  \n  <select id=\"getUserShopAssignments\" resultMap=\"assignmentdata\">\n    SELECT username, shopid FROM CUCO_USERSHOPASSIGNMENT\n  </select>\n  \n  <insert id=\"insertUserShopAssignment\" parameterClass=\"assignment\">\n    INSERT INTO CUCO_USERSHOPASSIGNMENT( username, shopid ) VALUES ( #userName#, #shopID# ) \n  </insert>\n  \n  <statement id=\"purgeLogEntries\">\n    DELETE FROM CUCO_USERSHOPASSIGNMENTLOGS\n  </statement>\n  \n  <statement id=\"purgeUserShopAssignments\">\n    DELETE FROM CUCO_USERSHOPASSIGNMENT\n  </statement>\n  \n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-cucoSettings.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-cucoSettings.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1928,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"cucoSettings\">\n  <typeAlias alias=\"Setting\" type=\"at.a1ta.bite.core.shared.dto.Setting\" />\n\n  <resultMap id=\"SettingResult\" class=\"Setting\">\n    <result property=\"key\" column=\"key\" />\n    <result property=\"value\" column=\"value\" />\n    <result property=\"type\" column=\"typ\" />\n    <result property=\"sensitive\" column=\"sensitive\" />\n  </resultMap>\n\n  <cacheModel id=\"CuCoSetting-cache\" type=\"ehcacheProvider\">\n    <flushInterval minutes=\"1\" />\n    <property name=\"cache-size\" value=\"1000\" />\n  </cacheModel>\n\n  <select id=\"selectSettingProperty\" resultMap=\"SettingResult\" parameterClass=\"java.util.Map\" cacheModel=\"CuCoSetting-cache\">\n    SELECT *\n    FROM BITE_SETTING\n    <dynamic prepend=\"WHERE\">\n      <isNotEmpty prepend=\"AND\" property=\"startWith\">\n        key LIKE #startWith#\n      </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"sensitive\">\n        (sensitive = 0 OR\n        sensitive = #sensitive#)\n\t  </isNotEmpty>\n      <isNotEmpty prepend=\"AND\" property=\"key\">\n        key = #key#\n\t   </isNotEmpty>\n    </dynamic>\n  </select>\n  \n   <select id=\"getSettings\" resultMap=\"SettingResult\">\n    SELECT * FROM BITE_SETTING\n    ORDER BY 1 ASC\n  </select>\n\n  <update id=\"updateSetting\" parameterClass=\"Setting\">\n    UPDATE BITE_SETTING SET\n      value = #value#,\n      key=#key#,\n      typ=#type#,\n      sensitive=#sensitive#\n    WHERE\n      key = #key#\n  </update>\n  \n  <select id=\"searchSetting\" parameterClass=\"java.lang.String\" resultMap=\"SettingResult\">\n    SELECT * FROM BITE_SETTING\n    WHERE key in (\n      SELECT key FROM BITE_TEXT \n      WHERE dbms_lob.instr(LOWER(value), LOWER(#value#)) > 0 \n      UNION \n      SELECT key FROM BITE_TEXT \n      WHERE LOWER(key) like LOWER('%$value$%')\n    )\n    ORDER BY 1 ASC\n  </select>\n\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-imageSize.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-imageSize.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 803,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"ImageSize\">\n\t<cacheModel id=\"imagesize-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t\t<flushInterval hours=\"3\"/>\n\t\t<property name=\"cache-size\" value=\"1000\"/>\n\t</cacheModel>\n\n\t<resultMap id=\"imagesize-result-imagesizes\" class=\"at.a1ta.cuco.core.shared.dto.ImageSize\">\n\t\t<result property=\"id\" column=\"id\"/>\n\t\t<result property=\"name\" column=\"name\"/>\n\t\t<result property=\"width\" column=\"width\"/>\n\t\t<result property=\"height\" column=\"height\"/>\n\t</resultMap>\n\n\t<select id=\"GetImageSizes\" resultMap=\"imagesize-result-imagesizes\" cacheModel=\"imagesize-cache\">\n\t\tSELECT *\n\t\t  FROM app_image_size\n\t</select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-phoneNumber.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-phoneNumber.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 7469,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"PhoneNumber\">\n  <cacheModel id=\"phonenumber-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval hours=\"3\" />\n    <property name=\"cache-size\" value=\"1000\" />\n  </cacheModel>\n  \n  <cacheModel type=\"ehcacheProvider\" id=\"parser-cache\">\n    <property name=\"cache-size\" value=\"10\" />\n  </cacheModel>\n\n  <resultMap id=\"phonenumber-result\" class=\"at.a1ta.cuco.core.shared.dto.PhoneNumber\">\n    <result property=\"contractNumber\" column=\"vertrag_id\" />\n    <result property=\"customerId\" column=\"kunde_id\" />\n    <result property=\"locationId\" column=\"lokation_id\" />\n    <result property=\"countryIdentificationNumber\" column=\"lkz\" />\n    <result property=\"cityIdentificationNumber\" column=\"onkz\" />\n    <result property=\"subscriberNumber\" column=\"tn_num\" />\n    <result property=\"unlistedNumberIdentification\" column=\"geheimnummer_jn\" />\n    <result property=\"connectorSpecification\" column=\"aspez_bes\" />\n    <result property=\"tarifDescription\" column=\"tarif_bes\" />\n    <result property=\"broadbandPossible\" column=\"bb_moeglich_jn\" typeHandler=\"at.a1ta.cuco.core.dao.util.YNNullableBooleanTypeHandler\" />\n    <result property=\"tvPossible\" column=\"tv_moeglich_kunde_jn\" typeHandler=\"at.a1ta.cuco.core.dao.util.YNNullableBooleanTypeHandler\" />\n    <result property=\"maxDownloadRate\" column=\"maximaler_download\" />\n    <result property=\"maxUploadRate\" column=\"maximaler_upload\" />\n    <result property=\"nrSTBPossible\" column=\"moegliche_anzahl_settopbox\" />\n    <result property=\"phoneNumberSystemCd\" column=\"rufnummernsystem_cd\" />\n    <result property=\"banId\" column=\"ban_id\" />\n     <result property=\"indexation\" column=\"cpi_status\" />\n  </resultMap>\n\n  <resultMap class=\"at.a1ta.cuco.core.shared.dto.BillingAccountNumber\" id=\"ban-result\" groupBy=\"ban\">\n    <result property=\"ban\" column=\"ban_id\"/>\n    <result property=\"brands\" resultMap=\"PhoneNumber.string-result\"/>\n  </resultMap>\n  \n  <resultMap class=\"java.lang.String\" id=\"string-result\">\n    <result property=\"\" column=\"rufnummernsystem_cd\"/>\n  </resultMap>\n  \n  <resultMap class=\"at.a1ta.cuco.core.shared.dto.MobileChurnLikeliness\" id=\"mobilechurn-result\">\n    <result property=\"countryIdentification\" column=\"lkz\"/>\n    <result property=\"cityIdentification\" column=\"onkz\"/>\n    <result property=\"callNumber\" column=\"tn_num\"/>\n    <result property=\"churnLikeliness\" column=\"churngefahr_mobil_cd\"/>\n  </resultMap>\n\n  <sql id=\"attributes_v_rufnummer\">\n    v_rufnummer.vertrag_id, v_rufnummer.kunde_id , v_rufnummer.lokation_id,\n    v_rufnummer.lkz , v_rufnummer.onkz ,\n    v_rufnummer.tn_num ,\n    v_rufnummer.geheimnummer_jn , v_rufnummer.aspez_bes , v_rufnummer.tarif_bes ,\n    v_rufnummer.bb_moeglich_jn ,\n    v_rufnummer.tv_moeglich_kunde_jn , v_rufnummer.maximaler_download ,\n    v_rufnummer.maximaler_upload , moegliche_anzahl_settopbox ,\n    v_rufnummer.rufnummernsystem_cd, v_rufnummer.ban_id,v_rufnummer.cpi_status\n  </sql>\n\n  <select id=\"getOnkzs\" resultClass=\"string\" cacheModel=\"parser-cache\">\n    SELECT DISTINCT(onkz) FROM v_rufnummer where onkz not like '0%' order by 1 desc\n  </select>\n  <select id=\"getSpecialOnkzs\" resultClass=\"string\" cacheModel=\"parser-cache\">\n    SELECT DISTINCT(onkz) FROM v_rufnummer where onkz like '0%' order by 1 desc\n  </select>\n  <select id=\"getCountryCodes\" resultClass=\"string\" cacheModel=\"parser-cache\">\n    SELECT DISTINCT(lkz) FROM v_rufnummer order by 1 desc\n  </select>\n\n  <select id=\"findByTN\" resultClass=\"string\" parameterClass=\"java.util.HashMap\">\n    SELECT tn_num FROM v_rufnummer where onkz = #onkz# and tn_num in\n    <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"numbers\">#numbers[]#</iterate>\n  </select>\n\n  <select id=\"GetPhoneNumbers\" resultMap=\"phonenumber-result\" parameterClass=\"java.util.HashMap\" cacheModel=\"phonenumber-cache\">\n    SELECT\n    <include refid=\"attributes_v_rufnummer\" />\n    FROM v_rufnummer\n    <dynamic prepend=\"WHERE\">\n      <isNotNull prepend=\"AND\" property=\"customerId\">\n        v_rufnummer.KUNDE_ID=#customerId#\n\t  </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"customerIds\">\n        v_rufnummer.KUNDE_ID IN <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"customerIds\">#customerIds[]#</iterate>\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"locationId\">\n        v_rufnummer.LOKATION_ID=#locationId#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"subscriberNumber\">\n        v_rufnummer.TN_NUM=#subscriberNumber#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"contractNumber\">\n        v_rufnummer.VERTRAG_ID=#contractNumber#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"filter.ban\">\n        to_char(v_rufnummer.ban_id) like ('%$filter.ban$%')\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"filter.lkz\">\n        v_rufnummer.lkz=#filter.lkz#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"filter.okz\">\n        v_rufnummer.onkz=#filter.okz#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"filter.callNumber\">\n        v_rufnummer.tn_num=#filter.callNumber#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"filter.customerType\">\n        v_rufnummer.rufnummernsystem_cd=#filter.customerType#\n      </isNotNull>\n      <isNotNull prepend=\"AND\" property=\"filter.indexation\">\n        v_rufnummer.cpi_status=#filter.indexation#\n      </isNotNull>\n    </dynamic>\n    ORDER BY v_rufnummer.onkz ASC, v_rufnummer.tn_num ASC, v_rufnummer.tarif_bes ASC\n  </select>\n\n\n  <select id=\"getBillingAccountNumbersForParty\" parameterClass=\"java.lang.Long\" resultMap=\"ban-result\">\n    select ban_id, rufnummernsystem_cd from v_rufnummer where kunde_id = #partyId# and ban_id is not null group by ban_id, rufnummernsystem_cd\n  </select>\n  \n  \n  <select id=\"getBillingAccountNumberForPhoneNumber\" resultClass=\"java.lang.Long\" parameterClass=\"java.util.HashMap\">\n  \tselect ban_id from v_rufnummer where lkz = #countryCode# and onkz = #onkz# and tn_num = #number#\n  </select>\n\n  <select id=\"getPhoneNumbersForClearingAccountId\" parameterClass=\"long\" resultClass=\"String\" cacheModel=\"phonenumber-cache\">\n    SELECT rufnummer FROM v_konto_rufnummer WHERE konto_id = #clearingAccountId#\n  </select>\n  \n  <select id=\"getPhoneNumbersForBillingAccountNumber\" resultMap=\"phonenumber-result\" parameterClass=\"long\" cacheModel=\"phonenumber-cache\">\n    SELECT\n      <include refid=\"attributes_v_rufnummer\" />\n    FROM v_rufnummer\n    WHERE\n      ban_id = #ban#\n    ORDER BY\n      v_rufnummer.lkz, \n      v_rufnummer.onkz,\n      v_rufnummer.tn_num\n  </select>\n  \n  <select id=\"getMobileChurnLikelinessForParty\" parameterClass=\"java.lang.Long\" resultMap=\"mobilechurn-result\">\n    select lkz, onkz, tn_num, churngefahr_mobil_cd from v_rufnummer where kunde_id = #partyId# and lower(rufnummernsystem_cd) not like 'ta' order by churngefahr_mobil_cd\n  </select>\n  \n  <select id=\"GetNumberOfCustomersWithChurnForSupportUser\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.String\">\n    SELECT count(distinct kunde_gesamt.kunde_id)\n    FROM kunde_gesamt, v_rufnummer\n    WHERE betreuer_uuser_cd=#uUser# AND\n      kunde_gesamt.kunde_id = v_rufnummer.kunde_id AND\n      v_rufnummer.churngefahr_mobil_cd in ('HIGH', 'MEDIUM', 'LOW') and kunde_gesamt.churngefahr_cd not in ('1. Sehr Hoch','2. Hoch','3. Mittel','4. Niedrig')\n  </select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-chargingtype.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-chargingtype.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1028,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: rene.weidinger@telekom.at -->\n<sqlMap namespace=\"ChargingType\">\n\t<typeAlias alias=\"chargingType\" type=\"at.a1ta.cuco.core.shared.dto.ChargingType\"/>\n\t\n\t<cacheModel id=\"chargingtype-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t\t<flushInterval minutes=\"10\" />\n\t\t<property name=\"cache-size\" value=\"5\" />\n\t</cacheModel>\n\n\t<resultMap id=\"chargingtype-result\" class=\"chargingType\">\n\t\t<result property=\"id\" column=\"verrechnungsart_id\" />\n\t\t<result property=\"name\" column=\"name\" />\n\t\t<result property=\"description\" column=\"beschreibung\" />\n\t</resultMap>\n\n\t<select id=\"get\" resultMap=\"chargingtype-result\" cacheModel=\"chargingtype-cache\" parameterClass=\"java.lang.Long\">\n\t\tSELECT verrechnungsart_id,name,beschreibung\n\t\tFROM cuco_verrechnungsart\n\t\t<isParameterPresent>\n\t\tWHERE verrechnungsart_id=#id#\n\t\t</isParameterPresent>\n\t</select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-unknownareacode.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-unknownareacode.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1849,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: rene.weidinger@telekom.at -->\n<sqlMap namespace=\"UnknownAreaCode\">\n\t<typeAlias alias=\"unknownareacode\" type=\"at.a1ta.cuco.core.shared.dto.UnknownAreaCode\"/>\n\t\n\t<cacheModel id=\"unknownareacode-cache\" type=\"ehcacheProvider\" readOnly=\"true\">\n\t\t<flushInterval hours=\"3\" />\n\t\t<flushOnExecute statement=\"UnknownAreaCode.delete\"/>\n\t\t<flushOnExecute statement=\"UnknownAreaCode.update\"/>\n\t\t<flushOnExecute statement=\"UnknownAreaCode.insert\"/>\n\t\t<property name=\"cache-size\" value=\"20\" />\n\t</cacheModel>\n\n\t<resultMap id=\"unknownareacode-result\" class=\"unknownareacode\">\n\t\t<result property=\"id\" column=\"ungueltigevorwahl_id\" />\n\t\t<result property=\"areaCode\" column=\"vorwahl\" />\n\t\t<result property=\"description\" column=\"beschreibung\" />\n\t</resultMap>\n\n\t<select id=\"get\" resultMap=\"unknownareacode-result\" cacheModel=\"unknownareacode-cache\" parameterClass=\"java.lang.Long\">\n\t\tSELECT ungueltigevorwahl_id,vorwahl,beschreibung\n\t\tFROM cuco_ungueltigevorwahl\n\t\t<isParameterPresent>\n\t\tWHERE ungueltigevorwahl_id=#id#\n\t\t</isParameterPresent>\n\t</select>\n\n\t<insert id=\"insert\" parameterClass=\"unknownareacode\">\n\t\t<selectKey resultClass=\"long\" keyProperty=\"id\">SELECT seq_cuco_ungueltigevorwahl.nextval AS id FROM dual</selectKey>\n\t\tINSERT INTO cuco_ungueltigevorwahl(ungueltigevorwahl_id,vorwahl,beschreibung)\n\t\tVALUES (#id#, #areaCode#,#description#)\n\t</insert>\n\n\t<update id=\"update\" parameterClass=\"unknownareacode\">\n\t\tUPDATE cuco_ungueltigevorwahl\n\t\tSET vorwahl=#areaCode#,\n\t\t\tbeschreibung=#description#\n\t\tWHERE ungueltigevorwahl_id=#id#\n\t</update>\n\n\t<delete id=\"delete\" parameterClass=\"java.lang.Long\">\n\t\tDELETE FROM cuco_ungueltigevorwahl\n\t\tWHERE ungueltigevorwahl_id=#id#\n\t</delete>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-inventory.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-inventory.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 9823,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"Inventory\">\n\t<cacheModel id=\"inventory-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t\t<flushInterval hours=\"3\" />\n\t\t<property name=\"cache-size\" value=\"1000\" />\n\t</cacheModel>\n\n\t<resultMap id=\"inventory-result\" class=\"at.a1ta.cuco.core.shared.dto.Inventory\">\n\t\t<result property=\"id\" column=\"bestand_id\" />\n\t\t<result property=\"customerId\" column=\"kunde_id\" />\n\t\t<result property=\"contractId\" column=\"vertrag_id\" />\n\t\t<result property=\"phoneNumber\" column=\"rufnummer\" />\n\t\t<result property=\"unlistedNumberIdentification\" column=\"geheim_jn\" />\n\t\t<result property=\"productDescription\" column=\"produkt_bes\" />\n\t\t<result property=\"validFromDate\" column=\"gueltig_von_dat\" />\n\t\t<result property=\"contractBindingDate\" column=\"vertragsbindung_dat\" />\n\t\t<result property=\"aonCustomerNumber\" column=\"aon_kundennummer_id\" />\n\t\t<result property=\"assetId\" column=\"konto_id\" />\n        <result property=\"detailedDescription\" column=\"produktdetail_bes\" />\n        <result property=\"productCategory\" column=\"produktkategorie_typ_cd\" />\n        <result property=\"serviceDescription\" column=\"service_bes\" />\n        <result property=\"productSsaId\" column=\"ssa_produkt_id\" />\n        <result property=\"indexation\" column=\"cpi_status\" />\n\t</resultMap>\n\n\t<sql id=\"attributes_v_bestand\">\n\t\tv_bestand.bestand_id, v_bestand.kunde_id, v_bestand.vertrag_id,\n\t\tv_bestand.rufnummer, v_bestand.geheim_jn, v_bestand.produkt_bes,\n\t\tv_bestand.gueltig_von_dat, v_bestand.vertragsbindung_dat, v_bestand.aon_kundennummer_id,\n\t\tv_bestand.konto_id, v_bestand.produktdetail_bes, v_bestand.produktkategorie_typ_cd, v_bestand.service_bes, v_bestand.ssa_produkt_id,v_bestand.cpi_status\n\t</sql>\n  \n  <resultMap id=\"filterBinding-result\" class=\"at.a1ta.cuco.core.shared.dto.CustomerBinding\">\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"productDescription\" column=\"produkt_bes\" />\n    <result property=\"contractStart\" column=\"gueltig_von_dat\" />\n    <result property=\"contractEnd\" column=\"vertragsbindung_dat\" />\n    <result property=\"productNumber\" column=\"rufnummer\" />\n    <result property=\"customer.id\" column=\"KUNDE_ID\"/>\n    <result property=\"customer.firstname\" column=\"KUNDE_VORNAME\"/>\n    <result property=\"customer.lastname\" column=\"KUNDE_NAM\"/>\n    <result property=\"location.street\" column=\"STRASSE\" />\n    <result property=\"location.houseNumber\" column=\"HAUSNUMMER\" />\n    <result property=\"location.city\" column=\"ORT\" />\n    <result property=\"location.zipCode\" column=\"PLZ\" />\n    <result property=\"service\" column=\"service_bes\"/>\n    <result property=\"productCategory\" column=\"produktkategorie_typ_cd\" />\n    <result property=\"connectorSpecification\" column=\"aspez_bes\" />\n    <result property=\"aonCustomerNumber\" column=\"aon_kundennummer_id\" />\n    <result property=\"contractId\" column=\"vertrag_id\" />\n    <result property=\"type\" column=\"dual_segment\" />\n    <result property=\"indexation\" column=\"cpi_status\" />\n  </resultMap>\n  \n  <sql id=\"attributes_filterBinding\">\n    v_bestand.kunde_id, v_bestand.produkt_bes,\n    v_bestand.gueltig_von_dat, v_bestand.vertragsbindung_dat,\n    v_bestand.rufnummer, v_bestand.service_bes,\n    kunde_gesamt.kunde_vorname, kunde_gesamt.kunde_nam, kunde_gesamt.dual_segment,\n    v_standort.strasse, v_standort.hausnummer, v_standort.ort, v_standort.plz, \n    v_bestand.produktkategorie_typ_cd, v_rufnummer.aspez_bes, v_bestand.aon_kundennummer_id, v_bestand.vertrag_id,v_bestand.cpi_status\n  </sql>\n\n\t<select id=\"GetInventory4Customer\" resultMap=\"inventory-result\" cacheModel=\"inventory-cache\">\n\t\tSELECT <include refid=\"attributes_v_bestand\" />\n\t\t  FROM v_bestand\n\t\t  <dynamic prepend=\"WHERE\">\n              <isNotNull prepend=\"AND\" property=\"customerIds\">\n                    v_bestand.kunde_id IN <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"customerIds\">#customerIds[]#</iterate>\n              </isNotNull>\n\t\t\t  <isNotNull prepend=\"AND\" property=\"customerId\">\n\t\t\t  \t\tv_bestand.kunde_id=#customerId#\n\t\t\t  </isNotNull>\n\t\t\t  <isNotNull prepend=\"AND\" property=\"contractId\">\n\t\t\t  \t\tv_bestand.vertrag_id=#contractId#\n\t\t\t  </isNotNull>\n              <isNotNull prepend=\"AND\" property=\"filter.description\">\n                    LOWER(v_bestand.service_bes) LIKE LOWER('%$filter.description$%')\n              </isNotNull>\n              <isNotNull prepend=\"AND\" property=\"filter.details\">\n                    LOWER(v_bestand.produktdetail_bes) LIKE LOWER('%$filter.details$%')\n              </isNotNull>\n              <isNotNull prepend=\"AND\" property=\"filter.binding\">\n                    v_bestand.vertragsbindung_dat >= #filter.binding#\n              </isNotNull>\n              <isNotNull prepend=\"AND\" property=\"filter.validFrom\">\n                    v_bestand.gueltig_von_dat >= #filter.validFrom#\n              </isNotNull>\n              <isNotNull prepend=\"AND\" property=\"secretNumber\">\n                    LOWER(v_bestand.geheim_jn) &lt;&gt; 'n'\n              </isNotNull>\n              <isNotNull prepend=\"AND\" property=\"noSecretNumber\">\n                    (LOWER(v_bestand.geheim_jn) = 'n' OR v_bestand.geheim_jn IS NULL)\n              </isNotNull>\n              <isNotNull prepend=\"AND\" property=\"filter.indexation\">\n\t\t\t  \t\tv_bestand.cpi_status=#filter.indexation#\n\t\t\t  </isNotNull>\n\t\t  </dynamic>\n\t\tORDER BY v_bestand.produkt_bes ASC\n\t</select>\n  \n    <select id=\"getExpiringContractDatesForNextMonth\" resultClass=\"java.util.Date\">\n      SELECT v_bestand.vertragsbindung_dat\n        FROM v_bestand inner join kunde_gesamt on v_bestand.kunde_id = kunde_gesamt.kunde_id\n        <dynamic prepend=\"WHERE\">\n          <isNotNull prepend=\"AND\" property=\"uUser\">\n              kunde_gesamt.betreuer_uuser_cd=#uUser#\n          </isNotNull>\n          <isNotNull prepend=\"AND\" property=\"maxTimeRange\">\n              v_bestand.vertragsbindung_dat BETWEEN sysdate AND sysdate + #maxTimeRange#\n          </isNotNull> \n        </dynamic>\n      ORDER BY v_bestand.vertragsbindung_dat\n    </select>\n    \n    <select id=\"getExpiredContracts\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.String\">\n      SELECT COUNT(*)\n        FROM v_bestand b inner join v_kunde k on b.kunde_id = k.kunde_id\n        <dynamic prepend=\"WHERE\">\n          <isNotNull prepend=\"AND\">\n                lower(k.betreuer_uuser_cd)=lower(#uUser#)\n          </isNotNull>\n          <isNotNull prepend=\"AND\">\n              b.vertragsbindung_dat <![CDATA[<]]> sysdate\n          </isNotNull> \n        </dynamic>\n      ORDER BY b.vertragsbindung_dat\n    </select>\n        \n     <select id=\"filterBindingsInfo\" resultMap=\"filterBinding-result\">\n      SELECT <include refid=\"attributes_filterBinding\" />\n        FROM v_bestand,\n        kunde_gesamt,\n        v_standort,\n        v_rufnummer\n      WHERE \n            kunde_gesamt.kunde_id = v_rufnummer.kunde_id\n        AND v_rufnummer.vertrag_id = v_bestand.vertrag_id\n        AND v_standort.kunde_id = kunde_gesamt.kunde_id\n        and v_bestand.kunde_id = kunde_gesamt.kunde_id\n        AND v_rufnummer.lokation_id = v_standort.lokation_id(+)\n        AND v_bestand.vertragsbindung_dat IS NOT NULL\n        AND kunde_gesamt.betreuer_uuser_cd=#uUser#\n        AND v_rufnummer.cpi_status = v_bestand.cpi_status\n        <dynamic>\n          <isNotNull prepend=\"AND\" property=\"partyId\">\n                to_char(v_bestand.kunde_id) like '%$partyId$%'\n          </isNotNull>\n          <isNotNull prepend=\"AND\" property=\"contractStart\">\n                v_bestand.gueltig_von_dat <![CDATA[>=]]> #contractStart#\n          </isNotNull>\n          <isNotNull prepend=\"AND\" property=\"productDescription\">\n                (lower(v_bestand.produkt_bes) like lower('%$productDescription$%') or (v_bestand.produktkategorie_typ_cd = 'V' AND lower(v_rufnummer.aspez_bes) like lower('%$productDescription$%')))\n          </isNotNull>\n          <isNotNull property=\"contractFilter\">\n            <isEqual prepend=\"AND\" property=\"contractFilter\" compareValue=\"ALL_EXPIRED\">\n  \t\t  \t\tv_bestand.vertragsbindung_dat &lt;= sysdate\n            </isEqual>\n            <isEqual prepend=\"AND\" property=\"contractFilter\" compareValue=\"ALL_EXPIRING\">\n                v_bestand.vertragsbindung_dat &gt;= sysdate\n            </isEqual>\n          </isNotNull>\n          <isNotNull prepend=\"AND\" property=\"expireInDays\">\n            v_bestand.vertragsbindung_dat &gt; SYSDATE\n            AND v_bestand.vertragsbindung_dat &lt; SYSDATE + #expireInDays#\n          </isNotNull>\n          <isNotNull prepend=\"AND\" property=\"expireInFuture\">\n                v_bestand.vertragsbindung_dat &gt; sysdate+#expireInFuture#\n          </isNotNull>\n          \n        </dynamic>\n    </select>\n    \n    <select id=\"getProductName\" resultClass=\"java.lang.String\">\n      SELECT produkt_bes\n      FROM v_bestand \n      WHERE kunde_id = #customerId# AND \n            vertrag_id=#contractId# AND\n            produkt_bes IS NOT NULL\n        <dynamic>\n          <isNotNull prepend=\"AND\" property=\"aonNumber\">\n                aon_kundennummer_id=#aonNumber#\n          </isNotNull>\n        </dynamic>\n        ORDER BY v_bestand.produkt_bes ASC\n    </select>\n    \n    <select id=\"getAonNumber\" resultClass=\"java.lang.Long\">\n      SELECT DISTINCT aon_kundennummer_id \n      FROM v_bestand \n      WHERE aon_kundennummer_id IS NOT NULL\n      <dynamic>\n        <isNotNull prepend=\"AND\" property=\"customerId\">\n          kunde_id = #customerId# \n        </isNotNull>\n        <isNotNull prepend=\"AND\" property=\"contractId\">\n          vertrag_id = #contractId#\n        </isNotNull>\n        <isNotNull prepend=\"AND\" property=\"productNumber\">\n          rufnummer = #productNumber#\n        </isNotNull>\n      </dynamic>\n    </select>\n    \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-contactPerson.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-contactPerson.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 9315,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"ContactPerson\">\n  <cacheModel id=\"contact-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n    <flushInterval hours=\"3\" />\n    <property name=\"cache-size\" value=\"1000\" />\n  </cacheModel>\n\n  <resultMap id=\"contactperson-result\" class=\"at.a1ta.cuco.core.shared.dto.ContactPerson\">\n    <result property=\"customerId\" column=\"kunde_id\" />\n    <result property=\"id\" column=\"KONTAKT_ROLLE_ID\" />\n    <result property=\"isMainContact\" column=\"hauptanprechpartner_jn\" typeHandler=\"at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler\" />\n    <result property=\"TARoleName\" column=\"rolle_bei_ta_bes\" />\n    <result property=\"customerRole\" column=\"ROLLE_BEIM_KUNDEN_BES\" />\n    <result property=\"salutation\" column=\"anrede_bes\" />\n    <result property=\"title\" column=\"titel_bes\" />\n    <result property=\"lastname\" column=\"FAMILY_NAME\" />\n    <result property=\"firstname\" column=\"GIVEN_NAME\" />\n    <result property=\"addressLine1\" column=\"adresse_2zeilig_1\" />\n    <result property=\"addressLine2\" column=\"adresse_2zeilig_2\" />\n    <result property=\"birthdate\" column=\"geburts_dat\" />\n    <result property=\"mobilephoneNumber\" column=\"mobil_bes\" />\n    <result property=\"dayPhoneNumber\" column=\"rufnummer_tag_bes\" />\n    <result property=\"nightPhoneNumber\" column=\"rufnummer_abend_bes\" />\n    <result property=\"faxNumber\" column=\"fax_bes\" />\n    <result property=\"mail\" column=\"email_bes\" />\n    <result property=\"source\" column=\"quelle_cd\" />\n    <result property=\"active\" column=\"AKTIVE\" typeHandler=\"at.a1ta.cuco.core.dao.util.BooleanTypeHandler\" />\n    <result property=\"lastModifier\" column=\"BETREUER_UUSER_CD\" select=\"User.getBiteUserById\" />\n    </resultMap>\n\n  <insert id=\"InsertLocalContact\" parameterClass=\"at.a1ta.cuco.core.shared.dto.ContactPerson\">\n    <selectKey resultClass=\"long\" keyProperty=\"id\">SELECT custc.seq_cuco_contacts_id.nextval AS id FROM dual</selectKey>\n    Insert into CUCO_ANSPRECHPARTNER (CUCO_ANSPRECHPARTNER_ID,KUNDE_ID,ROLLE_BEI_TA_BES,ANREDE_BES,TITEL_BES,FAMILY_NAME,GIVEN_NAME,ADRESSE_2ZEILIG_1,ADRESSE_2ZEILIG_2,GEBURTS_DAT,MOBIL_BES,RUFNUMMER_TAG_BES,RUFNUMMER_ABEND_BES,FAX_BES,EMAIL_BES,ROLLE_BEIM_KUNDEN_BES,AKTIVE,BETREUER_UUSER_CD,LAST_UPDATE_TS,DELETED)\n    values\n    (#id#,#customerId#,#TARoleName#,#salutation#,#title#,#lastname#,#firstname#,#addressLine1#,#addressLine2#,#birthdate#,#mobilephoneNumber#,#dayPhoneNumber#,#nightPhoneNumber#,#faxNumber#,#mail#,#customerRole#,#active#,#lastModifier.id#,systimestamp,0)\n  </insert>\n\n  <update id=\"updateLocalContactPersonStatus\" parameterClass=\"at.a1ta.cuco.core.shared.dto.ContactPerson\">\n    UPDATE CUCO_ANSPRECHPARTNER\n    SET aktive=#active#,\n    BETREUER_UUSER_CD=#lastModifier.id#,\n    LAST_UPDATE_TS=systimestamp\n    WHERE kunde_id = #customerId#\n    and CUCO_ANSPRECHPARTNER_ID=#id#\n  </update>\n\n  <update id=\"markLocalContactPersonDeleted\" parameterClass=\"at.a1ta.cuco.core.shared.dto.ContactPerson\">\n    UPDATE CUCO_ANSPRECHPARTNER\n    SET deleted=#deleted#,\n    BETREUER_UUSER_CD=#lastModifier.id#,\n    LAST_UPDATE_TS=systimestamp\n    WHERE kunde_id = #customerId#\n    and CUCO_ANSPRECHPARTNER_ID=#id#\n  </update>\n\n  <update id=\"updateDWHContactPersonStatus\" parameterClass=\"at.a1ta.cuco.core.shared.dto.ContactPerson\">\n    UPDATE ANSPRECHPARTNER_STATUS\n    SET aktive=#active#,\n    BETREUER_UUSER_CD=#lastModifier.id#,\n    LAST_UPDATE_TS=systimestamp\n    WHERE kunde_id = #customerId#\n    and kontakt_rolle_id=#id#\n  </update>\n\n  <insert id=\"insertDWHContactPersonStatus\" parameterClass=\"at.a1ta.cuco.core.shared.dto.ContactPerson\">\n    Insert into ANSPRECHPARTNER_STATUS (KUNDE_ID,KONTAKT_ROLLE_ID,AKTIVE,BETREUER_UUSER_CD,LAST_UPDATE_TS)\n    values (#customerId#,#id#,#active#,#lastModifier.id#,systimestamp)\n  </insert>\n\n  <select id=\"getDWHContactPersonStatusEntryCount\" parameterClass=\"at.a1ta.cuco.core.shared.dto.ContactPerson\" resultClass=\"java.lang.Integer\">\n    SELECT COUNT(*) FROM ANSPRECHPARTNER_STATUS WHERE kunde_id = #customerId#\n    and kontakt_rolle_id=#id#\n  </select>\n\n  <update id=\"updateLocalContact\" parameterClass=\"at.a1ta.cuco.core.shared.dto.ContactPerson\">\n    UPDATE CUCO_ANSPRECHPARTNER\n    SET aktive=#active#,\n    BETREUER_UUSER_CD=#lastModifier.id#,\n    LAST_UPDATE_TS=systimestamp,\n    CUCO_ANSPRECHPARTNER_ID=#id#,\n    KUNDE_ID=#customerId#,\n    ROLLE_BEI_TA_BES=#TARoleName#,\n    ANREDE_BES=#salutation#,\n    TITEL_BES=#title#,\n    FAMILY_NAME=#lastname#,\n    GIVEN_NAME=#firstname#,\n    ADRESSE_2ZEILIG_1=#addressLine1#,\n    ADRESSE_2ZEILIG_2=#addressLine2#,\n    GEBURTS_DAT=#birthdate#,\n    MOBIL_BES=#mobilephoneNumber#,\n    RUFNUMMER_TAG_BES=#dayPhoneNumber#,\n    RUFNUMMER_ABEND_BES=#nightPhoneNumber#,\n    FAX_BES=#faxNumber#,\n    EMAIL_BES=#mail#,\n    ROLLE_BEIM_KUNDEN_BES=#customerRole#,\n    deleted=#deleted#\n    WHERE kunde_id = #customerId#\n    and CUCO_ANSPRECHPARTNER_ID=#id#\n  </update>\n\n  <delete id=\"deleteLocalContact\" parameterClass=\"at.a1ta.cuco.core.shared.dto.ContactPerson\">\n    DELETE FROM CUCO_ANSPRECHPARTNER\n    WHERE kunde_id = #customerId#\n    and CUCO_ANSPRECHPARTNER_ID=#id#\n  </delete>\n\n\n  <sql id=\"attributes_v_ansprechpartner\">\n    kunde_id, kontakt_rolle_id, hauptanprechpartner_jn, rolle_bei_ta_bes, anrede_bes, titel_bes, family_name,given_name, adresse_2zeilig_1,\n    adresse_2zeilig_2, geburts_dat, mobil_bes, rufnummer_tag_bes, rufnummer_abend_bes, fax_bes, email_bes,\n    rolle_beim_kunden_bes, quelle_cd,aktive,betreuer_uuser_cd,deleted\n  </sql>\n\n  <sql id=\"attributes_cuco_ansprechpartner\">\n    kunde_id, CUCO_ANSPRECHPARTNER_ID as kontakt_rolle_id, hauptanprechpartner_jn, rolle_bei_ta_bes, anrede_bes, titel_bes, family_name,given_name, adresse_2zeilig_1,\n    adresse_2zeilig_2, geburts_dat, mobil_bes, rufnummer_tag_bes, rufnummer_abend_bes, fax_bes, email_bes,\n    rolle_beim_kunden_bes, quelle_cd,aktive,betreuer_uuser_cd,deleted\n  </sql>\n\n  <select id=\"GetContactPersons4Customer\" resultMap=\"contactperson-result\">\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE kunde_id IN\n    <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"partyIds\">#partyIds[]#</iterate>\n    AND deleted!=1\n    ORDER BY hauptanprechpartner_jn ASC, NAME ASC\n  </select>\n\n  <select id=\"GetContactPersons4CustomerIncludingDeleted\" resultMap=\"contactperson-result\" >\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE kunde_id IN\n    <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"partyIds\">#partyIds[]#</iterate>\n    ORDER BY hauptanprechpartner_jn ASC, NAME ASC\n  </select>\n\n\n  <select id=\"GetAllContactPersons4Customers\" resultMap=\"contactperson-result\">\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE kunde_id IN\n    <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"partyIds\">#partyIds[]#</iterate>\n    AND deleted!=1\n  </select>\n\n  <select id=\"GetAllContactPersons4CustomersIncludingDeleted\" resultMap=\"contactperson-result\">\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE kunde_id IN\n    <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"partyIds\">#partyIds[]#</iterate>\n  </select>\n\n  <select id=\"GetAllContactPersons4Customer\" resultMap=\"contactperson-result\">\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE kunde_id = #partyId#\n    AND deleted!=1\n  </select>\n\n  <select id=\"GetAllContactPersons4CustomerIncludingDeleted\" resultMap=\"contactperson-result\">\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE kunde_id = #partyId#\n  </select>\n\n\n  <select id=\"GetContactPersonById\" resultMap=\"contactperson-result\">\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE kontakt_rolle_id=#contactPersonId#\n  </select>\n\n  <select id=\"GetLocalContactPersonById\" resultMap=\"contactperson-result\" >\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE kontakt_rolle_id=#contactPersonId#\n  </select>\n\n  <select id=\"GetContactPersonByIdAndKundeId\" resultMap=\"contactperson-result\">\n    SELECT\n    <include refid=\"attributes_v_ansprechpartner\" />\n    FROM v_ansprechpartner\n    WHERE v_ansprechpartner.kontakt_rolle_id = #kontakt_rolle_id#\n    AND v_ansprechpartner.kunde_id = #kunde_id#\n    UNION\n    SELECT\n    <include refid=\"attributes_cuco_ansprechpartner\" />\n    FROM cuco_ansprechpartner\n    WHERE cuco_ansprechpartner.kunde_id = #kunde_id#\n    AND cuco_ansprechpartner.CUCO_ANSPRECHPARTNER_ID = #kontakt_rolle_id#\n  </select>\n\n <select id=\"CheckReferenceInSBSNoteAndProductNote\"  resultClass=\"java.lang.Integer\"  parameterClass=\"java.util.HashMap\" >\n    select CASE WHEN count(*)>0 THEN '1' ELSE '0' END from\n    (  select SI_Note_id from si_vi_sbs_note where SI_NOTE_ID =any(select SI_NOTE_ID from SI_NOTE where Deleted=0) and CUCO_CONTACT_PERSON= #id#\n    UNION\n        select SI_Note_id from SI_VI_SBS_PRODUCT_NOTE where SI_NOTE_ID =any(select SI_NOTE_ID from SI_NOTE where Deleted=0) and CUCO_CONTACT_PERSON= #id#\n    )\n  </select>\n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-mynotes.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-mynotes.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4831,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"MyNotes\">\n  <typeAlias alias=\"SalesInfoNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote\" />\n  <typeAlias alias=\"Task\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.Task\" />\n\n  <cacheModel type=\"ehcacheProvider\" id=\"sales-info-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertNote\"/>\n    <flushOnExecute statement=\"SalesInfo.updateNote\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <cacheModel type=\"ehcacheProvider\" id=\"task-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertTask\"/>\n    <flushOnExecute statement=\"SalesInfo.updateTask\"/>\n    <flushOnExecute statement=\"SalesInfo.updateTaskReminderMailSentDate\"/>\n    <flushOnExecute statement=\"SalesInfo.updateTaskVcalMailSentInfo\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <!-- For Overview -->\n  \n  <resultMap id=\"slim-si-note-resultmap\" class=\"SalesInfoNote\">\n     <result property=\"salesInfoNoteId\"             column=\"si_note_id\" />\n     <result property=\"salesInfoNoteType\"           column=\"si_note_class\" />\n     <result property=\"partyId\"                     column=\"kunde_id\" />\n     <result property=\"noteText\"                    column=\"note_text\" />\n     <result property=\"status\"                      column=\"status\" />\n     <result property=\"task\"                        column=\"task_id\" select=\"SalesInfo.getTask\" />\n     <result property=\"creationUser\"                column=\"creator\" select=\"User.getBiteUserById\"/>\n     <result property=\"lastModificationUser\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n     <result property=\"lastModificationTimestamp\"   column=\"last_update\" />\n  </resultMap>\n    \n    \n  <select id=\"LoadMyNotes\" resultMap=\"slim-si-note-resultmap\" parameterClass=\"java.util.HashMap\" cacheModel=\"sales-info-cache\">\n      SELECT n.si_note_id, n.si_note_class, n.kunde_id, n.note_text, t.STATUS,n.task_id, n.creator, n.last_modifier, n.last_update\n        FROM si_note n, si_task t, v_kunde k\n       WHERE (last_modifier = #userId# \n              OR creator = #userId# \n              OR (t.assignee_user = #userId# AND t.active = 1)\n             )\n         AND si_note_class IN <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"salesInfoNoteTypesToLoad\">#salesInfoNoteTypesToLoad[]#</iterate>\n         AND deleted = 0\n         AND n.task_id = t.si_task_id\n         AND n.kunde_id = k.kunde_id \n       <isNotNull property=\"creator\">\n         AND n.creator in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#creator#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#creator#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"lastModifier\">\n         AND n.last_modifier in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#lastModifier#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#lastModifier#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"assignee\">\n         AND t.assignee_user in (select user_id from bite_user where lower(firstname||' '||lastname) like '%' || lower(#assignee#) || '%' or lower(lastname||' '||firstname) like '%' || lower(#assignee#) || '%' )\n       </isNotNull>\n       <isNotNull property=\"modDate\">\n         AND trunc(n.last_update) = trunc(#modDate#)\n       </isNotNull>\n       <isNotNull property=\"noteText\">\n         AND lower(n.note_text) like '%' || lower(#noteText#) || '%'  \n       </isNotNull>\n       <isNotNull property=\"status\">\n         AND t.STATUS =#status#\n       </isNotNull>\n       <isNotNull property=\"noteType\">\n         AND n.si_note_class = #noteType#\n       </isNotNull>\n       <isNotNull property=\"reminderOperator\">\n         AND t.date_start $reminderOperator$ sysdate\n       </isNotNull>\n       <isNotNull property=\"partyId\">\n         AND n.kunde_id = #partyId#       \n       </isNotNull>\n       <isNotNull property=\"firstname\">\n         AND lower(k.kunde_vorname) like lower(#firstname#) || '%' \n       </isNotNull>\n       <isNotNull property=\"lastname\">\n         AND lower(k.kunde_nam) like lower(#lastname#) || '%' \n       </isNotNull>\n       ORDER BY n.last_update DESC\n  </select> \n  \n  <!-- For Task -->\n  \n  <resultMap id=\"slim-task-resultmap\" class=\"Task\">\n    <result property=\"taskId\" column=\"si_task_id\" />\n    <result property=\"startDate\" column=\"date_start\" />\n  </resultMap>\n  \n  <select id=\"getTaskSlim\" resultMap=\"slim-task-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"task-cache\">\n      SELECT si_task_id, date_start  \n        FROM si_task\n       WHERE si_task_id = #taskId#\n  </select>\n  \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-cCTOrgStructureElement.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-cCTOrgStructureElement.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 786,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n  \n<sqlMap namespace=\"CCTOrgStructureElement\">\n       \n       <typeAlias alias=\"cctOrgStructureElement\" type=\"at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement\" />\n       \n    <insert id=\"insertCCTOrgStructureElements\" parameterClass=\"cctOrgStructureElement\">\n    insert into CCT_APPROVER_HIERARCHY \n     (USER_ID,USER_NAME,ROLLE,ROLE,TREE_LEVEL,TEAM,SAP_ORG_ID,SUPERVISOR_ID,SUPERVISOR_NAME)\n    VALUES  (#userID#, #user#, #rolle#, #role#, #approvalLevel#, #team#, #orgId#, #supervisorUserID#, #supervisor#)\n  </insert>\n  \n  <delete id=\"eraseOldEntries\">\n    DELETE FROM CCT_APPROVER_HIERARCHY\n  </delete>\n  \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-image.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-image.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2539,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: richard.gebauer@telekom.at -->\n<sqlMap namespace=\"Image\">\n\t<cacheModel id=\"image-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t\t<flushInterval hours=\"3\"/>\n\t\t<property name=\"cache-size\" value=\"1000\"/>\n\t</cacheModel>\n\n\t<parameterMap id=\"image-insert\" class=\"java.util.Map\">\n\t\t<parameter property=\"id\"/>\n\t\t<parameter property=\"uuser\" jdbcType=\"VARCHAR\"/>\n\t\t<parameter property=\"filename\"/>\n\t\t<parameter property=\"name\"/>\n\t\t<parameter property=\"imageSizeId\"/>\n\t</parameterMap>\n\n\t<insert id=\"SaveImage\" parameterMap=\"image-insert\">\n\t\t<selectKey keyProperty=\"id\" resultClass=\"java.lang.Long\" type=\"pre\">\n\t\t\tSELECT seq_app_image.NEXTVAL AS id FROM DUAL\n\t\t</selectKey>\n\t\tINSERT INTO app_image (id, uuser, filename, name, image_size_id)\n\t\t\t VALUES (?, ?, ?, ?, ?)\n\t</insert>\n\n\t<parameterMap id=\"image-update\" class=\"java.util.Map\">\n\t\t<parameter property=\"uuser\" jdbcType=\"VARCHAR\"/>\n\t\t<parameter property=\"filename\" jdbcType=\"VARCHAR\"/>\n\t\t<parameter property=\"name\"/>\n\t\t<parameter property=\"imageSizeId\"/>\n\t</parameterMap>\n\n\t<update id=\"UpdateImage\" parameterMap=\"image-update\">\n\t\tUPDATE app_image\n\t\t   SET uuser = ?,\n\t\t   \t   filename = ?,\n\t\t   \t   creation_date = SYSDATE\n\t\t WHERE name = ?\n\t\t   AND image_size_id = ?\n\t</update>\n\n\t<resultMap id=\"image-result\" class=\"at.a1ta.cuco.core.shared.dto.Image\">\n\t\t<result property=\"id\" column=\"id\"/>\n\t\t<result property=\"uuser\" column=\"uuser\" jdbcType=\"VARCHAR\"/>\n\t\t<result property=\"filename\" column=\"filename\"/>\n\t\t<result property=\"name\" column=\"name\"/>\n\t\t<result property=\"creationDate\" column=\"creation_date\"/>\n\t\t<result property=\"imageSizeId\" column=\"image_size_id\"/>\n\t</resultMap>\n\n\t<select id=\"GetImages\" resultMap=\"image-result\" parameterClass=\"java.util.Map\">\n\t\tSELECT id, uuser, filename, name, creation_date, image_size_id\n\t\t  FROM app_image\n\t\t<dynamic prepend=\"WHERE\">\n\t\t\t<isNotNull property=\"id\" prepend=\"AND\">\n\t\t  \t   id = #id#\n\t\t\t</isNotNull>\n\t\t\t<isNotNull property=\"uuser\" prepend=\"AND\">\n\t\t  \t   uuser = #uuser#\n\t\t\t</isNotNull>\n\t\t\t<isNotNull property=\"filename\" prepend=\"AND\">\n\t\t  \t   filename = #filename#\n\t\t\t</isNotNull>\n\t\t\t<isNotNull property=\"name\" prepend=\"AND\">\n\t\t  \t   name = #name#\n\t\t\t</isNotNull>\n\t\t\t<isNotNull property=\"imageSizeId\" prepend=\"AND\">\n\t\t  \t   image_size_id = #imageSizeId#\n\t\t\t</isNotNull>\n\t\t</dynamic>\n\t  ORDER BY name, image_size_id, creation_date DESC\n\t</select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-clearingAccount.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-clearingAccount.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2892,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE sqlMap\n PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: christoph.strobl@telekom.at -->\n<sqlMap namespace=\"ClearingAccount\">\n    <cacheModel id=\"clearingAccount-cache\" type=\"ehcacheProvider\" readOnly=\"false\" serialize=\"true\">\n        <flushInterval hours=\"3\"/>\n        <property name=\"cache-size\" value=\"300\"/>\n    </cacheModel>\n    \n    <resultMap id=\"clearingAccount-result\" class=\"at.a1ta.cuco.core.shared.dto.ClearingAccount\">        \n        <result property=\"accountNumber\" column=\"KONTO_ID\"/>\n        <result property=\"partyId\" column=\"KUNDE_ID\"/>\n\t\t<result property=\"ban\" column=\"BAN_ID\" />\n\t\t<result property=\"ben\" column=\"BEN_ID\" />\n        <result property=\"invoiceType\" column=\"MEDIUM_BES\"/>\n        <result property=\"invoiceReceiverSalution\" column=\"ANREDE_BES\" />\n        <result property=\"invoiceReceiverTitle\" column=\"TITEL_BES\" />\n        <result property=\"invoiceReceiverName\" column=\"KUNDE_NAM\" />\n        <result property=\"invoiceAddressLine1\" column=\"ADRESSE_2ZEILIG_1\" />\n        <result property=\"invoiceAddressLine2\" column=\"ADRESSE_2ZEILIG_2\" />\n        <result property=\"active\" column=\"aktiv_cd\" nullValue=\"false\"/>\n    </resultMap>\n    \n    <sql id=\"attributes_v_konto\">\n\t   v_konto.KONTO_ID,\n\t   v_konto.BAN_ID,\n\t   v_konto.BEN_ID,\n\t   v_konto.KUNDE_ID,\n\t   v_konto.MEDIUM_BES,\n\t   v_konto.ANREDE_BES,\n\t   v_konto.TITEL_BES,\n\t   v_konto.KUNDE_NAM,\n\t   v_konto.ADRESSE_2ZEILIG_1,\n\t   v_konto.ADRESSE_2ZEILIG_2,\n\t   v_konto.aktiv_cd\n    </sql>\n    \n    <select id=\"getByPartyIds\" parameterClass=\"java.util.HashMap\" resultMap=\"clearingAccount-result\" cacheModel=\"clearingAccount-cache\">\n        SELECT <include refid=\"attributes_v_konto\"/> FROM v_konto \n\t\t\t\tWHERE v_konto.kunde_id in <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"partyIds\">#partyIds[]#</iterate>\n\t\t\t\tORDER BY v_konto.KONTO_ID ASC\n    </select>\n    \n    <select id=\"getActiveTaByPartyId\" parameterClass=\"long\" resultMap=\"clearingAccount-result\" cacheModel=\"clearingAccount-cache\">\n        SELECT <include refid=\"attributes_v_konto\"/> FROM v_konto \n        WHERE v_konto.kunde_id = #partyId#\n        AND aktiv_cd = 1\n        AND ban_id IS NULL\n        ORDER BY v_konto.KONTO_ID ASC\n    </select> \n\t\t\n\t<select id=\"getByAccountNumber\" parameterClass=\"java.lang.Long\" resultMap=\"clearingAccount-result\" cacheModel=\"clearingAccount-cache\">\n        SELECT <include refid=\"attributes_v_konto\"/> FROM v_konto WHERE v_konto.konto_id = #accountNumber#\n    </select>    \n    \n    <select id=\"GetForPhonenumber\" parameterClass=\"string\" resultMap=\"clearingAccount-result\" cacheModel=\"clearingAccount-cache\">\n        SELECT <include refid=\"attributes_v_konto\"/> FROM v_konto, v_konto_rufnummer kr WHERE v_konto.konto_id = kr.konto_id AND kr.rufnummer=#phonenumber#\n    </select>    \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/applicationContext-cuco-dao-db.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/applicationContext-cuco-dao-db.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 11688,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n  xsi:schemaLocation=\"http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n\t\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n\t\thttp://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\n\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n  <bean id=\"dataSourceCuCo\" class=\"com.mchange.v2.c3p0.ComboPooledDataSource\" destroy-method=\"close\">\n        <!-- use default oracle jdbc driver -->\n        <property name=\"driverClass\">\n            <value>${db.driverClass}</value>\n        </property>\n        <property name=\"jdbcUrl\">\n            <value>jdbc:${db.dbms}:thin:@\n                (DESCRIPTION =\n                (ADDRESS_LIST =\n                (source_route=off)\n                (FAILOVER = ON)\n                (LOAD_BALANCE=ON)\n                (ADDRESS =\n                (PROTOCOL = TCP)(HOST = ${db.host})(PORT = ${db.port}))\n                )\n                (CONNECT_DATA =\n                (service_name = ${db.servicename})\n                (failover_mode =\n                (type=select))\n                )\n                )\n            </value>\n        </property>\n    \n        <property name=\"user\" value=\"${db.username}\" />\n        <property name=\"password\" value=\"${db.password}\" />\n        <!-- always keep 5 connections to database open -->\n        <property name=\"minPoolSize\">\n            <value>5</value>\n        </property>\n        <!-- use max 250 connections to database -->\n        <property name=\"maxPoolSize\">\n            <value>${db.maxPoolSize}</value>\n        </property>\n        <!-- increment connections by this number if there is lack of them -->\n        <property name=\"acquireIncrement\">\n            <value>5</value>\n        </property>\n        <!-- number of threads used for asyncronous database access -->\n        <property name=\"numHelperThreads\">\n            <value>25</value>\n        </property>\n        <!--\n            use the wrapper with caution as it may increase execution time far\n            more than it saves\n        -->\n        <property name=\"maxStatementsPerConnection\">\n            <value>25</value>\n        </property>\n        <!--\n            allow connections to exeed after 3 hours (value given in seconds)\n        -->\n        <property name=\"maxIdleTime\">\n            <value>10800</value>\n        </property>\n    </bean>\n\n  <bean id=\"appDataSource\" class=\"org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy\">\n    <property name=\"targetDataSource\">\n      <ref local=\"dataSourceCuCo\" />\n    </property>\n  </bean>\n\n  <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n    <property name=\"dataSource\">\n      <ref local=\"appDataSource\" />\n    </property>\n  </bean>\n\n  <bean id=\"sqlMapClient4CuCo\" class=\"org.springframework.orm.ibatis.SqlMapClientFactoryBean\">\n    <property name=\"configLocation\" value=\"classpath:/at/a1ta/cuco/core/dao/db/sqlmap-config.xml\" />\n    <property name=\"dataSource\">\n      <ref bean=\"appDataSource\" />\n    </property>\n  </bean>\n\n  <bean id=\"cucoCustomerDao\" class=\"at.a1ta.cuco.core.dao.db.impl.PartyDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"contactPersonDao\" class=\"at.a1ta.cuco.core.dao.db.impl.ContactPersonDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"imageDao\" class=\"at.a1ta.cuco.core.dao.db.impl.ImageDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"imageSizeDao\" class=\"at.a1ta.cuco.core.dao.db.impl.ImageSizeDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"phoneNumberDao\" class=\"at.a1ta.cuco.core.dao.db.impl.PhoneNumberDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"locationDao\" class=\"at.a1ta.cuco.core.dao.db.impl.LocationDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"inventoryDao\" class=\"at.a1ta.cuco.core.dao.db.impl.InventoryDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n  <bean id=\"cCTOrgStructureElementDao\" class=\"at.a1ta.cuco.core.dao.db.impl.CCTOrgStructureElementDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"invoiceDao\" class=\"at.a1ta.cuco.core.dao.db.impl.InvoiceDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"clearingAccountDao\" class=\"at.a1ta.cuco.core.dao.db.impl.ClearingAccountDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"categoryDao\" class=\"at.a1ta.cuco.core.dao.db.impl.CategoryDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"segmentDao\" class=\"at.a1ta.cuco.core.dao.db.impl.SegmentDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"creditTypeDao\" class=\"at.a1ta.cuco.core.dao.db.impl.CreditTypeDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"teamDao\" class=\"at.a1ta.cuco.core.dao.db.impl.TeamDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"serviceDao\" class=\"at.a1ta.cuco.core.dao.db.impl.ServiceDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"chargingTypeDao\" class=\"at.a1ta.cuco.core.dao.db.impl.ChargingTypeDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"payableTicketDao\" class=\"at.a1ta.cuco.core.dao.db.impl.PayableTicketDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"unknownAreaCodeDao\" class=\"at.a1ta.cuco.core.dao.db.impl.UnknownAreaCodeDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n\n  <bean id=\"vipHistoryDao\" class=\"at.a1ta.cuco.core.dao.db.impl.VIPHistoryDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"inventoryProductGroupDao\" class=\"at.a1ta.cuco.core.dao.db.impl.InventoryProductGroupDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"productHierarchyDao\" class=\"at.a1ta.cuco.core.dao.db.impl.ProductHierarchyDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"turnoverDao\" class=\"at.a1ta.cuco.core.dao.db.impl.TurnoverDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"usageDataDao\" class=\"at.a1ta.cuco.core.dao.db.impl.UsageDataDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"mkInteractionDao\" class=\"at.a1ta.cuco.core.dao.db.impl.MKInteractionDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"customerBlockDao\" class=\"at.a1ta.cuco.core.dao.db.impl.CustomerBlockDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"flashInfoDao\" class=\"at.a1ta.cuco.core.dao.db.impl.FlashInfoDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"linksPortletDao\" class=\"at.a1ta.cuco.core.dao.db.impl.LinksPortletDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"userInfoStatisticsDao\" class=\"at.a1ta.cuco.core.dao.db.impl.UserInfoStatisticsDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"reportingDao\" class=\"at.a1ta.cuco.core.dao.db.impl.ReportingDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"customerUnlockRequestDao\" class=\"at.a1ta.cuco.core.dao.db.impl.CustomerUnlockRequestDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"mycucoQuoteDao\" class=\"at.a1ta.cuco.core.dao.db.impl.MyQuoteDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"mycucoNotesDao\" class=\"at.a1ta.cuco.core.dao.db.impl.MyNotesDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"attributeDao\" class=\"at.a1ta.cuco.core.dao.db.impl.AttributeDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"salesInfoDao\" class=\"at.a1ta.cuco.core.dao.db.impl.SalesInfoDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  <bean id=\"standardAddressDao\" class=\" at.a1ta.cuco.core.dao.db.impl.StandardAddressDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n  <bean id=\"visitReportDao\" class=\"at.a1ta.cuco.core.dao.db.visitreport.VisitReportDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n  <bean id=\"vbmProductsDao\" class=\"at.a1ta.cuco.core.dao.db.impl.VbmProductsDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n  <bean id=\"userShopAssignmentDao\" class=\"at.a1ta.cuco.core.dao.db.impl.UserShopAssignmentDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n  <bean id=\"uiTextsEditorDAO\" class=\"at.a1ta.cuco.core.dao.db.impl.UITextsEditorDAOImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n  <bean id=\"settingsEditorDAO\" class=\"at.a1ta.cuco.core.dao.db.impl.SettingsEditorDAOImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n  <bean id=\"myToDoNotesDao\" class=\"at.a1ta.cuco.core.dao.db.impl.MyToDoNotesDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n  <bean id=\"gamificationLocalDao\" class=\"at.a1ta.cuco.core.dao.db.impl.GamificationLocalDAOImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n    <bean id=\"cucoLogsDao\" class=\"at.a1ta.cuco.core.dao.db.impl.CucoLogsDaoImpl\">\n    <property name=\"sqlMapClient\" ref=\"sqlMapClient4CuCo\" />\n  </bean>\n  \n   \n  \n\n  \n\t<!-- SOLR -->\n\t<bean id=\"solrServer\" abstract=\"true\">\n\t\t<constructor-arg value=\"${solr.host}\" />\n\t\t<property name=\"connectionTimeout\" value=\"100\" />\n\t\t<property name=\"defaultMaxConnectionsPerHost\" value=\"100\" />\n\t\t<property name=\"maxTotalConnections\" value=\"1000\" />\n\t</bean>\n\n\t<bean id=\"solrPartyTemplate\" class=\"at.a1ta.bite.data.solr.core.SolrTemplate\">\n\t\t<constructor-arg>\n\t\t\t<bean class=\"org.apache.solr.client.solrj.impl.CommonsHttpSolrServer\"\n\t\t\t\tparent=\"solrServer\" />\n\t\t</constructor-arg>\n\t\t<constructor-arg>\n\t\t\t<value type=\"java.lang.String\">party</value>\n\t\t</constructor-arg>\n\t</bean>\n\n\t<bean id=\"solrPartyWithPhoneNumbersTemplate\" class=\"at.a1ta.bite.data.solr.core.SolrTemplate\">\n\t\t<constructor-arg>\n\t\t\t<bean class=\"org.apache.solr.client.solrj.impl.CommonsHttpSolrServer\"\n\t\t\t\tparent=\"solrServer\" />\n\t\t</constructor-arg>\n\t\t<constructor-arg>\n\t\t\t<value type=\"java.lang.String\">phone</value>\n\t\t</constructor-arg>\n\t</bean>\n\n\t<bean id=\"partySolrRepository\" class=\"at.a1ta.cuco.core.dao.solr.SolrPartyRepository\">\n\t\t<property name=\"solrTemplate\" ref=\"solrPartyTemplate\" />\n\t</bean>\n\n\t<bean id=\"partySolrRepositoryWithPhoneNumbers\"\n\t\tclass=\"at.a1ta.cuco.core.dao.solr.SolrPartyRepositoryWithPhoneNumbers\">\n\t\t<property name=\"solrTemplate\" ref=\"solrPartyWithPhoneNumbersTemplate\" />\n\t</bean>\n</beans>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-productHierarchy.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-productHierarchy.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1401,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"ProductHierarchy\">\n  <cacheModel id=\"productHierarchy-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t<flushInterval hours=\"2\" />\n\t<property name=\"cache-size\" value=\"1\" />\n  </cacheModel>\n\n  <typeAlias alias=\"productHierarchy\" type=\"at.a1ta.cuco.core.shared.dto.ProductHierarchy\"/>\n\n  <resultMap id=\"productHierarchy-result\" class=\"productHierarchy\">\n\t<result property=\"productId\" column=\"SSA_PRODUKT_ID\" />\n\t<result property=\"productDescription\" column=\"PRODUKT_BES\" />\n\t<result property=\"productLevel1Id\" column=\"PRODUKTEBENE_1_ID\" />\n\t<result property=\"productLevel1Description\" column=\"PRODUKTEBENE_1_BES\" />\n\t<result property=\"productLevel2Id\" column=\"PRODUKTEBENE_2_ID\" />\n\t<result property=\"productLevel2Description\" column=\"PRODUKTEBENE_2_BES\" />\n\t<result property=\"productLevel3Id\" column=\"PRODUKTEBENE_3_ID\" />\n\t<result property=\"productLevel3Description\" column=\"PRODUKTEBENE_3_BES\" />\n\t<result property=\"productLevel4Id\" column=\"PRODUKTEBENE_4_ID\" />\n\t<result property=\"productLevel4Description\" column=\"PRODUKTEBENE_4_BES\" />\n  </resultMap>\n\n  <select id=\"get\" resultMap=\"productHierarchy-result\" cacheModel=\"productHierarchy-cache\">\n\tselect * from V_PRODUKT_HIERARCHIE\n  </select>\n\n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-payableticket.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-payableticket.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1865,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<!-- @author: rene.weidinger@telekom.at -->\n<sqlMap namespace=\"PayableTicket\">\n\t<typeAlias alias=\"payableticket\" type=\"at.a1ta.cuco.core.shared.dto.PayableTicket\"/>\n\t\n\t<resultMap id=\"payableticket-result\" class=\"payableticket\">\n\t\t<result property=\"id\" column=\"gula_id\" />\n\t\t<result property=\"customerId\" column=\"kunde_id\" />\n\t\t<result property=\"onkz\" column=\"vorwahl\" />\n\t\t<result property=\"number\" column=\"rufnummer\" />\n\t\t<result property=\"service\" column=\"this2dienstleistung\" select=\"Service.get\"/>\n\t\t<result property=\"comment\" column=\"kommentartext\" />\n\t\t<result property=\"agent\" column=\"user_id\" select=\"User.getBiteUserById\" />\n\t\t<result property=\"exportedDate\" column=\"exportedat\" />\n\t\t<result property=\"clearingAccountNumber\" column=\"customeraccountid\" />\n\t\t<result property=\"createDate\" column=\"createdat\" />\n\t\t<result property=\"costs\" column=\"kosten\" />\n\t</resultMap>\n\n\t<select id=\"getTicketsForParties\" resultMap=\"payableticket-result\" parameterClass=\"java.util.Map\">\n\t\tSELECT *\n\t\tFROM cuco_gula\n\t\t<dynamic prepend=\"WHERE\">\n\t\t  \t<isNotNull prepend=\"AND\" property=\"parties\">\n\t\t  \t\tkunde_id IN <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"parties\">#parties[].id#</iterate>\n\t\t  \t</isNotNull>\n\t\t</dynamic>\n\t</select>\n\t\n\t<insert id=\"insert\" parameterClass=\"payableticket\">\n\t\t<selectKey resultClass=\"long\" keyProperty=\"id\">SELECT seq_cuco_gula.nextval AS id FROM dual</selectKey>\n\t\tINSERT INTO cuco_gula(gula_id, kunde_id, vorwahl, rufnummer, this2dienstleistung,kommentartext,user_id,exportedat,customeraccountid,createdat,kosten)\n\t\tVALUES (#id#, #customerId#,#onkz#,#number#,#service.id#,#comment#,#agent.id#,#exportedDate#,#clearingAccountNumber#,systimestamp,#costs#)\n\t</insert>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-attribute.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-attribute.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 8944,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"Attribute\">\n\n <typeAlias alias=\"AttributeConfig\" type=\"at.a1ta.cuco.core.shared.dto.AttributeConfig\" />\n <typeAlias alias=\"Attribute\" type=\"at.a1ta.cuco.core.shared.dto.Attribute\" />\n <typeAlias alias=\"AttributeHistory\" type=\"at.a1ta.cuco.core.shared.dto.AttributeHistory\" />\n\n  <!-- ATTRIBUTE CONFIG -->\n\n  <cacheModel type=\"ehcacheProvider\" id=\"attribute-config-cache\">\n    <flushOnExecute statement=\"Attribute.insertConfig\"/>\n    <flushOnExecute statement=\"Attribute.updateConfig\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <resultMap id=\"attribute-config-result\" class=\"AttributeConfig\">\n       <result property=\"attributeConfigId\"   column=\"attribute_config_id\" />\n       <result property=\"attributeName\"       column=\"attribute_name\" />\n       <result property=\"attributeType\"       column=\"attribute_type\" />\n       <result property=\"active\"              column=\"active\" />\n       <result property=\"deleted\"             column=\"deleted\" />\n       <result property=\"creator\"             column=\"creator\" select=\"User.getBiteUserById\"/>\n       <result property=\"createDate\"          column=\"create_date\" />\n       <result property=\"lastModifier\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n       <result property=\"lastUpdate\"          column=\"last_update\" />\n       <result property=\"lowerBounds\"         column=\"lower_bounds\" />\n       <result property=\"upperBounds\"         column=\"upper_bounds\" />\n       <result property=\"orderNum\"            column=\"order_num\" />\n       <result property=\"grouping\"            column=\"grouping\" />\n       <result property=\"segments\"            column=\"segments\" typeHandler=\"at.a1ta.cuco.core.dao.util.ListStringTypeHandler\" />\n       <result property=\"validValues\"       column=\"valid_values\" />\n       \n  </resultMap>\n    \n  <select id=\"getAllConfigs\" resultMap=\"attribute-config-result\" parameterClass=\"java.util.HashMap\" cacheModel=\"attribute-config-cache\">\n      SELECT *\n        FROM si_attribute_config\n       where deleted = 0\n       ORDER BY order_num\n  </select> \n  \n  <select id=\"getConfigById\" resultMap=\"attribute-config-result\" parameterClass=\"java.lang.Long\" cacheModel=\"attribute-config-cache\">\n      SELECT *\n        FROM si_attribute_config\n       WHERE deleted = 0\n         AND attribute_config_id = #attributeConfigId#\n  </select> \n    \n  <insert id=\"insertConfig\" parameterClass=\"AttributeConfig\">\n    <selectKey resultClass=\"long\" keyProperty=\"attributeConfigId\">SELECT seq_si_attribute_config.nextval AS id FROM dual</selectKey>\n    insert into si_attribute_config \n    (attribute_config_id, attribute_name, attribute_type, valid_values,active, deleted, order_num, creator, create_date, last_modifier, last_update, lower_bounds, upper_bounds, grouping, segments)\n    values \n    (#attributeConfigId#, #attributeName#, #attributeType#, #validValues#,#active#, #deleted#, (select nvl(max(order_num+1),1) from si_attribute_config), #creator.id#, #createDate#, #lastModifier.id#, #lastUpdate#, #lowerBounds#, #upperBounds#, #grouping#, #segments,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#)\n  </insert>\n  \n  <update id=\"updateConfig\" parameterClass=\"AttributeConfig\">\n    update si_attribute_config set \n      attribute_name = #attributeName#, \n      attribute_type = #attributeType#, \n      active = #active#, \n      deleted = #deleted#, \n      order_num = #orderNum#,\n      last_modifier = #lastModifier.id#, \n      last_update= #lastUpdate#,\n      lower_bounds = #lowerBounds#, \n      upper_bounds = #upperBounds#,\n      grouping = #grouping#,\n      valid_values=#validValues#,\n      segments = #segments,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#\n    WHERE\n      attribute_config_id = #attributeConfigId#\n  </update>\n  \n  <!-- ATTRIBUTE -->\n  \n   <resultMap id=\"attribute-result\" class=\"Attribute\">\n       <result property=\"attributeId\"         column=\"attribute_id\" />\n       <result property=\"attributeConfig\"     column=\"attribute_config_id\" select=\"Attribute.getConfigById\" />\n       <result property=\"kundeId\"             column=\"kunde_id\" />\n       <result property=\"booleanValue\"        column=\"boolean_value\" />\n       <result property=\"numberValue\"         column=\"number_value\" />\n       <result property=\"textValue\"         column=\"text_value\" />\n       <result property=\"lastModifier\"        column=\"last_modifier\" select=\"User.getBiteUserById\" />\n       <result property=\"lastUpdate\"          column=\"last_update\" />\n       <result property=\"hasHistory\"          column=\"has_history\" />\n  </resultMap>\n\n\n  <select id=\"getSameExistingAttributes\" resultMap=\"attribute-result\" parameterClass=\"Attribute\">\n      SELECT a.*, 0 as has_history\n        FROM si_attribute a\n       WHERE 1=1\n         <isNotNull prepend=\"AND\" property=\"attributeConfig.attributeConfigId\">\n           attribute_config_id = #attributeConfig.attributeConfigId#\n         </isNotNull>\n         <isNotNull prepend=\"AND\" property=\"kundeId\">\n           kunde_id = #kundeId#\n         </isNotNull>\n  </select> \n    \n  <select id=\"getByPartyId\" resultMap=\"attribute-result\" parameterClass=\"java.util.HashMap\">\n    SELECT * FROM (\n      SELECT a.attribute_id, ac.attribute_config_id, #kundeId# AS kunde_id, a.boolean_value, a.number_value,a.text_value, a.last_modifier, a.last_update, ac.order_num, \n        NVL((SELECT 1 FROM si_attribute_history WHERE kunde_id = a.kunde_id AND attribute_config_id = a.attribute_config_id AND rownum = 1), 0) as has_history\n        FROM si_attribute a, si_attribute_config ac\n       WHERE ac.attribute_config_id = a.attribute_config_id\n         AND ac.active = 1\n         AND ac.deleted = 0\n         AND a.kunde_id = #kundeId#\n         AND ac.grouping = 'SALESINFO_CUSTOMERINFO'\n         AND (ac.segments like '%$segment$%' OR ac.segments = 'all')\n     UNION\n      SELECT null, ac.attribute_config_id, #kundeId# AS kunde_id, null as boolean_value, null as number_value,null as text_value, null as last_modifier, null as last_update, ac.order_num, 0 as has_history\n        FROM si_attribute_config ac\n       WHERE NOT EXISTS ( SELECT 1 FROM si_attribute WHERE kunde_id = #kundeId# AND attribute_config_id = ac.attribute_config_id)\n         AND ac.active = 1\n         AND ac.deleted = 0\n         AND ac.grouping = 'SALESINFO_CUSTOMERINFO'\n         AND (ac.segments like '%$segment$%' OR ac.segments = 'all')\n     )\n       ORDER BY order_num \n  </select> \n    \n  <insert id=\"insert\" parameterClass=\"Attribute\">\n    <selectKey resultClass=\"long\" keyProperty=\"attributeId\">SELECT seq_si_attribute.nextval AS id FROM dual</selectKey>\n    insert into si_attribute \n    (attribute_id, attribute_config_id, kunde_id, boolean_value, number_value,text_value, last_modifier, last_update)\n    values \n    (#attributeId#, #attributeConfig.attributeConfigId#, #kundeId#, #booleanValue#, #numberValue#,#textValue#, #lastModifier.id#, #lastUpdate#)\n  </insert>\n  \n  <delete id=\"delete\" parameterClass=\"Attribute\">\n    delete from si_attribute\n     where attribute_id = #attributeId#\n  </delete>\n  \n    <!-- ATTRIBUTE HISTORY -->\n  \n   <resultMap id=\"attribute-history-result\" class=\"AttributeHistory\">\n       <result property=\"attributeId\"         column=\"attribute_id\" />\n       <result property=\"attributeConfig\"   column=\"attribute_config_id\" select=\"Attribute.getConfigById\" />\n       <result property=\"kundeId\"             column=\"kunde_id\" />\n       <result property=\"booleanValue\"        column=\"boolean_value\" />\n       <result property=\"numberValue\"         column=\"number_value\" />\n       <result property=\"textValue\"         column=\"text_value\" />\n       <result property=\"creator\"             column=\"creator\" select=\"User.getBiteUserById\" />\n       <result property=\"createDate\"          column=\"create_date\" />\n  </resultMap>\n    \n  <select id=\"getHistory\" resultMap=\"attribute-history-result\" parameterClass=\"java.util.HashMap\">\n      SELECT ah.*\n        FROM si_attribute_history ah, si_attribute_config ac\n       WHERE ah.attribute_config_id =  #attributeConfigId#\n         AND ah.kunde_id =  #partyId#\n         AND ah.attribute_config_id = ac.attribute_config_id\n         AND ac.active = 1\n         AND ac.deleted = 0\n       ORDER BY ah.create_date DESC\n  </select> \n    \n  <insert id=\"insertHistory\" parameterClass=\"AttributeHistory\">\n    <selectKey resultClass=\"long\" keyProperty=\"attributeId\">SELECT seq_si_attribute.nextval AS id FROM dual</selectKey>\n    insert into si_attribute_history \n    (attribute_id, attribute_config_id, kunde_id, boolean_value, number_value, text_value,creator, create_date)\n    values \n    (#attributeId#, #attributeConfig.attributeConfigId#, #kundeId#, #booleanValue#, #numberValue#,#textValue#, #creator.id#, #createDate#)\n  </insert>\n  \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-service.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-service.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 4167,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n\t<!-- @author: gerald.sigmundl@telekom.at -->\n<sqlMap namespace=\"Service\">\t\n\t<typeAlias alias=\"service\" type=\"at.a1ta.cuco.core.shared.dto.Service\"/>\n\t\n\t<cacheModel id=\"service-cache\" type=\"ehcacheProvider\" readOnly=\"true\">\n\t\t<flushInterval minutes=\"15\" />\n\t\t<flushOnExecute statement=\"Service.insert\"/>\n\t\t<flushOnExecute statement=\"Service.update\"/>\n\t\t<flushOnExecute statement=\"Service.delete\"/>\n\t\t<property name=\"cache-size\" value=\"300\" />\n\t</cacheModel>\n\t\n\t<resultMap id=\"service-result\" class=\"at.a1ta.cuco.core.shared.dto.Service\">\n\t\t<result property=\"id\" column=\"dienstleistung_id\" />\n\t\t<result property=\"name\" column=\"NAME\" />\n\t\t<result property=\"validity.validStartDate\" column=\"AKTIV_VON\" />\n\t\t<result property=\"validity.validUntilDate\" column=\"AKTIV_BIS\" />\n\t\t<result property=\"productCode\" column=\"PRODUKTCODE\" />\n\t\t<result property=\"product\" column=\"PRODUKT\" />\n\t\t<result property=\"costs\" column=\"KOSTEN\" />\n\t\t<result property=\"comment\" column=\"KOMMENTARTEXT\" />\n\t\t<result property=\"reason1\" column=\"GRUND1\" />\n\t\t<result property=\"reason2\" column=\"GRUND2\" />\n\t\t<result property=\"reason3\" column=\"GRUND3\" />\n\t\t<result property=\"result\" column=\"ERGEBNIS\" />\n\t\t<result property=\"multi\" column=\"multiplikator\"/>\n\t\t<result property=\"ticketcount\" column=\"ticketcount\"/>\n\t\t<result property=\"employeeinfo\" column=\"mitarbeiterinfo\"/>\n\t\t<result property=\"chargingType\" column=\"this2verrechnungsart\"  select=\"ChargingType.get\"/>\n\t\t<result property=\"creditType\" column=\"this2dienstleistungsart\" select=\"CreditType.get\"/>\t\t\n\t</resultMap>\n\t\n\t<sql id=\"attributes\">\n\t\tdienstleistung_id,aktiv_von,aktiv_bis,name,produktcode,kosten,\n\t\tkommentartext,produkt,grund1,grund2,grund3,ergebnis,\n\t\tthis2verrechnungsart,this2dienstleistungsart,multiplikator,mitarbeiterinfo\n\t</sql>\n\t\n\t<select id=\"get\" resultMap=\"service-result\" parameterClass=\"java.lang.Long\">\n\t\tselect \n\t\t\t<include refid=\"attributes\"/>,\n\t\t\t(select count(1) from cuco_gula where this2dienstleistung = dienstleistung_id) as ticketcount\n\t\tfrom \n\t\tCUCO_dienstleistung\n\t\t<isParameterPresent>\n\t\tWHERE dienstleistung_ID=#id#\n\t\t</isParameterPresent>\n\t</select>\n\t\n\t<select id=\"getValidForUser\" resultMap=\"service-result\" parameterClass=\"java.lang.Long\">\n\t\tselect\n\t\t\td.*,\n\t\t\t0 as ticketcount\n\t\tfrom\n\t\t\tcuco_dienstleistung d,\n\t\t\tcuco_team_dienstleistung td,\n\t\t\tcuco_team_user tu\n\t\twhere\n\t\t\td.dienstleistung_id = td.dienstleistung_id\n\t\tand\n\t\t\ttd.team_id = tu.team_id\n\t\tand\n\t\t\td.aktiv_von &lt; sysdate\n\t\tand\n\t\t\td.aktiv_bis &gt; sysdate\n\t\tand\n\t\t\ttu.user_id = #user_id#\n\t\torder by\n\t\t\td.name asc\n\t</select>\n\t\n\t<insert id=\"insert\" parameterClass=\"at.a1ta.cuco.core.shared.dto.Service\">\n\t\t<selectKey keyProperty=\"id\" resultClass=\"java.lang.Long\" type=\"pre\">SELECT SEQ_CUCO_dienstleistung.NEXTVAL AS id FROM DUAL</selectKey>\n\t\tinsert into CUCO_dienstleistung VALUES(#id#, #validity.validStartDate#, #validity.validUntilDate#, #name#,\n\t\t#productCode#, #costs#, #comment#, #product#, #reason1#, #reason2#, #reason3#, #result#, #chargingType.id#, #creditType.id#,nvl(#multi#,1),#employeeinfo#)  \n\t</insert>\n\t\n\t<update id=\"update\" parameterClass=\"at.a1ta.cuco.core.shared.dto.Service\">\n\t\tupdate CUCO_dienstleistung set \n\t\t\tAKTIV_VON = #validity.validStartDate#, \n\t\t\tAKTIV_BIS = #validity.validUntilDate#,\n\t\t\tNAME = #name#, \n\t\t\tPRODUKTCODE = #productCode#, \n\t\t\tKOSTEN = #costs#, \n\t\t\tKOMMENTARTEXT = #comment#, \n\t\t\tPRODUKT = #product#,\n\t\t\tGRUND1 = #reason1#, GRUND2 = #reason2#, GRUND3 = #reason3#, \n\t\t\tERGEBNIS = #result#,\n\t\t\tmultiplikator = nvl(#multi#,1),\n\t\t\tmitarbeiterinfo = #employeeinfo#,\n\t\t\tthis2verrechnungsart = #chargingType.id#,\n\t\t\tthis2dienstleistungsart = #creditType.id# \n\t\twhere \n\t\t\tdienstleistung_ID = #id#\n\t</update>\n\t\n\t<delete id=\"delete\" parameterClass=\"java.lang.Long\">\n\t\tdelete from CUCO_dienstleistung where dienstleistung_ID = #serviceId#\n\t</delete>\n\t\n<select id=\"search\" resultMap=\"service-result\" parameterClass=\"java.lang.String\">\n\t\tselect s.*, 0 as ticketcount from CUCO_dienstleistung s where lower(s.Name) like lower(#service#)\n\t</select>\n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-salesInfo.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/sqlmap-salesInfo.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 31532,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"SalesInfo\">\n  <typeAlias alias=\"SalesInfoNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote\" />\n  <typeAlias alias=\"SimpleNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.SimpleNote\" />\n  <typeAlias alias=\"CompetitorNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.CompetitorNote\" />\n  <typeAlias alias=\"Task\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.Task\" />\n  <typeAlias alias=\"StandardAddress\" type=\"at.a1ta.cuco.core.shared.dto.StandardAddress\" />\n  <typeAlias alias=\"SbsNoteReportRow\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.SbsNoteReportRow\" />\n  <typeAlias alias=\"TeamEmailAdminGroup\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.TeamEmailAdminGroup\" />\n  <typeAlias alias=\"SalesConvNoteReportRow\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.SalesConvNoteReportRow\" />\n  <typeAlias alias=\"SalesConvProductNoteRow\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.SalesConvProductNoteRow\" />\n  <typeAlias alias=\"FeedbackQuestionsRow\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.FeedbackQuestionsRow\" />\n  <typeAlias alias=\"AppointmentNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.AppointmentNote\" />\n\n  <cacheModel type=\"ehcacheProvider\" id=\"sales-info-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertNote\"/>\n    <flushOnExecute statement=\"SalesInfo.updateNote\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <cacheModel type=\"ehcacheProvider\" id=\"simple-note-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertNote\"/>\n    <flushOnExecute statement=\"SalesInfo.updateNote\"/>\n    <flushOnExecute statement=\"SalesInfo.insertSimpleNote\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <cacheModel type=\"ehcacheProvider\" id=\"competitor-note-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertNote\"/>\n    <flushOnExecute statement=\"SalesInfo.updateNote\"/>\n    <flushOnExecute statement=\"SalesInfo.insertCompetitorNote\"/>\n    <flushOnExecute statement=\"SalesInfo.updateCompetitorNote\"/>\n    <flushOnExecute statement=\"SalesInfo.updateBindingPeriodReminderMailSentDate\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n   <cacheModel type=\"ehcacheProvider\" id=\"appointment-note-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertNote\"/>\n    <flushOnExecute statement=\"SalesInfo.updateNote\"/>\n    <flushOnExecute statement=\"SalesInfo.insertAppointmentNote\"/>\n    <flushOnExecute statement=\"SalesInfo.updateAppointmentNote\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <cacheModel type=\"ehcacheProvider\" id=\"task-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertTask\"/>\n    <flushOnExecute statement=\"SalesInfo.updateTask\"/>\n    <flushOnExecute statement=\"SalesInfo.updateTaskReminderMailSentDate\"/>\n    <flushOnExecute statement=\"SalesInfo.updateTaskVcalMailSentInfo\"/>\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n  \n  <!-- For Reminder Mails -->\n  \n  <resultMap id=\"mail-note-resultmap\" class=\"SalesInfoNote\">\n     <result property=\"salesInfoNoteId\"             column=\"si_note_id\" />\n     <result property=\"partyId\"                     column=\"kunde_id\" />\n     <result property=\"noteText\"                    column=\"note_text\" />\n     <result property=\"task\"                        column=\"si_task_id\" select=\"SalesInfo.getTask\" />\n     <result property=\"lastModificationUser\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n  </resultMap>\n  \n    <resultMap id=\"mail-salesconvnote-resultmap\" class=\"SalesInfoNote\">\n     <result property=\"salesInfoNoteId\"             column=\"si_note_id\" />\n     <result property=\"partyId\"                     column=\"kunde_id\" />\n     <result property=\"noteText\"                    column=\"note_text\" />\n     <result property=\"lastModificationUser\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n  </resultMap>\n  \n    <resultMap id=\"mail-competitornote-resultmap\" class=\"CompetitorNote\">\n     <result property=\"salesInfoNoteId\"             column=\"si_note_id\" />\n     <result property=\"partyId\"                     column=\"kunde_id\" />\n     <result property=\"noteText\"                    column=\"note_text\" />\n     <result property=\"lastModificationUser\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n     <result property=\"name\"                        column=\"name\" />\n     <result property=\"bindingDate\"                 column=\"binding_date\" />\n  </resultMap>\n  \n   <select id=\"getNotesForReminderMail\" resultMap=\"mail-note-resultmap\" parameterClass=\"java.lang.Long\">\n      SELECT n.si_note_id, n.kunde_id, n.note_text, t.si_task_id, n.last_modifier\n        FROM si_note n, si_task t\n       WHERE n.deleted = 0\n         AND n.task_id = t.si_task_id\n         AND t.active = 1\n         AND t.send_reminder_mail = 1\n         AND t.reminder_mail_sent_date IS NULL\n         AND t.date_start IS NOT NULL\n         AND TRUNC(t.date_start) &lt; SYSDATE\n  </select>\n  \n   <select id=\"getNotesForBindingPeriodReminderMail\" resultMap=\"mail-competitornote-resultmap\" parameterClass=\"java.util.HashMap\">\n      SELECT n.si_note_id, n.kunde_id, n.note_text, n.last_modifier, c.binding_date, c.name\n        FROM si_note n, si_competitor_note c\n       WHERE n.deleted = 0\n         AND c.si_note_id = n.si_note_id\n         AND c.reminder_mail_sent_date IS NULL\n         AND c.binding_date is not null\n         AND <![CDATA[c.binding_date <= trunc(sysdate) + #numDays# + 23/24 + 59/24/60 + 59/24/60/60]]>  \n  </select>\n  \n  <select id=\"getSalesConvNotesForReminderMail\" resultMap=\"mail-salesconvnote-resultmap\">\n    SELECT n.* \n      FROM si_note n, si_sc_sales_conv_note scn, si_note np, si_vi_sbs_product_note p\n     WHERE  n.deleted = 0\n       AND scn.last_reminder_mail_sent &lt; SYSDATE - 5\n       AND scn.si_note_id = np.PREDECESSOR_SI_NOTE_ID\n       AND np.si_note_id = p.si_note_id\n       AND p.QUOTE_STATUS = 'OPEN'\n       AND n.si_note_id = scn.si_note_id\n  </select>   \n  \n  <update id=\"updateLastReminderMailSentDateForSalesConvNote\" parameterClass=\"java.lang.Long\">\n    UPDATE si_sc_sales_conv_note\n       SET last_reminder_mail_sent = SYSDATE\n     WHERE si_note_id = #salesConvNoteId#\n  </update>\n  \n  <update id=\"updateTaskReminderMailSentDate\" parameterClass=\"Task\">\n    update si_task \n       set reminder_mail_sent_date = #reminderMailSentDate#\n     WHERE si_task_id = #taskId#\n  </update>\n     \n  <update id=\"updateTaskVcalMailSentInfo\" parameterClass=\"Task\">\n    update si_task \n       set vcal_mail_sent_date = #vCalMailSentDate#,\n           vcal_mail_to = #vCalMailTo#,\n           vcal_mail_cc = #vCalMailCC#\n     WHERE si_task_id = #taskId#\n  </update>   \n  \n  <!-- For Overview -->\n  \n  <resultMap id=\"slim-si-note-resultmap\" class=\"SalesInfoNote\">\n     <result property=\"salesInfoNoteId\"             column=\"si_note_id\" />\n     <result property=\"salesInfoNoteType\"           column=\"si_note_class\" />\n     <result property=\"predecessorSalesInfoNoteId\"  column=\"predecessor_si_note_id\" />\n     <result property=\"partyId\"                     column=\"kunde_id\" />\n     <result property=\"noteText\"                    column=\"note_text\" />\n     <result property=\"task\"                        column=\"task_id\" select=\"SalesInfo.getTaskSlim\" />\n     <result property=\"lastModificationUser\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n     <result property=\"lastModificationTimestamp\"   column=\"last_update\" />\n     <result property=\"overviewStatus\"              column=\"overviewStatus\" />\n     <result property=\"statusBasedOnCaregory\"       column=\"statusBasedOnCaregory\"/>\n     <result property=\"finalized\"       column=\"finalized\"/>\n     <result property=\"deleted\"       column=\"deleted\"/>\n  </resultMap>\n    \n  <select id=\"getNotesByPartyId\" resultMap=\"slim-si-note-resultmap\" parameterClass=\"java.util.HashMap\" cacheModel=\"sales-info-cache\">\n            SELECT  nvl(CASE n.si_note_class \n               WHEN 'SI_VR_SBS_NOTE' THEN\n                 CASE\n          (SELECT COUNT(*)\n          FROM si_note groupNote,\n            SI_ATTRIBUTE si_attribute,\n            SI_VI_SBS_NOTE_ATTRIBUTE note_attrib_mappings\n          WHERE groupNote.PREDECESSOR_SI_NOTE_ID=n.si_note_id\n          AND groupNote.SI_NOTE_CLASS           ='SI_TODO_GROUP_NOTE'\n          AND groupNote.deleted                 =0\n          AND groupNote.SI_NOTE_ID              =note_attrib_mappings.SI_NOTE_ID\n          AND note_attrib_mappings.attribute_id =si_attribute.ATTRIBUTE_ID\n          AND (si_attribute.BOOLEAN_VALUE      IS NULL\n          OR si_attribute.BOOLEAN_VALUE        <![CDATA[<>'1']]>)\n          )\n        WHEN 0\n        THEN\n          (SELECT\n            CASE\n                (SELECT MIN(\n                  CASE quote_status\n                    WHEN 'OPEN'\n                    THEN '1'\n                    WHEN 'PUT'\n                    THEN '2'\n                    WHEN 'POST_CREATION'\n                    THEN '3'\n                    ELSE '4'\n                  END) AS min_stat\n                FROM si_note n2,\n                  SI_VI_SBS_PRODUCT_NOTE p\n                WHERE n2.PREDECESSOR_SI_NOTE_ID = n.SI_NOTE_ID\n                AND p.si_note_id                = n2.si_note_id\n                AND n2.DELETED                  =0\n                )\n              WHEN '1'\n              THEN 'OPEN'\n              WHEN '2'\n              THEN 'PUT'\n              WHEN '3'\n              THEN 'POST_CREATION'\n              WHEN '4'\n              THEN 'CLOSED'\n            END\n          FROM dual\n          )\n        ELSE 'IN_PROCESS'\n      END\n                  \n              WHEN 'SI_SALES_CONV_NOTE' THEN\n                (SELECT CASE (SELECT MIN(CASE quote_status \n                   WHEN 'OPEN' THEN '1'\n                   WHEN 'PUT' THEN '2'\n                   WHEN 'ACCEPTED' THEN '3'\n                   WHEN 'DECLINED' THEN '4'\n                   ELSE '5' END) as min_stat\n                 FROM si_note n2, SI_VI_SBS_PRODUCT_NOTE p\n                WHERE n2.PREDECESSOR_SI_NOTE_ID =  n.SI_NOTE_ID\n                  AND p.si_note_id = n2.si_note_id AND n2.DELETED=0) \n                  WHEN '1' THEN 'OPEN'\n                  WHEN '2' THEN 'PUT'\n                  WHEN '3' THEN 'ACCEPTED'\n                  WHEN '4' THEN 'DECLINED'\n                  WHEN '5' THEN 'NONE' END FROM dual)\n               WHEN 'SI_SIMPLE_NOTE' THEN\n                 (SELECT CASE status \n                   WHEN 'NONE' THEN 'NONE'\n                   WHEN 'OPEN' THEN 'OPEN'\n                   WHEN 'WORKING' THEN 'WORKING'\n                   WHEN 'DONE' THEN 'DONE' END\n                    FROM si_task t\n                   WHERE t.si_task_id = n.task_id \n                     and active = 1)\n               ELSE 'NONE'\n              END, 'NONE') as overviewStatus             \n               , nvl(CASE n.si_note_class \n              \n              WHEN 'SI_SALES_CONV_NOTE' THEN\n                (SELECT CASE (SELECT MIN(CASE  SETUP_CATEGORY \n                   WHEN 'SERVICE' THEN '1'\n                   WHEN 'INFORMATION' THEN '1'\n                   ELSE '0' END) as min_stat\n                 FROM si_note n2, SI_VI_SBS_PRODUCT_NOTE p\n                WHERE n2.PREDECESSOR_SI_NOTE_ID =  n.SI_NOTE_ID\n                  AND p.si_note_id = n2.si_note_id AND n2.DELETED=0) \n                  WHEN '0' THEN 'EDITABLE'\n                  WHEN '1' THEN 'READ_ONLY'\n                  END FROM dual)\n\n               ELSE 'EDITABLE'\n              END, 'EDITABLE') as statusBasedOnCaregory \n              ,n.*\n        FROM si_note n\n       WHERE kunde_id = #partyId#\n       and SI_NOTE_CLASS in <iterate open=\"(\" close=\")\" conjunction=\",\" property=\"salesInfoNoteTypesToLoad\">#salesInfoNoteTypesToLoad[]#</iterate>\n         and deleted = 0\n       ORDER BY last_update DESC\n  </select> \n  \n  <select id=\"getSalesInfoNote\" resultMap=\"slim-si-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"sales-info-cache\">\n      SELECT si_note.*,'NONE' as overviewStatus,'EDITABLE' as statusBasedOnCaregory FROM si_note WHERE si_note.si_note_id = #salesInfoNoteId#\n  </select>\n  \n  \n  <insert id=\"insertNote\" parameterClass=\"SalesInfoNote\">\n    <selectKey resultClass=\"long\" keyProperty=\"salesInfoNoteId\">SELECT seq_si_note.nextval AS salesInfoNoteId FROM dual</selectKey>\n    insert into si_note \n     (si_note_id, predecessor_si_note_id, si_note_class, kunde_id, note_text, task_id, creator, create_date, last_modifier, last_update, deleted,\"finalized\")\n    values \n     (#salesInfoNoteId#, #predecessorSalesInfoNoteId#, #salesInfoNoteType#, #partyId#, #noteText#, <isNotNull property=\"task\">#task.taskId:NUMBER#</isNotNull><isNull property=\"task\">null</isNull>, #creationUser.id#, #creationTimestamp#, #lastModificationUser.id#, #lastModificationTimestamp#, #deleted#,#finalized#)\n  </insert>\n  \n  <update id=\"updateNote\" parameterClass=\"SalesInfoNote\">\n    update si_note \n       set predecessor_si_note_id = #predecessorSalesInfoNoteId#,\n           si_note_class = #salesInfoNoteType#,\n           kunde_id = #partyId#,\n           note_text = #noteText#,\n           <isNotNull property=\"task\">task_id = #task.taskId:NUMBER#,</isNotNull>\n           last_modifier = #lastModificationUser.id#,\n           last_update = #lastModificationTimestamp#,\n           deleted = #deleted#,\n           \"finalized\" = #finalized#\n     WHERE si_note_id = #salesInfoNoteId#\n  </update>  \n  \n  <update id=\"markNoteAsDeleted\" parameterClass=\"SalesInfoNote\">\n    update si_note \n       set last_modifier = #lastModificationUser.id#,\n           last_update = #lastModificationTimestamp#,\n           deleted = #deleted#\n     WHERE si_note_id = #salesInfoNoteId#\n  </update>  \n  \n  <!--  For SimpleNote Detail Popup  -->\n  \n  <resultMap id=\"si-simple-note-resultmap\" class=\"SimpleNote\">\n     <result property=\"salesInfoNoteId\"             column=\"si_note_id\" />\n     <result property=\"salesInfoNoteType\"           column=\"si_note_class\" />\n     <result property=\"predecessorSalesInfoNoteId\"  column=\"predecessor_si_note_id\" />\n     <result property=\"partyId\"                     column=\"kunde_id\" />\n     <result property=\"noteText\"                    column=\"note_text\" />\n     <result property=\"task\"                        column=\"task_id\" select=\"SalesInfo.getTask\" />\n     <result property=\"creationUser\"                column=\"creator\" select=\"User.getBiteUserById\"/>\n     <result property=\"creationTimestamp\"           column=\"create_date\" />\n     <result property=\"lastModificationUser\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n     <result property=\"lastModificationTimestamp\"   column=\"last_update\" />\n  </resultMap>\n  \n  <select id=\"getSimpleNoteByNoteId\" resultMap=\"si-simple-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"simple-note-cache\">\n       SELECT * \n        FROM si_note n, si_simple_note sn\n       WHERE sn.si_note_id = #salesInfoNoteId#\n         AND sn.si_note_id = n.si_note_id\n  </select>\n  \n  <insert id=\"insertSimpleNote\" parameterClass=\"SimpleNote\">\n    insert into si_simple_note \n     (si_note_id)\n    values \n     (#salesInfoNoteId#)\n  </insert>\n  \n  <!-- For CompetitorNote Detail Popup -->\n  \n  <resultMap id=\"si-competitor-note-resultmap\" class=\"CompetitorNote\">\n     <result property=\"salesInfoNoteId\"             column=\"si_note_id\" />\n     <result property=\"salesInfoNoteType\"           column=\"si_note_class\" />\n     <result property=\"predecessorSalesInfoNoteId\"  column=\"predecessor_si_note_id\" />\n     <result property=\"partyId\"                     column=\"kunde_id\" />\n     <result property=\"noteText\"                    column=\"note_text\" />\n     <result property=\"name\"                        column=\"name\" />\n     <result property=\"productGroupName\"            column=\"product_group_name\" />\n     <result property=\"productName\"                 column=\"product_name\" />\n     <result property=\"bindingDate\"                 column=\"binding_date\" />\n     <result property=\"task\"                        column=\"task_id\" select=\"SalesInfo.getTask\" />\n     <result property=\"creationUser\"                column=\"creator\" select=\"User.getBiteUserById\"/>\n     <result property=\"creationTimestamp\"           column=\"create_date\" />\n     <result property=\"lastModificationUser\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n     <result property=\"lastModificationTimestamp\"   column=\"last_update\" />\n     <result property=\"reminderMailSentDate\"        column=\"reminder_mail_sent_date\" />\n  </resultMap>\n  \n   <resultMap id=\"si-appointment-note-resultmap\" class=\"AppointmentNote\">\n     <result property=\"salesInfoNoteId\"             column=\"si_note_id\" />\n     <result property=\"salesInfoNoteType\"           column=\"si_note_class\" />\n     <result property=\"predecessorSalesInfoNoteId\"  column=\"predecessor_si_note_id\" />\n     <result property=\"partyId\"                     column=\"kunde_id\" />\n     <result property=\"noteText\"                    column=\"note_text\" />\n     <result property=\"communicationType\"           column=\"communication_type\" />\n     <result property=\"communicationChannel\"        column=\"communication_channel\" />\n     <result property=\"contactType\"                 column=\"contact_type\" />\n     <result property=\"task\"                        column=\"task_id\" select=\"SalesInfo.getTask\" />\n     <result property=\"creationUser\"                column=\"creator\" select=\"User.getBiteUserById\"/>\n     <result property=\"creationTimestamp\"           column=\"create_date\" />\n     <result property=\"lastModificationUser\"        column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n     <result property=\"lastModificationTimestamp\"   column=\"last_update\" />\n  </resultMap>\n  \n  <select id=\"getAppointmentNoteByNoteId\" resultMap=\"si-appointment-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"appointment-note-cache\">\n      SELECT * \n        FROM si_note n, si_appointment_note cn\n       WHERE cn.si_note_id = #salesInfoNoteId#\n         AND cn.si_note_id = n.si_note_id\n         AND n.deleted=0\n  </select>\n  \n  \n  <select id=\"getAppointmentNoteForHistoryByNoteId\" resultMap=\"si-appointment-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"appointment-note-cache\">\n      SELECT * \n        FROM si_note n, si_appointment_note cn\n       WHERE cn.si_note_id = #salesInfoNoteId#\n         AND cn.si_note_id = n.si_note_id\n  </select>\n  \n  <select id=\"getSimpleNoteForHistoryByNoteId\" resultMap=\"si-simple-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"simple-note-cache\">\n       SELECT * \n        FROM si_note n, si_simple_note sn\n       WHERE sn.si_note_id = #salesInfoNoteId#\n         AND sn.si_note_id = n.si_note_id\n  </select>\n  \n  <select id=\"getCompetitorNoteForHistoryByNoteId\" resultMap=\"si-competitor-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"appointment-note-cache\">\n        SELECT * \n        FROM si_note n, si_competitor_note cn\n       WHERE cn.si_note_id = #salesInfoNoteId#\n         AND cn.si_note_id = n.si_note_id\n  </select>\n  \n  <select id=\"getCompetitorNoteByNoteId\" resultMap=\"si-competitor-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"competitor-note-cache\">\n      SELECT * \n        FROM si_note n, si_competitor_note cn\n       WHERE cn.si_note_id = #salesInfoNoteId#\n         AND cn.si_note_id = n.si_note_id\n  </select>\n  \n\n\n  <insert id=\"insertCompetitorNote\" parameterClass=\"CompetitorNote\">\n    insert into si_competitor_note \n     (si_note_id, name, product_group_name, product_name, binding_date)\n    values \n     (#salesInfoNoteId#, #name#, #productGroupName#, #productName#, #bindingDate#)\n  </insert>\n  \n  <insert id=\"insertAppointmentNote\" parameterClass=\"AppointmentNote\">\n    insert into si_appointment_note \n     (si_note_id, communication_type, communication_channel, contact_type)\n    values \n     (#salesInfoNoteId#, #communicationType#, #communicationChannel#, #contactType#)\n  </insert>\n  \n  <update id=\"updateCompetitorNote\" parameterClass=\"CompetitorNote\">\n    update si_competitor_note \n       set name = #name#,\n           product_group_name = #productGroupName#,\n           product_name = #productName#,\n           binding_date = #bindingDate#,\n           reminder_mail_sent_date = #reminderMailSentDate#\n     WHERE si_note_id = #salesInfoNoteId#\n  </update> \n  \n  <update id=\"updateAppointmentNote\" parameterClass=\"AppointmentNote\">\n    update si_appointment_note \n       set communication_type = #communicationType#,\n           communication_channel = #communicationChannel#,\n           contact_type = #contactType#\n       WHERE si_note_id = #salesInfoNoteId#\n  </update>  \n  \n   <update id=\"updateBindingPeriodReminderMailSentDate\" parameterClass=\"CompetitorNote\">\n    update si_competitor_note \n       set reminder_mail_sent_date = #reminderMailSentDate#\n     WHERE si_note_id = #salesInfoNoteId#\n  </update>\n  \n  <!-- For Task -->\n  \n  <resultMap id=\"slim-task-resultmap\" class=\"Task\">\n    <result property=\"taskId\" column=\"si_task_id\" />\n    <result property=\"startDate\" column=\"date_start\" />\n    <result property=\"active\" column=\"active\" />\n  </resultMap>\n  \n  <resultMap id=\"si-task-resultmap\" class=\"Task\">\n    <result property=\"taskId\" column=\"si_task_id\" />\n    <result property=\"active\" column=\"active\" />\n    <result property=\"status\" column=\"status\" />\n    <result property=\"type\" column=\"type\" />\n    <result property=\"assigneeUser\" column=\"assignee_user\" select=\"User.getBiteUserById\" />\n    <result property=\"startDate\" column=\"date_start\" />\n    <result property=\"endDate\" column=\"date_end\" />\n    <result property=\"sendReminderMail\" column=\"send_reminder_mail\" />\n    <result property=\"sendVCalendarMail\" column=\"send_vcal_mail\" />\n    <result property=\"address\" column=\"address_id\" select=\"StandardAddress.getAddress\" />\n    <result property=\"reminderMailSentDate\" column=\"reminder_mail_sent_date\" />\n    <result property=\"vCalMailSentDate\" column=\"vcal_mail_sent_date\" />\n    <result property=\"vCalMailTo\" column=\"vcal_mail_to\" />\n    <result property=\"vCalMailCC\" column=\"vcal_mail_cc\" />\n  </resultMap>\n  \n  <select id=\"getTaskSlim\" resultMap=\"slim-task-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"task-cache\">\n      SELECT si_task_id, date_start, active \n        FROM si_task\n       WHERE si_task_id = #taskId#\n  </select>\n  \n  <select id=\"getTask\" resultMap=\"si-task-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"task-cache\">\n      SELECT *  \n        FROM si_task\n       WHERE si_task_id = #taskId#\n  </select>\n    \n  <insert id=\"insertTask\" parameterClass=\"Task\">\n    <selectKey resultClass=\"long\" keyProperty=\"taskId\">SELECT seq_si_task.nextval AS taskId FROM dual</selectKey>\n    insert into si_task \n     (si_task_id, active, status, type, assignee_user, date_start, date_end, send_reminder_mail, send_vcal_mail, \n      address_id, reminder_mail_sent_date, vcal_mail_sent_date)\n    values \n     (#taskId#, #active#, #status#, #type#, #assigneeUser.id:NUMERIC#, #startDate#, #endDate#, #sendReminderMail#, #sendVCalendarMail#, \n     #address.addressId:NUMERIC#, #reminderMailSentDate#, #vCalMailSentDate#)\n  </insert>\n  \n  <update id=\"updateTask\" parameterClass=\"Task\">\n    update si_task \n       set active = #active#,\n           status = #status#,\n           type = #type#,\n           assignee_user = #assigneeUser.id:NUMERIC#,\n           date_start = #startDate#,\n           date_end = #endDate#,\n           send_reminder_mail = #sendReminderMail#,\n           send_vcal_mail = #sendVCalendarMail#,  \n           address_id = #address.addressId:NUMERIC#,\n           reminder_mail_sent_date = #reminderMailSentDate#,\n           vcal_mail_sent_date = #vCalMailSentDate#\n     WHERE si_task_id = #taskId#\n  </update>  \n  \n  <!-- Report -->\n  \n  <resultMap id=\"sbsnote-report-resultmap\" class=\"SbsNoteReportRow\">\n    <result property=\"userName\" column=\"user_name\" />\n    <result property=\"me1\" column=\"me1\" />\n    <result property=\"me2\" column=\"me2\" />\n    <result property=\"me3\" column=\"me3\" />\n    <result property=\"me4\" column=\"me4\" />\n    <result property=\"communicationType\" column=\"communication_type\" />\n    <result property=\"communicationChannel\" column=\"communication_channel\" />\n    <result property=\"contactType\" column=\"contact_type\" />\n    <result property=\"contactSource\" column=\"contact_source\" />\n    <result property=\"startDate\" column=\"start_date\" />\n  </resultMap>\n  \n  <select id=\"getSbsNoteReportData\" resultMap=\"sbsnote-report-resultmap\">\n    SELECT u.firstname||' '||u.lastname||' ('||upper(u.login)||')' as user_name, \n           (CASE WHEN u.ml1_orgunit_id IS NULL THEN 'Unbekannt' ELSE u.ml1_orgunit_desc||' ('||u.ml1_orgunit_short||')' END) AS me1,\n           (CASE WHEN u.ml2_orgunit_id IS NULL THEN 'Unbekannt' ELSE u.ml2_orgunit_desc||' ('||u.ml2_orgunit_short||')' END) AS me2,\n           (CASE WHEN u.ml3_orgunit_id IS NULL THEN 'Unbekannt' ELSE u.ml3_orgunit_desc||' ('||u.ml3_orgunit_short||')' END) AS me3,\n           (CASE WHEN u.ml4_orgunit_id IS NULL THEN 'Unbekannt' ELSE u.ml4_orgunit_desc||' ('||u.ml4_orgunit_short||')' END) as me4,\n           sbs.communication_type, sbs.communication_channel, sbs.contact_type, sbs.contact_source, t.date_start as start_date\n      FROM si_vi_sbs_note sbs, si_note n, si_task t, bite_user u \n     WHERE n.si_note_id = sbs.si_note_id \n       AND t.si_task_id = n.task_id\n       AND t.assignee_user = u.user_id\n       AND t.date_start between #begin# and #end#\n  </select>\n  \n   <resultMap id=\"salesinfo-teamEmailAdminGroups-resultmap\" class=\"TeamEmailAdminGroup\">\n    <result property=\"id\" column=\"id\" />\n    <result property=\"teamName\" column=\"team_name\" />\n    <result property=\"teamEmail\" column=\"team_email\" />\n    <result property=\"userList\" column=\"user_list\" />\n    <result property=\"isDefault\" column=\"is_default\" />\n  </resultMap>\n  \n  <select id=\"getTeamEmailAdminGroups\" resultMap=\"salesinfo-teamEmailAdminGroups-resultmap\">\n    WITH groups AS (\n      SELECT te.id AS id, LISTAGG(u.login, ';') WITHIN GROUP (order by 1) AS user_list\n        FROM si_sc_team_email te, si_sc_team_email_user teu, bite_user u\n       WHERE teu.team_email_id (+)= te.id\n         AND u.user_id (+)= teu.user_id\n         GROUP BY (te.id))\n    SELECT te.*, g.user_list\n      FROM si_sc_team_email te, groups g\n     where te.id = g.id\n       AND te.is_default = 0\n  </select>\n  \n   <update id=\"updateTeamEmailAdminGroup\" parameterClass=\"TeamEmailAdminGroup\">\n     UPDATE si_sc_team_email SET \n       team_name = #teamName#,\n       team_email = #teamEmail#\n      where id = #id#\n   </update>\n   \n   <insert id=\"insertTeamEmailAdminUser\" parameterClass=\"java.util.HashMap\">\n     INSERT INTO si_sc_team_email_user (team_email_id, user_id)\n     VALUES (#teamEmailId#, #userId#)\n   </insert>\n   \n   <delete id=\"deleteTeamEmailAdminUsersByTeamEmailId\" parameterClass=\"java.lang.Long\">\n     DELETE si_sc_team_email_user\n      WHERE team_email_id = #teamEmailId#\n   </delete>\n   \n  <resultMap id=\"salesConvNote-report-resultmap\" class=\"SalesConvNoteReportRow\">\n    <result property=\"siNoteId\" column=\"si_note_id\" />\n    <result property=\"predecessorSiNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"deleted\" column=\"deleted\" />\n    <result property=\"finalized\" column=\"finalized\" />\n    <result property=\"campaignId\" column=\"campaign_id\" />\n    <result property=\"campaignName\" column=\"campaign_name\" />\n    <result property=\"lastUpdate\" column=\"last_update\" />\n    <result property=\"lastModUser\" column=\"last_modifier\" select=\"User.getBiteUserById\"/>\n    <result property=\"customerId\" column=\"kunde_id\" />\n    <result property=\"customerFirstName\" column=\"kunde_vorname\" />\n    <result property=\"customerLastName\" column=\"kunde_nam\" />\n    <result property=\"contactType\" column=\"contact_type\" />\n    <result property=\"taskActive\" column=\"active\" />\n    <result property=\"taskStartDate\" column=\"date_start\" />\n    <result property=\"productNotes\" column=\"si_note_id\" select=\"SalesInfo.getSalesConvProductNoteReportData\"/>\n    <result property=\"feedbackQuestions\" column=\"si_note_id\"  select=\"SalesInfo.getSalesConvFBReportData\"/> \n  </resultMap>\n  \n  <select id=\"getSalesConvNoteReportData\" resultMap=\"salesConvNote-report-resultmap\">\n    SELECT scn.si_note_id,\n           n.predecessor_si_note_id,\n           n.deleted,\n           n.\"finalized\",\n           scn.campaign_id,\n           scn.campaign_name,\n           n.last_update,\n           n.last_modifier,\n           k.kunde_id,\n           k.kunde_vorname,\n           k.kunde_nam,\n           scn.contact_type,\n           t.active,\n           t.date_start\n      FROM si_sc_sales_conv_note scn, si_note n, v_kunde k, si_task t\n     WHERE n.si_note_id = scn.si_note_id\n       AND k.kunde_id (+) = n.kunde_id\n       AND t.si_task_id = n.task_id\n       AND n.last_update between #begin# and #end#\n        START WITH n.predecessor_si_note_id is null\n          CONNECT BY n.predecessor_si_note_id = PRIOR  n.SI_NOTE_ID\n   </select>\n   \n   <resultMap id=\"salesConvProductNote-report-resultmap\" class=\"SalesConvProductNoteRow\">\n    <result property=\"productNoteId\" column=\"productNoteId\" />\n    <result property=\"predecessorSiNoteId\" column=\"predecessorSiNoteId\" />\n    <result property=\"deleted\" column=\"deleted\" />\n    <result property=\"productCategory\" column=\"product_category\" />\n    <result property=\"productDisplayName\" column=\"product_display_name\" />\n    <result property=\"setupCategory\" column=\"setup_category\" />\n    <result property=\"quoteStatus\" column=\"quote_status\" />\n    <result property=\"turnoverQuantity\" column=\"turnover_quantity\" />\n    <result property=\"assigneeType\" column=\"assignee_type\" />\n    <result property=\"contactCount\" column=\"contact_count\" />\n  </resultMap>\n   \n   <select id=\"getSalesConvProductNoteReportData\" parameterClass=\"java.lang.Long\" resultMap=\"salesConvProductNote-report-resultmap\">\n     SELECT pn.si_note_id AS productNoteId,\n            n.predecessor_si_note_id AS predecessorSiNoteId,\n            n.deleted,\n            n.\"finalized\",\n            pn.product_category,\n            pn.product_display_name,\n            pn.setup_category,\n            pn.quote_status,\n            pn.turnover_quantity,\n            pn.assignee_type,\n            (SELECT count(*) FROM custc.si_sc_product_history h WHERE h.product_note_id = n.si_note_id) AS contact_count\n       FROM si_note n, si_vi_sbs_product_note pn\n      WHERE n.predecessor_si_note_id = #noteId#\n        AND pn.si_note_id = n.si_note_id\n   </select>\n   \n  <resultMap id=\"salesConvFB-report-resultmap\" class=\"FeedbackQuestionsRow\">\n    <result property=\"attributeName\" column=\"attribute_name\" />\n    <result property=\"attributeType\" column=\"attribute_type\" />\n    <result property=\"numberValue\" column=\"number_value\" />\n    <result property=\"booleanValue\" column=\"boolean_value\" />\n    <result property=\"textValue\" column=\"text_value\" />\n  </resultMap>\n   \n   <select id=\"getSalesConvFBReportData\" parameterClass=\"java.lang.Long\" resultMap=\"salesConvFB-report-resultmap\">\n     SELECT ac.attribute_name, ac.attribute_type, a.number_value, a.boolean_value,a.text_value \n       FROM si_attribute a, si_attribute_config ac, si_vi_sbs_note_attribute n2a\n      WHERE n2a.si_note_id = #noteId#\n        AND n2a.attribute_id = a.attribute_id\n        AND a.attribute_config_id = ac.attribute_config_id\n   </select>\n   \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/visitreport/sqlmap-visitreport.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/db/visitreport/sqlmap-visitreport.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 51953,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n \n<sqlMap namespace=\"VisitReport\">\n  <typeAlias alias=\"SBSProductNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote\" />\n  <typeAlias alias=\"SBSNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSNote\" />\n  <typeAlias alias=\"FileAttachment\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.FileAttachment\" />\n  <typeAlias alias=\"GenericNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.GenericNote\" />\n  <typeAlias alias=\"Attribute\" type=\"at.a1ta.cuco.core.shared.dto.Attribute\" />\n  <typeAlias alias=\"SalesInfoNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote\" />\n  <typeAlias alias=\"SBSProduct\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProduct\" />\n  <typeAlias alias=\"SBSOrgUnit\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSOrgUnit\" />\n  <typeAlias alias=\"SalesConvNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.SalesConvNote\" />\n  <typeAlias alias=\"ProductHistoryItem\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.ProductHistoryItem\" />\n  <typeAlias alias=\"AppointmentNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.AppointmentNote\" />\n  <typeAlias alias=\"ToDoGroupNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote\" />\n  <typeAlias alias=\"HistoryNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.HistoryNote\" />\n  <typeAlias alias=\"DigitalSellingNote\" type=\"at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.DigitalSellingNote\" />\n\n  <cacheModel type=\"ehcacheProvider\" id=\"sbs-product-notes-cache\">\n    <flushOnExecute statement=\"VisitReport.insertSBSProductNote\" />\n    <flushOnExecute statement=\"VisitReport.updateSBSProductNote\" />\n    <flushOnExecute statement=\"SalesInfo.insertNote\" />\n    <flushOnExecute statement=\"SalesInfo.updateNote\" />\n    <flushOnExecute statement=\"VisitReport.insertFileAttachment\" />\n    <flushOnExecute statement=\"VisitReport.deleteFileAttachment\" />\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"file-attachment-cache\">\n    <flushOnExecute statement=\"VisitReport.insertFileAttachment\" />\n    <flushOnExecute statement=\"VisitReport.deleteFileAttachment\" />\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"generic-note-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertNote\" />\n    <flushOnExecute statement=\"SalesInfo.updateNote\" />\n    <flushOnExecute statement=\"VisitReport.insertGenericNote\" />\n    <flushOnExecute statement=\"VisitReport.insertFileAttachment\" />\n    <flushOnExecute statement=\"VisitReport.deleteFileAttachment\" />\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"sbs-note-cache\">\n    <flushOnExecute statement=\"VisitReport.insertSBSNote\" />\n    <flushOnExecute statement=\"VisitReport.updateSBSNote\" />\n    <flushOnExecute statement=\"SalesInfo.insertNote\" />\n    <flushOnExecute statement=\"SalesInfo.updateNote\" />\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"digital-selling-note-cache\">\n    <flushOnExecute statement=\"SalesInfo.insertNote\" />\n    <flushOnExecute statement=\"SalesInfo.updateNote\" />\n    <flushOnExecute statement=\"VisitReport.insertDigitalSellingNote\" />\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"salesconv-note-cache\">\n    <flushOnExecute statement=\"VisitReport.insertSalesConvNote\" />\n    <flushOnExecute statement=\"VisitReport.updateSalesConvNote\" />\n    <flushOnExecute statement=\"SalesInfo.insertNote\" />\n    <flushOnExecute statement=\"SalesInfo.updateNote\" />\n    <flushOnExecute statement=\"VisitReport.insertFileAttachment\" />\n    <flushOnExecute statement=\"VisitReport.deleteFileAttachment\" />\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"productHistory-cache\">\n    <flushOnExecute statement=\"VisitReport.loadProductHistoryItemsByProdNoteId\" />\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"50\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"sbs-products-cache\">\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"50\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"sbs-org-unit-cache\">\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"2500\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"attribute-cache\">\n    <flushOnExecute statement=\"Attribute.insertConfig\" />\n    <flushOnExecute statement=\"Attribute.updateConfig\" />\n    <flushOnExecute statement=\"VisitReport.insertSBSNote\" />\n    <flushOnExecute statement=\"VisitReport.updateSBSNote\" />\n    <flushOnExecute statement=\"SalesInfo.insertNote\" />\n    <flushOnExecute statement=\"SalesInfo.updateNote\" />\n    <flushInterval minutes=\"60\" />\n    <property name=\"cache-size\" value=\"20\" />\n  </cacheModel>\n\n  <cacheModel type=\"ehcacheProvider\" id=\"teamEmail-cache\">\n    <flushInterval minutes=\"60\" />\n    <flushOnExecute statement=\"SalesInfo.updateTeamEmailAdminGroup\" />\n    <flushOnExecute statement=\"SalesInfo.insertTeamEmailAdminUser\" />\n    <flushOnExecute statement=\"SalesInfo.deleteTeamEmailAdminUsersByTeamEmailId\" />\n    <property name=\"cache-size\" value=\"100\" />\n  </cacheModel>\n\n <resultMap id=\"sbs-product\" class=\"SBSProduct\">\n    <result property=\"productId\" column=\"product_id\" />\n    <result property=\"productAlternativeId\" column=\"product_alternative_id\" />\n    <result property=\"productDisplayName\" column=\"product_display_name\" />\n    <result property=\"productCategory\" column=\"product_category\" />\n    <result property=\"active\" column=\"active\" />\n    <result property=\"sequence\" column=\"sequence\" />\n    <result property=\"setupTypes\" column=\"setup_type\" typeHandler=\"at.a1ta.cuco.core.dao.util.ListStringTypeHandler\" />\n    <result property=\"setupCategories\" column=\"setup_category\" typeHandler=\"at.a1ta.cuco.core.dao.util.ListStringTypeHandler\" />\n    <result property=\"quoteStatus\" column=\"quote_status\" typeHandler=\"at.a1ta.cuco.core.dao.util.ListStringTypeHandler\" />\n    <result property=\"assigneeTypes\" column=\"assignee_type\" typeHandler=\"at.a1ta.cuco.core.dao.util.ListStringTypeHandler\" />\n    <result property=\"defaultConfig\" column=\"default_config\" />\n    <result property=\"siNoteClass\" column=\"si_note_class\" />\n\n  </resultMap>\n\n\n  <resultMap id=\"productnote-resultmap-experimental\" class=\"SBSProductNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"productId\" column=\"product_id\" />\n    <result property=\"productAlternativeId\" column=\"product_alternative_id\" />\n    <result property=\"productDisplayName\" column=\"product_display_name\" />\n    <result property=\"productCategory\" column=\"product_category\" />\n    <result property=\"setupTypes\" column=\"setup_type\" typeHandler=\"at.a1ta.cuco.core.dao.db.visitreport.SetupTypeSetTypeHandler\" />\n    <result property=\"category\" column=\"setup_category\" />\n    <result property=\"winback\" column=\"winback\" />\n    <result property=\"consultationDesired\" column=\"consultation_desired\" />\n    <result property=\"quoteStatus\" column=\"quote_status\" />\n    <result property=\"purchaseWithoutWrittenQuote\" column=\"purchase_without_written_note\" />\n    <result property=\"turnoverQuantity\" column=\"turnover_quantity\" />\n    <result property=\"turnoverDurationMonths\" column=\"turnover_duration_months\" />\n    <result property=\"turnoverOnetimeCost\" column=\"turnover_onetime_cost\" />\n    <result property=\"turnoverMonthlyCost\" column=\"turnover_monthly_cost\" />\n    <result property=\"turnoverYearlyCost\" column=\"turnover_yearly_cost\" />\n    <result property=\"turnoverSum\" column=\"turnover_sum\" />\n    <result property=\"handlingAssigneeType\" column=\"assignee_type\" />\n    <result property=\"handlingAssigneeOrgUnitId\" column=\"assignee_org_unit_id\" />\n    <result property=\"handlingAssigneeOrgUnitName\" column=\"assignee_org_unit_name\" />\n    <result property=\"handlingAssigneeOrgUnitStreet\" column=\"assignee_org_unit_street\" />\n    <result property=\"handlingAssigneeOrgUnitPostalCode\" column=\"assignee_org_unit_postcode\" />\n    <result property=\"handlingAssigneeOrgUnitCity\" column=\"assignee_org_unit_city\" />\n    <result property=\"historyNotes\" column=\"si_note_id\" select=\"VisitReport.getHistoryNotesByPredecessorNoteId\" />\n    <result property=\"historyItems\" column=\"si_note_id\" select=\"VisitReport.loadProductHistoryItemsByProdNoteId\" />\n    <result property=\"productOffering\" column=\"product_offering\" javaType=\"at.a1ta.cuco.core.shared.dto.ProductOffering\" />\n    <result property=\"contactPerson\" column=\"{kontakt_rolle_id=cuco_contact_person, kunde_id=kunde_id}\" select=\"ContactPerson.GetContactPersonByIdAndKundeId\" />\n    <result property=\"fileAttachments\" column=\"si_note_id\" select=\"VisitReport.loadFileAttachmentsByNote\" />\n    <result property=\"todoGroupNoteId\" column=\"todo_group_note_id\" />\n  </resultMap>\n  \n  <resultMap id=\"productnote-minimal\" class=\"SBSProductNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"productId\" column=\"product_id\" />\n    <result property=\"productAlternativeId\" column=\"product_alternative_id\" />\n    <result property=\"productDisplayName\" column=\"product_display_name\" />\n    <result property=\"productCategory\" column=\"product_category\" />\n    <result property=\"setupTypes\" column=\"setup_type\" typeHandler=\"at.a1ta.cuco.core.dao.db.visitreport.SetupTypeSetTypeHandler\" />\n    <result property=\"category\" column=\"setup_category\" />\n    <result property=\"winback\" column=\"winback\" />\n    <result property=\"consultationDesired\" column=\"consultation_desired\" />\n    <result property=\"quoteStatus\" column=\"quote_status\" />\n    <result property=\"purchaseWithoutWrittenQuote\" column=\"purchase_without_written_note\" />\n    <result property=\"turnoverQuantity\" column=\"turnover_quantity\" />\n    <result property=\"turnoverDurationMonths\" column=\"turnover_duration_months\" />\n    <result property=\"turnoverOnetimeCost\" column=\"turnover_onetime_cost\" />\n    <result property=\"turnoverMonthlyCost\" column=\"turnover_monthly_cost\" />\n    <result property=\"turnoverYearlyCost\" column=\"turnover_yearly_cost\" />\n    <result property=\"turnoverSum\" column=\"turnover_sum\" />\n    <result property=\"handlingAssigneeType\" column=\"assignee_type\" />\n    <result property=\"handlingAssigneeOrgUnitId\" column=\"assignee_org_unit_id\" />\n    <result property=\"handlingAssigneeOrgUnitName\" column=\"assignee_org_unit_name\" />\n    <result property=\"handlingAssigneeOrgUnitStreet\" column=\"assignee_org_unit_street\" />\n    <result property=\"handlingAssigneeOrgUnitPostalCode\" column=\"assignee_org_unit_postcode\" />\n    <result property=\"handlingAssigneeOrgUnitCity\" column=\"assignee_org_unit_city\" />\n    <result property=\"productOffering\" column=\"product_offering\" javaType=\"at.a1ta.cuco.core.shared.dto.ProductOffering\" />\n    <result property=\"contactPerson\" column=\"{kontakt_rolle_id=cuco_contact_person, kunde_id=kunde_id}\" select=\"ContactPerson.GetContactPersonByIdAndKundeId\" />\n    <result property=\"todoGroupNoteId\" column=\"todo_group_note_id\" />\n    <result property=\"fileAttachments\" column=\"si_note_id\" select=\"VisitReport.loadFileAttachmentsByNote\" />\n  </resultMap>\n\n  <resultMap id=\"sbs-note-resultmap-experimental\" class=\"SBSNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"communicationType\" column=\"communication_type\" />\n    <result property=\"communicationChannel\" column=\"communication_channel\" />\n    <result property=\"contactType\" column=\"contact_type\" />\n    <result property=\"historyNotes\" column=\"si_note_id\" select=\"VisitReport.getHistoryNotesForVisitReportByVisitReportNoteId\" />\n    <result property=\"contactSource\" column=\"contact_source\" />\n    <result property=\"productNotes\" column=\"si_note_id\" select=\"VisitReport.loadProductNotesByNote_Experimental\" />\n    <result property=\"tasks\" column=\"si_note_id\" select=\"VisitReport.loadNotesByPredecessorNoteId\" />\n    <result property=\"appointments\" column=\"si_note_id\" select=\"VisitReport.loadAppointmentsByPredecessorNoteId\" />\n    <result property=\"feedbackAttributes\" column=\"{si_note_id=si_note_id, grouping=grouping_feedback\" select=\"VisitReport.loadSalesInfoNoteAttributesByNoteIdAndGrouping\" />\n    <result property=\"feedbackText\" column=\"feedback_text\" />\n    <result property=\"reflectionAttributes\" column=\"{si_note_id=si_note_id, grouping=grouping_reflection\" select=\"VisitReport.loadSalesInfoNoteAttributesByNoteIdAndGrouping\" />\n    <result property=\"reflectionText\" column=\"reflection_text\" />\n    <result property=\"contactPerson\" column=\"{kontakt_rolle_id=cuco_contact_person, kunde_id=kunde_id}\" select=\"ContactPerson.GetContactPersonByIdAndKundeId\" />\n    <result property=\"availableContactPersons\" column=\"{partyId=kunde_id}\" select=\"ContactPerson.GetAllContactPersons4Customer\" />\n    <result property=\"productNoteGroups\" column=\"si_note_id\" select=\"VisitReport.getToDoGroupNotesByPredecessorNoteId\" />\n  </resultMap>\n  \n  <resultMap id=\"sbs-note-minimal\" class=\"SBSNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"communicationType\" column=\"communication_type\" />\n    <result property=\"communicationChannel\" column=\"communication_channel\" />\n    <result property=\"contactType\" column=\"contact_type\" />\n    <result property=\"contactSource\" column=\"contact_source\" />\n    <result property=\"feedbackAttributes\" column=\"{si_note_id=si_note_id, grouping=grouping_feedback\" select=\"VisitReport.loadSalesInfoNoteAttributesByNoteIdAndGrouping\" />\n    <result property=\"feedbackText\" column=\"feedback_text\" />\n    <result property=\"reflectionAttributes\" column=\"{si_note_id=si_note_id, grouping=grouping_reflection\" select=\"VisitReport.loadSalesInfoNoteAttributesByNoteIdAndGrouping\" />\n    <result property=\"reflectionText\" column=\"reflection_text\" />\n    <result property=\"contactPerson\" column=\"{kontakt_rolle_id=cuco_contact_person, kunde_id=kunde_id}\" select=\"ContactPerson.GetContactPersonByIdAndKundeId\" />\n  </resultMap>\n\n  <resultMap id=\"generic-note-resultmap\" class=\"GenericNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"fileAttachments\" column=\"si_note_id\" select=\"VisitReport.loadFileAttachmentsByNote\" />\n  </resultMap>\n\n  <resultMap id=\"file-attachment-resultmap\" class=\"FileAttachment\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"fileAttachmentId\" column=\"si_file_attachment_id\" />\n    <result property=\"fileName\" column=\"file_name\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_timestamp\" />\n  </resultMap>\n\n  <resultMap id=\"attribute-result\" class=\"Attribute\">\n    <result property=\"attributeId\" column=\"attribute_id\" />\n    <result property=\"attributeConfig\" column=\"attribute_config_id\" select=\"Attribute.getConfigById\" />\n    <result property=\"kundeId\" column=\"kunde_id\" />\n    <result property=\"booleanValue\" column=\"boolean_value\" />\n    <result property=\"textValue\"    column=\"text_value\" />\n    <result property=\"numberValue\" column=\"number_value\" />\n    <result property=\"lastModifier\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastUpdate\" column=\"last_update\" />\n    <result property=\"hasHistory\" column=\"has_history\" />\n  </resultMap>\n\n  <resultMap id=\"slim-si-note-resultmap\" class=\"SalesInfoNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n  </resultMap>\n\n  <resultMap id=\"todo_groupNote-resultmap\" class=\"ToDoGroupNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"toDoGroupName\" column=\"group_name\" />\n    <result property=\"toDoGroupStatus\" column=\"todo_status\" typeHandler=\"at.a1ta.cuco.core.dao.db.visitreport.ToDoGroupStatusHandler\" />\n    <result property=\"creatorNotes\" column=\"creator_note_text\" />\n    <result property=\"assigneeNotes\" column=\"assignee_note_text\" />\n    <result property=\"assignedToUser\" column=\"ASSIGNEE_USER_ID\" select=\"User.getBiteUserById\" />\n    <result property=\"assigneeDealerId\" column=\"ASSIGNEE_SHOP_ID\" />\n    <result property=\"historyNotes\" column=\"si_note_id\" select=\"VisitReport.getHistoryNotesByPredecessorNoteId\" />\n    <result property=\"relatedNotes\" column=\"{todo_group_note_id=si_note_id, predecessor_si_note_id=predecessor_si_note_id\" select=\"VisitReport.loadProductNotesByGroupNoteAndPredecessorNoteId\" />\n    <result property=\"attributes\" column=\"{si_note_id=si_note_id, grouping=grouping_todos}\" select=\"VisitReport.loadOnlySelectedSalesInfoNoteAttributesByNoteIdAndGrouping\" />\n\n  </resultMap>\n \n  <resultMap id=\"historyNote-resultmap\" class=\"HistoryNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"level\" column=\"HISTORY_LEVEL\" />\n    <result property=\"historyTitle\" column=\"title\" />\n    <result property=\"historyNoteId\" column=\"history_note_id\" />\n  </resultMap>\n\n  <resultMap id=\"digital-selling-note-resultmap\" class=\"DigitalSellingNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\" column=\"finalized\"/>\n    <result property=\"deleted\" column=\"deleted\"/>\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"content\" column=\"content\"/>\n    <result property=\"historyNotes\" column=\"si_note_id\" select=\"VisitReport.getHistoryNotesByPredecessorNoteId\" />\n  </resultMap>\n\n  <select id=\"getToDoGroupNoteById\" resultMap=\"todo_groupNote-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"sbs-product-notes-cache\">\n    SELECT /*+ parallel (8,3) */ n.*,groupNote.* ,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos\n    FROM si_note n, si_todo_group_note groupNote\n    WHERE groupNote.si_note_id = #salesInfoNoteId#\n    AND groupNote.si_note_id = n.si_note_id and n.deleted=0\n  </select>\n  \n  <select id=\"getToDoGroupNoteForHistoryById\" resultMap=\"todo_groupNote-resultmap\" parameterClass=\"java.lang.Long\" >\n    SELECT /*+ parallel (8,3) */ n.*,groupNote.* ,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos\n    FROM si_note n, si_todo_group_note groupNote\n    WHERE groupNote.si_note_id = #salesInfoNoteId#\n    AND groupNote.si_note_id = n.si_note_id\n  </select>\n  \n   <select id=\"getAppointmentNoteForHistoryByNoteId\" resultMap=\"slim-si-note-resultmap\" parameterClass=\"java.lang.Long\" >\n    SELECT /*+ parallel (8,3) */ n.*,groupNote.* ,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos\n    FROM si_note n, si_todo_group_note groupNote\n    WHERE groupNote.si_note_id = #salesInfoNoteId#\n    AND groupNote.si_note_id = n.si_note_id\n  </select>\n  \n  <select id=\"getToDoGroupNotesByPredecessorNoteId\" resultMap=\"todo_groupNote-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"sbs-product-notes-cache\">\n    SELECT /*+ parallel (8,3) */ n.*,groupNote.* ,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos\n    FROM si_note n, si_todo_group_note groupNote\n    WHERE n.predecessor_si_note_id = #salesInfoNoteId#\n    AND groupNote.si_note_id = n.si_note_id and n.deleted=0\n  </select>\n\n  <select id=\"getOpenToDoGroupNotesForUser\" resultMap=\"todo_groupNote-resultmap\" parameterClass=\"java.util.HashMap\" cacheModel=\"sbs-product-notes-cache\">\n    SELECT /*+ parallel (8,3) */ n.*,gn.* ,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos\n    FROM si_note n, si_todo_group_note gn,bite_user usr\n    where\n    n.deleted=0 and n.si_note_class ='SI_TODO_GROUP_NOTE'\n    and n.si_note_id=gn.si_note_id\n    and lower(usr.user_id) = lower(#userId#)\n    and (usr.user_id = n.creator OR gn.ASSIGNEE_USER_ID=usr.user_id OR gn.ASSIGNEE_SHOP_ID=any(select shop.SHOPID from CUCO_USERSHOPASSIGNMENT shop where shop.USERNAME=usr.LOGIN ))\n     <isNotNull prepend=\"AND\" property=\"groupStatus\">\n        upper(gn.todo_status) =upper(#groupStatus#)\n    </isNotNull>\n     <isNotNull prepend=\"AND\" property=\"partyId\">\n        n.kunde_id=#partyId#\n    </isNotNull>\n    \n \n  </select>\n  \n  <select id=\"getHistoryNotesByPredecessorNoteId\" resultMap=\"historyNote-resultmap\" parameterClass=\"java.lang.Long\" >\n    SELECT /*+ parallel (8,3) */ n.*,historyNote.* \n    FROM si_note n, SI_HISTORY_NOTE historyNote\n    WHERE n.predecessor_si_note_id = #salesInfoNoteId#\n    AND historyNote.si_note_id = n.si_note_id and n.deleted=0\n    Order by n.CREATE_DATE asc\n  </select>\n  \n  <select id=\"getHistoryNotesForVisitReportByVisitReportNoteId\" resultMap=\"historyNote-resultmap\" parameterClass=\"java.lang.Long\" >\n    SELECT n.*,historyNote.* \n    FROM si_note n\n    JOIN SI_HISTORY_NOTE historyNote on historyNote.si_note_id = n.si_note_id\n    WHERE n.deleted=0 AND\n        (n.predecessor_si_note_id in (select inote.si_note_id from si_note inote where inote.predecessor_si_note_id= #salesInfoNoteId#)\n         OR n.PREDECESSOR_SI_NOTE_ID=#salesInfoNoteId#)\n    Order by n.CREATE_DATE desc\n  </select>\n   <insert id=\"insertHistoryNote\" parameterClass=\"HistoryNote\">\n    insert into SI_HISTORY_NOTE\n    (si_note_id, title, HISTORY_LEVEL,history_note_id)\n    values\n    (#salesInfoNoteId#, #historyTitle#, #level#,#historyNoteId#)\n  </insert>\n  \n  <select id=\"loadProductNotesByGroupNoteAndPredecessorNoteId\" resultMap=\"productnote-resultmap-experimental\" parameterClass=\"java.util.HashMap\">\n    select /*+ parallel (8,3) */ /*+ parallel (pn,8) */ n.*,pn.*,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos,\n    regexp_substr(p.default_config, '\"productOfferingId\":\\s*(\"(\\w| )*\")', 1, 1) productOfferingId_1,\n    regexp_replace(regexp_substr(p.default_config, '\"productOfferingId\":\\s*(\"(\\w| )*\")', 1, 1), '\"productOfferingId\":\\s*\"((\\w| )*)\"', '\\1', 1, 1) AS product_offering\n    from si_note n, si_vi_sbs_product_note pn,si_vi_sbs_product p\n    where pn.todo_group_note_id = #todo_group_note_id#\n    AND pn.si_note_id = n.si_note_id\n    AND n.predecessor_si_note_id=#predecessor_si_note_id#\n    \n    AND pn.product_id = p.product_id\n    AND n.si_note_class = p.si_note_class\n  </select>\n\n  <insert id=\"insertToDoGroupNote\" parameterClass=\"ToDoGroupNote\">\n    insert into si_todo_group_note\n    (si_note_id, group_name, todo_status, creator_note_text,assignee_note_text,ASSIGNEE_USER_ID,ASSIGNEE_SHOP_ID)\n    values\n    (#salesInfoNoteId#, #toDoGroupName#, #toDoGroupstatus,handler=at.a1ta.cuco.core.dao.db.visitreport.ToDoGroupStatusHandler#, #creatorNotes#,#assigneeNotes#, #assignedToUser.id#,#assigneeDealerId#)\n  </insert>\n  \n  \n\n  <resultMap id=\"sbs-org-unit-resultmap\" class=\"SBSOrgUnit\">\n    <result property=\"id\" column=\"org_unit_id\" />\n    <result property=\"name\" column=\"name\" />\n    <result property=\"street\" column=\"street\" />\n    <result property=\"postalCode\" column=\"postcode\" />\n    <result property=\"city\" column=\"city\" />\n  </resultMap>\n\n  <resultMap id=\"salesconv-note-resultmap\" class=\"SalesConvNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"campaignId\" column=\"campaign_id\" />\n    <result property=\"campaignName\" column=\"campaign_name\" />\n    <result property=\"campaignCallNumber\" column=\"campaign_callnumber\" />\n    <result property=\"contactType\" column=\"contact_type\" />\n    <result property=\"productNotes\" column=\"si_note_id\" select=\"VisitReport.loadProductNotesByNote\" />\n    <result property=\"feedbackAttributes\" column=\"{si_note_id=si_note_id, grouping=grouping\" select=\"VisitReport.loadSalesInfoNoteAttributesByNoteIdAndGrouping\" />\n    <result property=\"feedbackText\" column=\"feedback_text\" />\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"fileAttachments\" column=\"si_note_id\" select=\"VisitReport.loadFileAttachmentsByNote\" />\n  </resultMap>\n\n  <resultMap id=\"salesconv-note-resultmap-experimental\" class=\"SalesConvNote\">\n    <result property=\"salesInfoNoteId\" column=\"si_note_id\" />\n    <result property=\"salesInfoNoteType\" column=\"si_note_class\" />\n    <result property=\"predecessorSalesInfoNoteId\" column=\"predecessor_si_note_id\" />\n    <result property=\"partyId\" column=\"kunde_id\" />\n    <result property=\"noteText\" column=\"note_text\" />\n    <result property=\"finalized\"       column=\"finalized\"/>\n    <result property=\"deleted\"       column=\"deleted\"/>\n    <result property=\"creationUser\" column=\"creator\" select=\"User.getBiteUserById\" />\n    <result property=\"creationTimestamp\" column=\"create_date\" />\n    <result property=\"lastModificationUser\" column=\"last_modifier\" select=\"User.getBiteUserById\" />\n    <result property=\"lastModificationTimestamp\" column=\"last_update\" />\n    <result property=\"campaignId\" column=\"campaign_id\" />\n    <result property=\"campaignName\" column=\"campaign_name\" />\n    <result property=\"campaignCallNumber\" column=\"campaign_callnumber\" />\n    <result property=\"contactType\" column=\"contact_type\" />\n    <result property=\"productNotes\" column=\"si_note_id\" select=\"VisitReport.loadProductNotesByNote_Experimental\" />\n    <result property=\"feedbackAttributes\" column=\"{si_note_id=si_note_id, grouping=grouping\" select=\"VisitReport.loadSalesInfoNoteAttributesByNoteIdAndGrouping\" />\n    <result property=\"feedbackText\" column=\"feedback_text\" />\n    <result property=\"task\" column=\"task_id\" select=\"SalesInfo.getTask\" />\n    <result property=\"fileAttachments\" column=\"si_note_id\" select=\"VisitReport.loadFileAttachmentsByNote\" />\n  </resultMap>\n\n  <resultMap id=\"productHistory-resultmap\" class=\"ProductHistoryItem\">\n    <result property=\"id\" column=\"id\" />\n    <result property=\"productNoteId\" column=\"product_note_id\" />\n    <result property=\"note\" column=\"note\" />\n    <result property=\"creationUser\" column=\"creator_id\" select=\"User.getBiteUserById\" />\n    <result property=\"creationDate\" column=\"create_date\" />\n  </resultMap>\n\n  <select id=\"loadSBSProducts\" resultMap=\"sbs-product\" parameterClass=\"java.lang.String\">\n    select *\n    from si_vi_sbs_product\n    where si_note_class = #siNoteClass#\n    order by sequence asc\n  </select>\n  \n  <select id=\"loadAllSBSProducts\" resultMap=\"sbs-product\" parameterClass=\"java.lang.String\">\n    select *\n    from si_vi_sbs_product\n    order by si_note_class asc\n  </select>\n  \n \n  <update id=\"updateSBSProduct\" parameterClass=\"SBSProduct\">\n    update si_vi_sbs_product\n    set product_id = #productId#,\n        product_alternative_id=#productAlternativeId#,\n        product_display_name=#productDisplayName#,\n        product_category=#productCategory#,\n        active=#active#,\n        sequence=#sequence#,\n        setup_type=#setupTypes,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#,\n        setup_category=#setupCategories,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#,\n        quote_status=#quoteStatus,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#,\n        assignee_type=#assigneeTypes,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#,\n        default_config=#defaultConfig#,\n        si_note_class=#siNoteClass#\n    where product_id = #productId# and si_note_class=#siNoteClass# \n  </update>\n  \n   <insert id=\"insertSBSProduct\" parameterClass=\"SBSProduct\">\n    insert into si_vi_sbs_product\n    (product_id, product_alternative_id, product_display_name, product_category, active,sequence,setup_type,setup_category,quote_status,assignee_type,default_config,si_note_class)\n    values\n    (#productId#, #productAlternativeId#, #productDisplayName#, #productCategory#, #active#,#sequence#,#setupTypes,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#,#setupCategories,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#,#quoteStatus,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#,#assigneeTypes,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#,#defaultConfig#,#siNoteClass#)\n  </insert>\n  \n\n  <select id=\"loadSBSProductConfig\" resultClass=\"java.lang.String\" parameterClass=\"java.util.HashMap\" cacheModel=\"sbs-products-cache\">\n    select default_config\n    from si_vi_sbs_product\n    where product_id = #productId#\n    and si_note_class = #siNoteClass#\n  </select>\n\n  <select id=\"loadSBSOrgUnits\" resultMap=\"sbs-org-unit-resultmap\" cacheModel=\"sbs-org-unit-cache\">\n    select *\n    from si_vi_sbs_org_unit\n  </select>\n\n  <select id=\"hasSuccessorNote\" resultClass=\"java.lang.Integer\" parameterClass=\"java.lang.Long\">\n    select count(1)\n    from si_note\n    where predecessor_si_note_id=#noteId# and (si_note_class='SI_VR_SBS_NOTE' or si_note_class='SI_VR_GENERIC_NOTE') and deleted=0\n  </select>\n\n  <select id=\"loadProductNotesByNote\" resultMap=\"productnote-resultmap-experimental\" parameterClass=\"java.lang.Long\">\n    select /*+ parallel (8,3) */ /*+ parallel (pn,8) */ n.*,pn.*,,regexp_substr(p.default_config, '\"productOfferingId\":\\s*(\"(\\w| )*\")', 1, 1) productOfferingId_1,\n    regexp_replace(regexp_substr(p.default_config, '\"productOfferingId\":\\s*(\"(\\w| )*\")', 1, 1), '\"productOfferingId\":\\s*\"((\\w| )*)\"', '\\1', 1, 1) as product_offering\n    from si_note n, si_vi_sbs_product_note pn,\n    si_vi_sbs_product p\n    where n.predecessor_si_note_id = #noteId#\n    AND pn.si_note_id = n.si_note_id\n    AND n.deleted=0\n    AND pn.product_id = p.product_id\n    AND n.si_note_class = p.si_note_class\n  </select>\n\n  <select id=\"loadProductNotesByNote_Experimental\" resultMap=\"productnote-resultmap-experimental\" parameterClass=\"java.lang.Long\">\n    select /*+ parallel (8,3) */ /*+ parallel (pn,8) */ n.*, pn.*,\n    p.default_config,regexp_substr(p.default_config, '\"productOfferingId\":\\s*(\"(\\w| )*\")', 1, 1) productOfferingId_1,\n    regexp_replace(regexp_substr(p.default_config, '\"productOfferingId\":\\s*(\"(\\w| )*\")', 1, 1), '\"productOfferingId\":\\s*\"((\\w| )*)\"', '\\1', 1, 1) as product_offering\n    from si_note n,\n    si_vi_sbs_product_note pn, si_vi_sbs_product p\n    where n.predecessor_si_note_id =#noteId#\n    and pn.si_note_id = n.si_note_id\n    and n.deleted = 0\n    and pn.product_id = p.product_id\n    and n.si_note_class = p.si_note_class\n    and pn.TODO_GROUP_NOTE_ID is null\n  </select>\n  \n   <select id=\"loadProductNoteForHistoryByProductNoteId\" resultMap=\"productnote-minimal\" parameterClass=\"java.lang.Long\" >\n    select /*+ parallel (8,3) */ /*+ parallel (pn,8) */ n.*, pn.*,\n    p.default_config,regexp_substr(p.default_config, '\"productOfferingId\":\\s*(\"(\\w| )*\")', 1, 1) productOfferingId_1,\n    regexp_replace(regexp_substr(p.default_config, '\"productOfferingId\":\\s*(\"(\\w| )*\")', 1, 1), '\"productOfferingId\":\\s*\"((\\w| )*)\"', '\\1', 1, 1) as product_offering\n    from si_note n,\n    si_vi_sbs_product_note pn, si_vi_sbs_product p\n    where n.si_note_id =#noteId#\n    and pn.si_note_id = #noteId#\n    and pn.product_id = p.product_id\n    and n.si_note_class = p.si_note_class\n  </select>\n\n  <select id=\"loadFileAttachmentsByNote\" resultMap=\"file-attachment-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"file-attachment-cache\">\n    select *\n    from si_file_attachment\n    where si_note_id = #noteId#\n  </select>\n\n  <select id=\"loadFileAttachmentById\" resultMap=\"file-attachment-resultmap\" cacheModel=\"file-attachment-cache\">\n    select *\n    from si_file_attachment\n    where si_note_id = #noteId# and si_file_attachment_id=#attachmentId#\n  </select>\n\n  <select id=\"loadGenericNoteByNoteId\" resultMap=\"generic-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"generic-note-cache\">\n    select *\n    from si_note n, si_vi_generic_note g\n    where n.si_note_id = #noteId# AND n.si_note_id = g.si_note_id\n  </select>\n\n  <select id=\"loadSBSNoteByNoteId\" resultMap=\"sbs-note-resultmap-experimental\" parameterClass=\"java.lang.Long\" cacheModel=\"sbs-note-cache\">\n    select n.*, sbsn.*, 'VISITREPORT_SBS_FEEDBACK' as grouping_feedback, 'VISITREPORT_SBS_REFLECTION' as grouping_reflection,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos\n    from si_note n, si_vi_sbs_note sbsn\n    where n.si_note_id = #noteId# AND sbsn.si_note_id = n.si_note_id\n  </select>\n  \n   <select id=\"loadSBSNoteForHistoryByNoteId\" resultMap=\"sbs-note-minimal\" parameterClass=\"java.lang.Long\" >\n    select n.*, sbsn.*, 'VISITREPORT_SBS_FEEDBACK' as grouping_feedback, 'VISITREPORT_SBS_REFLECTION' as grouping_reflection,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos\n    from si_note n, si_vi_sbs_note sbsn\n    where n.si_note_id = #noteId# AND sbsn.si_note_id = n.si_note_id\n  </select>\n\n  <select id=\"loadSBSNoteByNoteId_Experimental\" resultMap=\"sbs-note-resultmap-experimental\" parameterClass=\"java.lang.Long\">\n    select n.*, sbsn.*, 'VISITREPORT_SBS_FEEDBACK' as grouping_feedback, 'VISITREPORT_SBS_REFLECTION' as grouping_reflection,'VISITREPORT_SBS_TODO_ITEM' as grouping_todos\n    from si_note n, si_vi_sbs_note sbsn\n    where n.si_note_id = #noteId# AND sbsn.si_note_id = n.si_note_id\n  </select>\n\n  <select id=\"loadSalesInfoNoteAttributesByNoteIdAndGrouping\" resultMap=\"attribute-result\" parameterClass=\"java.util.HashMap\" cacheModel=\"attribute-cache\">\n    select a.attribute_id, c.attribute_config_id, a.kunde_id as kunde_id, a.boolean_value,a.text_value, a.number_value, a.last_modifier, a.last_update, c.order_num, 0 as has_history\n    from si_attribute a, si_vi_sbs_note_attribute n, si_attribute_config c\n    where n.si_note_id = #si_note_id# and n.attribute_id = a.attribute_id and a.attribute_config_id = c.attribute_config_id and c.grouping = #grouping# and c.active =1 and c.deleted = 0\n    union\n    select null, c.attribute_config_id, null AS kunde_id, null as boolean_value, null as text_value, null as number_value,null as last_modifier, null as last_update, c.order_num, 0 as has_history\n    from si_attribute_config c\n    where not exists (select 1 from si_vi_sbs_note_attribute na, si_attribute naa, si_attribute_config nac where na.si_note_id = #si_note_id# and naa.attribute_id=na.attribute_id and naa.attribute_config_id = nac.attribute_config_id and nac.attribute_config_id = c.attribute_config_id)\n    and c.active = 1\n    and c.deleted = 0\n    and c.grouping = #grouping#\n  </select>\n\n  <select id=\"loadOnlySelectedSalesInfoNoteAttributesByNoteIdAndGrouping\" resultMap=\"attribute-result\" parameterClass=\"java.util.HashMap\" cacheModel=\"attribute-cache\">\n    select a.attribute_id, c.attribute_config_id, a.kunde_id as kunde_id, a.boolean_value, a.number_value,a.text_value, a.last_modifier, a.last_update, c.order_num, 0 as has_history\n    from si_attribute a, si_vi_sbs_note_attribute n, si_attribute_config c\n    where n.si_note_id = #si_note_id# and n.attribute_id = a.attribute_id and a.attribute_config_id = c.attribute_config_id and c.grouping = #grouping# and c.active =1 and c.deleted = 0\n  </select>\n\n  <select id=\"loadSalesInfoAttributesByGrouping\" parameterClass=\"java.lang.String\" resultMap=\"attribute-result\" cacheModel=\"attribute-cache\">\n    select null attribute_id, c.attribute_config_id, null AS kunde_id, null as boolean_value, null as number_value, null as text_value,null as last_modifier, null as last_update, c.order_num, 0 as has_history\n    from si_attribute_config c\n    where c.active = 1\n    and c.deleted = 0\n    and c.grouping = #grouping#\n    order by ORDER_NUM asc\n  </select>\n\n\n  <select id=\"loadNotesByPredecessorNoteId\" resultMap=\"slim-si-note-resultmap\" parameterClass=\"java.lang.Long\">\n    select *\n    from si_note\n    where predecessor_si_note_id = #noteId# AND deleted = 0 and (si_note_class='SI_SIMPLE_NOTE' or si_note_class='SI_COMPETITOR_NOTE')\n  </select>\n\n  <select id=\"loadAppointmentsByPredecessorNoteId\" resultMap=\"slim-si-note-resultmap\" parameterClass=\"java.lang.Long\">\n    select *\n    from si_note\n    where predecessor_si_note_id = #noteId# AND deleted = 0 and ( si_note_class='SI_APPOINTMENT_NOTE')\n  </select>\n\n\n  <insert id=\"insertSBSNote\" parameterClass=\"SBSNote\">\n    insert into si_vi_sbs_note\n    (si_note_id, communication_type, communication_channel, contact_type, contact_source, feedback_text, reflection_text, cuco_contact_person)\n    values\n    (#salesInfoNoteId#, #communicationType#, #communicationChannel#, #contactType#, #contactSource#, #feedbackText#, #reflectionText#,\n    <isNull property=\"contactPerson\">null</isNull>\n    <isNotNull property=\"contactPerson\">#contactPerson.id:NUMERIC#</isNotNull>\n    )\n  </insert>\n\n  <insert id=\"insertGenericNote\" parameterClass=\"GenericNote\">\n    insert into si_vi_generic_note\n    (si_note_id)\n    values\n    (#salesInfoNoteId#)\n  </insert>\n\n  <insert id=\"insertSBSProductNote\" parameterClass=\"SBSProductNote\">\n    insert into si_vi_sbs_product_note\n    (si_note_id, product_id, product_alternative_id, product_display_name, product_category, setup_type, setup_category, winback, consultation_desired, quote_status, purchase_without_written_note, turnover_quantity, turnover_duration_months, turnover_onetime_cost,\n    turnover_monthly_cost, turnover_yearly_cost, turnover_sum, assignee_type, assignee_org_unit_id, assignee_org_unit_name, assignee_org_unit_street, assignee_org_unit_postcode, assignee_org_unit_city,cuco_contact_person,todo_group_note_id)\n    values\n    (#salesInfoNoteId#, #productId#, #productAlternativeId#, #productDisplayName#, #productCategory#, #setupTypes,handler=at.a1ta.cuco.core.dao.db.visitreport.SetupTypeSetTypeHandler#, #category#, #winback#, #consultationDesired#, #quoteStatus#, #purchaseWithoutWrittenQuote#, #turnoverQuantity#, #turnoverDurationMonths#, #turnoverOnetimeCost#,\n    #turnoverMonthlyCost#, #turnoverYearlyCost#, #turnoverSum#, #handlingAssigneeType#, #handlingAssigneeOrgUnitId#, #handlingAssigneeOrgUnitName#, #handlingAssigneeOrgUnitStreet#, #handlingAssigneeOrgUnitPostalCode#, #handlingAssigneeOrgUnitCity#,\n    <isNull property=\"contactPerson\">null</isNull>\n    <isNotNull property=\"contactPerson\">#contactPerson.id:NUMERIC#</isNotNull>\n    ,#todoGroupNoteId#)\n  </insert>\n\n  <insert id=\"insertFileAttachment\" parameterClass=\"FileAttachment\">\n    <selectKey resultClass=\"long\" keyProperty=\"fileAttachmentId\">SELECT seq_si_file_attachment.nextval AS fileAttachmentId FROM dual</selectKey>\n    insert into si_file_attachment\n    (si_file_attachment_id, si_note_id, file_name, creator, create_timestamp)\n    values\n    (#fileAttachmentId#, #salesInfoNoteId#, #fileName#, #creationUser.id:NUMERIC#, #creationTimestamp#)\n  </insert>\n\n  <update id=\"updateFileAttachmentNotesRelation\" parameterClass=\"FileAttachment\">\n    update si_file_attachment\n    set si_note_id = #salesInfoNoteId#\n    where si_file_attachment_id=#fileAttachmentId#\n  </update>\n\n  <insert id=\"insertNoteAttribute\">\n    insert into si_vi_sbs_note_attribute\n    (si_note_id, attribute_id)\n    values\n    (#noteId#, #attributeId#)\n  </insert>\n\n  <update id=\"updateSBSNote\" parameterClass=\"SBSNote\">\n    update si_vi_sbs_note set\n    communication_type = #communicationType#,\n    communication_channel = #communicationChannel#,\n    contact_type = #contactType#,\n    contact_source = #contactSource#,\n    feedback_text = #feedbackText#,\n    reflection_text = #reflectionText#,\n    cuco_contact_person =\n    <isNull property=\"contactPerson\">null</isNull>\n    <isNotNull property=\"contactPerson\">#contactPerson.id:NUMERIC#</isNotNull>\n    where si_note_id = #salesInfoNoteId#\n  </update>\n\n  <update id=\"updateSBSProductNote\" parameterClass=\"SBSProductNote\">\n    update si_vi_sbs_product_note set\n    product_id = #productId#,\n    product_alternative_id = #productAlternativeId#,\n    product_display_name = #productDisplayName#,\n    product_category = #productCategory#,\n    setup_type = #setupTypes,handler=at.a1ta.cuco.core.dao.db.visitreport.SetupTypeSetTypeHandler#,\n    setup_category = #category#,\n    winback = #winback#,\n    consultation_desired = #consultationDesired#,\n    quote_status = #quoteStatus#,\n    purchase_without_written_note = #purchaseWithoutWrittenQuote#,\n    turnover_quantity = #turnoverQuantity#,\n    turnover_duration_months = #turnoverDurationMonths#,\n    turnover_onetime_cost = #turnoverOnetimeCost#,\n    turnover_monthly_cost = #turnoverMonthlyCost#,\n    turnover_yearly_cost = #turnoverYearlyCost#,\n    turnover_sum = #turnoverSum#,\n    assignee_type = #handlingAssigneeType#,\n    assignee_org_unit_id = #handlingAssigneeOrgUnitId#,\n    assignee_org_unit_name = #handlingAssigneeOrgUnitName#,\n    assignee_org_unit_street = #handlingAssigneeOrgUnitStreet#,\n    assignee_org_unit_postcode = #handlingAssigneeOrgUnitPostalCode#,\n    assignee_org_unit_city = #handlingAssigneeOrgUnitCity#,\n    cuco_contact_person =\n    <isNull property=\"contactPerson\">null</isNull>\n    <isNotNull property=\"contactPerson\">#contactPerson.id:NUMERIC#</isNotNull>\n    where si_note_id = #salesInfoNoteId#\n  </update>\n\n  <update id=\"updateAttribute\" parameterClass=\"Attribute\">\n    update si_attribute set\n    boolean_value = #booleanValue#,\n    number_value = #numberValue#,\n    last_modifier = #lastModifier.id#,\n    last_update = #lastUpdate#,\n    text_value=#textValue#\n    where attribute_id = #attributeId#\n  </update>\n\n  <delete id=\"deleteFileAttachment\" parameterClass=\"long\">\n    delete from si_file_attachment\n    where si_file_attachment_id = #fileAttachmentId#\n  </delete>\n\n  <insert id=\"insertSalesConvNote\" parameterClass=\"SalesConvNote\">\n    insert into si_sc_sales_conv_note\n    (si_note_id, campaign_id, campaign_name, campaign_callnumber, contact_type, feedback_text)\n    values\n    (#salesInfoNoteId#, #campaignId#, #campaignName#, #campaignCallNumber#, #contactType#, #feedbackText#)\n  </insert>\n\n  <update id=\"updateSalesConvNote\" parameterClass=\"SalesConvNote\">\n    update si_sc_sales_conv_note set\n    campaign_id = #campaignId#,\n    campaign_name = #campaignName#,\n    campaign_callnumber = #campaignCallNumber#,\n    contact_type = #contactType#,\n    feedback_text = #feedbackText#\n    where si_note_id = #salesInfoNoteId#\n  </update>\n\n  <select id=\"loadSalesConvNoteByNoteId\" resultMap=\"salesconv-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"salesconv-note-cache\">\n    select n.*, s.*, 'VISITREPORT_SALES_CONV_FEEDBACK' as grouping\n    from si_note n, si_sc_sales_conv_note s\n    where n.si_note_id = #noteId# AND s.si_note_id = n.si_note_id\n  </select>\n\n  <select id=\"loadSalesConvNoteByNoteId_Experimental\" resultMap=\"salesconv-note-resultmap-experimental\" parameterClass=\"java.lang.Long\" cacheModel=\"salesconv-note-cache\">\n    select n.*, s.*, 'VISITREPORT_SALES_CONV_FEEDBACK' as grouping\n    from si_note n, si_sc_sales_conv_note s\n    where n.si_note_id = #noteId# AND s.si_note_id = n.si_note_id\n  </select>\n\n\n  <insert id=\"insertProductHistoryItem\" parameterClass=\"ProductHistoryItem\">\n    <selectKey resultClass=\"long\" keyProperty=\"id\">SELECT seq_si_sc_product_history.nextval AS id FROM dual</selectKey>\n    insert into si_sc_product_history\n    (id, product_note_id, note, creator_id, create_date)\n    values\n    (#id#, #productNoteId#, #note#, #creationUser.id:NUMERIC#, #creationDate#)\n  </insert>\n\n  <update id=\"updateProductHistoryItemProductNoteID\" parameterClass=\"ProductHistoryItem\">\n\n    update si_sc_product_history set product_note_id=#productNoteId# where id=#id#\n  </update>\n\n  <select id=\"loadProductHistoryItemsByProdNoteId\" resultMap=\"productHistory-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"productHistory-cache\">\n    select *\n    from si_sc_product_history\n    where product_note_id = #productNoteId#\n    order by create_date\n  </select>\n\n  <select id=\"getTeamEmailAddress\" parameterClass=\"java.lang.Long\" resultClass=\"java.lang.String\" cacheModel=\"teamEmail-cache\">\n    SELECT team_email FROM\n    (\n    SELECT * FROM\n    (\n    SELECT te.team_email, 1 AS order_num\n    FROM si_sc_team_email te, si_sc_team_email_user teu\n    WHERE teu.user_id = #userid#\n    AND teu.TEAM_EMAIL_ID = te.ID\n    UNION\n    SELECT te.team_email, 2 AS order_num\n    FROM si_sc_team_email te\n    WHERE is_default = 1\n    )\n    ORDER BY order_num\n    )\n    WHERE ROWNUM = 1\n  </select>\n  \n  <select id=\"loadDigitalSellingNoteByNoteId\" resultMap=\"digital-selling-note-resultmap\" parameterClass=\"java.lang.Long\" cacheModel=\"digital-selling-note-cache\">\n    select *\n    from si_note n, si_vi_ds_note g\n    where n.si_note_id = #noteId# AND n.si_note_id = g.si_note_id\n  </select>\n  \n  \n  <insert id=\"insertDigitalSellingNote\" parameterClass=\"DigitalSellingNote\">\n    insert into si_vi_ds_note\n    (si_note_id, content)\n    values\n    (#salesInfoNoteId#, #content#)\n  </insert>\n  \n</sqlMap>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/cmdb/applicationContext-cuco-dao-cmdb.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/cmdb/applicationContext-cuco-dao-cmdb.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 1746,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:aop=\"http://www.springframework.org/schema/aop\"\n\txmlns:context=\"http://www.springframework.org/schema/context\"\n\txmlns:tx=\"http://www.springframework.org/schema/tx\"\n\txsi:schemaLocation=\"http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n\t\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n\t\thttp://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\n\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n    <bean id=\"dataSourceCMDB\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\" lazy-init=\"false\">\n      <property name=\"driverClassName\" value=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\" />\n      <property name=\"url\" value=\"jdbc:sqlserver://${cmdb.host};databaseName=${cmdb.dbname}\" />\n      <property name=\"username\" value=\"${cmdb.username}\" />\n      <property name=\"password\" value=\"${cmdb.password}\" />\n      <property name=\"maxIdle\" value=\"600\" />\n    </bean>\n\n    <bean id=\"sqlMapClientCMDB\" class=\"org.springframework.orm.ibatis.SqlMapClientFactoryBean\">\n      <property name=\"configLocation\" value=\"classpath:/at/a1ta/cuco/core/dao/cmdb/sqlmap-config-cmdb.xml\" />\n      <property name=\"dataSource\"><ref local=\"dataSourceCMDB\" /></property>\n    </bean>\n\n    <bean id=\"CmDBICTServiceDao\" class=\"at.a1ta.cuco.core.dao.db.impl.CmDBICTServiceDaoImpl\">\n      <property name=\"sqlMapClient\" ref=\"sqlMapClientCMDB\" />\n    </bean>\n  \n</beans>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/cmdb/sqlmap-config-cmdb.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/cmdb/sqlmap-config-cmdb.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 492,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE sqlMapConfig PUBLIC \"-//ibatis.apache.org//DTD SQL Map Config 2.0//EN\" \"http://ibatis.apache.org/dtd/sql-map-config-2.dtd\">\n<sqlMapConfig>\n\t<settings useStatementNamespaces=\"true\" cacheModelsEnabled=\"true\" lazyLoadingEnabled=\"false\" />\n  \n    <typeAlias alias=\"ehcacheProvider\" type=\"at.a1ta.bite.sqlmap.engine.chache.ehcache.EhCacheController\" />\n  \n\t<sqlMap resource=\"at/a1ta/cuco/core/dao/cmdb/sqlmap-cmDBICTService.xml\" />\n</sqlMapConfig>",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/dao/cmdb/sqlmap-cmDBICTService.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/dao/cmdb/sqlmap-cmDBICTService.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 781,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE sqlMap\n  PUBLIC \"-//ibatis.apache.org//DTD SQL Map 2.0//EN\"\n  \"http://ibatis.apache.org/dtd/sql-map-2.dtd\">\n\n<sqlMap namespace=\"CmDBICTService\">\n  <cacheModel id=\"CmDBICTService-cache\" type=\"ehcacheProvider\" readOnly=\"true\" serialize=\"false\">\n\t<flushInterval hours=\"1\" />\n\t<property name=\"cache-size\" value=\"1\" />\n  </cacheModel>\n\n  <resultMap id=\"cmDBICTService-result\" class=\"at.a1ta.cuco.core.shared.dto.product.PartySummaryItem\">\n\t<result property=\"name\" column=\"servicename\" />\n\t<result property=\"url\" column=\"deeplink\" />\n  </resultMap>\n\n  <select id=\"getICTServicesForPartyId\" resultMap=\"cmDBICTService-result\" parameterClass=\"java.lang.String\">\n\tselect * from dbo.export_cuco where kums_id =#partyId#\n  </select>\n\n</sqlMap>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/resources/at/a1ta/cuco/core/service/applicationContext-cuco-service.xml",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/resources/at/a1ta/cuco/core/service/applicationContext-cuco-service.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2571,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:aop=\"http://www.springframework.org/schema/aop\"\n\txmlns:context=\"http://www.springframework.org/schema/context\"\n\txmlns:tx=\"http://www.springframework.org/schema/tx\"\n\txsi:schemaLocation=\"http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n\t\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n\t\thttp://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd\n\t\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\">\n\n\t<import resource=\"classpath:/at/a1ta/bite/core/applicationContext-bite-core.xml\" />\n\t<import resource=\"classpath:/at/a1ta/cuco/core/dao/db/applicationContext-cuco-dao-db.xml\" />\n\t<import resource=\"classpath:/at/a1ta/cuco/core/dao/billingcycle/applicationContext-cuco-dao-bc.xml\" />\n    <import resource=\"classpath:/at/a1ta/cuco/core/dao/cmdb/applicationContext-cuco-dao-cmdb.xml\" />\n\t<import resource=\"classpath:/at/a1ta/bite/data/clarify/service/applicationContext-clarify-service.xml\" />\n\t\n    <context:component-scan base-package=\"at.a1ta.cuco.core.configuration\"/>\n\t<context:component-scan base-package=\"at.a1ta.cuco.core.dao.esb\"/>\n\t<context:component-scan base-package=\"at.a1ta.cuco.core.service\"/>\n\t<context:component-scan base-package=\"at.a1ta.cuco.core.mail\"/>\n    <bean class=\"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor\"/>\n    \n    <bean id=\"cusCoDao\" class=\"at.a1ta.cuco.core.dao.cusco.impl.HttpPostCusCoDao\">\n        <property name=\"endpoint\" value=\"${cusco.host}\" />\n        <property name=\"config\">\n            <bean class=\"at.a1ta.bite.data.cusco.CusCoConfigurtationBean\">\n                <constructor-arg><value>${cusco.user}</value></constructor-arg>\n                <constructor-arg><value>${cusco.password}</value></constructor-arg>\n            </bean>\n        </property>\n    </bean>\n    \n    <bean id=\"cuscoOperations\" class=\"at.a1ta.bite.data.cusco.http.CusCoHttpTemplate\" />\n    \n    <bean id=\"imageService\" class=\"at.a1ta.cuco.core.service.impl.ImageServiceImpl\">\n        <constructor-arg><ref bean=\"imageDao\"/></constructor-arg>\n    </bean>\n    <bean id=\"imageSizeService\" class=\"at.a1ta.cuco.core.service.impl.ImageSizeServiceImpl\">\n        <constructor-arg><ref bean=\"imageSizeDao\"/></constructor-arg>\n    </bean>\n</beans>\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/configuration/MetricsConfiguration.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/configuration/MetricsConfiguration.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3047,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n *\n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.configuration;\n\nimport java.io.File;\nimport java.util.concurrent.TimeUnit;\n\nimport javax.annotation.PreDestroy;\nimport javax.annotation.Resource;\nimport javax.sql.DataSource;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.ConfigurableApplicationContext;\nimport org.springframework.context.annotation.Configuration;\n\nimport at.a1ta.bite.core.health.DatabaseHealthCheck;\nimport at.a1ta.bite.data.solr.core.SolrTemplate;\nimport at.a1ta.cuco.core.healthcheck.SolrHealthCheck;\n\nimport com.codahale.metrics.CsvReporter;\nimport com.codahale.metrics.MetricRegistry;\nimport com.codahale.metrics.SharedMetricRegistries;\nimport com.codahale.metrics.health.HealthCheckRegistry;\nimport com.codahale.metrics.health.jvm.ThreadDeadlockHealthCheck;\nimport com.ryantenney.metrics.spring.config.annotation.MetricsConfigurerAdapter;\n\n@Configuration\n//@EnableMetrics\npublic class MetricsConfiguration extends MetricsConfigurerAdapter {\n\n  public static final String REGISTRY = \"CUCOMETRICS\";\n\n  @Resource\n  private ConfigurableApplicationContext context;\n\n  @Value(value = \"${metrics.csv.report.file.path:D:/logs/cuco/}\")\n  private String csvReportFilePath;\n\n  private CsvReporter reporter;\n\n  @Override\n  public MetricRegistry getMetricRegistry() {\n    return SharedMetricRegistries.getOrCreate(REGISTRY);\n  }\n\n  @Override\n  public HealthCheckRegistry getHealthCheckRegistry() {\n    HealthCheckRegistry healthCheckRegistry = new HealthCheckRegistry();\n    healthCheckRegistry.register(\"CuCo-Database\", new DatabaseHealthCheck((DataSource) context.getBean(\"dataSourceCuCo\")));\n    healthCheckRegistry.register(\"PKB-Database\", new DatabaseHealthCheck((DataSource) context.getBean(\"dataSourcePKB\")));\n    healthCheckRegistry.register(\"Solr-Server\", new SolrHealthCheck(((SolrTemplate) context.getBean(\"solrPartyTemplate\")).getSolrServer()));\n    healthCheckRegistry.register(\"Deadlocks\", new ThreadDeadlockHealthCheck());\n    return healthCheckRegistry;\n  }\n\n  @Override\n  public void configureReporters(MetricRegistry metricRegistry) {\n    reporter = CsvReporter.forRegistry(metricRegistry).build(new File(csvReportFilePath));\n    reporter.start(5, TimeUnit.MINUTES);\n  }\n\n  @PreDestroy\n  private void cleanUp() {\n    reporter.stop();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/bean/Reporting.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/bean/Reporting.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 897,
    "content": "package at.a1ta.cuco.core.bean;\n\nimport java.io.Serializable;\n\npublic class Reporting implements Serializable, KeyableBean {\n  private Long id;\n  private String name;\n  private String query;\n  private boolean longRunning;\n  private String tableName;\n\n  @Override\n  public Long getId() {\n    return id;\n  }\n\n  public String getQuery() {\n    return query;\n  }\n\n  public void setQuery(String query) {\n    this.query = query;\n  }\n\n  public boolean isLongRunning() {\n    return longRunning;\n  }\n\n  public void setLongRunning(boolean longrunning) {\n    this.longRunning = longrunning;\n  }\n\n  public String getTableName() {\n    return tableName;\n  }\n\n  public void setTableName(String tablename) {\n    this.tableName = tablename;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getName() {\n    return name;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/bean/KeyableBean.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/bean/KeyableBean.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 89,
    "content": "package at.a1ta.cuco.core.bean;\n\npublic interface KeyableBean {\n  public Long getId();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/bean/File.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/bean/File.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1233,
    "content": "package at.a1ta.cuco.core.bean;\n\nimport java.io.Serializable;\n\npublic class File implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  public enum MIMEType {\n    //@formatter:off\n    PNG(\"image/png\"), \n    CSV(\"text/csv\"), \n    PDF(\"application/pdf\"), \n    XLS(\"application/x-excel\"), \n    XLSX(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"), \n    XML(\"application/xml\");\n    //@formatter:on\n\n    private String value;\n\n    private MIMEType(String value) {\n      this.value = value;\n    }\n\n    public String getValue() {\n      return value;\n    }\n  }\n\n  private String filename;\n  private byte[] content;\n  private MIMEType mimeType;\n\n  public File() {}\n\n  public File(String filename, MIMEType mimeType) {\n    this.filename = filename;\n    this.mimeType = mimeType;\n  }\n\n  public String getFilename() {\n    return filename;\n  }\n\n  public void setFilename(String filename) {\n    this.filename = filename;\n  }\n\n  public byte[] getContent() {\n    return content;\n  }\n\n  public void setContent(byte[] content) {\n    this.content = content;\n  }\n\n  public MIMEType getMimeType() {\n    return mimeType;\n  }\n\n  public void setMimeType(MIMEType mimeType) {\n    this.mimeType = mimeType;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/bean/ReportingWhitelist.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/bean/ReportingWhitelist.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 495,
    "content": "package at.a1ta.cuco.core.bean;\n\n\n/**\n * This class is necessary for whitelisting any classes which the report uses and are not defined anywhere else as the return type of\n * the reporting is defined as <String,Object> and GWT doesn't know what to include for Object\n * so add every class here you need to whitelist for GWT RPC\n * \n * @author Q909158\n */\npublic class ReportingWhitelist extends Reporting {\n  private static final long serialVersionUID = 1L;\n\n  private ReportingWhitelist() {}\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/bean/PWUTokenResponse.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/bean/PWUTokenResponse.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1772,
    "content": "package at.a1ta.cuco.core.bean;\n\nimport java.io.Serializable;\n\npublic class PWUTokenResponse implements Serializable {\n  private String a1Login;\n  private String orderId;\n  private String retailerId;\n  private String token;\n  private String firstName;\n  private String lastName;\n  private long invokationDuration = -1;\n  private String partyId;\n\n  public String getA1Login() {\n    return a1Login;\n  }\n\n  public void setA1Login(String a1Login) {\n    this.a1Login = a1Login;\n  }\n\n  public String getOrderId() {\n    return orderId;\n  }\n\n  public void setOrderId(String orderId) {\n    this.orderId = orderId;\n  }\n\n  public String getRetailerId() {\n    return retailerId;\n  }\n\n  public void setRetailerId(String retailerId) {\n    this.retailerId = retailerId;\n  }\n\n  public String getToken() {\n    return token;\n  }\n\n  public void setToken(String token) {\n    this.token = token;\n  }\n\n  public long getInvokationDuration() {\n    return invokationDuration;\n  }\n\n  public void setInvokationDuration(long invokationDuration) {\n    this.invokationDuration = invokationDuration;\n  }\n\n  public String getFirstName() {\n    return firstName;\n  }\n\n  public void setFirstName(String firstName) {\n    this.firstName = firstName;\n  }\n\n  public String getLastName() {\n    return lastName;\n  }\n\n  public void setLastName(String lastName) {\n    this.lastName = lastName;\n  }\n\n  @Override\n  public String toString() {\n    return \"PWUTokenResponse [a1Login=\" + a1Login + \", orderId=\" + orderId + \", retailerId=\" + retailerId + \", token=\" + token + \", firstname=\" + firstName + \", lastname=\" + lastName + \", invokationDuration=\" + invokationDuration + \"]\";\n  }\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/healthcheck/SolrHealthCheck.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/healthcheck/SolrHealthCheck.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1315,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.healthcheck;\n\nimport org.apache.solr.client.solrj.SolrServer;\nimport org.apache.solr.client.solrj.response.SolrPingResponse;\n\nimport com.codahale.metrics.health.HealthCheck;\n\npublic class SolrHealthCheck extends HealthCheck {\n\n  private final SolrServer solrServer;\n\n  public SolrHealthCheck(SolrServer solrServer) {\n    this.solrServer = solrServer;\n  }\n\n  @Override\n  protected Result check() throws Exception {\n    SolrPingResponse response = solrServer.ping();\n    return Result.healthy(\"status: \" + response.getStatus());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/billingcycle/DefaultBillingCycleDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/billingcycle/DefaultBillingCycleDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 999,
    "content": "package at.a1ta.cuco.core.dao.billingcycle;\n\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.GregorianCalendar;\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.shared.dto.BillingCycle;\n\npublic class DefaultBillingCycleDao extends AbstractDao implements BillingCycleDao {\n\n  @Override\n  public List<BillingCycle> getBillingCycle(String vBlock) {\n    List<BillingCycle> cycles = performListQuery(\"BillingCycle.getVBlock\", vBlock);\n\n    int cyclecnt = cycles.size();\n\n    if (cyclecnt > 1) {\n      BillingCycle cycle1 = cycles.get(0);\n\n      Calendar cal = new GregorianCalendar();\n      cal.add(Calendar.DAY_OF_MONTH, 5);\n\n      Date now = cal.getTime();\n\n      if (cycle1.getBillingDate().after(now)) {\n        for (int i = cyclecnt - 1; i > 0; i--) {\n          cycles.remove(i);\n        }\n      } else {\n        for (int i = cyclecnt - 1; i > 1; i--) {\n          cycles.remove(i);\n        }\n      }\n    }\n    return cycles;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/billingcycle/BillingCycleDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/billingcycle/BillingCycleDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 218,
    "content": "package at.a1ta.cuco.core.dao.billingcycle;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.BillingCycle;\n\npublic interface BillingCycleDao {\n\n  public List<BillingCycle> getBillingCycle(String vBlock);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BrianCeeQueryOrderDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BrianCeeQueryOrderDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2996,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.io.UnsupportedEncodingException;\n\nimport javax.xml.bind.DatatypeConverter;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\nimport org.springframework.stereotype.Repository;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.dao.util.BrianCeeQueryOrderStub;\nimport at.mobilkom.brian.wsdl.BrianCeeQueryOrderRequest;\nimport at.mobilkom.brian.wsdl.BrianCeeQueryOrderRequestDocument;\nimport at.mobilkom.brian.wsdl.BrianCeeQueryOrderResponseDocument;\nimport at.mobilkom.brian.wsdl.CeeQOrderByUidRec;\nimport at.mobilkom.brian.wsdl.IspUidRec;\nimport at.mobilkom.eai.esb.EsbParam;\n\n@Component\n@Repository\nclass BrianCeeQueryOrderDaoImpl extends BaseEsbClient<BrianCeeQueryOrderStub> implements BrianCeeQueryOrderDao {\n\n  private static final Logger logger = LoggerFactory.getLogger(BrianCeeQueryOrderDaoImpl.class);\n  private static final String REALM_NAME = \"ts.a1.net\";\n  private static final String DEAL_NAME = \"ONETV\";\n\n  private SettingService settingService;\n\n  @Override\n  public BrianCeeQueryOrderResponseDocument getCeeQueryOrderResponse(String ispUid) {\n    BrianCeeQueryOrderRequestDocument requestDocument = BrianCeeQueryOrderRequestDocument.Factory.newInstance();\n    BrianCeeQueryOrderRequest request = BrianCeeQueryOrderRequest.Factory.newInstance();\n\n    CeeQOrderByUidRec ceeQOrderByUidRec = CeeQOrderByUidRec.Factory.newInstance();\n    IspUidRec ispUidRec = IspUidRec.Factory.newInstance();\n\n    ceeQOrderByUidRec.setDealName(DEAL_NAME);\n    ispUidRec.setId(ispUid);\n    ispUidRec.setRealm(REALM_NAME);\n    ceeQOrderByUidRec.setIspUid(ispUidRec);\n    EsbParam param = new EsbParam();\n    param.setSecurityCredentials(getESBSecurityCredentials());\n\n    request.setCeeQueryOrder(ceeQOrderByUidRec);\n    requestDocument.setBrianCeeQueryOrderRequest(request);\n    try {\n      return stub.brianCeeQueryOrder(requestDocument, param);\n    } catch (Exception e) {\n      String message = \"BrianCeeQueryOrderRequest could not be processed.\";\n      throw new EsbException(message, e);\n    }\n  }\n\n  private String getESBSecurityCredentials() {\n    String esbSecurityUsername = settingService.getValue(\"asmp.username\");\n    String esbSecurityPassword = settingService.getValue(\"asmp.password\");\n    String esbSecurityCredentialString = esbSecurityUsername + \":\" + esbSecurityPassword;\n    try {\n      byte[] message = esbSecurityCredentialString.getBytes(\"UTF-8\");\n      return DatatypeConverter.printBase64Binary(message);\n    } catch (UnsupportedEncodingException e) {\n      logger.error(\"Error while encoding esb security credentials\", e);\n    }\n    return null;\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/MobilPointsDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/MobilPointsDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2518,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.rmi.RemoteException;\n\nimport org.springframework.stereotype.Repository;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.MobilPoints;\nimport at.mobilkom.eai.mobilpointsservice.GetMPTRequestDocument;\nimport at.mobilkom.eai.mobilpointsservice.GetMPTRequestType;\nimport at.mobilkom.eai.mobilpointsservice.GetMPTResponseDocument;\nimport at.mobilkom.eai.mobilpointsservice.GetMPTResponseType;\nimport at.mobilkom.eai.mobilpointsservice.MsisdnRec;\n\nimport com.telekomaustriagroup.esb.mptsvc.ErrorMessage;\nimport com.telekomaustriagroup.esb.mptsvc.MptSvcStub;\n\n@Repository\npublic class MobilPointsDaoImpl extends BaseEsbClient<MptSvcStub> implements MobilPointsDao {\n\n  private static String MOBIL_POINTS_SOURCE_SYSTEM = \"CUCO\";\n  private static boolean MOBIL_POINTS_LOAD_DETAILS = false;\n\n  @Override\n  public MobilPoints getMobilPoints(PhoneNumberStructure phoneNumber) {\n\n    GetMPTRequestDocument requestDocument = createMobilPointsRequestDocument(phoneNumber);\n\n    GetMPTResponseDocument responseDocument;\n    try {\n      responseDocument = stub.GetMPT(requestDocument, null);\n    } catch (RemoteException e) {\n      throw new EsbException(e);\n    } catch (ErrorMessage e) {\n      throw new EsbException(e);\n    }\n    GetMPTResponseType response = responseDocument.getGetMPTResponse();\n\n    return createMobilPointsFromResponse(response);\n  }\n\n  private MobilPoints createMobilPointsFromResponse(GetMPTResponseType response) {\n    MobilPoints mobilPoins = new MobilPoints();\n    mobilPoins.setAmdocsPoints(response.getMPAmdocs());\n    mobilPoins.setClarifyPoints(response.getMPCLFY());\n    mobilPoins.setPartnerWebPoints(response.getMPPWSLA());\n    return mobilPoins;\n  }\n\n  private GetMPTRequestDocument createMobilPointsRequestDocument(PhoneNumberStructure phoneNumber) {\n    GetMPTRequestType request = GetMPTRequestType.Factory.newInstance();\n\n    MsisdnRec msisdn = request.addNewMSISDN();\n    msisdn.setCc(phoneNumber.getCountryCode());\n    msisdn.setNdc(phoneNumber.getOnkz());\n    msisdn.setSn(phoneNumber.getNumber());\n\n    request.setSourceSystem(MOBIL_POINTS_SOURCE_SYSTEM);\n    request.setLoadDetails(MOBIL_POINTS_LOAD_DETAILS);\n\n    GetMPTRequestDocument requestDocument = GetMPTRequestDocument.Factory.newInstance();\n    requestDocument.setGetMPTRequest(request);\n\n    return requestDocument;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BrianDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BrianDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1000,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.esb;\n\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\n\npublic interface BrianDao {\n\n  /**\n   * Add record to mobile billing system.\n   * \n   * @param ticket\n   */\n  void addCreditRecord(PayableTicket ticket);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BrianDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BrianDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4583,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.math.BigDecimal;\nimport java.rmi.RemoteException;\nimport java.util.Date;\n\nimport org.joda.time.format.DateTimeFormat;\nimport org.joda.time.format.DateTimeFormatter;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.core.convert.converter.Converter;\nimport org.springframework.stereotype.Component;\nimport org.springframework.stereotype.Repository;\nimport org.springframework.util.Assert;\nimport org.springframework.util.StringUtils;\n\nimport com.telekomaustriagroup.esb.briana1.BrianA1Stub;\nimport com.telekomaustriagroup.esb.briana1.BwsErrMsg;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\nimport at.mobilkom.brian.wsdl.BrianSisAddCreditRequest;\nimport at.mobilkom.brian.wsdl.BrianSisAddCreditRequestDocument;\nimport at.mobilkom.brian.wsdl.BrianSisAddCreditResponseDocument;\nimport at.mobilkom.brian.wsdl.SisCreditRec;\nimport at.mobilkom.eai.esb.ValidationException;\n\n/**\n * EsbBrainDao uses the {@link BrianA1Stub} to handle mobile billing affairs.\n * Domain types will be converted into according interface ones using {@link Converter}.\n */\n@Component\n@Repository\nclass BrianDaoImpl extends BaseEsbClient<BrianA1Stub> implements BrianDao {\n\n  private static final Logger logger = LoggerFactory.getLogger(BrianDaoImpl.class);\n\n  @Override\n  public void addCreditRecord(PayableTicket ticket) {\n    Assert.notNull(ticket, \"Cannot process null as value for payable ticket\");\n\n    BrianSisAddCreditRequestDocument requestDocument = prepareAddCreditRequestDocument(ticket);\n\n    sendAddCreditRequest(requestDocument);\n  }\n\n  private BrianSisAddCreditResponseDocument sendAddCreditRequest(BrianSisAddCreditRequestDocument requestDocument) {\n    try {\n      logger.debug(\"Sending BrianSisAddCreditRequest:\\r\\n\" + requestDocument);\n      return stub.brianSisAddCredit(requestDocument, null);\n    } catch (RemoteException e) {\n      throw new EsbException(\"BrianSisAddCreditRequest could not be sent\", e);\n    } catch (BwsErrMsg e) {\n      String message = \"BrianSisAddCreditRequest could not be processed.\";\n      if (e.getFaultMessage() != null && e.getFaultMessage().getReturnRec() != null) {\n        message += (\"\\r\\n\" + e.getFaultMessage().getReturnRec().toString());\n      }\n      throw new EsbException(message, e);\n    } catch (ValidationException e) {\n      throw new EsbException(\"BrianSisAddCreditRequest could not be sent due to incompartible types.\", e);\n    }\n  }\n\n  private BrianSisAddCreditRequestDocument prepareAddCreditRequestDocument(PayableTicket ticket) {\n    BrianSisAddCreditRequestDocument document = BrianSisAddCreditRequestDocument.Factory.newInstance();\n    document.setBrianSisAddCreditRequest(PayableTicket2AddCreditRequestConverter.INSTANCE.convert(ticket));\n    return document;\n  }\n\n  public enum PayableTicket2AddCreditRequestConverter implements Converter<PayableTicket, BrianSisAddCreditRequest> {\n\n    INSTANCE;\n\n    private static final int NUMBER_FORMAT_SCALE = 2;\n    private static final String ACTIVITY_CODE = \"BCRD\";\n    private static final String MEMO_PREFIX = \"PAST: \";\n\n    private static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormat.forPattern(\"yyyy/MM/dd\");\n\n    @Override\n    public BrianSisAddCreditRequest convert(PayableTicket source) {\n      if (source == null) {\n        return BrianSisAddCreditRequest.Factory.newInstance();\n      }\n\n      BrianSisAddCreditRequest request = BrianSisAddCreditRequest.Factory.newInstance();\n\n      SisCreditRec command = request.addNewAdcrdCmd();\n      command.setActivityCode(ACTIVITY_CODE);\n      command.setAmount(formatDouble(source.getCosts()));\n\n      if (StringUtils.hasText(source.getBan())) {\n        command.setBan(source.getBan());\n      }\n\n      command.setChargeCode(source.getService().getProductCode());\n      command.setEffectDate(DATE_TIME_FORMATTER.print(source.getCreateDate() != null ? source.getCreateDate().getTime() : new Date().getTime()));\n      command.setMemo(MEMO_PREFIX + source.getId() + \" (\" + source.getAgent().getUsername() + \")\");\n      command.setMsisdn((source.getLknz() == null ? \"43\" : source.getLknz()) + source.getOnkz() + source.getNumber());\n      command.setNextBill(true);\n      command.setUid(source.getAgent().getUsername());\n\n      return request;\n    }\n\n    protected Double formatDouble(Double value) {\n      BigDecimal bd = new BigDecimal(value);\n      return bd.setScale(NUMBER_FORMAT_SCALE, BigDecimal.ROUND_HALF_UP).doubleValue();\n\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/EsbPartyDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/EsbPartyDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 228,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport at.a1ta.cuco.core.shared.dto.EsbParty;\nimport at.a1telekom.eai.party.Party;\n\npublic interface EsbPartyDao {\n\n  Party getParty(long partyId);\n  \n  EsbParty getESBParty(long partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/CustomerAssignmentDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/CustomerAssignmentDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3831,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.util.ArrayList;\n\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.ContractOwnerAssignment;\nimport at.a1telekom.eai.customerassignment.xsd.GetContractOwnerAssignmentRequest;\nimport at.a1telekom.eai.customerassignment.xsd.GetContractOwnerAssignmentRequest.GetBy;\nimport at.a1telekom.eai.customerassignment.xsd.GetContractOwnerAssignmentRequestDocument;\nimport at.a1telekom.eai.customerassignment.xsd.GetContractOwnerAssignmentResponse;\n\nimport com.telekomaustriagroup.esb.customerassignment.CustomerAssignmentStub;\n\n@Component\npublic class CustomerAssignmentDaoImpl extends BaseEsbClient<CustomerAssignmentStub> implements CustomerAssignmentDao {\n\n  @Override\n  public ContractOwnerAssignment getContractOwnerAssignmentByBan(String ban) {\n    GetContractOwnerAssignmentRequestDocument requestDocument = createGetContractOwnerAssignmentRequestDocumentByBan(ban);\n    try {\n      return copy(stub.getContractOwnerAssignment(requestDocument, null).getGetContractOwnerAssignmentResponse());\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n  @Override\n  public ContractOwnerAssignment getContractOwnerAssignmentByPartyId(String partyId) {\n    GetContractOwnerAssignmentRequestDocument requestDocument = createGetContractOwnerAssignmentRequestDocumentByPartyId(partyId);\n    try {\n      return copy(stub.getContractOwnerAssignment(requestDocument, null).getGetContractOwnerAssignmentResponse());\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n  private GetContractOwnerAssignmentRequestDocument createGetContractOwnerAssignmentRequestDocumentByBan(String ban) {\n    GetContractOwnerAssignmentRequestDocument requestDocument = GetContractOwnerAssignmentRequestDocument.Factory.newInstance();\n    GetContractOwnerAssignmentRequest getContractOwnerAssignmentRequest = requestDocument.addNewGetContractOwnerAssignmentRequest();\n    getContractOwnerAssignmentRequest.setSourceSystem(\"CUCO\");\n    getContractOwnerAssignmentRequest.setUser(\"UCUCO01\");\n    GetBy getBy = getContractOwnerAssignmentRequest.addNewGetBy();\n    getBy.setBAN(ban);\n    return requestDocument;\n  }\n\n  private GetContractOwnerAssignmentRequestDocument createGetContractOwnerAssignmentRequestDocumentByPartyId(String partyId) {\n    GetContractOwnerAssignmentRequestDocument requestDocument = GetContractOwnerAssignmentRequestDocument.Factory.newInstance();\n    GetContractOwnerAssignmentRequest getContractOwnerAssignmentRequest = requestDocument.addNewGetContractOwnerAssignmentRequest();\n    getContractOwnerAssignmentRequest.setSourceSystem(\"CUCO\");\n    getContractOwnerAssignmentRequest.setUser(\"UCUCO01\");\n    GetBy getBy = getContractOwnerAssignmentRequest.addNewGetBy();\n    getBy.setPartyId(partyId);\n    getContractOwnerAssignmentRequest.setListAllBANs(true);\n    return requestDocument;\n  }\n\n  private ContractOwnerAssignment copy(GetContractOwnerAssignmentResponse getContractOwnerAssignmentResponse) {\n    ContractOwnerAssignment contractOwnerAssignment = new ContractOwnerAssignment();\n    contractOwnerAssignment.setAccounts(new ArrayList<BillingAccountNumber>());\n    contractOwnerAssignment.setPartyId(getContractOwnerAssignmentResponse.getPartyId());\n    if (getContractOwnerAssignmentResponse.getAccounts() != null) {\n      for (at.a1telekom.eai.customerassignment.xsd.Account accountWS : getContractOwnerAssignmentResponse.getAccounts().getAccountArray()) {\n        BillingAccountNumber account = new BillingAccountNumber();\n        account.setBan(Long.parseLong(accountWS.getBAN()));\n        contractOwnerAssignment.getAccounts().add(account);\n      }\n    }\n    return contractOwnerAssignment;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BusinessHardwareReplacementDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BusinessHardwareReplacementDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5936,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.rmi.RemoteException;\n\nimport org.springframework.context.annotation.Scope;\nimport org.springframework.stereotype.Repository;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.BusinessHardwareReplacement;\nimport at.mobilkom.eai.brk2.LoadBRKListRequestDocument;\nimport at.mobilkom.eai.brk2.LoadBRKListRequestType;\nimport at.mobilkom.eai.brk2.LoadBRKListResponseDocument;\nimport at.mobilkom.eai.brk2.LoadBRKListResponseType;\nimport at.mobilkom.eai.brk2.LoadBRKRequestDocument;\nimport at.mobilkom.eai.brk2.LoadBRKRequestType;\nimport at.mobilkom.eai.brk2.LoadBRKRequestType.LoadOptions;\nimport at.mobilkom.eai.brk2.LoadBRKResponseDocument;\nimport at.mobilkom.eai.brk2.LoadBRKResponseType;\nimport at.mobilkom.eai.common.brk.BRKType;\n\nimport com.telekomaustriagroup.esb.brksvc.BrkError;\nimport com.telekomaustriagroup.esb.brksvc.BrkSvcStub;\n\n@Repository\n@Scope(\"prototype\")\npublic class BusinessHardwareReplacementDaoImpl extends BaseEsbClient<BrkSvcStub> implements BusinessHardwareReplacementDao {\n  private static boolean LOAD_OPTIONS_GET_BASIC_INFORMATION = true;\n  private static boolean LOAD_OPTIONS_GET_DATA_GROUPS = false;\n  private static boolean LOAD_OPTIONS_GET_ACTIVE_SONDER_CONDITIONS = false;\n  private static boolean LOAD_OPTIONS_GET_PARAMETERS = false;\n\n  @Override\n  public BusinessHardwareReplacement getBusinessHardwareReplacement(long billingAccountNumber) {\n    try {\n      BRKType[] businessRewardingAccounts = getBusinessRewardingAccounts(billingAccountNumber);\n\n      if (businessRewardingAccounts == null || businessRewardingAccounts.length == 0) {\n        return createEmptyBusinessHardwareReplacement(billingAccountNumber);\n      }\n\n      BigInteger possibleHWRedemptionVoice = BigInteger.ZERO;\n      BigInteger nbActiveSims = BigInteger.ZERO;\n      BigInteger nbOGE = BigInteger.ZERO;\n      BigDecimal rmCommitmentPerSim = BigDecimal.ZERO;\n\n      for (BRKType businessRewardingAccount : businessRewardingAccounts) {\n        BRKType brk = getBusinessRewardingAccountData(businessRewardingAccount);\n\n        possibleHWRedemptionVoice = possibleHWRedemptionVoice.add(brk.getRK().getPossibleHWRedemptionVoice());\n        nbActiveSims = nbActiveSims.add(brk.getOGE().getNbActiveSims());\n        nbOGE = nbOGE.add(brk.getOGE().getNbOGE());\n        rmCommitmentPerSim = rmCommitmentPerSim.add(brk.getOGE().getRmCommitmentPerSim());\n      }\n\n      return createBusinessHardwareReplacementFromResponse(possibleHWRedemptionVoice, nbActiveSims, nbOGE, rmCommitmentPerSim, billingAccountNumber);\n    } catch (RemoteException e) {\n      throw new EsbException(e);\n    } catch (BrkError e) {\n      throw new EsbException(e);\n    }\n  }\n\n  private BusinessHardwareReplacement createEmptyBusinessHardwareReplacement(long billingAccountNumber) {\n    BusinessHardwareReplacement data = new BusinessHardwareReplacement();\n    data.setBillingAccountNumber(billingAccountNumber);\n    data.setBusinessRewardingAccountsAvailable(false);\n    return data;\n  }\n\n  private BusinessHardwareReplacement createBusinessHardwareReplacementFromResponse(BigInteger possibleHWRedemptionVoice, BigInteger nbActiveSims, BigInteger nbOGE, BigDecimal rmCommitmentPerSim, long billingAccountNumber) {\n    BusinessHardwareReplacement data = new BusinessHardwareReplacement();\n    data.setBillingAccountNumber(billingAccountNumber);\n    data.setPossibleHardwareReplacement(possibleHWRedemptionVoice);\n    data.setSimCount(nbActiveSims);\n    data.setOpenBasicFeePerBan(nbOGE);\n    data.setBindingMonthsPerSim(rmCommitmentPerSim);\n    return data;\n  }\n\n  private BRKType getBusinessRewardingAccountData(BRKType businessRewardingAccount) throws RemoteException, BrkError {\n    LoadBRKRequestDocument requestDocument = createLoadBRKRequestDocument(businessRewardingAccount);\n\n    LoadBRKResponseDocument responseDocument = stub.loadBRK(requestDocument, null);\n    LoadBRKResponseType response = responseDocument.getLoadBRKResponse();\n\n    return response.getBRK();\n  }\n\n  private LoadBRKRequestDocument createLoadBRKRequestDocument(BRKType businessRewardingAccount) {\n    LoadBRKRequestType request = LoadBRKRequestType.Factory.newInstance();\n    request.setBrkAccountNumber(businessRewardingAccount.getAccountNumber());\n    request.setLoadOptions(createLoadOptions());\n\n    LoadBRKRequestDocument requestDocument = LoadBRKRequestDocument.Factory.newInstance();\n    requestDocument.setLoadBRKRequest(request);\n\n    return requestDocument;\n  }\n\n  private LoadOptions createLoadOptions() {\n    LoadOptions loadOptions = LoadOptions.Factory.newInstance();\n    loadOptions.setGetBasicInformation(LOAD_OPTIONS_GET_BASIC_INFORMATION);\n    loadOptions.setGetDataGroups(LOAD_OPTIONS_GET_DATA_GROUPS);\n    loadOptions.setGetActiveSonderConditions(LOAD_OPTIONS_GET_ACTIVE_SONDER_CONDITIONS);\n    loadOptions.setGetParameters(LOAD_OPTIONS_GET_PARAMETERS);\n    return loadOptions;\n  }\n\n  private BRKType[] getBusinessRewardingAccounts(long billingAccountNumber) throws RemoteException, com.telekomaustriagroup.esb.brksvc.BrkError {\n    LoadBRKListRequestDocument requestDocument = createLoadBRKListRequestDocument(billingAccountNumber);\n\n    LoadBRKListResponseDocument responseDocument = stub.loadBRKList(requestDocument, null);\n    LoadBRKListResponseType response = responseDocument.getLoadBRKListResponse();\n\n    return response.getBRKArray();\n  }\n\n  private LoadBRKListRequestDocument createLoadBRKListRequestDocument(long billingAccountNumber) {\n    LoadBRKListRequestType request = LoadBRKListRequestType.Factory.newInstance();\n    request.setBAN(billingAccountNumber + \"\");\n\n    LoadBRKListRequestDocument requestDocument = LoadBRKListRequestDocument.Factory.newInstance();\n    requestDocument.setLoadBRKListRequest(request);\n    return requestDocument;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/MobilPointsDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/MobilPointsDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 264,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.MobilPoints;\n\npublic interface MobilPointsDao {\n\n  public MobilPoints getMobilPoints(PhoneNumberStructure phoneNumber);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/KUMSCommonDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/KUMSCommonDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 216,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\n\npublic interface KUMSCommonDao {\n\n  public ArrayList<PointOfSaleInfo> loadAvailablePOSList();\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/EsbPartyDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/EsbPartyDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3729,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Repository;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.shared.dto.EsbParty;\nimport at.a1ta.cuco.core.shared.dto.ServiceClassInfo;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress.AddressDataSource;\nimport at.a1telekom.eai.party.GetPartyRequest;\nimport at.a1telekom.eai.party.GetPartyRequest.GetBy;\nimport at.a1telekom.eai.party.GetPartyRequestDocument;\nimport at.a1telekom.eai.party.GetPartyResponse;\nimport at.a1telekom.eai.party.GetPartyResponseDocument;\nimport at.a1telekom.eai.party.Party;\n\nimport com.telekomaustriagroup.esb.party.PartyStub;\n\n@Repository\npublic class EsbPartyDaoImpl extends BaseEsbClient<PartyStub> implements EsbPartyDao {\n\n  private final static String DEFAULT_SOURCE_SYSTEM = \"CUCO\";\n  private final static String DEFAULT_USER = \"UCUCO01\";\n\n  private SettingService settings;\n\n  @Override\n  public EsbParty getESBParty(long partyId) {\n    return createEsbParty(getParty(partyId));\n  }\n\n  @Override\n  public Party getParty(long partyId) {\n    GetPartyRequestDocument requestDoc = GetPartyRequestDocument.Factory.newInstance();\n    GetPartyRequest request = requestDoc.addNewGetPartyRequest();\n    GetBy getBy = request.addNewGetBy();\n    getBy.setPartyId(partyId + \"\");\n\n    request.setSourceSystem(getSourceSystem());\n    request.setUser(getUser());\n    Party party;\n    try {\n      GetPartyResponseDocument responseDoc = stub.getParty(requestDoc, null);\n      GetPartyResponse response = responseDoc.getGetPartyResponse();\n      party = response.getParty();\n      if (!party.isSetServiceClass()) {\n        party.setServiceClass(ServiceClassInfo.SERVICE_CLASS_NOT_RECEIVED);\n        party.setServiceClassText(\"\");\n      }\n\n    } catch (Exception e) {\n      throw new EsbException(e);\n    }\n    return party;\n  }\n\n  private EsbParty createEsbParty(Party party) {\n    if (party == null) {\n      return null;\n    }\n    EsbParty esbParty = new EsbParty();\n    esbParty.setPartyId(Long.valueOf(party.getPartyId()));\n    esbParty.setShortName(party.getShortName());\n    esbParty.setAddress(extractAddress(party));\n\n    return esbParty;\n  }\n\n  private StandardAddress extractAddress(Party party) {\n    StandardAddress address = new StandardAddress();\n    address.setLkmsId(party.getStandardAddress().getLkmsId());\n    address.setStreet(party.getStandardAddress().getStreet());\n    address.setHouseNumber(party.getStandardAddress().getHouseNumber());\n    address.setBlock(party.getStandardAddress().getBlock());\n    address.setStaircase(party.getStandardAddress().getStaircase());\n    address.setFloorNumber(party.getStandardAddress().getFloorNumber());\n    address.setDoorNumber(party.getStandardAddress().getDoorNumber());\n    address.setAdditional(party.getStandardAddress().getAdditional());\n    address.setPostcode(party.getStandardAddress().getPostcode());\n    address.setCity(party.getStandardAddress().getCity());\n    address.setVillage(party.getStandardAddress().getVillage());\n    address.setCountry(party.getStandardAddress().getCountry());\n    address.setDataSource(AddressDataSource.PARTY_SERVICE);\n    return address;\n  }\n\n  private String getSourceSystem() {\n    return settings.getValueOrDefault(\"esbPartyDao.sourceSystem\", DEFAULT_SOURCE_SYSTEM);\n  }\n\n  private String getUser() {\n    return settings.getValueOrDefault(\"esbPartyDao.user\", DEFAULT_USER);\n  }\n\n  @Autowired\n  public void setSettings(SettingService settings) {\n    this.settings = settings;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/CustomerAssignmentDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/CustomerAssignmentDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 308,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport at.a1ta.cuco.core.shared.dto.ContractOwnerAssignment;\n\npublic interface CustomerAssignmentDao {\n\n  public ContractOwnerAssignment getContractOwnerAssignmentByBan(String ban);\n\n  public ContractOwnerAssignment getContractOwnerAssignmentByPartyId(String partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/KUMSCommonDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/KUMSCommonDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5143,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.rmi.RemoteException;\nimport java.util.ArrayList;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Repository;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress.AddressDataSource;\nimport at.telekom.eai.kumscommon.xsd.Address;\nimport at.telekom.eai.kumscommon.xsd.GetPointOfSaleListRequestDocument;\nimport at.telekom.eai.kumscommon.xsd.GetPointOfSaleListResponse;\nimport at.telekom.eai.kumscommon.xsd.GetPointOfSaleListResponseDocument;\nimport at.telekom.eai.kumscommon.xsd.PointOfSaleList;\nimport at.telekom.eai.kumscommon.xsd.PointOfSaleType;\n\nimport com.telekomaustriagroup.esb.kumscommon.KUMSCommonStub;\nimport com.telekomaustriagroup.esb.kumscommon.KumsCommonFault;\n\n@Repository\npublic class KUMSCommonDaoImpl extends BaseEsbClient<KUMSCommonStub> implements KUMSCommonDao {\n\n  @Autowired\n  private SettingService settingService;\n\n  @Override\n  public ArrayList<PointOfSaleInfo> loadAvailablePOSList() {\n\n    GetPointOfSaleListRequestDocument requestDocument = createGetPointOfSaleListRequestDocument();\n\n    ArrayList<PointOfSaleInfo> pointOfSalesList = new ArrayList<PointOfSaleInfo>();\n    GetPointOfSaleListResponseDocument responseDocument;\n\n    if (!settingService.getBooleanValue(\"testModeActive\", false)) {\n\n      try {\n        responseDocument = stub.getPointOfSaleList(requestDocument, null);\n        GetPointOfSaleListResponse response = responseDocument.getGetPointOfSaleListResponse();\n        PointOfSaleList list = response.getPointOfSaleList();\n\n        if (list != null) {\n          for (PointOfSaleType p : list.getPointOfSaleArray()) {\n            if (p != null) {\n              PointOfSaleInfo info = new PointOfSaleInfo(PointOfSaleInfo.LOADED, p.getDealerNumber(), p.getName());\n              info.setAddress(extractAddress(p.getAddress()));\n              info.setDealerId(p.getDealerNumber());\n              info.setDelearEmailId(p.getEmailAddress());\n              info.setDealerName(p.getName());\n              pointOfSalesList.add(info);\n            }\n          }\n        }\n\n      } catch (RemoteException e) {\n        throw new EsbException(e);\n      } catch (KumsCommonFault e) {\n        throw new EsbException(e);\n      }\n\n    } else {\n      PointOfSaleInfo info = new PointOfSaleInfo();\n\n      info.setStaus(PointOfSaleInfo.LOADED);\n      info.setDealerId(\"Mocked:\");\n      info.setDealerName(\"Mocked: Testh\u00e4ndler 1\");\n      info.setAddress(mockStandardAddress());\n      pointOfSalesList.add(info);\n\n      PointOfSaleInfo info2 = new PointOfSaleInfo();\n\n      info2.setStaus(PointOfSaleInfo.LOADED);\n      info2.setDealerId(\"Mocked:\");\n      info2.setDealerName(\"Mocked: Testh\u00e4ndler 2\");\n      info2.setAddress(mockStandardAddress());\n\n      pointOfSalesList.add(info2);\n\n      PointOfSaleInfo info3 = new PointOfSaleInfo();\n\n      info3.setStaus(PointOfSaleInfo.LOADED);\n      info3.setDealerId(\"Mocked:\");\n      info3.setDealerName(\"Mocked: Testh\u00e4ndler 3\");\n      info3.setAddress(mockStandardAddress());\n\n      pointOfSalesList.add(info3);\n\n    }\n\n    return pointOfSalesList;\n  }\n\n  private GetPointOfSaleListRequestDocument createGetPointOfSaleListRequestDocument() {\n    GetPointOfSaleListRequestDocument newInstance = GetPointOfSaleListRequestDocument.Factory.newInstance();\n    newInstance.addNewGetPointOfSaleListRequest();\n    return newInstance;\n  }\n\n  private StandardAddress extractAddress(Address kumsAddress) {\n    StandardAddress address = new StandardAddress();\n    if (kumsAddress != null) {\n      address.setLkmsId(kumsAddress.getLkmsId());\n      address.setStreet(kumsAddress.getStreet());\n      address.setHouseNumber(kumsAddress.getHouseNumber());\n      address.setBlock(kumsAddress.getBlock());\n      address.setStaircase(kumsAddress.getStaircase());\n      address.setFloorNumber(kumsAddress.getFloorNumber());\n      address.setDoorNumber(kumsAddress.getDoorNumber());\n      address.setAdditional(kumsAddress.getAdditional());\n      address.setPostcode(kumsAddress.getPostcode());\n      address.setCity(kumsAddress.getCity());\n      address.setVillage(kumsAddress.getVillage());\n      address.setCountry(kumsAddress.getCountry());\n    }\n    address.setDataSource(AddressDataSource.KUMS_COMMON_SERVICE);\n    return address;\n  }\n\n  private StandardAddress mockStandardAddress() {\n    StandardAddress address = new StandardAddress();\n    address.setLkmsId(\"1212\");\n    address.setStreet(\"Schuttelstrasse\");\n    address.setHouseNumber(\"23-25A\");\n    address.setBlock(\"25\");\n    address.setStaircase(\"0\");\n    address.setFloorNumber(\"100\");\n    address.setDoorNumber(\"1011\");\n    address.setAdditional(\"\");\n    address.setPostcode(\"1020\");\n    address.setCity(\"Wien\");\n    address.setVillage(\"Wien\");\n    address.setCountry(\"Austria\");\n    address.setDataSource(AddressDataSource.PARTY_SERVICE);\n    return address;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/PartnerCenterLandingPageDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/PartnerCenterLandingPageDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 545,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.rmi.RemoteException;\n\nimport at.a1ta.cuco.core.bean.PWUTokenResponse;\nimport at.a1ta.cuco.core.shared.dto.AccessToken;\nimport at.a1ta.cuco.core.shared.dto.PartnerCenterAccessTokenRequest;\n\nimport com.telekomaustriagroup.esb.landingpagedealer.OrderServiceFault;\n\npublic interface PartnerCenterLandingPageDao {\n\n  public AccessToken getAccessToken(PartnerCenterAccessTokenRequest tokenRequest);\n\n  public PWUTokenResponse validatePWUToken(String token) throws RemoteException, OrderServiceFault;\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BrianCeeQueryOrderDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BrianCeeQueryOrderDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1069,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.esb;\n\nimport at.mobilkom.brian.wsdl.BrianCeeQueryOrderResponseDocument;\n\npublic interface BrianCeeQueryOrderDao {\n\n  /**\n   * Get user data for xplore tv.\n   * \n   * @param ispUid, realm, dealName\n   */\n  BrianCeeQueryOrderResponseDocument getCeeQueryOrderResponse(String ispUid);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BusinessHardwareReplacementDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/BusinessHardwareReplacementDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 263,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.BusinessHardwareReplacement;\n\npublic interface BusinessHardwareReplacementDao {\n\n  public BusinessHardwareReplacement getBusinessHardwareReplacement(long billingAccountNumber);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/PartnerCenterLandingPageDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/esb/PartnerCenterLandingPageDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6624,
    "content": "package at.a1ta.cuco.core.dao.esb;\n\nimport java.rmi.RemoteException;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Repository;\nimport org.springframework.util.Assert;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.cuco.core.bean.PWUTokenResponse;\nimport at.a1ta.cuco.core.shared.dto.AccessToken;\nimport at.a1ta.cuco.core.shared.dto.PartnerCenterAccessTokenRequest;\nimport at.infonova.a1ta.dach.orderdata.CreateTokenForOrderDataRequest;\nimport at.infonova.a1ta.dach.orderdata.CreateTokenForOrderDataRequestDocument;\nimport at.infonova.a1ta.dach.orderdata.CreateTokenForOrderDataResponseDocument;\nimport at.infonova.a1ta.dach.orderdata.DestinationSystemType.Enum;\nimport at.infonova.a1ta.dach.orderdata.GetOrderDataRequest;\nimport at.infonova.a1ta.dach.orderdata.GetOrderDataRequestDocument;\nimport at.infonova.a1ta.dach.orderdata.GetOrderDataResponse;\nimport at.infonova.a1ta.dach.orderdata.GetOrderDataResponseDocument;\nimport at.infonova.a1ta.dach.orderdata.Individual;\nimport at.infonova.a1ta.dach.orderdata.Organisation;\nimport at.infonova.a1ta.dach.orderdata.Party;\nimport at.infonova.a1ta.dach.orderdata.PartyType;\nimport at.infonova.a1ta.dach.orderdata.PhoneNumberType;\nimport at.infonova.a1ta.dach.orderdata.impl.PartyImpl;\n\nimport com.telekomaustriagroup.esb.landingpagedealer.LandingPageDealerStub;\nimport com.telekomaustriagroup.esb.landingpagedealer.OrderServiceFault;\n\n@Repository\npublic class PartnerCenterLandingPageDaoImpl extends BaseEsbClient<LandingPageDealerStub> implements PartnerCenterLandingPageDao {\n\n  private static final Logger logger = LoggerFactory.getLogger(PartnerCenterLandingPageDaoImpl.class);\n\n  @Override\n  public AccessToken getAccessToken(PartnerCenterAccessTokenRequest tokenRequest) {\n    Assert.notNull(tokenRequest, \"Request params must not be null\");\n    AccessToken token = AccessToken.NONE;\n\n    try {\n      token = createAccessTokenFromOrderDataResponseDocument(stub.createTokenForOrderData(createOrderDataRequestDocumentFrom(tokenRequest),\n          null));\n      if (token.isValid()) {\n        token.setTargetSystem(tokenRequest.getTargetSystem());\n      }\n      logger.info(\"Received {} when sending {}.\", new Object[] {token, tokenRequest});\n    } catch (Exception e) {\n      throw new EsbException(\"Error calling LandingPageDealer.createTokenForOrderData\", e);\n    }\n\n    return token;\n  }\n\n  private CreateTokenForOrderDataRequestDocument createOrderDataRequestDocumentFrom(PartnerCenterAccessTokenRequest tokenRequest) {\n    CreateTokenForOrderDataRequestDocument requestDocument = CreateTokenForOrderDataRequestDocument.Factory.newInstance();\n    CreateTokenForOrderDataRequest request = requestDocument.addNewCreateTokenForOrderDataRequest();\n\n    if (tokenRequest.containsParameter(\"ban\")) {\n      request.setBAN(tokenRequest.getParameter(\"ban\"));\n    }\n    if (tokenRequest.containsParameter(\"cc\") || tokenRequest.containsParameter(\"ndc\") || tokenRequest.containsParameter(\"sn\")) {\n      PhoneNumberType msisdn = request.addNewMSISDN();\n      msisdn.setCc(tokenRequest.getCountryCodeAsInt());\n      msisdn.setNdc(tokenRequest.getNationalDestinationCodeAsInt());\n      msisdn.setSn(tokenRequest.getSubscriberNumberAsInt());\n    }\n    if (tokenRequest.containsParameter(\"partyId\")) {\n      Party addNewParty = request.addNewParty();\n      if (\"Per\".equalsIgnoreCase(tokenRequest.getParameter(\"partyType\"))) {\n        addNewParty.setPartyType(PartyType.INDIVIDUAL);\n        addNewParty.addNewIndividual().setPartyId(tokenRequest.getParameter(\"partyId\"));\n      } else {\n        addNewParty.setPartyType(PartyType.ORGANISATION);\n        Organisation addNewOrganisation = addNewParty.addNewOrganisation();\n        addNewOrganisation.setPartyId(tokenRequest.getParameter(\"partyId\"));\n        addNewOrganisation.setName(tokenRequest.getParameter(\"partyName\"));\n      }\n    }\n    if (tokenRequest.containsParameter(\"a1Login\")) {\n      request.setA1Login(tokenRequest.getParameter(\"a1Login\"));\n    }\n    request.setProcessId(tokenRequest.getProcessId());\n    request.setFrontEndSystem(tokenRequest.getSourceSystem());\n    request.setDestinationSystem(Enum.forString(tokenRequest.getTargetSystem()));\n\n    return requestDocument;\n  }\n\n  private AccessToken createAccessTokenFromOrderDataResponseDocument(CreateTokenForOrderDataResponseDocument document) {\n    if (document == null || document.getCreateTokenForOrderDataResponse() == null) {\n      return AccessToken.NONE;\n    }\n    AccessToken token = new AccessToken();\n    token.setToken(document.getCreateTokenForOrderDataResponse().getToken());\n    return token;\n  }\n\n  @Override\n  public PWUTokenResponse validatePWUToken(String token) throws RemoteException, OrderServiceFault {\n    long startMsec = System.currentTimeMillis();\n\n    GetOrderDataRequest req = GetOrderDataRequest.Factory.newInstance();\n    req.setFrontEndSystem(\"cuco\"); // Zitat Mitter Andreas: Feld ist optional, wir haben keine Validierung drauf. W\u00fcrde aber trotzdem\n                                   // vorschlagen, ihr schickt entsprechenden Identifier, damit Betrieb die Requests zuordnen kann.\n    req.setToken(token);\n\n    GetOrderDataRequestDocument reqDoc = GetOrderDataRequestDocument.Factory.newInstance();\n    reqDoc.setGetOrderDataRequest(req);\n\n    startMsec = System.currentTimeMillis();\n\n    GetOrderDataResponseDocument respDoc = stub.getOrderData(reqDoc, null);\n\n    long durationMSec = System.currentTimeMillis() - startMsec;\n\n    GetOrderDataResponse resp = respDoc.getGetOrderDataResponse();\n\n    PWUTokenResponse pwuTokenResponse = new PWUTokenResponse();\n    pwuTokenResponse.setA1Login(resp.getA1Login());\n    pwuTokenResponse.setOrderId(resp.getOrderId());\n    pwuTokenResponse.setRetailerId(resp.getRetailerId());\n    pwuTokenResponse.setToken(resp.getToken());\n    pwuTokenResponse.setFirstName(resp.getLoginFirstName());\n    pwuTokenResponse.setLastName(resp.getLoginLastName());\n    pwuTokenResponse.setPartyId(fetchPartyId(resp));\n    // valid token\n    pwuTokenResponse.setInvokationDuration(durationMSec);\n    return pwuTokenResponse;\n  }\n\n  private String fetchPartyId(GetOrderDataResponse resp) {\n    if (resp.getParty() instanceof PartyImpl) {\n      Individual individual = ((PartyImpl) resp.getParty()).getIndividual();\n      Organisation organisation = ((PartyImpl) resp.getParty()).getOrganisation();\n\n      if (individual != null) {\n        return individual.getPartyId();\n      } else if (organisation != null) {\n        return organisation.getPartyId();\n      }\n    }\n    return null;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/OracleArrayTypeHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/OracleArrayTypeHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1024,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport java.sql.SQLException;\nimport java.util.List;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\nimport com.ibatis.sqlmap.client.extensions.ResultGetter;\n\npublic class OracleArrayTypeHandler implements com.ibatis.sqlmap.client.extensions.TypeHandlerCallback {\n\n  @Override\n  public Object getResult(ResultGetter getter) throws SQLException {\n    List<Object> list;\n    java.sql.Array array = getter.getArray();\n    int baseType = array.getBaseType();\n    if (baseType == java.sql.Types.VARCHAR || baseType == java.sql.Types.NUMERIC) {\n      Object[] elements = (Object[]) array.getArray();\n      list = java.util.Arrays.asList(elements);\n    } else {\n      throw new java.lang.IllegalArgumentException(\"Unknown type (\" + array.getBaseTypeName() + \") for conversion.\");\n    }\n    return list;\n  }\n\n  @Override\n  public void setParameter(ParameterSetter arg0, Object arg1) throws SQLException {}\n\n  @Override\n  public Object valueOf(String arg0) {\n    return null;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/ListStringTypeHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/ListStringTypeHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 974,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport java.sql.SQLException;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.apache.commons.lang.StringUtils;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\nimport com.ibatis.sqlmap.client.extensions.ResultGetter;\n\npublic class ListStringTypeHandler implements com.ibatis.sqlmap.client.extensions.TypeHandlerCallback {\n\n  @Override\n  @SuppressWarnings(\"unchecked\")\n  public List<String> getResult(ResultGetter getter) throws SQLException {\n    String string = getter.getString();\n    return Arrays.asList(string.split(\";\"));\n  }\n\n  @Override\n  @SuppressWarnings(\"unchecked\")\n  public void setParameter(ParameterSetter setter, Object parameter) throws SQLException {\n    List<String> list = (List<String>) parameter;\n    setter.setString(StringUtils.join(list, \";\"));\n\n  }\n\n  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Object valueOf(String string) {\n    return Arrays.asList(string.split(\";\"));\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/YNNullableBooleanTypeHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/YNNullableBooleanTypeHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1110,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport java.sql.SQLException;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\n\n/**\n * @author christoph.strobl@telekom.at\n * \n * \n *         An iBATIS type handler callback for java.lang.Booleans that are mapped to either 'Y' or 'N' in the database.\n *         If a value is something other than 'Y' in the database, including <code>null</code>, the resulting Boolean\n *         will be false.\n * \n *         DB --> Java ---------------- 'J' true null null 'N' false 'blah' false\n * \n *         Java --> DB ---------------- null null false 'N' true 'J'\n */\npublic class YNNullableBooleanTypeHandler extends YNBooleanTypeHandler {\n\n    @Override\n    public Object valueOf(String s) {\n        if (s == null) {\n            return null;\n        }\n        return super.valueOf(s);\n    }\n\n    @Override\n    public void setParameter(ParameterSetter setter, Object parameter) throws SQLException {\n        if (parameter == null) {\n            setter.setNull(java.sql.Types.VARCHAR);\n            return;\n        }\n        super.setParameter(setter, parameter);\n    }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/YNBooleanTypeHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/YNBooleanTypeHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1928,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport java.sql.SQLException;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\nimport com.ibatis.sqlmap.client.extensions.ResultGetter;\nimport com.ibatis.sqlmap.client.extensions.TypeHandlerCallback;\n\n/**\n * An iBATIS type handler callback for java.lang.Booleans that are mapped to either 'Y' or 'N' in the database. If a\n * value is something other than 'Y' in the database, including <code>null</code>, the resulting Boolean will be false.\n * <p>\n * DB --> Java ---------------- 'Y' true null false 'N' false 'blah' false Java --> DB ---------------- null 'N' false 'N' true 'Y'\n */\npublic class YNBooleanTypeHandler implements TypeHandlerCallback {\n\n  /** Indicates Yes or true. */\n  static final String TRUE_STRING = \"J\";\n\n  /** Indicates No or false. */\n  static final String FALSE_STRING = \"N\";\n\n  /**\n   * From Java to DB.\n   */\n  @Override\n  public void setParameter(ParameterSetter setter, Object parameter) throws SQLException {\n    if (parameter == null) {\n      setter.setString(FALSE_STRING);\n      return;\n    }\n\n    final Boolean bool = (Boolean) parameter;\n\n    if (bool.booleanValue()) {\n      setter.setString(TRUE_STRING);\n    } else {\n      setter.setString(FALSE_STRING);\n    }\n  }\n\n  /**\n   * From DB to Java.\n   */\n  @Override\n  public Object getResult(ResultGetter getter) throws SQLException {\n    final String dbValue = trim(getter.getString());\n\n    final Object result = valueOf(dbValue);\n\n    return result;\n  }\n\n  /**\n   * Converts DB value to the Java value.\n   */\n  @Override\n  public Object valueOf(String s) {\n    if (s == null) {\n      return Boolean.FALSE;\n    }\n\n    final String value = trim(s);\n\n    if (TRUE_STRING.equals(value)) {\n      return Boolean.TRUE;\n    }\n\n    return Boolean.FALSE;\n  }\n\n  /**\n   * Trims the String if not null.\n   */\n  static String trim(String string) {\n    return (string == null) ? null : string.trim();\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/IdxStatusDBMappingHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/IdxStatusDBMappingHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1081,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport java.sql.SQLException;\n\nimport org.apache.commons.lang.NotImplementedException;\n\nimport at.a1ta.cuco.core.shared.dto.IndexationStatus;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\nimport com.ibatis.sqlmap.client.extensions.ResultGetter;\nimport com.ibatis.sqlmap.client.extensions.TypeHandlerCallback;\n\npublic class IdxStatusDBMappingHandler implements TypeHandlerCallback {\n\n  /**\n   * From DB to Java.\n   */\n  @Override\n  public Object getResult(ResultGetter getter) throws SQLException {\n    final String dbValue = trim(getter.getString());\n    return valueOf(dbValue);\n  }\n\n  /**\n   * From Java to DB.\n   */\n  @Override\n  public void setParameter(ParameterSetter arg0, Object arg1) throws SQLException {\n    // read only\n    throw new NotImplementedException();\n  }\n\n  /**\n   * Converts DB value to the Java value.\n   */\n  @Override\n  public Object valueOf(String s) {\n    return IndexationStatus.getForDWHValue(s);\n  }\n\n  static String trim(String string) {\n    return (string == null) ? null : string.trim();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/BooleanTypeHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/BooleanTypeHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1538,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport java.sql.SQLException;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\nimport com.ibatis.sqlmap.client.extensions.ResultGetter;\nimport com.ibatis.sqlmap.client.extensions.TypeHandlerCallback;\n\npublic class BooleanTypeHandler implements TypeHandlerCallback {\n\n  /** Indicates 1 or true. */\n  static final String TRUE_STRING = \"1\";\n\n  /** Indicates 0 or false. */\n  static final String FALSE_STRING = \"0\";\n\n  /**\n   * From Java to DB.\n   */\n  @Override\n  public void setParameter(ParameterSetter setter, Object parameter) throws SQLException {\n    if (parameter == null) {\n      setter.setString(FALSE_STRING);\n      return;\n    }\n\n    final Boolean bool = (Boolean) parameter;\n\n    if (bool.booleanValue()) {\n      setter.setString(TRUE_STRING);\n    } else {\n      setter.setString(FALSE_STRING);\n    }\n  }\n\n  /**\n   * From DB to Java.\n   */\n  @Override\n  public Object getResult(ResultGetter getter) throws SQLException {\n    final String dbValue = trim(getter.getString());\n\n    final Object result = valueOf(dbValue);\n\n    return result;\n  }\n\n  /**\n   * Converts DB value to the Java value.\n   */\n  @Override\n  public Object valueOf(String s) {\n    if (s == null) {\n      return Boolean.TRUE;\n    }\n\n    final String value = trim(s);\n\n    if (TRUE_STRING.equals(value)) {\n      return Boolean.TRUE;\n    }\n\n    return Boolean.FALSE;\n  }\n\n  /**\n   * Trims the String if not null.\n   */\n  static String trim(String string) {\n    return (string == null) ? null : string.trim();\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/VIPStatusHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/VIPStatusHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1382,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport java.sql.SQLException;\n\nimport org.apache.commons.lang.NotImplementedException;\n\nimport at.a1ta.cuco.core.shared.dto.VipStatus;\nimport at.a1ta.cuco.core.shared.dto.VipStatus.State;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\nimport com.ibatis.sqlmap.client.extensions.ResultGetter;\nimport com.ibatis.sqlmap.client.extensions.TypeHandlerCallback;\n\npublic class VIPStatusHandler implements TypeHandlerCallback {\n\n  static final String TRUE_STRING = \"J\";\n\n  static final String FALSE_STRING = \"N\";\n\n  /**\n   * From DB to Java.\n   */\n  @Override\n  public Object getResult(ResultGetter getter) throws SQLException {\n    final String dbValue = trim(getter.getString());\n    return valueOf(dbValue);\n  }\n\n  /**\n   * From Java to DB.\n   */\n  @Override\n  public void setParameter(ParameterSetter arg0, Object arg1) throws SQLException {\n    // read only\n    throw new NotImplementedException();\n  }\n\n  /**\n   * Converts DB value to the Java value.\n   */\n  @Override\n  public Object valueOf(String s) {\n    if (s == null) {\n      return new VipStatus(State.UNKNOWN);\n    }\n    final String value = trim(s);\n    if (TRUE_STRING.equals(value)) {\n      return new VipStatus(State.VIP);\n    }\n    return new VipStatus(State.NO_VIP);\n  }\n\n  static String trim(String string) {\n    return (string == null) ? null : string.trim();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/BrianCeeQueryOrderStub.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/BrianCeeQueryOrderStub.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2192,
    "content": "package at.a1ta.cuco.core.dao.util;\n\nimport java.util.Properties;\n\nimport org.apache.axis2.AxisFault;\nimport org.apache.axis2.context.ConfigurationContext;\n\nimport com.telekomaustriagroup.esb.briana1.BrianA1Stub;\n\npublic class BrianCeeQueryOrderStub extends BrianA1Stub {\n\n  public BrianCeeQueryOrderStub() throws AxisFault {\n    super();\n  }\n\n  public BrianCeeQueryOrderStub(ConfigurationContext configurationContext, String httpEndpoint, String username, String pwd, Properties prop) throws AxisFault {\n    super(configurationContext, httpEndpoint, username, pwd, prop);\n  }\n\n  public BrianCeeQueryOrderStub(ConfigurationContext configurationContext, String jmsServer1, String jmsServer2, String username, String pwd, Long defaultTimeoutMillisec, Properties prop)\n      throws AxisFault {\n    super(configurationContext, jmsServer1, jmsServer2, username, pwd, defaultTimeoutMillisec, prop);\n  }\n\n  public BrianCeeQueryOrderStub(ConfigurationContext configurationContext, String jmsServer1, String jmsServer2, String username, String pwd, Long defaultTimeoutMillisec) throws AxisFault {\n    super(configurationContext, jmsServer1, jmsServer2, username, pwd, defaultTimeoutMillisec);\n  }\n\n  public BrianCeeQueryOrderStub(ConfigurationContext configurationContext, String httpEndpoint, String username, String pwd) throws AxisFault {\n    super(configurationContext, httpEndpoint, username, pwd);\n  }\n\n  public BrianCeeQueryOrderStub(String httpEndpoint, String username, String pwd, Properties prop) throws AxisFault {\n    super(httpEndpoint, username, pwd, prop);\n  }\n\n  public BrianCeeQueryOrderStub(String jmsServer1, String jmsServer2, String username, String pwd, Long defaultTimeoutMillisec, Properties prop) throws AxisFault {\n    super(jmsServer1, jmsServer2, username, pwd, defaultTimeoutMillisec, prop);\n  }\n\n  public BrianCeeQueryOrderStub(String jmsServer1, String jmsServer2, String username, String pwd, Long defaultTimeoutMillisec) throws AxisFault {\n    super(jmsServer1, jmsServer2, username, pwd, defaultTimeoutMillisec);\n  }\n\n  public BrianCeeQueryOrderStub(String httpEndpoint, String username, String pwd) throws AxisFault {\n    super(httpEndpoint, username, pwd);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/PhoneNumberParser.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/util/PhoneNumberParser.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 12124,
    "content": "/*\n * Copyright 2009 - 2014 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.util;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.commons.lang.ArrayUtils;\nimport org.apache.commons.lang.StringUtils;\n\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic class PhoneNumberParser {\n\n  private static final String ILLEGAL_CHARS = \"() -\\\\/.\";\n  private List<String> countryCodes;\n  private List<String> onkzs;\n  private List<String> specialOnkzs;\n  private PhoneNumberDao phonenumberDao;\n\n  private static final String DIGITS = \"0123456789\";\n  private static final String DEFAULT_COUNTRY_CODE = \"43\";\n  private static final String AUSTRIAN_PREFIX = \"00\";\n\n  public PhoneNumberParser(final PhoneNumberDao phonenumberDao) {\n    this.phonenumberDao = phonenumberDao;\n    countryCodes = phonenumberDao.getCountryCodes();\n    onkzs = phonenumberDao.getOnkzs();\n    specialOnkzs = phonenumberDao.getSpecialOnkzs();\n  }\n\n  /**\n   * Parses a given international phone number\n   * \n   * @param originalInput phone number string\n   * @return field[0]=CountryCode, field[1]=Oknz, field[2]=Number OR null if the string could not be parsed\n   */\n  public PhoneNumberStructure parse(final String originalInput) {\n    final String[] result = parse(originalInput, true);\n    return result == null ? null : new PhoneNumberStructure(result[0], result[1], result[2], result[3]);\n  }\n\n  /**\n   * Parses a given international phone number\n   * \n   * @param phoneNumber phone number string\n   * @param useMissingPlusLogic indicates if after a failed parsing process the logic should check for a missing \"+\"\n   *          e.g. 43 732 1234 is not parseable as the format is invalid. Attaching a \"+\" will lead to a parseable string\n   *          as +43 732 1234 is a valid format\n   * @return field[0]=CountryCode, field[1]=Oknz, field[2]=Number OR null if the string could not be parsed\n   */\n  private String[] parse(final String phoneNumber, final boolean useMissingPlusLogic) {\n    try {\n      String countryCode = null;\n      String onkz = null;\n      String number = null;\n      String extension = null;\n\n      // remove whitespaces and other illeagal characters\n      final String trimmedAndCleaned = trimAndClean(phoneNumber);\n\n      // split after country code\n      final String[] countryCodeAndNumber = splitAfterCountryCode(trimmedAndCleaned, countryCodes); // [0]=countryCode [1]=the rest (without\n                                                                                                    // the\n      // country code)\n      countryCode = countryCodeAndNumber[0]; // e.g. 43\n      final String numberWithoutCountryCode = countryCodeAndNumber[1]; // e.g. 664 123456\n\n      // get the onkz\n      final String[] onkzAndNumber = splitAfterOnkz(numberWithoutCountryCode, onkzs, specialOnkzs); // [0]=onkz [1]=the rest (without the\n                                                                                                    // onkz)\n      onkz = onkzAndNumber[0]; // e.g. 664\n      final String numberAndExt = onkzAndNumber[1]; // e.g. 123456\n\n      // check for alph. chars\n      if (containsNonDigits(numberAndExt)) {\n        return null;\n      }\n\n      if (onkz == null && useMissingPlusLogic) {\n        // assertion: parse failed; usemissingPlusLogic flag indicates to perform another parsing logic...\n        // the whole number will be packaged inside the number variable; a '+' might be missing\n        // call the parse method with useMissingPlusLogic==false to avoid endless recursive calling of the method\n        return parse(\"+\" + phoneNumber, false);\n      }\n\n      // assertion: number - only has digits AND may include an extension\n\n      // austrian phone numbers have max. 7 digits the rest are surely extension digits; e.g. 123456789 -> 89 is the exension\n      // performance: ... number = numberAndExt.length() > 7 ? numberAndExt.substring(0, 7) : numberAndExt;\n      // assertion: number is now max 7 digits long\n\n      // look for an matching number in the database\n      number = findNumberInDatabase(numberAndExt, onkz);\n      if (number == null) {\n\n        if (useMissingPlusLogic) {\n          return parse(\"+\" + phoneNumber, false);\n        }\n\n        return null;\n      }\n\n      // assertion: number is now max 7 digits long AND does not contain an extension\n\n      extension = calculateExtension(numberAndExt, number);\n\n      final String[] phoneNumberParts = new String[] {countryCode, onkz, number, extension};\n      return isFullyParsed(phoneNumberParts) ? phoneNumberParts : null; // return all fields or nothing (null)\n    } catch (Exception e) {\n      return null;\n    }\n  }\n\n  /**\n   * Calculates the extension part\n   * \n   * @param numberAndExt e.g. 123456\n   * @param number e.g. 1234\n   * @return e.g. 56\n   */\n  private static String calculateExtension(final String numberAndExt, final String number) {\n    if (number.length() < numberAndExt.length()) {\n      return numberAndExt.substring(number.length());\n    }\n    return StringUtils.EMPTY; // No extension\n  }\n\n  private String findNumberInDatabase(final String number, final String onkz) {\n    final List<String> possibleNumbers = generateListOfPossibleNumbers(number);\n    return phonenumberDao.findByTN(possibleNumbers, onkz);\n  }\n\n  /**\n   * e.g. for number = 1234567 the result list of possibleNumbers will be [\"1234567\", \"123456\", \"12345\", \"1234\", \"123\"]\n   * \n   * @param number\n   * @return\n   */\n  static List<String> generateListOfPossibleNumbers(final String number) {\n    final List<String> possibleNumbers = new ArrayList<String>(number.length());\n    for (int i = number.length(); i >= 3; i--) {\n      possibleNumbers.add(number.substring(0, i));\n    }\n    return possibleNumbers;\n  }\n\n  /**\n   * Checks if a number string has any non digital (a-zA-Z etc.) character\n   * \n   * @param input string\n   * @return true if it contains any non digital chars; false otherwise\n   */\n  static boolean containsNonDigits(final String input) {\n    if (StringUtils.isBlank(input)) {\n      return false;\n    }\n    return StringUtils.containsNone(input, DIGITS);\n  }\n\n  /**\n   * Determines if the parsed result is complete (every field available: countrycode and onkz and number and extension\n   * \n   * @param phoneNumberParts parsed phone number result\n   * @return true if complete; false othwerwise\n   */\n  static boolean isFullyParsed(final String[] phoneNumberParts) {\n    return (phoneNumberParts != null) && (phoneNumberParts.length == 4) && !ArrayUtils.contains(phoneNumberParts, null);\n  }\n\n  /**\n   * Trims and cleans a given string from whitespaces, brakes and other illegal chars\n   * \n   * @param originalInput\n   * @return trimmed and cleaned string\n   */\n  static String trimAndClean(final String phoneNumber) {\n    final String zeroInBrackets = \"\\\\(\\\\s*0\\\\s*\\\\)\"; // bracket, whitespaces, 0, whitespaces, bracket\n    String cleanPhoneNumber = phoneNumber.replaceAll(zeroInBrackets, StringUtils.EMPTY);\n\n    return StringUtils.replaceChars(cleanPhoneNumber, ILLEGAL_CHARS, null);\n  }\n\n  static String[] splitAfterOnkz(final String phoneNumberWithoutCountryCode, final List<String> onkzs, final List<String> specialOnkzs) {\n    String s = phoneNumberWithoutCountryCode;\n\n    // Search for special ONKZ (starting with zero, e.g. 0800 national free calls)\n    for (final String onkz : specialOnkzs) {\n      if (s.startsWith(onkz)) {\n        return new String[] {onkz, s.substring(onkz.length())}; // returns the country code and the phone number without the country code\n      }\n    }\n\n    // assertion: the number does not start with an special ONKZ (starting with a zero);\n\n    // TODO: I think there shouldn't be any case with a leading zero, see comment above\n    s = StringUtils.removeStart(s, \"0\"); // remove a possible leading zero character\n\n    for (final String onkz : onkzs) {\n      if (s.startsWith(onkz)) {\n        return new String[] {onkz, s.substring(onkz.length())}; // returns the ONKZ and the phone number without the ONKZ\n      }\n    }\n\n    return new String[] {null, s};\n  }\n\n  static String[] splitAfterCountryCode(final String phoneNumber, final List<String> countryCodes) {\n    String withoutPrefix = null;\n    if (phoneNumber.startsWith(\"+\")) {\n      withoutPrefix = phoneNumber.substring(1);\n    } else if (phoneNumber.startsWith(AUSTRIAN_PREFIX)) {\n      withoutPrefix = phoneNumber.substring(AUSTRIAN_PREFIX.length());\n    }\n\n    if (withoutPrefix != null) {\n      for (final String countryCode : countryCodes) {\n        if (withoutPrefix.startsWith(countryCode)) {\n          return new String[] {countryCode, withoutPrefix.substring(countryCode.length())}; // returns the country code and the phone number\n          // without the country code\n        }\n      }\n    }\n\n    return new String[] {DEFAULT_COUNTRY_CODE, phoneNumber};\n  }\n\n  // not in use - alternative logic for parsing\n  @SuppressWarnings(\"unused\")\n  private static String[] parseAlternative(final String orig) {\n    String transformed = transform(orig);\n    final String[] parts = transformed.split(\"@\");\n\n    if (parts.length < 2) {\n      return null;\n    }\n    if (parts.length == 2) {\n      final String countryCode = DEFAULT_COUNTRY_CODE;\n      String onkz = parts[0]; // part[0] is the onkz\n      onkz = removeLeadingZero(onkz);\n      return new String[] {countryCode, onkz, parts[1]};\n    }\n    // more than 2 parts\n    if (parts[0].charAt(0) == '0') {\n      final String countryCode = DEFAULT_COUNTRY_CODE;\n      String onkz = parts[0]; // part[0] is the onkz\n      onkz = removeLeadingZero(onkz);\n      final String number = arrayToString(parts, \"\", 1, parts.length - 1);\n      return new String[] {countryCode, onkz, number};\n    }\n    final String countryCode = parts[0]; // part[0] is the country code\n    String onkz = parts[1]; // part[1] is the onkz\n    onkz = removeLeadingZero(onkz);\n    final String number = arrayToString(parts, \"\", 2, parts.length - 1);\n    return new String[] {countryCode, onkz, number};\n  }\n\n  // not in use - alternative logic for parsing\n  private static String removeLeadingZero(final String onkz) {\n    return onkz.replaceAll(\"^0+\", \"\");\n  }\n\n  // not in use - alternative logic for parsing\n  private static String arrayToString(final String[] parts, final String seperator, final int startIdx, final int endIdx) {\n    final StringBuilder sb = new StringBuilder();\n    for (int i = startIdx; i <= endIdx; i++) {\n      sb.append(parts[i]);\n      sb.append(seperator);\n    }\n    return sb.toString();\n  }\n\n  // not in use - alternative logic for parsing\n  private static String transform(final String s) {\n    String str = s.trim(); // trim\n    str = str.replaceFirst(\"00\", \"\"); // replace first 00 (prefix)\n    str = str.replaceFirst(\"\\\\+\", \"\"); // replace first + for country code\n    str = str.replaceAll(\"\\\\(0\\\\)\", \"\");\n    str = str.replaceAll(\"\\\\(\", \"\");\n    str = str.replaceAll(\"\\\\)\", \"\");\n    str = str.replaceAll(\"\\\\s+|-+|\\\\\\\\|/|\\\\.\", \"@\"); // seperator\n    return str;\n  }\n\n  public static PhoneNumberStructure parseSimple(final String phoneNumber) {\n    final String[] parts = phoneNumber.split(\" \");\n    final PhoneNumberStructure structure = new PhoneNumberStructure();\n    structure.setCountryCode(parts[0]);\n    structure.setOnkz(parts[1]);\n    structure.setNumber(parts[2]);\n    if (parts.length == 4) {\n      structure.setExtension(parts[3]);\n    }\n    return structure;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/cusco/CusCoResponse.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/cusco/CusCoResponse.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1279,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.cusco;\n\npublic class CusCoResponse {\n\n  private String status;\n  private byte[] rawData;\n  private String jobId;\n\n  public void setStatus(String status) {\n    this.status = status;\n  }\n\n  public String getStatus() {\n    return status;\n  }\n\n  public void setRawData(byte[] rawData) {\n    this.rawData = rawData;\n  }\n\n  public byte[] getRawData() {\n    return rawData;\n  }\n\n  public void setJobId(String jobId) {\n    this.jobId = jobId;\n  }\n\n  public String getJobId() {\n    return jobId;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/cusco/CusCoDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/cusco/CusCoDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1179,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.cusco;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.data.cusco.http.CusCoHttpOperations;\nimport at.a1ta.cuco.core.shared.dto.Customer;\n\npublic interface CusCoDao {\n\n  CusCoResponse checkStatusForSigned(String jobId);\n\n  CusCoHttpOperations getOperations();\n\n  CusCoResponse prepareForSign(Customer customer, UserInfo userInfo, String contactPerson, String templateId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/cusco/impl/HttpPostCusCoDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/cusco/impl/HttpPostCusCoDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9287,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.cusco.impl;\n\nimport java.io.IOException;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.apache.commons.lang.time.FastDateFormat;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.ParseException;\nimport org.apache.http.util.EntityUtils;\nimport org.joda.time.DateTime;\nimport org.springframework.beans.factory.InitializingBean;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.dao.DataRetrievalFailureException;\nimport org.springframework.jdbc.datasource.lookup.DataSourceLookupFailureException;\nimport org.springframework.stereotype.Repository;\nimport org.springframework.util.Assert;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.data.cusco.CusCoConfigurtationBean;\nimport at.a1ta.bite.data.cusco.CusCoMessage;\nimport at.a1ta.bite.data.cusco.CusCoMessageBuilder;\nimport at.a1ta.bite.data.cusco.http.CusCoHttpOperations;\nimport at.a1ta.bite.data.cusco.http.ResponseMapper;\nimport at.a1ta.cuco.core.dao.cusco.CusCoDao;\nimport at.a1ta.cuco.core.dao.cusco.CusCoResponse;\nimport at.a1ta.cuco.core.shared.dto.Customer;\n\n/**\n * provide access to cusco via http\n * <strong>error case</error>\n * \n * <pre>\n * <Error>\n *   <Number>8017</Number>\n *   <Message>\n *     Error message Text\n *   </Message>\n * </Error>\n * </pre>\n */\n@Repository\npublic class HttpPostCusCoDao implements CusCoDao, InitializingBean {\n\n  private static final String OP_PREPARE_FOR_SIGN = \"PrepareForSign\";\n  private static final String OP_CHECK_STATUS_FOR_SIGNED = \"CheckStatusForSigned\";\n  private static final Pattern XML_STATUS_PATTERN = Pattern.compile(\"<Status>(.+?)</Status>\");\n  private static final Pattern XML_ERROR_PATTERN = Pattern.compile(\"<Error>(.+?)</Error>\");\n  private static final FastDateFormat DATEFORMAT = FastDateFormat.getInstance(\"dd.MM.yyyy\");\n\n  private CusCoHttpOperations operations;\n  private CusCoConfigurtationBean config;\n  private String endpoint;\n\n  public HttpPostCusCoDao() {\n\n  }\n\n  @Override\n  public CusCoResponse prepareForSign(Customer customer, UserInfo userInfo, String contactPerson, String templateId) {\n    final CusCoMessage message = new CusCoMessageBuilder(config).createForOperation(OP_PREPARE_FOR_SIGN);\n    message.setTemplateId(templateId);\n    message.setOutputChannel(\"Brief\");\n    message.setStatusReportId(\"12354\");\n\n    appendMessageData(customer, userInfo, contactPerson, message);\n\n    CusCoResponse response = operations.sendMessage(message, getEndpoint() + \"/\" + OP_PREPARE_FOR_SIGN, new ResponseMapper<CusCoResponse>() {\n\n      @Override\n      public CusCoResponse createResponse(HttpResponse httpResponse) {\n        HttpEntity entity = httpResponse.getEntity();\n        assertHttpStatusCode(httpResponse, 200);\n        assertMimeType(httpResponse, \"application/pdf\");\n\n        CusCoResponse response = new CusCoResponse();\n        response.setJobId(message.getJobId());\n        response.setStatus(Integer.toString(httpResponse.getStatusLine().getStatusCode()));\n        try {\n          response.setRawData(EntityUtils.toByteArray(entity));\n        } catch (IOException e) {\n          throw new DataRetrievalFailureException(\"Cannot read http response\", e);\n        }\n\n        return response;\n      }\n\n    });\n\n    return response;\n  }\n\n  void appendMessageData(Customer customer, UserInfo userInfo, String contactPerson, CusCoMessage message) {\n    Assert.notNull(customer);\n    Assert.notNull(userInfo);\n\n    message.put(\"PartyId\", Long.toString(customer.getId()));\n    message.put(\"PartyBirthdate\", customer.getBirthdate() != null ? DATEFORMAT.format(customer.getBirthdate()) : \"\");\n    if (StringUtils.equalsIgnoreCase(\"Firma\", customer.getSalutation())) {\n      message.put(\"CustomerIsCompany\", Boolean.toString(true));\n      message.put(\"ContractCompNumber\", customer.getCommercialRegisterNumber());\n    } else {\n      message.put(\"CustomerIsCompany\", Boolean.toString(false));\n    }\n    message.put(\"ContractTitle\", customer.getTitle());\n    message.put(\"ContractSalutation\", customer.getSalutation());\n    message.put(\"ContractFirstName\", customer.getFirstname());\n    message.put(\"ContractLastName\", customer.getLastname());\n    message.put(\"ContractStreet\", customer.getStreet());\n    message.put(\"ContractHousenr\", customer.getHousenumber());\n    message.put(\"ContractCountry\", customer.getCountry());\n    message.put(\"ContractZipCode\", customer.getPoBox());\n    message.put(\"ContractCity\", customer.getCity());\n    message.put(\"DealerId\", userInfo.getUsername());\n    message.put(\"DealerSalesPerson\", userInfo.getName());\n    message.put(\"ContactPersonFullName\", contactPerson);\n    message.put(\"ContractLastChangeStr\", DateTime.now().toString(\"dd.MM.yyyy\"));\n    message.put(\"DealerCity\", userInfo.getBiteUser().getManagementLevel1OrgUnitDescription());\n  }\n\n  private void assertNonErrorResponse(String rawData) {\n    final Matcher matcher = XML_ERROR_PATTERN.matcher(rawData);\n    if (matcher.find()) {\n      throw new DataRetrievalFailureException(matcher.group(1));\n    }\n  }\n\n  /**\n   * @see at.a1ta.cuco.core.dao.cusco.CusCoDao#checkStatusForSigned(java.lang.String)\n   *      parses the http response of the returned entity\n   * \n   *      <pre>\n   *  <StatusForSigned>\n   *    <Status>Unknown</Status>\n   *    <StatusId>0</StatusId>\n   *  </StatusForSigned>\n   * </pre>\n   */\n  @Override\n  public CusCoResponse checkStatusForSigned(String jobId) {\n    Assert.hasText(jobId);\n    CusCoMessage message = new CusCoMessageBuilder(config).createForOperation(OP_CHECK_STATUS_FOR_SIGNED, jobId);\n    String url = getEndpoint() + \"/\" + OP_CHECK_STATUS_FOR_SIGNED;\n    CusCoResponse response = operations.sendMessage(message, url, new ResponseMapper<CusCoResponse>() {\n\n      @Override\n      public CusCoResponse createResponse(HttpResponse httpResponse) {\n        HttpEntity entity = httpResponse.getEntity();\n        assertHttpStatusCode(httpResponse, 200);\n        assertMimeType(httpResponse, \"text/xml\");\n\n        CusCoResponse response = new CusCoResponse();\n\n        try {\n          String rawData = EntityUtils.toString(entity);\n          assertNonErrorResponse(rawData);\n          final Matcher matcher = XML_STATUS_PATTERN.matcher(rawData);\n          matcher.find();\n          response.setStatus(matcher.group(1));\n        } catch (ParseException e) {\n          throw new DataRetrievalFailureException(\"Cannot parse http response\", e);\n        } catch (IOException e) {\n          throw new DataRetrievalFailureException(\"Cannot read http response\", e);\n        }\n\n        return response;\n      }\n\n    });\n\n    return response;\n  }\n\n  private void assertMimeType(HttpResponse httpResponse, String mimeType) {\n    HttpEntity entity = httpResponse.getEntity();\n    if (entity != null) {\n      if (!StringUtils.startsWithIgnoreCase(entity.getContentType().getValue(), mimeType)) {\n        EntityUtils.consumeQuietly(entity);\n        throw new DataRetrievalFailureException(\"Expected MIME Type '\" + mimeType + \"' but was \" + httpResponse.getEntity().getContentType().getValue());\n      }\n    }\n  }\n\n  private void assertHttpStatusCode(HttpResponse httpResponse, int statusCode) {\n    if (httpResponse.getStatusLine().getStatusCode() != statusCode) {\n      HttpEntity entity = httpResponse.getEntity();\n      if (entity != null) {\n        String message = \"\";\n        try {\n          message = EntityUtils.toString(entity);\n        } catch (ParseException e) {\n          throw new DataSourceLookupFailureException(e.getMessage(), e);\n        } catch (IOException e) {\n          throw new DataSourceLookupFailureException(e.getMessage(), e);\n        }\n        throw new DataSourceLookupFailureException(\"Unable to connect to cusco service. Returned HTTP-\" + httpResponse.getStatusLine().getStatusCode() + \"\\r\\n\" + message);\n      }\n    }\n  }\n\n  @Override\n  public CusCoHttpOperations getOperations() {\n    return this.operations;\n  }\n\n  @Autowired\n  public void setOperations(CusCoHttpOperations operations) {\n    this.operations = operations;\n  }\n\n  @Autowired(required = false)\n  public void setConfig(CusCoConfigurtationBean config) {\n    this.config = config;\n  }\n\n  @Override\n  public void afterPropertiesSet() throws Exception {\n    if (config == null) {\n      this.config = new CusCoConfigurtationBean(\"Test\", \"test\");\n    }\n  }\n\n  public void setEndpoint(String endpoint) {\n    this.endpoint = endpoint;\n  }\n\n  public String getEndpoint() {\n    return endpoint;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/solr/SolrPartyRepository.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/solr/SolrPartyRepository.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6187,
    "content": "package at.a1ta.cuco.core.dao.solr;\n\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.apache.commons.lang.NotImplementedException;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.util.Assert;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.bite.data.solr.core.query.BasicQuery;\nimport at.a1ta.bite.data.solr.core.query.Criteria;\nimport at.a1ta.bite.data.solr.core.query.Field;\nimport at.a1ta.bite.data.solr.core.query.Query;\nimport at.a1ta.bite.data.solr.core.query.result.FacetResult;\nimport at.a1ta.bite.data.solr.repository.support.SimpleSolrRepository;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.SimplePage;\nimport at.a1ta.cuco.core.shared.dto.Tupel;\n\nimport com.codahale.metrics.annotation.Metered;\n\npublic class SolrPartyRepository extends SimpleSolrRepository<Party, Long> implements PartyDao {\n\n  private static final int FACET_LIMIT = 5;\n\n  @Override\n  public List<Party> loadParties(List<Long> partyIds) {\n    Query query = SolrPartyQueryHelper.convertToFindCustomersByIdQuery(partyIds);\n    return getSolrTemplate().executeListQuery(query, Party.class).getContent();\n  }\n\n  @Override\n  public Party findOne(Long id) {\n    return loadParty(id);\n  }\n\n  @Override\n  @Metered(name = \"CustomerLoad\", absolute = true)\n  public Party loadParty(Long partyId) {\n    Assert.notNull(partyId);\n    return getSolrTemplate().executeObjectQuery(new BasicQuery(new Criteria(SolrPartyQuery.SearchField.CUSTOMER_NUMBER).is(partyId)), Party.class);\n  }\n\n  @Override\n  @Metered(name = \"CustomerSearch\", absolute = true)\n  public SimplePage<Party> search(PartySearch customerSearch, int maxResults) {\n    Page<Party> page = search(customerSearch, new PageRequest(0, maxResults));\n\n    ArrayList<Party> list = new ArrayList<Party>();\n    list.addAll(page.getContent());\n\n    SimplePage<Party> result = new SimplePage<Party>();\n    result.setContent(list);\n    result.setCount(page.getTotalElements());\n    return result;\n  }\n\n  public Page<Party> search(PartySearch customerSearch, Pageable pageable) {\n    Query query = SolrPartyQueryHelper.convertToQuery(customerSearch);\n    query.setPageRequest(pageable);\n    return getSolrTemplate().executeListQuery(query, Party.class);\n  }\n\n  @Override\n  public List<FacetResult> facetedSearch(PartySearch customerSearch, Field facetField) {\n    Query query = SolrPartyQueryHelper.convertToQuery(customerSearch);\n    query.addFacetField(facetField);\n    query.setFacetLimit(FACET_LIMIT);\n    return getSolrTemplate().executeFacetQuery(query);\n  }\n\n  @Override\n  public List<Party> getCustomers4Header(long headerId, int skip, int maxResults) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public int countCustomers4Header(long headerId) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public boolean isSubsidised(long customerId, String[] subsidisedTarifs) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public List<String> getAllSegments() {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public void saveCucoCustomer(Party cucoCustomer) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public List<Party> getHierarchyForParty(long partyId) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public int loadNumberOfCustomersForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithChurnForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithFlashInfosForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithVIPForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public Map<BigDecimal, BigDecimal> loadNumberOfCustomersByTypeForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public Map<String, BigDecimal> loadNumberOfCustomersByWorthclassForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public List<Tupel<Long, BigDecimal>> loadNumberOfCustomersTurnoverForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public List<Long> getCustomerIdsForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public SearchResult<Party> filterCustomersForSupportUser(CustomerFilter customerFilter, String username) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public List<Party> filterCustomersForSupportUserUnlimited(CustomerFilter customerFilter, String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public List<Party> loadPartiesOfFlashInfo(Long flashInfoId, String username) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public SimplePage<Party> searchNonCustomer(PartySearch partySearch, int maxResults) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public void insertNonCustomerContact(Party party) {\n    throw new NotImplementedException();\n\n  }\n\n  @Override\n  public void markNonCustomerMerged(Party party) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public void mergeNonCustomerAndTransferOffers(Party party) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public SimplePage<Party> searchNonCustomerFull(PartySearch partySearch, int maxResults) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithIndexationForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithVBMForSupportUser(String uUser) {\n    throw new NotImplementedException();\n  }\n\n  @Override\n  public String getPartyIdForQuoteNumber(String offerNumber) {\n    throw new NotImplementedException();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/solr/SolrPartyQueryHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/solr/SolrPartyQueryHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6014,
    "content": "package at.a1ta.cuco.core.dao.solr;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.regex.Pattern;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.springframework.util.Assert;\n\nimport at.a1ta.bite.data.solr.core.query.Criteria;\nimport at.a1ta.bite.data.solr.core.query.Field;\nimport at.a1ta.bite.data.solr.core.query.Query;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\n\npublic final class SolrPartyQueryHelper {\n\n  private static final Pattern RESERVED_CHARS_PATTERN = Pattern.compile(\"\\\\p{Punct}\");\n  private static final Pattern FULLTEXT_EXCLUSION_PATTERN = Pattern.compile(\"\\\\b10{0,2}\\\\b|\\\\b43\\\\b\");\n  private static final Criteria ANY = new Criteria(Criteria.WILDCARD).expression(Criteria.WILDCARD);\n\n  private SolrPartyQueryHelper() {}\n\n  public static synchronized Query convertToFindCustomersByIdQuery(List<Long> ids) {\n    Assert.notNull(ids, \"Cannot construct query for null.\");\n    Assert.notEmpty(ids, \"Cannot load empty list of ids.\");\n\n    Query query = new SolrPartyQuery();\n    Criteria criteria = new Criteria(SolrPartyQuery.SearchField.CUSTOMER_NUMBER);\n    criteria.is(ids.get(0));\n\n    if (ids.size() > 1) {\n      for (int i = 1; i < ids.size(); i++) {\n        criteria = criteria.or(SolrPartyQuery.SearchField.CUSTOMER_NUMBER).is(ids.get(i));\n      }\n    }\n    query.addCriteria(criteria);\n    return query;\n  }\n\n  public static synchronized Query convertToQuery(PartySearch searchCriteria) {\n    Assert.notNull(searchCriteria, \"Parameter searchCriteria must not be null.\");\n    return createQuery(searchCriteria);\n  }\n\n  private static Query createQuery(PartySearch searchCriteria) {\n    Query query = new SolrPartyQuery();\n    if (searchCriteria.isFulltext()) {\n      addFulltextCriteria(searchCriteria, query);\n    } else {\n      addCriterias(searchCriteria, query);\n    }\n    return query;\n  }\n\n  private static void addFulltextCriteria(PartySearch searchCriteria, Query query) {\n    String searchString = filterSpecialCharactersForSearch(searchCriteria.getFulltextTerm());\n    searchString = filterSearchValueForFullTextSearch(searchString);\n\n    Criteria fulltextCriteria = new Criteria(SolrPartyQuery.SearchField.FULLTEXT);\n    if (StringUtils.isNotBlank(searchString)) {\n      fulltextCriteria = splitAndSetCriteriaValue(fulltextCriteria, StringUtils.lowerCase(searchString));\n    } else {\n      fulltextCriteria = ANY;\n    }\n    query.addCriteria(fulltextCriteria);\n  }\n\n  private static void addCriterias(PartySearch searchCriteria, Query query) {\n    List<Criteria> criterias = extractCriteriaList(searchCriteria);\n    if (!criterias.isEmpty()) {\n      for (Criteria criteria : criterias) {\n        if (criteria != null) {\n          query.addCriteria(criteria);\n        }\n      }\n    } else {\n      query.addCriteria(ANY);\n    }\n  }\n\n  static List<Criteria> extractCriteriaList(PartySearch searchCriteria) {\n    if (StringUtils.isNotBlank(searchCriteria.getAonAccountNumber())) {\n      throw new IllegalArgumentException(\"Searching for 'AON Account Number' is not supported.\");\n    }\n\n    List<Criteria> criterias = new ArrayList<Criteria>(12);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.FIRSTNAME, searchCriteria.getFirstName(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.LASTNAME, searchCriteria.getLastName(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.STREET, searchCriteria.getStreet(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.POSTCODE, searchCriteria.getPostcode(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.HOUSENUMBER, searchCriteria.getHouseNumber(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.CITY, searchCriteria.getCity(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.CUSTOMER_NUMBER, searchCriteria.getId(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.BAN, searchCriteria.getBillingAccountNumber(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.PHONE_SUBSCRIBER_NUMBER, searchCriteria.getCallNumber(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.PHONE_DESTINATION_CODE, searchCriteria.getOkz(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.PHONE_COUNTRY_CODE, searchCriteria.getLkz(), criterias);\n    lowerAndAppendCriteria(SolrPartyQuery.SearchField.COMMERCIAL_REGISTER_NUMBER, searchCriteria.getCommercialRegisterNumber(), criterias);\n\n    return criterias;\n  }\n\n  private static void lowerAndAppendCriteria(Field field, Object value, List<Criteria> criterias) {\n    if (value != null) {\n      if (value instanceof String) {\n        String searchString = filterSpecialCharactersForSearch((String) value);\n        if (StringUtils.isNotBlank(searchString)) {\n          criterias.add(splitAndSetCriteriaValue(new Criteria(field), StringUtils.lowerCase(searchString)));\n        }\n        return;\n      }\n      criterias.add(new Criteria(field).is(value));\n    }\n  }\n\n  static Criteria splitAndSetCriteriaValue(Criteria criteria, String value) {\n    if (!StringUtils.contains(value, Criteria.CRITERIA_VALUE_SEPERATOR)) {\n      return criteria.startsWith(value);\n    }\n    String strippedValue = StringUtils.strip(value);\n    for (String criteriaFragment : StringUtils.split(strippedValue)) {\n      criteria.startsWith(criteriaFragment);\n    }\n    // the above for statement can be written as expression too, but be aware that\n    // value escaping will not work in that case\n    // criteria.expression(\"(\"+StringUtils.replace(strippedValue, Criteria.CRITERIA_VALUE_SEPERATOR,\n    // \"*\"+Criteria.CRITERIA_VALUE_SEPERATOR)+\"*)\");\n    // @date: 2012-04-11\n    return criteria;\n  }\n\n  private static String filterSpecialCharactersForSearch(String value) {\n    return RESERVED_CHARS_PATTERN.matcher(value).replaceAll(\" \");\n  }\n\n  private static String filterSearchValueForFullTextSearch(String searchString) {\n    return FULLTEXT_EXCLUSION_PATTERN.matcher(searchString).replaceAll(StringUtils.EMPTY);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/solr/SolrPartyRepositoryWithPhoneNumbers.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/solr/SolrPartyRepositoryWithPhoneNumbers.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2962,
    "content": "package at.a1ta.cuco.core.dao.solr;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.data.domain.Pageable;\n\nimport at.a1ta.bite.data.solr.core.query.Query;\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic class SolrPartyRepositoryWithPhoneNumbers extends SolrPartyRepository {\n\n  static final int MAX_LOOP = 3;\n\n  private PhoneNumberDao phoneNumberDao;\n\n  @Override\n  public Page<Party> search(PartySearch customerSearch, Pageable pageable) {\n    if (customerSearch.getPhoneNumber() != null) {\n      final PhoneNumberStructure phoneNumberStructure = parsePhoneNumber(customerSearch);\n\n      if (phoneNumberStructure == null) {\n        return new PageImpl<Party>(Collections.<Party> emptyList());\n      }\n\n      customerSearch.setLkz(phoneNumberStructure.getCountryCode());\n      customerSearch.setOkz(phoneNumberStructure.getOnkz());\n      customerSearch.setCallNumber(phoneNumberStructure.getNumber());\n    }\n\n    Query query = SolrPartyQueryHelper.convertToQuery(customerSearch);\n    query.setPageRequest(pageable);\n    // grouping takes a lot of time => filter result in code (10 times faster)\n    // query.addGroupByField(SolrPartyQuery.SearchField.CUSTOMERNUMBER);\n    return rippleLoad(query, pageable);\n  }\n\n  private PhoneNumberStructure parsePhoneNumber(PartySearch partySearch) {\n    return phoneNumberDao.parse(partySearch.getPhoneNumber());\n  }\n\n  private Page<Party> rippleLoad(Query query, Pageable pageable) {\n    Page<Party> page = getSolrTemplate().executeListQuery(query, Party.class);\n    List<Party> result = removeDuplicates(page.getContent());\n\n    if (page.getTotalElements() > pageable.getPageSize()) {\n      int loopCount = 0;\n      int initialPageNumber = pageable.getPageNumber();\n      while (result.size() < page.getSize() && ++loopCount < MAX_LOOP) {\n        query.setPageRequest(new PageRequest(initialPageNumber + loopCount, pageable.getPageSize()));\n        result.addAll(getSolrTemplate().executeListQuery(query, Party.class).getContent());\n        result = removeDuplicates(result);\n      }\n    }\n    if (!result.isEmpty() && result.size() > pageable.getPageSize()) {\n      result = result.subList(0, pageable.getPageSize());\n    }\n    return new PageImpl<Party>(result, query.getPageRequest(), page.getTotalElements());\n  }\n\n  List<Party> removeDuplicates(List<Party> parties) {\n    return new ArrayList<Party>(new HashSet<Party>(parties));\n  }\n\n  @Autowired\n  public void setPhoneNumberDao(PhoneNumberDao phoneNumberDao) {\n    this.phoneNumberDao = phoneNumberDao;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/solr/SolrPartyQuery.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/solr/SolrPartyQuery.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1039,
    "content": "package at.a1ta.cuco.core.dao.solr;\n\nimport at.a1ta.bite.data.solr.core.query.BasicQuery;\nimport at.a1ta.bite.data.solr.core.query.Field;\n\npublic class SolrPartyQuery extends BasicQuery {\n\n  public enum SearchField implements Field {\n    //@formatter:off\n    TITLE(\"title_ci\"),\n    FIRSTNAME(\"firstname_ci\"),\n    LASTNAME(\"lastname_ci\"),\n    STREET(\"street_ci\"),\n    POSTCODE(\"postcode\"),\n    HOUSENUMBER(\"housenumber_ci\"),\n    CITY(\"city_ci\"),\n    VILLAGE(\"village_ci\"),\n    CUSTOMER_NUMBER(\"customernumber\"),\n    BAN(\"billingaccountnumber\"),\n    EMAIL(\"email_ci\"),\n    PHONE_SUBSCRIBER_NUMBER(\"subscribernumber\"),\n    PHONE_DESTINATION_CODE(\"destinationcode\"),\n    PHONE_COUNTRY_CODE(\"countrycode\"),\n    COMMERCIAL_REGISTER_NUMBER(\"commercialregister\"),\n    CENTRAL_ASSOCIATION_NUMBER(\"centralassociation\"),\n    FULLTEXT(\"fulltext\");\n\t\t//@formatter:on\n\n    private String fieldName;\n\n    SearchField(String name) {\n      this.fieldName = name;\n    }\n\n    @Override\n    public String getName() {\n      return this.fieldName;\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CustomerUnlockRequestDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CustomerUnlockRequestDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 668,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.access.ContextAwareCustomerUnlockRequest;\n\npublic interface CustomerUnlockRequestDao {\n\n  public void insert(ContextAwareCustomerUnlockRequest request);\n\n  public void update(ContextAwareCustomerUnlockRequest request);\n\n  public ContextAwareCustomerUnlockRequest findByCustomerIdAndUsernameAndJobIdAndSessionKey(long customerId, BiteUser user, String jobId, String sessionKey);\n\n  public List<ContextAwareCustomerUnlockRequest> findByCustomerIdAndUsernameAndContextKey(long customerNumber, BiteUser user, String sessionId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/InventoryDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/InventoryDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 768,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.BindingsFilter;\nimport at.a1ta.cuco.core.shared.dto.CustomerBinding;\n\npublic interface InventoryDao {\n\n  // List<Inventory> listInventory4Customers(List<Long> customerIds, List<Long> contractIds, ProductDetailFilter productFilter);\n\n  List<Date> getExpiringContractDates(String uUser, int maxTimeRange);\n\n  int getExpiredContracts(String uUser);\n\n  String getProductName(Long customerId, Long contractId, Long aonNumber);\n\n  SearchResult<CustomerBinding> filterBindingsInfo(BindingsFilter bindingsFilter, String uUser);\n\n  Long getAonNumber(Long customerId, Long contractId, String productNumber);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/SingleTurnaroundDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/SingleTurnaroundDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1013,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.SingleTurnaround;\n\npublic interface SingleTurnaroundDao {\n\n  List<SingleTurnaround> getSingleTurnaroundsForCustomerAndProdgrp(long customerId, long prodgrpId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ChargingTypeDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ChargingTypeDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 948,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\n\npublic interface ChargingTypeDao {\n\n  List<ChargingType> getAllChargingTypes();\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ClearingAccountDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ClearingAccountDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 439,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ClearingAccount;\n\npublic interface ClearingAccountDao {\n  List<ClearingAccount> getByPartyIds(ArrayList<Long> partyIds);\n\n  ClearingAccount getClearingAccountForPhonenumber(String phonenubmer);\n\n  ClearingAccount getByAccountNumber(Long accountNumber);\n\n  List<ClearingAccount> getActiveTaByPartyId(Long partyId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/MyToDoNotesDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/MyToDoNotesDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 462,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.ToDoNotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\npublic interface MyToDoNotesDao {\n\n  SearchResult<SalesInfoNote> loadMyToDoNotes(ToDoNotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UnknownAreaCodeDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UnknownAreaCodeDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1153,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\n\npublic interface UnknownAreaCodeDao {\n\n  UnknownAreaCode getUnknownAreaCodeById(Long id);\n\n  List<UnknownAreaCode> getAllUnknownAreaCodes();\n\n  void insertUnknownAreaCode(UnknownAreaCode ct);\n\n  void updateUnknownAreaCode(UnknownAreaCode ct);\n\n  void deleteUnknownAreaCode(Long id);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CreditTypeDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CreditTypeDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1098,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.CreditType;\n\npublic interface CreditTypeDao {\n\n  CreditType getCreditTypeById(Long id);\n\n  List<CreditType> getAllCreditTypes();\n\n  void insertCreditType(CreditType ct);\n\n  void updateCreditType(CreditType ct);\n\n  void deleteCreditType(Long id);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/PartyDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/PartyDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2467,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.math.BigDecimal;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.bite.data.solr.core.query.Field;\nimport at.a1ta.bite.data.solr.core.query.result.FacetResult;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.SimplePage;\nimport at.a1ta.cuco.core.shared.dto.Tupel;\n\npublic interface PartyDao {\n  List<Party> loadParties(List<Long> partyIds);\n\n  Party loadParty(Long partyId);\n\n  SimplePage<Party> search(PartySearch customerSearch, int maxResults);\n\n  List<Party> getCustomers4Header(long headerId, int skip, int maxResults);\n\n  int countCustomers4Header(long headerId);\n\n  boolean isSubsidised(long customerId, String[] subsidisedTarifs);\n\n  List<String> getAllSegments();\n\n  void saveCucoCustomer(Party cucoCustomer);\n\n  List<Party> getHierarchyForParty(long partyId);\n\n  List<FacetResult> facetedSearch(PartySearch customerSearch, Field facetField);\n\n  int loadNumberOfCustomersForSupportUser(String uUser);\n\n  int loadNumberOfCustomersWithChurnForSupportUser(String uUser);\n\n  int loadNumberOfCustomersWithIndexationForSupportUser(String uUser);\n\n  int loadNumberOfCustomersWithFlashInfosForSupportUser(String uUser);\n\n  int loadNumberOfCustomersWithVIPForSupportUser(String uUser);\n\n  Map<BigDecimal, BigDecimal> loadNumberOfCustomersByTypeForSupportUser(String uUser);\n\n  Map<String, BigDecimal> loadNumberOfCustomersByWorthclassForSupportUser(String uUser);\n\n  List<Tupel<Long, BigDecimal>> loadNumberOfCustomersTurnoverForSupportUser(String uUser);\n\n  List<Long> getCustomerIdsForSupportUser(String uUser);\n\n  SearchResult<Party> filterCustomersForSupportUser(CustomerFilter customerFilter, String username);\n\n  List<Party> filterCustomersForSupportUserUnlimited(CustomerFilter customerFilter, String uUser);\n\n  List<Party> loadPartiesOfFlashInfo(Long flashInfoId, String username);\n\n  SimplePage<Party> searchNonCustomer(PartySearch partySearch, int maxResults);\n\n  void insertNonCustomerContact(Party party);\n\n  void markNonCustomerMerged(Party party);\n\n  void mergeNonCustomerAndTransferOffers(Party party);\n\n  SimplePage<Party> searchNonCustomerFull(PartySearch partySearch, int maxResults);\n\n  int loadNumberOfCustomersWithVBMForSupportUser(String uUser);\n\n  String getPartyIdForQuoteNumber(String offerNumber);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UITextsEditorDAO.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UITextsEditorDAO.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 251,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.UIText;\n\npublic interface UITextsEditorDAO {\n  \n  List<UIText> getUITexts();\n  void updateUIText(UIText text);\n  List<UIText> searchText(String value);\n  \n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ReportingDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ReportingDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 321,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.bean.Reporting;\n\npublic interface ReportingDao {\n\n  public Reporting getReporting(long id);\n\n  public List<Reporting> getAllReportings();\n\n  public List<HashMap<String, Object>> executeReporting(String stmt);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/MKInteractionDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/MKInteractionDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 985,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.bite.data.clarify.shared.dto.CustomerInteraction;\n\npublic interface MKInteractionDao {\n\n  List<CustomerInteraction> listMKInteractions(long customerId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/MyQuoteDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/MyQuoteDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 512,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.MyOpportunity;\nimport at.a1ta.cuco.core.shared.dto.OpportunityFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoOverviewRow;\n\npublic interface MyQuoteDao {\n\n  SearchResult<MyOpportunity> loadMyOpportunities(OpportunityFilter filter, boolean showNonCustomers);\n\n  SearchResult<SalesInfoOverviewRow> loadMyQuotesForOverview(OpportunityFilter filter, boolean showNonCustomers);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/StandardAddressDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/StandardAddressDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 491,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.Collection;\n\nimport at.a1ta.cuco.core.shared.dto.StandardAddress;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.Country;\n\npublic interface StandardAddressDao {\n\n  StandardAddress getAddress(long addressId);\n\n  StandardAddress getAddressByLkmsIdAndPartyId(String lkmsId, long partyId);\n\n  void insertAddress(StandardAddress address);\n\n  void updateAddress(StandardAddress address);\n\n  Collection<Country> loadCountries();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/InventoryProductGroupDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/InventoryProductGroupDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2457,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\nimport java.util.Set;\n\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroup;\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroupAssignation;\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroupUsage;\nimport at.a1ta.cuco.core.shared.dto.Product;\nimport at.a1ta.cuco.core.shared.dto.ProductLevel;\n\npublic interface InventoryProductGroupDao {\n\n  InventoryProductGroup getInventoryProductGroup(Long id);\n\n  List<InventoryProductGroup> getAllInventoryProductGroups();\n\n  void insertInventoryProductGroup(InventoryProductGroup inventoryProductGroup);\n\n  void updateInventoryProductGroup(InventoryProductGroup inventoryProductGroup);\n\n  int deleteInventoryProductGroup(InventoryProductGroup inventoryProductGroup);\n\n  void addProductToInventoryProductGroup(String productId, Long inventoryProductGroupId);\n\n  void addLevelToInventoryProductGroup(Long levelId, Long inventoryProductGroupId);\n\n  void removeProductFromInventoryProductGroup(String productId, Long inventoryProductGroupId);\n\n  void removeLevelFromInventoryProductGroup(Long levelId, Long inventoryProductGroupId);\n\n  List<Product> getProductsForInventoryProductGroup(Long inventoryProductGroupId);\n\n  List<ProductLevel> getProductLevelsForInventoryProductGroup(Long inventoryProductGroupId);\n\n  void moveInventoryProductGroupUp(InventoryProductGroup inventoryProductGroup);\n\n  void moveInventoryProductGroupDown(InventoryProductGroup inventoryProductGroup);\n\n  List<InventoryProductGroupAssignation> getInventoryProductGroupAssignations();\n\n  List<InventoryProductGroupUsage> getInventoryProductGroupUsagesByPartyId(Long partyId);\n\n  Set<String> getAnbSsaProductIds();\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UserShopAssignmentDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UserShopAssignmentDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 628,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignment;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\npublic interface UserShopAssignmentDao {\n  \n  List<UserShopAssignmentLogLine> getLogEntries();\n  List<UserShopAssignment> getUserShopAssignments();\n  Integer getLogEntriesCount();\n  void insertLogEntry(UserShopAssignmentLogLine logline);\n  void insertUserShopAssignment(UserShopAssignment assignment);\n  void purgeLogEntries();\n  void purgeUserShopAssignments();\n  List<String> getUserNamesForAssignments();\n  List<String> getAssignedShopIDs();\n  \n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ServiceDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ServiceDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1140,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Service;\n\npublic interface ServiceDao {\n  List<Service> getAllServices();\n\n  void insertService(Service service);\n\n  void deleteService(Long serviceId);\n\n  void updateService(Service service);\n\n  List<Service> getValidForUser(Long userId);\n\n  List<Service> searchService(String service);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ImageSizeDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ImageSizeDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 980,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ImageSize;\n\npublic interface ImageSizeDao {\n  /**\n   * @return list of all image sizes\n   */\n  List<ImageSize> getImageSizes();\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ProductHierarchyDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ProductHierarchyDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 212,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ProductHierarchy;\n\npublic interface ProductHierarchyDao {\n\n  public List<ProductHierarchy> getProductHierarchy();\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CucoLogsDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CucoLogsDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1045,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\npublic interface CucoLogsDao {\n\n  void insertLogEntryForPartyLoaded(Long kundeId, String name, String userId, String ban, String logType);\n\n  void insertLogEntryForViewPassword(Long kundeId, String name, String userId, String passwordType, String ban);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/LocationDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/LocationDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1043,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.data.clarify.shared.dto.Location;\n\npublic interface LocationDao {\n\n  Map<Long, Location> listLocations(List<Long> partyIds);\n\n  Number getDistinctNrLocations4customer(long customerId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/InvoiceDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/InvoiceDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1025,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.Collection;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Invoice;\n\npublic interface InvoiceDao {\n  List<Invoice> getByPartyIds(Collection<Long> clearingAccountIds);\n\n  Invoice getById(long invoiceId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/PhoneNumberDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/PhoneNumberDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1304,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.MobileChurnLikeliness;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.ProductDetailFilter;\n\npublic interface PhoneNumberDao {\n  List<PhoneNumber> listPhoneNumbers(final Long customerId, final Long contractId, final Long locationId, final int skip, final int maxResults);\n\n  List<String> getCountryCodes();\n\n  List<String> getOnkzs();\n\n  List<String> getSpecialOnkzs();\n\n  String findByTN(List<String> possibleNumbers, String onkz);\n\n  PhoneNumberStructure parse(String phoneNumber);\n\n  List<BillingAccountNumber> getBillingAccountNumbersForParty(long partyId);\n\n  List<PhoneNumber> listPhoneNumbers(List<Long> partyIds, ProductDetailFilter productFilter);\n\n  Long getBillingAccountNumberForPhoneNumber(String countryCode, String onkz, String number);\n\n  List<String> getPhoneNumbersForClearingAccountId(long clearingAccountId);\n\n  List<PhoneNumber> getPhoneNumbersForBillingAccountNumber(long banId);\n\n  List<MobileChurnLikeliness> getMobileChurnLikelinessForParty(long partyId);\n\n  int loadNumberOfCustomersWithMobileChurnForSupportUser(String uUser);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/LinksPortletDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/LinksPortletDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 939,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.LinksPortlet;\n\npublic interface LinksPortletDao {\n\n  List<LinksPortlet> getAllLinks();\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/SalesInfoDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/SalesInfoDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2553,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.AppointmentNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.CompetitorNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesConvNoteReportRow;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SbsNoteReportRow;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SimpleNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.Task;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.TeamEmailAdminGroup;\n\npublic interface SalesInfoDao {\n\n  List<SalesInfoNote> getNotesByPartyId(long partyId, List<SalesInfoNoteType> salesInfoNoteTypesToLoad);\n\n  void insertNote(SalesInfoNote salesInfoNote);\n\n  void updateNote(SalesInfoNote salesInfoNote);\n\n  void markNoteAsDeleted(SalesInfoNote salesInfoNote);\n\n  SimpleNote getSimpleNoteByNoteId(long noteId);\n\n  void insertSimpleNote(SimpleNote simpleNote);\n\n  CompetitorNote getCompetitorNoteByNoteId(long noteId);\n\n  void insertCompetitorNote(CompetitorNote competitorNote);\n\n  void updateCompetitorNote(CompetitorNote competitorNote);\n\n  Task getTask(long taskId);\n\n  void insertTask(Task task);\n\n  void updateTask(Task task);\n\n  List<SalesInfoNote> getNotesForReminderMail();\n\n  void updateTaskReminderMailSentDate(Task task);\n\n  void updateTaskVcalMailSentInfo(Task task);\n\n  SalesInfoNote getSalesInfoNote(long salesInfoNoteId);\n\n  List<SbsNoteReportRow> getSbsNoteReportData(Date begin, Date end);\n\n  List<SalesConvNoteReportRow> getSalesConvNoteReportData(Date begin, Date end);\n\n  void updateBindingPeriodReminderMailSentDate(CompetitorNote cpNote);\n\n  List<CompetitorNote> getNotesForBindingPeriodReminderMail(long numDays);\n\n  List<TeamEmailAdminGroup> getTeamEmailAdminGroups();\n\n  void updateTeamEmailAdminGroup(TeamEmailAdminGroup teamEmailAdminGroup);\n\n  void deleteTeamEmailAdminUsersByTeamEmailId(long teamEmailId);\n\n  void insertTeamEmailAdminUser(long teamEmailId, long userId);\n\n  List<SalesInfoNote> getSalesConvNotesForReminderMail();\n\n  void updateLastReminderMailSentDateForSalesConvNote(long salesConvNoteId);\n\n  void insertAppointmentNote(AppointmentNote note);\n\n  void updateAppointmentNote(AppointmentNote note);\n\n  AppointmentNote getAppointmentNoteByNoteId(long noteId);\n\n  SalesInfoNote getAppointmentNoteForHistoryByNoteId(Long historyNoteId);\n\n  SalesInfoNote getTaskNoteForHistoryByNoteId(Long historyNoteId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/FlashInfoDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/FlashInfoDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1769,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.cuco.core.shared.dto.FlashInfo;\nimport at.a1ta.cuco.core.shared.dto.Tupel;\n\npublic interface FlashInfoDao {\n\n  FlashInfo getFlashInfoById(long flashId);\n\n  List<FlashInfo> getAllFlashInfos();\n\n  List<FlashInfo> getFlashInfoForUserAndCustomer(long userId, long customerId);\n\n  void insertFlashInfo(FlashInfo flashInfo);\n\n  void updateFlashInfo(FlashInfo flashInfo);\n\n  void deleteFlashInfo(long flashId);\n\n  /**\n   * @param collection the first value has to be the ID of the flash and the second the customer number\n   */\n  void insertFlashCustomer(Collection<Tupel<Long, Long>> collection);\n\n  void deleteFlashCustomerForFlash(long flashId);\n\n  void insertFlashRole(long flashInfoId, String roleId);\n\n  void deleteFlashRoleForFlash(long flashId);\n\n  void insertFlashViewed(long flashInfoId, long customerId, long userId);\n\n  List<FlashInfo> loadMyFlashInfos(Map<String, Object> params);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/AttributeDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/AttributeDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 773,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig;\nimport at.a1ta.cuco.core.shared.dto.AttributeHistory;\n\npublic interface AttributeDao {\n\n  List<AttributeConfig> getAllConfigs();\n\n  void insertConfig(AttributeConfig config);\n\n  void updateConfig(AttributeConfig config);\n\n  void switchOrderNum(AttributeConfig a, AttributeConfig b);\n\n  List<Attribute> getByPartyId(long partyId, String segment);\n\n  List<Attribute> getSameExistingAttributes(Attribute attribute);\n\n  void insert(Attribute attribute);\n\n  void delete(Attribute attribute);\n\n  List<AttributeHistory> getHistory(long partyId, long attributeConfigId);\n\n  void insertHistory(AttributeHistory history);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CustomerBlockDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CustomerBlockDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1204,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.CustomerBlock;\n\npublic interface CustomerBlockDao {\n\n  List<CustomerBlock> getCustomerBlocksForFlashInfo(long flashInfoId);\n\n  CustomerBlock getCustomerBlockById(long customerBlockId);\n\n  void insertCustomerBlock(CustomerBlock customerBlock);\n\n  void updateCustomerBlock(CustomerBlock customerBlock);\n\n  void deleteCustomerBlock(long customerBlockId);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ContactPersonDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ContactPersonDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1825,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ContactPerson;\n\npublic interface ContactPersonDao {\n\n  /**\n   * Get the list of contact persons for the customer with given id\n   * \n   * @param customerId\n   *          The id of the customer to get the contact persons for\n   * @return empty list if no data found\n   */\n  List<ContactPerson> listContactPersons(List<Long> partyIds);\n\n  List<ContactPerson> listContactPersonsIncludingDeleted(List<Long> partyIds);\n\n  List<ContactPerson> listContactPersonsInclLocalContacts(List<Long> partyIds);\n\n  List<ContactPerson> listContactPersonsInclLocalContactsAndDeletedContacts(List<Long> partyIds);\n\n  void insertLocalContact(ContactPerson contact);\n\n  void updateLocalContact(ContactPerson contact);\n\n  void updateLocalContactStatus(ContactPerson contact);\n\n  void updateDWHContactStatus(ContactPerson contact);\n\n  void deleteLocalContact(ContactPerson contact);\n\n  void markLocalContactDeleted(ContactPerson contact);\n\n  Boolean checkIfReferenceExists(Long partyId, Long id);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ImageDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/ImageDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1589,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Image;\n\npublic interface ImageDao {\n  /**\n   * @param id\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   * @return list of images\n   */\n  List<Image> getImages(final Number id, final String uuser, final String filename, final String name, final Number imageSizeId);\n\n  /**\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   */\n  void saveImage(final String uuser, final String filename, final String name, final Number imageSizeId);\n\n  /**\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   * @return number of affected rows\n   */\n  int updateImage(final String uuser, final String filename, final String name, final Number imageSizeId);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/PayableTicketDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/PayableTicketDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1071,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\n\npublic interface PayableTicketDao {\n\n  public List<PayableTicket> getTicketsForParties(List<Party> parties);\n\n  public void insertTicket(PayableTicket ticket);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/GamificationLocalDAO.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/GamificationLocalDAO.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 646,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.ArrayList;\nimport java.util.Map;\n\nimport at.a1ta.cuco.core.shared.dto.GamificationMessage;\n\npublic interface GamificationLocalDAO {\n  public void markAllMessagesRead(ArrayList<GamificationMessage> messages, String agentId);\n\n  public void addAllMessagesToCuCoDB(ArrayList<GamificationMessage> messages, String agentId);\n\n  public Map<String, GamificationMessage> getAlreadyStoredMessages(ArrayList<GamificationMessage> messages, String agentId);\n\n  public String creatGamificationOneTimeToken(String userName, String token);\n\n  public Boolean validateGamificationOneTimeToken(String token);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/VbmProductsDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/VbmProductsDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 576,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMDeclineReason;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProduct;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProductDetails;\n\npublic interface VbmProductsDao {\n  List<VBMProduct> listVBMProduct(Long customerId, String productName, String monthYearPeriod, Integer scoringTotal, int maxResults);\n\n  List<VBMProductDetails> listAllVBMProductDetails();\n\n  void registerCustomerResponse(VBMDeclineReason declineReason, VBMProduct vbmProduct, String username, String userId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/TurnoverDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/TurnoverDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 188,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Turnover;\n\npublic interface TurnoverDao {\n\n  List<Turnover> getAllForParty(long partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/MyNotesDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/MyNotesDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 446,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.NotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\npublic interface MyNotesDao {\n\n  SearchResult<SalesInfoNote> loadMyNotes(NotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CCTOrgStructureElementDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CCTOrgStructureElementDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 398,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\npublic interface CCTOrgStructureElementDao {\n\n  List<String> getAllUsers();\n\n  void eraseOldEntries();\n\n  void updateCCTOrg(CCTOrgStructureElement user);\n\n  void deleteAllAndBatchInsertInTransaction(ArrayList<CCTOrgStructureElement> user);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UserInfoStatisticsDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UserInfoStatisticsDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 949,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport at.a1ta.cuco.core.shared.dto.UserInfoStatistics;\n\npublic interface UserInfoStatisticsDao {\n\n  UserInfoStatistics getUserInfoStatistics(String uUser);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/TeamDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/TeamDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1213,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\n\npublic interface TeamDao {\n  public List<Team> getAllTeams();\n\n  public void removeMember(Long teamId, Long userId);\n\n  public void addMember(Long teamId, Long userId);\n\n  public List<BiteUser> getAllUsers(Auth authority);\n\n  public void deleteTeam(Long teamId);\n\n  public void updateTeam(Team team);\n\n  public void addTeam(Team team);\n\n  public Team getTeam(Long teamId);\n\n  public Team getTeamForUser(Long userId);\n\n  public List<BiteUser> getUsersForTeam(Long teamId);\n\n  public List<Service> getServicesForTeam(Long teamId);\n\n  public void addService(Long teamId, Long serviceId);\n\n  public void removeService(Long teamId, Long serviceId);\n\n  public void removeAllMembers(Long teamId);\n\n  public void removeAllServices(Long teamId);\n\n  public void removeUserFromTeam(Long userId);\n\n  public List<Service> getNotLinkedServices(Long teamId);\n\n  public List<Service> getService(String service);\n\n  public List<BiteUser> searchUsers(String name, String user, String orgunit);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/VIPHistoryDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/VIPHistoryDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1133,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.VIPHistoryEntry;\n\npublic interface VIPHistoryDao {\n\n  List<VIPHistoryEntry> getVIPHistory(Long customerId);\n\n  List<VIPHistoryEntry> getVIPHistory(Date from, Date to, String searchTerm, String vipStatus);\n\n  void saveVIPHistory(VIPHistoryEntry vipHistory);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UsageDataDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/UsageDataDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1410,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.usagedata.InetUsage;\nimport at.a1ta.cuco.core.shared.dto.usagedata.MobileUsage;\nimport at.a1ta.cuco.core.shared.dto.usagedata.NetworkProvider;\nimport at.a1ta.cuco.core.shared.dto.usagedata.VoiceUsage;\n\npublic interface UsageDataDao {\n\n  List<String> getFixedLineNumbers(long partyId);\n\n  List<String> getMobileBanNumbers(long partyId);\n\n  List<String> getMobileNumbers(long partyId, String ban);\n\n  List<String> getAonNumbers(long partyId);\n\n  List<VoiceUsage> getFixedLineUsage(List<Long> partyIds);\n\n  List<VoiceUsage> getFixedLineUsage(long partyId);\n\n  List<VoiceUsage> getFixedLineUsage(long partyId, String phoneNumber);\n\n  List<VoiceUsage> getFixedLineZoneUsage(long partyId, String phoneNumber);\n\n  List<VoiceUsage> getFixedLineTimeZones(long partyId, String phoneNumber);\n\n  List<InetUsage> getAonUsageData(List<Long> partyIds, NetworkProvider provider);\n\n  List<InetUsage> getAonUsageData(long partyId, NetworkProvider provider);\n\n  List<InetUsage> getAonUsageData(long partyId, String aonAccountNumber, NetworkProvider networkProvider);\n\n  List<MobileUsage> getMobileUsageDataPerBan(long partyId, String ban);\n\n  List<MobileUsage> getMobileUsageData(List<Long> partyIds);\n\n  List<MobileUsage> getMobileUsageData(long partyId);\n\n  List<MobileUsage> getMobileUsageData(long partyId, String phoneNumber);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CategoryDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CategoryDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 930,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Category;\n\npublic interface CategoryDao {\n\n  List<Category> listCategories();\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CmDBICTServiceDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/CmDBICTServiceDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 228,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.product.PartySummaryItem;\n\npublic interface CmDBICTServiceDao {\n\n  List<PartySummaryItem> getICTServicesForPartyId(long partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/SettingsEditorDAO.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/SettingsEditorDAO.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 262,
    "content": "package at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.Setting;\n\npublic interface SettingsEditorDAO {\n\n  List<Setting> getSettings();\n\n  void updateSetting(Setting setting);\n\n  List<Setting> searchSetting(String value);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/SegmentDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/SegmentDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 925,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.dao.db;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Segment;\n\npublic interface SegmentDao {\n\n  List<Segment> listSegments();\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ClearingAccountDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ClearingAccountDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1263,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.ClearingAccountDao;\nimport at.a1ta.cuco.core.shared.dto.ClearingAccount;\n\npublic class ClearingAccountDaoImpl extends AbstractDao implements ClearingAccountDao {\n  @Override\n  public List<ClearingAccount> getByPartyIds(ArrayList<Long> partyIds) {\n    if (partyIds != null && partyIds.size() > 0) {\n      Map<String, Object> params = new HashMap<String, Object>(2);\n      params.put(\"partyIds\", partyIds);\n      return performListQuery(\"ClearingAccount.getByPartyIds\", params);\n    }\n    return new ArrayList<ClearingAccount>();\n  }\n\n  @Override\n  public ClearingAccount getClearingAccountForPhonenumber(String phonenubmer) {\n    return performObjectQuery(\"ClearingAccount.GetForPhonenumber\", phonenubmer);\n  }\n\n  @Override\n  public ClearingAccount getByAccountNumber(Long accountNumber) {\n    return performObjectQuery(\"ClearingAccount.getByAccountNumber\", accountNumber);\n  }\n\n  @Override\n  public List<ClearingAccount> getActiveTaByPartyId(Long partyId) {\n    return performListQuery(\"ClearingAccount.getActiveTaByPartyId\", partyId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/TeamDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/TeamDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3430,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.dao.db.TeamDao;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\n\npublic class TeamDaoImpl extends AbstractDao implements TeamDao {\n\n  @Override\n  public void addMember(Long teamId, Long userId) {\n    Map<String, Long> params = new HashMap<String, Long>();\n    params.put(\"teamId\", teamId);\n    params.put(\"userId\", userId);\n\n    executeInsert(\"Team.AddMember\", params);\n  }\n\n  @Override\n  public void addTeam(Team team) {\n    executeInsert(\"Team.AddTeam\", team);\n  }\n\n  @Override\n  public void deleteTeam(Long teamId) {\n    executeDelete(\"Team.DeleteTeam\", teamId);\n  }\n\n  @Override\n  public List<Team> getAllTeams() {\n    return performListQuery(\"Team.GetAllTeams\");\n  }\n\n  @Override\n  public List<Service> getServicesForTeam(Long teamId) {\n    return performListQuery(\"Team.GetServicesForTeam\", teamId);\n  }\n\n  @Override\n  public Team getTeam(Long teamId) {\n    return performObjectQuery(\"Team.GetTeam\", teamId);\n  }\n\n  @Override\n  public List<BiteUser> getAllUsers(Auth authority) {\n    return performListQuery(\"User.GetAllUsers\", authority.getName());\n  }\n\n  @Override\n  public List<BiteUser> getUsersForTeam(Long teamId) {\n    return performListQuery(\"User.GetUsersForTeam\", teamId);\n  }\n\n  @Override\n  public void removeMember(Long teamId, Long userId) {\n    Map<String, Long> params = new HashMap<String, Long>();\n    params.put(\"teamId\", teamId);\n    params.put(\"userId\", userId);\n\n    executeDelete(\"Team.RemoveMember\", params);\n  }\n\n  @Override\n  public void addService(Long teamId, Long serviceId) {\n    Map<String, Long> params = new HashMap<String, Long>();\n    params.put(\"teamId\", teamId);\n    params.put(\"serviceId\", serviceId);\n\n    executeInsert(\"Team.AddService\", params);\n  }\n\n  @Override\n  public void removeService(Long teamId, Long serviceId) {\n    Map<String, Long> params = new HashMap<String, Long>();\n    params.put(\"teamId\", teamId);\n    params.put(\"serviceId\", serviceId);\n\n    executeDelete(\"Team.RemoveService\", params);\n  }\n\n  @Override\n  public void updateTeam(Team team) {\n    executeUpdate(\"Team.UpdateTeam\", team);\n  }\n\n  @Override\n  public void removeAllMembers(Long teamId) {\n    executeDelete(\"Team.RemoveAllMembers\", teamId);\n  }\n\n  @Override\n  public void removeAllServices(Long teamId) {\n    executeDelete(\"Team.RemoveAllServices\", teamId);\n  }\n\n  @Override\n  public List<Service> getNotLinkedServices(Long teamId) {\n    return performListQuery(\"Team.GetNotLinkedServices\", teamId);\n  }\n\n  @Override\n  public void removeUserFromTeam(Long userId) {\n    executeDelete(\"Team.removeUserFromTeam\", userId);\n  }\n\n  @Override\n  public Team getTeamForUser(Long userId) {\n    return (Team) performObjectQuery(\"Team.GetTeamForUser\", userId);\n  }\n\n  @Override\n  public List<Service> getService(String service) {\n    return performListQuery(\"Team.getService\", service);\n  }\n\n  @Override\n  public List<BiteUser> searchUsers(String name, String user, String orgunit) {\n    Map<String, String> params = new HashMap<String, String>();\n    params.put(\"name\", name);\n    params.put(\"usr\", user);\n    params.put(\"orgunit\", orgunit);\n    return performListQuery(\"User.searchAll\", params);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CmDBICTServiceDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CmDBICTServiceDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 492,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.CmDBICTServiceDao;\nimport at.a1ta.cuco.core.shared.dto.product.PartySummaryItem;\n\npublic class CmDBICTServiceDaoImpl extends AbstractDao implements CmDBICTServiceDao {\n\n  @Override\n  public List<PartySummaryItem> getICTServicesForPartyId(long partyId) {\n    return performListQuery(\"CmDBICTService.getICTServicesForPartyId\", partyId + \"\");\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/StandardAddressDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/StandardAddressDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1294,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.StandardAddressDao;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.Country;\n\npublic class StandardAddressDaoImpl extends AbstractDao implements StandardAddressDao {\n\n  @Override\n  public StandardAddress getAddress(long addressId) {\n    return performObjectQuery(\"StandardAddress.getAddress\", addressId);\n  }\n\n  @Override\n  public StandardAddress getAddressByLkmsIdAndPartyId(String lkmsId, long partyId) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"lkmsId\", lkmsId);\n    params.put(\"partyId\", partyId);\n    return performObjectQuery(\"StandardAddress.getAddressByLkmsIdAndPartyId\", params);\n  }\n\n  @Override\n  public void insertAddress(StandardAddress address) {\n    executeInsert(\"StandardAddress.insertAddress\", address);\n\n  }\n\n  @Override\n  public void updateAddress(StandardAddress address) {\n    executeUpdate(\"StandardAddress.updateAddress\", address);\n\n  }\n\n  @Override\n  public Collection<Country> loadCountries() {\n    return performListQuery(\"StandardAddress.loadCountries\");\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ProductHierarchyDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ProductHierarchyDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 439,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.ProductHierarchyDao;\nimport at.a1ta.cuco.core.shared.dto.ProductHierarchy;\n\npublic class ProductHierarchyDaoImpl extends AbstractDao implements ProductHierarchyDao {\n\n  @Override\n  public List<ProductHierarchy> getProductHierarchy() {\n    return performListQuery(\"ProductHierarchy.get\");\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/PartyDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/PartyDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 23758,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.bite.data.solr.core.query.Field;\nimport at.a1ta.bite.data.solr.core.query.result.FacetResult;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter.WorthClass;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.SimplePage;\nimport at.a1ta.cuco.core.shared.dto.Tupel;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProductDetails;\nimport at.a1ta.cuco.core.shared.model.DualSegment;\n\npublic class PartyDaoImpl extends AbstractDao implements PartyDao {\n  private static final String SQL_WILDCARD = \"%\";\n  private static final String QUERY_SEARCH_CUSTOMER = \"Customer.SearchCustomer\";\n  private static final String QUERY_SEARCH_NON_CUSTOMER = \"Customer.SearchNonCustomerNonMerged\";\n  private static final String QUERY_SEARCH_NON_CUSTOMER_FULL = \"Customer.SearchNonCustomerAll\";\n  private static final String INSERT_NON_CUSTOMER = \"Customer.InsertNonCustomer\";\n  private static final String MARK_NC_MERGED = \"Customer.markNonCustomerMerged\";\n  private static final String MERGE_NC_TRANSFER_OFFERS = \"Customer.mergeNonCustomerAndTransferOffers\";\n  private static final String QUERY_GET_CUSTOMER_FOR_HEADER = \"Customer.GetCustomer4Header\";\n  private static final String QUERY_COUNT_CUSTOMER_FOR_HEADER = \"Customer.CountCustomer4Header\";\n  private static final String QUERY_IS_SUBSIDISED = \"Customer.IsSubsidised\";\n  private static final String PARAM_CUSTOMER_ID = \"customerId\";\n  private static final String PARAM_TARIFS = \"tarifs\";\n  private static final String QUERY_COUNT_CUSTOMER_FOR_USER = \"Customer.GetNumberOfCustomersForSupportUser\";\n  private static final String QUERY_COUNT_CUSTOMER_WITH_CHURN_FOR_USER = \"Customer.GetNumberOfCustomersWithChurnForSupportUser\";\n  private static final String QUERY_COUNT_CUSTOMER_WITH_INDEXATION_FOR_USER = \"Customer.GetNumberOfCustomersWithIndexationForSupportUser\";\n  private static final String QUERY_COUNT_CUSTOMER_WITH_FLASH_FOR_USER = \"Customer.GetNumberOfCustomersWithFlashInfosForSupportUser\";\n  private static final String QUERY_COUNT_CUSTOMER_WITH_VIP_FOR_USER = \"Customer.GetNumberOfCustomersWithVIPForSupportUser\";\n  private static final String QUERY_COUNT_CUSTOMER_WITH_VBM_FOR_USER = \"Customer.GetNumberOfCustomersWithVBMForSupportUser\";\n  private static final String QUERY_COUNT_CUSTOMER_BY_TYPE_FOR_USER = \"Customer.GetNumberOfCustomersByTypeForSupportUser\";\n  private static final String QUERY_COUNT_CUSTOMER_BY_WORTHCLASS_FOR_USER = \"Customer.GetNumberOfCustomersByWorthclassForSupportUser\";\n  private static final String QUERY_COUNT_CUSTOMER_IN_TURNOVERRANGE_FOR_USER = \"Customer.GetNumberOfCustomersInTurnoverRangeForSupportUser\";\n  private static final String QUERY_GET_CUSTOMER_IDS_FOR_USER = \"Customer.GetCustomerIdsForSupportUser\";\n  private static final String QUERY_LOAD_PARTIES_OF_FLASHINFO = \"Customer.LoadPartiesOfFlashInfo\";\n  private static final String QUERY_LOAD_PARTIES_FOR_QUOTENUMBER = \"Customer.getPartyIdForQuoteNumber\";\n  private static final String SEARCH_RESULT_LIMIT_SETTING_KEY = \"mycuco.table.searchresult.limit\";\n\n  @Autowired\n  private SettingService settingService;\n  @Autowired\n  private PhoneNumberDao phoneNumberDao;\n\n  @SuppressWarnings({\"unchecked\", \"deprecation\"})\n  @Override\n  public SimplePage<Party> search(PartySearch partySearch, final int maxResults) {\n    SimplePage<Party> page = new SimplePage<Party>();\n\n    if (partySearch.getLastName() != null) {\n      partySearch.setLastName(partySearch.getLastName() + SQL_WILDCARD);\n    }\n    if (partySearch.getFirstName() != null) {\n      partySearch.setFirstName(partySearch.getFirstName() + SQL_WILDCARD);\n    }\n    if (partySearch.getCity() != null) {\n      partySearch.setCity(partySearch.getCity() + SQL_WILDCARD);\n    }\n    if (partySearch.getVillage() != null) {\n      partySearch.setVillage(partySearch.getVillage() + SQL_WILDCARD);\n    }\n    if (partySearch.getStreet() != null) {\n      partySearch.setStreet(partySearch.getStreet() + SQL_WILDCARD);\n    }\n    if (partySearch.getHouseNumber() != null) {\n      partySearch.setHouseNumber(partySearch.getHouseNumber() + SQL_WILDCARD);\n    }\n    if (partySearch.getPhoneNumber() != null) {\n      final PhoneNumberStructure phoneNumberStructure = parsePhoneNumber(partySearch);\n\n      if (phoneNumberStructure == null) {\n        return page;\n      }\n\n      partySearch.setLkz(phoneNumberStructure.getCountryCode());\n      partySearch.setOkz(phoneNumberStructure.getOnkz());\n      partySearch.setCallNumber(phoneNumberStructure.getNumber());\n    }\n    ArrayList<Party> result = new ArrayList<Party>();\n    result.addAll(getSqlMapClientTemplate().queryForList(QUERY_SEARCH_CUSTOMER, partySearch, 0, maxResults));\n\n    page.setContent(result);\n    page.setCount(result.size());\n    return page;\n  }\n\n  @Override\n  public SimplePage<Party> searchNonCustomer(PartySearch partySearch, final int maxResults) {\n    SimplePage<Party> page = new SimplePage<Party>();\n    ArrayList<Party> result = new ArrayList<Party>();\n    if ((partySearch.getLeadId() == null || partySearch.getLeadId().trim().isEmpty()) && (partySearch.getId() == null || partySearch.getId().trim().isEmpty())\n        && (partySearch.getFirstName() == null || partySearch.getFirstName().trim().isEmpty()) && (partySearch.getLastName() == null || partySearch.getLastName().trim().isEmpty())\n        && (partySearch.getCity() == null || partySearch.getCity().trim().isEmpty()) && (partySearch.getPostcode() == null || partySearch.getPostcode().trim().isEmpty())\n        && (partySearch.getStreet() == null || partySearch.getStreet().trim().isEmpty()) && partySearch.getBirthDate() == null\n        && (partySearch.getVillage() == null || partySearch.getVillage().trim().isEmpty()) && (partySearch.getHouseNumber() == null || partySearch.getHouseNumber().trim().isEmpty())) {\n      page.setContent(result);\n      page.setCount(0);\n      return page;\n    }\n    if (partySearch.getLastName() != null) {\n      partySearch.setLastName(partySearch.getLastName() + SQL_WILDCARD);\n    }\n    if (partySearch.getPostcode() != null) {\n      partySearch.setPostcode(partySearch.getPostcode() + SQL_WILDCARD);\n    }\n    if (partySearch.getFirstName() != null) {\n      partySearch.setFirstName(partySearch.getFirstName() + SQL_WILDCARD);\n    }\n    if (partySearch.getCity() != null) {\n      partySearch.setCity(partySearch.getCity() + SQL_WILDCARD);\n    }\n    if (partySearch.getVillage() != null) {\n      partySearch.setVillage(partySearch.getVillage() + SQL_WILDCARD);\n    }\n    if (partySearch.getStreet() != null) {\n      partySearch.setStreet(partySearch.getStreet() + SQL_WILDCARD);\n    }\n    if (partySearch.getHouseNumber() != null) {\n      partySearch.setHouseNumber(partySearch.getHouseNumber() + SQL_WILDCARD);\n    }\n\n    result.addAll(getSqlMapClientTemplate().queryForList(QUERY_SEARCH_NON_CUSTOMER, partySearch, 0, maxResults));\n\n    page.setContent(result);\n    page.setCount(result.size());\n    return page;\n  }\n\n  @Override\n  public SimplePage<Party> searchNonCustomerFull(PartySearch partySearch, final int maxResults) {\n    SimplePage<Party> page = new SimplePage<Party>();\n    ArrayList<Party> result = new ArrayList<Party>();\n    if ((partySearch.getSupportUserId() == null || partySearch.getSupportUserId().trim().isEmpty()) && (partySearch.getLeadId() == null || partySearch.getLeadId().trim().isEmpty())\n        && (partySearch.getId() == null || partySearch.getId().trim().isEmpty()) && (partySearch.getFirstName() == null || partySearch.getFirstName().trim().isEmpty())\n        && (partySearch.getLastName() == null || partySearch.getLastName().trim().isEmpty()) && (partySearch.getCity() == null || partySearch.getCity().trim().isEmpty())\n        && (partySearch.getPostcode() == null || partySearch.getPostcode().trim().isEmpty()) && (partySearch.getStreet() == null || partySearch.getStreet().trim().isEmpty())\n        && partySearch.getBirthDate() == null && (partySearch.getVillage() == null || partySearch.getVillage().trim().isEmpty())\n        && (partySearch.getHouseNumber() == null || partySearch.getHouseNumber().trim().isEmpty())) {\n      page.setContent(result);\n      page.setCount(0);\n      return page;\n    }\n\n    if (partySearch.getLastName() != null) {\n      partySearch.setLastName(partySearch.getLastName() + SQL_WILDCARD);\n    }\n    if (partySearch.getFirstName() != null) {\n      partySearch.setFirstName(partySearch.getFirstName() + SQL_WILDCARD);\n    }\n\n    if (partySearch.getPostcode() != null) {\n      partySearch.setPostcode(partySearch.getPostcode() + SQL_WILDCARD);\n    }\n    if (partySearch.getCity() != null) {\n      partySearch.setCity(partySearch.getCity() + SQL_WILDCARD);\n    }\n    if (partySearch.getVillage() != null) {\n      partySearch.setVillage(partySearch.getVillage() + SQL_WILDCARD);\n    }\n    if (partySearch.getStreet() != null) {\n      partySearch.setStreet(partySearch.getStreet() + SQL_WILDCARD);\n    }\n    if (partySearch.getHouseNumber() != null) {\n      partySearch.setHouseNumber(partySearch.getHouseNumber() + SQL_WILDCARD);\n    }\n\n    result.addAll(getSqlMapClientTemplate().queryForList(QUERY_SEARCH_NON_CUSTOMER_FULL, partySearch, 0, maxResults));\n\n    page.setContent(result);\n    page.setCount(result.size());\n    return page;\n  }\n\n  private PhoneNumberStructure parsePhoneNumber(PartySearch partySearch) {\n    return phoneNumberDao.parse(partySearch.getPhoneNumber());\n  }\n\n  @Override\n  public List<Party> getCustomers4Header(long headerId, int skip, int maxResults) {\n    return performListQuery(QUERY_GET_CUSTOMER_FOR_HEADER, Long.valueOf(headerId), skip, maxResults);\n  }\n\n  @Override\n  public int countCustomers4Header(final long headerId) {\n    return (Integer) performObjectQuery(QUERY_COUNT_CUSTOMER_FOR_HEADER, Long.valueOf(headerId));\n  }\n\n  @Override\n  public boolean isSubsidised(long customerId, String[] subsidisedTarifs) {\n    final Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(PARAM_CUSTOMER_ID, Long.valueOf(customerId));\n    params.put(PARAM_TARIFS, Arrays.asList(subsidisedTarifs));\n    return ((Integer) performObjectQuery(QUERY_IS_SUBSIDISED, params)) > 0;\n  }\n\n  @Override\n  public List<String> getAllSegments() {\n    return performListQuery(\"Customer.getAllSegments\");\n  }\n\n  @Override\n  public void saveCucoCustomer(Party cucoCustomer) {\n    if (executeUpdate(\"Customer.update\", cucoCustomer) == 0) {\n      executeInsert(\"Customer.insert\", cucoCustomer);\n    }\n  }\n\n  @Override\n  public List<Party> loadParties(List<Long> partyIds) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"partyIds\", partyIds);\n\n    return performListQuery(\"Customer.loadParties\", params);\n  }\n\n  @Override\n  public Party loadParty(Long partyId) {\n    return (Party) performObjectQuery(\"Customer.loadParty\", partyId);\n  }\n\n  @Override\n  public List<Party> getHierarchyForParty(long partyId) {\n    return performListQuery(\"Customer.getHierarchy\", partyId);\n  }\n\n  @Override\n  public List<FacetResult> facetedSearch(PartySearch customerSearch, Field facetField) {\n    return Collections.<FacetResult> emptyList();\n  }\n\n  @Override\n  public int loadNumberOfCustomersForSupportUser(String uUser) {\n    return (Integer) performObjectQuery(QUERY_COUNT_CUSTOMER_FOR_USER, uUser.toLowerCase());\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithChurnForSupportUser(String uUser) {\n    return (Integer) performObjectQuery(QUERY_COUNT_CUSTOMER_WITH_CHURN_FOR_USER, uUser.toLowerCase());\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithIndexationForSupportUser(String uUser) {\n    return (Integer) performObjectQuery(QUERY_COUNT_CUSTOMER_WITH_INDEXATION_FOR_USER, uUser.toLowerCase());\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithFlashInfosForSupportUser(String uUser) {\n    return (Integer) performObjectQuery(QUERY_COUNT_CUSTOMER_WITH_FLASH_FOR_USER, uUser.toLowerCase());\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithVIPForSupportUser(String uUser) {\n    return (Integer) performObjectQuery(QUERY_COUNT_CUSTOMER_WITH_VIP_FOR_USER, uUser.toLowerCase());\n  }\n\n  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Map<BigDecimal, BigDecimal> loadNumberOfCustomersByTypeForSupportUser(String uUser) {\n    return (Map<BigDecimal, BigDecimal>) performMapQuery(QUERY_COUNT_CUSTOMER_BY_TYPE_FOR_USER, uUser.toLowerCase(), \"key\", \"value\");\n  }\n\n  @Override\n  @SuppressWarnings(\"unchecked\")\n  public Map<String, BigDecimal> loadNumberOfCustomersByWorthclassForSupportUser(String uUser) {\n    return (Map<String, BigDecimal>) performMapQuery(QUERY_COUNT_CUSTOMER_BY_WORTHCLASS_FOR_USER, uUser.toLowerCase(), \"key\", \"value\");\n  }\n\n  @Override\n  public List<Tupel<Long, BigDecimal>> loadNumberOfCustomersTurnoverForSupportUser(String uUser) {\n    return performListQuery(QUERY_COUNT_CUSTOMER_IN_TURNOVERRANGE_FOR_USER, uUser.toLowerCase());\n  }\n\n  @Override\n  public List<Party> loadPartiesOfFlashInfo(Long flashInfoId, String username) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"flashId\", flashInfoId);\n    params.put(\"username\", username);\n\n    return performListQuery(QUERY_LOAD_PARTIES_OF_FLASHINFO, params);\n  }\n\n  @Override\n  public List<Long> getCustomerIdsForSupportUser(String uUser) {\n    List<Long> list = performListQuery(QUERY_GET_CUSTOMER_IDS_FOR_USER, uUser.toLowerCase());\n    return list != null && list.size() > 0 ? list : null;\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public SearchResult<Party> filterCustomersForSupportUser(CustomerFilter customerFilter, String uUser) {\n    Map<String, Object> params = createParams(customerFilter, uUser.toLowerCase());\n    SearchResult<Party> performLimitedListQuery;\n    int resultsSizeLimit = settingService.getIntValue(SEARCH_RESULT_LIMIT_SETTING_KEY);\n    if (customerFilter.getProductDetailsFilter() == null || customerFilter.getProductDetailsFilter().contains(VBMProductDetails.NO_PROD_FILTER)) {\n      performLimitedListQuery = (SearchResult<Party>) performLimitedListQuery(\"Customer.FilterCustomersForSupportUser\", params, resultsSizeLimit);\n    } else {\n      List<Party> results = performListQuery(\"Customer.FilterCustomersForSupportUser\", params);\n      SearchResult<Party> searchResult = new SearchResult<Party>(new ArrayList<Party>(), results.size() > resultsSizeLimit);\n      searchResult.getResults().addAll(results);\n      performLimitedListQuery = searchResult;\n    }\n    ArrayList<Party> results = new ArrayList<Party>();\n\n    if (customerFilter.getProductDetailsFilter() != null && customerFilter.getProductDetailsFilter().contains(VBMProductDetails.ALL_PROD)) {\n      for (Party party : performLimitedListQuery.getResults()) {\n        if (results.size() >= resultsSizeLimit) {\n          break;\n        }\n        if (party.getAvailableVbmProducts() == null || party.getAvailableVbmProducts().size() == 0) {\n          // Tbd\n        } else {\n          results.add(party);\n        }\n      }\n      performLimitedListQuery.getResults().retainAll(results);\n    } else if (customerFilter.getProductDetailsFilter() != null && !customerFilter.getProductDetailsFilter().contains(VBMProductDetails.NO_PROD_FILTER)) {\n      for (Party party : performLimitedListQuery.getResults()) {\n        if (party.getAvailableVbmProducts() != null && party.getAvailableVbmProducts().size() > 0) {\n          boolean shouldRemove = true;\n          for (VBMProductDetails filter : customerFilter.getProductDetailsFilter()) {\n            if (Arrays.asList(party.getVbmProductsAsString().split(\",\")).contains(filter.getProductName())) {\n              shouldRemove = false;\n            }\n          }\n          if (!shouldRemove) {\n            if (results.size() >= resultsSizeLimit) {\n              break;\n            }\n            results.add(party);\n          }\n        }\n      }\n      performLimitedListQuery.getResults().retainAll(results);\n    }\n\n    return performLimitedListQuery;\n  }\n\n  @Override\n  public List<Party> filterCustomersForSupportUserUnlimited(CustomerFilter customerFilter, String uUser) {\n    // TODO: pass customerFilter directly to sqlmap, move all logic to sqlmap\n    Map<String, Object> params = createParams(customerFilter, uUser.toLowerCase());\n    List<Party> performLimitedListQuery = performListQuery(\"Customer.FilterCustomersForSupportUser\", params);\n    ArrayList<Party> results = new ArrayList<Party>();\n\n    if (customerFilter.getProductDetailsFilter() != null && customerFilter.getProductDetailsFilter().contains(VBMProductDetails.ALL_PROD)) {\n      for (Party party : performLimitedListQuery) {\n        if (party.getAvailableVbmProducts() == null || party.getAvailableVbmProducts().size() == 0) {\n          // Tbd\n        } else {\n          results.add(party);\n        }\n      }\n      performLimitedListQuery.retainAll(results);\n    } else if (customerFilter.getProductDetailsFilter() != null && !customerFilter.getProductDetailsFilter().contains(VBMProductDetails.NO_PROD_FILTER)) {\n      for (Party party : performLimitedListQuery) {\n        if (party.getAvailableVbmProducts() != null && party.getAvailableVbmProducts().size() > 0) {\n          boolean shouldRemove = true;\n          for (VBMProductDetails filter : customerFilter.getProductDetailsFilter()) {\n            if (Arrays.asList(party.getVbmProductsAsString().split(\",\")).contains(filter.getProductName())) {\n              shouldRemove = false;\n            }\n          }\n          if (!shouldRemove) {\n            results.add(party);\n          }\n        }\n      }\n      performLimitedListQuery.retainAll(results);\n    }\n    return performLimitedListQuery;\n  }\n\n  private Map<String, Object> createParams(CustomerFilter customerFilter, String uUser) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"uUser\", uUser.toLowerCase());\n    addChurnFilterParams(customerFilter, params);\n    addFlashInfoFilterParams(customerFilter, params);\n    addVipFilterParams(customerFilter, params);\n    addDualSegmentsFilterParams(customerFilter, params);\n    addWorthClassesFilterParams(customerFilter, params);\n    addTurnoverRangesFilterParams(customerFilter, params);\n    params.put(\"partyId\", customerFilter.getPartyId());\n    params.put(\"plz\", customerFilter.getPlz());\n    addIndexationFilterParams(customerFilter, params);\n\n    /*\n     * if (customerFilter.getProductDetailsFilter() != null) {\n     * if (!customerFilter.getProductDetailsFilter().contains(VBMProductDetails.NO_PROD_FILTER)) {\n     * List<String> prodIds = new ArrayList<String>();\n     * for (VBMProductDetails details : customerFilter.getProductDetailsFilter()) {\n     * if (NumberUtils.isNumber(details.getProductId())) {\n     * prodIds.add(details.getProductId());\n     * }\n     * }\n     * if (!prodIds.isEmpty()) {\n     * params.put(\"productId\", prodIds);\n     * } else {\n     * params.put(\"productId\", null);\n     * }\n     * }\n     * }\n     */\n\n    return params;\n  }\n\n  private void addTurnoverRangesFilterParams(CustomerFilter customerFilter, Map<String, Object> params) {\n    List<Tupel<BigDecimal, BigDecimal>> turnoverRanges = new ArrayList<Tupel<BigDecimal, BigDecimal>>();\n    if (customerFilter.getTurnoverRanges() != null && !customerFilter.getTurnoverRanges().contains(\"ALL\")) {\n      for (String turnOverRangesString : customerFilter.getTurnoverRanges()) {\n        String[] turnOverRangeStrings = turnOverRangesString.split(\";\");\n        BigDecimal lowerRange = new BigDecimal(turnOverRangeStrings[0]);\n        BigDecimal upperRange = new BigDecimal(turnOverRangeStrings[1]);\n        Tupel<BigDecimal, BigDecimal> tupel = new Tupel<BigDecimal, BigDecimal>(lowerRange, upperRange);\n        turnoverRanges.add(tupel);\n      }\n    }\n    params.put(\"turnoverRanges\", turnoverRanges);\n  }\n\n  private void addWorthClassesFilterParams(CustomerFilter customerFilter, Map<String, Object> params) {\n    List<String> worthClasses = new ArrayList<String>();\n    if (customerFilter.getWorthClasses() != null) {\n      for (WorthClass worthClass : customerFilter.getWorthClasses()) {\n        switch (worthClass) {\n          case GOLD:\n          case SILBER:\n          case BRONZE:\n          case BLEI:\n            worthClasses.add(worthClass.name());\n            break;\n          case UNKNOWN:\n            worthClasses.add(null);\n            break;\n        }\n      }\n    }\n    params.put(\"worthClasses\", worthClasses);\n  }\n\n  private void addDualSegmentsFilterParams(CustomerFilter customerFilter, Map<String, Object> params) {\n    List<Integer> dualSegments = new ArrayList<Integer>();\n    if (customerFilter.getDualSegments() != null) {\n      for (DualSegment dualSegment : customerFilter.getDualSegments()) {\n        switch (dualSegment) {\n          case WIRED:\n          case MOBILE:\n          case DUAL:\n          case CONVERGENT:\n          case CONVERGENTWIRED:\n          case CONVERGENTMOBILE:\n          case DUALCONVERGENT:\n            dualSegments.add(dualSegment.getCode());\n            break;\n          case UNKNOWN:\n            dualSegments.add(null);\n            break;\n        }\n      }\n    }\n    params.put(\"dualSegments\", dualSegments);\n  }\n\n  private void addVipFilterParams(CustomerFilter customerFilter, Map<String, Object> params) {\n    if (customerFilter.getVip() != null) {\n      switch (customerFilter.getVip()) {\n        case VIP:\n        case NOVIP:\n          params.put(\"vip\", customerFilter.getVip().name());\n      }\n    }\n  }\n\n  private void addFlashInfoFilterParams(CustomerFilter customerFilter, Map<String, Object> params) {\n    if (customerFilter.getFlashInfo() != null) {\n      switch (customerFilter.getFlashInfo()) {\n        case FLASH:\n        case NOFLASH:\n          params.put(\"flash\", customerFilter.getFlashInfo().name());\n      }\n    }\n  }\n\n  private void addChurnFilterParams(CustomerFilter customerFilter, Map<String, Object> params) {\n    if (customerFilter.getChurn() != null) {\n      switch (customerFilter.getChurn()) {\n        case DANGER:\n        case NODANGER:\n          params.put(\"churn\", customerFilter.getChurn().name());\n      }\n    }\n  }\n\n  private void addIndexationFilterParams(CustomerFilter customerFilter, Map<String, Object> params) {\n    if (customerFilter.getIndexation() != null) {\n      switch (customerFilter.getIndexation()) {\n        case MitIndexierung:\n        case MitIndexanpassung:\n        case OhneIndexierung:\n          params.put(\"indexation\", customerFilter.getIndexation().name());\n      }\n    }\n  }\n\n  @Override\n  public void insertNonCustomerContact(Party party) {\n    executeInsert(INSERT_NON_CUSTOMER, party);\n  }\n\n  @Override\n  public void markNonCustomerMerged(Party party) {\n    executeUpdate(MARK_NC_MERGED, party);\n  }\n\n  @Override\n  public void mergeNonCustomerAndTransferOffers(Party party) {\n    executeUpdate(MERGE_NC_TRANSFER_OFFERS, party);\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithVBMForSupportUser(String uUser) {\n    return (Integer) performObjectQuery(QUERY_COUNT_CUSTOMER_WITH_VBM_FOR_USER, uUser.toLowerCase());\n  }\n\n  @Override\n  public String getPartyIdForQuoteNumber(String offerNumber) {\n    String result = performObjectQuery(QUERY_LOAD_PARTIES_FOR_QUOTENUMBER, offerNumber);\n\n    return result == null ? \"\" : result;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CategoryDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CategoryDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 390,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.CategoryDao;\nimport at.a1ta.cuco.core.shared.dto.Category;\n\npublic class CategoryDaoImpl extends AbstractDao implements CategoryDao {\n\n  @Override\n  public List<Category> listCategories() {\n    return performListQuery(\"SegCategory.list\");\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/MyQuoteDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/MyQuoteDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3407,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.MyQuoteDao;\nimport at.a1ta.cuco.core.shared.dto.MyOpportunity;\nimport at.a1ta.cuco.core.shared.dto.OpportunityFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoOverviewRow;\n\npublic class MyQuoteDaoImpl extends AbstractDao implements MyQuoteDao {\n\n  @Autowired\n  private SettingService settingService;\n\n  private static final String SEARCH_RESULT_LIMIT_SETTING_KEY = \"mycuco.table.searchresult.limit\";\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public SearchResult<MyOpportunity> loadMyOpportunities(OpportunityFilter filter, boolean showNonCustomers) {\n    Map<String, Object> params = createParams(filter);\n    SearchResult<MyOpportunity> result = (SearchResult<MyOpportunity>) performLimitedListQuery(\"MyQuote.LoadMyOpportunities\", params, settingService.getIntValue(SEARCH_RESULT_LIMIT_SETTING_KEY));\n    if (showNonCustomers) {\n      SearchResult<MyOpportunity> resultsForNonCustomer = (SearchResult<MyOpportunity>) performLimitedListQuery(\"MyQuote.LoadMyOpportunitiesForNonCustomers\", params,\n          settingService.getIntValue(SEARCH_RESULT_LIMIT_SETTING_KEY));\n      result.getResults().addAll(resultsForNonCustomer.getResults());\n    }\n    return result;\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public SearchResult<SalesInfoOverviewRow> loadMyQuotesForOverview(OpportunityFilter filter, boolean showNonCustomers) {\n    Map<String, Object> params = createParams(filter);\n    SearchResult<SalesInfoOverviewRow> result = (SearchResult<SalesInfoOverviewRow>) performLimitedListQuery(\"MyQuote.loadMyQuotesForOverview\", params,\n        settingService.getIntValue(SEARCH_RESULT_LIMIT_SETTING_KEY));\n    if (showNonCustomers) {\n      SearchResult<SalesInfoOverviewRow> resultForLeads = (SearchResult<SalesInfoOverviewRow>) performLimitedListQuery(\"MyQuote.loadMyQuotesForOverviewForLeads\", params,\n          settingService.getIntValue(SEARCH_RESULT_LIMIT_SETTING_KEY));\n      result.getResults().addAll(resultForLeads.getResults());\n    }\n    return result;\n  }\n\n  private Map<String, Object> createParams(OpportunityFilter filter) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"userId\", filter.getUserId());\n    params.put(\"clearanceUserId\", filter.getClearanceUserId());\n    params.put(\"betreuer\", filter.getBetreuer() != null ? filter.getBetreuer().toLowerCase() : null);\n    params.put(\"partyId\", filter.getPartyId());\n    params.put(\"quoteNumber\", filter.getQuoteNumber());\n    params.put(\"firstName\", filter.getFirstName());\n    params.put(\"lastName\", filter.getLastName());\n    params.put(\"productOfferingName\", filter.getProductOfferingName() != null ? filter.getProductOfferingName().getId() : null);\n    params.put(\"status\", filter.getStatus());\n    params.put(\"createDate\", filter.getCreateDate());\n    params.put(\"validToDate\", filter.getValidToDate());\n    params.put(\"creatorName\", filter.getCreator());\n    params.put(\"lastModifierName\", filter.getLastModifier());\n    params.put(\"title\", filter.getTitle());\n    params.put(\"assignee\", filter.getAssignee());\n    return params;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ImageDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ImageDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1561,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.ImageDao;\nimport at.a1ta.cuco.core.shared.dto.Image;\n\npublic class ImageDaoImpl extends AbstractDao implements ImageDao {\n  @Override\n  public List<Image> getImages(final Number id, final String uuser, final String filename, final String name, final Number imageSizeId) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n\n    params.put(\"id\", id);\n    params.put(\"uuser\", uuser);\n    params.put(\"filename\", filename);\n    params.put(\"name\", name);\n    params.put(\"imageSizeId\", imageSizeId);\n    return performListQuery(\"Image.GetImages\", params);\n  }\n\n  @Override\n  public void saveImage(final String uuser, final String filename, final String name, final Number imageSizeId) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n\n    params.put(\"uuser\", uuser);\n    params.put(\"filename\", filename);\n    params.put(\"name\", name);\n    params.put(\"imageSizeId\", imageSizeId);\n    executeInsert(\"Image.SaveImage\", params);\n  }\n\n  @Override\n  public int updateImage(final String uuser, final String filename, final String name, final Number imageSizeId) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n\n    params.put(\"uuser\", uuser);\n    params.put(\"filename\", filename);\n    params.put(\"name\", name);\n    params.put(\"imageSizeId\", imageSizeId);\n    return executeUpdate(\"Image.UpdateImage\", params);\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/MKInteractionDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/MKInteractionDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 649,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.data.clarify.shared.dto.CustomerInteraction;\nimport at.a1ta.cuco.core.dao.db.MKInteractionDao;\n\npublic class MKInteractionDaoImpl extends AbstractDao implements MKInteractionDao {\n\n  @Override\n  public List<CustomerInteraction> listMKInteractions(long customerId) {\n    List<CustomerInteraction> interactions = performListQuery(\"MKInteraction.GetInteractionsByCustomerId\", customerId);\n    for (CustomerInteraction interaction : interactions) {\n      interaction.setType(\"MK\");\n    }\n    return interactions;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/PayableTicketDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/PayableTicketDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 761,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.PayableTicketDao;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\n\npublic class PayableTicketDaoImpl extends AbstractDao implements PayableTicketDao {\n\n  @Override\n  public List<PayableTicket> getTicketsForParties(List<Party> parties) {\n    Map<String, Object> m = new HashMap<String, Object>();\n    m.put(\"parties\", parties);\n    return performListQuery(\"PayableTicket.getTicketsForParties\", m);\n  }\n\n  @Override\n  public void insertTicket(PayableTicket ticket) {\n    executeInsert(\"PayableTicket.insert\", ticket);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/MyToDoNotesDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/MyToDoNotesDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1784,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.MyToDoNotesDao;\nimport at.a1ta.cuco.core.shared.dto.ToDoNotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\npublic class MyToDoNotesDaoImpl extends AbstractDao implements MyToDoNotesDao {\n  @Autowired\n  private SettingService settingService;\n\n  private static final String SEARCH_RESULT_LIMIT_SETTING_KEY = \"mycuco.table.searchresult.limit\";\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public SearchResult<SalesInfoNote> loadMyToDoNotes(ToDoNotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad) {\n    Map<String, Object> params = createParams(filter, salesInfoNoteTypesToLoad);\n    SearchResult<SalesInfoNote> result = (SearchResult<SalesInfoNote>) performLimitedListQuery(\"VisitReport.getOpenToDoGroupNotesForUser\", params,\n        settingService.getIntValue(SEARCH_RESULT_LIMIT_SETTING_KEY));\n    return result;\n  }\n\n  private Map<String, Object> createParams(ToDoNotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"userId\", filter.getUserId());\n    params.put(\"partyId\", filter.getPartyId());\n    params.put(\"groupName\", filter.getGroupName());\n    params.put(\"groupStatus\", filter.getGroupStatus());\n    params.put(\"salesInfoNoteTypesToLoad\", salesInfoNoteTypesToLoad);\n    return params;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ServiceDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ServiceDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 974,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.ServiceDao;\nimport at.a1ta.cuco.core.shared.dto.Service;\n\npublic class ServiceDaoImpl extends AbstractDao implements ServiceDao {\n\n  @Override\n  public void insertService(Service service) {\n    executeInsert(\"Service.insert\", service);\n  }\n\n  @Override\n  public void deleteService(Long serviceId) {\n    executeDelete(\"Service.delete\", serviceId);\n  }\n\n  @Override\n  public List<Service> getAllServices() {\n    return performListQuery(\"Service.get\");\n  }\n\n  @Override\n  public void updateService(Service service) {\n    executeUpdate(\"Service.update\", service);\n  }\n\n  @Override\n  public List<Service> getValidForUser(Long userId) {\n    return performListQuery(\"Service.getValidForUser\", userId);\n  }\n\n  @Override\n  public List<Service> searchService(String service) {\n    return performListQuery(\"Service.search\", service);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/InventoryDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/InventoryDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4986,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.InventoryDao;\nimport at.a1ta.cuco.core.shared.dto.BindingsFilter;\nimport at.a1ta.cuco.core.shared.dto.CustomerBinding;\n\npublic class InventoryDaoImpl extends AbstractDao implements InventoryDao {\n\n  private static final String SEARCH_RESULT_LIMIT_SETTING_KEY = \"mycuco.table.searchresult.limit\";\n  private static final String BINDING_TIMERANGE_1 = \"mycuco.binding.timerange1.days\";\n  private static final String BINDING_TIMERANGE_2 = \"mycuco.binding.timerange2.days\";\n  private static final String BINDING_TIMERANGE_3 = \"mycuco.binding.timerange3.days\";\n\n  private SettingService settingService;\n\n  // @Override\n  // public List<Inventory> listInventory4Customers(List<Long> customerIds, List<Long> contractIds, ProductDetailFilter productFilter) {\n  // Map<String, Object> params = new HashMap<String, Object>();\n  // params.put(\"customerIds\", customerIds);\n  // if (contractIds != null) {\n  // params.put(\"contractIds\", contractIds);\n  // }\n  // params.put(\"filter\", productFilter);\n  // if (productFilter.getSecretLevel() != null) {\n  // params.put(productFilter.getSecretLevel() ? \"secretNumber\" : \"noSecretNumber\", true);\n  // }\n  //\n  // return performListQuery(\"Inventory.GetInventory4Customer\", params);\n  // }\n\n  @Override\n  public List<Date> getExpiringContractDates(String uUser, int maxTimeRange) {\n    HashMap<String, Object> paramMap = new HashMap<String, Object>();\n\n    paramMap.put(\"uUser\", uUser.toLowerCase());\n    paramMap.put(\"maxTimeRange\", maxTimeRange);\n\n    return performListQuery(\"Inventory.getExpiringContractDatesForNextMonth\", paramMap);\n  }\n\n  @Override\n  public String getProductName(Long customerId, Long contractId, Long aonNumber) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"customerId\", customerId);\n    params.put(\"contractId\", contractId);\n    params.put(\"aonNumber\", aonNumber);\n    List<String> names = performListQuery(\"Inventory.getProductName\", params);\n    if (names.size() > 0) {\n      return names.get(0);\n    }\n    return null;\n  }\n\n  @Override\n  public Long getAonNumber(Long customerId, Long contractId, String productNumber) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"customerId\", customerId);\n    params.put(\"contractId\", contractId);\n    params.put(\"productNumber\", productNumber);\n    List<Long> aonNumbers = performListQuery(\"Inventory.getAonNumber\", params);\n    if (aonNumbers.size() > 0) {\n      return aonNumbers.get(0);\n    }\n    return null;\n  }\n\n  @Override\n  @SuppressWarnings(\"unchecked\")\n  public SearchResult<CustomerBinding> filterBindingsInfo(BindingsFilter bindingsFilter, String uUser) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"uUser\", uUser.toLowerCase());\n\n    if (bindingsFilter != null) {\n      if (bindingsFilter.getContractEnd() != null) {\n        if (bindingsFilter.getContractEnd() == BindingsFilter.Contract.TIMERANGE_1) {\n          params.put(\"expireInDays\", getIntSetting(BINDING_TIMERANGE_1));\n        } else if (bindingsFilter.getContractEnd() == BindingsFilter.Contract.TIMERANGE_2) {\n          params.put(\"expireInDays\", getIntSetting(BINDING_TIMERANGE_2));\n        } else if (bindingsFilter.getContractEnd() == BindingsFilter.Contract.TIMERANGE_3) {\n          params.put(\"expireInDays\", getIntSetting(BINDING_TIMERANGE_3));\n        } else if (bindingsFilter.getContractEnd() == BindingsFilter.Contract.LARGER_TIMERANGE_3) {\n          params.put(\"expireInFuture\", getIntSetting(BINDING_TIMERANGE_3));\n        } else {\n          params.put(\"contractFilter\", bindingsFilter.getContractEnd().name());\n        }\n      }\n      if (StringUtils.isNotBlank(bindingsFilter.getPartyId())) {\n        params.put(\"partyId\", bindingsFilter.getPartyId());\n      }\n      if (StringUtils.isNotBlank(bindingsFilter.getProductDescription())) {\n        params.put(\"productDescription\", StringUtils.trimToEmpty(bindingsFilter.getProductDescription()));\n      }\n      params.put(\"contractStart\", bindingsFilter.getContractStart());\n    }\n\n    return (SearchResult<CustomerBinding>) performLimitedListQuery(\"Inventory.filterBindingsInfo\", params, settingService.getIntValue(SEARCH_RESULT_LIMIT_SETTING_KEY));\n  }\n\n  private int getIntSetting(String key) {\n    return settingService.getIntValue(key);\n  }\n\n  @Override\n  public int getExpiredContracts(String uUser) {\n    return (Integer) performObjectQuery(\"Inventory.getExpiredContracts\", uUser);\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UsageDataDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UsageDataDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5266,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.UsageDataDao;\nimport at.a1ta.cuco.core.shared.dto.usagedata.InetUsage;\nimport at.a1ta.cuco.core.shared.dto.usagedata.MobileUsage;\nimport at.a1ta.cuco.core.shared.dto.usagedata.NetworkProvider;\nimport at.a1ta.cuco.core.shared.dto.usagedata.VoiceUsage;\n\npublic class UsageDataDaoImpl extends AbstractDao implements UsageDataDao {\n\n  private static final String CUSTOMER_IDS = \"customerIds\";\n  private static final String PHONE_NUMBER = \"phoneNumber\";\n  private static final String CUSTOMER_ID = \"customerId\";\n  private static final String BAN_ID = \"banId\";\n\n  @Override\n  public List<String> getFixedLineNumbers(long partyId) {\n    return performListQuery(\"UsageData.GetFixedLineNumbers\", partyId);\n  }\n\n  @Override\n  public List<String> getMobileBanNumbers(long partyId) {\n    return performListQuery(\"UsageData.GetMobileBans\", partyId);\n  }\n\n  @Override\n  public List<String> getMobileNumbers(long partyId, String ban) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    appendCustomerId(partyId, params);\n    params.put(BAN_ID, ban);\n    return performListQuery(\"UsageData.GetMobileNumbers\", params);\n  }\n\n  @Override\n  public List<String> getAonNumbers(long partyId) {\n    return performListQuery(\"UsageData.GetAonNumbers\", partyId);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineUsage(List<Long> partyIds) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n\n    params.put(CUSTOMER_IDS, partyIds);\n    return performListQuery(\"UsageData.GetFixedLineUsage\", params);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineUsage(long partyId) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    return performListQuery(\"UsageData.GetFixedLineUsage\", params);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineUsage(long partyId, String phoneNumber) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    appendPhoneNumber(phoneNumber, params);\n    return performListQuery(\"UsageData.GetFixedLineUsage\", params);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineZoneUsage(long partyId, String phoneNumber) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    appendPhoneNumber(phoneNumber, params);\n    return performListQuery(\"UsageData.GetFixedLineZoneUsage\", params);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineTimeZones(long partyId, String phoneNumber) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    appendPhoneNumber(phoneNumber, params);\n    return performListQuery(\"UsageData.GetTimeZones\", params);\n  }\n\n  @Override\n  public List<InetUsage> getAonUsageData(List<Long> partyIds, NetworkProvider provider) {\n    Map<String, Object> params = new HashMap<String, Object>();\n\n    params.put(CUSTOMER_IDS, partyIds);\n    return performListQuery(\"UsageData.GetAonUsageData\", params);\n  }\n\n  @Override\n  public List<InetUsage> getAonUsageData(long partyId, NetworkProvider provider) {\n    Map<String, Object> params = new HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    return performListQuery(\"UsageData.GetAonUsageData\", params);\n  }\n\n  @Override\n  public List<InetUsage> getAonUsageData(long partyId, String aonAccountNumber, NetworkProvider provider) {\n    Map<String, Object> params = new java.util.HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    params.put(PHONE_NUMBER, aonAccountNumber);\n    return performListQuery(\"UsageData.GetAonUsageData\", params);\n  }\n\n  @Override\n  public List<MobileUsage> getMobileUsageDataPerBan(long partyId, String ban) {\n    Map<String, Object> params = new java.util.HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    params.put(BAN_ID, ban);\n    return performListQuery(\"UsageData.GetMobileUsageData\", params);\n  }\n\n  @Override\n  public List<MobileUsage> getMobileUsageData(List<Long> partyIds) {\n    Map<String, Object> params = new java.util.HashMap<String, Object>();\n\n    params.put(CUSTOMER_IDS, partyIds);\n    return performListQuery(\"UsageData.GetMobileUsageData\", params);\n  }\n\n  @Override\n  public List<MobileUsage> getMobileUsageData(long partyId) {\n    Map<String, Object> params = new java.util.HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    return performListQuery(\"UsageData.GetMobileUsageData\", params);\n  }\n\n  @Override\n  public List<MobileUsage> getMobileUsageData(long partyId, String phoneNumber) {\n    Map<String, Object> params = new java.util.HashMap<String, Object>();\n\n    appendCustomerId(partyId, params);\n    appendPhoneNumber(phoneNumber, params);\n    return performListQuery(\"UsageData.GetMobileUsageData\", params);\n  }\n\n  private void appendPhoneNumber(String phoneNumber, final Map<String, Object> params) {\n    params.put(PHONE_NUMBER, phoneNumber);\n  }\n\n  private void appendCustomerId(long partyId, final Map<String, Object> params) {\n    params.put(CUSTOMER_ID, partyId);\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/PhoneNumberDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/PhoneNumberDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4513,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.dao.util.PhoneNumberParser;\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.MobileChurnLikeliness;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.ProductDetailFilter;\n\npublic class PhoneNumberDaoImpl extends AbstractDao implements PhoneNumberDao {\n\n  private static final String PARAM_CUSTOMER_ID = \"customerId\";\n  private static final String PARAM_CUSTOMER_IDS = \"customerIds\";\n  private static final String PARAM_CONTRACT_ID = \"contractId\";\n  private static final String PARAM_LOCATION_ID = \"locationId\";\n  private static final String QUERY_GET_PHONE_NUMBERS = \"PhoneNumber.GetPhoneNumbers\";\n  private static final String QUERY_DISTINCT_COUNTRY_CODES = \"PhoneNumber.getCountryCodes\";\n  private static final String QUERY_DISTINCT_ONKZS = \"PhoneNumber.getOnkzs\";\n  private static final String QUERY_DISTINCT_SPECIAL_ONKZS = \"PhoneNumber.getSpecialOnkzs\";\n  private static final String QUERY_FIND_BY_TN = \"PhoneNumber.findByTN\";\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers(final Long customerId, final Long contractId, final Long locationId, final int skip, final int maxResults) {\n    final Map<String, Object> params = new HashMap<String, Object>(3);\n    if (customerId != null) {\n      params.put(PARAM_CUSTOMER_ID, customerId);\n    }\n    if (contractId != null) {\n      params.put(PARAM_CONTRACT_ID, contractId);\n    }\n    if (locationId != null) {\n      params.put(PARAM_LOCATION_ID, locationId);\n    }\n    return performListQuery(QUERY_GET_PHONE_NUMBERS, params, skip, maxResults);\n  }\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers(List<Long> customerIds, ProductDetailFilter productFilter) {\n    Map<String, Object> params = new HashMap<String, Object>();\n\n    params.put(PARAM_CUSTOMER_IDS, customerIds);\n    params.put(\"filter\", productFilter);\n\n    return performListQuery(QUERY_GET_PHONE_NUMBERS, params);\n  }\n\n  @Override\n  public List<String> getCountryCodes() {\n    return performListQuery(QUERY_DISTINCT_COUNTRY_CODES);\n  }\n\n  @Override\n  public List<String> getOnkzs() {\n    return performListQuery(QUERY_DISTINCT_ONKZS);\n  }\n\n  @Override\n  public List<String> getSpecialOnkzs() {\n    return performListQuery(QUERY_DISTINCT_SPECIAL_ONKZS);\n  }\n\n  @Override\n  public String findByTN(List<String> possibleNumbers, String onkz) {\n    final Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"onkz\", onkz);\n    params.put(\"numbers\", possibleNumbers);\n\n    final List<String> numbers = performListQuery(QUERY_FIND_BY_TN, params);\n    return numbers != null && numbers.size() > 0 ? numbers.get(0) : null;\n  }\n\n  @Override\n  public PhoneNumberStructure parse(final String phoneNumberAsString) {\n    final PhoneNumberParser parser = new PhoneNumberParser(this);\n    return parser.parse(phoneNumberAsString);\n  }\n\n  @Override\n  public List<BillingAccountNumber> getBillingAccountNumbersForParty(long partyId) {\n    return performListQuery(\"PhoneNumber.getBillingAccountNumbersForParty\", partyId);\n  }\n\n  @Override\n  public Long getBillingAccountNumberForPhoneNumber(String countryCode, String onkz, String number) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"countryCode\", countryCode);\n    params.put(\"onkz\", onkz);\n    params.put(\"number\", number);\n\n    return performObjectQuery(\"PhoneNumber.getBillingAccountNumberForPhoneNumber\", params);\n  }\n\n  @Override\n  public List<String> getPhoneNumbersForClearingAccountId(long clearingAccountId) {\n    return performListQuery(\"PhoneNumber.getPhoneNumbersForClearingAccountId\", clearingAccountId);\n  }\n\n  @Override\n  public List<PhoneNumber> getPhoneNumbersForBillingAccountNumber(long banId) {\n    return performListQuery(\"PhoneNumber.getPhoneNumbersForBillingAccountNumber\", banId);\n  }\n\n  @Override\n  public List<MobileChurnLikeliness> getMobileChurnLikelinessForParty(long partyId) {\n    return performListQuery(\"PhoneNumber.getMobileChurnLikelinessForParty\", partyId);\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithMobileChurnForSupportUser(String uUser) {\n    return (Integer) performObjectQuery(\"PhoneNumber.GetNumberOfCustomersWithChurnForSupportUser\", uUser.toLowerCase());\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/InventoryProductGroupDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/InventoryProductGroupDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4435,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.InventoryProductGroupDao;\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroup;\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroupAssignation;\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroupUsage;\nimport at.a1ta.cuco.core.shared.dto.Product;\nimport at.a1ta.cuco.core.shared.dto.ProductLevel;\n\npublic class InventoryProductGroupDaoImpl extends AbstractDao implements InventoryProductGroupDao {\n\n  @Override\n  public List<InventoryProductGroup> getAllInventoryProductGroups() {\n    return performListQuery(\"InventoryProductGroup.Get\");\n  }\n\n  @Override\n  public InventoryProductGroup getInventoryProductGroup(Long id) {\n    return performObjectQuery(\"InventoryProductGroup.Get\", id);\n  }\n\n  @Override\n  public void insertInventoryProductGroup(InventoryProductGroup inventoryProductGroup) {\n    executeInsert(\"InventoryProductGroup.Insert\", inventoryProductGroup);\n  }\n\n  @Override\n  public void updateInventoryProductGroup(InventoryProductGroup inventoryProductGroup) {\n    executeUpdate(\"InventoryProductGroup.Update\", inventoryProductGroup);\n  }\n\n  @Override\n  public int deleteInventoryProductGroup(InventoryProductGroup inventoryProductGroup) {\n    int result = executeDelete(\"InventoryProductGroup.Delete\", inventoryProductGroup.getId());\n    executeUpdate(\"InventoryProductGroup.MoveUpFrom\", inventoryProductGroup.getOrder());\n    return result;\n  }\n\n  @Override\n  public void addProductToInventoryProductGroup(String productId, Long inventoryProductGroupId) {\n    Map<String, Object> map = new HashMap<String, Object>(2);\n    map.put(\"productId\", productId);\n    map.put(\"inventoryProductGroupId\", inventoryProductGroupId);\n    executeInsert(\"InventoryProductGroup.AddProduct\", map);\n  }\n\n  @Override\n  public void addLevelToInventoryProductGroup(Long levelId, Long inventoryProductGroupId) {\n    Map<String, Object> map = new HashMap<String, Object>(2);\n    map.put(\"levelId\", levelId);\n    map.put(\"inventoryProductGroupId\", inventoryProductGroupId);\n    executeInsert(\"InventoryProductGroup.AddLevel\", map);\n  }\n\n  @Override\n  public void removeProductFromInventoryProductGroup(String productId, Long inventoryProductGroupId) {\n    Map<String, Object> map = new HashMap<String, Object>(2);\n    map.put(\"productId\", productId);\n    map.put(\"inventoryProductGroupId\", inventoryProductGroupId);\n    executeDelete(\"InventoryProductGroup.RemoveProduct\", map);\n  }\n\n  @Override\n  public void removeLevelFromInventoryProductGroup(Long levelId, Long inventoryProductGroupId) {\n    Map<String, Object> map = new HashMap<String, Object>(2);\n    map.put(\"levelId\", levelId);\n    map.put(\"inventoryProductGroupId\", inventoryProductGroupId);\n    executeDelete(\"InventoryProductGroup.RemoveLevel\", map);\n  }\n\n  @Override\n  public List<Product> getProductsForInventoryProductGroup(Long inventoryProductGroupId) {\n    return performListQuery(\"InventoryProductGroup.GetProductsForInventoryProductGroup\", inventoryProductGroupId);\n  }\n\n  @Override\n  public List<ProductLevel> getProductLevelsForInventoryProductGroup(Long inventoryProductGroupId) {\n    return performListQuery(\"InventoryProductGroup.GetProductLevelsForInventoryProductGroup\", inventoryProductGroupId);\n  }\n\n  @Override\n  public void moveInventoryProductGroupUp(InventoryProductGroup inventoryProductGroup) {\n    executeUpdate(\"InventoryProductGroup.MoveUp\", inventoryProductGroup.getOrder());\n  }\n\n  @Override\n  public void moveInventoryProductGroupDown(InventoryProductGroup inventoryProductGroup) {\n    executeUpdate(\"InventoryProductGroup.MoveDown\", inventoryProductGroup.getOrder());\n  }\n\n  @Override\n  public List<InventoryProductGroupAssignation> getInventoryProductGroupAssignations() {\n    return performListQuery(\"InventoryProductGroup.getInventoryProductGroupAssignations\");\n  }\n\n  @Override\n  public List<InventoryProductGroupUsage> getInventoryProductGroupUsagesByPartyId(Long partyId) {\n    return performListQuery(\"InventoryProductGroup.GetUsagesByPartyId\", partyId);\n  }\n\n  @Override\n  public Set<String> getAnbSsaProductIds() {\n    Collection<String> list = performListQuery(\"InventoryProductGroup.GetAnbSsaProductIds\", null);\n    return new HashSet<String>(list);\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CreditTypeDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CreditTypeDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 842,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.CreditTypeDao;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\n\npublic class CreditTypeDaoImpl extends AbstractDao implements CreditTypeDao {\n\n  @Override\n  public void deleteCreditType(Long id) {\n    executeDelete(\"CreditType.delete\", id);\n  }\n\n  @Override\n  public List<CreditType> getAllCreditTypes() {\n    return performListQuery(\"CreditType.get\");\n  }\n\n  @Override\n  public CreditType getCreditTypeById(Long id) {\n    return performObjectQuery(\"CreditType.get\", id);\n  }\n\n  @Override\n  public void insertCreditType(CreditType ct) {\n    executeInsert(\"CreditType.insert\", ct);\n  }\n\n  @Override\n  public void updateCreditType(CreditType ct) {\n    executeInsert(\"CreditType.update\", ct);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/TurnoverDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/TurnoverDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 407,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.TurnoverDao;\nimport at.a1ta.cuco.core.shared.dto.Turnover;\n\npublic class TurnoverDaoImpl extends AbstractDao implements TurnoverDao {\n\n  @Override\n  public List<Turnover> getAllForParty(long partyId) {\n    return performListQuery(\"Turnover.get\", partyId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/LocationDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/LocationDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 836,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.data.clarify.shared.dto.Location;\nimport at.a1ta.cuco.core.dao.db.LocationDao;\n\npublic class LocationDaoImpl extends AbstractDao implements LocationDao {\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Map<Long, Location> listLocations(List<Long> customerIds) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"customerIds\", customerIds);\n\n    return (Map<Long, Location>) performMapQuery(\"Location.getLocations4Customers\", params, \"id\");\n  }\n\n  @Override\n  public Number getDistinctNrLocations4customer(long customerId) {\n    return performObjectQuery(\"Location.CountDistinctLocations4customer\", customerId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/InvoiceDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/InvoiceDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 723,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.InvoiceDao;\nimport at.a1ta.cuco.core.shared.dto.Invoice;\n\npublic class InvoiceDaoImpl extends AbstractDao implements InvoiceDao {\n\n  @Override\n  public List<Invoice> getByPartyIds(Collection<Long> partyIds) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"partyIds\", partyIds);\n    return performListQuery(\"Invoice.getByPartyIds\", params);\n  }\n\n  @Override\n  public Invoice getById(long invoiceId) {\n    return performObjectQuery(\"Invoice.getById\", invoiceId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/SegmentDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/SegmentDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 382,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.SegmentDao;\nimport at.a1ta.cuco.core.shared.dto.Segment;\n\npublic class SegmentDaoImpl extends AbstractDao implements SegmentDao {\n\n  @Override\n  public List<Segment> listSegments() {\n    return performListQuery(\"SegSegment.list\");\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ContactPersonDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ContactPersonDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3056,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.ContactPersonDao;\nimport at.a1ta.cuco.core.shared.dto.ContactPerson;\n\npublic class ContactPersonDaoImpl extends AbstractDao implements ContactPersonDao {\n\n  @Override\n  public List<ContactPerson> listContactPersons(List<Long> partyIds) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"partyIds\", partyIds);\n    return performListQuery(\"ContactPerson.GetContactPersons4Customer\", params);\n  }\n\n  @Override\n  public List<ContactPerson> listContactPersonsInclLocalContacts(List<Long> partyIds) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"partyIds\", partyIds);\n    return performListQuery(\"ContactPerson.GetAllContactPersons4Customers\", params);\n  }\n\n  @Override\n  public Boolean checkIfReferenceExists(Long partyId, Long id) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"partyId\", partyId);\n    params.put(\"id\", id);\n    int checkRef = ((Integer) performObjectQuery(\"ContactPerson.CheckReferenceInSBSNoteAndProductNote\", params));\n    return (checkRef == 1 ? true : false);\n  \n  }\n\n  @Override\n  public void insertLocalContact(ContactPerson contact) {\n    executeInsert(\"ContactPerson.InsertLocalContact\", contact);\n  }\n\n  @Override\n  public void updateLocalContact(ContactPerson contact) {\n    executeUpdate(\"ContactPerson.updateLocalContact\", contact);\n\n  }\n\n  @Override\n  public void updateLocalContactStatus(ContactPerson contact) {\n    executeUpdate(\"ContactPerson.updateLocalContactPersonStatus\", contact);\n  }\n\n  @Override\n  public void updateDWHContactStatus(ContactPerson contact) {\n    Integer count = performObjectQuery(\"ContactPerson.getDWHContactPersonStatusEntryCount\", contact);\n    if (count != null && count > 0) {\n      executeUpdate(\"ContactPerson.updateDWHContactPersonStatus\", contact);\n    } else {\n      executeUpdate(\"ContactPerson.insertDWHContactPersonStatus\", contact);\n    }\n  }\n\n  @Override\n  public void deleteLocalContact(ContactPerson contact) {\n    executeDelete(\"ContactPerson.deleteLocalContact\", contact);\n  }\n\n  @Override\n  public void markLocalContactDeleted(ContactPerson contact) {\n    contact.setDeleted(1);\n    executeUpdate(\"ContactPerson.markLocalContactPersonDeleted\", contact);\n  }\n\n  @Override\n  public List<ContactPerson> listContactPersonsIncludingDeleted(List<Long> partyIds) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"partyIds\", partyIds);\n    return performListQuery(\"ContactPerson.GetContactPersons4CustomerIncludingDeleted\", params);\n  }\n\n  @Override\n  public List<ContactPerson> listContactPersonsInclLocalContactsAndDeletedContacts(List<Long> partyIds) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"partyIds\", partyIds);\n    return performListQuery(\"ContactPerson.GetAllContactPersons4CustomersIncludingDeleted\", params);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CCTOrgStructureElementDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CCTOrgStructureElementDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2148,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.ibatis.sqlmap.client.SqlMapClient;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.CCTOrgStructureElementDao;\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\npublic class CCTOrgStructureElementDaoImpl extends AbstractDao implements CCTOrgStructureElementDao {\n\n  @Override\n  public List<String> getAllUsers() {\n    return performListQuery(\"User.getAllLogin\");\n  }\n\n  @Override\n  public void eraseOldEntries() {\n    executeDelete(\"CCTOrgStructureElement.eraseOldEntries\", null);\n  }\n\n  @Override\n  public void updateCCTOrg(CCTOrgStructureElement user) {\n    executeInsert(\"CCTOrgStructureElement.insertCCTOrgStructureElements\", user);\n  }\n\n  @Override\n  public void deleteAllAndBatchInsertInTransaction(ArrayList<CCTOrgStructureElement> user) {\n    executeDeleteAllAndBatchInsertInTransaction(\"CCTOrgStructureElement.eraseOldEntries\", null, \"CCTOrgStructureElement.insertCCTOrgStructureElements\", user);\n  }\n\n  private void executeDeleteAllAndBatchInsertInTransaction(final String deleteStatementName, final Object deleteParameter, final String insertStatementName,\n      final ArrayList<CCTOrgStructureElement> insertList) {\n    SqlMapClient sqlMapClient = this.getSqlMapClientTemplate().getSqlMapClient();\n    try {\n      sqlMapClient.startTransaction();\n      sqlMapClient.startBatch();\n      sqlMapClient.delete(deleteStatementName, deleteParameter);\n      for (CCTOrgStructureElement user : insertList) {\n        logger.trace(\"Inserting user: \" + user);\n        sqlMapClient.insert(insertStatementName, user);\n      }\n      sqlMapClient.commitTransaction();\n      logger.debug(\"Inserting Finished.\");\n    } catch (RuntimeException e) {\n      handleException(insertList, e);\n      throw e;\n    } catch (SQLException e) {\n      handleException(insertList, e);\n      throw new RuntimeException(e);\n    } finally {\n      try {\n        sqlMapClient.endTransaction();\n      } catch (SQLException e) {\n        logger.error(e.getMessage(), e);\n      }\n    }\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ReportingDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ReportingDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 670,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.bean.Reporting;\nimport at.a1ta.cuco.core.dao.db.ReportingDao;\n\npublic class ReportingDaoImpl extends AbstractDao implements ReportingDao {\n\n  @Override\n  public Reporting getReporting(long id) {\n    return performObjectQuery(\"Reporting.get\", id);\n  }\n\n  @Override\n  public List<Reporting> getAllReportings() {\n    return performListQuery(\"Reporting.get\");\n  }\n\n  @Override\n  public List<HashMap<String, Object>> executeReporting(String stmt) {\n    return performListQuery(\"Reporting.execute\", stmt);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UserInfoStatisticsDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UserInfoStatisticsDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1238,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.dao.db.UserInfoStatisticsDao;\nimport at.a1ta.cuco.core.shared.dto.UserInfoStatistics;\nimport org.springframework.beans.factory.annotation.Autowired;\n\npublic class UserInfoStatisticsDaoImpl extends AbstractDao implements UserInfoStatisticsDao {\n\n  private static final String BINDING_TIMERANGE_3 = \"mycuco.binding.timerange3.days\";\n  private static final String REMINDER_TIMERANGE_3 = \"mycuco.reminders.timerange3.days\";\n  private SettingService settingService;\n\n  @Override\n  public UserInfoStatistics getUserInfoStatistics(String uUser) {\n    HashMap<String, Object> params = new HashMap<String, Object>();\n    params.put(\"uuser\", uUser.toLowerCase());\n    params.put(\"bindingDayLimit\", settingService.getIntValue(BINDING_TIMERANGE_3));\n    params.put(\"reminderDayLimit\", settingService.getIntValue(REMINDER_TIMERANGE_3));\n    return (UserInfoStatistics) performObjectQuery(\"UserInfoStats.getStats\", params);\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ChargingTypeDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ChargingTypeDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 414,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.ChargingTypeDao;\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\n\npublic class ChargingTypeDaoImpl extends AbstractDao implements ChargingTypeDao {\n  @Override\n  public List<ChargingType> getAllChargingTypes() {\n    return performListQuery(\"ChargingType.get\");\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CustomerBlockDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CustomerBlockDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1041,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.CustomerBlockDao;\nimport at.a1ta.cuco.core.shared.dto.CustomerBlock;\n\npublic class CustomerBlockDaoImpl extends AbstractDao implements CustomerBlockDao {\n\n  @Override\n  public List<CustomerBlock> getCustomerBlocksForFlashInfo(long flashInfoId) {\n    return performListQuery(\"CustomerBlock.getForFlashInfo\", flashInfoId);\n  }\n\n  @Override\n  public CustomerBlock getCustomerBlockById(long customerBlockId) {\n    return performObjectQuery(\"CustomerBlock.get\", customerBlockId);\n  }\n\n  @Override\n  public void insertCustomerBlock(CustomerBlock customerBlock) {\n    executeInsert(\"CustomerBlock.insert\", customerBlock);\n  }\n\n  @Override\n  public void updateCustomerBlock(CustomerBlock customerBlock) {\n    executeUpdate(\"CustomerBlock.update\", customerBlock);\n  }\n\n  @Override\n  public void deleteCustomerBlock(long customerBlockId) {\n    executeDelete(\"CustomerBlock.delete\", customerBlockId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/FlashInfoDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/FlashInfoDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3233,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.sql.SQLException;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.orm.ibatis.SqlMapClientCallback;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.FlashInfoDao;\nimport at.a1ta.cuco.core.shared.dto.FlashInfo;\nimport at.a1ta.cuco.core.shared.dto.Tupel;\n\nimport com.ibatis.sqlmap.client.SqlMapExecutor;\n\npublic class FlashInfoDaoImpl extends AbstractDao implements FlashInfoDao {\n\n  @Override\n  public FlashInfo getFlashInfoById(long flashId) {\n    return (FlashInfo) performObjectQuery(\"FlashInfo.get\", flashId);\n  }\n\n  @Override\n  public List<FlashInfo> getAllFlashInfos() {\n    return performListQuery(\"FlashInfo.get\");\n  }\n\n  @Override\n  public List<FlashInfo> getFlashInfoForUserAndCustomer(long userId, long customerId) {\n    HashMap<String, Object> params = new HashMap<String, Object>();\n    params.put(\"userId\", userId);\n    params.put(\"kundeId\", customerId);\n\n    return performListQuery(\"FlashInfo.getForUserAndCustomer\", params);\n  }\n\n  @Override\n  public List<FlashInfo> loadMyFlashInfos(Map<String, Object> params) {\n    return performListQuery(\"FlashInfo.filterFlashInfos\", params);\n  }\n\n  @Override\n  public void insertFlashInfo(FlashInfo flashInfo) {\n    executeInsert(\"FlashInfo.insert\", flashInfo);\n  }\n\n  @Override\n  public void updateFlashInfo(FlashInfo flashInfo) {\n    executeUpdate(\"FlashInfo.update\", flashInfo);\n  }\n\n  @Override\n  public void deleteFlashInfo(long flashId) {\n    executeDelete(\"FlashInfo.delete\", flashId);\n  }\n\n  @SuppressWarnings(\"deprecation\")\n  @Override\n  public void insertFlashCustomer(final Collection<Tupel<Long, Long>> tupel) {\n    getSqlMapClientTemplate().execute(new SqlMapClientCallback<Long>() {\n      @Override\n      public Long doInSqlMapClient(SqlMapExecutor executor) throws SQLException {\n        executor.startBatch();\n        for (Tupel<Long, Long> values : tupel) {\n          HashMap<String, Object> params = new HashMap<String, Object>();\n          params.put(\"flashId\", values.getValue1());\n          params.put(\"kundeId\", values.getValue2());\n\n          executor.insert(\"FlashInfo.insertFlashKunde\", params);\n        }\n        executor.executeBatch();\n        return (long) tupel.size();\n      }\n    });\n  }\n\n  @Override\n  public void deleteFlashCustomerForFlash(long flashId) {\n    executeDelete(\"FlashInfo.deleteFlashKundeForFlash\", flashId);\n  }\n\n  @Override\n  public void insertFlashRole(long flashInfoId, String roleName) {\n    HashMap<String, Object> params = new HashMap<String, Object>();\n    params.put(\"flashId\", flashInfoId);\n    params.put(\"roleName\", roleName);\n\n    executeInsert(\"FlashInfo.insertFlashRolle\", params);\n  }\n\n  @Override\n  public void deleteFlashRoleForFlash(long flashId) {\n    executeDelete(\"FlashInfo.deleteFlashRolleForFlash\", flashId);\n  }\n\n  @Override\n  public void insertFlashViewed(long flashInfoId, long partyId, long userId) {\n    HashMap<String, Object> params = new HashMap<String, Object>();\n    params.put(\"flashId\", flashInfoId);\n    params.put(\"kundeId\", partyId);\n    params.put(\"userId\", userId);\n\n    executeInsert(\"FlashInfo.insertView\", params);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/SettingsEditorDAOImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/SettingsEditorDAOImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 670,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.shared.dto.Setting;\nimport at.a1ta.cuco.core.dao.db.SettingsEditorDAO;\n\npublic class SettingsEditorDAOImpl extends AbstractDao implements SettingsEditorDAO {\n\n  @Override\n  public List<Setting> getSettings() {\n    return performListQuery(\"cucoSettings.getSettings\");\n  }\n\n  @Override\n  public void updateSetting(Setting setting) {\n    executeUpdate(\"cucoSettings.updateSetting\", setting);\n  }\n\n  @Override\n  public List<Setting> searchSetting(String value) {\n    return performListQuery(\"cucoSettings.searchSetting\", value);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/SalesInfoDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/SalesInfoDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6778,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.SalesInfoDao;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.AppointmentNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.CompetitorNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesConvNoteReportRow;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SbsNoteReportRow;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SimpleNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.Task;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.TeamEmailAdminGroup;\n\npublic class SalesInfoDaoImpl extends AbstractDao implements SalesInfoDao {\n  @Override\n  public List<SalesInfoNote> getNotesByPartyId(long partyId, List<SalesInfoNoteType> salesInfoNoteTypesToLoad) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"partyId\", Long.valueOf(partyId));\n    params.put(\"salesInfoNoteTypesToLoad\", salesInfoNoteTypesToLoad);\n    return performListQuery(\"SalesInfo.getNotesByPartyId\", params);\n  }\n\n  @Override\n  public void insertNote(SalesInfoNote salesInfoNote) {\n    executeInsert(\"SalesInfo.insertNote\", salesInfoNote);\n  }\n\n  @Override\n  public void updateNote(SalesInfoNote salesInfoNote) {\n    executeUpdate(\"SalesInfo.updateNote\", salesInfoNote);\n  }\n\n  @Override\n  public SimpleNote getSimpleNoteByNoteId(long noteId) {\n    return performObjectQuery(\"SalesInfo.getSimpleNoteByNoteId\", noteId);\n  }\n\n  @Override\n  public void insertSimpleNote(SimpleNote simpleNote) {\n    executeInsert(\"SalesInfo.insertSimpleNote\", simpleNote);\n  }\n\n  @Override\n  public CompetitorNote getCompetitorNoteByNoteId(long noteId) {\n    return performObjectQuery(\"SalesInfo.getCompetitorNoteByNoteId\", noteId);\n  }\n\n  @Override\n  public AppointmentNote getAppointmentNoteByNoteId(long noteId) {\n    return performObjectQuery(\"SalesInfo.getAppointmentNoteByNoteId\", noteId);\n  }\n\n  @Override\n  public void insertCompetitorNote(CompetitorNote competitorNote) {\n    executeInsert(\"SalesInfo.insertCompetitorNote\", competitorNote);\n  }\n\n  @Override\n  public void updateCompetitorNote(CompetitorNote competitorNote) {\n    executeUpdate(\"SalesInfo.updateCompetitorNote\", competitorNote);\n  }\n\n  @Override\n  public void updateAppointmentNote(AppointmentNote note) {\n    executeUpdate(\"SalesInfo.updateAppointmentNote\", note);\n  }\n\n  @Override\n  public Task getTask(long taskId) {\n    return performObjectQuery(\"SalesInfo.getTask\", taskId);\n  }\n\n  @Override\n  public void insertTask(Task task) {\n    executeInsert(\"SalesInfo.insertTask\", task);\n  }\n\n  @Override\n  public void updateTask(Task task) {\n    executeUpdate(\"SalesInfo.updateTask\", task);\n  }\n\n  @Override\n  public List<SalesInfoNote> getNotesForReminderMail() {\n    return performListQuery(\"SalesInfo.getNotesForReminderMail\");\n  }\n\n  @Override\n  public void updateTaskReminderMailSentDate(Task task) {\n    executeUpdate(\"SalesInfo.updateTaskReminderMailSentDate\", task);\n  }\n\n  @Override\n  public void updateTaskVcalMailSentInfo(Task task) {\n    executeUpdate(\"SalesInfo.updateTaskVcalMailSentInfo\", task);\n  }\n\n  @Override\n  public SalesInfoNote getSalesInfoNote(long salesInfoNoteId) {\n    return performObjectQuery(\"SalesInfo.getSalesInfoNote\", salesInfoNoteId);\n  }\n\n  @Override\n  public List<SbsNoteReportRow> getSbsNoteReportData(Date begin, Date end) {\n    HashMap<String, Date> params = new HashMap<String, Date>();\n    params.put(\"begin\", begin);\n    params.put(\"end\", end);\n    return performListQuery(\"SalesInfo.getSbsNoteReportData\", params);\n  }\n\n  @Override\n  public List<SalesConvNoteReportRow> getSalesConvNoteReportData(Date begin, Date end) {\n    HashMap<String, Date> params = new HashMap<String, Date>();\n    params.put(\"begin\", begin);\n    params.put(\"end\", end);\n    return performListQuery(\"SalesInfo.getSalesConvNoteReportData\", params);\n  }\n\n  @Override\n  public void updateBindingPeriodReminderMailSentDate(CompetitorNote cpNote) {\n    executeUpdate(\"SalesInfo.updateBindingPeriodReminderMailSentDate\", cpNote);\n  }\n\n  @Override\n  public List<CompetitorNote> getNotesForBindingPeriodReminderMail(long numDays) {\n\n    HashMap<String, Long> params = new HashMap<String, Long>();\n    params.put(\"numDays\", numDays);\n    return performListQuery(\"SalesInfo.getNotesForBindingPeriodReminderMail\", params);\n  }\n\n  @Override\n  public List<TeamEmailAdminGroup> getTeamEmailAdminGroups() {\n    return performListQuery(\"SalesInfo.getTeamEmailAdminGroups\");\n  }\n\n  @Override\n  public void updateTeamEmailAdminGroup(TeamEmailAdminGroup teamEmailAdminGroup) {\n    executeUpdate(\"SalesInfo.updateTeamEmailAdminGroup\", teamEmailAdminGroup);\n  }\n\n  @Override\n  public void deleteTeamEmailAdminUsersByTeamEmailId(long teamEmailId) {\n    executeDelete(\"SalesInfo.deleteTeamEmailAdminUsersByTeamEmailId\", teamEmailId);\n  }\n\n  @Override\n  public void insertTeamEmailAdminUser(long teamEmailId, long userId) {\n    HashMap<String, Long> params = new HashMap<String, Long>();\n    params.put(\"teamEmailId\", teamEmailId);\n    params.put(\"userId\", userId);\n    executeInsert(\"SalesInfo.insertTeamEmailAdminUser\", params);\n  }\n\n  @Override\n  public List<SalesInfoNote> getSalesConvNotesForReminderMail() {\n    return performListQuery(\"SalesInfo.getSalesConvNotesForReminderMail\");\n  }\n\n  @Override\n  public void updateLastReminderMailSentDateForSalesConvNote(long salesConvNoteId) {\n    executeUpdate(\"SalesInfo.updateLastReminderMailSentDateForSalesConvNote\", salesConvNoteId);\n  }\n\n  @Override\n  public void markNoteAsDeleted(SalesInfoNote salesInfoNote) {\n    executeUpdate(\"SalesInfo.markNoteAsDeleted\", salesInfoNote);\n  }\n\n  @Override\n  public void insertAppointmentNote(AppointmentNote note) {\n    executeInsert(\"SalesInfo.insertAppointmentNote\", note);\n  }\n\n  @Override\n  public SalesInfoNote getAppointmentNoteForHistoryByNoteId(Long historyNoteId) {\n    return performObjectQuery(\"SalesInfo.getAppointmentNoteForHistoryByNoteId\", historyNoteId);\n  }\n\n  @Override\n  public SalesInfoNote getTaskNoteForHistoryByNoteId(Long historyNoteId) {\n    SalesInfoNote note = performObjectQuery(\"SalesInfo.getSalesInfoNote\", historyNoteId);\n    if (note != null) {\n      if (note.getSalesInfoNoteType() == SalesInfoNoteType.SI_SIMPLE_NOTE) {\n        return performObjectQuery(\"SalesInfo.getSimpleNoteForHistoryByNoteId\", historyNoteId);\n      } else if (note.getSalesInfoNoteType() == SalesInfoNoteType.SI_COMPETITOR_NOTE) {\n        return performObjectQuery(\"SalesInfo.getCompetitorNoteForHistoryByNoteId\", historyNoteId);\n      }\n    }\n    return note;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ImageSizeDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/ImageSizeDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 406,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.ImageSizeDao;\nimport at.a1ta.cuco.core.shared.dto.ImageSize;\n\npublic class ImageSizeDaoImpl extends AbstractDao implements ImageSizeDao {\n\n  @Override\n  public List<ImageSize> getImageSizes() {\n    return performListQuery(\"ImageSize.GetImageSizes\", null);\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/GamificationLocalDAOImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/GamificationLocalDAOImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3467,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.Map;\n\nimport org.springframework.orm.ibatis.SqlMapClientCallback;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.GamificationLocalDAO;\nimport at.a1ta.cuco.core.shared.dto.GamificationMessage;\n\nimport com.ibatis.sqlmap.client.SqlMapExecutor;\n\n@SuppressWarnings(\"deprecation\")\npublic class GamificationLocalDAOImpl extends AbstractDao implements GamificationLocalDAO {\n\n  @SuppressWarnings(\"deprecation\")\n  @Override\n  public void markAllMessagesRead(final ArrayList<GamificationMessage> messages, final String agentId) {\n    getSqlMapClientTemplate().execute(new SqlMapClientCallback<Void>() {\n\n      @Override\n      public Void doInSqlMapClient(SqlMapExecutor executor) throws SQLException {\n        executor.startBatch();\n        Iterator<GamificationMessage> iter = messages.iterator();\n        while (iter.hasNext()) {\n          Map<String, Object> params = new HashMap<String, Object>(2);\n          params.put(\"agentUserId\", agentId);\n          params.put(\"messageUid\", iter.next().getMessageUid());\n          executor.update(\"Gamification.markMessageAsRead\", params);\n        }\n        executor.executeBatch();\n        return null;\n      }\n    });\n  }\n\n  @SuppressWarnings(\"deprecation\")\n  @Override\n  public void addAllMessagesToCuCoDB(final ArrayList<GamificationMessage> messages, final String agentId) {\n    getSqlMapClientTemplate().execute(new SqlMapClientCallback<Void>() {\n\n      @Override\n      public Void doInSqlMapClient(SqlMapExecutor executor) throws SQLException {\n        executor.startBatch();\n        Iterator<GamificationMessage> iter = messages.iterator();\n        while (iter.hasNext()) {\n          Map<String, Object> params = new HashMap<String, Object>(2);\n          params.put(\"agentUserId\", agentId);\n          params.put(\"message\", iter.next());\n          executor.insert(\"Gamification.insert\", params);\n        }\n        executor.executeBatch();\n        return null;\n      }\n    });\n\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public Map<String, GamificationMessage> getAlreadyStoredMessages(ArrayList<GamificationMessage> messages, String agentId) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"agentUserId\", agentId);\n    ArrayList<String> messageIds = new ArrayList<String>();\n    for (GamificationMessage msg : messages) {\n      messageIds.add(msg.getMessageUid());\n    }\n    params.put(\"messageIds\", messageIds);\n    return (Map<String, GamificationMessage>) performMapQuery(\"Gamification.getAlreadyStoredMessages\", params, \"messageUid\");\n  }\n\n  @Override\n  public String creatGamificationOneTimeToken(String userName, String token) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"agentUserId\", userName);\n    params.put(\"token\", token);\n    executeInsert(\"Gamification.creatGamificationOneTimeToken\", params);\n    return token;\n  }\n\n  @Override\n  public Boolean validateGamificationOneTimeToken(String token) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"token\", token);\n    int count = performObjectQuery(\"Gamification.getMatchingActiveTokensCount\", params);\n    if (count == 1) {\n      executeUpdate(\"Gamification.expireGamificationOneTimeToken\", params);\n      return true;\n    }\n    return false;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UITextsEditorDAOImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UITextsEditorDAOImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 646,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.UITextsEditorDAO;\nimport at.a1ta.cuco.core.shared.dto.UIText;\n\npublic class UITextsEditorDAOImpl extends AbstractDao implements UITextsEditorDAO {\n\n  @Override\n  public List<UIText> getUITexts() {\n    return performListQuery(\"TextsEditor.getUITexts\");\n  }\n\n  @Override\n  public void updateUIText(UIText text) {\n    executeUpdate(\"TextsEditor.updateUIText\", text);\n  }\n  \n  @Override\n  public List<UIText> searchText(String value) {\n    return performListQuery(\"TextsEditor.searchText\", value);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/LinksPortletDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/LinksPortletDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 416,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.LinksPortletDao;\nimport at.a1ta.cuco.core.shared.dto.LinksPortlet;\n\npublic class LinksPortletDaoImpl extends AbstractDao implements LinksPortletDao {\n\n  @Override\n  public List<LinksPortlet> getAllLinks() {\n    return performListQuery(\"LinksPortlet.getAllLinks\");\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UnknownAreaCodeDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UnknownAreaCodeDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 932,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.UnknownAreaCodeDao;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\n\npublic class UnknownAreaCodeDaoImpl extends AbstractDao implements UnknownAreaCodeDao {\n\n  @Override\n  public void deleteUnknownAreaCode(Long id) {\n    executeDelete(\"UnknownAreaCode.delete\", id);\n  }\n\n  @Override\n  public List<UnknownAreaCode> getAllUnknownAreaCodes() {\n    return performListQuery(\"UnknownAreaCode.get\");\n  }\n\n  @Override\n  public UnknownAreaCode getUnknownAreaCodeById(Long id) {\n    return performObjectQuery(\"UnknownAreaCode.get\", id);\n  }\n\n  @Override\n  public void insertUnknownAreaCode(UnknownAreaCode ct) {\n    executeInsert(\"UnknownAreaCode.insert\", ct);\n  }\n\n  @Override\n  public void updateUnknownAreaCode(UnknownAreaCode ct) {\n    executeInsert(\"UnknownAreaCode.update\", ct);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/SingleTurnaroundDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/SingleTurnaroundDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 701,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.SingleTurnaroundDao;\nimport at.a1ta.cuco.core.shared.dto.SingleTurnaround;\n\npublic class SingleTurnaroundDaoImpl extends AbstractDao implements SingleTurnaroundDao {\n\n  @Override\n  public List<SingleTurnaround> getSingleTurnaroundsForCustomerAndProdgrp(long customerId, long prodgrpId) {\n    HashMap<String, Long> params = new HashMap<String, Long>();\n    params.put(\"customerId\", customerId);\n    params.put(\"prodgrpId\", prodgrpId);\n\n    return performListQuery(\"SingleTurnaround.getSingleTurnaroundsforProdGrp\", params);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/VbmProductsDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/VbmProductsDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2486,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.dao.DuplicateKeyException;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.VbmProductsDao;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMDeclineReason;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProduct;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProductDetails;\n\npublic class VbmProductsDaoImpl extends AbstractDao implements VbmProductsDao {\n\n  private static final String PARAM_CUSTOMER_ID = \"customerId\";\n  private static final String PARAM_PRODUCT_NAME = \"productName\";\n  private static final String PARAM_MONTH_YEAR_PERIOD = \"monthYearPeriod\";\n  private static final String PARAM_SCORING_THRESHOLD = \"scoreThreshold\";\n  private static final String QUERY_GET_VBM_PRODUCTS = \"vbmProducts.listAvailableOffersForKunde\";\n  private static final String INSERT_REGISTER_FEEDBACK = \"vbmProducts.registerFeedback\";\n  private static final String QUERY_GET_ALL_VBM_PRODUCTS_DETAILS = \"vbmProducts.getProduktInfo\";\n\n  @Override\n  public List<VBMProduct> listVBMProduct(Long customerId, String productName, String monthYearPeriod, Integer scoringTotal,\n      final int maxResults) {\n    final Map<String, Object> params = new HashMap<String, Object>(4);\n    if (customerId != null) {\n      params.put(PARAM_CUSTOMER_ID, customerId);\n    }\n    if (productName != null) {\n      params.put(PARAM_PRODUCT_NAME, productName);\n    }\n    if (monthYearPeriod != null) {\n      params.put(PARAM_MONTH_YEAR_PERIOD, monthYearPeriod);\n    }\n    if (scoringTotal != null) {\n      params.put(PARAM_SCORING_THRESHOLD, scoringTotal);\n    }\n    return performListQuery(QUERY_GET_VBM_PRODUCTS, params, 0, maxResults);\n  }\n\n  @Override\n  public List<VBMProductDetails> listAllVBMProductDetails() {\n    List<VBMProductDetails> resultList = new ArrayList<VBMProductDetails>();\n    List<VBMProductDetails> result = performListQuery(QUERY_GET_ALL_VBM_PRODUCTS_DETAILS, new HashMap<String, Object>());\n    if (result != null) {\n      resultList.addAll(result);\n    }\n    return resultList;\n  }\n\n  @Override\n  public void registerCustomerResponse(VBMDeclineReason declineReason, VBMProduct vbmProduct, String username, String userId) {\n    try {\n      executeInsert(INSERT_REGISTER_FEEDBACK, vbmProduct.getProductFeedback());\n    } catch (DuplicateKeyException ex) {\n      // Do Nothing, Feedback is stored.\n    }\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/MyNotesDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/MyNotesDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2355,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.MyNotesDao;\nimport at.a1ta.cuco.core.shared.dto.NotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\npublic class MyNotesDaoImpl extends AbstractDao implements MyNotesDao {\n\n  @Autowired\n  private SettingService settingService;\n\n  private static final String SEARCH_RESULT_LIMIT_SETTING_KEY = \"mycuco.table.searchresult.limit\";\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public SearchResult<SalesInfoNote> loadMyNotes(NotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad) {\n    Map<String, Object> params = createParams(filter, salesInfoNoteTypesToLoad);\n    SearchResult<SalesInfoNote> result = (SearchResult<SalesInfoNote>) performLimitedListQuery(\"MyNotes.LoadMyNotes\", params, settingService.getIntValue(SEARCH_RESULT_LIMIT_SETTING_KEY));\n    return result;\n  }\n\n  private Map<String, Object> createParams(NotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"modDate\", filter.getLastModDate());\n    params.put(\"creator\", filter.getCreator() != null ? filter.getCreator().toLowerCase() : null);\n    params.put(\"lastModifier\", filter.getLastModifier() != null ? filter.getLastModifier().toLowerCase() : null);\n    params.put(\"assignee\", filter.getAssignee() != null ? filter.getAssignee().toLowerCase() : null);\n    params.put(\"noteText\", filter.getNoteText() != null ? filter.getNoteText().toLowerCase() : null);\n    params.put(\"noteType\", filter.getNoteType());\n    params.put(\"reminderOperator\", filter.getReminderOperator().isEmpty() ? null : filter.getReminderOperator());\n    params.put(\"userId\", filter.getUserId());\n    params.put(\"partyId\", filter.getPartyId());\n    params.put(\"firstname\", filter.getFirstname());\n    params.put(\"lastname\", filter.getLastname());\n    params.put(\"salesInfoNoteTypesToLoad\", salesInfoNoteTypesToLoad);\n    return params;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CucoLogsDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CucoLogsDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1681,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.dao.db.CucoLogsDao;\n\npublic class CucoLogsDaoImpl extends AbstractDao implements CucoLogsDao {\n  @Autowired\n  private SettingService settingService;\n\n  private static final String PARTYLOADED_PASSWORDTYPE = \"-\";\n  private static final String PASSWORDVIEW_LOGTYPE = \"Password Viewed By Agent\";\n\n  @Override\n  public void insertLogEntryForPartyLoaded(Long kundeId, String name, String userId, String ban, String logType) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"kunde_id\", kundeId);\n    params.put(\"name\", name);\n    params.put(\"user_id\", userId);\n    params.put(\"passwordType\", settingService.getValueOrDefault(\"cucoLogsPartyLoadedPasswordType\", PARTYLOADED_PASSWORDTYPE));\n    params.put(\"ban\", ban);\n    params.put(\"log_Type\", logType);\n    executeInsert(\"CucoLogs.InsertLogEntry\", params);\n  }\n\n  @Override\n  public void insertLogEntryForViewPassword(Long kundeId, String name, String userId, String passwordType, String ban) {\n    final Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"kunde_id\", kundeId);\n    params.put(\"name\", name);\n    params.put(\"user_id\", userId);\n    params.put(\"passwordType\", passwordType);\n    params.put(\"ban\", ban);\n    params.put(\"log_Type\", settingService.getValueOrDefault(\"cucoLogsPasswordViewLogType\", PASSWORDVIEW_LOGTYPE));\n    executeInsert(\"CucoLogs.InsertLogEntry\", params);\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/AttributeDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/AttributeDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2244,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.AttributeDao;\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig;\nimport at.a1ta.cuco.core.shared.dto.AttributeHistory;\n\npublic class AttributeDaoImpl extends AbstractDao implements AttributeDao {\n\n  @Override\n  public List<AttributeConfig> getAllConfigs() {\n    return performListQuery(\"Attribute.getAllConfigs\");\n  }\n\n  @Override\n  public void insertConfig(AttributeConfig config) {\n    executeInsert(\"Attribute.insertConfig\", config);\n  }\n\n  @Override\n  public void updateConfig(AttributeConfig config) {\n    executeUpdate(\"Attribute.updateConfig\", config);\n  }\n\n  @Override\n  public List<Attribute> getByPartyId(long partyId, String segment) {\n    HashMap<String, Object> params = new HashMap<String, Object>();\n    params.put(\"kundeId\", partyId);\n    params.put(\"segment\", segment);\n    return performListQuery(\"Attribute.getByPartyId\", params);\n  }\n\n  @Override\n  public List<Attribute> getSameExistingAttributes(Attribute attribute) {\n    return performListQuery(\"Attribute.getSameExistingAttributes\", attribute);\n  }\n\n  @Override\n  public void insert(Attribute attribute) {\n    executeInsert(\"Attribute.insert\", attribute);\n  }\n\n  @Override\n  public void delete(Attribute attribute) {\n    executeDelete(\"Attribute.delete\", attribute);\n  }\n\n  @Override\n  public List<AttributeHistory> getHistory(long partyId, long attributeConfigId) {\n    HashMap<String, Long> params = new HashMap<String, Long>();\n    params.put(\"partyId\", partyId);\n    params.put(\"attributeConfigId\", attributeConfigId);\n    List<AttributeHistory> result = performListQuery(\"Attribute.getHistory\", params);\n    return result;\n  }\n\n  @Override\n  public void insertHistory(AttributeHistory history) {\n    executeInsert(\"Attribute.insertHistory\", history);\n  }\n\n  @Override\n  public void switchOrderNum(AttributeConfig a, AttributeConfig b) {\n    int ordernumA = a.getOrderNum();\n    a.setOrderNum(b.getOrderNum());\n    b.setOrderNum(ordernumA);\n\n    executeUpdate(\"Attribute.updateConfig\", a);\n    executeUpdate(\"Attribute.updateConfig\", b);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CustomerUnlockRequestDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/CustomerUnlockRequestDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2377,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport org.springframework.util.Assert;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.dao.db.CustomerUnlockRequestDao;\nimport at.a1ta.cuco.core.shared.dto.access.ContextAwareCustomerUnlockRequest;\n\npublic class CustomerUnlockRequestDaoImpl extends AbstractDao implements CustomerUnlockRequestDao {\n\n  @Override\n  public void insert(ContextAwareCustomerUnlockRequest request) {\n    validateRequestData(request);\n    executeInsert(\"CustomerUnlockRequest.insert\", request);\n  }\n\n  @Override\n  public void update(ContextAwareCustomerUnlockRequest request) {\n    validateRequestData(request);\n    executeUpdate(\"CustomerUnlockRequest.update\", request);\n  }\n\n  @Override\n  public ContextAwareCustomerUnlockRequest findByCustomerIdAndUsernameAndJobIdAndSessionKey(long customerId, BiteUser user, String jobId, String sessionKey) {\n    HashMap<String, Object> params = new HashMap<String, Object>(4);\n    params.put(\"customerId\", customerId);\n    params.put(\"userId\", user.getId());\n    params.put(\"jobId\", jobId);\n    params.put(\"sessionKey\", sessionKey);\n\n    return (ContextAwareCustomerUnlockRequest) performObjectQuery(\"CustomerUnlockRequest.findCustomerUnlockRequestByCustomerIdAndUsernameAndJobIdAndSessionKey\", params);\n  }\n\n  private void validateRequestData(ContextAwareCustomerUnlockRequest request) {\n    Assert.notNull(request, \"request must not be null\");\n    if (request.getCustomerId() <= 0) {\n      throw new IllegalArgumentException(\"customerId cannot be less than equal to zero\");\n    }\n    Assert.hasText(request.getJobId(), \"jobId must not be null or empty\");\n    Assert.notNull(request.getUser(), \"user must not be null\");\n    Assert.hasText(request.getSessionKey(), \"sessionKey must not be null or empty\");\n  }\n\n  @Override\n  public List<ContextAwareCustomerUnlockRequest> findByCustomerIdAndUsernameAndContextKey(long customerNumber, BiteUser user, String sessionId) {\n    HashMap<String, Object> params = new HashMap<String, Object>(4);\n    params.put(\"customerId\", customerNumber);\n    params.put(\"userId\", user.getId());\n    params.put(\"sessionKey\", sessionId);\n\n    return performListQuery(\"CustomerUnlockRequest.findCustomerUnlockRequestByCustomerIdAndUsernameAndSessionKey\", params);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UserShopAssignmentDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/UserShopAssignmentDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1773,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.UserShopAssignmentDao;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignment;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\npublic class UserShopAssignmentDaoImpl extends AbstractDao implements UserShopAssignmentDao {\n\n  @Override\n  public List<UserShopAssignmentLogLine> getLogEntries() {\n    return performListQuery(\"ImportUserShopAssignment.getLogEntries\");\n  }\n\n  @Override\n  public Integer getLogEntriesCount() {\n    Integer count = 0;\n    count = performObjectQuery(\"ImportUserShopAssignment.getLogEntriesCount\", count);\n    return count.intValue();\n  }\n\n  @Override\n  public void insertLogEntry(UserShopAssignmentLogLine logline) {\n    executeInsert(\"ImportUserShopAssignment.insertLogEntry\", logline);\n  }\n\n  @Override\n  public List<UserShopAssignment> getUserShopAssignments() {\n    return performListQuery(\"ImportUserShopAssignment.getUserShopAssignments\");\n  }\n\n  @Override\n  public void insertUserShopAssignment(UserShopAssignment assignment) {\n    executeInsert(\"ImportUserShopAssignment.insertUserShopAssignment\", assignment);\n  }\n\n  @Override\n  public void purgeLogEntries() {\n    executeDelete(\"ImportUserShopAssignment.purgeLogEntries\", null);\n  }\n\n  @Override\n  public void purgeUserShopAssignments() {\n    executeDelete(\"ImportUserShopAssignment.purgeUserShopAssignments\", null);\n  }\n\n  @Override\n  public List<String> getUserNamesForAssignments() {\n    return performListQuery(\"ImportUserShopAssignment.getUserIDs4Assignments\", null);\n  }\n  \n  @Override\n  public List<String> getAssignedShopIDs() {\n    return performListQuery(\"ImportUserShopAssignment.getAssignedShopIDs\", null);\n  }\n  \n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/VIPHistoryDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/impl/VIPHistoryDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1174,
    "content": "package at.a1ta.cuco.core.dao.db.impl;\n\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.dao.db.VIPHistoryDao;\nimport at.a1ta.cuco.core.shared.dto.VIPHistoryEntry;\n\npublic class VIPHistoryDaoImpl extends AbstractDao implements VIPHistoryDao {\n\n  @Override\n  public List<VIPHistoryEntry> getVIPHistory(Long customerId) {\n    return performListQuery(\"VIPHistory.GetVIPHistory\", customerId);\n  }\n\n  @Override\n  public List<VIPHistoryEntry> getVIPHistory(Date from, Date to, String searchTerm, String vipStatus) {\n    Map<String, Object> map = new HashMap<String, Object>(3);\n    map.put(\"from\", from);\n    map.put(\"to\", to);\n    map.put(\"searchTerm\", searchTerm != null ? searchTerm.trim() : \"\");\n    if (!\"ALL\".equals(vipStatus)) {\n      map.put(\"vipStatus\", (vipStatus != null && !vipStatus.isEmpty()) ? Integer.parseInt(vipStatus) : null);\n    }\n\n    return performListQuery(\"VIPHistory.SearchVIPHistory\", map);\n  }\n\n  @Override\n  public void saveVIPHistory(VIPHistoryEntry vipHistory) {\n    executeInsert(\"VIPHistory.SaveVIPHistory\", vipHistory);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/visitreport/SetupTypeSetTypeHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/visitreport/SetupTypeSetTypeHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1348,
    "content": "package at.a1ta.cuco.core.dao.db.visitreport;\n\nimport java.sql.SQLException;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport org.apache.commons.lang.StringUtils;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SetupType;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\nimport com.ibatis.sqlmap.client.extensions.ResultGetter;\n\npublic class SetupTypeSetTypeHandler implements com.ibatis.sqlmap.client.extensions.TypeHandlerCallback {\n\n  private static final String SEPARATOR = \";\";\n\n  @Override\n  public Set<SetupType> getResult(ResultGetter getter) throws SQLException {\n    String string = getter.getString();\n    String[] array = string.split(SEPARATOR);\n    Set<SetupType> set = new HashSet<SetupType>();\n    for (String str : array) {\n      set.add(SetupType.valueOf(str));\n    }\n    return set;\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public void setParameter(ParameterSetter setter, Object parameter) throws SQLException {\n    Set<SetupType> set = (Set<SetupType>) parameter;\n    setter.setString(StringUtils.join(set.toArray(), SEPARATOR));\n  }\n\n  @Override\n  public Object valueOf(String string) {\n    String[] array = string.split(SEPARATOR);\n    Set<SetupType> set = new HashSet<SetupType>();\n    for (String str : array) {\n      set.add(SetupType.valueOf(str));\n    }\n    return set;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/visitreport/VisitReportDaoImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/visitreport/VisitReportDaoImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9038,
    "content": "package at.a1ta.cuco.core.dao.db.visitreport;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.server.dao.AbstractDao;\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig.Groupings;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.HistoryNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.ProductHistoryItem;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.SalesConvNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.DigitalSellingNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.FileAttachment;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.GenericNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSOrgUnit;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProduct;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote;\n\npublic class VisitReportDaoImpl extends AbstractDao implements VisitReportDao {\n\n  @Override\n  public Collection<SBSProduct> loadSBSProducts(SalesInfoNoteType type) {\n    return performListQuery(\"VisitReport.loadSBSProducts\", type.name());\n  }\n\n  @Override\n  public Collection<SBSProduct> loadAllSBSProducts() {\n    return performListQuery(\"VisitReport.loadAllSBSProducts\");\n  }\n\n  @Override\n  public String loadSBSProductConfig(String productId, SalesInfoNoteType type) {\n    HashMap<String, String> params = new HashMap<String, String>();\n    params.put(\"productId\", productId);\n    params.put(\"siNoteClass\", type.name());\n    return performObjectQuery(\"VisitReport.loadSBSProductConfig\", params);\n  }\n\n  @Override\n  public Collection<SBSProductNote> loadProductNotesByNote(long noteId, boolean experimentalModeEnabled) {\n    if (experimentalModeEnabled) {\n      return performListQuery(\"VisitReport.loadProductNotesByNote_Experimental\", noteId);\n    }\n    return performListQuery(\"VisitReport.loadProductNotesByNote\", noteId);\n  }\n\n  @Override\n  public Collection<FileAttachment> loadFileAttachmentsByNote(long noteId) {\n    return performListQuery(\"VisitReport.loadFileAttachmentsByNote\", noteId);\n  }\n\n  @Override\n  public GenericNote loadGenericNoteByNoteId(long noteId) {\n    return performObjectQuery(\"VisitReport.loadGenericNoteByNoteId\", noteId);\n  }\n\n  @Override\n  public SBSNote loadSBSNoteByNoteId(long noteId, boolean isExperimentalModeEnabled) {\n    return performObjectQuery(\"VisitReport.loadSBSNoteByNoteId_Experimental\", noteId);\n  }\n\n  @Override\n  public Collection<Attribute> loadSalesInfoAttributesByGrouping(String grouping) {\n    return performListQuery(\"VisitReport.loadSalesInfoAttributesByGrouping\", grouping);\n  }\n\n  @Override\n  public Collection<SalesInfoNote> loadNotesByPredecessorNoteId(long noteId) {\n    return performListQuery(\"VisitReport.loadNotesByPredecessorNoteId\", noteId);\n  }\n\n  @Override\n  public void insertSBSNote(SBSNote note) {\n    executeInsert(\"VisitReport.insertSBSNote\", note);\n  }\n\n  @Override\n  public void insertGenericNote(GenericNote note) {\n    executeInsert(\"VisitReport.insertGenericNote\", note);\n  }\n\n  @Override\n  public void insertSBSProductNote(SBSProductNote note) {\n    executeInsert(\"VisitReport.insertSBSProductNote\", note);\n  }\n\n  @Override\n  public void insertFileAttachment(FileAttachment fileAttachment) {\n    executeInsert(\"VisitReport.insertFileAttachment\", fileAttachment);\n  }\n\n  @Override\n  public void updateFileAttachmentNotesRelation(FileAttachment fileAttachment) {\n    executeInsert(\"VisitReport.updateFileAttachmentNotesRelation\", fileAttachment);\n  }\n\n  @Override\n  public void insertSBSProduct(SBSProduct product) {\n    executeInsert(\"VisitReport.insertSBSProduct\", product);\n  }\n\n  @Override\n  public void updateSBSProduct(SBSProduct product) {\n    executeUpdate(\"VisitReport.updateSBSProduct\", product);\n  }\n\n  @Override\n  public void insertNoteAttribute(long noteId, long attributeId) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"noteId\", Long.valueOf(noteId));\n    params.put(\"attributeId\", attributeId);\n    executeInsert(\"VisitReport.insertNoteAttribute\", params);\n  }\n\n  @Override\n  public void updateSBSNote(SBSNote note) {\n    executeUpdate(\"VisitReport.updateSBSNote\", note);\n  }\n\n  @Override\n  public void updateSBSProductNote(SBSProductNote note) {\n    executeUpdate(\"VisitReport.updateSBSProductNote\", note);\n  }\n\n  @Override\n  public void updateAttribute(Attribute attribute) {\n    executeUpdate(\"VisitReport.updateAttribute\", attribute);\n  }\n\n  @Override\n  public void deleteFileAttachment(long fileAttachmentId) {\n    executeDelete(\"VisitReport.deleteFileAttachment\", fileAttachmentId);\n  }\n\n  @Override\n  public Collection<SBSOrgUnit> loadSBSOrgUnits() {\n    return performListQuery(\"VisitReport.loadSBSOrgUnits\");\n  }\n\n  @Override\n  public boolean hasSuccessorNote(long noteId) {\n    return (Integer) performObjectQuery(\"VisitReport.hasSuccessorNote\", noteId) > 0;\n  }\n\n  @Override\n  public FileAttachment loadFileAttachmentById(long noteId, long attachmentId) {\n    Map<String, Object> params = new HashMap<String, Object>(2);\n    params.put(\"noteId\", noteId);\n    params.put(\"attachmentId\", attachmentId);\n    return performObjectQuery(\"VisitReport.loadFileAttachmentById\", params);\n  }\n\n  @Override\n  public void insertSalesConvNote(SalesConvNote note) {\n    executeInsert(\"VisitReport.insertSalesConvNote\", note);\n  }\n\n  @Override\n  public void updateSalesConvNote(SalesConvNote note) {\n    executeUpdate(\"VisitReport.updateSalesConvNote\", note);\n  }\n\n  @Override\n  public SalesConvNote loadSalesConvNoteByNoteId(long noteId, boolean isExperimentalModeEnabled) {\n    if (isExperimentalModeEnabled) {\n      return performObjectQuery(\"VisitReport.loadSalesConvNoteByNoteId_Experimental\", noteId);\n    }\n    return performObjectQuery(\"VisitReport.loadSalesConvNoteByNoteId\", noteId);\n  }\n\n  @Override\n  public void insertProductHistoryItem(ProductHistoryItem historyItem) {\n    executeInsert(\"VisitReport.insertProductHistoryItem\", historyItem);\n  }\n\n  @Override\n  public void updateProductHistoryItem(ProductHistoryItem historyItem) {\n    executeUpdate(\"VisitReport.updateProductHistoryItemProductNoteID\", historyItem);\n  }\n\n  @Override\n  public String getTeamEmailAddress(long userId) {\n    return performObjectQuery(\"VisitReport.getTeamEmailAddress\", userId);\n  }\n\n  @Override\n  public void insertSBSToDoGroupNote(ToDoGroupNote group) {\n    executeInsert(\"VisitReport.insertToDoGroupNote\", group);\n  }\n\n  @Override\n  public void insertHistoryNote(HistoryNote historyNote) {\n    executeInsert(\"VisitReport.insertHistoryNote\", historyNote);\n  }\n\n  @Override\n  public SalesInfoNote getNoteForHistoryByNoteId(Long predecessorSalesInfoNoteId) {\n    return performObjectQuery(\"VisitReport.loadSBSNoteForHistoryByNoteId\", predecessorSalesInfoNoteId);\n  }\n\n  @Override\n  public SalesInfoNote getProductNoteForHistoryByNoteId(Long predecessorSalesInfoNoteId) {\n    return performObjectQuery(\"VisitReport.loadProductNoteForHistoryByProductNoteId\", predecessorSalesInfoNoteId);\n  }\n\n  @Override\n  public SalesInfoNote getToDoGroupNoteForHistoryByNoteId(Long predecessorSalesInfoNoteId) {\n    return performObjectQuery(\"VisitReport.getToDoGroupNoteForHistoryById\", predecessorSalesInfoNoteId);\n  }\n\n  @Override\n  public Collection<HistoryNote> getHistoryNotesByNoteId(Long predecessorSalesInfoNoteId) {\n    return performListQuery(\"VisitReport.getHistoryNotesForVisitReportByVisitReportNoteId\", predecessorSalesInfoNoteId);\n  }\n\n  @Override\n  public DigitalSellingNote loadDigitalSellingNoteByNoteId(long noteId) {\n    DigitalSellingNote note = performObjectQuery(\"VisitReport.loadDigitalSellingNoteByNoteId\", noteId);\n    if (note != null) {\n      note.setAttributes(getDigitalSellingNoteAttributes(note.getSalesInfoNoteId()));\n    }\n    return note;\n  }\n\n  private ArrayList<Attribute> getDigitalSellingNoteAttributes(long noteId) {\n    ArrayList<Attribute> attributes = new ArrayList<Attribute>();\n    for (Groupings grouping : AttributeConfig.Groupings.values()) {\n      if (grouping.name().startsWith(\"DIGITAL_SELLING_\")) {\n        HashMap<String, Object> params = new HashMap<String, Object>();\n        params.put(\"si_note_id\", noteId);\n        params.put(\"grouping\", grouping.name());\n        Collection<? extends Attribute> groupAttributes = performListQuery(\"VisitReport.loadSalesInfoNoteAttributesByNoteIdAndGrouping\", params);\n        attributes.addAll(groupAttributes);\n      }\n    }\n    return attributes;\n  }\n\n  @Override\n  public void insertDigitalSellingNote(DigitalSellingNote note) {\n    executeInsert(\"VisitReport.insertDigitalSellingNote\", note);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/visitreport/ToDoGroupStatusHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/visitreport/ToDoGroupStatusHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1301,
    "content": "package at.a1ta.cuco.core.dao.db.visitreport;\n\nimport java.sql.SQLException;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote.ToDoStatus;\n\nimport com.ibatis.sqlmap.client.extensions.ParameterSetter;\nimport com.ibatis.sqlmap.client.extensions.ResultGetter;\n\npublic class ToDoGroupStatusHandler implements com.ibatis.sqlmap.client.extensions.TypeHandlerCallback {\n\n  private static final Logger logger = LoggerFactory.getLogger(ToDoGroupStatusHandler.class);\n\n  /**\n   * From DB to Java.\n   */\n  @Override\n  public ToDoStatus getResult(ResultGetter getter) throws SQLException {\n    final String dbValue = trim(getter.getString());\n    return valueOf(dbValue);\n  }\n\n  /**\n   * From Java to DB.\n   */\n  @Override\n  public void setParameter(ParameterSetter setter, Object set) throws SQLException {\n    setter.setString(set.toString());\n  }\n\n  /**\n   * Converts DB value to the Java value.\n   */\n  @Override\n  public ToDoStatus valueOf(String s) {\n    try {\n      return ToDoStatus.valueOf(s);\n    } catch (Exception ex) {\n      logger.error(\"Error while defining filter for the key \" + s, ex);\n      return ToDoStatus.CREATED;\n    }\n  }\n\n  static String trim(String string) {\n    return (string == null) ? null : string.trim();\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/visitreport/VisitReportDao.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/dao/db/visitreport/VisitReportDao.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3465,
    "content": "package at.a1ta.cuco.core.dao.db.visitreport;\n\nimport java.util.Collection;\n\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.HistoryNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.ProductHistoryItem;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.SalesConvNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.DigitalSellingNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.FileAttachment;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.GenericNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSOrgUnit;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProduct;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote;\n\npublic interface VisitReportDao {\n  Collection<SBSProduct> loadSBSProducts(SalesInfoNoteType type);\n\n  String loadSBSProductConfig(String productId, SalesInfoNoteType type);\n\n  Collection<SBSProductNote> loadProductNotesByNote(long noteId, boolean experimentalModeEnabled);\n\n  Collection<FileAttachment> loadFileAttachmentsByNote(long noteId);\n\n  GenericNote loadGenericNoteByNoteId(long noteId);\n\n  SBSNote loadSBSNoteByNoteId(long noteId, boolean isExperimentalModeEnabled);\n\n  Collection<Attribute> loadSalesInfoAttributesByGrouping(String grouping);\n\n  Collection<SalesInfoNote> loadNotesByPredecessorNoteId(long noteId);\n\n  void insertSBSNote(SBSNote note);\n\n  void insertGenericNote(GenericNote note);\n\n  void insertSBSProductNote(SBSProductNote note);\n\n  void insertSBSToDoGroupNote(ToDoGroupNote group);\n\n  void insertFileAttachment(FileAttachment fileAttachment);\n\n  void insertNoteAttribute(long noteId, long attributeId);\n\n  void updateSBSNote(SBSNote note);\n\n  void updateSBSProductNote(SBSProductNote note);\n\n  void updateAttribute(Attribute attribute);\n\n  void deleteFileAttachment(long fileAttachmentId);\n\n  Collection<SBSOrgUnit> loadSBSOrgUnits();\n\n  boolean hasSuccessorNote(long noteId);\n\n  FileAttachment loadFileAttachmentById(long noteId, long attachmentId);\n\n  void insertSalesConvNote(SalesConvNote note);\n\n  void updateSalesConvNote(SalesConvNote note);\n\n  SalesConvNote loadSalesConvNoteByNoteId(long noteId, boolean isExperimentalModeEnabled);\n\n  void insertProductHistoryItem(ProductHistoryItem historyItem);\n\n  String getTeamEmailAddress(long userId);\n\n  void updateProductHistoryItem(ProductHistoryItem historyItem);\n\n  void updateFileAttachmentNotesRelation(FileAttachment fileAttachment);\n\n  void insertHistoryNote(HistoryNote historyNote);\n\n  SalesInfoNote getNoteForHistoryByNoteId(Long predecessorSalesInfoNoteId);\n\n  SalesInfoNote getProductNoteForHistoryByNoteId(Long predecessorSalesInfoNoteId);\n\n  SalesInfoNote getToDoGroupNoteForHistoryByNoteId(Long predecessorSalesInfoNoteId);\n\n  Collection<HistoryNote> getHistoryNotesByNoteId(Long predecessorSalesInfoNoteId);\n\n  void insertSBSProduct(SBSProduct product);\n\n  void updateSBSProduct(SBSProduct product);\n\n  Collection<SBSProduct> loadAllSBSProducts();\n\n  DigitalSellingNote loadDigitalSellingNoteByNoteId(long noteId);\n\n  void insertDigitalSellingNote(DigitalSellingNote note);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/LinksPortlet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/LinksPortlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 794,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class LinksPortlet implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String key;\n  private String text;\n  private String url;\n  private Auth requiredAuthority;;\n\n  public String getKey() {\n    return key;\n  }\n\n  public void setKey(String key) {\n    this.key = key;\n  }\n\n  public String getText() {\n    return text;\n  }\n\n  public void setText(String text) {\n    this.text = text;\n  }\n\n  public String getUrl() {\n    return url;\n  }\n\n  public void setUrl(String url) {\n    this.url = url;\n  }\n\n  public Auth getRequiredAuthority() {\n    return requiredAuthority;\n  }\n\n  public void setRequiredAuthority(Auth requiredAuthority) {\n    this.requiredAuthority = requiredAuthority;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductOfferingTypeHandler.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductOfferingTypeHandler.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1334,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.sql.CallableStatement;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\nimport at.a1ta.cuco.core.shared.dto.ProductOffering;\n\nimport com.ibatis.sqlmap.engine.type.BaseTypeHandler;\n\npublic class ProductOfferingTypeHandler extends BaseTypeHandler {\n  @Override\n  public void setParameter(PreparedStatement ps, int i, Object parameter, String jdbcType) throws SQLException {\n    ps.setString(i, parameter.toString());\n  }\n\n  @Override\n  public Object getResult(ResultSet rs, String columnName) throws SQLException {\n    Long id = rs.getLong(columnName);\n    if (rs.wasNull()) {\n      return null;\n    } else {\n      return ProductOffering.valueOf(id);\n    }\n  }\n\n  @Override\n  public Object getResult(ResultSet rs, int columnIndex) throws SQLException {\n    Long id = rs.getLong(columnIndex);\n    if (rs.wasNull()) {\n      return null;\n    } else {\n      return ProductOffering.valueOf(id);\n    }\n  }\n\n  @Override\n  public Object getResult(CallableStatement cs, int columnIndex) throws SQLException {\n    Long id = cs.getLong(columnIndex);\n    if (cs.wasNull()) {\n      return null;\n    } else {\n      return ProductOffering.valueOf(id);\n    }\n  }\n\n  @Override\n  public Object valueOf(String s) {\n    return ProductOffering.valueOf(s);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AttributeHistory.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AttributeHistory.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1693,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\n@SuppressWarnings(\"serial\")\npublic class AttributeHistory implements Serializable {\n  private Long attributeId;\n  private AttributeConfig attributeConfig;\n  private Long kundeId;\n  private Boolean booleanValue;\n  private Integer numberValue;\n  private String textValue;\n  private BiteUser creator;\n  private Date createDate;\n\n  public Long getAttributeId() {\n    return attributeId;\n  }\n\n  public void setAttributeId(Long attributeId) {\n    this.attributeId = attributeId;\n  }\n\n  public AttributeConfig getAttributeConfig() {\n    return attributeConfig;\n  }\n\n  public void setAttributeConfig(AttributeConfig attributeConfig) {\n    this.attributeConfig = attributeConfig;\n  }\n\n  public Long getKundeId() {\n    return kundeId;\n  }\n\n  public void setKundeId(Long kundeId) {\n    this.kundeId = kundeId;\n  }\n\n  public Boolean getBooleanValue() {\n    return booleanValue;\n  }\n\n  public void setBooleanValue(Boolean booleanValue) {\n    this.booleanValue = booleanValue;\n  }\n\n  public Integer getNumberValue() {\n    return numberValue;\n  }\n\n  public void setNumberValue(Integer numberValue) {\n    this.numberValue = numberValue;\n  }\n\n  public BiteUser getCreator() {\n    return creator;\n  }\n\n  public void setCreator(BiteUser creator) {\n    this.creator = creator;\n  }\n\n  public Date getCreateDate() {\n    return createDate;\n  }\n\n  public void setCreateDate(Date createDate) {\n    this.createDate = createDate;\n  }\n\n  public String getTextValue() {\n    return textValue;\n  }\n\n  public void setTextValue(String textValue) {\n    this.textValue = textValue;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ContactPerson.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ContactPerson.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 12110,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class ContactPerson extends Person {\n  private static final long serialVersionUID = 1L;\n  private Long customerId;\n  private String customerRole;\n  private String dayPhoneNumber;\n  private String faxNumber;\n  private Long id;\n  private boolean isMainContact;\n  private String mail;\n  private String mobilephoneNumber;\n  private String nightPhoneNumber;\n  private String taRoleId;\n  private String taRoleName;\n  private String cctRoleName;\n  private String addressLine1;\n  private String addressLine2;\n  private String source;\n  private String uUserId;\n\n  public String getuUserId() {\n    return uUserId;\n  }\n\n  public void setuUserId(String uUserId) {\n    this.uUserId = uUserId;\n  }\n\n  private ContactPersonType typeBasedOnSource;\n  private boolean active;\n  private boolean referenceExists;\n  private boolean selected;\n\n  public boolean isReferenceExists() {\n    return referenceExists;\n  }\n\n  public void setReferenceExists(boolean referenceExists) {\n    this.referenceExists = referenceExists;\n  }\n\n  private int deleted = 0;\n  private BiteUser lastModifier;\n\n  public enum ContactPersonType {\n    FIXED_LINE(\"TA\"), KUMS(\"MK\"), MOBILE(\"KUMS\"), CUCO(\"CU\");\n    private String dbValue;\n\n    private ContactPersonType(String value) {\n      this.dbValue = value;\n    }\n\n    public String getDbValue() {\n      return dbValue;\n    }\n  }\n\n  public void setCustomerId(Long customerId) {\n    this.customerId = customerId;\n  }\n\n  public void setCustomerRole(String customerRole) {\n    this.customerRole = customerRole;\n  }\n\n  public void setDayPhoneNumber(String dayPhoneNumber) {\n    this.dayPhoneNumber = dayPhoneNumber;\n  }\n\n  public void setFaxNumber(String faxNumber) {\n    this.faxNumber = faxNumber;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public void setMainContact(boolean isMainContact) {\n    this.isMainContact = isMainContact;\n  }\n\n  public void setMail(String mail) {\n    this.mail = mail;\n  }\n\n  public void setMobilephoneNumber(String mobilephoneNumber) {\n    this.mobilephoneNumber = mobilephoneNumber;\n  }\n\n  public void setNightPhoneNumber(String nightPhoneNumber) {\n    this.nightPhoneNumber = nightPhoneNumber;\n  }\n\n  public void setTARoleId(String roleId) {\n    taRoleId = roleId;\n  }\n\n  public void setTARoleName(String roleName) {\n    taRoleName = roleName;\n  }\n\n  public void setAddressLine1(String addressLine1) {\n    this.addressLine1 = addressLine1;\n  }\n\n  public void setAddressLine2(String addressLine2) {\n    this.addressLine2 = addressLine2;\n  }\n\n  public Long getCustomerId() {\n    return this.customerId;\n  }\n\n  public String getCustomerRole() {\n    return this.customerRole;\n  }\n\n  public String getDayPhoneNumber() {\n    return this.dayPhoneNumber;\n  }\n\n  public String getFaxNumber() {\n    return this.faxNumber;\n  }\n\n  public Long getId() {\n    return this.id;\n  }\n\n  public boolean isMainContact() {\n    return this.isMainContact;\n  }\n\n  public String getMail() {\n    return this.mail;\n  }\n\n  public String getMobilephoneNumber() {\n    return this.mobilephoneNumber;\n  }\n\n  public String getNightPhoneNumber() {\n    return this.nightPhoneNumber;\n  }\n\n  public String getTARoleId() {\n    return this.taRoleId;\n  }\n\n  public String getTARoleName() {\n    return this.taRoleName;\n  }\n\n  public String getAddressLine1() {\n    return this.addressLine1;\n  }\n\n  public String getAddressLine2() {\n    return this.addressLine2;\n  }\n\n  public String getCity() {\n    return this.addressLine2;\n  }\n\n  public String getCountry() {\n    return null;\n  }\n\n  public String getHousenumber() {\n    return null;\n  }\n\n  public String getPoBox() {\n    return null;\n  }\n\n  public String getStreet() {\n    return this.addressLine2;\n  }\n\n  public void setSource(String source) {\n    this.source = source;\n  }\n\n  public String getSource() {\n    return source;\n  }\n\n  public String getDisplayName() {\n    StringBuilder sb = new StringBuilder();\n    if (getSalutation() != null) {\n      sb.append(getSalutation() + \", \");\n    }\n    if (getTitle() != null && !getTitle().trim().isEmpty()) {\n      sb.append(getTitle() + \" \");\n    }\n    if (getLastname() != null) {\n      sb.append(getLastname() + \" \");\n    }\n    if (getFirstname() != null) {\n      sb.append(getFirstname());\n    }\n\n    return sb.toString();\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((taRoleId == null) ? 0 : taRoleId.hashCode());\n    result = prime * result + ((taRoleName == null) ? 0 : taRoleName.hashCode());\n    result = prime * result + ((addressLine1 == null) ? 0 : addressLine1.hashCode());\n    result = prime * result + ((addressLine2 == null) ? 0 : addressLine2.hashCode());\n    result = prime * result + ((customerId == null) ? 0 : customerId.hashCode());\n    result = prime * result + ((customerRole == null) ? 0 : customerRole.hashCode());\n    result = prime * result + ((dayPhoneNumber == null) ? 0 : dayPhoneNumber.hashCode());\n    result = prime * result + ((faxNumber == null) ? 0 : faxNumber.hashCode());\n    result = prime * result + ((id == null) ? 0 : id.hashCode());\n    result = prime * result + (isMainContact ? 1231 : 1237);\n    result = prime * result + ((mail == null) ? 0 : mail.hashCode());\n    result = prime * result + ((mobilephoneNumber == null) ? 0 : mobilephoneNumber.hashCode());\n    result = prime * result + ((nightPhoneNumber == null) ? 0 : nightPhoneNumber.hashCode());\n    result = prime * result + ((source == null) ? 0 : source.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    ContactPerson other = (ContactPerson) obj;\n    if (taRoleId == null) {\n      if (other.taRoleId != null) {\n        return false;\n      }\n    } else if (!taRoleId.equals(other.taRoleId)) {\n      return false;\n    }\n    if (taRoleName == null) {\n      if (other.taRoleName != null) {\n        return false;\n      }\n    } else if (!taRoleName.equals(other.taRoleName)) {\n      return false;\n    }\n    if (addressLine1 == null) {\n      if (other.addressLine1 != null) {\n        return false;\n      }\n    } else if (!addressLine1.equals(other.addressLine1)) {\n      return false;\n    }\n    if (addressLine2 == null) {\n      if (other.addressLine2 != null) {\n        return false;\n      }\n    } else if (!addressLine2.equals(other.addressLine2)) {\n      return false;\n    }\n    if (customerId == null) {\n      if (other.customerId != null) {\n        return false;\n      }\n    } else if (!customerId.equals(other.customerId)) {\n      return false;\n    }\n    if (customerRole == null) {\n      if (other.customerRole != null) {\n        return false;\n      }\n    } else if (!customerRole.equals(other.customerRole)) {\n      return false;\n    }\n    if (dayPhoneNumber == null) {\n      if (other.dayPhoneNumber != null) {\n        return false;\n      }\n    } else if (!dayPhoneNumber.equals(other.dayPhoneNumber)) {\n      return false;\n    }\n    if (faxNumber == null) {\n      if (other.faxNumber != null) {\n        return false;\n      }\n    } else if (!faxNumber.equals(other.faxNumber)) {\n      return false;\n    }\n    if (id == null) {\n      if (other.id != null) {\n        return false;\n      }\n    } else if (!id.equals(other.id)) {\n      return false;\n    }\n    if (isMainContact != other.isMainContact) {\n      return false;\n    }\n    if (mail == null) {\n      if (other.mail != null) {\n        return false;\n      }\n    } else if (!mail.equals(other.mail)) {\n      return false;\n    }\n    if (mobilephoneNumber == null) {\n      if (other.mobilephoneNumber != null) {\n        return false;\n      }\n    } else if (!mobilephoneNumber.equals(other.mobilephoneNumber)) {\n      return false;\n    }\n    if (nightPhoneNumber == null) {\n      if (other.nightPhoneNumber != null) {\n        return false;\n      }\n    } else if (!nightPhoneNumber.equals(other.nightPhoneNumber)) {\n      return false;\n    }\n    if (source == null) {\n      if (other.source != null) {\n        return false;\n      }\n    } else if (!source.equals(other.source)) {\n      return false;\n    }\n    return true;\n  }\n\n  public boolean equalsById(ContactPerson otherContact) {\n    return ((getId() != null && getId().equals(otherContact.getId())) || (getuUserId() != null && getuUserId().equalsIgnoreCase(otherContact.getId() + \"\")))\n        || (getuUserId() != null && getuUserId().equalsIgnoreCase(otherContact.getuUserId()));\n  }\n\n  public boolean isActive() {\n    return active;\n  }\n\n  public void setActive(boolean active) {\n    this.active = active;\n  }\n\n  public BiteUser getLastModifier() {\n    return lastModifier;\n  }\n\n  public void setLastModifier(BiteUser lastModifier) {\n    this.lastModifier = lastModifier;\n  }\n\n  public ContactPersonType getTypeBasedOnSource() {\n    if (source == null || source.isEmpty()) {\n      return null;\n    } else if (source.equalsIgnoreCase(\"TA\")) {\n      return ContactPersonType.FIXED_LINE;\n    } else if (source.equalsIgnoreCase(\"MK\")) {\n      return ContactPersonType.MOBILE;\n    } else if (source.equalsIgnoreCase(\"KUMS\")) {\n      return ContactPersonType.KUMS;\n    } else if (source.equalsIgnoreCase(\"CU\")) {\n      return ContactPersonType.CUCO;\n    }\n    return null;\n  }\n\n  @Override\n  public String toString() {\n    return \"ContactPerson [customerId=\" + customerId + \", customerRole=\" + customerRole + \", dayPhoneNumber=\" + dayPhoneNumber + \", faxNumber=\" + faxNumber + \", id=\" + id + \", isMainContact=\"\n        + isMainContact + \", mail=\" + mail + \", mobilephoneNumber=\" + mobilephoneNumber + \", nightPhoneNumber=\" + nightPhoneNumber + \", TARoleId=\" + taRoleId + \", TARoleName=\" + taRoleName\n        + \", addressLine1=\" + addressLine1 + \", addressLine2=\" + addressLine2 + \", source=\" + source + \", typeBasedOnSource=\" + typeBasedOnSource + \", active=\" + active + \", lastModifier=\"\n        + getLastModifier() + \"]\" + super.toString();\n  }\n\n  public String toStringForUISearch() {\n    return customerRole + \" \" + dayPhoneNumber + \" \" + faxNumber + \" \" + mail + \" \" + mobilephoneNumber + \" \" + nightPhoneNumber + \" \" + taRoleId + \" \" + taRoleName + \" \" + source + \" \"\n        + typeBasedOnSource + \" \" + getFormattedName();\n  }\n\n  public int getDeleted() {\n    return deleted;\n  }\n\n  public boolean isDeleted() {\n    return deleted == 1;\n  }\n\n  public void setDeleted(int deleted) {\n    this.deleted = deleted;\n  }\n\n  public boolean isCuCoContact() {\n    return getSource() != null && getSource().equalsIgnoreCase(\"CU\");\n  }\n\n  public boolean isKUMSContact() {\n    return getSource() != null && getSource().equalsIgnoreCase(\"KUMS\");\n  }\n\n  public String getFormattedName() {\n    StringBuilder sb = new StringBuilder();\n\n    if (getSalutation() != null) {\n      sb.append(getSalutation() + \" \");\n    }\n    if (getLastname() != null) {\n      sb.append(getLastname() + \" \");\n    }\n    if (getFirstname() != null) {\n      sb.append(getFirstname());\n    }\n    if (getTitle() != null) {\n      sb.append(\", \" + getTitle());\n    }\n    return sb.toString();\n  }\n\n  public String getFormattedNameWithoutSalutation() {\n    StringBuilder sb = new StringBuilder();\n\n    if (getLastname() != null) {\n      sb.append(getLastname() + \" \");\n    }\n    if (getFirstname() != null) {\n      sb.append(getFirstname());\n    }\n    if (getTitle() != null) {\n      sb.append(\", \" + getTitle());\n    }\n    return sb.toString();\n  }\n\n  public String getFullAddress() {\n    StringBuilder sbr = new StringBuilder();\n    if (getAddressLine1() != null) {\n      sbr.append(getAddressLine1()).append(getAddressLine2() != null ? \",\" : \"\");\n    }\n    if (getAddressLine2() != null) {\n      sbr.append(getAddressLine2());\n    }\n    return sbr.toString();\n  }\n\n  public boolean isSelected() {\n    return selected;\n  }\n\n  public void setSelected(boolean selected) {\n    this.selected = selected;\n  }\n\n  public String getCctRoleName() {\n    return cctRoleName;\n  }\n\n  public void setCctRoleName(String cctRoleName) {\n    this.cctRoleName = cctRoleName;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Message.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Message.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1448,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class Message implements Serializable {\n\n  public enum Type {\n    NEUTRAL, INFO, ERROR, WARN\n  }\n\n  private Type type;\n  private String message;\n\n  public Message() {}\n\n  public Message(String message) {\n    this(message, Type.NEUTRAL);\n  }\n\n  public Message(String message, Type type) {\n    this.message = message;\n    this.type = null != type ? type : Type.NEUTRAL;\n  }\n\n  public Type getType() {\n    return type;\n  }\n\n  public void setType(Type type) {\n    this.type = type;\n  }\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Granularity.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Granularity.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 115,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic enum Granularity {\n  ALL, DAILY, WEEKLY, MONTHLY, QUATERLY, YEARLY\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationRequest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationRequest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1022,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class GamificationRequest implements Serializable {\n\n  /**\n   * \n   */\n  private static final long serialVersionUID = 1L;\n\n  private String agentId;\n\n  private int limit;\n\n  private String contentType;\n\n  private String apiKey;\n\n  private String queryString;\n\n  public int getLimit() {\n    return limit;\n  }\n\n  public void setLimit(int limit) {\n    this.limit = limit;\n  }\n\n  public String getAgentId() {\n    return agentId;\n  }\n\n  public void setAgentId(String agentId) {\n    this.agentId = agentId;\n  }\n\n  public String getContentType() {\n    return contentType;\n  }\n\n  public void setContentType(String contentType) {\n    this.contentType = contentType;\n  }\n\n  public String getApiKey() {\n    return apiKey;\n  }\n\n  public void setApiKey(String apiKey) {\n    this.apiKey = apiKey;\n  }\n\n  public String getQueryString() {\n    return queryString;\n  }\n\n  public void setQueryString(String queryString) {\n    this.queryString = queryString;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AggregatedInventoryProductGroupUsage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AggregatedInventoryProductGroupUsage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 493,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class AggregatedInventoryProductGroupUsage extends InventoryProductGroupUsage {\n  private List<Party> parties;\n\n  public List<Party> getParties() {\n    return parties;\n  }\n\n  public void setParties(List<Party> parties) {\n    this.parties = parties;\n  }\n\n  public void addParty(Party party) {\n    if (parties == null) {\n      parties = new ArrayList<Party>();\n    }\n    parties.add(party);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BillingCycleEntry.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BillingCycleEntry.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1063,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class BillingCycleEntry implements Serializable {\n  private Long id;\n  private String vBlock;\n  private int column;\n  private String step;\n  private Date from;\n  private Date to;\n  private Date hr;\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getvBlock() {\n    return vBlock;\n  }\n\n  public void setvBlock(String vBlock) {\n    this.vBlock = vBlock;\n  }\n\n  public int getColumn() {\n    return column;\n  }\n\n  public void setColumn(int column) {\n    this.column = column;\n  }\n\n  public String getStep() {\n    return step;\n  }\n\n  public void setStep(String step) {\n    this.step = step;\n  }\n\n  public Date getFrom() {\n    return from;\n  }\n\n  public void setFrom(Date from) {\n    this.from = from;\n  }\n\n  public Date getTo() {\n    return to;\n  }\n\n  public void setTo(Date to) {\n    this.to = to;\n  }\n\n  public Date getHr() {\n    return hr;\n  }\n\n  public void setHr(Date hr) {\n    this.hr = hr;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InventoryProductGroupAssignable.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InventoryProductGroupAssignable.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 308,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic interface InventoryProductGroupAssignable {\n  public String getDescription();\n\n  public InventoryProductGroup getInventoryProductGroup();\n\n  public void setInventoryProductGroup(InventoryProductGroup inventoryProductGroup);\n\n  public ProductLevel getParent();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/NotesFilter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/NotesFilter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3429,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.util.Date;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote.ToDoStatus;\n\npublic class NotesFilter {\n\n  public static final String USER_ID = \"USER_ID\";\n  public static final String LAST_MOD_DATE = \"LAST_MOD_DATE\";\n  public static final String NOTE_TYPE = \"NOTE_TYPE\";\n  public static final String NOTE_TEXT = \"NOTE_TEXT\";\n  public static final String CREATOR = \"CREATOR\";\n  public static final String LAST_MODIFIER = \"LAST_MODIFIER\";\n  public static final String ASSIGNEE = \"ASSIGNEE\";\n  public static final String REMINDER = \"REMINDER\";\n  public static final String PARTY_ID = \"PARTY_ID\";\n  public static final String FIRSTNAME = \"FIRSTNAME\";\n  public static final String LASTNAME = \"LASTNAME\";\n  public static final String STATUS = \"STATUS\";\n  public static final String GROUP_NAME = \"GROUP_NAME\";\n  public static final String GROUP_STATUS = \"GROUP_STATUS\";\n  private long userId;\n  private Date lastModDate;\n  private SalesInfoNoteType noteType;\n  private String noteText;\n  private String status;\n  private String creator;\n  private String lastModifier;\n  private String assignee;\n  private String reminderOperator;\n  private String partyId;\n  private String firstname;\n  private String lastname;\n  private String groupName;\n  private ToDoStatus groupStatus;\n\n  public long getUserId() {\n    return userId;\n  }\n\n  public void setUserId(long userId) {\n    this.userId = userId;\n  }\n\n  public Date getLastModDate() {\n    return lastModDate;\n  }\n\n  public void setLastModDate(Date lastModDate) {\n    this.lastModDate = lastModDate;\n  }\n\n  public SalesInfoNoteType getNoteType() {\n    return noteType;\n  }\n\n  public void setNoteType(SalesInfoNoteType noteType) {\n    this.noteType = noteType;\n  }\n\n  public String getNoteText() {\n    return noteText;\n  }\n\n  public void setNoteText(String noteText) {\n    this.noteText = noteText;\n  }\n\n  public String getStatus() {\n    return status;\n  }\n\n  public void setStatus(String status) {\n    this.status = status;\n  }\n\n  public String getLastModifier() {\n    return lastModifier;\n  }\n\n  public void setLastModifier(String lastModifier) {\n    this.lastModifier = lastModifier;\n  }\n\n  public String getReminderOperator() {\n    return reminderOperator;\n  }\n\n  public void setReminderOperator(String reminder) {\n    this.reminderOperator = reminder;\n  }\n\n  public String getCreator() {\n    return creator;\n  }\n\n  public void setCreator(String creator) {\n    this.creator = creator;\n  }\n\n  public String getAssignee() {\n    return assignee;\n  }\n\n  public void setAssignee(String assignee) {\n    this.assignee = assignee;\n  }\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getFirstname() {\n    return firstname;\n  }\n\n  public void setFirstname(String firstname) {\n    this.firstname = firstname;\n  }\n\n  public String getLastname() {\n    return lastname;\n  }\n\n  public void setLastname(String lastname) {\n    this.lastname = lastname;\n  }\n\n  public String getGroupName() {\n    return groupName;\n  }\n\n  public void setGroupName(String groupName) {\n    this.groupName = groupName;\n  }\n\n  public ToDoStatus getGroupStatus() {\n    return groupStatus;\n  }\n\n  public void setGroupStatus(ToDoStatus groupStatus) {\n    this.groupStatus = groupStatus;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CreditType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CreditType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 914,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class CreditType implements Serializable {\n  private Long id;\n  private String name;\n  private String description;\n  private Boolean active;\n\n  public CreditType() {}\n\n  public CreditType(String name, String description, Boolean active) {\n    super();\n    this.name = name;\n    this.description = description;\n    this.active = active;\n  }\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public Boolean getActive() {\n    return active;\n  }\n\n  public void setActive(Boolean active) {\n    this.active = active;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SingleTurnaround.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SingleTurnaround.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 756,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class SingleTurnaround implements Serializable {\n  private long customerId;\n  private RTCode rtCode;\n  private Date date;\n  private double amount;\n\n  public long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(long customerId) {\n    this.customerId = customerId;\n  }\n\n  public RTCode getRtCode() {\n    return rtCode;\n  }\n\n  public void setRtCode(RTCode rtCode) {\n    this.rtCode = rtCode;\n  }\n\n  public Date getDate() {\n    return date;\n  }\n\n  public void setDate(Date date) {\n    this.date = date;\n  }\n\n  public double getAmount() {\n    return amount;\n  }\n\n  public void setAmount(double amount) {\n    this.amount = amount;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Salesstage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Salesstage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1737,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class Salesstage implements Serializable {\n\n  public enum Status {\n    // @formatter:off\n    CREATED(\"Erstellt\"), SAVED(\"Gespeichert\"), APPROVED(\"Freigegeben\"), DISAPPROVED(\"Ablehnen\"), FINALIZED(\"Finalisiert\"), SENT(\"An Kunde \u00dcbergeben\"), ACCEPTED(\"Angenommen\"), DECLINED(\"Abgelehnt\"), ORDERED(\n        \"Bestellt\"), CLOSED(\"Geschlossen\"), PRINTED(\"Gedruckt\"), CANCELED(\"Abgebrochen\"), ARCHIVED(\"Gel\u00f6scht\"), CLEARANCE_PENDING(\"Zur Freigabe\"), CLEARANCE_IN_PROGRESS(\"Vorabfreigabe\"), CLEARANCE_COMPLETED(\n        \"Endfreigabe\"), CLEARANCE_DECLINED(\"Nicht Freigegeben\");\n    // @formatter:on\n\n    private String name;\n\n    private Status(String name) {\n      this.name = name;\n    }\n\n    public String getName() {\n      return name;\n    }\n\n    public static Status findByName(String name) {\n      for (Status value : values()) {\n        if (value.name().equals(name)) {\n          return value;\n        }\n      }\n      return null;\n    }\n  }\n\n  private Status status;\n  private Date changeDate;\n  private Long quoteId;\n  private BiteUser executor;\n\n  public Status getStatus() {\n    return status;\n  }\n\n  public void setStatus(Status status) {\n    this.status = status;\n  }\n\n  public Long getQuoteId() {\n    return quoteId;\n  }\n\n  public void setQuoteId(Long quoteId) {\n    this.quoteId = quoteId;\n  }\n\n  public Date getChangeDate() {\n    return changeDate;\n  }\n\n  public void setChangeDate(Date changeDate) {\n    this.changeDate = changeDate;\n  }\n\n  public BiteUser getExecutor() {\n    return executor;\n  }\n\n  public void setExecutor(BiteUser executor) {\n    this.executor = executor;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Party.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Party.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 10394,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.apache.solr.client.solrj.beans.Field;\n\nimport at.a1ta.bite.core.shared.dto.KumsSkzShop;\nimport at.a1ta.cuco.core.shared.dto.PartyDeclarationOfConsentInfo.StatusOfCompleteness;\n\npublic class Party extends Customer {\n  private static final long serialVersionUID = 1L;\n  private static final String CREDIT_WORTHINESS_GREEN = \"gr\u00fcn\";\n  private static final String CREDIT_WORTHINESS_YELLOW = \"gelb\";\n  private static final String CREDIT_WORTHINESS_RED = \"rot\";\n  private static final String SBS = \"SBS\";\n\n  private VipStatus vipStatus;\n  private String vipTooltip;\n  private String leadId;\n  private String leadNote;\n  private ServiceClassInfo serviceClassInfo = new ServiceClassInfo();\n  private int type;\n  private int marker;\n  private boolean active = true;\n  private ArrayList<BillingAccountNumber> billingAccountNumbers;\n  private boolean hierarchical;\n  private List<Party> children = new ArrayList<Party>();\n  private BigDecimal turnover;\n  private int flashInfoCount;\n  private ArrayList<MobileChurnLikeliness> mobileChurnLikeliness;\n  private String maxMobileChurnLikeliness;\n  private KumsSkzShop kumsSkzShop;\n  private IndexationStatus idxStatus = IndexationStatus.NOT_AVAILABLE;\n  private PointOfSaleInfo posInfo = new PointOfSaleInfo(PointOfSaleInfo.LOADING, \"\", \"\");\n  private PartyDeclarationOfConsentInfo declarationOfConsentInfo = new PartyDeclarationOfConsentInfo(PartyDeclarationOfConsentInfo.LOADING, StatusOfCompleteness.UNKNOWN);\n  private PartyProfileInfo partyProfileInfo = new PartyProfileInfo(PartyProfileInfo.LOADING);\n  private CrmAuthenticationInfo crmAuthenticationInfo = new CrmAuthenticationInfo(CrmAuthenticationInfo.LOADING);\n  private PartyCustomerLoyaltyInfo partyCustomerLoyaltyInfo = new PartyCustomerLoyaltyInfo();\n  private String emptySeparatorString;\n  private String cmBuddyLink;\n\n  public Party() {}\n\n  public Party(long partyId) {\n    this.setId(partyId);\n  }\n\n  public VipStatus getVipStatus() {\n    return vipStatus;\n  }\n\n  public void setVipStatus(VipStatus vipStatus) {\n    this.vipStatus = vipStatus;\n  }\n\n  public boolean isVip() {\n    return vipStatus != null && (vipStatus.getIntValue() != null || vipStatus.getState() == VipStatus.State.VIP);\n  }\n\n  public String getVipTooltip() {\n    return vipTooltip;\n  }\n\n  public void setVipTooltip(String vipTooltip) {\n    this.vipTooltip = vipTooltip;\n  }\n\n  @Field(\"dualsegment\")\n  public void setType(int type) {\n    this.type = type;\n  }\n\n  public int getType() {\n    return type;\n  }\n\n  public int getMarker() {\n    return marker;\n  }\n\n  public void setMarker(int marker) {\n    this.marker = marker;\n  }\n\n  public String getFullname() {\n    if (getTitle() != null) {\n      return getTitle() + \" \" + getFirstname() + \" \" + getLastname();\n    }\n    return getFirstname() + \" \" + getLastname();\n  }\n\n  public String getName() {\n    String firstname = getFirstname();\n    if (firstname == null || firstname.length() == 0) {\n      return getLastname();\n    }\n    return firstname + \" \" + getLastname();\n  }\n\n  public ArrayList<BillingAccountNumber> getBillingAccountNumbers() {\n    return billingAccountNumbers;\n  }\n\n  public void setBillingAccountNumbers(ArrayList<BillingAccountNumber> billingAccountNumbers) {\n    this.billingAccountNumbers = billingAccountNumbers;\n  }\n\n  public boolean hasBillingAccountNumbers() {\n    return this.billingAccountNumbers != null && !this.billingAccountNumbers.isEmpty();\n  }\n\n  public boolean hasSupportUser() {\n    return getSupportUserId() != null && !getSupportUserId().equalsIgnoreCase(\"Kein Be\");\n  }\n\n  public boolean isActive() {\n    return active;\n  }\n\n  public void setActive(boolean active) {\n    this.active = active;\n  }\n\n  public boolean hasCreditWorthinessGreen() {\n    return CREDIT_WORTHINESS_GREEN.equalsIgnoreCase(getCreditworthiness());\n  }\n\n  public boolean hasCreditWorthinessYellow() {\n    return CREDIT_WORTHINESS_YELLOW.equalsIgnoreCase(getCreditworthiness());\n  }\n\n  public boolean hasCreditWorthinessRed() {\n    return CREDIT_WORTHINESS_RED.equalsIgnoreCase(getCreditworthiness());\n  }\n\n  public boolean hasKnownCreditworthiness() {\n    return hasCreditWorthinessGreen() || hasCreditWorthinessYellow() || hasCreditWorthinessRed();\n  }\n\n  public boolean hasIndexedProduct() {\n    return IndexationStatus.INDEXED.equals(IndexationStatus.getForDWHValue(getIndexation()));\n  }\n\n  public boolean hasIndexedProductNotUsed() {\n    return IndexationStatus.INDEXED_NOT_STARTED.equals(IndexationStatus.getForDWHValue(getIndexation()));\n  }\n\n  public boolean hasIndexedExcluded() {\n    return IndexationStatus.NOT_INDEXED.equals(IndexationStatus.getForDWHValue(getIndexation()));\n  }\n\n  public boolean hasKnownIndexed() {\n    return !IndexationStatus.NOT_AVAILABLE.equals(IndexationStatus.getForDWHValue(getIndexation()));\n\n  }\n\n  public boolean isHierarchical() {\n    return hierarchical;\n  }\n\n  public void setHierarchical(boolean hierarchical) {\n    this.hierarchical = hierarchical;\n  }\n\n  public boolean isTaCustomer() {\n    return type == 1 || type == 3 || type == 5 || type == 7;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (!(obj instanceof Party)) {\n      return false;\n    }\n    Party otherParty = (Party) obj;\n    return otherParty != null && getId() == otherParty.getId();\n  }\n\n  @Override\n  public int hashCode() {\n    return (int) (getId() ^ (getId() >>> 32)); // default hashCode algo.\n  }\n\n  @Override\n  public String toString() {\n    return \"Party: partyId=\" + getId();\n  }\n\n  public void addChild(Party party) {\n    if (!children.contains(party)) {\n      children.add(party);\n    }\n  }\n\n  public List<Party> getChildren() {\n    return children;\n  }\n\n  public BigDecimal getTurnover() {\n    return turnover;\n  }\n\n  public void setTurnover(BigDecimal turnover) {\n    this.turnover = turnover;\n  }\n\n  public void setFlashInfoCount(int flashInfoCount) {\n    this.flashInfoCount = flashInfoCount;\n  }\n\n  public int getFlashInfoCount() {\n    return flashInfoCount;\n  }\n\n  public void setMobileChurnLikeliness(ArrayList<MobileChurnLikeliness> mobileChurnLikeliness) {\n    this.mobileChurnLikeliness = mobileChurnLikeliness;\n  }\n\n  public ArrayList<MobileChurnLikeliness> getMobileChurnLikeliness() {\n    return mobileChurnLikeliness;\n  }\n\n  public void setMaxMobileChurnLikeliness(String maxMobileChurnLikeliness) {\n    this.maxMobileChurnLikeliness = maxMobileChurnLikeliness;\n  }\n\n  public String getMaxMobileChurnLikeliness() {\n    return maxMobileChurnLikeliness;\n  }\n\n  public KumsSkzShop getKumsSkzShop() {\n    return kumsSkzShop;\n  }\n\n  public void setKumsSkzShop(KumsSkzShop kumsSkzShop) {\n    this.kumsSkzShop = kumsSkzShop;\n  }\n\n  public String getLeadId() {\n    return leadId;\n  }\n\n  public void setLeadId(String leadId) {\n    this.leadId = leadId;\n  }\n\n  public String getLeadNote() {\n    return leadNote;\n  }\n\n  public void setLeadNote(String leadNote) {\n    this.leadNote = leadNote;\n  }\n\n  public boolean isLead() {\n    return (getId() <= 0 && getLeadId() != null && !getLeadId().trim().isEmpty()) || getType() == 9;\n  }\n\n  public String getUniqueKey() {\n    return getId() + getLeadId();\n  }\n\n  public String getPartyIdentifier() {\n    return getId() == 0 ? getLeadId() : String.valueOf(getId());\n  }\n\n  public IndexationStatus getIdxStatus() {\n    if (idxStatus.equals(IndexationStatus.NOT_AVAILABLE) && getIndexation() != null && getIndexation().trim().length() > 0) {\n      idxStatus = IndexationStatus.getForDWHValue(getIndexation());\n    }\n    return idxStatus;\n  }\n\n  public void setIdxStatus(IndexationStatus idxStatus) {\n    this.idxStatus = idxStatus;\n  }\n\n  public void setIdxStatus(String idxStatus) {\n    this.idxStatus = IndexationStatus.getForDWHValue(idxStatus);\n  }\n\n  public ServiceClassInfo getServiceClassInfo() {\n    return serviceClassInfo;\n  }\n\n  public void setServiceClassInfo(ServiceClassInfo serviceClassInfo) {\n    this.serviceClassInfo = serviceClassInfo;\n  }\n\n  public PointOfSaleInfo getPOSInfo() {\n    return posInfo;\n  }\n\n  @Field(\"posInfo\")\n  public void setPOSInfo(PointOfSaleInfo posInfo) {\n    this.posInfo = posInfo;\n  }\n\n  public boolean isSBSCustomer() {\n    return SBS.equalsIgnoreCase(getBusinessSegment());\n  }\n\n  @Field(\"betreuteStelleCd\")\n  public void setBetreuteStelleCd(String betreuteStelleCd) {\n    if (this.kumsSkzShop == null) {\n      this.kumsSkzShop = new KumsSkzShop();\n    }\n    this.kumsSkzShop.setBetreuteStelleCd(betreuteStelleCd);\n  }\n\n  @Field(\"betreuteStelleNam\")\n  public void setBetreuteStelleNam(String betreuteStelleNam) {\n    if (this.kumsSkzShop == null) {\n      this.kumsSkzShop = new KumsSkzShop();\n    }\n    this.kumsSkzShop.setBetreuteStelleNam(betreuteStelleNam);\n  }\n\n  @Field(\"isAttendent\")\n  public void setIsAttendent(String shopBetreut) {\n    if (this.kumsSkzShop == null) {\n      this.kumsSkzShop = new KumsSkzShop();\n    }\n    this.kumsSkzShop.setShopBetreut(shopBetreut != null && shopBetreut.equalsIgnoreCase(\"true\"));\n  }\n\n  public PartyDeclarationOfConsentInfo getDeclarationOfConsentInfo() {\n    return declarationOfConsentInfo;\n  }\n\n  public void setDeclarationOfConsentInfo(PartyDeclarationOfConsentInfo declarationOfConsentInfo) {\n    this.declarationOfConsentInfo = declarationOfConsentInfo;\n  }\n\n  public PartyProfileInfo getPartyProfileInfo() {\n    return partyProfileInfo;\n  }\n\n  public void setPartyProfileInfo(PartyProfileInfo partyProfileInfo) {\n    this.partyProfileInfo = partyProfileInfo;\n  }\n\n  public CrmAuthenticationInfo getCrmAuthenticationInfo() {\n    return crmAuthenticationInfo;\n  }\n\n  public void setCrmAuthenticationInfo(CrmAuthenticationInfo crmAuthenticationInfo) {\n    this.crmAuthenticationInfo = crmAuthenticationInfo;\n  }\n\n  public String getEmptySeparatorString() {\n    return emptySeparatorString;\n  }\n\n  public void setEmptySeparatorString(String emptySeparatorString) {\n    this.emptySeparatorString = emptySeparatorString;\n  }\n\n  public PartyCustomerLoyaltyInfo getPartyCustomerLoyaltyInfo() {\n    return partyCustomerLoyaltyInfo;\n  }\n\n  public void setPartyCustomerLoyaltyInfo(PartyCustomerLoyaltyInfo partyCustomerLoyaltyInfo) {\n    this.partyCustomerLoyaltyInfo = partyCustomerLoyaltyInfo;\n  }\n\n  public String getCmBuddyLink() {\n    return cmBuddyLink;\n  }\n\n  public void setCmBuddyLink(String cmBuddyLink) {\n    this.cmBuddyLink = cmBuddyLink;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/LocationPlaceholder.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/LocationPlaceholder.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 280,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\nimport at.a1ta.bite.data.clarify.shared.dto.Location;\n\npublic class LocationPlaceholder extends Location implements Serializable {\n  public LocationPlaceholder() {\n    setId(-1l);\n    setLocationId(\"-1\");\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Tupel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Tupel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 523,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class Tupel<N, M> implements Serializable {\n  private N value1;\n  private M value2;\n\n  public Tupel() {}\n\n  public Tupel(N value1, M value2) {\n    super();\n    this.value1 = value1;\n    this.value2 = value2;\n  }\n\n  public N getValue1() {\n    return value1;\n  }\n\n  public void setValue1(N value1) {\n    this.value1 = value1;\n  }\n\n  public M getValue2() {\n    return value2;\n  }\n\n  public void setValue2(M value2) {\n    this.value2 = value2;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Team.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Team.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1436,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class Team implements Serializable {\n  private Long id;\n  private String name;\n  private String description;\n  private BiteUser creator;\n  private Date createDate;\n  private List<BiteUser> members = new ArrayList<BiteUser>();\n  private List<Service> services = new ArrayList<Service>();\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public List<BiteUser> getMembers() {\n    return members;\n  }\n\n  public void setMembers(List<BiteUser> members) {\n    this.members = members;\n  }\n\n  public BiteUser getCreator() {\n    return creator;\n  }\n\n  public void setCreator(BiteUser creator) {\n    this.creator = creator;\n  }\n\n  public Date getCreateDate() {\n    return createDate;\n  }\n\n  public void setCreateDate(Date createDate) {\n    this.createDate = createDate;\n  }\n\n  public List<Service> getServices() {\n    return services;\n  }\n\n  public void setServices(List<Service> services) {\n    this.services = services;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Image.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Image.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1134,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Image implements Serializable {\n  private Long id;\n  private String uuser;\n  private String filename;\n  private String name;\n  private Date creationDate;\n  private Long imageSizeId;\n\n  public Long getId() {\n    return this.id;\n  }\n\n  public String getUuser() {\n    return this.uuser;\n  }\n\n  public String getFilename() {\n    return this.filename;\n  }\n\n  public String getName() {\n    return this.name;\n  }\n\n  public Date getCreationDate() {\n    return this.creationDate;\n  }\n\n  public Long getImageSizeId() {\n    return this.imageSizeId;\n  }\n\n  public void setId(final Long id) {\n    this.id = id;\n  }\n\n  public void setUuser(final String uuser) {\n    this.uuser = uuser;\n  }\n\n  public void setFilename(final String filename) {\n    this.filename = filename;\n  }\n\n  public void setName(final String name) {\n    this.name = name;\n  }\n\n  public void setCreationDate(final Date creationDate) {\n    this.creationDate = creationDate;\n  }\n\n  public void setImageSizeId(final Long imageSizeId) {\n    this.imageSizeId = imageSizeId;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MyOpportunity.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MyOpportunity.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5792,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class MyOpportunity implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n  private Long partyid;\n  private String leadId;\n  private int partyType;\n  private String quoteNumber;\n  private String firstname;\n  private String lastname;\n  private String creator;\n  private BiteUser creatorPerson;\n  private String lastModifier;\n  private BiteUser lastModifierPerson;\n  private ProductOffering productOffering;\n  private Salesstage.Status status;\n  private Date createDate;\n  private Date validToDate;\n  private BigDecimal monthlyTurnoverFixed;\n  private BigDecimal monthlyTurnoverMobile;\n  private BigDecimal monthlyTurnoverOther;\n  private BigDecimal onetimeCostTotal;\n  private BigDecimal yearlyCostTotal;\n  private BigDecimal monthlyCostTotal;\n  private String clearanceInitiator;\n  private String clearanceFinalApprover;\n  private String clearancePendingWith;\n\n  public Long getPartyid() {\n    return partyid;\n  }\n\n  public void setPartyid(Long partyid) {\n    this.partyid = partyid;\n  }\n\n  public String getFirstname() {\n    return firstname;\n  }\n\n  public void setFirstname(String firstname) {\n    this.firstname = firstname;\n  }\n\n  public String getLastname() {\n    return lastname;\n  }\n\n  public void setLastname(String lastname) {\n    this.lastname = lastname;\n  }\n\n  public ProductOffering getProductOffering() {\n    return productOffering;\n  }\n\n  public void setProductOffering(ProductOffering productOffering) {\n    this.productOffering = productOffering;\n  }\n\n  public Salesstage.Status getStatus() {\n    return status;\n  }\n\n  public void setStatus(Salesstage.Status status) {\n    this.status = status;\n  }\n\n  public Date getCreateDate() {\n    return createDate;\n  }\n\n  public void setCreateDate(Date createDate) {\n    this.createDate = createDate;\n  }\n\n  public Date getValidToDate() {\n    return validToDate;\n  }\n\n  public void setValidToDate(Date validToDate) {\n    this.validToDate = validToDate;\n  }\n\n  public BigDecimal getMonthlyTurnoverFixed() {\n    return monthlyTurnoverFixed;\n  }\n\n  public void setMonthlyTurnoverFixed(BigDecimal monthlyTturnoverFixed) {\n    this.monthlyTurnoverFixed = monthlyTturnoverFixed;\n  }\n\n  public BigDecimal getMonthlyTurnoverMobile() {\n    return monthlyTurnoverMobile;\n  }\n\n  public void setMonthlyTurnoverMobile(BigDecimal monthlyTurnoverMobile) {\n    this.monthlyTurnoverMobile = monthlyTurnoverMobile;\n  }\n\n  public BigDecimal getMonthlyTurnoverOther() {\n    return monthlyTurnoverOther;\n  }\n\n  public BigDecimal getMonthlyTurnoverSum() {\n    return monthlyTurnoverFixed.add(monthlyTurnoverMobile).add(monthlyTurnoverOther);\n  }\n\n  public void setMonthlyTurnoverOther(BigDecimal monthlyTurnoverOther) {\n    this.monthlyTurnoverOther = monthlyTurnoverOther;\n  }\n\n  public BigDecimal getOnetimeCostTotal() {\n    return onetimeCostTotal;\n  }\n\n  public void setOnetimeCostTotal(BigDecimal onetimeCostTotal) {\n    this.onetimeCostTotal = onetimeCostTotal;\n  }\n\n  public BigDecimal getYearlyCostTotal() {\n    return yearlyCostTotal;\n  }\n\n  public void setYearlyCostTotal(BigDecimal yearlyCostTotal) {\n    this.yearlyCostTotal = yearlyCostTotal;\n  }\n\n  public BigDecimal getMonthlyCostTotal() {\n    return monthlyCostTotal;\n  }\n\n  public void setMonthlyCostTotal(BigDecimal monthlyCostTotal) {\n    this.monthlyCostTotal = monthlyCostTotal;\n  }\n\n  @Override\n  public String toString() {\n    return \"MyOpportunity [partyid=\" + partyid + \", firstname=\" + firstname + \", lastname=\" + lastname + \", productOffering=\" + productOffering + \", status=\" + status + \", createDate=\" + createDate\n        + \", validToDate=\" + validToDate + \", monthlyTturnoverFixed=\" + monthlyTurnoverFixed + \", monthlyTurnoverMobile=\" + monthlyTurnoverMobile + \", monthlyTurnoverOther=\" + monthlyTurnoverOther\n        + \", onetimeCostTotal=\" + onetimeCostTotal + \", yearlyCostTotal=\" + yearlyCostTotal + \", monthlyCostTotal=\" + monthlyCostTotal + \"]\";\n  }\n\n  public String getQuoteNumber() {\n    return quoteNumber;\n  }\n\n  public void setQuoteNumber(String quoteNumber) {\n    this.quoteNumber = quoteNumber;\n  }\n\n  public String getLastModifier() {\n    return lastModifier;\n  }\n\n  public void setLastModifier(String lastModifier) {\n    this.lastModifier = lastModifier;\n  }\n\n  public String getCreator() {\n    return creator;\n  }\n\n  public void setCreator(String creator) {\n    this.creator = creator;\n  }\n\n  public BiteUser getCreatorPerson() {\n    return creatorPerson;\n  }\n\n  public void setCreatorPerson(BiteUser creatorPerson) {\n    this.creatorPerson = creatorPerson;\n  }\n\n  public BiteUser getLastModifierPerson() {\n    return lastModifierPerson;\n  }\n\n  public void setLastModifierPerson(BiteUser lastModifierPerson) {\n    this.lastModifierPerson = lastModifierPerson;\n  }\n\n  public String getLeadId() {\n    return leadId;\n  }\n\n  public void setLeadId(String leadId) {\n    this.leadId = leadId;\n  }\n\n  public int getPartyType() {\n    return partyType;\n  }\n\n  public void setPartyType(int partyType) {\n    this.partyType = partyType;\n  }\n\n  public String getClearanceInitiator() {\n    return clearanceInitiator;\n  }\n\n  public void setClearanceInitiator(String clearanceInitiator) {\n    this.clearanceInitiator = clearanceInitiator;\n  }\n\n  public String getClearanceFinalApprover() {\n    return clearanceFinalApprover;\n  }\n\n  public void setClearanceFinalApprover(String clearanceFinalApprover) {\n    this.clearanceFinalApprover = clearanceFinalApprover;\n  }\n\n  public String getClearancePendingWith() {\n    return clearancePendingWith;\n  }\n\n  public void setClearancePendingWith(String clearancePendingWith) {\n    this.clearancePendingWith = clearancePendingWith;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/StandardAddress.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/StandardAddress.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9320,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class StandardAddress implements Serializable {\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((additional == null) ? 0 : additional.hashCode());\n    result = prime * result + (int) (addressId ^ (addressId >>> 32));\n    result = prime * result + ((block == null) ? 0 : block.hashCode());\n    result = prime * result + ((city == null) ? 0 : city.hashCode());\n    result = prime * result + ((country == null) ? 0 : country.hashCode());\n    result = prime * result + ((creationDate == null) ? 0 : creationDate.hashCode());\n    result = prime * result + ((creationUser == null) ? 0 : creationUser.hashCode());\n    result = prime * result + ((dataSource == null) ? 0 : dataSource.hashCode());\n    result = prime * result + ((doorNumber == null) ? 0 : doorNumber.hashCode());\n    result = prime * result + ((floorNumber == null) ? 0 : floorNumber.hashCode());\n    result = prime * result + ((houseNumber == null) ? 0 : houseNumber.hashCode());\n    result = prime * result + ((lastModificationDate == null) ? 0 : lastModificationDate.hashCode());\n    result = prime * result + ((lastModificationUser == null) ? 0 : lastModificationUser.hashCode());\n    result = prime * result + ((lkmsId == null) ? 0 : lkmsId.hashCode());\n    result = prime * result + (int) (partyId ^ (partyId >>> 32));\n    result = prime * result + ((postcode == null) ? 0 : postcode.hashCode());\n    result = prime * result + ((staircase == null) ? 0 : staircase.hashCode());\n    result = prime * result + ((street == null) ? 0 : street.hashCode());\n    result = prime * result + ((village == null) ? 0 : village.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    StandardAddress other = (StandardAddress) obj;\n    if (additional == null) {\n      if (other.additional != null) {\n        return false;\n      }\n    } else if (!additional.equals(other.additional)) {\n      return false;\n    }\n    if (addressId != other.addressId) {\n      return false;\n    }\n    if (block == null) {\n      if (other.block != null) {\n        return false;\n      }\n    } else if (!block.equals(other.block)) {\n      return false;\n    }\n    if (city == null) {\n      if (other.city != null) {\n        return false;\n      }\n    } else if (!city.equals(other.city)) {\n      return false;\n    }\n    if (country == null) {\n      if (other.country != null) {\n        return false;\n      }\n    } else if (!country.equals(other.country)) {\n      return false;\n    }\n    if (creationDate == null) {\n      if (other.creationDate != null) {\n        return false;\n      }\n    } else if (!creationDate.equals(other.creationDate)) {\n      return false;\n    }\n    if (creationUser == null) {\n      if (other.creationUser != null) {\n        return false;\n      }\n    } else if (!creationUser.equals(other.creationUser)) {\n      return false;\n    }\n    if (dataSource != other.dataSource) {\n      return false;\n    }\n    if (doorNumber == null) {\n      if (other.doorNumber != null) {\n        return false;\n      }\n    } else if (!doorNumber.equals(other.doorNumber)) {\n      return false;\n    }\n    if (floorNumber == null) {\n      if (other.floorNumber != null) {\n        return false;\n      }\n    } else if (!floorNumber.equals(other.floorNumber)) {\n      return false;\n    }\n    if (houseNumber == null) {\n      if (other.houseNumber != null) {\n        return false;\n      }\n    } else if (!houseNumber.equals(other.houseNumber)) {\n      return false;\n    }\n    if (lastModificationDate == null) {\n      if (other.lastModificationDate != null) {\n        return false;\n      }\n    } else if (!lastModificationDate.equals(other.lastModificationDate)) {\n      return false;\n    }\n    if (lastModificationUser == null) {\n      if (other.lastModificationUser != null) {\n        return false;\n      }\n    } else if (!lastModificationUser.equals(other.lastModificationUser)) {\n      return false;\n    }\n    if (lkmsId == null) {\n      if (other.lkmsId != null) {\n        return false;\n      }\n    } else if (!lkmsId.equals(other.lkmsId)) {\n      return false;\n    }\n    if (partyId != other.partyId) {\n      return false;\n    }\n    if (postcode == null) {\n      if (other.postcode != null) {\n        return false;\n      }\n    } else if (!postcode.equals(other.postcode)) {\n      return false;\n    }\n    if (staircase == null) {\n      if (other.staircase != null) {\n        return false;\n      }\n    } else if (!staircase.equals(other.staircase)) {\n      return false;\n    }\n    if (street == null) {\n      if (other.street != null) {\n        return false;\n      }\n    } else if (!street.equals(other.street)) {\n      return false;\n    }\n    if (village == null) {\n      if (other.village != null) {\n        return false;\n      }\n    } else if (!village.equals(other.village)) {\n      return false;\n    }\n    return true;\n  }\n\n  public enum AddressDataSource {\n    PARTY_SERVICE, USER_INPUT, KUMS_COMMON_SERVICE\n  };\n\n  private long addressId;\n  private String lkmsId;\n  private long partyId;\n  private String street;\n  private String houseNumber;\n  private String block;\n  private String staircase;\n  private String floorNumber;\n  private String doorNumber;\n  private String additional;\n  private String postcode;\n  private String city;\n  private String village;\n  private String country;\n\n  private BiteUser creationUser;\n  private Date creationDate;\n  private BiteUser lastModificationUser;\n  private Date lastModificationDate;\n\n  private AddressDataSource dataSource;\n\n  public String getLkmsId() {\n    return lkmsId;\n  }\n\n  public void setLkmsId(String lkmsId) {\n    this.lkmsId = lkmsId;\n  }\n\n  public String getStreet() {\n    return street;\n  }\n\n  public void setStreet(String street) {\n    this.street = street;\n  }\n\n  public String getHouseNumber() {\n    return houseNumber;\n  }\n\n  public void setHouseNumber(String houseNumber) {\n    this.houseNumber = houseNumber;\n  }\n\n  public String getBlock() {\n    return block;\n  }\n\n  public void setBlock(String block) {\n    this.block = block;\n  }\n\n  public String getStaircase() {\n    return staircase;\n  }\n\n  public void setStaircase(String staircase) {\n    this.staircase = staircase;\n  }\n\n  public String getFloorNumber() {\n    return floorNumber;\n  }\n\n  public void setFloorNumber(String floorNumber) {\n    this.floorNumber = floorNumber;\n  }\n\n  public String getDoorNumber() {\n    return doorNumber;\n  }\n\n  public void setDoorNumber(String doorNumber) {\n    this.doorNumber = doorNumber;\n  }\n\n  public String getAdditional() {\n    return additional;\n  }\n\n  public void setAdditional(String additional) {\n    this.additional = additional;\n  }\n\n  public String getPostcode() {\n    return postcode;\n  }\n\n  public void setPostcode(String postcode) {\n    this.postcode = postcode;\n  }\n\n  public String getCity() {\n    return city;\n  }\n\n  public void setCity(String city) {\n    this.city = city;\n  }\n\n  public String getVillage() {\n    return village;\n  }\n\n  public void setVillage(String village) {\n    this.village = village;\n  }\n\n  public String getCountry() {\n    return country;\n  }\n\n  public void setCountry(String country) {\n    this.country = country;\n  }\n\n  @Override\n  public String toString() {\n    return \"StandardAddress [addressId=\" + addressId + \", lkmsId=\" + lkmsId + \", partyId=\" + partyId + \", street=\" + street + \", houseNumber=\" + houseNumber + \", block=\" + block + \", staircase=\"\n        + staircase + \", floorNumber=\" + floorNumber + \", doorNumber=\" + doorNumber + \", additional=\" + additional + \", postcode=\" + postcode + \", city=\" + city + \", village=\" + village\n        + \", country=\" + country + \", creationUser=\" + creationUser + \", creationDate=\" + creationDate + \", lastModificationUser=\" + lastModificationUser + \", lastModificationDate=\"\n        + lastModificationDate + \", dataSource=\" + dataSource + \"]\";\n  }\n\n  public long getAddressId() {\n    return addressId;\n  }\n\n  public void setAddressId(long addressId) {\n    this.addressId = addressId;\n  }\n\n  public BiteUser getCreationUser() {\n    return creationUser;\n  }\n\n  public void setCreationUser(BiteUser creationUser) {\n    this.creationUser = creationUser;\n  }\n\n  public Date getCreationDate() {\n    return creationDate;\n  }\n\n  public void setCreationDate(Date creationDate) {\n    this.creationDate = creationDate;\n  }\n\n  public BiteUser getLastModificationUser() {\n    return lastModificationUser;\n  }\n\n  public void setLastModificationUser(BiteUser lastModificationUser) {\n    this.lastModificationUser = lastModificationUser;\n  }\n\n  public Date getLastModificationDate() {\n    return lastModificationDate;\n  }\n\n  public void setLastModificationDate(Date lastModificationDate) {\n    this.lastModificationDate = lastModificationDate;\n  }\n\n  public AddressDataSource getDataSource() {\n    return dataSource;\n  }\n\n  public void setDataSource(AddressDataSource dataSource) {\n    this.dataSource = dataSource;\n  }\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SalesConvEmailData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SalesConvEmailData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1147,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Map;\n\npublic class SalesConvEmailData implements Serializable {\n  String partyId;\n  String sender;\n  String recipient;\n  String subject;\n  String message;\n  Map<String, String> attachmentUrls;\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getSender() {\n    return sender;\n  }\n\n  public void setSender(String sender) {\n    this.sender = sender;\n  }\n\n  public String getRecipient() {\n    return recipient;\n  }\n\n  public void setRecipient(String recipient) {\n    this.recipient = recipient;\n  }\n\n  public String getSubject() {\n    return subject;\n  }\n\n  public void setSubject(String subject) {\n    this.subject = subject;\n  }\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n\n  public Map<String, String> getAttachmentUrls() {\n    return attachmentUrls;\n  }\n\n  public void setAttachmentUrls(Map<String, String> attachmentUrls) {\n    this.attachmentUrls = attachmentUrls;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PointOfSaleInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PointOfSaleInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2435,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\nimport at.a1ta.bite.core.shared.util.CommonUtils;\n\npublic class PointOfSaleInfo implements Serializable {\n\n    private int staus = LOADING;\n\n    private String dealerId;\n\n    private String dealerName;\n\n    private String delearEmailId;\n\n    private String dealerPhonenumber;\n\n    private StandardAddress address;\n\n    public static final int ERROR = 99;\n\n    public static final int LOADING = -1;\n\n    public static final int NOT_RECEIVED = 98;\n\n    public static final int LOADED = 0;\n\n    public PointOfSaleInfo() {\n    }\n\n    public PointOfSaleInfo(int staus, String dealerId, String dealerName) {\n        this.staus = staus;\n        this.dealerId = dealerId;\n        this.dealerName = dealerName;\n    }\n\n    public int getStaus() {\n        return staus;\n    }\n\n    public void setStaus(int staus) {\n        this.staus = staus;\n    }\n\n    public StandardAddress getAddress() {\n        return address;\n    }\n\n    public void setAddress(StandardAddress address) {\n        this.address = address;\n    }\n\n    public String getDealerName() {\n        return dealerName;\n    }\n\n    public void setDealerName(String dealerName) {\n        this.dealerName = dealerName;\n    }\n\n    public String getDealerId() {\n        return dealerId;\n    }\n\n    public void setDealerId(String dealerId) {\n        this.dealerId = dealerId;\n    }\n\n    public String getNameAddressString() {\n        return getDealerName() + (getAddress() != null ? \", \" + buildCompleteAddressString() : \"\");\n    }\n\n    private String buildCompleteAddressString() {\n        String addressString = CommonUtils.defaultString(getAddress().getStreet()) + \" \"\n                + CommonUtils.defaultString(getAddress().getHouseNumber()) + \", \"\n                + CommonUtils.defaultString(getAddress().getPostcode()) + \" \"\n                + CommonUtils.defaultString(getAddress().getCity()) + \" (\"\n                + CommonUtils.defaultString(getAddress().getVillage()) + \")\";\n\n        return addressString.trim();\n    }\n\n    public String getDelearEmailId() {\n        return delearEmailId;\n    }\n\n    public void setDelearEmailId(String delearEmailId) {\n        this.delearEmailId = delearEmailId;\n    }\n\n    public String getDealerPhonenumber() {\n        return dealerPhonenumber;\n    }\n\n    public void setDealerPhonenumber(String dealerPhonenumber) {\n        this.dealerPhonenumber = dealerPhonenumber;\n    }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PhoneNumberStructure.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PhoneNumberStructure.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1637,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class PhoneNumberStructure implements Serializable {\n  public static final String AT_COUNTRY_CODE = \"43\";\n\n  private String countryCode;\n  private String onkz;\n  private String number;\n  private String extension;\n\n  public PhoneNumberStructure() {}\n\n  public PhoneNumberStructure(String countryCode, String onkz, String number) {\n    this(countryCode, onkz, number, null);\n  }\n\n  public PhoneNumberStructure(String countryCode, String onkz, String number, String extension) {\n    this.countryCode = countryCode;\n    this.onkz = onkz;\n    this.number = number;\n    this.extension = extension;\n  }\n\n  public String getCountryCode() {\n    return countryCode;\n  }\n\n  public void setCountryCode(String countryCode) {\n    this.countryCode = countryCode;\n  }\n\n  public String getOnkz() {\n    return onkz;\n  }\n\n  public void setOnkz(String onkz) {\n    this.onkz = onkz;\n  }\n\n  public String getNumber() {\n    return number;\n  }\n\n  public void setNumber(String number) {\n    this.number = number;\n  }\n\n  public String getExtension() {\n    return extension;\n  }\n\n  public void setExtension(String extension) {\n    this.extension = extension;\n  }\n\n  @Override\n  public String toString() {\n    StringBuffer sb = new StringBuffer(40);\n    if (countryCode != null) {\n      sb.append(countryCode);\n    }\n    if (onkz != null) {\n      sb.append(\" \");\n      sb.append(onkz);\n    }\n    if (number != null) {\n      sb.append(\" \");\n      sb.append(number);\n    }\n    if (extension != null) {\n      sb.append(\" \");\n      sb.append(extension);\n    }\n    return sb.toString();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Product.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Product.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1605,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class Product implements Serializable, InventoryProductGroupAssignable {\n  private String productId;\n  private String productDescription;\n  private InventoryProductGroup inventoryProductGroup;\n  private ProductLevel parent;\n\n  public Product() {}\n\n  public Product(String productId, String productDescription) {\n    this.productId = productId;\n    this.productDescription = productDescription;\n  }\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n\n  public String getProductDescription() {\n    return productDescription;\n  }\n\n  public void setProductDescription(String productDescription) {\n    this.productDescription = productDescription;\n  }\n\n  @Override\n  public String getDescription() {\n    return getProductDescription();\n  }\n\n  @Override\n  public InventoryProductGroup getInventoryProductGroup() {\n    return inventoryProductGroup;\n  }\n\n  @Override\n  public void setInventoryProductGroup(InventoryProductGroup inventoryProductGroup) {\n    this.inventoryProductGroup = inventoryProductGroup;\n  }\n\n  @Override\n  public ProductLevel getParent() {\n    return parent;\n  }\n\n  public void setParent(ProductLevel parent) {\n    this.parent = parent;\n  }\n\n  @Override\n  public boolean equals(Object o) {\n    if (!(o instanceof Product)) {\n      return false;\n    }\n    Product product = (Product) o;\n    return productId.equals(product.getProductId());\n  }\n\n  @Override\n  public int hashCode() {\n    return productId.hashCode();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/EsbParty.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/EsbParty.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 552,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic class EsbParty {\n\n  long partyId;\n  String shortName;\n  StandardAddress address;\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getShortName() {\n    return shortName;\n  }\n\n  public void setShortName(String shortName) {\n    this.shortName = shortName;\n  }\n\n  public StandardAddress getAddress() {\n    return address;\n  }\n\n  public void setAddress(StandardAddress address) {\n    this.address = address;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BANCollection.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BANCollection.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 749,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class BANCollection implements Serializable {\n  private long partyId;\n  private ArrayList<BillingAccountNumber> bans;\n\n  public BANCollection() {}\n\n  public BANCollection(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public BANCollection(long partyId, ArrayList<BillingAccountNumber> bans) {\n    this.partyId = partyId;\n    this.bans = bans;\n  }\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public ArrayList<BillingAccountNumber> getBANs() {\n    return bans;\n  }\n\n  public void setBANs(ArrayList<BillingAccountNumber> bans) {\n    this.bans = bans;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MobileChurnLikeliness.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MobileChurnLikeliness.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1018,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class MobileChurnLikeliness implements Serializable {\n\n  private String countryIdentification;\n  private String cityIdentification;\n  private String callNumber;\n  private String churnLikeliness;\n\n  public String getCountryIdentification() {\n    return countryIdentification;\n  }\n\n  public void setCountryIdentification(String countryIdentification) {\n    this.countryIdentification = countryIdentification;\n  }\n\n  public String getCityIdentification() {\n    return cityIdentification;\n  }\n\n  public void setCityIdentification(String cityIdentification) {\n    this.cityIdentification = cityIdentification;\n  }\n\n  public String getCallNumber() {\n    return callNumber;\n  }\n\n  public void setCallNumber(String callNumber) {\n    this.callNumber = callNumber;\n  }\n\n  public String getChurnLikeliness() {\n    return churnLikeliness;\n  }\n\n  public void setChurnLikeliness(String churnLikeliness) {\n    this.churnLikeliness = churnLikeliness;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Customer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Customer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 27193,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport org.apache.solr.client.solrj.beans.Field;\n\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProduct;\n\npublic class Customer extends Person {\n  private static final long serialVersionUID = 1L;\n  private String businessRuleDescription;\n  private String businessSegment;\n  private Integer businessVolume;\n  private String centralAssociationNumber;\n  private String churnLikeliness;\n  private String commercialRegisterNumber;\n  private String commercialSector;\n  private Date contactPersonBirthdate;\n  private String contactPersonFirstName;\n  private String contactPersonGender;\n  private String contactPersonLastName;\n  private String contactPersonSalutation;\n  private String contactPersonTitle;\n  private String contactPhoneNumber1;\n  private String contactPhoneNumber2;\n  private String cooperationDescription;\n  private String creditworthiness;\n  private long id;\n  private String customerWorthclass;\n  private boolean deliveryBlock;\n  private String eMailAddress;\n  private String faxNumber;\n  private long headerId;\n  private String homepageAddress;\n  private String mobilePhoneNumber;\n  private Integer nrEmployees;\n  private String productUsageCS;\n  private String productUsagePPC;\n  private String region;\n  private String supportUserId;\n  private String supportUserName;\n  private String teamName;\n  private boolean listedInFramework;\n  private boolean onBlacklist;\n  private boolean onRobinsonlist;\n  private String city;\n  private String village;\n  private String country;\n  private String housenumber;\n  private String poBox;\n  private String street;\n  private String currentBinding;\n  private String currentBindingRuntime;\n  private boolean hasOpenOffer;\n  private String customerType;\n  private boolean subsidised;\n  private Date timestamp;\n  // time zone independent date of birth\n  private long dateOfBirth;\n  private String indexation;\n  private List<VBMProduct> availableVbmProducts;\n\n  public Date getTimestamp() {\n    return timestamp;\n  }\n\n  public void setTimestamp(Date timestamp) {\n    this.timestamp = timestamp;\n  }\n\n  public String getBusinessRuleDescription() {\n    return businessRuleDescription;\n  }\n\n  public String getBusinessSegment() {\n    return businessSegment;\n  }\n\n  public Integer getBusinessVolume() {\n    return businessVolume;\n  }\n\n  public String getCentralAssociationNumber() {\n    return centralAssociationNumber;\n  }\n\n  public String getChurnLikeliness() {\n    return churnLikeliness;\n  }\n\n  public String getCommercialRegisterNumber() {\n    return commercialRegisterNumber;\n  }\n\n  public String getCommercialSector() {\n    return commercialSector;\n  }\n\n  public Date getContactPersonBirthdate() {\n    return contactPersonBirthdate;\n  }\n\n  public String getContactPersonFirstName() {\n    return contactPersonFirstName;\n  }\n\n  public String getContactPersonGender() {\n    return contactPersonGender;\n  }\n\n  public String getContactPersonLastName() {\n    return contactPersonLastName;\n  }\n\n  public String getContactPersonSalutation() {\n    return contactPersonSalutation;\n  }\n\n  public String getContactPersonTitle() {\n    return contactPersonTitle;\n  }\n\n  public String getContactPhoneNumber1() {\n    return contactPhoneNumber1;\n  }\n\n  public String getContactPhoneNumber2() {\n    return contactPhoneNumber2;\n  }\n\n  public String getCooperationDescription() {\n    return cooperationDescription;\n  }\n\n  public String getCreditworthiness() {\n    return creditworthiness;\n  }\n\n  public long getCustomerNumber() {\n    return id;\n  }\n\n  public String getCustomerWorthclass() {\n    return customerWorthclass;\n  }\n\n  public boolean hasDeliveryBlock() {\n    return deliveryBlock;\n  }\n\n  public String getEMailAddress() {\n    return eMailAddress;\n  }\n\n  public long getHeaderId() {\n    return headerId;\n  }\n\n  public String getHomepageAddress() {\n    return homepageAddress;\n  }\n\n  public long getId() {\n    return id;\n  }\n\n  public String getMobilePhoneNumber() {\n    return mobilePhoneNumber;\n  }\n\n  public Integer getNrEmployees() {\n    return nrEmployees;\n  }\n\n  public String getProductUsageCS() {\n    return productUsageCS;\n  }\n\n  public String getProductUsagePPC() {\n    return productUsagePPC;\n  }\n\n  public String getRegion() {\n    return region;\n  }\n\n  public String getSupportUserId() {\n    return supportUserId;\n  }\n\n  public String getSupportUserName() {\n    return supportUserName;\n  }\n\n  public String getTeamName() {\n    return teamName;\n  }\n\n  public boolean isListedInFramework() {\n    return listedInFramework;\n  }\n\n  public boolean isOnBlacklist() {\n    return onBlacklist;\n  }\n\n  public boolean isOnRobinsonlist() {\n    return onRobinsonlist;\n  }\n\n  public String getAddressWithoutVillage() {\n    final StringBuilder sb = new StringBuilder(30);\n    if (this.street != null) {\n      sb.append(this.street);\n      if (this.housenumber != null) {\n        sb.append(\" \");\n        sb.append(this.housenumber);\n      }\n      sb.append(\", \");\n    }\n    if (this.poBox != null) {\n      sb.append(this.poBox);\n    }\n    if (this.city != null) {\n      sb.append(\" \");\n      sb.append(this.city);\n    }\n    return sb.toString();\n  }\n\n  public String getFullAddress() {\n    return getAddressLine1() + \", \" + getAddressLine2();\n  }\n\n  public String getAddressLine1() {\n    final StringBuilder sb = new StringBuilder(30);\n    if (this.street != null) {\n      sb.append(this.street);\n      if (this.housenumber != null) {\n        sb.append(\" \");\n        sb.append(this.housenumber);\n      }\n    }\n    return sb.toString();\n  }\n\n  public String getAddressLine2() {\n    final StringBuilder sb = new StringBuilder(30);\n    if (this.poBox != null) {\n      sb.append(this.poBox);\n    }\n    if (this.city != null) {\n      sb.append(\" \");\n      sb.append(this.city);\n    }\n    if (this.village != null) {\n      sb.append(\" (\");\n      sb.append(this.village);\n      sb.append(\")\");\n    }\n    return sb.toString();\n  }\n\n  public String getCity() {\n    return city;\n  }\n\n  public String getCountry() {\n    return country;\n  }\n\n  public String getHousenumber() {\n    return housenumber;\n  }\n\n  public String getPoBox() {\n    return poBox;\n  }\n\n  public String getStreet() {\n    return street;\n  }\n\n  public String getCurrentBinding() {\n    return currentBinding;\n  }\n\n  public boolean getHasOpenOffer() {\n    return hasOpenOffer;\n  }\n\n  public String getIndexation() {\n    return indexation;\n  }\n\n  public void setBusinessRuleDescription(String businessRuleDescription) {\n    this.businessRuleDescription = businessRuleDescription;\n  }\n\n  @Field(\"segment\")\n  public void setBusinessSegment(String businessSegment) {\n    this.businessSegment = businessSegment;\n  }\n\n  public void setBusinessVolume(Integer businessVolume) {\n    this.businessVolume = businessVolume;\n  }\n\n  @Field(\"centralassociationnumber\")\n  public void setCentralAssociationNumber(String centralAssociationNumber) {\n    this.centralAssociationNumber = centralAssociationNumber;\n  }\n\n  public void setChurnLikeliness(String churnLikeliness) {\n    this.churnLikeliness = churnLikeliness;\n  }\n\n  @Field(\"commercialregisternumber\")\n  public void setCommercialRegisterNumber(String commercialRegisterNumber) {\n    this.commercialRegisterNumber = commercialRegisterNumber;\n  }\n\n  public void setCommercialSector(String commercialSector) {\n    this.commercialSector = commercialSector;\n  }\n\n  public void setContactPersonBirthdate(Date contactPersonBirthdate) {\n    this.contactPersonBirthdate = contactPersonBirthdate;\n  }\n\n  public void setContactPersonFirstName(String contactPersonFirstName) {\n    this.contactPersonFirstName = contactPersonFirstName;\n  }\n\n  public void setContactPersonGender(String contactPersonGender) {\n    this.contactPersonGender = contactPersonGender;\n  }\n\n  public void setContactPersonLastName(String contactPersonLastName) {\n    this.contactPersonLastName = contactPersonLastName;\n  }\n\n  public void setContactPersonSalutation(String contactPersonSalutation) {\n    this.contactPersonSalutation = contactPersonSalutation;\n  }\n\n  public void setContactPersonTitle(String contactPersonTitle) {\n    this.contactPersonTitle = contactPersonTitle;\n  }\n\n  public void setContactPhoneNumber1(String contactPhoneNumber1) {\n    this.contactPhoneNumber1 = contactPhoneNumber1;\n  }\n\n  public void setContactPhoneNumber2(String contactPhoneNumber2) {\n    this.contactPhoneNumber2 = contactPhoneNumber2;\n  }\n\n  public void setCooperationDescription(String cooperationDescription) {\n    this.cooperationDescription = cooperationDescription;\n  }\n\n  public void setCreditworthiness(String creditworthiness) {\n    this.creditworthiness = creditworthiness;\n  }\n\n  public void setId(long id) {\n    this.id = id;\n  }\n\n  @Field(\"customernumber\")\n  void setId(String id) {\n    this.id = Long.valueOf(id);\n  }\n\n  public void setCustomerWorthclass(String customerWorthclass) {\n    this.customerWorthclass = customerWorthclass;\n  }\n\n  public void setDeliveryBlock(boolean deliveryBlock) {\n    this.deliveryBlock = deliveryBlock;\n  }\n\n  @Field(\"email\")\n  public void setEMailAddress(String eMailAddress) {\n    this.eMailAddress = eMailAddress;\n  }\n\n  @Field(\"headerid\")\n  void setHeaderId(String headerId) {\n    this.headerId = Long.valueOf(headerId);\n  }\n\n  public void setHeaderId(long headerId) {\n    this.headerId = headerId;\n  }\n\n  @Field(\"homepage\")\n  public void setHomepageAddress(String homepageAddress) {\n    this.homepageAddress = homepageAddress;\n  }\n\n  public void setMobilePhoneNumber(String mobilePhoneNumber) {\n    this.mobilePhoneNumber = mobilePhoneNumber;\n  }\n\n  public void setNrEmployees(Integer nrEmployees) {\n    this.nrEmployees = nrEmployees;\n  }\n\n  public void setProductUsageCS(String productUsageCS) {\n    this.productUsageCS = productUsageCS;\n  }\n\n  public void setProductUsagePPC(String productUsagePPC) {\n    this.productUsagePPC = productUsagePPC;\n  }\n\n  public void setRegion(String region) {\n    this.region = region;\n  }\n\n  @Field(\"serviceagentuser\")\n  public void setSupportUserId(String supportUserId) {\n    this.supportUserId = supportUserId;\n  }\n\n  @Field(\"serviceagentname\")\n  public void setSupportUserName(String supportUserName) {\n    this.supportUserName = supportUserName;\n  }\n\n  public void setTeamName(String teamName) {\n    this.teamName = teamName;\n  }\n\n  public void setListedInFramework(boolean listedInFramework) {\n    this.listedInFramework = listedInFramework;\n  }\n\n  public void setOnBlacklist(boolean onBlacklist) {\n    this.onBlacklist = onBlacklist;\n  }\n\n  public void setOnRobinsonlist(boolean onRobinsonlist) {\n    this.onRobinsonlist = onRobinsonlist;\n  }\n\n  @Field(\"city\")\n  public void setCity(String city) {\n    this.city = city;\n  }\n\n  @Field(\"country\")\n  public void setCountry(String country) {\n    this.country = country;\n  }\n\n  @Field(\"housenumber\")\n  public void setHousenumber(String housenumber) {\n    this.housenumber = housenumber;\n  }\n\n  @Field(\"postcode\")\n  public void setPoBox(String poBox) {\n    this.poBox = poBox;\n  }\n\n  @Field(\"street\")\n  public void setStreet(String street) {\n    this.street = street;\n  }\n\n  public String getVillage() {\n    return village;\n  }\n\n  @Field(\"village\")\n  public void setVillage(String village) {\n    this.village = village;\n  }\n\n  public void setCurrentBinding(String currentBinding) {\n    this.currentBinding = currentBinding;\n  }\n\n  public void setHasOpenOffer(boolean hasOpenOffer) {\n    this.hasOpenOffer = hasOpenOffer;\n  }\n\n  public String getCustomerType() {\n    return customerType;\n  }\n\n  public void setCustomerType(String customerType) {\n    this.customerType = customerType;\n  }\n\n  public String getFaxNumber() {\n    return faxNumber;\n  }\n\n  public void setFaxNumber(String faxNumber) {\n    this.faxNumber = faxNumber;\n  }\n\n  public boolean hasCurrentBindingRuntime() {\n    return currentBindingRuntime != null;\n  }\n\n  public String getCurrentBindingRuntime() {\n    return currentBindingRuntime;\n  }\n\n  public void setCurrentBindingRuntime(String currentBindingRuntime) {\n    this.currentBindingRuntime = currentBindingRuntime;\n  }\n\n  public boolean isSubsidised() {\n    return subsidised;\n  }\n\n  public void setSubsidised(boolean subsidised) {\n    this.subsidised = subsidised;\n  }\n\n  public void setDateOfBirth(long dateOfBirth) {\n    this.dateOfBirth = dateOfBirth;\n  }\n\n  public void setIndexation(String indexation) {\n    this.indexation = indexation;\n  }\n\n  public long getDateOfBirth() {\n    return dateOfBirth <= 0 ? (getBirthdate() != null ? getBirthdate().getTime() : 0) : dateOfBirth;\n  }\n\n  public List<VBMProduct> getAvailableVbmProducts() {\n    return availableVbmProducts;\n  }\n\n  public void setAvailableVbmProducts(List<VBMProduct> availableVbmProducts) {\n    this.availableVbmProducts = availableVbmProducts;\n  }\n\n  public String getVbmProductsAsString() {\n    String result = \"\";\n    if (availableVbmProducts != null && !availableVbmProducts.isEmpty()) {\n      for (VBMProduct product : availableVbmProducts) {\n        if (product.getProductDetails() != null) {\n          result += \",\" + product.getProductDetails().getProductName();\n        }\n      }\n      if (result.trim().startsWith(\",\")) {\n        result = result.trim().replaceFirst(\",\", \"\");\n      }\n    }\n    return result;\n  }\n\n  public String getVbmProductsWithSeparator() {\n    String result = \"\";\n    if (availableVbmProducts != null && !availableVbmProducts.isEmpty()) {\n      for (VBMProduct product : availableVbmProducts) {\n        if (product.getProductDetails() != null) {\n          result += \";\" + product.getProductDetails().getProductName();\n        }\n      }\n      if (result.trim().startsWith(\";\")) {\n        result = result.trim().replaceFirst(\";\", \"\");\n      }\n    }\n    return result;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((availableVbmProducts == null) ? 0 : availableVbmProducts.hashCode());\n    result = prime * result + ((businessRuleDescription == null) ? 0 : businessRuleDescription.hashCode());\n    result = prime * result + ((businessSegment == null) ? 0 : businessSegment.hashCode());\n    result = prime * result + ((businessVolume == null) ? 0 : businessVolume.hashCode());\n    result = prime * result + ((centralAssociationNumber == null) ? 0 : centralAssociationNumber.hashCode());\n    result = prime * result + ((churnLikeliness == null) ? 0 : churnLikeliness.hashCode());\n    result = prime * result + ((city == null) ? 0 : city.hashCode());\n    result = prime * result + ((commercialRegisterNumber == null) ? 0 : commercialRegisterNumber.hashCode());\n    result = prime * result + ((commercialSector == null) ? 0 : commercialSector.hashCode());\n    result = prime * result + ((contactPersonBirthdate == null) ? 0 : contactPersonBirthdate.hashCode());\n    result = prime * result + ((contactPersonFirstName == null) ? 0 : contactPersonFirstName.hashCode());\n    result = prime * result + ((contactPersonGender == null) ? 0 : contactPersonGender.hashCode());\n    result = prime * result + ((contactPersonLastName == null) ? 0 : contactPersonLastName.hashCode());\n    result = prime * result + ((contactPersonSalutation == null) ? 0 : contactPersonSalutation.hashCode());\n    result = prime * result + ((contactPersonTitle == null) ? 0 : contactPersonTitle.hashCode());\n    result = prime * result + ((contactPhoneNumber1 == null) ? 0 : contactPhoneNumber1.hashCode());\n    result = prime * result + ((contactPhoneNumber2 == null) ? 0 : contactPhoneNumber2.hashCode());\n    result = prime * result + ((cooperationDescription == null) ? 0 : cooperationDescription.hashCode());\n    result = prime * result + ((country == null) ? 0 : country.hashCode());\n    result = prime * result + ((creditworthiness == null) ? 0 : creditworthiness.hashCode());\n    result = prime * result + ((currentBinding == null) ? 0 : currentBinding.hashCode());\n    result = prime * result + ((currentBindingRuntime == null) ? 0 : currentBindingRuntime.hashCode());\n    result = prime * result + ((customerType == null) ? 0 : customerType.hashCode());\n    result = prime * result + ((customerWorthclass == null) ? 0 : customerWorthclass.hashCode());\n    result = prime * result + (int) (dateOfBirth ^ (dateOfBirth >>> 32));\n    result = prime * result + (deliveryBlock ? 1231 : 1237);\n    result = prime * result + ((eMailAddress == null) ? 0 : eMailAddress.hashCode());\n    result = prime * result + ((faxNumber == null) ? 0 : faxNumber.hashCode());\n    result = prime * result + (hasOpenOffer ? 1231 : 1237);\n    result = prime * result + (int) (headerId ^ (headerId >>> 32));\n    result = prime * result + ((homepageAddress == null) ? 0 : homepageAddress.hashCode());\n    result = prime * result + ((housenumber == null) ? 0 : housenumber.hashCode());\n    result = prime * result + (int) (id ^ (id >>> 32));\n    result = prime * result + ((indexation == null) ? 0 : indexation.hashCode());\n    result = prime * result + (listedInFramework ? 1231 : 1237);\n    result = prime * result + ((mobilePhoneNumber == null) ? 0 : mobilePhoneNumber.hashCode());\n    result = prime * result + ((nrEmployees == null) ? 0 : nrEmployees.hashCode());\n    result = prime * result + (onBlacklist ? 1231 : 1237);\n    result = prime * result + (onRobinsonlist ? 1231 : 1237);\n    result = prime * result + ((poBox == null) ? 0 : poBox.hashCode());\n    result = prime * result + ((productUsageCS == null) ? 0 : productUsageCS.hashCode());\n    result = prime * result + ((productUsagePPC == null) ? 0 : productUsagePPC.hashCode());\n    result = prime * result + ((region == null) ? 0 : region.hashCode());\n    result = prime * result + ((street == null) ? 0 : street.hashCode());\n    result = prime * result + (subsidised ? 1231 : 1237);\n    result = prime * result + ((supportUserId == null) ? 0 : supportUserId.hashCode());\n    result = prime * result + ((supportUserName == null) ? 0 : supportUserName.hashCode());\n    result = prime * result + ((teamName == null) ? 0 : teamName.hashCode());\n    result = prime * result + ((timestamp == null) ? 0 : timestamp.hashCode());\n    result = prime * result + ((village == null) ? 0 : village.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    Customer other = (Customer) obj;\n    if (availableVbmProducts == null) {\n      if (other.availableVbmProducts != null) {\n        return false;\n      }\n    } else if (!availableVbmProducts.equals(other.availableVbmProducts)) {\n      return false;\n    }\n    if (businessRuleDescription == null) {\n      if (other.businessRuleDescription != null) {\n        return false;\n      }\n    } else if (!businessRuleDescription.equals(other.businessRuleDescription)) {\n      return false;\n    }\n    if (businessSegment == null) {\n      if (other.businessSegment != null) {\n        return false;\n      }\n    } else if (!businessSegment.equals(other.businessSegment)) {\n      return false;\n    }\n    if (businessVolume == null) {\n      if (other.businessVolume != null) {\n        return false;\n      }\n    } else if (!businessVolume.equals(other.businessVolume)) {\n      return false;\n    }\n    if (centralAssociationNumber == null) {\n      if (other.centralAssociationNumber != null) {\n        return false;\n      }\n    } else if (!centralAssociationNumber.equals(other.centralAssociationNumber)) {\n      return false;\n    }\n    if (churnLikeliness == null) {\n      if (other.churnLikeliness != null) {\n        return false;\n      }\n    } else if (!churnLikeliness.equals(other.churnLikeliness)) {\n      return false;\n    }\n    if (city == null) {\n      if (other.city != null) {\n        return false;\n      }\n    } else if (!city.equals(other.city)) {\n      return false;\n    }\n    if (commercialRegisterNumber == null) {\n      if (other.commercialRegisterNumber != null) {\n        return false;\n      }\n    } else if (!commercialRegisterNumber.equals(other.commercialRegisterNumber)) {\n      return false;\n    }\n    if (commercialSector == null) {\n      if (other.commercialSector != null) {\n        return false;\n      }\n    } else if (!commercialSector.equals(other.commercialSector)) {\n      return false;\n    }\n    if (contactPersonBirthdate == null) {\n      if (other.contactPersonBirthdate != null) {\n        return false;\n      }\n    } else if (!contactPersonBirthdate.equals(other.contactPersonBirthdate)) {\n      return false;\n    }\n    if (contactPersonFirstName == null) {\n      if (other.contactPersonFirstName != null) {\n        return false;\n      }\n    } else if (!contactPersonFirstName.equals(other.contactPersonFirstName)) {\n      return false;\n    }\n    if (contactPersonGender == null) {\n      if (other.contactPersonGender != null) {\n        return false;\n      }\n    } else if (!contactPersonGender.equals(other.contactPersonGender)) {\n      return false;\n    }\n    if (contactPersonLastName == null) {\n      if (other.contactPersonLastName != null) {\n        return false;\n      }\n    } else if (!contactPersonLastName.equals(other.contactPersonLastName)) {\n      return false;\n    }\n    if (contactPersonSalutation == null) {\n      if (other.contactPersonSalutation != null) {\n        return false;\n      }\n    } else if (!contactPersonSalutation.equals(other.contactPersonSalutation)) {\n      return false;\n    }\n    if (contactPersonTitle == null) {\n      if (other.contactPersonTitle != null) {\n        return false;\n      }\n    } else if (!contactPersonTitle.equals(other.contactPersonTitle)) {\n      return false;\n    }\n    if (contactPhoneNumber1 == null) {\n      if (other.contactPhoneNumber1 != null) {\n        return false;\n      }\n    } else if (!contactPhoneNumber1.equals(other.contactPhoneNumber1)) {\n      return false;\n    }\n    if (contactPhoneNumber2 == null) {\n      if (other.contactPhoneNumber2 != null) {\n        return false;\n      }\n    } else if (!contactPhoneNumber2.equals(other.contactPhoneNumber2)) {\n      return false;\n    }\n    if (cooperationDescription == null) {\n      if (other.cooperationDescription != null) {\n        return false;\n      }\n    } else if (!cooperationDescription.equals(other.cooperationDescription)) {\n      return false;\n    }\n    if (country == null) {\n      if (other.country != null) {\n        return false;\n      }\n    } else if (!country.equals(other.country)) {\n      return false;\n    }\n    if (creditworthiness == null) {\n      if (other.creditworthiness != null) {\n        return false;\n      }\n    } else if (!creditworthiness.equals(other.creditworthiness)) {\n      return false;\n    }\n    if (currentBinding == null) {\n      if (other.currentBinding != null) {\n        return false;\n      }\n    } else if (!currentBinding.equals(other.currentBinding)) {\n      return false;\n    }\n    if (currentBindingRuntime == null) {\n      if (other.currentBindingRuntime != null) {\n        return false;\n      }\n    } else if (!currentBindingRuntime.equals(other.currentBindingRuntime)) {\n      return false;\n    }\n    if (customerType == null) {\n      if (other.customerType != null) {\n        return false;\n      }\n    } else if (!customerType.equals(other.customerType)) {\n      return false;\n    }\n    if (customerWorthclass == null) {\n      if (other.customerWorthclass != null) {\n        return false;\n      }\n    } else if (!customerWorthclass.equals(other.customerWorthclass)) {\n      return false;\n    }\n    if (dateOfBirth != other.dateOfBirth) {\n      return false;\n    }\n    if (deliveryBlock != other.deliveryBlock) {\n      return false;\n    }\n    if (eMailAddress == null) {\n      if (other.eMailAddress != null) {\n        return false;\n      }\n    } else if (!eMailAddress.equals(other.eMailAddress)) {\n      return false;\n    }\n    if (faxNumber == null) {\n      if (other.faxNumber != null) {\n        return false;\n      }\n    } else if (!faxNumber.equals(other.faxNumber)) {\n      return false;\n    }\n    if (hasOpenOffer != other.hasOpenOffer) {\n      return false;\n    }\n    if (headerId != other.headerId) {\n      return false;\n    }\n    if (homepageAddress == null) {\n      if (other.homepageAddress != null) {\n        return false;\n      }\n    } else if (!homepageAddress.equals(other.homepageAddress)) {\n      return false;\n    }\n    if (housenumber == null) {\n      if (other.housenumber != null) {\n        return false;\n      }\n    } else if (!housenumber.equals(other.housenumber)) {\n      return false;\n    }\n    if (id != other.id) {\n      return false;\n    }\n    if (indexation == null) {\n      if (other.indexation != null) {\n        return false;\n      }\n    } else if (!indexation.equals(other.indexation)) {\n      return false;\n    }\n    if (listedInFramework != other.listedInFramework) {\n      return false;\n    }\n    if (mobilePhoneNumber == null) {\n      if (other.mobilePhoneNumber != null) {\n        return false;\n      }\n    } else if (!mobilePhoneNumber.equals(other.mobilePhoneNumber)) {\n      return false;\n    }\n    if (nrEmployees == null) {\n      if (other.nrEmployees != null) {\n        return false;\n      }\n    } else if (!nrEmployees.equals(other.nrEmployees)) {\n      return false;\n    }\n    if (onBlacklist != other.onBlacklist) {\n      return false;\n    }\n    if (onRobinsonlist != other.onRobinsonlist) {\n      return false;\n    }\n    if (poBox == null) {\n      if (other.poBox != null) {\n        return false;\n      }\n    } else if (!poBox.equals(other.poBox)) {\n      return false;\n    }\n    if (productUsageCS == null) {\n      if (other.productUsageCS != null) {\n        return false;\n      }\n    } else if (!productUsageCS.equals(other.productUsageCS)) {\n      return false;\n    }\n    if (productUsagePPC == null) {\n      if (other.productUsagePPC != null) {\n        return false;\n      }\n    } else if (!productUsagePPC.equals(other.productUsagePPC)) {\n      return false;\n    }\n    if (region == null) {\n      if (other.region != null) {\n        return false;\n      }\n    } else if (!region.equals(other.region)) {\n      return false;\n    }\n    if (street == null) {\n      if (other.street != null) {\n        return false;\n      }\n    } else if (!street.equals(other.street)) {\n      return false;\n    }\n    if (subsidised != other.subsidised) {\n      return false;\n    }\n    if (supportUserId == null) {\n      if (other.supportUserId != null) {\n        return false;\n      }\n    } else if (!supportUserId.equals(other.supportUserId)) {\n      return false;\n    }\n    if (supportUserName == null) {\n      if (other.supportUserName != null) {\n        return false;\n      }\n    } else if (!supportUserName.equals(other.supportUserName)) {\n      return false;\n    }\n    if (teamName == null) {\n      if (other.teamName != null) {\n        return false;\n      }\n    } else if (!teamName.equals(other.teamName)) {\n      return false;\n    }\n    if (timestamp == null) {\n      if (other.timestamp != null) {\n        return false;\n      }\n    } else if (!timestamp.equals(other.timestamp)) {\n      return false;\n    }\n    if (village == null) {\n      if (other.village != null) {\n        return false;\n      }\n    } else if (!village.equals(other.village)) {\n      return false;\n    }\n    return true;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/IndexationStatus.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/IndexationStatus.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1583,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic enum IndexationStatus {\n  INDEXED(2, \"INDEXED_PRODUCTS\"), NOT_INDEXED(3, \"EXCLUDED\"), INDEXED_NOT_STARTED(1, \"INDEXED_PRODUCTS_NOT_USED\"), NOT_AVAILABLE(0, \"\");\n  private int relatedValueInCustomerInventory;\n  private String relatedDwhValue;\n\n  private IndexationStatus(int relatedValueInCustomerInventory, String relatedDwhValue) {\n    this.relatedValueInCustomerInventory = relatedValueInCustomerInventory;\n    this.relatedDwhValue = relatedDwhValue;\n  }\n\n  public static IndexationStatus getForDWHValue(String relatedDwhValue) {\n    if (relatedDwhValue == null || relatedDwhValue.trim().isEmpty()) {\n      return NOT_AVAILABLE;\n    } else if (relatedDwhValue.trim().equalsIgnoreCase(\"INDEXED_PRODUCTS\")) {\n      return INDEXED;\n    } else if (relatedDwhValue.trim().equalsIgnoreCase(\"EXCLUDED\")) {\n      return NOT_INDEXED;\n    } else if (relatedDwhValue.trim().equalsIgnoreCase(\"INDEXED_PRODUCTS_NOT_USED\")) {\n      return INDEXED_NOT_STARTED;\n    }\n    return NOT_AVAILABLE;\n  }\n\n  public static IndexationStatus getForCIValue(int relatedValueInCustomerInventory) {\n    switch (relatedValueInCustomerInventory) {\n      case 1:\n        return INDEXED_NOT_STARTED;\n      case 2:\n        return INDEXED;\n      case 3:\n        return NOT_INDEXED;\n      default:\n        // incase of 0 also it will return NOT_AVAILABLE\n        return NOT_AVAILABLE;\n    }\n\n  }\n\n  public String getRelatedDwhValue() {\n    return relatedDwhValue;\n  }\n\n  public int getRelatedValueInCustomerInventory() {\n    return relatedValueInCustomerInventory;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Inventory.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Inventory.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3622,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Inventory implements Serializable {\n  private Long aonCustomerNumber;\n  private Long assetId;\n  private Date contractBindingDate;\n  private Long contractId;\n  private Long customerId;\n  private long id;\n  private String unlistedNumberIdentification;\n  private String networkOperator;\n  private String phoneNumber;\n  private Date validFromDate;\n  private String productDescription;\n  private Long nrInstallations;\n  private String detailedDescription;\n  private String productCategory;\n  private String serviceDescription;\n  private String productSsaId;\n  private String indexation;\n\n  public Long getAonCustomerNumber() {\n    return aonCustomerNumber;\n  }\n\n  public void setAonCustomerNumber(Long aonCustomerNumber) {\n    this.aonCustomerNumber = aonCustomerNumber;\n  }\n\n  public Long getAssetId() {\n    return assetId;\n  }\n\n  public void setAssetId(Long assetId) {\n    this.assetId = assetId;\n  }\n\n  public Date getContractBindingDate() {\n    return contractBindingDate;\n  }\n\n  public void setContractBindingDate(Date contractBindingDate) {\n    this.contractBindingDate = contractBindingDate;\n  }\n\n  public Long getContractId() {\n    return contractId;\n  }\n\n  public void setContractId(Long contractId) {\n    this.contractId = contractId;\n  }\n\n  public Long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(Long customerId) {\n    this.customerId = customerId;\n  }\n\n  public long getId() {\n    return id;\n  }\n\n  public void setId(long id) {\n    this.id = id;\n  }\n\n  public String getNetworkOperator() {\n    return networkOperator;\n  }\n\n  public void setNetworkOperator(String networkOperator) {\n    this.networkOperator = networkOperator;\n  }\n\n  public String getPhoneNumber() {\n    return phoneNumber;\n  }\n\n  public void setPhoneNumber(String phoneNumber) {\n    this.phoneNumber = phoneNumber;\n  }\n\n  public Date getValidFromDate() {\n    return validFromDate;\n  }\n\n  public void setValidFromDate(Date validFromDate) {\n    this.validFromDate = validFromDate;\n  }\n\n  public String getProductDescription() {\n    return productDescription;\n  }\n\n  public void setProductDescription(String productDescription) {\n    this.productDescription = productDescription;\n  }\n\n  public Long getNrInstallations() {\n    return nrInstallations;\n  }\n\n  public void setNrInstallations(Long nrInstallations) {\n    this.nrInstallations = nrInstallations;\n  }\n\n  public String getUnlistedNumberIdentification() {\n    return unlistedNumberIdentification;\n  }\n\n  public void setUnlistedNumberIdentification(String unlistedNumberIdentification) {\n    this.unlistedNumberIdentification = unlistedNumberIdentification;\n  }\n\n  public void setDetailedDescription(String detailedDescription) {\n    this.detailedDescription = detailedDescription;\n  }\n\n  public String getDetailedDescription() {\n    return detailedDescription;\n  }\n\n  public void setProductCategory(String productCategory) {\n    this.productCategory = productCategory;\n  }\n\n  public String getProductCategory() {\n    return productCategory;\n  }\n\n  public void setServiceDescription(String serviceDescription) {\n    this.serviceDescription = serviceDescription;\n  }\n\n  public String getServiceDescription() {\n    return serviceDescription;\n  }\n\n  public void setProductSsaId(String productSsaId) {\n    this.productSsaId = productSsaId;\n  }\n\n  public String getProductSsaId() {\n    return productSsaId;\n  }\n\n  public String getIndexation() {\n    return indexation;\n  }\n\n  public void setIndexation(String indexation) {\n    this.indexation = indexation;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Segment.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Segment.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 903,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Segment implements Serializable {\n  private long id;\n  private String name;\n  private String description;\n  private int sequence;\n  private Date timestamp;\n\n  public long getId() {\n    return id;\n  }\n\n  public void setId(long id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public int getSequence() {\n    return sequence;\n  }\n\n  public void setSequence(int sequence) {\n    this.sequence = sequence;\n  }\n\n  public Date getTimestamp() {\n    return timestamp;\n  }\n\n  public void setTimestamp(Date timestamp) {\n    this.timestamp = timestamp;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Invoice.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Invoice.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2589,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Comparator;\nimport java.util.Date;\n\npublic class Invoice implements Serializable {\n  private static final String BOB_INVOICE_ID_PREFIX = \"5000\";\n  private static final int BOB_INVOICE_ID_MIN_LENGTH = 12;\n\n  public static class InvoiceDateComparator implements Comparator<Invoice>, Serializable {\n    @Override\n    public int compare(Invoice o1, Invoice o2) {\n      return o1.invoiceDate.compareTo(o2.invoiceDate) * -1;\n    }\n  }\n\n  private Long invoiceId;\n  private Long clearingAccountNumber;\n  private Long customerId;\n  private Date invoiceDate;\n  private Date paymentDate;\n  private float totalFee;\n  private long invoiceRunId;\n  private float totalGrossFee;\n  private float totalPaymentFee;\n  private boolean mobile;\n\n  public Long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(Long customerId) {\n    this.customerId = customerId;\n  }\n\n  public Date getInvoiceDate() {\n    return invoiceDate;\n  }\n\n  public void setInvoiceDate(Date invoiceDate) {\n    this.invoiceDate = invoiceDate;\n  }\n\n  public Date getPaymentDate() {\n    return paymentDate;\n  }\n\n  public void setPaymentDate(Date paymentDate) {\n    this.paymentDate = paymentDate;\n  }\n\n  public float getTotalFee() {\n    return totalFee;\n  }\n\n  public void setTotalFee(float totalFee) {\n    this.totalFee = totalFee;\n  }\n\n  public Long getInvoiceId() {\n    return this.invoiceId;\n  }\n\n  public void setInvoiceId(Long invoiceId) {\n    this.invoiceId = invoiceId;\n  }\n\n  public Long getClearingAccountNumber() {\n    return clearingAccountNumber;\n  }\n\n  public void setClearingAccountNumber(Long clearingAccountNumber) {\n    this.clearingAccountNumber = clearingAccountNumber;\n  }\n\n  public long getInvoiceRunId() {\n    return invoiceRunId;\n  }\n\n  public void setInvoiceRunId(long invoiceRunId) {\n    this.invoiceRunId = invoiceRunId;\n  }\n\n  public float getTotalGrossFee() {\n    return totalGrossFee;\n  }\n\n  public void setTotalGrossFee(float totalGrossFee) {\n    this.totalGrossFee = totalGrossFee;\n  }\n\n  public boolean isMobile() {\n    return mobile;\n  }\n\n  public void setMobile(boolean mobile) {\n    this.mobile = mobile;\n  }\n\n  public boolean isBobInvoice() {\n    String invoiceIdStr = invoiceId + \"\";\n    return isMobile() && invoiceIdStr.length() >= BOB_INVOICE_ID_MIN_LENGTH && invoiceIdStr.startsWith(BOB_INVOICE_ID_PREFIX);\n  }\n\n  public void setTotalPaymentFee(float totalPaymentFee) {\n    this.totalPaymentFee = totalPaymentFee;\n  }\n\n  public float getTotalPaymentFee() {\n    return totalPaymentFee;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Auth.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Auth.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6945,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport at.a1ta.bite.core.shared.AuthInfo;\n\npublic enum Auth implements AuthInfo {\n  // @formatter:off\n  CONTENT_MYTODOs(\"CONTENT_MYTODOs\"), SEARCH_CUSTOMERS(\"FEATURE_SEARCH_CUSTOMERS\"),\n\n  FEATURE_SEG_DISPLAY_1(\"FEATURE_SEG_DISPLAY_1\"), FEATURE_SEG_DISPLAY_2(\"FEATURE_SEG_DISPLAY_2\"), FEATURE_SEG_DISPLAY_3(\"FEATURE_SEG_DISPLAY_3\"), FEATURE_SEG_DISPLAY_4(\"FEATURE_SEG_DISPLAY_4\"), FEATURE_SEG_DISPLAY_5(\n      \"FEATURE_SEG_DISPLAY_5\"), CUCO_CREATE_ROLE(\"FEATURE_ROLLE_ERSTELLEN\"), CUCO_CREATE_ROLE_GROUP(\"FEATURE_ROLLENGRUPPE_ERSTELLEN\"), CUCO_EDIT_USER(\"FEATURE_BENUTZER_AENDERN\"), CUCO_DELETE_USER(\n      \"FEATURE_BENUTZER_LOESCHEN\"), CUCO_VIP_STATUS_EDIT(\"FEATURE_VIP_STATUS_EDIT\"),\n\n  PAST_GULA_CREATE(\"FEATURE_PAST_GULA_CREATE\"), PAST_TEAM_CRUD(\"FEATURE_PAST_TEAM_CRUD\"), PAST_TEAM_ASSIGN_SERVICE(\"FEATURE_PAST_TEAM_ASSIGN_SERVICE\"), PAST_TEAM_ASSIGN_USER(\n      \"FEATURE_PAST_TEAM_ASSIGN_USER\"),\n\n  INVOICE_DOWNLOAD(\"FEATURE_INVOICE_DOWNLOAD\"), CONTENT_BILLINGS_OLD_VIEW(\"CONTENT_BILLINGS_OLD_VIEW\"), CONTENT_GUCCI_BILLINGS(\"CONTENT_GUCCI_BILLINGS\"), CONTENT_GUCCI_WIDGETS(\"CONTENT_GUCCI_WIDGETS\"),\n\n  FEATURE_ANB(\"FEATURE_PRODUCT_ANB\"),\n\n  FEATURE_FREEUNITS(\"FEATURE_FREEUNITS\"), FEATURE_MOBILPOINTS(\"FEATURE_MOBILPOINTS\"),\n\n  PRODUCT_BROWSER(\"CONTENT_PRODUCT_BROWSER\"), NEW_PRODUCT_BROWSER(\"CONTENT_NEW_PRODUCT_BROWSER_TABLE_VIEW\"), PRODUCT_BROWSER_IDX_DETAILS(\"CONTENT_PRODUCT_BROWSER_VIEW_IDX_INFO\"), PRODUCT_BROWSER_PRICE_DETAILS(\n      \"CONTENT_PRODUCT_BROWSER_VIEW_PRICE_INFO\"), PRODUCT_BROWSER_A1COACH_DETAILS(\"CONTENT_PRODUCT_BROWSER_VIEW_A1COACH_INFO\"), PRODUCT_BROWSER_MACHBARKEIT_DETAILS(\n      \"CONTENT_PRODUCT_BROWSER_VIEW_MACHBARKEIT_INFO\"), PRODUCT_BROWSER_INSURANCE_DETAILS(\"CONTENT_PRODUCT_BROWSER_VIEW_INSURANCE_INFO\"), PRODUCT_BROWSER_ADDITIONAL_DETAILS(\n      \"CONTENT_PRODUCT_BROWSER_VIEW_ADDITIONAL_INFO\"), PRODUCT_BROWSER_ADDITIONAL_DETAILS_WITH_BUNDLE_PRODUCT(\"CONTENT_PRODUCT_BROWSER_VIEW_ADDITIONAL_INFO_WITH_BUNDLE_PRODUCT\"), PRODUCT_BROWSER_XML_BUTTON_VISIBILITY(\n      \"CONTENT_PRODUCT_BROWSER_XML_BUTTON_VISIBILITY\"),\n\n  USERSHOPASSIGNMENTUPLOADDOWNLOAD(\"FEATURE_USERSHOPASSIGNMENTUPLOADDOWNLOAD\"), QUOTE_CLEARANCE_ADMIN(\"CONTENT_QUOTE_VALIDATION_ADMINISTRATION\"), CREATE_INTERACTION(\"FEATURE_CREATE_INTERACTION\"), CUCO_ADMIN(\n      \"FEATURE_ADMIN\"),\n\n  FEATURE_MYCUCO(\"FEATURE_MYCUCO\"), LINK_SERVICE_ZVERA(\"LINK_SERVICE_ZVERA\"), TARIF_NET_CUBE_XL(\"TARIF_NET_CUBE_XL\"), TARIF_NET_CUBE_M(\"TARIF_NET_CUBE_M\"), TARIF_BREITBAND_PRO_16(\n      \"TARIF_BREITBAND_PRO_16\"), FEATURE_MYCUCO_CUSTOMEREXPORT(\"FEATURE_MYCUCO_CUSTOMEREXPORT\"), LINK_A1COACH(\"LINK_A1COACH\"),\n\n  LINK_ADDRESS(\"LINK_ADDRESS\"), LINK_CORPORATE_DIRECTORY(\"LINK_CORPORATE_DIRECTORY\"), LINK_CSSA(\"LINK_CSSA\"), LINK_ELEARNING(\"LINK_ELEARNING\"), LINK_FRAMEWORK(\"LINK_FRAMEWORK\"), LINK_RDS_INVENTORY(\n      \"LINK_RDS_INVENTORY\"), LINK_SAP(\"LINK_SAP\"), LINK_WEBAC(\"LINK_WEBAC\"), LINK_FEASIBILITY_CHECK(\"LINK_FEASIBILITY_CHECK\"),\n\n  PORTLET_PRINT(\"FEATURE_PORTLET_PRINT\"),\n\n  RESTRICTED_VIEW(\"FEATURE_CUCO_RESTRICTED_VIEW\"), CUSTOMER_UNLOCK_OVERRIDE_ALLOWED(\"FEATURE_CUSTOMER_UNLOCK_OVERRIDE\"),\n\n  TARIFF_GUIDE(\"FEATURE_TARIFF_GUIDE\"), CONTENT_USERTRACKING(\"CONTENT_USERTRACKING\"), CONTENT_USAGEDATA(\"CONTENT_USAGEDATA\"),\n  \n  RESTRICTED_MOBILE_VIEW(\"FEATURE_CUCO_RESTRICTED_MOBILE_VIEW\"),\n\n  /**\n   * Sales Info - Notes\n   */\n  CONTENT_QUOTE_OVERVIEW(\"CONTENT_QUOTE_OVERVIEW\"), CONTENT_SALES_INFO_ATTRIBUTES(\"CONTENT_SALES_INFO_ATTRIBUTES\"), CONTENT_SALES_INFO_OVERVIEW(\"CONTENT_SALES_INFO_OVERVIEW\"), CONTENT_SALES_INFO_COMPACT_OVERVIEW(\n      \"CONTENT_SALES_INFO_COMPACT_OVERVIEW\"), VIEW_QUOTE(\"VIEW_QUOTE\"),\n\n  SI_SIMPLE_NOTE_VIEW(\"FEATURE_SI_SIMPLE_NOTE_VIEW\"), SI_SIMPLE_NOTE_EDIT(\"FEATURE_SI_SIMPLE_NOTE_EDIT\"), SI_SIMPLE_NOTE_DELETE(\"FEATURE_SI_SIMPLE_NOTE_DELETE\"),\n\n  SI_COMPETITOR_NOTE_VIEW(\"FEATURE_SI_COMPETITOR_NOTE_VIEW\"), SI_COMPETITOR_NOTE_EDIT(\"FEATURE_SI_COMPETITOR_NOTE_EDIT\"), SI_COMPETITOR_NOTE_DELETE(\"FEATURE_SI_COMPETITOR_NOTE_DELETE\"),\n\n  SI_VR_SBS_NOTE_VIEW(\"FEATURE_SI_VR_SBS_NOTE_VIEW\"), SI_VR_SBS_NOTE_EDIT(\"FEATURE_SI_VR_SBS_NOTE_EDIT\"), SI_VR_SBS_NOTE_DELETE(\"FEATURE_SI_VR_SBS_NOTE_DELETE\"), SI_VR_SBS_NOTE_ADMIN(\n      \"FEATURE_SI_VR_SBS_NOTE_ADMIN\"), SI_VR_SBS_NOTE_REPORT(\"FEATURE_SI_VR_SBS_NOTE_REPORT\"), FEATURE_SI_VR_SBS_NOTE_TODO_EDIT(\"FEATURE_SI_VR_SBS_NOTE_TODO_EDIT\"),\n\n  SI_VR_DS_NOTE_VIEW(\"FEATURE_SI_VR_DS_VIEW\"), SI_VR_DS_NOTE_EDIT(\"FEATURE_SI_VR_DS_EDIT\"), SI_VR_DS_NOTE_DELETE(\"FEATURE_SI_VR_DS_DELETE\"), FEATURE_SI_VR_DS_NOTE_ADMIN(\"FEATURE_SI_VR_DS_NOTE_ADMIN\"),\n  \n  SI_VR_SBS_PRODUCT_NOTE_VIEW_IN_OVERVIEW(\"FEATURE_SI_VR_SBS_PRODUCT_NOTE_VIEW_IN_OVERVIEW\"), SI_VR_SBS_PRODUCT_NOTE_EDIT_IN_OVERVIEW(\"FEATURE_SI_VR_SBS_PRODUCT_NOTE_EDIT_IN_OVERVIEW\"), SI_VR_SBS_PRODUCT_NOTE_DELETE_IN_OVERVIEW(\n      \"FEATURE_SI_VR_SBS_PRODUCT_NOTE_DELETE_IN_OVERVIEW\"),\n\n  SI_VR_GENERIC_NOTE_VIEW(\"FEATURE_SI_VR_GENERIC_NOTE_VIEW\"), SI_VR_GENERIC_NOTE_EDIT(\"FEATURE_SI_VR_GENERIC_NOTE_EDIT\"), SI_VR_GENERIC_NOTE_DELETE(\"FEATURE_SI_VR_GENERIC_NOTE_DELETE\"), SI_VR_GENERIC_NOTE_ADMIN(\n      \"FEATURE_SI_VR_GENERIC_NOTE_ADMIN\"), SI_VR_GENERIC_NOTE_REPORT(\"FEATURE_SI_VR_GENERIC_NOTE_REPORT\"),\n\n  SI_VR_ANGEBOTE_VIEW(\"FEATURE_SI_VR_ANGEBOTE_VIEW\"), SI_VR_ANGEBOTE_EDIT(\"FEATURE_SI_VR_ANGEBOTE_EDIT\"), SI_VR_ANGEBOTE_DELETE(\"FEATURE_SI_VR_ANGEBOTE_DELETE\"),\n\n  SI_SALES_CONV_NOTE_VIEW(\"FEATURE_SI_SALES_CONV_NOTE_VIEW\"), SI_SALES_CONV_NOTE_EDIT(\"FEATURE_SI_SALES_CONV_NOTE_EDIT\"), SI_SALES_CONV_NOTE_DELETE(\"FEATURE_SI_SALES_CONV_NOTE_DELETE\"),\n\n  SI_SALES_CONV_PRODUCT_NOTE_VIEW_IN_OVERVIEW(\"FEATURE_SI_SALES_CONV_PRODUCT_NOTE_VIEW_IN_OVERVIEW\"), SI_SALES_CONV_PRODUCT_NOTE_EDIT_IN_OVERVIEW(\"FEATURE_SI_SALES_CONV_PRODUCT_NOTE_EDIT_IN_OVERVIEW\"), SI_SALES_CONV_PRODUCT_NOTE_DELETE_IN_OVERVIEW(\n      \"FEATURE_SI_SALES_CONV_PRODUCT_NOTE_DELETE_IN_OVERVIEW\"),\n  \n  NC_VIEW(\"NC_VIEW\"), NC_EDIT(\"NC_EDIT\"), NC_MERGE(\"NC_MERGE\"), SEND_POS_ASSIGNMENT_EMAIL(\"FEATURE_SEND_POS_ASSIGNMENT_EMAIL\"), PASSWORD(\"FEATURE_PASSWORD\"), CONTENT_BUELINKS(\"CONTENT_BUELINKS\"), CONTENT_LINKS(\"CONTENT_LINKS\"), BSNOTES_MENU_ENTRY(\n      \"BSNOTES_MENU_ENTRY\"),\n\n\tA1BIP_SHOW_BUSINESS_FIREWALL(\"FEATURE_A1BIP_SHOW_BUSINESS_FIREWALL\"),\n\t\n  A1BI_SHOW_BUSINESS_FIREWALL(\"FEATURE_A1BI_SHOW_BUSINESS_FIREWALL\"),\n  \n  A1BI_SHOW_MARKETPLACE(\"FEATURE_A1BI_SHOW_MARKETPLACE\"),\n  \n  A1BN_SHOW_MARKETPLACE(\"FEATURE_A1BN_SHOW_MARKETPLACE\"),\n  \n  ETGT_SHOW_MARKETPLACE(\"FEATURE_A1ETGT_SHOW_MARKETPLACE\"),\n\n  CM_BUDDY_LINK(\"FEATURE_CM_BUDDY_LINK\"), PKB_GUCCI_BUDDY(\"PKB_GUCCI_BUDDY\"),\n\t\n  CONTENT_PRODUCTLINK_ONECOCKPIT(\"CONTENT_PRODUCTLINK_ONECOCKPIT\"),\n\n  FEATURE_ANZEIGE_KREDITLIMIT(\"FEATURE_ANZEIGE_KREDITLIMIT\"),\n\n  CCS_SHOW_MARKETPLACE(\"FEATURE_A1CCS_SHOW_MARKETPLACE\"),\n\n  DAAS_SHOW_SPECIAL_PRICE_GROUP(\"FEATURE_DAAS_SHOW_Special_Pricegroup\");\n\n  // @formatter:on\n\n  private final String name;\n\n  private Auth(String name) {\n    this.name = name;\n  }\n\n  @Override\n  public String getName() {\n    return name;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BillingAccountNumber.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BillingAccountNumber.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1020,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.HashSet;\nimport java.util.List;\n\npublic class BillingAccountNumber implements Serializable {\n  private long ban;\n  private HashSet<String> brands = new HashSet<String>(6);\n  private String brand;\n  private List<PhoneNumber> numbers;\n\n  public long getBan() {\n    return ban;\n  }\n\n  public void setBan(long ban) {\n    this.ban = ban;\n  }\n\n  public void setBrands(HashSet<String> brands) {\n    this.brands = brands;\n  }\n\n  public HashSet<String> getBrands() {\n    return brands;\n  }\n\n  /**\n   * this attribute is for ibatis only\n   * \n   * @param brand\n   */\n  @Deprecated\n  public void setBrand(String brand) {\n    this.brand = brand;\n  }\n\n  /**\n   * this attribute is for ibatis only\n   * \n   * @param brand\n   */\n  @Deprecated\n  public String getBrand() {\n    return brand;\n  }\n\n  public List<PhoneNumber> getNumbers() {\n    return numbers;\n  }\n\n  public void setNumbers(List<PhoneNumber> numbers) {\n    this.numbers = numbers;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ToDoNotesFilter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ToDoNotesFilter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1850,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.util.Date;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote.ToDoStatus;\n\npublic class ToDoNotesFilter {\n\n  public static final String USER_ID = \"USER_ID\";\n  public static final String LAST_MOD_DATE = \"LAST_MOD_DATE\";\n  public static final String CREATE_DATE = \"CREATE_DATE\";\n  public static final String GROUP_NAME = \"GROUP_NAME\";\n  public static final String PARENT_SBS_NOTE = \"PARENT_SBS_NOTE\";\n  public static final String PARTY_ID = \"PARTY_ID\";\n  public static final String GROUP_STATUS = \"GROUP_STATUS\";\n  public static final String EDIT_TODO = \"EDIT_TODO\";\n  private long userId;\n  private Date lastModDate;\n  private Date createDate;\n  private String groupName;\n  private String ParentSbsNote;\n  private String partyId;\n  private ToDoStatus groupStatus;\n\n  public Date getCreateDate() {\n    return createDate;\n  }\n\n  public void setCreateDate(Date createDate) {\n    this.createDate = createDate;\n  }\n\n  public String getGroupName() {\n    return groupName;\n  }\n\n  public void setGroupName(String groupName) {\n    this.groupName = groupName;\n  }\n\n  public String getParentSbsNote() {\n    return ParentSbsNote;\n  }\n\n  public void setParentSbsNote(String parentSbsNote) {\n    ParentSbsNote = parentSbsNote;\n  }\n\n  public long getUserId() {\n    return userId;\n  }\n\n  public void setUserId(long userId) {\n    this.userId = userId;\n  }\n\n  public Date getLastModDate() {\n    return lastModDate;\n  }\n\n  public void setLastModDate(Date lastModDate) {\n    this.lastModDate = lastModDate;\n  }\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n\n  public ToDoStatus getGroupStatus() {\n    return groupStatus;\n  }\n\n  public void setGroupStatus(ToDoStatus groupStatus) {\n    this.groupStatus = groupStatus;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ContractOwnerAssignment.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ContractOwnerAssignment.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 541,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.List;\n\npublic class ContractOwnerAssignment implements Serializable {\n  private String partyId;\n  private List<BillingAccountNumber> accounts;\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n\n  public List<BillingAccountNumber> getAccounts() {\n    return accounts;\n  }\n\n  public void setAccounts(List<BillingAccountNumber> accounts) {\n    this.accounts = accounts;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyCustomerLoyaltyInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyCustomerLoyaltyInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 919,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class PartyCustomerLoyaltyInfo implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n\n  public static final int ERROR = 99;\n  public static final int LOADING = -1;\n  public static final int NOT_RECEIVED = 98;\n  public static final int LOADED = 0;\n\n  private int staus = LOADING;\n  private boolean isConnectPlusCustomer;\n\n  public PartyCustomerLoyaltyInfo() {\n    // default constructor to support GWT parsing\n  }\n\n  public PartyCustomerLoyaltyInfo(int staus) {\n    this.staus = staus;\n  }\n\n  public int getStaus() {\n    return staus;\n  }\n\n  public void setStaus(int staus) {\n    this.staus = staus;\n  }\n\n  public boolean isConnectPlusCustomer() {\n    return isConnectPlusCustomer;\n  }\n\n  public void setConnectPlusCustomer(boolean isConnectPlusCustomer) {\n    this.isConnectPlusCustomer = isConnectPlusCustomer;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyProfileNPSInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyProfileNPSInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1489,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class PartyProfileNPSInfo implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n\n  private String scoringType;\n  private String scoringValue;\n  private String scoringDate;\n\n  public PartyProfileNPSInfo() {\n    // default constructor to support GWT parsing\n  }\n\n  public PartyProfileNPSInfo(String scoringType, String scoringValue, String scoringDate) {\n\n    this.scoringType = scoringType;\n    this.scoringValue = scoringValue;\n    this.scoringDate = scoringDate;\n  }\n\n  public String getScoringType() {\n    return scoringType;\n  }\n\n  public void setScoringType(String scoringType) {\n    this.scoringType = scoringType;\n  }\n\n  public String getScoringValue() {\n    return scoringValue;\n  }\n\n  public void setScoringValue(String scoringValue) {\n    this.scoringValue = scoringValue;\n  }\n\n  public String getScoringDate() {\n    return scoringDate;\n  }\n\n  public void setScoringDate(String scoringDate) {\n    this.scoringDate = scoringDate;\n  }\n\n  public String getStringTypeReadable() {\n    if (getScoringType().equals(\"PA_TNPSVALUE\")) {\n      return \"TNPS\";\n    } else if (getScoringType().equals(\"PA_PNPSVALUE\")) {\n      return \"PNPS\";\n    } else if (getScoringType().equals(\"PA_RNPSVALUE\")) {\n      return \"rNPS\";\n    }\n    return \"\";\n  }\n\n  public String getCompleteNpsStatus() {\n    return getStringTypeReadable() + \": \" + getScoringValue() + \" - \" + getScoringDate().toString();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Category.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Category.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 904,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Category implements Serializable {\n  private long id;\n  private String name;\n  private String description;\n  private int sequence;\n  private Date timestamp;\n\n  public long getId() {\n    return id;\n  }\n\n  public void setId(long id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public int getSequence() {\n    return sequence;\n  }\n\n  public void setSequence(int sequence) {\n    this.sequence = sequence;\n  }\n\n  public Date getTimestamp() {\n    return timestamp;\n  }\n\n  public void setTimestamp(Date timestamp) {\n    this.timestamp = timestamp;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ClearingAccount.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ClearingAccount.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5808,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\n\npublic class ClearingAccount implements Serializable, Comparable<ClearingAccount> {\n  private Long accountNumber;\n  private Long ban;\n  private Long ben;\n  private Long partyId;\n  private String invoiceType;\n  private String invoiceReceiverSalution;\n  private String invoiceReceiverTitle;\n  private String invoiceReceiverName;\n  private String invoiceAddressLine1;\n  private String invoiceAddressLine2;\n  private ArrayList<Invoice> invoices;\n  private boolean virtualClearingAccountMobile;\n  private boolean virtualClearingAccountFixedLine;\n  private boolean active;\n\n  public ClearingAccount() {}\n\n  public ClearingAccount(Long accountNumber) {\n    this.accountNumber = accountNumber;\n  }\n\n  public Long getAccountNumber() {\n    return accountNumber;\n  }\n\n  public void setAccountNumber(Long accountNumber) {\n    this.accountNumber = accountNumber;\n  }\n\n  public String getBanBenAccountNumber() {\n    return ban + \"/\" + ben;\n  }\n\n  public Long getBan() {\n    return ban;\n  }\n\n  public void setBan(Long ban) {\n    this.ban = ban;\n  }\n\n  public Long getBen() {\n    return ben;\n  }\n\n  public void setBen(Long ben) {\n    this.ben = ben;\n  }\n\n  public Long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(Long partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getInvoiceType() {\n    return invoiceType;\n  }\n\n  public void setInvoiceType(String invoiceType) {\n    this.invoiceType = invoiceType;\n  }\n\n  public boolean hasInvoiceType() {\n    return invoiceType != null && !invoiceType.isEmpty();\n  }\n\n  public String getInvoiceReceiverFullName() {\n    String fullName = \"\";\n    if (invoiceReceiverSalution != null) {\n      fullName += invoiceReceiverSalution + \" \";\n    }\n    if (invoiceReceiverTitle != null) {\n      fullName += invoiceReceiverTitle + \" \";\n    }\n    if (invoiceReceiverName != null) {\n      fullName += invoiceReceiverName;\n    }\n    return fullName;\n  }\n\n  public String getInvoiceReceiverSalution() {\n    return invoiceReceiverSalution;\n  }\n\n  public void setInvoiceReceiverSalution(String invoiceReceiverSalution) {\n    this.invoiceReceiverSalution = invoiceReceiverSalution;\n  }\n\n  public String getInvoiceReceiverTitle() {\n    return invoiceReceiverTitle;\n  }\n\n  public void setInvoiceReceiverTitle(String invoiceReceiverTitle) {\n    this.invoiceReceiverTitle = invoiceReceiverTitle;\n  }\n\n  public String getInvoiceReceiverName() {\n    return invoiceReceiverName;\n  }\n\n  public void setInvoiceReceiverName(String invoiceReceiverName) {\n    this.invoiceReceiverName = invoiceReceiverName;\n  }\n\n  public String getInvoiceAddressLine1() {\n    return invoiceAddressLine1;\n  }\n\n  public void setInvoiceAddressLine1(String invoiceAddressLine1) {\n    this.invoiceAddressLine1 = invoiceAddressLine1;\n  }\n\n  public String getInvoiceAddressLine2() {\n    return invoiceAddressLine2;\n  }\n\n  public void setInvoiceAddressLine2(String invoiceAddressLine2) {\n    this.invoiceAddressLine2 = invoiceAddressLine2;\n  }\n\n  public ArrayList<Invoice> getInvoices() {\n    return invoices;\n  }\n\n  public void setInvoices(ArrayList<Invoice> invoices) {\n    this.invoices = invoices;\n  }\n\n  public boolean hasInvoices() {\n    return invoices != null && !invoices.isEmpty();\n  }\n\n  public void addInvoices(Invoice invoice) {\n    if (invoices == null) {\n      invoices = new ArrayList<Invoice>();\n    }\n    invoices.add(invoice);\n  }\n\n  public float getNettoSum() {\n    BigDecimal sum = new BigDecimal(0F);\n    if (hasInvoices()) {\n      for (Invoice invoice : invoices) {\n        sum = sum.add(new BigDecimal(invoice.getTotalFee()));\n      }\n    }\n    return sum.floatValue();\n  }\n\n  public float getBruttoSum() {\n    BigDecimal sum = new BigDecimal(0F);\n    if (hasInvoices()) {\n      for (Invoice invoice : invoices) {\n        sum = sum.add(new BigDecimal(invoice.getTotalGrossFee()));\n      }\n    }\n    return sum.floatValue();\n  }\n\n  public float getPaymentSum() {\n    BigDecimal sum = new BigDecimal(0F);\n    if (hasInvoices()) {\n      for (Invoice invoice : invoices) {\n        sum = sum.add(new BigDecimal(invoice.getTotalPaymentFee()));\n      }\n    }\n    return sum.floatValue();\n  }\n\n  public boolean isVirtualClearingAccount() {\n    return virtualClearingAccountMobile || virtualClearingAccountFixedLine;\n  }\n\n  public boolean isVirtualClearingAccountMobile() {\n    return virtualClearingAccountMobile;\n  }\n\n  public boolean isVirtualClearingAccountFixedLine() {\n    return virtualClearingAccountFixedLine;\n  }\n\n  public void setVirtualClearingAccountMobile(boolean virtualClearingAccountMobile) {\n    this.virtualClearingAccountMobile = virtualClearingAccountMobile;\n  }\n\n  public void setVirtualClearingAccountFixedLine(boolean virtualClearingAccountFixedLine) {\n    this.virtualClearingAccountFixedLine = virtualClearingAccountFixedLine;\n  }\n\n  public boolean isMobileAccount() {\n    return ban != null;\n  }\n\n  public boolean isFixedLineAccount() {\n    return !isMobileAccount();\n  }\n\n  public void setActive(boolean active) {\n    this.active = active;\n  }\n\n  public boolean isActive() {\n    return active;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (!(obj instanceof ClearingAccount)) {\n      return false;\n    }\n\n    ClearingAccount other = ((ClearingAccount) obj);\n    return (accountNumber == null && other.accountNumber == null) || (accountNumber != null && accountNumber.equals(other.accountNumber));\n  }\n\n  @Override\n  public int hashCode() {\n    return accountNumber != null ? accountNumber.hashCode() : super.hashCode();\n  }\n\n  @Override\n  public int compareTo(ClearingAccount o) {\n    if (accountNumber == null || o.accountNumber == null) {\n      return 0;\n    }\n    return accountNumber.compareTo(o.accountNumber);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SelectedProductOffering.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SelectedProductOffering.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 489,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic class SelectedProductOffering {\n  private ProductOffering productOffering;\n  private boolean selected;\n\n  public ProductOffering getProductOffering() {\n    return productOffering;\n  }\n\n  public void setProductOffering(ProductOffering productOffering) {\n    this.productOffering = productOffering;\n  }\n\n  public boolean isSelected() {\n    return selected;\n  }\n\n  public void setSelected(boolean selected) {\n    this.selected = selected;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InsuranceBrokerInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InsuranceBrokerInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2771,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class InsuranceBrokerInfo implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n\n  public static final int ERROR = 99;\n  public static final int LOADING = -1;\n  public static final int NOT_RECEIVED = 98;\n  public static final int LOADED = 0;\n\n  private int status = LOADING;\n\n  private int monthLeft;\n  private Boolean costFreeClaimInd;\n  private String marketingContractTypeName;\n  private Boolean contractInd;\n  private Boolean contractTypeEligible;\n  private String deviceMarketingName;\n  private String imei;\n\n  private List<InsuranceBrokerContractInfo> contractInfo = new ArrayList<InsuranceBrokerContractInfo>();\n\n  public InsuranceBrokerInfo() {\n    // default constructor to support GWT parsing\n  }\n\n  public InsuranceBrokerInfo(int status) {\n    super();\n    this.status = status;\n  }\n\n  public int getStatus() {\n    return status;\n  }\n\n  public void setStatus(int status) {\n    this.status = status;\n  }\n\n  public int getMonthLeft() {\n    return monthLeft;\n  }\n\n  public void setMonthLeft(int monthLeft) {\n    this.monthLeft = monthLeft;\n  }\n\n  public Boolean getCostFreeClaimInd() {\n    return costFreeClaimInd;\n  }\n\n  public void setCostFreeClaimInd(Boolean costFreeClaimInd) {\n    this.costFreeClaimInd = costFreeClaimInd;\n  }\n\n  public String getMarketingContractTypeName() {\n    return marketingContractTypeName;\n  }\n\n  public void setMarketingContractTypeName(String marketingContractTypeName) {\n    this.marketingContractTypeName = marketingContractTypeName;\n  }\n\n  public Boolean getContractInd() {\n    return contractInd;\n  }\n\n  public void setContractInd(Boolean contractInd) {\n    this.contractInd = contractInd;\n  }\n\n  public Boolean getContractTypeEligible() {\n    return contractTypeEligible;\n  }\n\n  public void setContractTypeEligible(Boolean contractTypeEligible) {\n    this.contractTypeEligible = contractTypeEligible;\n  }\n\n  public String getDeviceMarketingName() {\n    return deviceMarketingName;\n  }\n\n  public void setDeviceMarketingName(String deviceMarkingName) {\n    this.deviceMarketingName = deviceMarkingName;\n  }\n\n  public String getImei() {\n    return imei;\n  }\n\n  public void setImei(String imei) {\n    this.imei = imei;\n  }\n\n  public List<InsuranceBrokerContractInfo> getContractInfo() {\n    return contractInfo;\n  }\n\n  public void setContractInfo(List<InsuranceBrokerContractInfo> contractInfo) {\n    this.contractInfo = contractInfo;\n  }\n\n  public void addToContractInfo(InsuranceBrokerContractInfo contractInfo) {\n    if (this.contractInfo == null) {\n      this.contractInfo = new ArrayList<InsuranceBrokerContractInfo>();\n    }\n    this.contractInfo.add(contractInfo);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CustomerFilter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CustomerFilter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4864,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.KeyValuePair;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProductDetails;\nimport at.a1ta.cuco.core.shared.model.DualSegment;\n\npublic class CustomerFilter {\n\n  public static final String VIP_ID = \"vip\";\n  public static final String TURNOVERREGIONS_ID = \"turnoverRegions\";\n  public static final String CUSTOMERWORTHCLASS_ID = \"customerWorthClass\";\n  public static final String DUALSEGMENTS_ID = \"dualSegments\";\n  public static final String FLASHINFO_ID = \"flashInfo\";\n  public static final String CHURNRISK_ID = \"churnRisk\";\n  public static final String PARTY_ID = \"partyId\";\n  public static final String PLZ = \"plz\";\n  public static final String INDEXATION = \"indexation\";\n  public static final String VBM_PRODUCTS = \"vbm\";\n\n  // public static final String VBM = \"availableVbmProducts\";\n\n  public enum Churn {\n    ALL, DANGER, NODANGER\n  }\n\n  public enum FlashInfo {\n    ALL, NOFLASH, FLASH\n  }\n\n  public enum Vip {\n    ALL, NOVIP, VIP\n  }\n\n  public enum WorthClass {\n    ALL, GOLD, SILBER, BRONZE, BLEI, UNKNOWN\n  }\n\n  public enum Indexation {\n    ALL, MitIndexierung, MitIndexanpassung, OhneIndexierung\n  }\n\n  /*\n   * public enum Vbm {\n   * ALL_PROD, NO_PROD_FILTER\n   * }\n   */\n\n  private Churn churn;\n  private FlashInfo flashInfo;\n  private Vip vip;\n  private Indexation indexation;\n  private List<DualSegment> dualSegments;\n  private List<WorthClass> worthClasses;\n  private List<String> turnoverRanges;\n  private List<String> vbmProducts;\n  private String partyId;\n  private String plz;\n  private List<VBMProductDetails> productDetailsFilter;\n\n  public Churn getChurn() {\n    return churn;\n  }\n\n  public void setChurn(Churn churn) {\n    this.churn = churn;\n  }\n\n  public FlashInfo getFlashInfo() {\n    return flashInfo;\n  }\n\n  public void setFlashInfo(FlashInfo flashInfo) {\n    this.flashInfo = flashInfo;\n  }\n\n  public Vip getVip() {\n    return vip;\n  }\n\n  public void setVip(Vip vip) {\n    this.vip = vip;\n  }\n\n  public Indexation getIndexation() {\n    return indexation;\n  }\n\n  public void setIndexation(Indexation indexation) {\n    this.indexation = indexation;\n  }\n\n  public List<DualSegment> getDualSegments() {\n    return dualSegments;\n  }\n\n  public void setDualSegments(List<DualSegment> dualSegments) {\n    this.dualSegments = dualSegments;\n  }\n\n  public void setDualSegmentsByKeyValuePairs(List<KeyValuePair> dualSegmentKeyValuePairs) {\n    dualSegments = new ArrayList<DualSegment>();\n    for (KeyValuePair dualSegmentKeyValuePair : dualSegmentKeyValuePairs) {\n      dualSegments.add(DualSegment.valueOf(dualSegmentKeyValuePair.getKey()));\n    }\n  }\n\n  public void addDualSegment(DualSegment dualSegment) {\n    if (dualSegments == null) {\n      dualSegments = new ArrayList<DualSegment>();\n    }\n    dualSegments.add(dualSegment);\n  }\n\n  public List<WorthClass> getWorthClasses() {\n    return worthClasses;\n  }\n\n  public void setWorthClasses(List<WorthClass> worthClasses) {\n    this.worthClasses = worthClasses;\n  }\n\n  public void setWorthClassesByKeyValuePairs(List<KeyValuePair> worthClassKeyValuePairs) {\n    worthClasses = new ArrayList<WorthClass>();\n    for (KeyValuePair worthClassKeyValuePair : worthClassKeyValuePairs) {\n      worthClasses.add(WorthClass.valueOf(worthClassKeyValuePair.getKey()));\n    }\n  }\n\n  public void addWorthClass(WorthClass worthClass) {\n    if (worthClasses == null) {\n      worthClasses = new ArrayList<WorthClass>();\n    }\n    worthClasses.add(worthClass);\n  }\n\n  public List<String> getTurnoverRanges() {\n    return turnoverRanges;\n  }\n\n  public void setTurnoverRanges(List<String> turnoverRanges) {\n    this.turnoverRanges = turnoverRanges;\n  }\n\n  public void setTurnoverRangesByKeyValuePairs(List<KeyValuePair> turnoverRangeKeyValuePairs) {\n    turnoverRanges = new ArrayList<String>();\n    for (KeyValuePair turnoverRangeKeyValuePair : turnoverRangeKeyValuePairs) {\n      turnoverRanges.add(turnoverRangeKeyValuePair.getKey());\n    }\n  }\n\n  public void addTurnoverRange(String turnoverRange) {\n    if (turnoverRanges == null) {\n      turnoverRanges = new ArrayList<String>();\n    }\n    turnoverRanges.add(turnoverRange);\n  }\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public List<VBMProductDetails> getProductDetailsFilter() {\n    return productDetailsFilter;\n  }\n\n  public void setProductDetailsFilter(List<VBMProductDetails> productDetailsFilter) {\n    this.productDetailsFilter = productDetailsFilter;\n  }\n\n  public List<String> getVbmProducts() {\n    return vbmProducts;\n  }\n\n  public void setVbmProducts(List<String> vbmProducts) {\n    this.vbmProducts = vbmProducts;\n  }\n\n  public String getPlz() {\n    return plz;\n  }\n\n  public void setPlz(String plz) {\n    this.plz = plz;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductGroup.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductGroup.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2588,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Date;\n\npublic class ProductGroup implements Serializable {\n  private Long id;\n  private String code;\n  private String name;\n  private String description;\n  private String anbLookup;\n  private Date updateTs;\n  private int nrNotes;\n  private int nrNotesImported;\n  private int nrSingleTurnarounds;\n  private int nrReminders;\n  private boolean ta;\n  private boolean anb;\n  private boolean notInterested;\n  private ArrayList<RTCode> rtCodes = new ArrayList<RTCode>();\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getCode() {\n    return code;\n  }\n\n  public void setCode(String code) {\n    this.code = code;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public String getAnbLookup() {\n    return anbLookup;\n  }\n\n  public void setAnbLookup(String anbLookup) {\n    this.anbLookup = anbLookup;\n  }\n\n  public Date getUpdateTs() {\n    return updateTs;\n  }\n\n  public void setUpdateTs(Date updateTs) {\n    this.updateTs = updateTs;\n  }\n\n  public void setNrNotes(int nrNotes) {\n    this.nrNotes = nrNotes;\n  }\n\n  public int getNrNotes() {\n    return nrNotes;\n  }\n\n  public int getNrNotesImported() {\n    return nrNotesImported;\n  }\n\n  public void setNrNotesImported(int nrNotesImported) {\n    this.nrNotesImported = nrNotesImported;\n  }\n\n  public void setNrSingleTurnarounds(int nrSingleTurnarounds) {\n    this.nrSingleTurnarounds = nrSingleTurnarounds;\n  }\n\n  public int getNrSingleTurnarounds() {\n    return this.nrSingleTurnarounds;\n  }\n\n  public int getNrReminders() {\n    return nrReminders;\n  }\n\n  public void setNrReminders(int nrReminders) {\n    this.nrReminders = nrReminders;\n  }\n\n  public boolean hasTa() {\n    return ta;\n  }\n\n  public void setTa(boolean ta) {\n    this.ta = ta;\n  }\n\n  public boolean hasAnb() {\n    return anb;\n  }\n\n  public void setAnb(boolean anb) {\n    this.anb = anb;\n  }\n\n  public ArrayList<RTCode> getRTCodes() {\n    return rtCodes;\n  }\n\n  public void setRTCodes(ArrayList<RTCode> codes) {\n    this.rtCodes = codes;\n  }\n\n  public void setNotInterested(boolean notInterested) {\n    this.notInterested = notInterested;\n  }\n\n  public boolean isNotInterested() {\n    return notInterested;\n  }\n\n  @Override\n  public String toString() {\n    return name;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AttributeConfig.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AttributeConfig.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9918,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\n@SuppressWarnings(\"serial\")\npublic class AttributeConfig implements Serializable {\n\n  public AttributeConfig() {\n    super();\n  }\n\n  /**\n   * Copy Constructor\n   * \n   * @param attributeConfig a <code>AttributeConfig</code> object\n   */\n  public AttributeConfig(AttributeConfig attributeConfig) {\n    this.attributeConfigId = attributeConfig.attributeConfigId;\n    this.attributeName = attributeConfig.attributeName;\n    this.attributeType = attributeConfig.attributeType;\n    this.lowerBounds = attributeConfig.lowerBounds;\n    this.upperBounds = attributeConfig.upperBounds;\n    this.active = attributeConfig.active;\n    this.deleted = attributeConfig.deleted;\n    this.orderNum = attributeConfig.orderNum;\n    this.creator = attributeConfig.creator;\n    this.createDate = attributeConfig.createDate;\n    this.lastModifier = attributeConfig.lastModifier;\n    this.lastUpdate = attributeConfig.lastUpdate;\n    this.grouping = attributeConfig.grouping;\n    this.segments = attributeConfig.segments;\n    this.validValues = attributeConfig.validValues;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((active == null) ? 0 : active.hashCode());\n    result = prime * result + ((attributeConfigId == null) ? 0 : attributeConfigId.hashCode());\n    result = prime * result + ((attributeName == null) ? 0 : attributeName.hashCode());\n    result = prime * result + ((attributeType == null) ? 0 : attributeType.hashCode());\n    result = prime * result + ((createDate == null) ? 0 : createDate.hashCode());\n    result = prime * result + ((creator == null) ? 0 : creator.hashCode());\n    result = prime * result + ((deleted == null) ? 0 : deleted.hashCode());\n    result = prime * result + ((grouping == null) ? 0 : grouping.hashCode());\n    result = prime * result + ((lastModifier == null) ? 0 : lastModifier.hashCode());\n    result = prime * result + ((lastUpdate == null) ? 0 : lastUpdate.hashCode());\n    result = prime * result + ((lowerBounds == null) ? 0 : lowerBounds.hashCode());\n    result = prime * result + ((orderNum == null) ? 0 : orderNum.hashCode());\n    result = prime * result + ((segments == null) ? 0 : segments.hashCode());\n    result = prime * result + ((upperBounds == null) ? 0 : upperBounds.hashCode());\n    result = prime * result + ((validValues == null) ? 0 : validValues.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    AttributeConfig other = (AttributeConfig) obj;\n    if (active == null) {\n      if (other.active != null) {\n        return false;\n      }\n    } else if (!active.equals(other.active)) {\n      return false;\n    }\n    if (attributeConfigId == null) {\n      if (other.attributeConfigId != null) {\n        return false;\n      }\n    } else if (!attributeConfigId.equals(other.attributeConfigId)) {\n      return false;\n    }\n    if (attributeName == null) {\n      if (other.attributeName != null) {\n        return false;\n      }\n    } else if (!attributeName.equals(other.attributeName)) {\n      return false;\n    }\n    if (attributeType != other.attributeType) {\n      return false;\n    }\n    if (createDate == null) {\n      if (other.createDate != null) {\n        return false;\n      }\n    } else if (!createDate.equals(other.createDate)) {\n      return false;\n    }\n    if (creator == null) {\n      if (other.creator != null) {\n        return false;\n      }\n    } else if (!creator.equals(other.creator)) {\n      return false;\n    }\n    if (deleted == null) {\n      if (other.deleted != null) {\n        return false;\n      }\n    } else if (!deleted.equals(other.deleted)) {\n      return false;\n    }\n    if (grouping != other.grouping) {\n      return false;\n    }\n    if (lastModifier == null) {\n      if (other.lastModifier != null) {\n        return false;\n      }\n    } else if (!lastModifier.equals(other.lastModifier)) {\n      return false;\n    }\n    if (lastUpdate == null) {\n      if (other.lastUpdate != null) {\n        return false;\n      }\n    } else if (!lastUpdate.equals(other.lastUpdate)) {\n      return false;\n    }\n    if (lowerBounds == null) {\n      if (other.lowerBounds != null) {\n        return false;\n      }\n    } else if (!lowerBounds.equals(other.lowerBounds)) {\n      return false;\n    }\n    if (orderNum == null) {\n      if (other.orderNum != null) {\n        return false;\n      }\n    } else if (!orderNum.equals(other.orderNum)) {\n      return false;\n    }\n    if (segments == null) {\n      if (other.segments != null) {\n        return false;\n      }\n    } else if (!segments.equals(other.segments)) {\n      return false;\n    }\n    if (upperBounds == null) {\n      if (other.upperBounds != null) {\n        return false;\n      }\n    } else if (!upperBounds.equals(other.upperBounds)) {\n      return false;\n    }\n    if (validValues == null) {\n      if (other.validValues != null) {\n        return false;\n      }\n    } else if (!validValues.equals(other.validValues)) {\n      return false;\n    }\n    return true;\n  }\n\n  public static enum ConfigTypes {\n    BOOLEAN, NUMBER, DROPDOWN, DATE\n  }\n\n  public static enum Groupings {\n    VISITREPORT_SBS_TODO_ITEM, SALESINFO_CUSTOMERINFO, VISITREPORT_SBS_FEEDBACK, VISITREPORT_SBS_REFLECTION, VISITREPORT_SALES_CONV_FEEDBACK, //\n    DIGITAL_SELLING_INTERNET_SPEED_OLD, DIGITAL_SELLING_INTERNET_SPEED_NEW, DIGITAL_SELLING_TV_OLD, DIGITAL_SELLING_TV_NEW, //\n    DIGITAL_SELLING_MOBILE_PHONE_OLD, DIGITAL_SELLING_MOBILE_PHONE_NEW, DIGITAL_SELLING_MOBILE_TARIFF_OLD, DIGITAL_SELLING_MOBILE_TARIFF_NEW, //\n    DIGITAL_SELLING_MUSIC, DIGITAL_SELLING_SECURITY_OLD, DIGITAL_SELLING_SECURITY_NEW, DIGITAL_SELLING_SMART_HOME_OLD, DIGITAL_SELLING_SMART_HOME_NEW, //\n    DIGITAL_SELLING_PAYMENT_OLD, DIGITAL_SELLING_PAYMENT_NEW, DIGITAL_SELLING_SERVICES_OLD, DIGITAL_SELLING_SERVICES_NEW\n  }\n\n  private Long attributeConfigId;\n  private String attributeName;\n  private String validValues;\n  private ConfigTypes attributeType;\n  private Integer lowerBounds;\n  private Integer upperBounds;\n  private Boolean active;\n  private Boolean deleted;\n  private Integer orderNum;\n  private BiteUser creator;\n  private Date createDate;\n  private BiteUser lastModifier;\n  private Date lastUpdate;\n  private Groupings grouping;\n  private List<String> segments;\n\n  public Long getAttributeConfigId() {\n    return attributeConfigId;\n  }\n\n  public void setAttributeConfigId(Long attributeConfigId) {\n    this.attributeConfigId = attributeConfigId;\n  }\n\n  public String getAttributeName() {\n    return attributeName;\n  }\n\n  public void setAttributeName(String attributeName) {\n    this.attributeName = attributeName;\n  }\n\n  public ConfigTypes getAttributeType() {\n    return attributeType;\n  }\n\n  public void setAttributeType(ConfigTypes attributeType) {\n    this.attributeType = attributeType;\n  }\n\n  public Boolean getActive() {\n    return active;\n  }\n\n  public boolean getNSActive() {\n    return active == null ? false : active;\n  }\n\n  public void setActive(Boolean active) {\n    this.active = active;\n  }\n\n  public Boolean getDeleted() {\n    return deleted;\n  }\n\n  public Boolean getNSDeleted() {\n    return deleted == null ? false : deleted;\n  }\n\n  public void setDeleted(Boolean deleted) {\n    this.deleted = deleted;\n  }\n\n  public Integer getOrderNum() {\n    return orderNum;\n  }\n\n  public void setOrderNum(Integer orderNum) {\n    this.orderNum = orderNum;\n  }\n\n  public BiteUser getCreator() {\n    return creator;\n  }\n\n  public void setCreator(BiteUser creator) {\n    this.creator = creator;\n  }\n\n  public Date getCreateDate() {\n    return createDate;\n  }\n\n  public void setCreateDate(Date createDate) {\n    this.createDate = createDate;\n  }\n\n  public BiteUser getLastModifier() {\n    return lastModifier;\n  }\n\n  public void setLastModifier(BiteUser lastModifier) {\n    this.lastModifier = lastModifier;\n  }\n\n  public Date getLastUpdate() {\n    return lastUpdate;\n  }\n\n  public void setLastUpdate(Date lastUpdate) {\n    this.lastUpdate = lastUpdate;\n  }\n\n  public Integer getLowerBounds() {\n    return lowerBounds;\n  }\n\n  public void setLowerBounds(Integer lowerBounds) {\n    this.lowerBounds = lowerBounds;\n  }\n\n  public Integer getUpperBounds() {\n    return upperBounds;\n  }\n\n  public void setUpperBounds(Integer upperBounds) {\n    this.upperBounds = upperBounds;\n  }\n\n  @Override\n  public String toString() {\n    return \"AttributeConfig [attributeConfigId=\" + attributeConfigId + \", attributeName=\" + attributeName + \", attributeType=\" + attributeType + \", lowerBounds=\" + lowerBounds + \", upperBounds=\"\n        + upperBounds + \", active=\" + active + \", deleted=\" + deleted + \", orderNum=\" + orderNum + \", creator=\" + creator + \", createDate=\" + createDate + \", lastModifier=\" + lastModifier\n        + \", lastUpdate=\" + lastUpdate + \", validValues=\" + validValues + \"]\";\n  }\n\n  public Groupings getGrouping() {\n    return grouping;\n  }\n\n  public void setGrouping(Groupings grouping) {\n    this.grouping = grouping;\n  }\n\n  public List<String> getSegments() {\n    return segments;\n  }\n\n  public void setSegments(List<String> segments) {\n    this.segments = segments;\n  }\n\n  public String getValidValues() {\n    return validValues;\n  }\n\n  public void setValidValues(String validValues) {\n    this.validValues = validValues;\n  }\n\n  public boolean isBooleanType() {\n    return ConfigTypes.BOOLEAN == getAttributeType();\n  }\n\n  public boolean isNumberType() {\n    return ConfigTypes.NUMBER == getAttributeType();\n  }\n\n  public boolean isComboboxType() {\n    return ConfigTypes.DROPDOWN == getAttributeType();\n  }\n\n  public boolean isDateType() {\n    return ConfigTypes.DATE == getAttributeType();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CustomerBlock.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CustomerBlock.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1006,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class CustomerBlock implements Serializable {\n  private long id = -1;\n  private String name;\n  private long count;\n  private boolean imported;\n  private String data;\n  private FlashInfo flashInfo;\n\n  public long getId() {\n    return id;\n  }\n\n  public void setId(long id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public long getCount() {\n    return count;\n  }\n\n  public void setCount(long count) {\n    this.count = count;\n  }\n\n  public boolean isImported() {\n    return imported;\n  }\n\n  public void setImported(boolean imported) {\n    this.imported = imported;\n  }\n\n  public String getData() {\n    return data;\n  }\n\n  public void setData(String data) {\n    this.data = data;\n  }\n\n  public FlashInfo getFlashInfo() {\n    return flashInfo;\n  }\n\n  public void setFlashInfo(FlashInfo flashInfo) {\n    this.flashInfo = flashInfo;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SearchResultComparator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SearchResultComparator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 475,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Comparator;\n\npublic class SearchResultComparator implements Comparator<Party>, Serializable {\n\n\t@Override\n\tpublic int compare(Party o1, Party o2) {\n\t\tString comp1 = buildComparisonString(o1);\n\t\tString comp2 = buildComparisonString(o2);\n\t\treturn comp1.compareTo(comp2);\n\t}\n\n\tprivate String buildComparisonString(Party party) {\n\t\treturn party.getLastname() + \" \" + party.getFirstname();\n\t}\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartySearch.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartySearch.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5461,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class PartySearch implements Serializable {\n  private String id;\n  private String leadId;\n  private String lastName;\n  private String firstName;\n  private Date birthDate;\n  private String postcode;\n  private String city;\n  private String village;\n  private String street;\n  private String country;\n  private String houseNumber;\n  private String phoneNumber;\n  private String accountingNumber;\n  private String aonAccountNumber;\n  private String commercialRegisterNumber;\n  private String billingAccountNumber;\n  private String lkz;\n  private String okz;\n  private String callNumber;\n  private boolean fulltext;\n  private String fulltextTerm;\n  private String activeSearchField;\n  private String supportUserId;\n  private boolean nonCustomerSearchRequired;\n\n  private String searchExecutingUserName;\n\n  public String getVillage() {\n    return village;\n  }\n\n  public void setVillage(String village) {\n    this.village = village;\n  }\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public String getLastName() {\n    return lastName;\n  }\n\n  public void setLastName(String lastName) {\n    this.lastName = lastName;\n  }\n\n  public String getFirstName() {\n    return firstName;\n  }\n\n  public void setFirstName(String firstName) {\n    this.firstName = firstName;\n  }\n\n  public Date getBirthDate() {\n    return birthDate;\n  }\n\n  public void setBirthDate(Date birthDate) {\n    this.birthDate = birthDate;\n  }\n\n  public String getPostcode() {\n    return postcode;\n  }\n\n  public void setPostcode(String postcode) {\n    this.postcode = postcode;\n  }\n\n  public String getCity() {\n    return city;\n  }\n\n  public void setCity(String city) {\n    this.city = city;\n  }\n\n  public String getStreet() {\n    return street;\n  }\n\n  public void setStreet(String street) {\n    this.street = street;\n  }\n\n  public void setCountry(String country) {\n    this.country = country;\n  }\n\n  public String getCountry() {\n    return country;\n  }\n\n  public String getHouseNumber() {\n    return houseNumber;\n  }\n\n  public void setHouseNumber(String houseNumber) {\n    this.houseNumber = houseNumber;\n  }\n\n  public void setPhoneNumber(String phoneNumber) {\n    this.phoneNumber = phoneNumber;\n  }\n\n  public String getPhoneNumber() {\n    return phoneNumber;\n  }\n\n  public void setAccountingNumber(String accountingNumber) {\n    this.accountingNumber = accountingNumber;\n  }\n\n  public String getAccountingNumber() {\n    return accountingNumber;\n  }\n\n  public void setAonAccountNumber(String aonAccountNumber) {\n    this.aonAccountNumber = aonAccountNumber;\n  }\n\n  public String getAonAccountNumber() {\n    return aonAccountNumber;\n  }\n\n  public void setCommercialRegisterNumber(String commercialRegisterNumber) {\n    this.commercialRegisterNumber = commercialRegisterNumber;\n  }\n\n  public String getCommercialRegisterNumber() {\n    return commercialRegisterNumber;\n  }\n\n  public void setBillingAccountNumber(String billingAccountNumber) {\n    this.billingAccountNumber = billingAccountNumber;\n  }\n\n  public String getBillingAccountNumber() {\n    return billingAccountNumber;\n  }\n\n  public String getLkz() {\n    return lkz;\n  }\n\n  public void setLkz(String lkz) {\n    this.lkz = lkz;\n  }\n\n  public String getOkz() {\n    return okz;\n  }\n\n  public void setOkz(String okz) {\n    this.okz = okz;\n  }\n\n  public String getCallNumber() {\n    return callNumber;\n  }\n\n  public void setCallNumber(String callNumber) {\n    this.callNumber = callNumber;\n  }\n\n  public boolean isFulltext() {\n    return fulltext;\n  }\n\n  public void setFulltext(boolean fulltext) {\n    this.fulltext = fulltext;\n  }\n\n  public String getFulltextTerm() {\n    return fulltextTerm;\n  }\n\n  public void setFulltextTerm(String fulltextTerm) {\n    this.fulltextTerm = fulltextTerm;\n  }\n\n  public String getActiveSearchField() {\n    return activeSearchField;\n  }\n\n  public void setActiveSearchField(String activeSearchField) {\n    this.activeSearchField = activeSearchField;\n  }\n\n  public void setSearchExecutingUserName(String searchExecutingUserName) {\n    this.searchExecutingUserName = searchExecutingUserName;\n  }\n\n  public String getSearchExecutingUserName() {\n    return searchExecutingUserName;\n  }\n\n  public String getLeadId() {\n    return leadId;\n  }\n\n  public void setLeadId(String leadId) {\n    this.leadId = leadId;\n  }\n\n  @Override\n  public String toString() {\n    return this.getClass().getName() + \": id=\" + id + \"; lastName=\" + lastName + \"; firstName=\" + firstName + \"; birthDate=\" + birthDate + \"; postcode\" + postcode + \"; city=\" + city + \"; village=\" + village + \"; street=\" + street + \"; country=\" + country + \"; houseNumber=\" + houseNumber\n        + \"; phoneNumber=\" + phoneNumber + \"; accountingNumber=\" + accountingNumber + \"; aonAccountNumber=\" + aonAccountNumber + \"; commercialRegisterNumber=\" + commercialRegisterNumber + \"; billingAccountNumber=\" + billingAccountNumber + \"; lkz=\" + lkz + \"; okz=\" + okz + \"; callNumber=\"\n        + callNumber;\n  }\n\n  public String getSupportUserId() {\n    return supportUserId;\n  }\n\n  public void setSupportUserId(String supportUserId) {\n    this.supportUserId = supportUserId;\n  }\n\n  public boolean isNonCustomerSearchRequired() {\n    return nonCustomerSearchRequired;\n  }\n\n  public void setNonCustomerSearchRequired(boolean nonCustomerSearchRequired) {\n    this.nonCustomerSearchRequired = nonCustomerSearchRequired;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyAdditionalInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyAdditionalInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1725,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class PartyAdditionalInfo implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private ServiceClassInfo serviceClassInfo;\n  private PointOfSaleInfo pointOfSaleInfo;\n  private PartyDeclarationOfConsentInfo partyDeclarationOfConsentInfo;\n  private PartyProfileInfo partyProfileInfo;\n  private PartyCustomerLoyaltyInfo partyCustomerLoyaltyInfo;\n\n  public PartyAdditionalInfo() {\n    // default constructor to support GWT parsing\n  }\n\n  public PointOfSaleInfo getPointOfSaleInfo() {\n    return pointOfSaleInfo;\n  }\n\n  public void setPointOfSaleInfo(PointOfSaleInfo pointOfSaleInfo) {\n    this.pointOfSaleInfo = pointOfSaleInfo;\n  }\n\n  public ServiceClassInfo getServiceClassInfo() {\n    return serviceClassInfo;\n  }\n\n  public void setServiceClassInfo(ServiceClassInfo serviceClassInfo) {\n    this.serviceClassInfo = serviceClassInfo;\n  }\n\n  public PartyDeclarationOfConsentInfo getPartyDeclarationOfConsentInfo() {\n    return partyDeclarationOfConsentInfo;\n  }\n\n  public void setPartyDeclarationOfConsentInfo(PartyDeclarationOfConsentInfo partyDeclarationOfConsentInfo) {\n    this.partyDeclarationOfConsentInfo = partyDeclarationOfConsentInfo;\n  }\n\n  public PartyProfileInfo getPartyProfileInfo() {\n    return partyProfileInfo;\n  }\n\n  public void setPartyProfileInfo(PartyProfileInfo partyProfileInfo) {\n    this.partyProfileInfo = partyProfileInfo;\n  }\n\n  public PartyCustomerLoyaltyInfo getPartyCustomerLoyaltyInfo() {\n    return partyCustomerLoyaltyInfo;\n  }\n\n  public void setPartyCustomerLoyaltyInfo(PartyCustomerLoyaltyInfo partyCustomerLoyaltyInfo) {\n    this.partyCustomerLoyaltyInfo = partyCustomerLoyaltyInfo;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyDeclarationOfConsentInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyDeclarationOfConsentInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2599,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class PartyDeclarationOfConsentInfo implements Serializable {\n\n  public enum StatusOfCompleteness {\n    COMPLETE(\"Gr\u00fcn\"), NONE(\"Rot\"), PARTIAL(\"Gelb\"), UNKNOWN(\"Unbekannt\");\n\n    private String displayText;\n\n    private StatusOfCompleteness(String name) {\n      this.displayText = name;\n    }\n\n    public String getDisplayText() {\n      return displayText;\n    }\n  };\n\n  public enum StatusNeedForAction {\n    COMPLETE(\"Gr\u00fcn\"), NONE(\"Rot\"), PARTIAL(\"Gelb\"), UNKNOWN(\"Unbekannt\");\n\n    private String displayText;\n\n    private StatusNeedForAction(String name) {\n      this.displayText = name;\n    }\n\n    public String getDisplayText() {\n      return displayText;\n    }\n  };\n\n  private static final long serialVersionUID = 1L;\n  private int staus = LOADING;\n  private String declarationOfConsentDefinitionVersion;\n  private String declarationOfConsentId;\n  private StatusOfCompleteness statusOfCompleteness = StatusOfCompleteness.UNKNOWN;\n  private StatusNeedForAction statusNeedForAction = StatusNeedForAction.UNKNOWN;\n\n  public static final int ERROR = 99;\n  public static final int LOADING = -1;\n  public static final int NOT_RECEIVED = 98;\n  public static final int LOADED = 0;\n\n  public PartyDeclarationOfConsentInfo() {}\n\n  public PartyDeclarationOfConsentInfo(int staus, StatusOfCompleteness statusOfCompleteness) {\n    this.staus = staus;\n    this.statusOfCompleteness = statusOfCompleteness;\n  }\n\n  public int getStaus() {\n    return staus;\n  }\n\n  public void setStaus(int staus) {\n    this.staus = staus;\n  }\n\n  public String getDeclarationOfConsentDefinitionVersion() {\n    return declarationOfConsentDefinitionVersion;\n  }\n\n  public void setDeclarationOfConsentDefinitionVersion(String declarationOfConsentDefinitionVersion) {\n    this.declarationOfConsentDefinitionVersion = declarationOfConsentDefinitionVersion;\n  }\n\n  public String getDeclarationOfConsentId() {\n    return declarationOfConsentId;\n  }\n\n  public void setDeclarationOfConsentId(String declarationOfConsentId) {\n    this.declarationOfConsentId = declarationOfConsentId;\n  }\n\n  public StatusOfCompleteness getStatusOfCompleteness() {\n    return statusOfCompleteness;\n  }\n\n  public void setStatusOfCompleteness(StatusOfCompleteness statusOfCompleteness) {\n    this.statusOfCompleteness = statusOfCompleteness;\n  }\n\n  public StatusNeedForAction getStatusNeedForAction() {\n    return statusNeedForAction;\n  }\n\n  public void setStatusNeedForAction(StatusNeedForAction statusNeedForAction) {\n    this.statusNeedForAction = statusNeedForAction;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/OverviewStatus.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/OverviewStatus.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 158,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic enum OverviewStatus {\n  OPEN, PUT, ACCEPTED, DECLINED, POST_CREATION, CLOSED, NONE, WORKING, DONE, IN_PROCESS\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/VipExport.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/VipExport.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 980,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic class VipExport {\n  public static final String SEARCH_VIP_STATUS = \"vipStatus\";\n  public static final String SEARCH_REPORTER = \"search\";\n  public static final String SEARCH_TO = \"to\";\n  public static final String SEARCH_FROM = \"from\";\n  public static final String SERIALIZATION_DATE_PATTERN = \"dd.MM.yyyy.HH.mm.ss.SSS\";\n  public static final Object[] EXPORT_ROW_TITLES = new Object[] {\"Kundennummer\", \"Titel\", \"Nachname\", \"Vorname\", \"VIP Status\", \"Reporter\",\n      \"Anlege Datum\", \"Segment\", \"PLZ\", \"Ort\", \"Strasse\", \"Hausnummer\", \"E-Mail\", \"Geburtsdatum\", \"Geschlecht\", \"Branche\"};\n  public static final String EXPORT_ACTION_CSV_BY_SEARCH = \"csvBySearch\";\n  public static final String EXPORT_CSV_EXT = \".csv\";\n  public static final String EXPORT_CSV_CONTENT_TYPE = \"application/CSV\";\n  public static final String EXPORT_DATE_PATTERN = \"dd.MM.yyyy HH:mm\";\n  public static final String EXPORT_DATE_FILE_PATTERN = \"dd-MM-yyyy_HH-mm\";\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BindingsFilter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BindingsFilter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1245,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.util.Date;\n\npublic class BindingsFilter {\n  public static final String CONTRACT_ID = \"contract\";\n  public static final String CONTRACT_START_ID = \"contractStart\";\n  public static final String PARTY_ID = \"partyId\";\n  public static final String PRODUCT_DESCRIPTION_ID = \"productDescription\";\n\n  public enum Contract {\n    ALL, ALL_EXPIRED, ALL_EXPIRING, TIMERANGE_1, TIMERANGE_2, TIMERANGE_3, LARGER_TIMERANGE_3\n  }\n\n  private String partyId;\n  private String productDescription;\n  private Date contractStart;\n  private Contract contractEnd;\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n\n  public Contract getContractEnd() {\n    return contractEnd;\n  }\n\n  public void setContract(Contract contractEnd) {\n    this.contractEnd = contractEnd;\n  }\n\n  public void setProductDescription(String productDescription) {\n    this.productDescription = productDescription;\n  }\n\n  public String getProductDescription() {\n    return productDescription;\n  }\n\n  public void setContractStart(Date contractStart) {\n    this.contractStart = contractStart;\n  }\n\n  public Date getContractStart() {\n    return contractStart;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductDetailFilter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductDetailFilter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2726,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class ProductDetailFilter implements Serializable {\n\n  private String location;\n  private String serviceNumber;\n  private String customerType;\n  private String productName;\n  private String baseServiceNumber;\n  private Boolean secretLevel;\n  private String ban;\n  private String description;\n  private String indexation;\n  private String details;\n  private Date validFrom;\n  private Date binding;\n  private String lkz;\n  private String okz;\n  private String callNumber;\n\n  public String getLocation() {\n    return location;\n  }\n\n  public void setLocation(String location) {\n    this.location = location;\n  }\n\n  public String getServiceNumber() {\n    return serviceNumber;\n  }\n\n  public void setServiceNumber(String serviceNumber) {\n    this.serviceNumber = serviceNumber;\n  }\n\n  public String getCustomerType() {\n    return customerType;\n  }\n\n  public void setCustomerType(String customerType) {\n    this.customerType = customerType;\n  }\n\n  public String getProductName() {\n    return productName;\n  }\n\n  public void setProductName(String productName) {\n    this.productName = productName;\n  }\n\n  public String getBaseServiceNumber() {\n    return baseServiceNumber;\n  }\n\n  public void setBaseServiceNumber(String baseServiceNumber) {\n    this.baseServiceNumber = baseServiceNumber;\n  }\n\n  public Boolean getSecretLevel() {\n    return secretLevel;\n  }\n\n  public void setSecretLevel(Boolean secretLevel) {\n    this.secretLevel = secretLevel;\n  }\n\n  public String getBan() {\n    return ban;\n  }\n\n  public void setBan(String ban) {\n    this.ban = ban;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public String getIndexation() {\n    return indexation;\n  }\n\n  public void setIndexation(String indexation) {\n    this.indexation = indexation;\n  }\n\n  public String getDetails() {\n    return details;\n  }\n\n  public void setDetails(String details) {\n    this.details = details;\n  }\n\n  public Date getValidFrom() {\n    return validFrom;\n  }\n\n  public void setValidFrom(Date validFrom) {\n    this.validFrom = validFrom;\n  }\n\n  public Date getBinding() {\n    return binding;\n  }\n\n  public void setBinding(Date binding) {\n    this.binding = binding;\n  }\n\n  public String getLkz() {\n    return lkz;\n  }\n\n  public void setLkz(String lkz) {\n    this.lkz = lkz;\n  }\n\n  public String getOkz() {\n    return okz;\n  }\n\n  public void setOkz(String okz) {\n    this.okz = okz;\n  }\n\n  public String getCallNumber() {\n    return callNumber;\n  }\n\n  public void setCallNumber(String callNumber) {\n    this.callNumber = callNumber;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CucoLogs.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CucoLogs.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1023,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class CucoLogs implements Serializable {\n  private Long kundeId;\n  private String name;\n  private Long userId;\n  private String passwordType;\n  private Long ban;\n  private String LogType;\n\n  public Long getKundeId() {\n    return kundeId;\n  }\n\n  public void setKundeId(Long kundeId) {\n    this.kundeId = kundeId;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public Long getUserId() {\n    return userId;\n  }\n\n  public void setUserId(Long userId) {\n    this.userId = userId;\n  }\n\n  public String getPasswordType() {\n    return passwordType;\n  }\n\n  public void setPasswordType(String passwordType) {\n    this.passwordType = passwordType;\n  }\n\n  public Long getBan() {\n    return ban;\n  }\n\n  public void setBan(Long ban) {\n    this.ban = ban;\n  }\n\n  public String getLogType() {\n    return LogType;\n  }\n\n  public void setLogType(String logType) {\n    LogType = logType;\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductFeasibilityStatus.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductFeasibilityStatus.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 176,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic enum ProductFeasibilityStatus implements Serializable {\n  INSTALLABLE, NOT_INSTALLABLE, INSTALLED\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UIText.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UIText.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 578,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class UIText implements Serializable {\n\n  private String key; \n  private String value;\n  \n  public UIText() {\n    key = new String();\n    value = new String();\n  }\n  \n  public UIText(String key, String value)\n  {\n    this.key = key;\n    this.value = value;\n  }\n  \n  public String getKey() {\n    return key;\n  }\n  \n  public void setKey(String key) {\n    this.key = key;\n  }\n  \n  public String getValue() {\n    return value;\n  }\n  \n  public void setValue(String value) {\n    this.value = value;\n  }\n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InsuranceBrokerContractInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InsuranceBrokerContractInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1221,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class InsuranceBrokerContractInfo implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n\n  private String marketingContractTypeName;\n  private String deviceMarketingName;\n  private String imei;\n\n  public InsuranceBrokerContractInfo() {\n    // default constructor to support GWT parsing\n  }\n\n  public InsuranceBrokerContractInfo(String marketingContractTypeName, String deviceMarketingName, String imei) {\n    super();\n    this.marketingContractTypeName = marketingContractTypeName;\n    this.deviceMarketingName = deviceMarketingName;\n    this.imei = imei;\n  }\n\n  public String getMarketingContractTypeName() {\n    return marketingContractTypeName;\n  }\n\n  public void setMarketingContractTypeName(String marketingContractTypeName) {\n    this.marketingContractTypeName = marketingContractTypeName;\n  }\n\n  public String getDeviceMarketingName() {\n    return deviceMarketingName;\n  }\n\n  public void setDeviceMarketingName(String deviceMarketingName) {\n    this.deviceMarketingName = deviceMarketingName;\n  }\n\n  public String getImei() {\n    return imei;\n  }\n\n  public void setImei(String imei) {\n    this.imei = imei;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InventoryProductGroupAssignation.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InventoryProductGroupAssignation.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 731,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class InventoryProductGroupAssignation implements Serializable {\n  private long inventoryProductGroupId;\n  private long levelId;\n  private String productId;\n\n  public long getInventoryProductGroupId() {\n    return inventoryProductGroupId;\n  }\n\n  public void setInventoryProductGroupId(long inventoryProductGroupId) {\n    this.inventoryProductGroupId = inventoryProductGroupId;\n  }\n\n  public long getLevelId() {\n    return levelId;\n  }\n\n  public void setLevelId(long levelId) {\n    this.levelId = levelId;\n  }\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CrmAuthenticationInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CrmAuthenticationInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 959,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class CrmAuthenticationInfo implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n\n  public static final int ERROR = 99;\n  public static final int LOADING = -1;\n  public static final int NOT_RECEIVED = 98;\n  public static final int LOADED = 0;\n\n  private int status = LOADING;\n  private String password;\n  private String ban;\n\n  public CrmAuthenticationInfo() {\n    // default constructor to support GWT parsing\n  }\n\n  public CrmAuthenticationInfo(int status) {\n    this.status = status;\n  }\n\n  public int getStatus() {\n    return status;\n  }\n\n  public void setStatus(int staus) {\n    this.status = staus;\n  }\n\n  public String getPassword() {\n    return password;\n  }\n\n  public void setPassword(String password) {\n    this.password = password;\n  }\n\n  public String getBan() {\n    return ban;\n  }\n\n  public void setBan(String ban) {\n    this.ban = ban;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductOffering.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductOffering.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1794,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic enum ProductOffering implements Serializable {\n\n  A1BN(1, \"a1bn\"), MOBILE_INTERNET_ET_GT(2, \"etgt\"), FIB(3, \"fib\"), BIZKO(4, \"bizko\"), BPB(5, \"bpb\"), A1CML(6, \"a1cml\"), PSHC(7, \"pshc\"), A1TVRES(8, \"a1tvres\"), A1BI(9, \"a1bi\"), A1PS(10,\n      \"a1ps\"), A1VOIP(11, \"a1voip\"), DAAS(12, \"daas\"), MARKETPLACE(13, \"marketplace\"), BFW(14, \"bfw\"), A1BIP(15, \"a1bip\"), CCS(16,\"ccs\"), ALL(99, \"\");\n\n  private static final long serialVersionUID = 1L;\n\n  private long id;\n  private String packageName;\n\n  private ArrayList<String> variables;\n\n  private ProductOffering(long id, String packageName) {\n    this.id = id;\n    this.packageName = packageName;\n  }\n\n  public long getId() {\n    return id;\n  }\n\n  public void setId(long id) {\n    this.id = id;\n  }\n\n  public String getPackageName() {\n    return packageName;\n  }\n\n  public void setPackageName(String packageName) {\n    this.packageName = packageName;\n  }\n\n  public static ProductOffering valueOf(long id) {\n    for (ProductOffering po : values()) {\n      if (po.getId() == id) {\n        return po;\n      }\n    }\n    return null;\n  }\n\n  public ArrayList<String> getVariables() {\n    return variables;\n  }\n\n  public void setVariables(ArrayList<String> variables) {\n    this.variables = variables;\n  }\n\n  public static boolean hasMarketingProductConfiguration(ProductOffering productOffering) {\n    return productOffering == MARKETPLACE || productOffering == A1PS || productOffering == A1BN || productOffering == A1BI || productOffering == MOBILE_INTERNET_ET_GT || productOffering == CCS;\n  }\n\n  public static boolean supportsAdminConfiguration(ProductOffering productOffering) {\n    return productOffering == A1BIP || productOffering == BFW;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AccessToken.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AccessToken.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1007,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic class AccessToken {\n\n  private String targetSystem;\n  private String token;\n\n  public static final AccessToken NONE = new AccessToken() {\n\n    @Override\n    public final boolean isValid() {\n      return false;\n    }\n\n  };\n\n  public AccessToken() {}\n\n  public AccessToken(String targetSystem) {\n    super();\n    this.targetSystem = targetSystem;\n  }\n\n  public AccessToken(String targetSystem, String token) {\n    super();\n    this.targetSystem = targetSystem;\n    this.token = token;\n  }\n\n  public String getTargetSystem() {\n    return targetSystem;\n  }\n\n  public void setTargetSystem(String targetSystem) {\n    this.targetSystem = targetSystem;\n  }\n\n  public String getToken() {\n    return token;\n  }\n\n  public void setToken(String token) {\n    this.token = token;\n  }\n\n  public boolean isValid() {\n    return token != null;\n  }\n\n  @Override\n  public String toString() {\n    return \"AccessToken [targetSystem=\" + targetSystem + \", token=\" + token + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ServiceClassInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ServiceClassInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1037,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class ServiceClassInfo implements Serializable {\n\n  /**\n   * \n   */\n  private static final long serialVersionUID = 1L;\n  private int serviceClass = SERVICE_CLASS_LOADING;\n  private String serviceClassText;\n  public static final int SERVICE_CLASS_ERROR = 99;\n  public static final int SERVICE_CLASS_LOADING = -1;\n  public static final int SERVICE_CLASS_NOT_RECEIVED = 98;\n\n  public ServiceClassInfo() {\n    // default constructor to support GWT parsing\n  }\n\n  public ServiceClassInfo(int serviceClass, String serviceClassText) {\n    this.serviceClass = serviceClass;\n    this.serviceClassText = serviceClassText;\n  }\n\n  public int getServiceClass() {\n    return serviceClass;\n  }\n\n  public void setServiceClass(int serviceClass) {\n    this.serviceClass = serviceClass;\n  }\n\n  public String getServiceClassText() {\n    return serviceClassText;\n  }\n\n  public void setServiceClassText(String serviceClassText) {\n    this.serviceClassText = serviceClassText;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BusinessOffer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BusinessOffer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 531,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class BusinessOffer implements Serializable {\n  private Long customerId;\n  private String productDescription;\n\n  public Long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(Long customerId) {\n    this.customerId = customerId;\n  }\n\n  public String getProductDescription() {\n    return productDescription;\n  }\n\n  public void setProductDescription(String productDescription) {\n    this.productDescription = productDescription;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InventoryProductGroupUsage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InventoryProductGroupUsage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 684,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class InventoryProductGroupUsage implements Serializable {\n  private String name;\n  private int number;\n  private boolean anb;\n  private int order;\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public int getNumber() {\n    return number;\n  }\n\n  public void setNumber(int number) {\n    this.number = number;\n  }\n\n  public boolean isAnb() {\n    return anb;\n  }\n\n  public void setAnb(boolean anb) {\n    this.anb = anb;\n  }\n\n  public int getOrder() {\n    return order;\n  }\n\n  public void setOrder(int order) {\n    this.order = order;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UnknownAreaCode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UnknownAreaCode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2226,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class UnknownAreaCode implements Serializable {\n  private Long id;\n  private String areaCode;\n  private String description;\n\n  public UnknownAreaCode() {}\n\n  public UnknownAreaCode(String areaCode, String description) {\n    this.areaCode = areaCode;\n    this.description = description;\n  }\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getAreaCode() {\n    return areaCode;\n  }\n\n  public void setAreaCode(String areaCode) {\n    this.areaCode = areaCode;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((areaCode == null) ? 0 : areaCode.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    UnknownAreaCode other = (UnknownAreaCode) obj;\n    if (areaCode == null) {\n      if (other.areaCode != null) {\n        return false;\n      }\n    } else if (!areaCode.equals(other.areaCode)) {\n      return false;\n    }\n    return true;\n  }\n\n  @Override\n  public String toString() {\n    return areaCode;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Turnover.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Turnover.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1199,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Turnover implements Serializable {\n  public static final String TYPE_TA = \"ta\";\n  public static final String TYPE_MK = \"mk\";\n\n  private long partyId;\n  private Date month;\n  private float turnoverTa;\n  private float marginTa;\n  private float turnoverMk;\n  private float marginMk;\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public Date getMonth() {\n    return month;\n  }\n\n  public void setMonth(Date month) {\n    this.month = month;\n  }\n\n  public float getTurnoverTa() {\n    return turnoverTa;\n  }\n\n  public void setTurnoverTa(float turnoverTa) {\n    this.turnoverTa = turnoverTa;\n  }\n\n  public float getMarginTa() {\n    return marginTa;\n  }\n\n  public void setMarginTa(float marginTa) {\n    this.marginTa = marginTa;\n  }\n\n  public float getTurnoverMk() {\n    return turnoverMk;\n  }\n\n  public void setTurnoverMk(float turnoverMk) {\n    this.turnoverMk = turnoverMk;\n  }\n\n  public float getMarginMk() {\n    return marginMk;\n  }\n\n  public void setMarginMk(float marginMk) {\n    this.marginMk = marginMk;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Person.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Person.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3691,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport org.apache.solr.client.solrj.beans.Field;\n\npublic class Person implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String firstname;\n  private String gender;\n  private String lastname;\n  private Date birthdate;\n  private String title;\n  private String salutation;\n\n  public String getFirstname() {\n    return firstname != null ? firstname : \"\";\n  }\n\n  @Field(\"firstname\")\n  public void setFirstname(String firstname) {\n    this.firstname = firstname;\n  }\n\n  public String getGender() {\n    return gender;\n  }\n\n  @Field(\"gender\")\n  public void setGender(String gender) {\n    this.gender = gender;\n  }\n\n  public String getLastname() {\n    return lastname;\n  }\n\n  @Field(\"lastname\")\n  public void setLastname(String lastname) {\n    this.lastname = lastname;\n  }\n\n  public Date getBirthdate() {\n    return birthdate;\n  }\n\n  @Field(\"birthdate\")\n  public void setBirthdate(Date birthdate) {\n    this.birthdate = birthdate;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  @Field(\"title\")\n  public void setTitle(String title) {\n    this.title = title;\n  }\n\n  public String getSalutation() {\n    return salutation;\n  }\n\n  @Field(\"salutation\")\n  public void setSalutation(String salutation) {\n    this.salutation = salutation;\n  }\n\n  @SuppressWarnings(\"deprecation\")\n  public boolean hasBirthdayToday() {\n    Date today = new Date();\n    return (this.birthdate != null && birthdate.getDate() == today.getDate() && birthdate.getMonth() == today.getMonth());\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((birthdate == null) ? 0 : birthdate.hashCode());\n    result = prime * result + ((firstname == null) ? 0 : firstname.hashCode());\n    result = prime * result + ((gender == null) ? 0 : gender.hashCode());\n    result = prime * result + ((lastname == null) ? 0 : lastname.hashCode());\n    result = prime * result + ((salutation == null) ? 0 : salutation.hashCode());\n    result = prime * result + ((title == null) ? 0 : title.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    Person other = (Person) obj;\n    if (birthdate == null) {\n      if (other.birthdate != null) {\n        return false;\n      }\n    } else if (!birthdate.equals(other.birthdate)) {\n      return false;\n    }\n    if (firstname == null) {\n      if (other.firstname != null) {\n        return false;\n      }\n    } else if (!firstname.equals(other.firstname)) {\n      return false;\n    }\n    if (gender == null) {\n      if (other.gender != null) {\n        return false;\n      }\n    } else if (!gender.equals(other.gender)) {\n      return false;\n    }\n    if (lastname == null) {\n      if (other.lastname != null) {\n        return false;\n      }\n    } else if (!lastname.equals(other.lastname)) {\n      return false;\n    }\n    if (salutation == null) {\n      if (other.salutation != null) {\n        return false;\n      }\n    } else if (!salutation.equals(other.salutation)) {\n      return false;\n    }\n    if (title == null) {\n      if (other.title != null) {\n        return false;\n      }\n    } else if (!title.equals(other.title)) {\n      return false;\n    }\n    return true;\n  }\n\n  @Override\n  public String toString() {\n    return \"Person [firstname=\" + firstname + \", gender=\" + gender + \", lastname=\" + lastname + \", birthdate=\" + birthdate + \", title=\" + title + \", salutation=\" + salutation + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/QuoteClearanceConfigurationHolder.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/QuoteClearanceConfigurationHolder.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1310,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class QuoteClearanceConfigurationHolder implements Serializable {\n  /**\n   * \n   */\n  private static final long serialVersionUID = 1L;\n  private ArrayList<ProductOffering> offerings = new ArrayList<ProductOffering>();\n  private ArrayList<String> roles = new ArrayList<String>();\n  private HashMap<ProductOffering, ArrayList<String>> variablesForOfferingMap = new HashMap<ProductOffering, ArrayList<String>>();\n\n  public ArrayList<ProductOffering> getOfferings() {\n    return offerings;\n  }\n\n  public void setOfferings(ArrayList<ProductOffering> offerings) {\n    this.offerings = offerings;\n  }\n\n  public HashMap<ProductOffering, ArrayList<String>> getVariablesForOfferingMap() {\n    return variablesForOfferingMap;\n  }\n\n  public void setVariablesForOfferingMap(HashMap<ProductOffering, ArrayList<String>> variablesForOfferingMap) {\n    this.variablesForOfferingMap = variablesForOfferingMap;\n  }\n\n  public ArrayList<String> getVariablesForGivenOffering(ProductOffering offering) {\n    return variablesForOfferingMap.get(offering);\n  }\n\n  public ArrayList<String> getRoles() {\n    return roles;\n  }\n\n  public void setRoles(ArrayList<String> roles) {\n    this.roles = roles;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyProfileInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyProfileInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3060,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class PartyProfileInfo implements Serializable {\n\n    private static final long serialVersionUID = 1L;\n\n    public static final int ERROR = 99;\n\n    public static final int LOADING = -1;\n\n    public static final int NOT_RECEIVED = 98;\n\n    public static final int LOADED = 0;\n\n    private int staus = LOADING;\n\n    private List<PartyProfileNPSInfo> scores = new ArrayList<PartyProfileNPSInfo>();\n\n    private PartyProfileSolvency solvency;\n    \n    private PointOfSaleInfo posInfo;\n    \n    private SupportingUnit supportingUnit;\n\n    private String teamName;\n    \n    private String supportUserName;\n    \n    private String supportUserId;\n    \n    private boolean shopSupport;\n    \n    private String accountManagementSegment;\n\n    public PartyProfileInfo() {\n        // default constructor to support GWT parsing\n    }\n\n    public PartyProfileInfo(int staus) {\n        this.staus = staus;\n    }\n\n    public int getStaus() {\n        return staus;\n    }\n\n    public void setStaus(int staus) {\n        this.staus = staus;\n    }\n\n    public List<PartyProfileNPSInfo> getScores() {\n        return scores;\n    }\n\n    public void setScores(List<PartyProfileNPSInfo> scores) {\n        this.scores = scores;\n    }\n\n    public void addToScores(PartyProfileNPSInfo score) {\n        if (this.scores == null) {\n            this.scores = new ArrayList<PartyProfileNPSInfo>();\n        }\n        this.scores.add(score);\n    }\n\n    public PartyProfileSolvency getSolvency() {\n        return solvency;\n    }\n\n    public void setSolvency(PartyProfileSolvency solvency) {\n        this.solvency = solvency;\n    }\n\n    public PointOfSaleInfo getPosInfo() {\n        return posInfo;\n    }\n\n    public void setPosInfo(PointOfSaleInfo posInfo) {\n        this.posInfo = posInfo;\n    }\n    \n    public String getTeamName() {\n        return teamName;\n    }\n\n    public void setTeamName(String teamName) {\n        this.teamName = teamName;\n    }\n\n    public String getSupportUserName() {\n        return supportUserName;\n    }\n\n    public void setSupportUserName(String supportUserName) {\n        this.supportUserName = supportUserName;\n    }\n    \n    public boolean isShopSupport() {\n        return shopSupport;\n    }\n\n    public void setShopSupport(boolean shopSupport) {\n        this.shopSupport = shopSupport;\n    }\n\n    public String getSupportUserId() {\n        return supportUserId;\n    }\n\n    public void setSupportUserId(String supportUserId) {\n        this.supportUserId = supportUserId;\n    }\n\n    public String getAccountManagementSegment() {\n        return accountManagementSegment;\n    }\n\n    public void setAccountManagementSegment(String accountManagementSegment) {\n        this.accountManagementSegment = accountManagementSegment;\n    }\n\n    public SupportingUnit getSupportingUnit() {\n        return supportingUnit;\n    }\n\n    public void setSupportingUnit(SupportingUnit supportingUnit) {\n        this.supportingUnit = supportingUnit;\n    }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ReadOnlyStatusBasedOnCategory.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ReadOnlyStatusBasedOnCategory.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 107,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic enum ReadOnlyStatusBasedOnCategory {\n  EDITABLE, READ_ONLY\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationMessageComparator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationMessageComparator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 529,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Comparator;\n\npublic class GamificationMessageComparator implements Comparator<GamificationMessage>, Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @Override\n  public int compare(GamificationMessage o1, GamificationMessage o2) {\n    try {\n      return o2.getTimestampDateFormat().compareTo(o1.getTimestampDateFormat());\n    } catch (Exception e) {\n      return o2.getMessageUid().compareTo(o1.getMessageUid());\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MatrixPosition.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MatrixPosition.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 788,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class MatrixPosition<T> implements Serializable {\n  private long segment; // column\n  private long category; // row\n  private Integer sequence; // position inside the cell\n  private T object;\n\n  public long getSegment() {\n    return segment;\n  }\n\n  public void setSegment(long segment) {\n    this.segment = segment;\n  }\n\n  public long getCategory() {\n    return category;\n  }\n\n  public void setCategory(long category) {\n    this.category = category;\n  }\n\n  public T getObject() {\n    return object;\n  }\n\n  public void setObject(T object) {\n    this.object = object;\n  }\n\n  public void setSequence(Integer sequence) {\n    this.sequence = sequence;\n  }\n\n  public Integer getSequence() {\n    return sequence;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Service.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Service.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3074,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\nimport at.a1ta.bite.core.shared.dto.systemmessage.PeriodOfValidity;\n\npublic class Service implements Serializable {\n  private Long id;\n  private PeriodOfValidity validity = new PeriodOfValidity();\n  private String name;\n  private String productCode;\n  private Double costs;\n  private String comment;\n  private String product;\n  private String reason1;\n  private String reason2;\n  private String reason3;\n  private String result;\n  private Long multi;\n  private CreditType creditType;\n  private ChargingType chargingType;\n  private Long ticketcount;\n  private String employeeinfo;\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public PeriodOfValidity getValidity() {\n    return validity;\n  }\n\n  public void setValidity(PeriodOfValidity validity) {\n    this.validity = validity;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getProductCode() {\n    return productCode;\n  }\n\n  public void setProductCode(String productCode) {\n    this.productCode = productCode;\n  }\n\n  public Double getCosts() {\n    return costs;\n  }\n\n  public void setCosts(Double costs) {\n    this.costs = costs;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public String getProduct() {\n    return product;\n  }\n\n  public void setProduct(String product) {\n    this.product = product;\n  }\n\n  public String getReason1() {\n    return reason1;\n  }\n\n  public void setReason1(String reason1) {\n    this.reason1 = reason1;\n  }\n\n  public String getReason2() {\n    return reason2;\n  }\n\n  public void setReason2(String reason2) {\n    this.reason2 = reason2;\n  }\n\n  public String getReason3() {\n    return reason3;\n  }\n\n  public void setReason3(String reason3) {\n    this.reason3 = reason3;\n  }\n\n  public String getResult() {\n    return result;\n  }\n\n  public void setResult(String result) {\n    this.result = result;\n  }\n\n  public Long getMulti() {\n    return multi;\n  }\n\n  public void setMulti(Long multi) {\n    this.multi = multi;\n  }\n\n  public CreditType getCreditType() {\n    return creditType;\n  }\n\n  public void setCreditType(CreditType creditType) {\n    this.creditType = creditType;\n  }\n\n  public ChargingType getChargingType() {\n    return chargingType;\n  }\n\n  public void setChargingType(ChargingType chargingType) {\n    this.chargingType = chargingType;\n  }\n\n  public Long getTicketcount() {\n    return ticketcount;\n  }\n\n  public void setTicketcount(Long ticketcount) {\n    this.ticketcount = ticketcount;\n  }\n\n  public void setEmployeeinfo(String employeeinfo) {\n    this.employeeinfo = employeeinfo;\n  }\n\n  public String getEmployeeinfo() {\n    return employeeinfo;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    Service service = (Service) obj;\n    return service != null && getId().equals(service.getId());\n  }\n\n  @Override\n  public int hashCode() {\n    return getId().hashCode();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 424,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class GamificationData implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private GamificationCuCoMessages cucoMessages;\n\n  public GamificationCuCoMessages getCucoMessages() {\n    return cucoMessages;\n  }\n\n  public void setCucoMessages(GamificationCuCoMessages cucoMessages) {\n    this.cucoMessages = cucoMessages;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationResponse.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationResponse.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1120,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class GamificationResponse implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n  private GamificationData data;\n\n  private String status;\n\n  private int unreadMsgCount;\n\n  public String getAgentId() {\n    return getData() != null && getData().getCucoMessages() != null ? getData().getCucoMessages().getAgentId() : \"-\";\n  }\n\n  public List<GamificationMessage> getMessages() {\n    return getData() != null && getData().getCucoMessages() != null ? getData().getCucoMessages().getMessages() : new ArrayList<GamificationMessage>();\n  }\n\n  public void setStatus(String status) {\n    this.status = status;\n\n  }\n\n  public String getStatus() {\n    return this.status;\n  }\n\n  public GamificationData getData() {\n    return data;\n  }\n\n  public void setData(GamificationData data) {\n    this.data = data;\n  }\n\n  public int getUnreadMsgCount() {\n    return unreadMsgCount;\n  }\n\n  public void setUnreadMsgCount(int unreadMsgCount) {\n    this.unreadMsgCount = unreadMsgCount;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ChargingType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ChargingType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 795,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class ChargingType implements Serializable {\n\n  private static final Long MOBILE_CHARGING_TYPE = 3L;\n\n  private Long id;\n  private String name;\n  private String description;\n\n  public ChargingType() {}\n\n  public ChargingType(Long id) {\n    this.id = id;\n  }\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public boolean isMobileChargingType() {\n    return MOBILE_CHARGING_TYPE.equals(id);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyProfileSolvency.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartyProfileSolvency.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 449,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class PartyProfileSolvency implements Serializable {\n\t\n\tprivate static final long serialVersionUID = 1L;\n\t\n\tprivate String creditLimit;\n\t\n\tpublic PartyProfileSolvency() {\n\t\t// default constructor to support GWT parsing\n\t}\n\n\tpublic String getCreditLimit() {\n\t\treturn creditLimit;\n\t}\n\n\tpublic void setCreditLimit(String creditLimit) {\n\t\tthis.creditLimit = creditLimit;\n\t}\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InventoryProductGroup.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/InventoryProductGroup.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 814,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class InventoryProductGroup implements Serializable {\n  private Long id;\n  private String name;\n  private int order;\n  private boolean visible;\n  private boolean anb;\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public int getOrder() {\n    return order;\n  }\n\n  public void setOrder(int order) {\n    this.order = order;\n  }\n\n  public boolean isVisible() {\n    return visible;\n  }\n\n  public void setVisible(boolean visible) {\n    this.visible = visible;\n  }\n\n  public boolean isAnb() {\n    return anb;\n  }\n\n  public void setAnb(boolean anb) {\n    this.anb = anb;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartySummaryPrintModel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartySummaryPrintModel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1137,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.product.PartySummaryItem;\n\npublic class PartySummaryPrintModel implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private Party party;\n\n  public Party getParty() {\n    return party;\n  }\n\n  public void setParty(Party party) {\n    this.party = party;\n  }\n\n  public ArrayList<PartySummaryItem> getProducts() {\n    return products;\n  }\n\n  public void setProducts(ArrayList<PartySummaryItem> products) {\n    this.products = products;\n  }\n\n  public ArrayList<PartySummaryItem> getSubscriptions() {\n    return subscriptions;\n  }\n\n  public void setSubscriptions(ArrayList<PartySummaryItem> subscriptions) {\n    this.subscriptions = subscriptions;\n  }\n\n  public ArrayList<PartySummaryItem> getIctServices() {\n    return ictServices;\n  }\n\n  public void setIctServices(ArrayList<PartySummaryItem> ictServices) {\n    this.ictServices = ictServices;\n  }\n\n  ArrayList<PartySummaryItem> products;\n\n  ArrayList<PartySummaryItem> subscriptions;\n\n  ArrayList<PartySummaryItem> ictServices;\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UserInfoStatistics.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UserInfoStatistics.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1085,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class UserInfoStatistics implements Serializable {\n  private int nrOfCustomers;\n  private int nrOfExpiringBindings;\n  private int nrOfQuotes;\n  private int nrOfTasks;\n  private int nrOfOpenToDos;\n\n  public int getNrOfCustomers() {\n    return nrOfCustomers;\n  }\n\n  public void setNrOfCustomers(int nrOfCustomers) {\n    this.nrOfCustomers = nrOfCustomers;\n  }\n\n  public int getNrOfExpiringBindings() {\n    return nrOfExpiringBindings;\n  }\n\n  public void setNrOfExpiringBindings(int nrOfExpiringBindings) {\n    this.nrOfExpiringBindings = nrOfExpiringBindings;\n  }\n\n  public int getNrOfQuotes() {\n    return nrOfQuotes;\n  }\n\n  public void setNrOfQuotes(int nrOfQuotes) {\n    this.nrOfQuotes = nrOfQuotes;\n  }\n\n  public int getNrOfTasks() {\n    return nrOfTasks;\n  }\n\n  public void setNrOfTasks(int nrOfTasks) {\n    this.nrOfTasks = nrOfTasks;\n  }\n\n  public int getNrOfOpenToDos() {\n    return nrOfOpenToDos;\n  }\n\n  public void setNrOfOpenToDos(int nrOfOpenToDos) {\n    this.nrOfOpenToDos = nrOfOpenToDos;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SupportingUnit.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SupportingUnit.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1514,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class SupportingUnit implements Serializable {\n\n    public static final int ERROR = 99;\n\n    public static final int LOADING = -1;\n\n    public static final int NOT_RECEIVED = 98;\n\n    public static final int LOADED = 0;\n\n    private int status = LOADING;\n\n    private String skzText;\n\n    private String supportName;\n\n    private String emailAddress;\n\n    private String phoneNumber;\n\n    private boolean shopSupport;\n\n    public SupportingUnit() {\n\n    }\n\n    public int getStatus() {\n        return status;\n    }\n\n    public void setStatus(int status) {\n        this.status = status;\n    }\n\n    public String getSkzText() {\n        return skzText;\n    }\n\n    public void setSkzText(String skzText) {\n        this.skzText = skzText;\n    }\n\n    public String getSupportName() {\n        return supportName;\n    }\n\n    public void setSupportName(String supportName) {\n        this.supportName = supportName;\n    }\n\n    public String getEmailAddress() {\n        return emailAddress;\n    }\n\n    public void setEmailAddress(String emailAddress) {\n        this.emailAddress = emailAddress;\n    }\n\n    public String getPhoneNumber() {\n        return phoneNumber;\n    }\n\n    public void setPhoneNumber(String phoneNumber) {\n        this.phoneNumber = phoneNumber;\n    }\n\n    public boolean isShopSupport() {\n        return shopSupport;\n    }\n\n    public void setShopSupport(boolean shopSupport) {\n        this.shopSupport = shopSupport;\n    }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CMBuddyLogin.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CMBuddyLogin.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 506,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class CMBuddyLogin implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n  private String username;\n  private String password;\n\n  public String getUsername() {\n    return username;\n  }\n\n  public void setUsername(String username) {\n    this.username = username;\n  }\n\n  public String getPassword() {\n    return password;\n  }\n\n  public void setPassword(String password) {\n    this.password = password;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MyFlashInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MyFlashInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 480,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class MyFlashInfo extends FlashInfo implements Serializable {\n\n  private Long partyId;\n  private String creatorName;\n\n  public Long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(Long partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getCreatorName() {\n    return creatorName;\n  }\n\n  public void setCreatorName(String creatorName) {\n    this.creatorName = creatorName;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/VipStatus.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/VipStatus.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 733,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class VipStatus implements Serializable {\n\n  public enum State {\n    VIP, NO_VIP, UNKNOWN;\n  }\n\n  private Integer intValue;\n  private State state;\n\n  public VipStatus() {\n    state = State.UNKNOWN;\n  }\n\n  public VipStatus(State state) {\n    this.state = state;\n  }\n\n  public VipStatus(Integer intValue) {\n    this.intValue = intValue;\n    state = intValue != null ? State.VIP : State.NO_VIP;\n  }\n\n  public Integer getIntValue() {\n    return intValue;\n  }\n\n  public void setIntValue(Integer intValue) {\n    this.intValue = intValue;\n  }\n\n  public State getState() {\n    return state;\n  }\n\n  public void setState(State state) {\n    this.state = state;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductLevel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductLevel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2614,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ProductLevel implements Serializable, InventoryProductGroupAssignable {\n  private Long productLevelId;\n  private String productLevelDescription;\n  private List<ProductLevel> subProductLevels;\n  private List<Product> products;\n  private InventoryProductGroup inventoryProductGroup;\n  private ProductLevel parent;\n\n  public ProductLevel() {}\n\n  public ProductLevel(Long productLevelId, String productLevelDescription) {\n    this.productLevelId = productLevelId;\n    this.productLevelDescription = productLevelDescription;\n  }\n\n  public Long getProductLevelId() {\n    return productLevelId;\n  }\n\n  public void setProductLevelId(Long productLevelId) {\n    this.productLevelId = productLevelId;\n  }\n\n  public String getProductLevelDescription() {\n    return productLevelDescription;\n  }\n\n  public void setProductLevelDescription(String productLevelDescription) {\n    this.productLevelDescription = productLevelDescription;\n  }\n\n  public List<ProductLevel> getSubProductLevels() {\n    return subProductLevels;\n  }\n\n  public void setSubProductLevels(List<ProductLevel> subProductLevels) {\n    this.subProductLevels = subProductLevels;\n  }\n\n  public void addSubProductLevel(ProductLevel subProductLevel) {\n    if (subProductLevels == null) {\n      subProductLevels = new ArrayList<ProductLevel>();\n    }\n    subProductLevels.add(subProductLevel);\n  }\n\n  public List<Product> getProducts() {\n    return products;\n  }\n\n  public void setProducts(List<Product> products) {\n    this.products = products;\n  }\n\n  public void addProduct(Product product) {\n    if (products == null) {\n      products = new ArrayList<Product>();\n    }\n    products.add(product);\n  }\n\n  @Override\n  public String getDescription() {\n    return getProductLevelDescription();\n  }\n\n  @Override\n  public boolean equals(Object o) {\n    if (!(o instanceof ProductLevel)) {\n      return false;\n    }\n    ProductLevel productLevel = (ProductLevel) o;\n    return productLevelId.equals(productLevel.getProductLevelId());\n  }\n\n  @Override\n  public ProductLevel getParent() {\n    return parent;\n  }\n\n  public void setParent(ProductLevel parent) {\n    this.parent = parent;\n  }\n\n  @Override\n  public int hashCode() {\n    return productLevelId.hashCode();\n  }\n\n  @Override\n  public InventoryProductGroup getInventoryProductGroup() {\n    return inventoryProductGroup;\n  }\n\n  @Override\n  public void setInventoryProductGroup(InventoryProductGroup inventoryProductGroup) {\n    this.inventoryProductGroup = inventoryProductGroup;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/FlashInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/FlashInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1008,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class FlashInfo extends FlashInfoBase {\n\n  private Date from;\n  private Date to;\n  private List<CustomerBlock> customerBlocks;\n  private BiteUser creator;\n\n  public Date getFrom() {\n    return from;\n  }\n\n  public void setFrom(Date from) {\n    this.from = from;\n  }\n\n  public Date getTo() {\n    return to;\n  }\n\n  public void setTo(Date to) {\n    this.to = to;\n  }\n\n  public List<CustomerBlock> getCustomerBlocks() {\n    return customerBlocks;\n  }\n\n  public void setCustomerBlocks(List<CustomerBlock> customerBlocks) {\n    this.customerBlocks = customerBlocks;\n  }\n\n  public BiteUser getCreator() {\n    return creator;\n  }\n\n  public void setCreator(BiteUser creator) {\n    this.creator = creator;\n  }\n\n  public long getCustomerCount() {\n    long count = 0;\n    for (CustomerBlock block : customerBlocks) {\n      count += block.getCount();\n    }\n    return count;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Recipient.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Recipient.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 499,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class Recipient implements Serializable {\n  private Long recipientId;\n  private String recipientName;\n\n  public Long getRecipientId() {\n    return recipientId;\n  }\n\n  public void setRecipientId(Long recipientId) {\n    this.recipientId = recipientId;\n  }\n\n  public String getRecipientName() {\n    return recipientName;\n  }\n\n  public void setRecipientName(String recipientName) {\n    this.recipientName = recipientName;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/VIPHistoryEntry.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/VIPHistoryEntry.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1459,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class VIPHistoryEntry implements Serializable {\n  private Long vipHistoryId;\n  private Long customerId;\n  private Date created;\n  private Long userId;\n  private String name;\n  private String reported;\n  private Integer oldStatus;\n  private Integer newStatus;\n\n  public Long getVipHistoryId() {\n    return vipHistoryId;\n  }\n\n  public void setVipHistoryId(Long vipHistoryId) {\n    this.vipHistoryId = vipHistoryId;\n  }\n\n  public Long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(Long customerId) {\n    this.customerId = customerId;\n  }\n\n  public Date getCreated() {\n    return created;\n  }\n\n  public void setCreated(Date created) {\n    this.created = created;\n  }\n\n  public Long getUserId() {\n    return userId;\n  }\n\n  public void setUserId(Long userId) {\n    this.userId = userId;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getReported() {\n    return reported;\n  }\n\n  public void setReported(String reported) {\n    this.reported = reported;\n  }\n\n  public Integer getOldStatus() {\n    return oldStatus;\n  }\n\n  public void setOldStatus(Integer oldStatus) {\n    this.oldStatus = oldStatus;\n  }\n\n  public Integer getNewStatus() {\n    return newStatus;\n  }\n\n  public void setNewStatus(Integer newStatus) {\n    this.newStatus = newStatus;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartnerCenterAccessTokenRequest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PartnerCenterAccessTokenRequest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1789,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.math.BigInteger;\n\npublic class PartnerCenterAccessTokenRequest extends AccessTokenRequest {\n\n  public PartnerCenterAccessTokenRequest() {\n    super();\n  }\n\n  public PartnerCenterAccessTokenRequest(String targetSystem, String sourceSystem) {\n    super(targetSystem, sourceSystem);\n  }\n\n  public void setCountryCode(String countryCode) {\n    this.addParameter(\"cc\", countryCode);\n  }\n\n  public void setNationalDestinationCode(String nationalDesitnationCode) {\n    this.addParameter(\"ndc\", nationalDesitnationCode);\n  }\n\n  public void setSubscriberNumber(String subscriberNumber) {\n    this.addParameter(\"sn\", subscriberNumber);\n  }\n\n  public String setProcessId(String processId) {\n    return addParameter(\"processId\", processId);\n  }\n\n  public String getCountryCode() {\n    return getParameter(\"cc\");\n  }\n\n  public String getNationalDesitnationCode() {\n    return getParameter(\"ndc\");\n  }\n\n  public String getSubscriberNumber() {\n    return getParameter(\"sn\");\n  }\n\n  public String getProcessId() {\n    return getParameter(\"processId\");\n  }\n\n  public int getCountryCodeAsInt() {\n    return Integer.parseInt(getCountryCode());\n  }\n\n  public int getNationalDestinationCodeAsInt() {\n    return Integer.parseInt(getNationalDesitnationCode());\n  }\n\n  public BigInteger getSubscriberNumberAsInt() {\n    return BigInteger.valueOf(Long.valueOf(getSubscriberNumber()));\n  }\n\n  @Override\n  public String toString() {\n    return \"PartnerCenterAccessTokenRequest [countryCode=\" + getCountryCode() + \", nationalDesitnationCode=\" + getNationalDesitnationCode()\n        + \", subscriberNumber=\" + getSubscriberNumber() + \", processId=\" + getProcessId() + \", targetSystem=\" + getTargetSystem()\n        + \", sourceSystem=\" + getSourceSystem() + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/RTCode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/RTCode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 759,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class RTCode implements Serializable {\n  private String prodNum;\n  private String description;\n  private String sales;\n  private Integer months;\n\n  public String getDescription() {\n    return description;\n  }\n\n  public String getProdNum() {\n    return prodNum;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public void setProdNum(String prodNum) {\n    this.prodNum = prodNum;\n  }\n\n  public String getSales() {\n    return sales;\n  }\n\n  public void setSales(String sales) {\n    this.sales = sales;\n  }\n\n  public Integer getMonths() {\n    return months;\n  }\n\n  public void setMonths(Integer months) {\n    this.months = months;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationCuCoMessages.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationCuCoMessages.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 657,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class GamificationCuCoMessages implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private String agentId;\n\n  private List<GamificationMessage> messages = new ArrayList<GamificationMessage>();\n\n  public String getAgentId() {\n    return agentId;\n  }\n\n  public void setAgentId(String agentId) {\n    this.agentId = agentId;\n  }\n\n  public List<GamificationMessage> getMessages() {\n    return messages;\n  }\n\n  public void setMessages(List<GamificationMessage> messages) {\n    this.messages = messages;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CustomerBinding.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CustomerBinding.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3072,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.cuco.core.shared.model.AddressLinkData;\n\npublic class CustomerBinding implements Serializable {\n  private String partyId;\n  private Date contractStart;\n  private Date contractEnd;\n  private String productDescription;\n  private Customer customer;\n  private String service;\n  private String productNumber;\n  private String serviceNumber;\n  private Long aonCustomerNumber;\n  private String productCategory;\n  private String connectorSpecification;\n  private AddressLinkData location;\n  private Long contractId;\n  private int type;\n  private String indexation;\n\n  public String getProductDescription() {\n    return productDescription;\n  }\n\n  public void setProductDescription(String productDescription) {\n    this.productDescription = productDescription;\n  }\n\n  public Date getContractEnd() {\n    return contractEnd;\n  }\n\n  public void setContractEnd(Date contractEnd) {\n    this.contractEnd = contractEnd;\n  }\n\n  public Date getContractStart() {\n    return contractStart;\n  }\n\n  public void setContractStart(Date contractStart) {\n    this.contractStart = contractStart;\n  }\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n\n  public void setCustomer(Customer customer) {\n    this.customer = customer;\n  }\n\n  public Customer getCustomer() {\n    return customer;\n  }\n\n  public void setService(String service) {\n    this.service = service;\n  }\n\n  public String getService() {\n    return service;\n  }\n\n  public void setProductNumber(String productNumber) {\n    this.productNumber = productNumber;\n  }\n\n  public String getProductNumber() {\n    return productNumber;\n  }\n\n  public void setLocation(AddressLinkData location) {\n    this.location = location;\n  }\n\n  public AddressLinkData getLocation() {\n    return location;\n  }\n\n  public void setProductCategory(String productCategory) {\n    this.productCategory = productCategory;\n  }\n\n  public String getProductCategory() {\n    return productCategory;\n  }\n\n  public void setConnectorSpecification(String connectorSpecification) {\n    this.connectorSpecification = connectorSpecification;\n  }\n\n  public String getConnectorSpecification() {\n    return connectorSpecification;\n  }\n\n  public void setServiceNumber(String serviceNumber) {\n    this.serviceNumber = serviceNumber;\n  }\n\n  public String getServiceNumber() {\n    return serviceNumber;\n  }\n\n  public void setAonCustomerNumber(Long aonCustomerNumber) {\n    this.aonCustomerNumber = aonCustomerNumber;\n  }\n\n  public Long getAonCustomerNumber() {\n    return aonCustomerNumber;\n  }\n\n  public void setContractId(Long contractId) {\n    this.contractId = contractId;\n  }\n\n  public Long getContractId() {\n    return contractId;\n  }\n\n  public void setType(int type) {\n    this.type = type;\n  }\n\n  public int getType() {\n    return type;\n  }\n\n  public String getIndexation() {\n    return indexation;\n  }\n\n  public void setIndexation(String indexation) {\n    this.indexation = indexation;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Attribute.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/Attribute.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5613,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\n@SuppressWarnings(\"serial\")\npublic class Attribute implements Serializable {\n  private Long attributeId;\n  private AttributeConfig attributeConfig;\n  private Long kundeId;\n\n  /**\n   * Copy Constructor\n   * \n   * @param attribute a <code>Attribute</code> object\n   */\n  public Attribute(Attribute attribute) {\n    this.attributeId = attribute.getAttributeId();\n    this.attributeConfig = new AttributeConfig(attribute.getAttributeConfig());\n    this.kundeId = attribute.getKundeId();\n    this.booleanValue = attribute.getBooleanValue();\n    this.numberValue = attribute.getNumberValue();\n    this.lastModifier = attribute.getLastModifier();\n    this.lastUpdate = attribute.getLastUpdate();\n    this.hasHistory = attribute.isHasHistory();\n    this.textValue = attribute.textValue;\n  }\n\n  public Attribute() {\n    super();\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((attributeConfig == null) ? 0 : attributeConfig.hashCode());\n    result = prime * result + ((attributeId == null) ? 0 : attributeId.hashCode());\n    result = prime * result + ((booleanValue == null) ? 0 : booleanValue.hashCode());\n    result = prime * result + (hasHistory ? 1231 : 1237);\n    result = prime * result + ((kundeId == null) ? 0 : kundeId.hashCode());\n    result = prime * result + ((lastModifier == null) ? 0 : lastModifier.hashCode());\n    result = prime * result + ((lastUpdate == null) ? 0 : lastUpdate.hashCode());\n    result = prime * result + ((numberValue == null) ? 0 : numberValue.hashCode());\n    result = prime * result + ((textValue == null) ? 0 : textValue.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    Attribute other = (Attribute) obj;\n    if (attributeConfig == null) {\n      if (other.attributeConfig != null) {\n        return false;\n      }\n    } else if (!attributeConfig.equals(other.attributeConfig)) {\n      return false;\n    }\n    if (attributeId == null) {\n      if (other.attributeId != null) {\n        return false;\n      }\n    } else if (!attributeId.equals(other.attributeId)) {\n      return false;\n    }\n    if (booleanValue == null) {\n      if (other.booleanValue != null) {\n        return false;\n      }\n    } else if (!booleanValue.equals(other.booleanValue)) {\n      return false;\n    }\n    if (hasHistory != other.hasHistory) {\n      return false;\n    }\n    if (lastModifier == null) {\n      if (other.lastModifier != null) {\n        return false;\n      }\n    } else if (!lastModifier.equals(other.lastModifier)) {\n      return false;\n    }\n    if (lastUpdate == null) {\n      if (other.lastUpdate != null) {\n        return false;\n      }\n    } else if (!lastUpdate.equals(other.lastUpdate)) {\n      return false;\n    }\n    if (numberValue == null) {\n      if (other.numberValue != null) {\n        return false;\n      }\n    } else if (!numberValue.equals(other.numberValue)) {\n      return false;\n    }\n    if (textValue == null) {\n      if (other.textValue != null) {\n        return false;\n      }\n    } else if (!textValue.equals(other.textValue)) {\n      return false;\n    }\n    return true;\n  }\n\n  private Boolean booleanValue;\n  private Integer numberValue;\n  private BiteUser lastModifier;\n  private Date lastUpdate;\n  private String textValue;\n  private boolean hasHistory;\n\n  public Long getAttributeId() {\n    return attributeId;\n  }\n\n  public void setAttributeId(Long attributeId) {\n    this.attributeId = attributeId;\n  }\n\n  public AttributeConfig getAttributeConfig() {\n    return attributeConfig;\n  }\n\n  public void setAttributeConfig(AttributeConfig attributeConfig) {\n    this.attributeConfig = attributeConfig;\n  }\n\n  public Long getKundeId() {\n    return kundeId;\n  }\n\n  public void setKundeId(Long kundeId) {\n    this.kundeId = kundeId;\n  }\n\n  public Boolean getBooleanValue() {\n    return booleanValue;\n  }\n\n  public boolean getNSBooleanValue() {\n    return booleanValue == null ? false : booleanValue.booleanValue();\n  }\n\n  public void setBooleanValue(Boolean booleanValue) {\n    this.booleanValue = booleanValue;\n  }\n\n  public Integer getNumberValue() {\n    return numberValue;\n  }\n\n  public int getNSNumberValue() {\n    return numberValue == null ? 0 : numberValue.intValue();\n  }\n\n  public void setNumberValue(Integer numberValue) {\n    this.numberValue = numberValue;\n  }\n\n  public BiteUser getLastModifier() {\n    return lastModifier;\n  }\n\n  public void setLastModifier(BiteUser lastModifier) {\n    this.lastModifier = lastModifier;\n  }\n\n  public Date getLastUpdate() {\n    return lastUpdate;\n  }\n\n  public void setLastUpdate(Date lastUpdate) {\n    this.lastUpdate = lastUpdate;\n  }\n\n  public boolean isHasHistory() {\n    return hasHistory;\n  }\n\n  public void setHasHistory(boolean hasHistory) {\n    this.hasHistory = hasHistory;\n  }\n\n  public String getTextValue() {\n    return textValue;\n  }\n\n  public void setTextValue(String textValue) {\n    this.textValue = textValue;\n  }\n\n  @Override\n  public String toString() {\n    return \"Attribute [attributeId=\" + attributeId + \", attributeConfig=\" + attributeConfig + \", kundeId=\" + kundeId + \", booleanValue=\" + booleanValue + \", numberValue=\" + numberValue\n        + \", lastModifier=\" + lastModifier + \", lastUpdate=\" + lastUpdate + \", textValue=\" + textValue + \", hasHistory=\" + hasHistory + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MatrixData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/MatrixData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2263,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class MatrixData implements Serializable {\n  private ArrayList<Segment> segments;\n  private ArrayList<Category> categories;\n  private HashMap<Long, HashMap<Long, ArrayList<ProductGroup>>> matrixData = new HashMap<Long, HashMap<Long, ArrayList<ProductGroup>>>();\n  private long partyId;\n\n  public MatrixData() {}\n\n  public MatrixData(ArrayList<Segment> segments, ArrayList<Category> categories) {\n    this.segments = segments;\n    this.categories = categories;\n  }\n\n  public void setMatrixData(ArrayList<MatrixPosition<ProductGroup>> groups) {\n    for (MatrixPosition<ProductGroup> posGroup : groups) {\n      ProductGroup group = posGroup.getObject();\n      addMatrixData(posGroup.getSegment(), posGroup.getCategory(), group);\n    }\n  }\n\n  private void addMatrixData(long segment, long category, ProductGroup prodGroup) {\n    HashMap<Long, ArrayList<ProductGroup>> mapOfCategories = matrixData.get(segment); // contains the categories of a\n    // segment\n\n    if (mapOfCategories == null) {\n      mapOfCategories = new HashMap<Long, ArrayList<ProductGroup>>();\n      matrixData.put(segment, mapOfCategories);\n    }\n\n    ArrayList<ProductGroup> entries = mapOfCategories.get(category); // contains all productgroups of a matrixentry\n    if (entries == null) {\n      entries = new ArrayList<ProductGroup>();\n      mapOfCategories.put(category, entries);\n    }\n\n    entries.add(prodGroup);\n  }\n\n  public ArrayList<ProductGroup> getProductgroups(long segment, long category) {\n    try {\n      ArrayList<ProductGroup> ret = matrixData.get(segment).get(category);\n      // check if ret is null to get no nullpointer exception if the calling class whant's so access the list\n      if (ret == null) {\n        return new ArrayList<ProductGroup>();\n      }\n      return ret;\n    } catch (NullPointerException e) {\n      return new ArrayList<ProductGroup>();\n    }\n  }\n\n  public ArrayList<Segment> getSegments() {\n    return segments;\n  }\n\n  public ArrayList<Category> getCategories() {\n    return categories;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/FlashInfoBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/FlashInfoBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1564,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\n\npublic class FlashInfoBase implements Serializable {\n  private long id = -1;\n  private String title;\n  private String text;\n  private boolean active;\n  private boolean popup;\n  private List<Role> roles;\n  private boolean viewed;\n\n  public FlashInfoBase() {\n    super();\n  }\n\n  public FlashInfoBase(long id, String title, String text, boolean active, boolean popup, List<Role> roles, boolean viewed) {\n    super();\n    this.id = id;\n    this.title = title;\n    this.text = text;\n    this.active = active;\n    this.popup = popup;\n    this.roles = roles;\n    this.viewed = viewed;\n  }\n\n  public long getId() {\n    return id;\n  }\n\n  public void setId(long id) {\n    this.id = id;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public void setTitle(String title) {\n    this.title = title;\n  }\n\n  public String getText() {\n    return text;\n  }\n\n  public void setText(String text) {\n    this.text = text;\n  }\n\n  public boolean isActive() {\n    return active;\n  }\n\n  public void setActive(boolean active) {\n    this.active = active;\n  }\n\n  public boolean isPopup() {\n    return popup;\n  }\n\n  public void setPopup(boolean popup) {\n    this.popup = popup;\n  }\n\n  public List<Role> getRoles() {\n    return roles;\n  }\n\n  public void setRoles(List<Role> roles) {\n    this.roles = roles;\n  }\n\n  public boolean isViewed() {\n    return viewed;\n  }\n\n  public void setViewed(boolean viewed) {\n    this.viewed = viewed;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/KumsCustomerInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/KumsCustomerInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 510,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class KumsCustomerInfo implements Serializable {\n  private Integer vipStatus;\n  private String lastChangeDate;\n\n  public Integer getVipStatus() {\n    return vipStatus;\n  }\n\n  public void setVipStatus(Integer vipStatus) {\n    this.vipStatus = vipStatus;\n  }\n\n  public String getLastChangeDate() {\n    return lastChangeDate;\n  }\n\n  public void setLastChangeDate(String lastChangeDate) {\n    this.lastChangeDate = lastChangeDate;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PayableTicket.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PayableTicket.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3925,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class PayableTicket implements Serializable {\n\n  private Long id;\n  private Long customerId;\n  private String ban;\n  private String lknz;\n  private String onkz;\n  private String number;\n  private Service service;\n  private String comment;\n  private BiteUser agent;\n  private Date exportedDate;\n  private Long clearingAccountNumber;\n  private Date createDate;\n  private Double costs;\n  private Party party;\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public Long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(Long customerId) {\n    this.customerId = customerId;\n  }\n\n  public String getOnkz() {\n    return onkz;\n  }\n\n  public void setOnkz(String onkz) {\n    this.onkz = onkz;\n  }\n\n  public String getNumber() {\n    return number;\n  }\n\n  public void setNumber(String number) {\n    this.number = number;\n  }\n\n  public Service getService() {\n    return service;\n  }\n\n  public void setService(Service service) {\n    this.service = service;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BiteUser getAgent() {\n    return agent;\n  }\n\n  public void setAgent(BiteUser agent) {\n    this.agent = agent;\n  }\n\n  public Date getExportedDate() {\n    return exportedDate;\n  }\n\n  public void setExportedDate(Date exportedDate) {\n    this.exportedDate = exportedDate;\n  }\n\n  public Long getClearingAccountNumber() {\n    return clearingAccountNumber;\n  }\n\n  public void setClearingAccountNumber(Long clearingAccountNumber) {\n    this.clearingAccountNumber = clearingAccountNumber;\n  }\n\n  public void setCreateDate(Date createDate) {\n    this.createDate = createDate;\n  }\n\n  public Date getCreateDate() {\n    return createDate;\n  }\n\n  public void setCosts(Double costs) {\n    this.costs = costs;\n  }\n\n  public Double getCosts() {\n    return costs;\n  }\n\n  public Party getParty() {\n    return party;\n  }\n\n  public void setParty(Party party) {\n    this.party = party;\n  }\n\n  @Override\n  public int hashCode() {\n    return super.hashCode();\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (!(obj instanceof PayableTicket)) {\n      return false;\n    }\n    PayableTicket other = (PayableTicket) obj;\n    return id.equals(other.id);\n  }\n\n  public static Builder builder() {\n    return new Builder();\n  }\n\n  public void setBan(String ban) {\n    this.ban = ban;\n  }\n\n  public String getBan() {\n    return ban;\n  }\n\n  public void setLknz(String lknz) {\n    this.lknz = lknz;\n  }\n\n  public String getLknz() {\n    return lknz;\n  }\n\n  public static class Builder {\n\n    private PayableTicket ticket;\n\n    public Builder() {\n      ticket = new PayableTicket();\n      ticket.createDate = new Date();\n    }\n\n    public Builder forPhoneNumber(PhoneNumber phoneNumber) {\n      ticket.setLknz(phoneNumber.getCountryIdentificationNumber());\n      ticket.onkz = phoneNumber.getCityIdentificationNumber();\n      ticket.number = phoneNumber.getSubscriberNumber();\n      ticket.setBan(phoneNumber.getBanId());\n      return this;\n    }\n\n    public Builder withProductCode(String productCode) {\n      getService().setProductCode(productCode);\n      return this;\n    }\n\n    public Builder disposeExpenses(Double amount) {\n      ticket.costs = amount;\n      return this;\n    }\n\n    public Builder createdBy(BiteUser user) {\n      ticket.agent = user;\n      return this;\n    }\n\n    public Builder chargedAs(ChargingType charging) {\n      getService().setChargingType(charging);\n      return this;\n    }\n\n    private Service getService() {\n      if (ticket.service == null) {\n        ticket.service = new Service();\n      }\n      return ticket.service;\n    }\n\n    public PayableTicket build() {\n      return ticket;\n    }\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SimplePage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/SimplePage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 758,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class SimplePage<T> implements Serializable {\n\n  private long count;\n  private ArrayList<T> content;\n  private boolean isInputValid = true;\n\n  public SimplePage() {}\n\n  public long getCount() {\n    return count;\n  }\n\n  public void setCount(long count) {\n    this.count = count;\n  }\n\n  public ArrayList<T> getContent() {\n    if (content == null) {\n      return new ArrayList<T>();\n    }\n    return content;\n  }\n\n  public void setContent(ArrayList<T> content) {\n    this.content = content;\n  }\n\n  public void setInputValid(boolean isInputValid) {\n    this.isInputValid = isInputValid;\n  }\n\n  public boolean isInputValid() {\n    return isInputValid;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CuCoGamificationLoginMessage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CuCoGamificationLoginMessage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 817,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class CuCoGamificationLoginMessage implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n  private String messageType;\n  private String id;\n  private String pswd;\n  private String sessionKey;\n\n  public String getMessageType() {\n    return messageType;\n  }\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public String getPswd() {\n    return pswd;\n  }\n\n  public void setPswd(String pswd) {\n    this.pswd = pswd;\n  }\n\n  public void setMessageType(String messageType) {\n    this.messageType = messageType;\n  }\n\n  public String getSessionKey() {\n    return sessionKey;\n  }\n\n  public void setSessionKey(String sessionKey) {\n    this.sessionKey = sessionKey;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UserAdminSegment.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UserAdminSegment.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1109,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class UserAdminSegment implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String featureSeg1;\n  private String featureSeg2;\n  private String featureSeg3;\n  private String featureSeg4;\n  private String featureSeg5;\n\n  public String getFeatureSeg1() {\n    return featureSeg1;\n  }\n\n  public void setFeatureSeg1(String featureSeg1) {\n    this.featureSeg1 = featureSeg1;\n  }\n\n  public String getFeatureSeg2() {\n    return featureSeg2;\n  }\n\n  public void setFeatureSeg2(String featureSeg2) {\n    this.featureSeg2 = featureSeg2;\n  }\n\n  public String getFeatureSeg3() {\n    return featureSeg3;\n  }\n\n  public void setFeatureSeg3(String featureSeg3) {\n    this.featureSeg3 = featureSeg3;\n  }\n\n  public String getFeatureSeg4() {\n    return featureSeg4;\n  }\n\n  public void setFeatureSeg4(String featureSeg4) {\n    this.featureSeg4 = featureSeg4;\n  }\n\n  public String getFeatureSeg5() {\n    return featureSeg5;\n  }\n\n  public void setFeatureSeg5(String featureSeg5) {\n    this.featureSeg5 = featureSeg5;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ImageSize.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ImageSize.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 700,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class ImageSize implements Serializable {\n  private Long id;\n  private String name;\n  private Long width;\n  private Long height;\n\n  public Long getHeight() {\n    return this.height;\n  }\n\n  public Long getId() {\n    return this.id;\n  }\n\n  public String getName() {\n    return this.name;\n  }\n\n  public Long getWidth() {\n    return this.width;\n  }\n\n  public void setHeight(final Long height) {\n    this.height = height;\n  }\n\n  public void setId(final Long id) {\n    this.id = id;\n  }\n\n  public void setName(final String name) {\n    this.name = name;\n  }\n\n  public void setWidth(final Long width) {\n    this.width = width;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductHierarchy.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductHierarchy.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2475,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class ProductHierarchy implements Serializable {\n  private String productId;\n  private String productDescription;\n  private Long productLevel1Id;\n  private String productLevel1Description;\n  private Long productLevel2Id;\n  private String productLevel2Description;\n  private Long productLevel3Id;\n  private String productLevel3Description;\n  private Long productLevel4Id;\n  private String productLevel4Description;\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n\n  public String getProductDescription() {\n    return productDescription;\n  }\n\n  public void setProductDescription(String productDescription) {\n    this.productDescription = productDescription;\n  }\n\n  public Long getProductLevel1Id() {\n    return productLevel1Id;\n  }\n\n  public void setProductLevel1Id(Long productLevel1Id) {\n    this.productLevel1Id = productLevel1Id;\n  }\n\n  public String getProductLevel1Description() {\n    return productLevel1Description;\n  }\n\n  public void setProductLevel1Description(String productLevel1Description) {\n    this.productLevel1Description = productLevel1Description;\n  }\n\n  public Long getProductLevel2Id() {\n    return productLevel2Id;\n  }\n\n  public void setProductLevel2Id(Long productLevel2Id) {\n    this.productLevel2Id = productLevel2Id;\n  }\n\n  public String getProductLevel2Description() {\n    return productLevel2Description;\n  }\n\n  public void setProductLevel2Description(String productLevel2Description) {\n    this.productLevel2Description = productLevel2Description;\n  }\n\n  public Long getProductLevel3Id() {\n    return productLevel3Id;\n  }\n\n  public void setProductLevel3Id(Long productLevel3Id) {\n    this.productLevel3Id = productLevel3Id;\n  }\n\n  public String getProductLevel3Description() {\n    return productLevel3Description;\n  }\n\n  public void setProductLevel3Description(String productLevel3Description) {\n    this.productLevel3Description = productLevel3Description;\n  }\n\n  public Long getProductLevel4Id() {\n    return productLevel4Id;\n  }\n\n  public void setProductLevel4Id(Long productLevel4Id) {\n    this.productLevel4Id = productLevel4Id;\n  }\n\n  public String getProductLevel4Description() {\n    return productLevel4Description;\n  }\n\n  public void setProductLevel4Description(String productLevel4Description) {\n    this.productLevel4Description = productLevel4Description;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CrmAuthenticationPasswordInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CrmAuthenticationPasswordInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 702,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class CrmAuthenticationPasswordInfo implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private String value;\n  private String type;\n\n  public CrmAuthenticationPasswordInfo() {}\n\n  public String getValue() {\n    return value;\n  }\n\n  public void setValue(String value) {\n    this.value = value;\n  }\n\n  public String getType() {\n    return type;\n  }\n\n  public void setType(String type) {\n    this.type = type;\n  }\n\n  public CrmAuthenticationPasswordInfo(String value, String string) {\n\n    this.value = value;\n    this.type = string;\n  }\n\n  public String getPassword() {\n    return getValue();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductOverviewConfigurations.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductOverviewConfigurations.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1220,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class ProductOverviewConfigurations implements Serializable {\n  private String amountOfSubscriptionToPreload;\n  private String depthOfProductTree;\n  private String mode;\n  private String whitelist;\n  private String blacklist;\n  private static final long serialVersionUID = 1L;\n\n  public String getAmountOfSubscriptionToPreload() {\n    return amountOfSubscriptionToPreload;\n  }\n\n  public void setAmountOfSubscriptionToPreload(String amountOfSubscriptionToPreload) {\n    this.amountOfSubscriptionToPreload = amountOfSubscriptionToPreload;\n  }\n\n  public String getDepthOfProductTree() {\n    return depthOfProductTree;\n  }\n\n  public void setDepthOfProductTree(String depthOfProductTree) {\n    this.depthOfProductTree = depthOfProductTree;\n  }\n\n  public String getMode() {\n    return mode;\n  }\n\n  public void setMode(String mode) {\n    this.mode = mode;\n  }\n\n  public String getWhitelist() {\n    return whitelist;\n  }\n\n  public void setWhitelist(String whitelist) {\n    this.whitelist = whitelist;\n  }\n\n  public String getBlacklist() {\n    return blacklist;\n  }\n\n  public void setBlacklist(String blacklist) {\n    this.blacklist = blacklist;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CustomerInteractionAttributes.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/CustomerInteractionAttributes.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 375,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\npublic enum CustomerInteractionAttributes {\n  PRODUCT, REASON1, REASON2, REASON3, RESULT, NOTE;\n\n  public static CustomerInteractionAttributes find(String string) {\n    for (CustomerInteractionAttributes attribute : values()) {\n      if (attribute.name().equals(string)) {\n        return attribute;\n      }\n    }\n    return null;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BillingCycle.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/BillingCycle.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 558,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\nimport java.util.List;\n\npublic class BillingCycle implements Serializable {\n  private Date billingDate;\n  private List<BillingCycleEntry> entries;\n\n  public Date getBillingDate() {\n    return billingDate;\n  }\n\n  public void setBillingDate(Date billingDate) {\n    this.billingDate = billingDate;\n  }\n\n  public void setEntries(List<BillingCycleEntry> entries) {\n    this.entries = entries;\n  }\n\n  public List<BillingCycleEntry> getEntries() {\n    return entries;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UserShopAssignment.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UserShopAssignment.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 663,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class UserShopAssignment implements Serializable {\n  \n  private String userName; \n  private String shopID;\n  \n  public UserShopAssignment() \n  {\n    this.userName = \"\";\n    this.shopID = \"\";\n  }\n  \n  public UserShopAssignment(String userName, String shopID) {\n    this.userName = userName; \n    this.shopID = shopID;\n  }\n  \n  public String getUserName() {\n    return userName;\n  }\n  public void setUserName(String userName) {\n    this.userName = userName;\n  }\n  public String getShopID() {\n    return shopID;\n  }\n  public void setShopID(String shopID) {\n    this.shopID = shopID;\n  } \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PhoneNumber.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/PhoneNumber.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4067,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class PhoneNumber implements Serializable {\n  private Boolean broadbandPossible;\n  private String cityIdentificationNumber;\n  private String connectorSpecification;\n  private Long contractNumber;\n  private String countryIdentificationNumber;\n  private Long customerId;\n  private String unlistedNumberIdentification;\n  private Long locationId;\n  private Float maxDownloadRate;\n  private Float maxUploadRate;\n  private Short nrSTBPossible;\n  private String subscriberNumber;\n  private String tarifDescription;\n  private Boolean tvPossible;\n  private String phoneNumberSystemCd;\n  private String banId;\n  private String indexation;\n\n  public Boolean getBroadbandPossible() {\n    return broadbandPossible;\n  }\n\n  public void setBroadbandPossible(Boolean broadbandPossible) {\n    this.broadbandPossible = broadbandPossible;\n  }\n\n  public String getCityIdentificationNumber() {\n    return cityIdentificationNumber;\n  }\n\n  public void setCityIdentificationNumber(String cityIdentificationNumber) {\n    this.cityIdentificationNumber = cityIdentificationNumber;\n  }\n\n  public String getConnectorSpecification() {\n    return connectorSpecification;\n  }\n\n  public void setConnectorSpecification(String connectorSpecification) {\n    this.connectorSpecification = connectorSpecification;\n  }\n\n  public Long getContractNumber() {\n    return contractNumber;\n  }\n\n  public void setContractNumber(Long contractNumber) {\n    this.contractNumber = contractNumber;\n  }\n\n  public String getCountryIdentificationNumber() {\n    return countryIdentificationNumber;\n  }\n\n  public void setCountryIdentificationNumber(String countryIdentificationNumber) {\n    this.countryIdentificationNumber = countryIdentificationNumber;\n  }\n\n  public Long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(Long customerId) {\n    this.customerId = customerId;\n  }\n\n  public Boolean getIsUnlistedNumber() {\n    if (this.unlistedNumberIdentification == null || this.unlistedNumberIdentification.equalsIgnoreCase(\"n\")) {\n      return Boolean.FALSE;\n    }\n    return Boolean.TRUE;\n  }\n\n  public Long getLocationId() {\n    return locationId;\n  }\n\n  public void setLocationId(Long locationId) {\n    this.locationId = locationId;\n  }\n\n  public Float getMaxDownloadRate() {\n    return maxDownloadRate;\n  }\n\n  public void setMaxDownloadRate(Float maxDownloadRate) {\n    this.maxDownloadRate = maxDownloadRate;\n  }\n\n  public Short getNrSTBPossible() {\n    return nrSTBPossible;\n  }\n\n  public void setNrSTBPossible(Short nrSTBPossible) {\n    this.nrSTBPossible = nrSTBPossible;\n  }\n\n  public String getSubscriberNumber() {\n    return subscriberNumber;\n  }\n\n  public void setSubscriberNumber(String subscriberNumber) {\n    this.subscriberNumber = subscriberNumber;\n  }\n\n  public String getTarifDescription() {\n    return tarifDescription;\n  }\n\n  public void setTarifDescription(String tarifDescription) {\n    this.tarifDescription = tarifDescription;\n  }\n\n  public Boolean getTvPossible() {\n    return tvPossible;\n  }\n\n  public void setTvPossible(Boolean tvPossible) {\n    this.tvPossible = tvPossible;\n  }\n\n  public Float getMaxUploadRate() {\n    return maxUploadRate;\n  }\n\n  public void setMaxUploadRate(Float maxUploadRate) {\n    this.maxUploadRate = maxUploadRate;\n  }\n\n  public String getUnlistedNumberIdentification() {\n    return unlistedNumberIdentification;\n  }\n\n  public void setUnlistedNumberIdentification(String unlistedNumberIdentification) {\n    this.unlistedNumberIdentification = unlistedNumberIdentification;\n  }\n\n  public String getPhoneNumberSystemCd() {\n    return phoneNumberSystemCd;\n  }\n\n  public void setPhoneNumberSystemCd(final String phoneNumberSystemCd) {\n    this.phoneNumberSystemCd = phoneNumberSystemCd;\n  }\n\n  public void setBanId(String banId) {\n    this.banId = banId;\n  }\n\n  public String getBanId() {\n    return banId;\n  }\n\n  public String getIndexation() {\n    return indexation;\n  }\n\n  public void setIndexation(final String indexation) {\n    this.indexation = indexation;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationMessage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/GamificationMessage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2535,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class GamificationMessage implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n\n  private String url;\n\n  private String messageUid;\n\n  private String timestamp;\n\n  private Date timestampDateFormat;\n\n  private String type;\n\n  private String title;\n\n  private String message;\n\n  private String agentUserId;\n\n  private boolean readByAgent = false;\n\n  public String getUrl() {\n    return url;\n  }\n\n  public void setUrl(String url) {\n    this.url = url;\n  }\n\n  public String getMessageUid() {\n    return messageUid;\n  }\n\n  public void setMessageUid(String messageUid) {\n    this.messageUid = messageUid;\n  }\n\n  public String getTimestamp() {\n    return timestamp;\n  }\n\n  public void setTimestamp(String timestamp) {\n    this.timestamp = timestamp;\n  }\n\n  public String getType() {\n    return type;\n  }\n\n  public void setType(String type) {\n    this.type = type;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public void setTitle(String title) {\n    this.title = title;\n  }\n\n  public String getMessage() {\n    return message;\n  }\n\n  public void setMessage(String message) {\n    this.message = message;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((messageUid == null) ? 0 : messageUid.hashCode());\n    result = prime * result + ((type == null) ? 0 : type.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass() != obj.getClass()) return false;\n    GamificationMessage other = (GamificationMessage) obj;\n    if (messageUid == null) {\n      if (other.messageUid != null) return false;\n    } else if (!messageUid.equals(other.messageUid)) return false;\n    if (type == null) {\n      if (other.type != null) return false;\n    } else if (!type.equals(other.type)) return false;\n    return true;\n  }\n\n  public String getAgentUserId() {\n    return agentUserId;\n  }\n\n  public void setAgentUserId(String agentUserId) {\n    this.agentUserId = agentUserId;\n  }\n\n  public boolean isReadByAgent() {\n    return readByAgent;\n  }\n\n  public void setReadByAgent(boolean readByAgent) {\n    this.readByAgent = readByAgent;\n  }\n\n  public Date getTimestampDateFormat() {\n    return timestampDateFormat;\n  }\n\n  public void setTimestampDateFormat(Date timestampDateFormat) {\n    this.timestampDateFormat = timestampDateFormat;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/OpportunityFilter.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/OpportunityFilter.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4007,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.util.Date;\n\npublic class OpportunityFilter {\n\n  public enum FilterType {\n    ALL, MYQUOTES, MYAPPROVINGS, MYCUSTOMERS\n  };\n\n  public static final String QUOTE_NUMBER = \"QUOTENUMBER\";\n  public static final String FILTER_TYPE = \"FILTERTYPE\";\n  public static final String PARTY_ID = \"PARTY_ID\";\n  public static final String FIRST_NAME = \"FIRSTNAME\";\n  public static final String LAST_NAME = \"LASTNAME\";\n  public static final String CREATOR = \"CREATOR\";\n  public static final String LAST_MODIFIER = \"LAST_MODIFIER\";\n  public static final String LAST_MOD_DATE = \"LAST_MOD_DATE\";\n  public static final String PRODUCT_OFFERING_NAME = \"PRODUCTOFFERINGNAME\";\n  public static final String STATUS = \"STATUS\";\n  public static final String CREATE_DATE = \"CREATEDATE\";\n  public static final String VALID_TO_DATE = \"VALIDTODATE\";\n  public static final String TITLE = \"NOTE_TEXT\";\n  public static final String ASSIGNEE = \"ASSIGNEE\";\n\n  private String quoteNumber;\n  private FilterType filterType;\n  private Long userId;\n  private Long clearanceUserId;\n  private String betreuer;\n  private String partyId;\n  private String firstName;\n  private String lastName;\n  private String creator;\n  private String lastModifier;\n  private String title;\n  private String assignee;\n  private Date lastModDate;\n  private ProductOffering productOfferingName;\n  private Salesstage.Status status;\n  private Date createDate;\n  private Date validToDate;\n\n  public void setPartyId(String partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getPartyId() {\n    return partyId;\n  }\n\n  public String getQuoteNumber() {\n    return quoteNumber;\n  }\n\n  public void setQuoteNumber(String quoteNumber) {\n    this.quoteNumber = quoteNumber;\n  }\n\n  public String getFirstName() {\n    return firstName;\n  }\n\n  public void setFirstName(String firstName) {\n    this.firstName = firstName;\n  }\n\n  public String getLastName() {\n    return lastName;\n  }\n\n  public void setLastName(String lastName) {\n    this.lastName = lastName;\n  }\n\n  public ProductOffering getProductOfferingName() {\n    return productOfferingName;\n  }\n\n  public void setProductOfferingName(ProductOffering productOfferingName) {\n    this.productOfferingName = productOfferingName;\n  }\n\n  public Date getCreateDate() {\n    return createDate;\n  }\n\n  public void setCreateDate(Date createDate) {\n    this.createDate = createDate;\n  }\n\n  public Date getValidToDate() {\n    return validToDate;\n  }\n\n  public void setValidToDate(Date validToDate) {\n    this.validToDate = validToDate;\n  }\n\n  public Salesstage.Status getStatus() {\n    return status;\n  }\n\n  public void setStatus(Salesstage.Status status) {\n    this.status = status;\n  }\n\n  public Long getUserId() {\n    return userId;\n  }\n\n  public void setUserId(Long userId) {\n    this.userId = userId;\n  }\n\n  public String getCreator() {\n    return creator;\n  }\n\n  public void setCreator(String creator) {\n    this.creator = creator;\n  }\n\n  public String getLastModifier() {\n    return lastModifier;\n  }\n\n  public void setLastModifier(String lastModifier) {\n    this.lastModifier = lastModifier;\n  }\n\n  public FilterType getFilterType() {\n    return filterType;\n  }\n\n  public void setFilterType(FilterType filterType) {\n    this.filterType = filterType;\n  }\n\n  public String getBetreuer() {\n    return betreuer;\n  }\n\n  public void setBetreuer(String betreuer) {\n    this.betreuer = betreuer;\n  }\n\n  public Date getLastModDate() {\n    return lastModDate;\n  }\n\n  public void setLastModDate(Date lastModDate) {\n    this.lastModDate = lastModDate;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public void setTitle(String title) {\n    this.title = title;\n  }\n\n  public String getAssignee() {\n    return assignee;\n  }\n\n  public void setAssignee(String assignee) {\n    this.assignee = assignee;\n  }\n\n  public Long getClearanceUserId() {\n    return clearanceUserId;\n  }\n\n  public void setClearanceUserId(Long clearanceUserId) {\n    this.clearanceUserId = clearanceUserId;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UserShopAssignmentLogLine.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/UserShopAssignmentLogLine.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 694,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class UserShopAssignmentLogLine implements Serializable {\n  \n  private String userName;\n  private String logText;\n  \n  public UserShopAssignmentLogLine()\n  {\n    this.userName = \"\";\n    this.logText = \"\";\n  }\n  \n  public UserShopAssignmentLogLine(String userName, String logText) {\n    this.userName = userName; \n    this.logText = logText;\n  }\n  \n  public String getUsername() {\n    return userName;\n  }\n  public void setUsername(String username) {\n    this.userName = username;\n  }\n  public String getLogText() {\n    return logText;\n  }\n  public void setLogtext(String logText) {\n    this.logText = logText;\n  }  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AccessTokenRequest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/AccessTokenRequest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1599,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.Map.Entry;\nimport java.util.Set;\n\npublic class AccessTokenRequest implements Iterable<Entry<String, String>>, Serializable {\n\n  private String targetSystem;\n  private String sourceSystem;\n\n  private HashMap<String, String> parameters = new HashMap<String, String>();\n\n  public AccessTokenRequest() {}\n\n  public AccessTokenRequest(String targetSystem, String sourceSystem) {\n    super();\n    this.targetSystem = targetSystem;\n    this.sourceSystem = sourceSystem;\n  }\n\n  public String getTargetSystem() {\n    return targetSystem;\n  }\n\n  public void setTargetSystem(String targetSystem) {\n    this.targetSystem = targetSystem;\n  }\n\n  public String getSourceSystem() {\n    return sourceSystem;\n  }\n\n  public void setSourceSystem(String sourceSystem) {\n    this.sourceSystem = sourceSystem;\n  }\n\n  public boolean hasParameters() {\n    return parameters.isEmpty();\n  }\n\n  public String getParameter(String key) {\n    return parameters.get(key);\n  }\n\n  public boolean containsParameter(String key) {\n    return parameters.containsKey(key);\n  }\n\n  public String addParameter(String key, String value) {\n    return parameters.put(key, value);\n  }\n\n  public Collection<String> getParameters() {\n    return parameters.values();\n  }\n\n  public Set<Entry<String, String>> getParameterSet() {\n    return parameters.entrySet();\n  }\n\n  @Override\n  public Iterator<Entry<String, String>> iterator() {\n    return getParameterSet().iterator();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductFeasibility.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/ProductFeasibility.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1080,
    "content": "package at.a1ta.cuco.core.shared.dto;\n\nimport java.io.Serializable;\n\npublic class ProductFeasibility implements Serializable {\n  private String productId;\n  private String displayName;\n  private ProductFeasibilityStatus status;\n\n  public ProductFeasibility() {}\n\n  public ProductFeasibility(String productId, String displayName, ProductFeasibilityStatus status) {\n    this.productId = productId;\n    this.displayName = displayName;\n    this.status = status;\n  }\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n\n  public String getDisplayName() {\n    return displayName;\n  }\n\n  public void setDisplayName(String displayName) {\n    this.displayName = displayName;\n  }\n\n  public ProductFeasibilityStatus getStatus() {\n    return status;\n  }\n\n  public void setStatus(ProductFeasibilityStatus status) {\n    this.status = status;\n  }\n\n  @Override\n  public String toString() {\n    return getClass() + \": productId=\" + productId + \"; displayName=\" + displayName + \"; status=\" + status;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/freeunits/FreeUnits.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/freeunits/FreeUnits.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3588,
    "content": "package at.a1ta.cuco.core.shared.dto.freeunits;\n\nimport java.io.Serializable;\nimport java.math.BigInteger;\n\n@SuppressWarnings(\"serial\")\npublic class FreeUnits implements Serializable {\n  public static final String ACCUMULATOR_UNIT_MIN = \"Min\";\n  private static final String ACCUMULATOR_UNIT_SEC = \"Sec\";\n  private static final String ACCUMULATOR_UNIT_MSEC = \"Msec\";\n  private static final String ACCUMULATOR_UNIT_PULSE = \"Pulse\";\n\n  private static final BigInteger ACCUMULATOR_MIN_DIVIDE = BigInteger.valueOf(1);\n  private static final BigInteger ACCUMULATOR_SEC_DIVIDE = BigInteger.valueOf(60);\n  private static final BigInteger ACCUMULATOR_MSEC_DIVIDE = BigInteger.valueOf(60000);\n  private static final BigInteger ACCUMULATOR_DEFAULT_DIVIDE = ACCUMULATOR_MIN_DIVIDE;\n\n  private String tnvId;\n  private String sidId;\n  private String productDescription;\n  private BigInteger maximumValue;\n  private String unit;\n  private BigInteger usedValue;\n  private String lastUpdateDate;\n\n  public FreeUnits() {}\n\n  public FreeUnits(final String unit, final long usedValue, final long maximumValue) {\n    this.unit = unit;\n    this.usedValue = BigInteger.valueOf(usedValue);\n    this.maximumValue = BigInteger.valueOf(maximumValue);\n  }\n\n  public String getTnvId() {\n    return tnvId;\n  }\n\n  public void setTnvId(final String tnvId) {\n    this.tnvId = tnvId;\n  }\n\n  public String getSidId() {\n    return sidId;\n  }\n\n  public void setSidId(final String sidId) {\n    this.sidId = sidId;\n  }\n\n  public String getProductDescription() {\n    return productDescription;\n  }\n\n  public void setProductDescription(final String productDescription) {\n    this.productDescription = productDescription;\n  }\n\n  public BigInteger getMaximumValue() {\n    return maximumValue;\n  }\n\n  public void setMaximumValue(final BigInteger maximumValue) {\n    this.maximumValue = maximumValue;\n  }\n\n  public String getUnit() {\n    return unit;\n  }\n\n  public void setUnit(final String unit) {\n    this.unit = unit;\n  }\n\n  public BigInteger getUsedValue() {\n    return usedValue;\n  }\n\n  public void setUsedValue(final BigInteger usedValue) {\n    this.usedValue = usedValue;\n  }\n\n  public String getLastUpdateDate() {\n    return lastUpdateDate;\n  }\n\n  public void setLastUpdateDate(final String lastUpdateDate) {\n    this.lastUpdateDate = lastUpdateDate;\n  }\n\n  public BigInteger getUsedMinutes() {\n    return calculateMinutesValue(unit, usedValue);\n  }\n\n  public BigInteger getMaximumMinutes() {\n    return calculateMinutesValue(unit, maximumValue);\n  }\n\n  public BigInteger getUnusedMinutes() {\n    return calculateMinutesValue(unit, maximumValue.subtract(usedValue));\n  }\n\n  public void addUsed(final BigInteger value) {\n    this.usedValue = this.usedValue.add(value);\n  }\n\n  public void addMaximum(final BigInteger value) {\n    this.maximumValue = this.maximumValue.add(value);\n  }\n\n  public boolean hasPulseUnit() {\n    return ACCUMULATOR_UNIT_PULSE.equalsIgnoreCase(unit);\n  }\n\n  private static BigInteger calculateMinutesValue(String unit, BigInteger value) {\n    if (ACCUMULATOR_UNIT_MIN.equalsIgnoreCase(unit)) {\n      return value.divide(ACCUMULATOR_MIN_DIVIDE);\n    } else if (ACCUMULATOR_UNIT_SEC.equalsIgnoreCase(unit)) {\n      return value.divide(ACCUMULATOR_SEC_DIVIDE);\n    } else if (ACCUMULATOR_UNIT_MSEC.equalsIgnoreCase(unit)) {\n      return value.divide(ACCUMULATOR_MSEC_DIVIDE);\n    } else if (ACCUMULATOR_UNIT_PULSE.equalsIgnoreCase(unit) || unit == null) {\n      return BigInteger.ZERO; // hence: will not manipulate any sum\n    } else {\n      return value.divide(ACCUMULATOR_DEFAULT_DIVIDE);\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/freeunits/FreeUnitsData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/freeunits/FreeUnitsData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1715,
    "content": "package at.a1ta.cuco.core.shared.dto.freeunits;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Date;\n\npublic class FreeUnitsData implements Serializable {\n  private ArrayList<FreeUnitsResult> freeUnits;\n  private ArrayList<FreeUnitsResult> sumsPerProduct;\n  private ArrayList<FreeUnitsResult> sumsPerSidGroup;\n  private Date dateOf;\n  private Date usageEnd;\n  private String phoneNumber;\n  private boolean packagesAvailable;\n\n  public FreeUnitsData() {}\n\n  public ArrayList<FreeUnitsResult> getFreeUnits() {\n    return freeUnits;\n  }\n\n  public void setFreeUnits(final ArrayList<FreeUnitsResult> freeUnits) {\n    this.freeUnits = freeUnits;\n  }\n\n  public ArrayList<FreeUnitsResult> getSumsPerProduct() {\n    return sumsPerProduct;\n  }\n\n  public void setSumsPerProduct(ArrayList<FreeUnitsResult> sumsPerProduct) {\n    this.sumsPerProduct = sumsPerProduct;\n  }\n\n  public ArrayList<FreeUnitsResult> getSumsPerSidGroup() {\n    return sumsPerSidGroup;\n  }\n\n  public void setSumsPerSidGroup(ArrayList<FreeUnitsResult> sumsPerSidGroup) {\n    this.sumsPerSidGroup = sumsPerSidGroup;\n  }\n\n  public Date getDateOf() {\n    return dateOf;\n  }\n\n  public void setDateOf(Date dateOf) {\n    this.dateOf = dateOf;\n  }\n\n  public Date getUsageEnd() {\n    return usageEnd;\n  }\n\n  public void setUsageEnd(Date usageEnd) {\n    this.usageEnd = usageEnd;\n  }\n\n  public String getPhoneNumber() {\n    return phoneNumber;\n  }\n\n  public void setPhoneNumber(String phoneNumber) {\n    this.phoneNumber = phoneNumber;\n  }\n\n  public boolean arePackagesAvailable() {\n    return packagesAvailable;\n  }\n\n  public void setPackagesAvailable(boolean packagesAvailable) {\n    this.packagesAvailable = packagesAvailable;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/freeunits/FreeUnitsResult.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/freeunits/FreeUnitsResult.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1892,
    "content": "package at.a1ta.cuco.core.shared.dto.freeunits;\n\nimport java.io.Serializable;\nimport java.math.BigInteger;\n\npublic class FreeUnitsResult implements Serializable {\n  private String name;\n  private String description;\n  private boolean isPulseUnit;\n  private BigInteger minutesMaximum;\n  private BigInteger minutesUsed;\n  private BigInteger minutesUnused;\n\n  public FreeUnitsResult() {}\n\n  public FreeUnitsResult(String name, String description, boolean isPulseUnit) {\n    this.name = name;\n    this.description = description;\n    this.isPulseUnit = isPulseUnit;\n  }\n\n  public FreeUnitsResult(String name, String description, boolean isPulseUnit, BigInteger minutesMaximum, BigInteger minutesUsed,\n      BigInteger minutesUnused) {\n    this.name = name;\n    this.description = description;\n    this.isPulseUnit = isPulseUnit;\n    this.minutesMaximum = minutesMaximum;\n    this.minutesUsed = minutesUsed;\n    this.minutesUnused = minutesUnused;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public boolean isPulseUnit() {\n    return isPulseUnit;\n  }\n\n  public void setPulseUnit(boolean isPulseUnit) {\n    this.isPulseUnit = isPulseUnit;\n  }\n\n  public BigInteger getMinutesMaximum() {\n    return minutesMaximum;\n  }\n\n  public void setMinutesMaximum(BigInteger minutesMaximum) {\n    this.minutesMaximum = minutesMaximum;\n  }\n\n  public BigInteger getMinutesUsed() {\n    return minutesUsed;\n  }\n\n  public void setMinutesUsed(BigInteger minutesUsed) {\n    this.minutesUsed = minutesUsed;\n  }\n\n  public BigInteger getMinutesUnused() {\n    return minutesUnused;\n  }\n\n  public void setMinutesUnused(BigInteger minutesUnused) {\n    this.minutesUnused = minutesUnused;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/access/ContextAwareCustomerUnlockRequest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/access/ContextAwareCustomerUnlockRequest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2518,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.shared.dto.access;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class ContextAwareCustomerUnlockRequest implements Serializable {\n\n  public static final UnlockStateEnum DEFAULT_STATE = UnlockStateEnum.PENDING;\n  public static final UnlockRequestContext DEFAULT_CONTEXT = UnlockRequestContext.SESSION;\n\n  private Date created = new Date();\n  private Date finished;\n\n  private long customerId;\n  private BiteUser user;\n  private String jobId;\n  private String sessionKey;\n  private UnlockStateEnum state = DEFAULT_STATE;\n  private UnlockRequestContext context = DEFAULT_CONTEXT;\n\n  public Date getCreated() {\n    return created;\n  }\n\n  public void setCreated(Date created) {\n    this.created = created;\n  }\n\n  public Date getFinished() {\n    return finished;\n  }\n\n  public void setFinished(Date finished) {\n    this.finished = finished;\n  }\n\n  public long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(long customerId) {\n    this.customerId = customerId;\n  }\n\n  public String getJobId() {\n    return jobId;\n  }\n\n  public void setJobId(String jobId) {\n    this.jobId = jobId;\n  }\n\n  public String getSessionKey() {\n    return sessionKey;\n  }\n\n  public void setSessionKey(String sessionKey) {\n    this.sessionKey = sessionKey;\n  }\n\n  public UnlockStateEnum getState() {\n    return state;\n  }\n\n  public void setState(UnlockStateEnum state) {\n    this.state = state;\n  }\n\n  public UnlockRequestContext getContext() {\n    return context;\n  }\n\n  public void setContext(UnlockRequestContext context) {\n    this.context = context;\n  }\n\n  public BiteUser getUser() {\n    return user;\n  }\n\n  public void setUser(BiteUser user) {\n    this.user = user;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/access/UnlockRequestContext.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/access/UnlockRequestContext.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 848,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.shared.dto.access;\n\npublic enum UnlockRequestContext {\n  SESSION\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/access/UnlockStateEnum.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/access/UnlockStateEnum.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 895,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.shared.dto.access;\n\npublic enum UnlockStateEnum {\n  FINISHED_UNLOCKED, FINISHED_LOCKED, FINISHED_ERROR, PENDING\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/DateValueBean.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/DateValueBean.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 563,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class DateValueBean implements Serializable {\n\n  private Date date;\n  private Double value;\n\n  public DateValueBean() {}\n\n  public DateValueBean(Date date, Double value) {\n    this.date = date;\n    this.value = value;\n  }\n\n  public Date getDate() {\n    return date;\n  }\n\n  public void setDate(Date date) {\n    this.date = date;\n  }\n\n  public Double getValue() {\n    return value;\n  }\n\n  public void setValue(Double value) {\n    this.value = value;\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/UsageDetail.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/UsageDetail.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3219,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\npublic class UsageDetail implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private static final int MOBILE_ATTR_COUNT = 14;\n\n  private Date date;\n  private String tarif;\n  private Double value;\n  private Double fee;\n\n  public static ArrayList<UsageDetail> createFromVoiceUsage(List<VoiceUsage> usages) {\n    ArrayList<UsageDetail> lst = new ArrayList<UsageDetail>(usages.size());\n    for (VoiceUsage usage : usages) {\n      lst.add(create(usage));\n    }\n    return lst;\n  }\n\n  private static UsageDetail create(VoiceUsage usage) {\n    UsageDetail o = new UsageDetail();\n    o.date = usage.getDate();\n    o.tarif = usage.getZone();\n    o.value = usage.getDuration();\n    o.fee = usage.getConnectionFee();\n    return o;\n  }\n\n  public static ArrayList<UsageDetail> createFromMobileUsage(List<MobileUsage> usages) {\n    ArrayList<UsageDetail> lst = new ArrayList<UsageDetail>(usages.size() * MOBILE_ATTR_COUNT * 2);\n    for (MobileUsage usage : usages) {\n      lst.addAll(create(usage));\n    }\n    return lst;\n  }\n\n  private static ArrayList<UsageDetail> create(MobileUsage usage) {\n    ArrayList<UsageDetail> lst = new ArrayList<UsageDetail>(MOBILE_ATTR_COUNT * 2);\n    lst.add(create(usage, usage.getMou_ib_a_national(), usage.getChg_ib_a_national(), \"National ins Festnetz\"));\n    lst.add(create(usage, usage.getMou_ib_a_mobilkom(), usage.getChg_ib_a_mobilkom(), \"Mobilkom\"));\n    lst.add(create(usage, usage.getMou_ib_a_mobilbox(), usage.getChg_ib_a_mobilbox(), \"Mobilbox\"));\n    lst.add(create(usage, usage.getMou_ib_a_services(), usage.getChg_ib_a_services(), \"Servicenummern\"));\n    lst.add(create(usage, usage.getMou_ib_a_othermobiles_div(), usage.getChg_ib_a_othermobiles_div(), \"andere Mobilnetze\"));\n    lst.add(create(usage, usage.getMou_ib_a_international(), usage.getChg_ib_a_international(), \"Internationale Anrufe\"));\n    lst.add(create(usage, usage.getSms_a_sms(), usage.getChg_a_sms(), \"SMS\"));\n    lst.add(create(usage, usage.getGbIbData(), usage.getChg_ib_data(), \"Datenvolumen Inland\"));\n    lst.add(create(usage, usage.getGbObEuData(), usage.getChg_ob_eu_data(), \"Datenvolumen EU\"));\n    lst.add(create(usage, usage.getGbObInternationalData(), usage.getChg_ob_international_data(), \"Datenvolumen International\"));\n\n    return lst;\n  }\n\n  private static UsageDetail create(MobileUsage usage, Double minutes, Double fee, String tarifName) {\n    UsageDetail o = new UsageDetail();\n    o.date = usage.getDate();\n    o.tarif = tarifName;\n    o.value = minutes;\n    o.fee = fee;\n    return o;\n  }\n\n  public UsageDetail() {}\n\n  public Date getDate() {\n    return date;\n  }\n\n  public void setDate(Date date) {\n    this.date = date;\n  }\n\n  public String getAttributeName() {\n    return tarif;\n  }\n\n  public void setAttributeName(String attributeName) {\n    this.tarif = attributeName;\n  }\n\n  public Double getMinutes() {\n    return value;\n  }\n\n  public void setMinutes(Double minutes) {\n    this.value = minutes;\n  }\n\n  public Double getFee() {\n    return fee;\n  }\n\n  public void setFee(Double fee) {\n    this.fee = fee;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/AonProduct.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/AonProduct.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1138,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic class AonProduct implements Serializable {\n\n  private String aonNumber;\n  private ArrayList<String> productNames = new ArrayList<String>();\n  private String phoneNumber;\n  private PhoneNumberStructure phoneNumberStructure;\n\n  public String getAonNumber() {\n    return aonNumber;\n  }\n\n  public void setAonNumber(String aonNumber) {\n    this.aonNumber = aonNumber;\n  }\n\n  public List<String> getProductNames() {\n    return productNames;\n  }\n\n  public void setProductNames(ArrayList<String> productNames) {\n    this.productNames = productNames;\n  }\n\n  public String getPhoneNumber() {\n    return phoneNumber;\n  }\n\n  public void setPhoneNumber(String phoneNumber) {\n    this.phoneNumber = phoneNumber;\n  }\n\n  public PhoneNumberStructure getPhoneNumberStructure() {\n    return phoneNumberStructure;\n  }\n\n  public void setPhoneNumberStructure(PhoneNumberStructure phoneNumberStructure) {\n    this.phoneNumberStructure = phoneNumberStructure;\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/Product.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/Product.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 603,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic interface Product {\n  public Party getParty();\n\n  public ProductType getType();\n\n  public NetworkProvider getProvider();\n\n  public String getValue();\n\n  public String getParentValue();\n\n  public boolean isProductGroup();\n\n  public boolean hasParty();\n\n  public boolean hasParent();\n\n  public boolean hasChildren();\n\n  public ArrayList<Long> getPartyIds();\n\n  public PhoneNumberStructure getPhoneNumberStructure();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/MobileUsage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/MobileUsage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5594,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class MobileUsage implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private Date date;\n\n  private Double duration;\n  private Double connectionFees;\n  private Double upload;\n  private Double download;\n\n  private Double gbIbData;\n  private Double gbObEuData;\n  private Double gbObInternationalData;\n\n  private Double chg_ib_data;\n  private Double chg_ob_eu_data;\n  private Double chg_ob_international_data;\n\n  // Minuten\n  private Double mou_ib_a_othermobiles_div;\n  private Double mou_ib_a_international;\n  private Double mou_ib_a_national;\n  private Double mou_ib_a_mobilkom;\n  private Double mou_ib_a_mobilbox;\n  private Double mou_ib_a_services;\n  private Double sms_a_sms;\n\n  // Euro\n  private Double chg_ib_a_othermobiles_div;\n  private Double chg_ib_a_international;\n  private Double chg_ib_a_national;\n  private Double chg_ib_a_mobilkom;\n  private Double chg_ib_a_mobilbox;\n  private Double chg_ib_a_services;\n  private Double chg_a_sms;\n\n  public Date getDate() {\n    return date;\n  }\n\n  public void setDate(Date date) {\n    this.date = date;\n  }\n\n  public Double getDuration() {\n    return duration;\n  }\n\n  public void setDuration(Double duration) {\n    this.duration = duration;\n  }\n\n  public Double getConnectionFees() {\n    return connectionFees;\n  }\n\n  public void setConnectionFees(Double connectionFees) {\n    this.connectionFees = connectionFees;\n  }\n\n  public Double getUpload() {\n    return upload;\n  }\n\n  public void setUpload(Double upload) {\n    this.upload = upload;\n  }\n\n  public Double getDownload() {\n    return download;\n  }\n\n  public void setDownload(Double download) {\n    this.download = download;\n  }\n\n  public Double getMou_ib_a_othermobiles_div() {\n    return mou_ib_a_othermobiles_div;\n  }\n\n  public void setMou_ib_a_othermobiles_div(Double mou_ib_a_othermobiles_div) {\n    this.mou_ib_a_othermobiles_div = mou_ib_a_othermobiles_div;\n  }\n\n  public Double getMou_ib_a_international() {\n    return mou_ib_a_international;\n  }\n\n  public void setMou_ib_a_international(Double mou_ib_a_international) {\n    this.mou_ib_a_international = mou_ib_a_international;\n  }\n\n  public Double getMou_ib_a_national() {\n    return mou_ib_a_national;\n  }\n\n  public void setMou_ib_a_national(Double mou_ib_a_national) {\n    this.mou_ib_a_national = mou_ib_a_national;\n  }\n\n  public Double getMou_ib_a_mobilkom() {\n    return mou_ib_a_mobilkom;\n  }\n\n  public void setMou_ib_a_mobilkom(Double mou_ib_a_mobilkom) {\n    this.mou_ib_a_mobilkom = mou_ib_a_mobilkom;\n  }\n\n  public Double getMou_ib_a_mobilbox() {\n    return mou_ib_a_mobilbox;\n  }\n\n  public void setMou_ib_a_mobilbox(Double mou_ib_a_mobilbox) {\n    this.mou_ib_a_mobilbox = mou_ib_a_mobilbox;\n  }\n\n  public Double getMou_ib_a_services() {\n    return mou_ib_a_services;\n  }\n\n  public void setMou_ib_a_services(Double mou_ib_a_services) {\n    this.mou_ib_a_services = mou_ib_a_services;\n  }\n\n  public Double getSms_a_sms() {\n    return sms_a_sms;\n  }\n\n  public void setSms_a_sms(Double sms_a_sms) {\n    this.sms_a_sms = sms_a_sms;\n  }\n\n  public Double getChg_ib_a_othermobiles_div() {\n    return chg_ib_a_othermobiles_div;\n  }\n\n  public void setChg_ib_a_othermobiles_div(Double chg_ib_a_othermobiles_div) {\n    this.chg_ib_a_othermobiles_div = chg_ib_a_othermobiles_div;\n  }\n\n  public Double getChg_ib_a_international() {\n    return chg_ib_a_international;\n  }\n\n  public void setChg_ib_a_international(Double chg_ib_a_international) {\n    this.chg_ib_a_international = chg_ib_a_international;\n  }\n\n  public Double getChg_ib_a_national() {\n    return chg_ib_a_national;\n  }\n\n  public void setChg_ib_a_national(Double chg_ib_a_national) {\n    this.chg_ib_a_national = chg_ib_a_national;\n  }\n\n  public Double getChg_ib_a_mobilkom() {\n    return chg_ib_a_mobilkom;\n  }\n\n  public void setChg_ib_a_mobilkom(Double chg_ib_a_mobilkom) {\n    this.chg_ib_a_mobilkom = chg_ib_a_mobilkom;\n  }\n\n  public Double getChg_ib_a_mobilbox() {\n    return chg_ib_a_mobilbox;\n  }\n\n  public void setChg_ib_a_mobilbox(Double chg_ib_a_mobilbox) {\n    this.chg_ib_a_mobilbox = chg_ib_a_mobilbox;\n  }\n\n  public Double getChg_ib_a_services() {\n    return chg_ib_a_services;\n  }\n\n  public void setChg_ib_a_services(Double chg_ib_a_services) {\n    this.chg_ib_a_services = chg_ib_a_services;\n  }\n\n  public Double getChg_a_sms() {\n    return chg_a_sms;\n  }\n\n  public void setChg_a_sms(Double chg_a_sms) {\n    this.chg_a_sms = chg_a_sms;\n  }\n\n  public Double getGbIbData() {\n    return gbIbData;\n  }\n\n  public void setGbIbData(Double gbIbData) {\n    this.gbIbData = gbIbData;\n  }\n\n  public Double getGbObEuData() {\n    return gbObEuData;\n  }\n\n  public void setGbObEuData(Double gbObEuData) {\n    this.gbObEuData = gbObEuData;\n  }\n\n  public Double getGbObInternationalData() {\n    return gbObInternationalData;\n  }\n\n  public void setGbObInternationalData(Double gbObInternationalData) {\n    this.gbObInternationalData = gbObInternationalData;\n  }\n\n  public Double getChg_ib_data() {\n    return chg_ib_data;\n  }\n\n  public void setChg_ib_data(Double chg_ib_data) {\n    this.chg_ib_data = chg_ib_data;\n  }\n\n  public Double getChg_ob_eu_data() {\n    return chg_ob_eu_data;\n  }\n\n  public void setChg_ob_eu_data(Double chg_ob_eu_data) {\n    this.chg_ob_eu_data = chg_ob_eu_data;\n  }\n\n  public Double getChg_ob_international_data() {\n    return chg_ob_international_data;\n  }\n\n  public void setChg_ob_international_data(Double chg_ob_international_data) {\n    this.chg_ob_international_data = chg_ob_international_data;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/NetworkProvider.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/NetworkProvider.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 405,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\npublic enum NetworkProvider {\n  A1(\"T\", \"A1\"), ANB(\"A\", \"ANB\"), COMBINED(\"C\", \"Combined\");\n\n  private String value;\n  private String label;\n\n  private NetworkProvider(String value, String label) {\n    this.value = value;\n    this.label = label;\n  }\n\n  public String getValue() {\n    return value;\n  }\n\n  public String getLabel() {\n    return label;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/ProductType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/ProductType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 159,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\npublic enum ProductType {\n  VOICE_FIXED_LINE, INET_FIXED_LINE, INET_FIXED_LINE_PRODUCT, MOBILE, MOBILE_BAN;\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/InetUsage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/InetUsage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1674,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class InetUsage implements Serializable {\n  private Date date;\n  private long duration;\n  private long uploadVolume;\n  private long downloadVolume;\n  private double subscriptionFee;\n  private double variableFee;\n  private double highUsageFee;\n  private long transferVolumeOverrun;\n\n  public Date getDate() {\n    return date;\n  }\n\n  public void setDate(Date date) {\n    this.date = date;\n  }\n\n  public long getDuration() {\n    return duration;\n  }\n\n  public void setDuration(long duration) {\n    this.duration = duration;\n  }\n\n  public long getUploadVolume() {\n    return uploadVolume;\n  }\n\n  public void setUploadVolume(long uploadVolume) {\n    this.uploadVolume = uploadVolume;\n  }\n\n  public long getDownloadVolume() {\n    return downloadVolume;\n  }\n\n  public void setDownloadVolume(long downloadVolume) {\n    this.downloadVolume = downloadVolume;\n  }\n\n  public double getSubscriptionFee() {\n    return subscriptionFee;\n  }\n\n  public void setSubscriptionFee(double subscriptionFee) {\n    this.subscriptionFee = subscriptionFee;\n  }\n\n  public double getVariableFee() {\n    return variableFee;\n  }\n\n  public void setVariableFee(double variableFee) {\n    this.variableFee = variableFee;\n  }\n\n  public double getHighUsageFee() {\n    return highUsageFee;\n  }\n\n  public void setHighUsageFee(double highUsageFee) {\n    this.highUsageFee = highUsageFee;\n  }\n\n  public long getTransferVolumeOverrun() {\n    return transferVolumeOverrun;\n  }\n\n  public void setTransferVolumeOverrun(long transferVolumeOverrun) {\n    this.transferVolumeOverrun = transferVolumeOverrun;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/VoiceUsage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/VoiceUsage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1117,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class VoiceUsage implements Serializable {\n  private Date date;\n  private Double duration;\n  private Double connectionFee;\n  private String zone;\n  private String timeType;\n  private String provider;\n\n  public Date getDate() {\n    return date;\n  }\n\n  public void setDate(Date date) {\n    this.date = date;\n  }\n\n  public Double getDuration() {\n    return duration;\n  }\n\n  public void setDuration(Double duration) {\n    this.duration = duration;\n  }\n\n  public Double getConnectionFee() {\n    return connectionFee;\n  }\n\n  public void setConnectionFee(Double connectionFee) {\n    this.connectionFee = connectionFee;\n  }\n\n  public String getZone() {\n    return zone;\n  }\n\n  public void setZone(String zone) {\n    this.zone = zone;\n  }\n\n  public String getTimeType() {\n    return timeType;\n  }\n\n  public void setTimeType(String timeType) {\n    this.timeType = timeType;\n  }\n\n  public void setProvider(String provider) {\n    this.provider = provider;\n  }\n\n  public String getProvider() {\n    return provider;\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/ProductNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/ProductNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3303,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic class ProductNode implements Product, Serializable {\n  private String label;\n  private String value;\n  private Party party;\n  private ProductType type;\n  private NetworkProvider provider;\n  private ProductNode parent;\n  private PhoneNumberStructure phoneNumberStructure;\n  private ArrayList<ProductNode> children = new ArrayList<ProductNode>();\n\n  public static ProductNode createProduct(Party party, ProductType type, NetworkProvider provider, String value, String label) {\n    ProductNode product = new ProductNode();\n    product.setParty(party);\n    product.setType(type);\n    product.setProvider(provider);\n    product.setValue(value);\n    product.setLabel(label);\n    return product;\n  }\n\n  public String getLabel() {\n    return label;\n  }\n\n  public void setLabel(String label) {\n    this.label = label;\n  }\n\n  @Override\n  public String getValue() {\n    return value;\n  }\n\n  @Override\n  public String getParentValue() {\n    return parent != null ? parent.value : null;\n  }\n\n  public void setValue(String value) {\n    this.value = value;\n  }\n\n  @Override\n  public Party getParty() {\n    return party;\n  }\n\n  public void setParty(Party party) {\n    this.party = party;\n  }\n\n  @Override\n  public ProductType getType() {\n    return type;\n  }\n\n  public void setType(ProductType type) {\n    this.type = type;\n  }\n\n  @Override\n  public NetworkProvider getProvider() {\n    return provider;\n  }\n\n  public void setProvider(NetworkProvider provider) {\n    this.provider = provider;\n  }\n\n  public ProductNode getParent() {\n    return parent;\n  }\n\n  public void setParent(ProductNode parent) {\n    this.parent = parent;\n  }\n\n  public ArrayList<ProductNode> getChildren() {\n    return children;\n  }\n\n  public void addChild(ProductNode child) {\n    children.add(child);\n    child.parent = this;\n  }\n\n  public void addChildren(List<ProductNode> children) {\n    for (ProductNode child : children) {\n      addChild(child);\n    }\n  }\n\n  @Override\n  public boolean isProductGroup() {\n    return !hasParent() || (!parent.hasParent() && !parent.hasParty());\n  }\n\n  @Override\n  public boolean hasParty() {\n    return party != null;\n  }\n\n  @Override\n  public boolean hasParent() {\n    return parent != null;\n  }\n\n  @Override\n  public boolean hasChildren() {\n    return children != null && !children.isEmpty();\n  }\n\n  @Override\n  public ArrayList<Long> getPartyIds() {\n    if (!hasParty()) {\n      final ArrayList<Long> partyIds = new ArrayList<Long>();\n      for (final ProductNode child : children) {\n        partyIds.add(child.party.getId());\n      }\n      return partyIds;\n    }\n\n    return new ArrayList<Long>(Arrays.asList(party.getId()));\n\n  }\n\n  public boolean isANB() {\n    return NetworkProvider.ANB == provider;\n  }\n\n  public boolean isType(ProductType type) {\n    return type == this.type;\n  }\n\n  @Override\n  public PhoneNumberStructure getPhoneNumberStructure() {\n    return phoneNumberStructure;\n  }\n\n  public void setPhoneNumberStructure(PhoneNumberStructure phoneNumberStructure) {\n    this.phoneNumberStructure = phoneNumberStructure;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/ProductChartRequest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/ProductChartRequest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2417,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic class ProductChartRequest implements Product, Serializable {\n  private Party party;\n  private ProductType type;\n  private NetworkProvider provider;\n  private String value;\n  private String parentValue;\n  private boolean isProductGroup;\n  private boolean hasParty;\n  private boolean hasParent;\n  private boolean hasChildren;\n  private ArrayList<Long> partyIds;\n  private PhoneNumberStructure phoneNumberStructure;\n  private boolean anb;\n\n  private ProductChartRequest() {}\n\n  public static ProductChartRequest create(ProductNode product) {\n    return create(product, product.getType());\n  }\n\n  public static ProductChartRequest create(ProductNode product, ProductType overrideType) {\n    ProductChartRequest clone = new ProductChartRequest();\n    clone.party = product.getParty();\n    clone.type = overrideType;\n    clone.provider = product.getProvider();\n    clone.value = product.getValue();\n    clone.parentValue = product.getParentValue();\n    clone.isProductGroup = product.isProductGroup();\n    clone.hasParty = product.hasParty();\n    clone.hasParent = product.hasParent();\n    clone.hasChildren = product.hasChildren();\n    clone.partyIds = product.getPartyIds();\n    clone.phoneNumberStructure = product.getPhoneNumberStructure();\n    return clone;\n  }\n\n  @Override\n  public Party getParty() {\n    return party;\n  }\n\n  @Override\n  public ProductType getType() {\n    return type;\n  }\n\n  @Override\n  public NetworkProvider getProvider() {\n    return provider;\n  }\n\n  @Override\n  public String getValue() {\n    return value;\n  }\n\n  @Override\n  public String getParentValue() {\n    return parentValue;\n  }\n\n  @Override\n  public boolean isProductGroup() {\n    return isProductGroup;\n  }\n\n  @Override\n  public boolean hasParty() {\n    return hasParty;\n  }\n\n  @Override\n  public boolean hasParent() {\n    return hasParent;\n  }\n\n  @Override\n  public boolean hasChildren() {\n    return hasChildren;\n  }\n\n  @Override\n  public ArrayList<Long> getPartyIds() {\n    return partyIds;\n  }\n\n  @Override\n  public PhoneNumberStructure getPhoneNumberStructure() {\n    return phoneNumberStructure;\n  }\n\n  public boolean isAnb() {\n    return anb;\n  }\n\n  public void setAnb(boolean anb) {\n    this.anb = anb;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/ProductRootNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/usagedata/ProductRootNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 337,
    "content": "package at.a1ta.cuco.core.shared.dto.usagedata;\n\nimport java.io.Serializable;\n\npublic class ProductRootNode implements Serializable {\n  private ProductNode rootProduct;\n\n  public ProductNode getRootProduct() {\n    return rootProduct;\n  }\n\n  public void setRootProduct(ProductNode rootProduct) {\n    this.rootProduct = rootProduct;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/nbo/VBMProductDetails.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/nbo/VBMProductDetails.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2590,
    "content": "package at.a1ta.cuco.core.shared.dto.nbo;\n\nimport java.io.Serializable;\n\npublic class VBMProductDetails implements Serializable {\n  private String productId;\n  private String productName;\n  private Long maxScoring;\n  private String clarifyProductId;\n  private String partWebProductId;\n  private String description;\n\n  public static final VBMProductDetails ALL_PROD = new VBMProductDetails(\"Alle\", \"Alle\");\n  public static final VBMProductDetails NO_PROD_FILTER = new VBMProductDetails(\"Kein Filter\", \"Kein Filter\");\n\n  public VBMProductDetails(String productId, String productName) {\n    super();\n    this.productId = productId;\n    this.productName = productName;\n  }\n\n  public VBMProductDetails() {\n    super();\n  }\n\n  private String productDetailsURL;\n\n  public String getProductName() {\n    return productName;\n  }\n\n  public void setProductName(String productName) {\n    this.productName = productName;\n  }\n\n  public String getClarifyProductId() {\n    return clarifyProductId;\n  }\n\n  public void setClarifyProductId(String clarifyProductId) {\n    this.clarifyProductId = clarifyProductId;\n  }\n\n  public String getPartWebProductId() {\n    return partWebProductId;\n  }\n\n  public void setPartWebProductId(String partWebProductId) {\n    this.partWebProductId = partWebProductId;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public String getProductDetailsURL() {\n    return productDetailsURL;\n  }\n\n  public void setProductDetailsURL(String productDetailsURL) {\n    this.productDetailsURL = productDetailsURL;\n  }\n\n  public boolean isAvailable() {\n    // for later implementation\n    return true;\n  }\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n\n  public Long getMaxScoring() {\n    return maxScoring;\n  }\n\n  public void setMaxScoring(Long maxScoring) {\n    this.maxScoring = maxScoring;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((productId == null) ? 0 : productId.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass() != obj.getClass()) return false;\n    VBMProductDetails other = (VBMProductDetails) obj;\n    if (productId == null) {\n      if (other.productId != null) return false;\n    } else if (!productId.equals(other.productId)) return false;\n    return true;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/nbo/VBMProductFeedback.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/nbo/VBMProductFeedback.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2086,
    "content": "package at.a1ta.cuco.core.shared.dto.nbo;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\npublic class VBMProductFeedback implements Serializable {\n\tprivate Long customerId;\n\tprivate String productId;\n\tprivate String monthYearPeriod;\n\tprivate VBMDeclineReason selectedDeclineReason=new VBMDeclineReason();\n\tprivate Date feedbackTime;\n\tprivate String feedbackUserName;\n\tprivate String feedbackUserId;\n\tprivate String feedBackGiven=\"N\";\n\tpublic VBMDeclineReason getSelectedDeclineReason() {\n\t\treturn selectedDeclineReason;\n\t}\n\tpublic void setSelectedDeclineReason(VBMDeclineReason selectedDeclineReason) {\n\t\tthis.selectedDeclineReason = selectedDeclineReason;\n\t}\n\tpublic Date getFeedbackTime() {\n\t\treturn feedbackTime;\n\t}\n\tpublic void setFeedbackTime(Date feedbackTime) {\n\t\tthis.feedbackTime = feedbackTime;\n\t}\n\tpublic String getFeedbackUserName() {\n\t\treturn feedbackUserName;\n\t}\n\tpublic void setFeedbackUserName(String feedbackUserName) {\n\t\tthis.feedbackUserName = feedbackUserName;\n\t}\n\tpublic String getFeedbackUserId() {\n\t\treturn feedbackUserId;\n\t}\n\tpublic void setFeedbackUserId(String feedbackUserId) {\n\t\tthis.feedbackUserId = feedbackUserId;\n\t}\n\tpublic String getFeedBackGiven() {\n\t\treturn feedBackGiven;\n\t}\n\tpublic void setFeedBackGiven(String feedBackGiven) {\n\t\tthis.feedBackGiven = feedBackGiven;\n\t}\n\t\n\tpublic boolean isFeedbackGiven(){\n\t\treturn feedBackGiven!=null;\n\t}\n\tpublic boolean isAccepted(){\n\t\treturn feedBackGiven!=null && (selectedDeclineReason==null || selectedDeclineReason.getDeclineReasonId()==null || selectedDeclineReason.getDeclineReasonId().isEmpty());\n\t}\n\tpublic Long getCustomerId() {\n\t\treturn customerId;\n\t}\n\tpublic void setCustomerId(Long customerId) {\n\t\tthis.customerId = customerId;\n\t}\n\tpublic String getProductId() {\n\t\treturn productId;\n\t}\n\tpublic void setProductId(String productId) {\n\t\tthis.productId = productId;\n\t}\n\tpublic String getMonthYearPeriod() {\n\t\treturn monthYearPeriod;\n\t}\n\tpublic void setMonthYearPeriod(String monthYearPeriod) {\n\t\tthis.monthYearPeriod = monthYearPeriod;\n\t}\n\t\n\t\n\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/nbo/VBMProduct.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/nbo/VBMProduct.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2064,
    "content": "package at.a1ta.cuco.core.shared.dto.nbo;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\n\npublic class VBMProduct implements Serializable {\n  private Long customerId;\n  private String productId;\n  private String monthYearPeriod;\n  private Party party;\n  private Long scoringTotal;\n  private VBMProductDetails productDetails = new VBMProductDetails();\n  private VBMProductFeedback productFeedback;\n  private List<VBMDeclineReason> availableDeclineReasons = new ArrayList<VBMDeclineReason>();\n\n  public Long getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(Long customerId) {\n    this.customerId = customerId;\n  }\n\n  public String getMonthYearPeriod() {\n    return monthYearPeriod;\n  }\n\n  public void setMonthYearPeriod(String monthYearPeriod) {\n    this.monthYearPeriod = monthYearPeriod;\n  }\n\n  public Long getScoringTotal() {\n    return scoringTotal;\n  }\n\n  public void setScoringTotal(Long scoringTotal) {\n    this.scoringTotal = scoringTotal;\n  }\n\n  public List<VBMDeclineReason> getAvailableDeclineReasons() {\n    return availableDeclineReasons;\n  }\n\n  public void setAvailableDeclineReasons(List<VBMDeclineReason> availableDeclineReasons) {\n    this.availableDeclineReasons = availableDeclineReasons;\n  }\n\n  public boolean isAvailable() {\n    // for later implementation\n    return true;\n  }\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n\n  public VBMProductDetails getProductDetails() {\n    return productDetails;\n  }\n\n  public void setProductDetails(VBMProductDetails productDetails) {\n    this.productDetails = productDetails;\n  }\n\n  public VBMProductFeedback getProductFeedback() {\n    return productFeedback;\n  }\n\n  public void setProductFeedback(VBMProductFeedback productFeedback) {\n    this.productFeedback = productFeedback;\n  }\n\n  public Party getParty() {\n    return party;\n  }\n\n  public void setParty(Party party) {\n    this.party = party;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/nbo/VBMDeclineReason.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/nbo/VBMDeclineReason.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1371,
    "content": "package at.a1ta.cuco.core.shared.dto.nbo;\n\nimport java.io.Serializable;\n\npublic class VBMDeclineReason implements Serializable {\n  private String declineReasonId;\n  private String declineReasonText;\n  private String productId;\n\n  public String getDeclineReasonId() {\n    return declineReasonId;\n  }\n\n  public void setDeclineReasonId(String declineReasonId) {\n    this.declineReasonId = declineReasonId;\n  }\n\n  public String getDeclineReasonText() {\n    return declineReasonText;\n  }\n\n  public void setDeclineReasonText(String declineReasonText) {\n    this.declineReasonText = declineReasonText;\n  }\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass() != obj.getClass()) return false;\n    VBMDeclineReason other = (VBMDeclineReason) obj;\n    if (declineReasonText == null) {\n      if (other.declineReasonText != null) return false;\n    } else if (!declineReasonText.equals(other.declineReasonText)) return false;\n    return true;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((declineReasonText == null) ? 0 : declineReasonText.hashCode());\n    return result;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffSimulationContainer.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffSimulationContainer.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1338,
    "content": "package at.a1ta.cuco.core.shared.dto.tariff;\n\nimport java.io.Serializable;\n\nimport at.a1ta.cuco.core.shared.dto.Message;\n\n/**\n * @author Wahl Tatiana <Tatiana.Wahl@a1telekom.at>\n */\npublic class TariffSimulationContainer implements Serializable {\n  private Tariff currentTariff;\n  private TariffLists tariffLists;\n  private Message esbResponseMessage;\n\n  public TariffSimulationContainer() {}\n\n  public TariffSimulationContainer(Tariff currentTariff, TariffLists tariffLists, Message message) {\n    this.currentTariff = currentTariff;\n    this.tariffLists = tariffLists;\n    this.esbResponseMessage = message;\n  }\n\n  public Tariff getCurrentTariff() {\n    return currentTariff;\n  }\n\n  public void setCurrentTariff(Tariff currentTariff) {\n    this.currentTariff = currentTariff;\n  }\n\n  public void setEsbResponseMessage(Message message) {\n    this.esbResponseMessage = message;\n  }\n\n  public Message getEsbResponseMessage() {\n    return esbResponseMessage;\n  }\n\n  public boolean hasNegativeEsbResponse() {\n    return (esbResponseMessage != null && (Message.Type.WARN.equals(esbResponseMessage.getType()) || Message.Type.ERROR.equals(esbResponseMessage.getType())));\n  }\n\n  public TariffLists getTariffLists() {\n    return tariffLists;\n  }\n\n  public void setTariffLists(TariffLists tariffLists) {\n    this.tariffLists = tariffLists;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/Price.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/Price.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 608,
    "content": "package at.a1ta.cuco.core.shared.dto.tariff;\n\nimport java.io.Serializable;\n\npublic class Price implements Serializable {\n\n  private Float gross;\n  private Float net;\n\n  public Price() {}\n\n  public Price(Float gross, Float net) {\n    this.gross = gross;\n    this.net = net;\n  }\n\n  public Float getGross() {\n    return gross;\n  }\n\n  public void setGross(Float value) {\n    this.gross = value;\n  }\n\n  public Float getNet() {\n    return net;\n  }\n\n  public void setNet(Float value) {\n    this.net = value;\n  }\n\n  @Override\n  public String toString() {\n    return \"{Gross: \" + gross + \", Net: \" + net + \"}\";\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffLists.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffLists.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1038,
    "content": "package at.a1ta.cuco.core.shared.dto.tariff;\n\nimport java.io.Serializable;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class TariffLists implements Serializable {\n  private List<Tariff> allTariffsList;\n  private List<Tariff> recommendedTariffsList;\n\n  public TariffLists() {}\n\n  public TariffLists(List<Tariff> allTariffsList, List<Tariff> recommendedTariffsList) {\n    this.allTariffsList = allTariffsList != null ? allTariffsList : Collections.<Tariff> emptyList();\n    this.recommendedTariffsList = recommendedTariffsList != null ? recommendedTariffsList : Collections.<Tariff> emptyList();\n  }\n\n  public List<Tariff> getAllTariffsList() {\n    return allTariffsList;\n  }\n\n  public void setAllTariffsList(List<Tariff> allTariffsList) {\n    this.allTariffsList = allTariffsList;\n  }\n\n  public List<Tariff> getRecommendedTariffsList() {\n    return recommendedTariffsList;\n  }\n\n  public void setRecommendedTariffsList(List<Tariff> recommendedTariffsList) {\n    this.recommendedTariffsList = recommendedTariffsList;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffSimulation.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffSimulation.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2008,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.shared.dto.tariff;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Message;\n\npublic class TariffSimulation implements Serializable {\n\n  private Tariff currentTariff;\n  private List<Tariff> simulation;\n  private Message additionalInformation;\n\n  public static final TariffSimulation NONE = new TariffSimulation() {\n\n  };\n\n  public Tariff getCurrentTariff() {\n    return currentTariff;\n  }\n\n  public void setCurrentTariff(Tariff currentTariff) {\n    this.currentTariff = currentTariff;\n  }\n\n  public List<Tariff> getSimulation() {\n    return simulation;\n  }\n\n  public void setSimulation(List<Tariff> simulation) {\n    this.simulation = simulation;\n  }\n\n  public void addTariff(Tariff tariff) {\n    if (simulation == null) {\n      simulation = new ArrayList<Tariff>();\n    }\n    int index = simulation.lastIndexOf(tariff);\n    if (index > -1) {\n      simulation.add(index + 1, tariff);\n    } else {\n      simulation.add(tariff);\n    }\n\n  }\n\n  public void setAdditionalInformation(Message additionalInformation) {\n    this.additionalInformation = additionalInformation;\n  }\n\n  public Message getAdditionalInformation() {\n    return additionalInformation;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/Tariff.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/Tariff.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4147,
    "content": "package at.a1ta.cuco.core.shared.dto.tariff;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.tariff.ContributionMargin.Indicator;\n\npublic class Tariff implements Serializable {\n\n  public static final Tariff UNKNOWN = new Tariff(\"unknown\");\n\n  public Tariff() {}\n\n  public Tariff(String name) {\n    this.name = name;\n  }\n\n  private String id;\n  private String name;\n  private String code;\n  private Price baseFee;\n  private ContributionMargin contributionMargin;\n  private boolean expanded = false;\n  private List<TariffCharacteristic> characteristics = new ArrayList<TariffCharacteristic>(0);\n  private List<String> recommendationReasons = new ArrayList<String>(1);\n\n  private boolean hasExpander;\n  private boolean visible;\n  private boolean showParentInformation;\n  private boolean showChildInformation;\n  private String type;\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getCode() {\n    return code;\n  }\n\n  public void setCode(String code) {\n    this.code = code;\n  }\n\n  public void setBaseFee(Price baseFee) {\n    this.baseFee = baseFee;\n  }\n\n  public Price getBaseFee() {\n    return baseFee;\n  }\n\n  public void setType(String type) {\n    this.type = type;\n  }\n\n  public String getType() {\n    return type;\n  }\n\n  public void setCharacteristics(List<TariffCharacteristic> characteristics) {\n    this.characteristics = characteristics;\n  }\n\n  public List<TariffCharacteristic> getCharacteristics() {\n    return characteristics;\n  }\n\n  public void addCharacteristic(TariffCharacteristic characteristic) {\n    this.characteristics.add(characteristic);\n  }\n\n  public void setContributionMargin(ContributionMargin contributionMargin) {\n    this.contributionMargin = contributionMargin;\n  }\n\n  public ContributionMargin getContributionMargin() {\n    return contributionMargin;\n  }\n\n  public boolean hasPositiveContributionMargin() {\n    return getContributionMargin() != null && getContributionMargin().getIndicator() == Indicator.GREEN;\n  }\n\n  public boolean isRecommended() {\n    return !this.recommendationReasons.isEmpty();\n  }\n\n  public boolean hasExpander() {\n    return hasExpander;\n  }\n\n  public void setHasExpander(boolean hasExpander) {\n    this.hasExpander = hasExpander;\n  }\n\n  public boolean isVisible() {\n    return visible;\n  }\n\n  public void setVisible(boolean visible) {\n    this.visible = visible;\n  }\n\n  public boolean showParentInformation() {\n    return showParentInformation;\n  }\n\n  public void setShowParentInformation(boolean showParentInformation) {\n    this.showParentInformation = showParentInformation;\n  }\n\n  public boolean showChildInformation() {\n    return showChildInformation;\n  }\n\n  public void setShowChildInformation(boolean showChildInformation) {\n    this.showChildInformation = showChildInformation;\n  }\n\n  public void setExpanded(boolean expanded) {\n    this.expanded = expanded;\n  }\n\n  public boolean isExpanded() {\n    return expanded;\n  }\n\n  public void addRecommendationReason(String reason) {\n    this.recommendationReasons.add(reason);\n  }\n\n  public void addRecommendationReasons(Collection<String> reasons) {\n    this.recommendationReasons.addAll(reasons);\n  }\n\n  public List<String> getRecommendationReasons() {\n    return Collections.unmodifiableList(recommendationReasons);\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((name == null) ? 0 : name.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    Tariff other = (Tariff) obj;\n    if (name == null) {\n      if (other.name != null) {\n        return false;\n      }\n    } else if (!name.equals(other.name)) {\n      return false;\n    }\n    return true;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffCharacteristic.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffCharacteristic.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1412,
    "content": "package at.a1ta.cuco.core.shared.dto.tariff;\n\nimport java.io.Serializable;\n\npublic class TariffCharacteristic implements Serializable {\n\n  private Serializable id;\n  private String name;\n  private String code;\n  private Price price;\n  private boolean usedInSimulationCalculation;\n\n  public Price getPrice() {\n    return price;\n  }\n\n  /**\n   * the same as getPrice().getGross() but with not-null check.\n   * \n   * @return gross price value or null.\n   */\n  public Float getPriceGross() {\n    return price != null ? price.getGross() : null;\n  }\n\n  /**\n   * the same as getPrice().getNet() but with not-null check.\n   * \n   * @return net price value or null.\n   */\n  public Float getPriceNet() {\n    return price != null ? price.getNet() : null;\n  }\n\n  public void setPrice(Price price) {\n    this.price = price;\n  }\n\n  public Serializable getId() {\n    return id;\n  }\n\n  public void setId(Serializable id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getCode() {\n    return code;\n  }\n\n  public void setCode(String code) {\n    this.code = code;\n  }\n\n  public void setUsedInSimulationCalculation(boolean usedInSimulationCalculation) {\n    this.usedInSimulationCalculation = usedInSimulationCalculation;\n  }\n\n  public boolean isUsedInSimulationCalculation() {\n    return usedInSimulationCalculation;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/ContributionMargin.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/ContributionMargin.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4294,
    "content": "package at.a1ta.cuco.core.shared.dto.tariff;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ContributionMargin implements Serializable {\n\n  public static final ContributionMargin UNKNOWN = new ContributionMargin(new Price(Float.NaN, Float.NaN), Indicator.UNKNOWN) {\n\n    @Override\n    public void setIndicator(Indicator indicator) {}\n\n    @Override\n    public void setValue(Price value) {}\n\n  };\n\n  public enum Indicator {\n    RED, GREEN, YELLOW, UNKNOWN;\n\n    public static Indicator forValue(String value) {\n      if (value == null || \"\".equals(value)) {\n        return UNKNOWN;\n      }\n\n      return Indicator.valueOf(value.toUpperCase());\n    }\n  }\n\n  private Price value;\n  private Indicator indicator;\n  private Price invoiceAmountChange;\n  private Price averageInvoiceAmount;\n  private Price simulatedInvoiceAmount;\n  private Integer subscriberAmount;\n  private List<String> subscribers;\n\n  public ContributionMargin() {\n    super();\n  }\n\n  public ContributionMargin(Price value, Indicator indicator) {\n    this(value, indicator, null);\n  }\n\n  public ContributionMargin(Price value, Indicator indicator, Price invoiceAmountChange) {\n    super();\n    this.value = value;\n    this.indicator = indicator;\n    this.invoiceAmountChange = invoiceAmountChange;\n  }\n\n  public Price getValue() {\n    return value;\n  }\n\n  public void setValue(Price value) {\n    this.value = value;\n  }\n\n  public Indicator getIndicator() {\n    return indicator;\n  }\n\n  public void setIndicator(Indicator indicator) {\n    this.indicator = indicator;\n  }\n\n  public void setInvoiceAmountChange(Price invoiceAmountChange) {\n    this.invoiceAmountChange = invoiceAmountChange;\n  }\n\n  public Price getInvoiceAmountChange() {\n    return invoiceAmountChange;\n  }\n\n  public void setAverageInvoiceAmount(Price averageInvoiceAmount) {\n    this.averageInvoiceAmount = averageInvoiceAmount;\n  }\n\n  public Price getAverageInvoiceAmount() {\n    return averageInvoiceAmount;\n  }\n\n  public Price getSimulatedInvoiceAmount() {\n    return simulatedInvoiceAmount;\n  }\n\n  public void setSimulatedInvoiceAmount(Price simulatedInvoiceAmount) {\n    this.simulatedInvoiceAmount = simulatedInvoiceAmount;\n  }\n\n  /**\n   * the same as getValue().getGross() but with not-null check.\n   * \n   * @return gross value or null.\n   */\n  public Float getValueGross() {\n    return value != null ? value.getGross() : null;\n  }\n\n  /**\n   * the same as getValue().getNet() but with not-null check.\n   * \n   * @return net value or null.\n   */\n  public Float getValueNet() {\n    return value != null ? value.getNet() : null;\n  }\n\n  /**\n   * the same as getInvoiceAmountChange().getGross() but with not-null check.\n   * \n   * @return gross value of InvoiceAmountChange or null.\n   */\n  public Float getInvoiceAmountChangeGross() {\n    return invoiceAmountChange != null ? invoiceAmountChange.getGross() : null;\n  }\n\n  /**\n   * the same as getInvoiceAmountChange().getNet() but with not-null check.\n   * \n   * @return net value of InvoiceAmountChange or null.\n   */\n  public Float getInvoiceAmountChangeNet() {\n    return invoiceAmountChange != null ? invoiceAmountChange.getNet() : null;\n  }\n\n  /**\n   * the same as getAverageInvoiceAmount().getGross() but with not-null check.\n   * \n   * @return gross value of AverageInvoiceAmount or null.\n   */\n  public Float getAverageInvoiceAmountGross() {\n    return averageInvoiceAmount != null ? averageInvoiceAmount.getGross() : null;\n  }\n\n  /**\n   * the same as getAverageInvoiceAmount().getNet() but with not-null check.\n   * \n   * @return net value of AverageInvoiceAmount or null.\n   */\n  public Float getAverageInvoiceAmountNet() {\n    return averageInvoiceAmount != null ? averageInvoiceAmount.getNet() : null;\n  }\n\n  public void setSubscribers(List<String> subscribers) {\n    this.subscribers = subscribers;\n  }\n\n  public Integer getSubscriberAmount() {\n    return subscriberAmount;\n  }\n\n  public boolean hasSubscriptions() {\n    return subscriberAmount != null && subscriberAmount.intValue() > 0;\n  }\n\n  public void setSubscriberAmount(Integer subscriberAmount) {\n    this.subscriberAmount = subscriberAmount;\n  }\n\n  public List<String> getSubscribers() {\n    return subscribers != null ? new ArrayList<String>(subscribers) : new ArrayList<String>(0);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffSimulationRequest.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/tariff/TariffSimulationRequest.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1311,
    "content": "package at.a1ta.cuco.core.shared.dto.tariff;\n\nimport java.io.Serializable;\n\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.mobilkom.bit.tariffguide.SimulationType;\n\n/**\n * @author q907291\n */\npublic class TariffSimulationRequest implements Serializable {\n\n  private PhoneNumberStructure phoneNumber;\n  private BillingAccountNumber billingAccountNumber;\n  private SimulationType.Enum simulationType;\n\n  public PhoneNumberStructure getPhoneNumber() {\n    return phoneNumber;\n  }\n\n  public void setPhoneNumber(PhoneNumberStructure phoneNumber) {\n    this.phoneNumber = phoneNumber;\n  }\n\n  public BillingAccountNumber getBillingAccountNumber() {\n    return billingAccountNumber;\n  }\n\n  public void setBillingAccountNumber(BillingAccountNumber billingAccountNumber) {\n    this.billingAccountNumber = billingAccountNumber;\n  }\n\n  public SimulationType.Enum getSimulationType() {\n    return simulationType;\n  }\n\n  public void setSimulationType(SimulationType.Enum simulationType) {\n    this.simulationType = simulationType;\n  }\n\n  @Override\n  public String toString() {\n    return \"TariffSimulationRequest [phoneNumber=\" + phoneNumber + \", billingAccountNumber=\" + billingAccountNumber + \", simulationType=\" + simulationType + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/mobilpoints/MobilPointsBundle.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/mobilpoints/MobilPointsBundle.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 889,
    "content": "package at.a1ta.cuco.core.shared.dto.mobilpoints;\n\nimport java.io.Serializable;\n\npublic class MobilPointsBundle implements Serializable {\n  private String phoneNumber;\n  private MobilPoints mobilPoints;\n  private BusinessHardwareReplacement businessHardwareReplacement;\n\n  public String getPhoneNumber() {\n    return phoneNumber;\n  }\n\n  public void setPhoneNumber(String phoneNumber) {\n    this.phoneNumber = phoneNumber;\n  }\n\n  public MobilPoints getMobilPoints() {\n    return mobilPoints;\n  }\n\n  public void setMobilPoints(MobilPoints mobilPoints) {\n    this.mobilPoints = mobilPoints;\n  }\n\n  public BusinessHardwareReplacement getBusinessHardwareReplacement() {\n    return businessHardwareReplacement;\n  }\n\n  public void setBusinessHardwareReplacement(BusinessHardwareReplacement businessHardwareReplacement) {\n    this.businessHardwareReplacement = businessHardwareReplacement;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/mobilpoints/BusinessHardwareReplacement.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/mobilpoints/BusinessHardwareReplacement.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1717,
    "content": "package at.a1ta.cuco.core.shared.dto.mobilpoints;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\n\npublic class BusinessHardwareReplacement implements Serializable {\n  private long billingAccountNumber;\n  private BigInteger simCount;\n  private BigDecimal bindingMonthsPerSim;\n  private BigInteger openBasicFeePerBan;\n  private BigInteger possibleHardwareReplacement;\n  private boolean businessRewardingAccountsAvailable = true;\n\n  public long getBillingAccountNumber() {\n    return billingAccountNumber;\n  }\n\n  public void setBillingAccountNumber(long billingAccountNumber) {\n    this.billingAccountNumber = billingAccountNumber;\n  }\n\n  public BigInteger getSimCount() {\n    return simCount;\n  }\n\n  public void setSimCount(BigInteger nbActiveSims) {\n    this.simCount = nbActiveSims;\n  }\n\n  public BigDecimal getBindingMonthsPerSim() {\n    return bindingMonthsPerSim;\n  }\n\n  public void setBindingMonthsPerSim(BigDecimal rmCommitmentPerSim) {\n    this.bindingMonthsPerSim = rmCommitmentPerSim;\n  }\n\n  public BigInteger getOpenBasicFeePerBan() {\n    return openBasicFeePerBan;\n  }\n\n  public void setOpenBasicFeePerBan(BigInteger nbOGE) {\n    this.openBasicFeePerBan = nbOGE;\n  }\n\n  public BigInteger getPossibleHardwareReplacement() {\n    return possibleHardwareReplacement;\n  }\n\n  public void setPossibleHardwareReplacement(BigInteger possibleHWRedemptionVoice) {\n    this.possibleHardwareReplacement = possibleHWRedemptionVoice;\n  }\n\n  public void setBusinessRewardingAccountsAvailable(boolean isAvailable) {\n    this.businessRewardingAccountsAvailable = isAvailable;\n  }\n\n  public boolean hasBusinessRewardingAccounts() {\n    return businessRewardingAccountsAvailable;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/mobilpoints/MobilPoints.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/mobilpoints/MobilPoints.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1072,
    "content": "package at.a1ta.cuco.core.shared.dto.mobilpoints;\n\nimport java.io.Serializable;\n\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic class MobilPoints implements Serializable {\n  private long amdocsPoints;\n  private long partnerWebPoints;\n  private long clarifyPoints;\n  private PhoneNumberStructure number;\n\n  public long getAmdocsPoints() {\n    return amdocsPoints;\n  }\n\n  public void setAmdocsPoints(long amdocsPoints) {\n    this.amdocsPoints = amdocsPoints;\n  }\n\n  public long getPartnerWebPoints() {\n    return partnerWebPoints;\n  }\n\n  public void setPartnerWebPoints(long partnerWebPoints) {\n    this.partnerWebPoints = partnerWebPoints;\n  }\n\n  public long getClarifyPoints() {\n    return clarifyPoints;\n  }\n\n  public void setClarifyPoints(long clarifyPoints) {\n    this.clarifyPoints = clarifyPoints;\n  }\n\n  public long getPendingMobilPoints() {\n    return partnerWebPoints + clarifyPoints;\n  }\n\n  public PhoneNumberStructure getNumber() {\n    return number;\n  }\n\n  public void setNumber(PhoneNumberStructure number) {\n    this.number = number;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 692,
    "content": "package at.a1ta.cuco.core.shared.dto.chart;\n\nimport java.io.Serializable;\nimport java.util.Collection;\nimport java.util.LinkedHashMap;\n\npublic class ChartData<K, V> implements Serializable {\n  private LinkedHashMap<String, ChartDataSet<K, V>> data = new LinkedHashMap<String, ChartDataSet<K, V>>();\n\n  public ChartDataSet<K, V> getDataSet(final String dataSetKey) {\n    if (data.containsKey(dataSetKey)) {\n      return data.get(dataSetKey);\n    }\n\n    final ChartDataSet<K, V> dataSet = new ChartDataSet<K, V>();\n    dataSet.setId(dataSetKey);\n    data.put(dataSetKey, dataSet);\n    return dataSet;\n  }\n\n  public Collection<ChartDataSet<K, V>> getDataSets() {\n    return data.values();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartDataSet.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartDataSet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 484,
    "content": "package at.a1ta.cuco.core.shared.dto.chart;\n\nimport java.io.Serializable;\nimport java.util.LinkedHashMap;\n\npublic class ChartDataSet<K, V> implements Serializable {\n  private String id;\n  private LinkedHashMap<K, V> data = new LinkedHashMap<K, V>();\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public LinkedHashMap<K, V> getData() {\n    return data;\n  }\n\n  public void add(K key, V value) {\n    data.put(key, value);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/Chart.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/Chart.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 518,
    "content": "package at.a1ta.cuco.core.shared.dto.chart;\n\nimport at.a1ta.cuco.core.bean.File;\n\npublic class Chart extends File {\n  private String imageMap;\n  private String imageMapId;\n\n  public Chart() {\n    setMimeType(MIMEType.PNG);\n  }\n\n  public String getImageMap() {\n    return imageMap;\n  }\n\n  public void setImageMap(String imageMap) {\n    this.imageMap = imageMap;\n  }\n\n  public void setImageMapId(String imageMapId) {\n    this.imageMapId = imageMapId;\n  }\n\n  public String getImageMapId() {\n    return imageMapId;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartOptions.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartOptions.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1110,
    "content": "package at.a1ta.cuco.core.shared.dto.chart;\n\nimport java.io.Serializable;\n\npublic class ChartOptions implements Serializable {\n  public static final ChartOptions defaultSmall = new ChartOptions(500, 300);\n  public static final ChartOptions defaultBig = new ChartOptions(600, 400);\n\n  private int width = 400;\n  private int height = 400;\n\n  private String imgMapId;\n\n  private ChartColor[] colors = new ChartColor[] {ChartColor.BLUE, ChartColor.GREEN, ChartColor.RED};\n\n  public ChartOptions() {}\n\n  public ChartOptions(int width, int height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  public int getWidth() {\n    return width;\n  }\n\n  public void setWidth(int width) {\n    this.width = width;\n  }\n\n  public int getHeight() {\n    return height;\n  }\n\n  public void setHeight(int height) {\n    this.height = height;\n  }\n\n  public ChartColor[] getColors() {\n    return colors;\n  }\n\n  public void setColors(ChartColor[] colors) {\n    this.colors = colors;\n  }\n\n  public String getImgMapId() {\n    return imgMapId;\n  }\n\n  public void setImgMapId(String imgMapId) {\n    this.imgMapId = imgMapId;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartMetaData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartMetaData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 808,
    "content": "package at.a1ta.cuco.core.shared.dto.chart;\n\nimport java.io.Serializable;\n\npublic class ChartMetaData implements Serializable {\n  private String imageMap;\n  private String imageMapId;\n  private String hash;\n\n  public ChartMetaData() {}\n\n  public ChartMetaData(String imageMapId, String imageMap, String hash) {\n    this.imageMap = imageMap;\n    this.setImageMapId(imageMapId);\n    this.hash = hash;\n  }\n\n  public String getImageMap() {\n    return imageMap;\n  }\n\n  public void setImageMap(String imageMap) {\n    this.imageMap = imageMap;\n  }\n\n  public void setImageMapId(String imageMapId) {\n    this.imageMapId = imageMapId;\n  }\n\n  public String getImageMapId() {\n    return imageMapId;\n  }\n\n  public String getHash() {\n    return hash;\n  }\n\n  public void setHash(String hash) {\n    this.hash = hash;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartColor.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/chart/ChartColor.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 312,
    "content": "package at.a1ta.cuco.core.shared.dto.chart;\n\npublic enum ChartColor {\n  RED(255, 10, 10), GREEN(60, 190, 50), BLUE(10, 10, 255), BLACK(0, 0, 0);\n\n  public final int r;\n  public final int g;\n  public final int b;\n\n  private ChartColor(int r, int g, int b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/marketingproduct/ProductMoveAction.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/marketingproduct/ProductMoveAction.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 101,
    "content": "package at.a1ta.cuco.core.shared.dto.marketingproduct;\n\npublic enum ProductMoveAction {\n  UP, DOWN\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/marketingproduct/MarketingProductGroup.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/marketingproduct/MarketingProductGroup.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 124,
    "content": "package at.a1ta.cuco.core.shared.dto.marketingproduct;\n\npublic enum MarketingProductGroup {\n  PRODUCT, ADDITIONAL_PRODUCT\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/DefaultProductNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/DefaultProductNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 12029,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\n\nimport at.a1ta.bite.core.shared.util.CommonUtils;\nimport at.a1ta.cuco.core.shared.dto.IndexationStatus;\nimport at.a1ta.cuco.core.shared.validator.CommonValidator;\n\n@SuppressWarnings(\"serial\")\npublic class DefaultProductNode extends BaseNode implements Serializable {\n  public enum DefaultProductNodeType {\n    BUNDLE, COMPONENT, VOICE\n  }\n\n  public enum ProductType {\n    FIXED, MOBILE, INET, UNDEFINED, TV\n  }\n\n  public enum ProductPromotionStatus {\n    AVAILABLE, NOT_AVAILABLE, UNKNOWN\n  }\n\n  private String text;\n  private DefaultProductNodeType productType;\n  private ProductType voiceProductType;\n  private CallNumber callNumber;\n  private BillableUser billableUser;\n  private String productStatus = \"\";\n  private String commitmentStartDate;\n  private String productBrand;\n  private String productName;\n  private String commitmentEndDate;\n  private Integer commitmentDuration;\n  private String productOfferingTermId;\n  private String autovvlDuration;\n  private String autovvlStartDate;\n  private String autovvlEndDate;\n  private String productCharacteristicValuesAsString;\n  private String validForStart;\n  private String validForEnd;\n  private boolean hasOANProduct = false;\n  private boolean hasOANProductInHiddenNodes = false;\n  private MetaData productCharacteristicValuesAsMetaData;\n  private boolean matchingCallNumberWithRootSubscription = false;\n  private CallNumber rootCallNumberForBundleProduct;\n\n  private ArrayList<CuCoProdPriceCharge> priceTree = new ArrayList<CuCoProdPriceCharge>();\n\n  private ArrayList<CuCoComponentProductPrice> allPrices = new ArrayList<CuCoComponentProductPrice>();\n\n  private ProductPromotionStatus promotionStatus = ProductPromotionStatus.UNKNOWN;\n\n  public ProductPromotionStatus getPromotionStatus() {\n    return promotionStatus;\n  }\n\n  public void setPromotionStatus(ProductPromotionStatus promotionStatus) {\n    this.promotionStatus = promotionStatus;\n  }\n\n  @Override\n  public String getText() {\n    return text;\n  }\n\n  public void setText(String text) {\n    this.text = text;\n  }\n\n  public DefaultProductNodeType getProductType() {\n    return productType;\n  }\n\n  public void setProductType(DefaultProductNodeType productType) {\n    this.productType = productType;\n  }\n\n  public boolean hasVoiceProductType() {\n    return voiceProductType != null;\n  }\n\n  public ProductType getVoiceProductType() {\n    return voiceProductType;\n  }\n\n  public void setVoiceProductType(ProductType voiceProductType) {\n    this.voiceProductType = voiceProductType;\n  }\n\n  public boolean hasCallNumber() {\n    return callNumber != null;\n  }\n\n  @Override\n  public CallNumber getCallNumber() {\n    return callNumber;\n  }\n\n  @Override\n  public void setCallNumber(CallNumber callNumber) {\n    this.callNumber = callNumber;\n  }\n\n  @Override\n  public BillableUser getBillableUser() {\n    return billableUser;\n  }\n\n  @Override\n  public void setBillableUser(BillableUser billableUser) {\n    this.billableUser = billableUser;\n  }\n\n  // CMSYS703 Start\n  public void setCommitmentStartDate(String commitmentStartDate) {\n    this.commitmentStartDate = commitmentStartDate;\n  }\n\n  public String getCommitmentStartDate() {\n    return commitmentStartDate;\n  }\n\n  public void setCommitmentEndDate(String commitmentEndDate) {\n    this.commitmentEndDate = commitmentEndDate;\n  }\n\n  public String getCommitmentEndDate() {\n    return commitmentEndDate;\n  }\n\n  public void setCommitmentDuration(Integer commitmentDuration) {\n    this.commitmentDuration = commitmentDuration;\n  }\n\n  public Integer getCommitmentDuration() {\n    return commitmentDuration;\n  }\n\n  public void setProductOfferingTermId(String productOfferingTermId) {\n    this.productOfferingTermId = productOfferingTermId;\n  }\n\n  public String getProductOfferingTermId() {\n    return productOfferingTermId;\n  }\n\n  public void setAutoVVLDuration(String autovvlDuration) {\n    this.autovvlDuration = autovvlDuration;\n  }\n\n  public String getAutoVVLDuration() {\n    return autovvlDuration;\n  }\n\n  public void setAutoVVLStartDate(String autovvlStartDate) {\n    this.autovvlStartDate = autovvlStartDate;\n  }\n\n  public String getAutoVVLStartDate() {\n    return autovvlStartDate;\n  }\n\n  public void setAutoVVLEndDate(String autovvlEndDate) {\n    this.autovvlEndDate = autovvlEndDate;\n  }\n\n  public String getAutoVVLEndDate() {\n    return autovvlEndDate;\n  }\n\n  public void addToPriceTree(CuCoProdPriceCharge cuCoProdPriceCharge) {\n    if (this.priceTree == null) {\n      this.priceTree = new ArrayList<CuCoProdPriceCharge>();\n    }\n    this.priceTree.add(cuCoProdPriceCharge);\n  }\n\n  public ArrayList<CuCoComponentProductPrice> getAllPrices() {\n    return allPrices;\n  }\n\n  public void setAllPrices(ArrayList<CuCoComponentProductPrice> allPrices) {\n    this.allPrices = allPrices;\n  }\n\n  public void addToAllPrices(CuCoComponentProductPrice priceComponent) {\n    if (this.allPrices == null) {\n      this.allPrices = new ArrayList<CuCoComponentProductPrice>();\n    }\n    this.allPrices.add(priceComponent);\n  }\n\n  public ArrayList<CuCoProdPriceCharge> getPriceTree() {\n    return priceTree;\n  }\n\n  public void setPriceTree(ArrayList<CuCoProdPriceCharge> priceTree) {\n    this.priceTree = priceTree;\n  }\n\n  public String getProductBrand() {\n    return productBrand;\n  }\n\n  public void setProductBrand(String productBrand) {\n    this.productBrand = productBrand;\n  }\n\n  public String getProductStatus() {\n    return productStatus;\n  }\n\n  public void setProductStatus(String productStatus) {\n    this.productStatus = productStatus;\n  }\n\n  public String getProductCharacteristicValuesAsString() {\n    return productCharacteristicValuesAsString;\n  }\n\n  public void setProductCharacteristicValuesAsString(String productCharacteristicValuesAsString) {\n    this.productCharacteristicValuesAsString = productCharacteristicValuesAsString;\n  }\n\n  public String getProductName() {\n    return productName;\n  }\n\n  public void setProductName(String productName) {\n    this.productName = productName;\n  }\n\n  public MetaData getProductCharacteristicValuesAsMetaData() {\n    return productCharacteristicValuesAsMetaData;\n  }\n\n  public void setProductCharacteristicValuesAsMetaData(MetaData productCharacteristicValuesAsMetaData) {\n    this.productCharacteristicValuesAsMetaData = productCharacteristicValuesAsMetaData;\n  }\n\n  public String getValidForStart() {\n    return validForStart;\n  }\n\n  public void setValidForStart(String validForStart) {\n    this.validForStart = validForStart;\n  }\n\n  public String getValidForEnd() {\n    return validForEnd;\n  }\n\n  public void setValidForEnd(String validForEnd) {\n    this.validForEnd = validForEnd;\n  }\n\n  private String getIndexationText() {\n    if (getIdxStatus().equals(IndexationStatus.INDEXED)) {\n      return \"Mit Indexierung\";\n    } else if (getIdxStatus().equals(IndexationStatus.NOT_INDEXED)) {\n      return \"Indexierung ausgenommen\";\n    } else if (getIdxStatus().equals(IndexationStatus.INDEXED_NOT_STARTED)) {\n      return \"Mit Indexanpassung\";\n    }\n    return \"Ohne Indexierung\";\n  }\n\n  private String getCallNumberText() {\n    String callNum = getCallNumber() != null ? getCallNumber().toString() : \"-\";\n    return callNum.replaceAll(\"\\\\s+\", \"\");\n  }\n\n  private String getProductBrandText() {\n    return getProductBrand() != null ? getProductBrand() : \"-\";\n  }\n\n  private String getProductCharacteristicValuesAsStringText() {\n    String removeTags1 = getProductCharacteristicValuesAsString() != null ? (getProductCharacteristicValuesAsString().replace(\"<pre-wrap style='font-family: Verdana;'>\", \"\")) : \"\";\n    String removeTags2 = removeTags1.replace(\"</pre-wrap>\", \"\");\n    String removeTags3 = removeTags2.replace(\"<br/>\", \" \");\n    return removeTags3;\n  }\n\n  private String getPriceValueAsText() {\n    for (CuCoComponentProductPrice obj : getAllPrices()) {\n      if (obj.getPrice() != null && obj.getPrice().getAmount() != null) {\n        String price = obj.getPrice().getAmount().toString();\n        BigDecimal pricePrecisionUptoTwoDecimal = new BigDecimal(price);\n        pricePrecisionUptoTwoDecimal = pricePrecisionUptoTwoDecimal.setScale(2, BigDecimal.ROUND_HALF_UP);\n        String pricePrecisionUptoTwoDecimalWithEuro = pricePrecisionUptoTwoDecimal + \" \u20ac\";\n        return pricePrecisionUptoTwoDecimalWithEuro.replace('.', ',');\n      }\n    }\n    return \"-\";\n  }\n\n  private String getBillableUserText() {\n    return getBillableUser() != null ? getBillableUser().getUserName() : \"-\";\n  }\n\n  private ArrayList<BaseNode> getChildrenForSearchFilter() {\n    ArrayList<BaseNode> emptyChild = new ArrayList<BaseNode>();\n    if (hasChildren()) {\n      return getChildren();\n    }\n    return emptyChild;\n  }\n\n  @Override\n  public String toString() {\n    return CommonUtils.toString(text).toLowerCase() + \"~\" + (productType != null ? productType.toString().toLowerCase() : \"\") + \"~\" + getCallNumberText().toString().toLowerCase() + \"~\"\n        + getBillableUserText().toLowerCase() + \"~\" + (productStatus != null ? productStatus.toString().toLowerCase() : \"\") + \"~\" + getProductBrandText().toLowerCase() + \"~\"\n        + (productStatus != null ? productStatus.toLowerCase() : \"\") + \"~\" + getProductCharacteristicValuesAsStringText().toLowerCase() + \"~\"\n        + (promotionStatus != null ? promotionStatus.toString().toLowerCase() : \"\") + \"~\" + getIndexationText().toLowerCase() + \"~\" + getPriceValueAsText() + \"~\"\n        + getChildrenForSearchFilter().toString().toLowerCase() + \"~\" + getGeoCallNumberText() + \"~\"\n        + (getFormattedBindingStr(getCommitmentStartDate() != null ? getCommitmentStartDate() : \"\", getCommitmentEndDate() != null ? getCommitmentEndDate() : \"\")) + \"~\";\n  }\n\n  public boolean hasOANProductInChildNodes() {\n    boolean childNodeHasOANProduct = false;\n    if (hasChildren()) {\n      for (BaseNode child : getChildren()) {\n        if (child instanceof DefaultProductNode && ((DefaultProductNode) child).hasOANProductInChildNodes()) {\n          childNodeHasOANProduct = true;\n        }\n      }\n    }\n    return hasOANProduct || hasOANProductInHiddenNodes || childNodeHasOANProduct;\n  }\n\n  public boolean hasOANProductOnCurrentNode() {\n    return hasOANProduct;\n  }\n\n  public void setHasOANProduct(boolean hasOANProduct) {\n    this.hasOANProduct = hasOANProduct;\n  }\n\n  public boolean hasOANProductInHiddenNodes() {\n    return hasOANProductInHiddenNodes;\n  }\n\n  public void setHasOANProductInHiddenNodes(boolean hasOANProductInHiddenNodes) {\n    this.hasOANProductInHiddenNodes = hasOANProductInHiddenNodes;\n  }\n\n  public boolean isRootProductNode() {\n    // should be child of subscription node OR depth is 1 assuming parent level node is subscription node at depth 0\n    return getParent() != null ? getParent() instanceof SubscriptionNode : getDepth() == 1;\n  }\n\n  public boolean isMatchingCallNumberWithRootSubscription() {\n    return matchingCallNumberWithRootSubscription;\n  }\n\n  public void setMatchingCallNumberWithRootSubscription(boolean matchingCallNumberWithRootSubscription) {\n    this.matchingCallNumberWithRootSubscription = matchingCallNumberWithRootSubscription;\n  }\n\n  private String getFormattedBindingStr(String commitmentStartDt, String commitmentEndDt) {\n    if (CommonValidator.isBlank(commitmentStartDt) && CommonValidator.isBlank(commitmentEndDt)) {\n      return \"-\";\n    }\n    if (CommonValidator.isBlank(commitmentStartDt) && !CommonValidator.isBlank(commitmentEndDt)) {\n      return \"bis \" + commitmentEndDt.trim();\n    }\n\n    if (!CommonValidator.isBlank(commitmentStartDt) && CommonValidator.isBlank(commitmentEndDt)) {\n      return commitmentStartDt.trim() + \"  bis ?\";\n    }\n\n    return commitmentStartDt.trim() + \" bis \" + commitmentEndDt.trim();\n  }\n\n  public CallNumber getRootCallNumberForBundleProduct() {\n    return rootCallNumberForBundleProduct;\n  }\n\n  public void setRootCallNumberForBundleProduct(CallNumber rootCallNumberForBundleProduct) {\n    this.rootCallNumberForBundleProduct = rootCallNumberForBundleProduct;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/NodeHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/NodeHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2589,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport at.a1ta.cuco.core.shared.dto.product.DefaultProductNode.ProductType;\n\npublic class NodeHelper {\n  public static PartyNode getPartyNode(Node node) {\n    if (node instanceof PartyNode) {\n      return (PartyNode) node;\n    }\n    if (!node.hasParent()) {\n      return null;\n    }\n    if (node.getParent() instanceof PartyNode) {\n      return (PartyNode) node.getParent();\n    }\n    return getPartyNode(node.getParent());\n  }\n\n  public static LocationNode getLocationNode(Node node) {\n    if (node instanceof LocationNode) {\n      return (LocationNode) node;\n    }\n    if (!node.hasParent()) {\n      return null;\n    }\n    if (node.getParent() instanceof LocationNode) {\n      return (LocationNode) node.getParent();\n    }\n    return getLocationNode(node.getParent());\n  }\n\n  public static SubscriptionNode getSubscriptionNode(Node node) {\n    if (node instanceof SubscriptionNode) {\n      return (SubscriptionNode) node;\n    }\n    if (!node.hasParent()) {\n      return null;\n    }\n    if (node.getParent() instanceof SubscriptionNode) {\n      return (SubscriptionNode) node.getParent();\n    }\n    return getSubscriptionNode(node.getParent());\n  }\n\n  public static DefaultProductNode getDefaultProductNode(Node node) {\n    if (node instanceof DefaultProductNode) {\n      return (DefaultProductNode) node;\n    }\n    if (!node.hasParent()) {\n      return null;\n    }\n    if (node.getParent() instanceof DefaultProductNode) {\n      return (DefaultProductNode) node.getParent();\n    }\n    return getDefaultProductNode(node.getParent());\n  }\n\n  public static boolean hasChildProductNodeOfType(BaseNode node, ProductType type) {\n    if (node.getChildren() != null) {\n      for (Node child : node.getChildren()) {\n        if (child instanceof DefaultProductNode) {\n          DefaultProductNode productNode = (DefaultProductNode) child;\n          if (type.equals(productNode.getVoiceProductType())) {\n            return true;\n          } else if (hasChildProductNodeOfType(productNode, type)) {\n            return true;\n          }\n        } else if (hasChildProductNodeOfType((BaseNode) child, type)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public static DefaultSubscriptionNode getFirstChildSubscriptionNode(Node node) {\n    if (node.getChildren() != null) {\n      for (Node child : node.getChildren()) {\n        if (child instanceof DefaultSubscriptionNode) {\n          return (DefaultSubscriptionNode) child;\n        }\n        return getFirstChildSubscriptionNode(child);\n      }\n    }\n    return null;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/ProductHeaderNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/ProductHeaderNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1792,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\npublic class ProductHeaderNode extends BaseNode {\n  private static final long serialVersionUID = 1L;\n  private String nameHeader;\n  private String detailsHeader;\n  private String idxInfoHeader;\n  private String callNumberHeader;\n  private String brandHeader;\n  private String validFromHeader;\n  private String validToHeader;\n  private String productStatusHeader;\n\n  public String getNameHeader() {\n    return nameHeader;\n  }\n\n  public void setNameHeader(String nameHeader) {\n    this.nameHeader = nameHeader;\n  }\n\n  public String getDetailsHeader() {\n    return detailsHeader;\n  }\n\n  public void setDetailsHeader(String detailsHeader) {\n    this.detailsHeader = detailsHeader;\n  }\n\n  public String getIdxInfoHeader() {\n    return idxInfoHeader;\n  }\n\n  public void setIdxInfoHeader(String idxInfoHeader) {\n    this.idxInfoHeader = idxInfoHeader;\n  }\n\n  public String getCallNumberHeader() {\n    return callNumberHeader;\n  }\n\n  public void setCallNumberHeader(String callNumberHeader) {\n    this.callNumberHeader = callNumberHeader;\n  }\n\n  public String getBrandHeader() {\n    return brandHeader;\n  }\n\n  public void setBrandHeader(String brandHeader) {\n    this.brandHeader = brandHeader;\n  }\n\n  public String getValidFromHeader() {\n    return validFromHeader;\n  }\n\n  public void setValidFromHeader(String validFromHeader) {\n    this.validFromHeader = validFromHeader;\n  }\n\n  public String getValidToHeader() {\n    return validToHeader;\n  }\n\n  public void setValidToHeader(String validToHeader) {\n    this.validToHeader = validToHeader;\n  }\n\n  public String getProductStatusHeader() {\n    return productStatusHeader;\n  }\n\n  public void setProductStatusHeader(String productStatusHeader) {\n    this.productStatusHeader = productStatusHeader;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SubscriptionHeaderNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SubscriptionHeaderNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1759,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\npublic class SubscriptionHeaderNode extends SubscriptionNode {\n  private static final long serialVersionUID = 1L;\n  private String subscriptionIdHeader;\n  private String custAccountNoHeader;\n  private String callNumberHeader;\n  private String addressLine1Header;\n  private String addressLine2Header;\n  private String addressLine3Header;\n  private String typeHeader;\n\n  public String getSubscriptionIdHeader() {\n    return subscriptionIdHeader;\n  }\n\n  public void setSubscriptionIdHeader(String subscriptionIdHeader) {\n    this.subscriptionIdHeader = subscriptionIdHeader;\n  }\n\n  public String getCustAccountNoHeader() {\n    return custAccountNoHeader;\n  }\n\n  public void setCustAccountNoHeader(String custAccountNoHeader) {\n    this.custAccountNoHeader = custAccountNoHeader;\n  }\n\n  public String getCallNumberHeader() {\n    return callNumberHeader;\n  }\n\n  public void setCallNumberHeader(String callNumberHeader) {\n    this.callNumberHeader = callNumberHeader;\n  }\n\n  public String getAddressLine1Header() {\n    return addressLine1Header;\n  }\n\n  public void setAddressLine1Header(String addressLine1Header) {\n    this.addressLine1Header = addressLine1Header;\n  }\n\n  public String getAddressLine2Header() {\n    return addressLine2Header;\n  }\n\n  public void setAddressLine2Header(String addressLine2Header) {\n    this.addressLine2Header = addressLine2Header;\n  }\n\n  public String getAddressLine3Header() {\n    return addressLine3Header;\n  }\n\n  public void setAddressLine3Header(String addressLine3Header) {\n    this.addressLine3Header = addressLine3Header;\n  }\n\n  public String getTypeHeader() {\n    return typeHeader;\n  }\n\n  public void setTypeHeader(String typeHeader) {\n    this.typeHeader = typeHeader;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SAPSubscriptionNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SAPSubscriptionNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 724,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class SAPSubscriptionNode extends SubscriptionNode implements Serializable {\n  public SAPSubscriptionNode() {\n    super();\n  }\n\n  private String consigneeId;\n  private String consigneeName;\n\n  public String getConsigneeId() {\n    return consigneeId;\n  }\n\n  public void setConsigneeId(String consigneeId) {\n    this.consigneeId = consigneeId;\n  }\n\n  public String getConsigneeName() {\n    return consigneeName;\n  }\n\n  public void setConsigneeName(String consigneeName) {\n    this.consigneeName = consigneeName;\n  }\n\n  @Override\n  public String getText() {\n    return (consigneeName != null ? consigneeName : \"\") + \" - \" + consigneeId;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/Node.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/Node.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 603,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic interface Node extends Serializable {\n\n  public String getText();\n\n  public String getId();\n\n  public void setId(String id);\n\n  public BaseNode getParent();\n\n  public void setParent(BaseNode parent);\n\n  public ArrayList<BaseNode> getChildren();\n\n  public void setChildren(ArrayList<BaseNode> children);\n\n  public void addChild(BaseNode child);\n\n  public boolean hasParent();\n\n  public boolean hasChildren();\n\n  public MetaData getMetaData();\n\n  public void setMetaData(MetaData metaData);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoComponentProductPrice.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoComponentProductPrice.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1122,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.math.BigDecimal;\nimport java.util.Date;\n\nimport at.a1ta.cuco.core.shared.dto.IndexationStatus;\n\npublic class CuCoComponentProductPrice extends CuCoProductPriceBase {\n\n  private CuCoPrice price;\n  private BigDecimal taxRate;\n  private IndexationStatus idxStatus;\n  private Date idxStartDate;\n  private CuCoPrice basePrice;\n\n  public CuCoPrice getPrice() {\n    return price;\n  }\n\n  public void setPrice(CuCoPrice price) {\n    this.price = price;\n  }\n\n  public BigDecimal getTaxRate() {\n    return taxRate;\n  }\n\n  public void setTaxRate(BigDecimal taxRate) {\n    this.taxRate = taxRate;\n  }\n\n  public IndexationStatus getIdxStatus() {\n    return idxStatus;\n  }\n\n  public void setIdxStatus(IndexationStatus idxStatus) {\n    this.idxStatus = idxStatus;\n  }\n\n  public Date getIdxStartDate() {\n    return idxStartDate;\n  }\n\n  public void setIdxStartDate(Date idxStartDate) {\n    this.idxStartDate = idxStartDate;\n  }\n\n  public CuCoPrice getBasePrice() {\n    return basePrice;\n  }\n\n  public void setBasePrice(CuCoPrice basePrice) {\n    this.basePrice = basePrice;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CCTSupervisorSelect.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CCTSupervisorSelect.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1128,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class CCTSupervisorSelect implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String superVisor; // mitarbeiter\n  private int approvalLevel; // stufe\n  private String release; // freigabe\n  private String date;\n  private String comment;\n\n  public String getSuperVisor() {\n    return superVisor;\n  }\n\n  public void setSuperVisor(String superVisor) {\n    this.superVisor = superVisor;\n  }\n\n  public int getApprovalLevel() {\n    return approvalLevel;\n  }\n\n  public void setApprovalLevel(int approvalLevel) {\n    this.approvalLevel = approvalLevel;\n  }\n\n  public String getRelease() {\n    return release;\n  }\n\n  public void setRelease(String release) {\n    this.release = release;\n  }\n\n  public String getDate() {\n    return date;\n  }\n\n  public void setDate(String date) {\n    this.date = date;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public static long getSerialversionuid() {\n    return serialVersionUID;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/Promotion.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/Promotion.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1299,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Promotion implements Serializable {\n\n  private String soc;\n  private String reasonCode;\n  private String reasonDescription;\n  private Date effectiveDate;\n  private Date expirationDate;\n  private double discountPercent;\n\n  public String getSoc() {\n    return soc;\n  }\n\n  public void setSoc(String soc) {\n    this.soc = soc;\n  }\n\n  public String getReasonCode() {\n    return reasonCode;\n  }\n\n  public void setReasonCode(String reasonCode) {\n    this.reasonCode = reasonCode;\n  }\n\n  public String getReasonDescription() {\n    return reasonDescription;\n  }\n\n  public void setReasonDescription(String reasonDescription) {\n    this.reasonDescription = reasonDescription;\n  }\n\n  public Date getEffectiveDate() {\n    return effectiveDate;\n  }\n\n  public void setEffectiveDate(Date effectiveDate) {\n    this.effectiveDate = effectiveDate;\n  }\n\n  public Date getExpirationDate() {\n    return expirationDate;\n  }\n\n  public void setExpirationDate(Date expirationDate) {\n    this.expirationDate = expirationDate;\n  }\n\n  public double getDiscountPercent() {\n    return discountPercent;\n  }\n\n  public void setDiscountPercent(double discountPercent) {\n    this.discountPercent = discountPercent;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/PhysicalResourceNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/PhysicalResourceNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 305,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class PhysicalResourceNode extends BaseNode implements Serializable {\n  private String text;\n\n  @Override\n  public String getText() {\n    return text;\n  }\n\n  public void setText(String text) {\n    this.text = text;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/PartyNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/PartyNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 611,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class PartyNode extends BaseNode implements Serializable {\n  private String name;\n  private String address;\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getAddress() {\n    return address;\n  }\n\n  public void setAddress(String address) {\n    this.address = address;\n  }\n\n  @Override\n  public String getText() {\n    return name + \" (\" + getPartyId() + \")\";\n  }\n\n  public String getDetailedText() {\n    return getText() + \", \" + address;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/DefaultSubscriptionType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/DefaultSubscriptionType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 203,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic enum DefaultSubscriptionType implements Serializable {\n  Wireline, Mobile, Mixed, Marketplace, BillableUser, Unknown\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/AccountAware.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/AccountAware.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 867,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.shared.dto.product;\n\npublic interface AccountAware {\n\n  String getAccountNumber();\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CallNumber.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CallNumber.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2111,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class CallNumber implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String countryCode;\n  private String onkz;\n  private String tnum;\n\n  public CallNumber() {\n    // default constructor to support GWT parsing\n  }\n\n  public CallNumber(String countryCode, String onkz, String tnum) {\n    this.countryCode = countryCode;\n    this.onkz = onkz;\n    this.tnum = tnum;\n  }\n\n  public String getCountryCode() {\n    return countryCode;\n  }\n\n  public void setCountryCode(String countryCode) {\n    this.countryCode = countryCode;\n  }\n\n  public String getOnkz() {\n    return onkz;\n  }\n\n  public void setOnkz(String onkz) {\n    this.onkz = onkz;\n  }\n\n  public String getTnum() {\n    return tnum;\n  }\n\n  public void setTnum(String tnum) {\n    this.tnum = tnum;\n  }\n\n  @Override\n  public String toString() {\n    return countryCode + \" \" + onkz + \" \" + tnum;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((countryCode == null) ? 0 : countryCode.hashCode());\n    result = prime * result + ((onkz == null) ? 0 : onkz.hashCode());\n    result = prime * result + ((tnum == null) ? 0 : tnum.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    CallNumber other = (CallNumber) obj;\n    if (countryCode == null) {\n      if (other.countryCode != null) {\n        return false;\n      }\n    } else if (!countryCode.trim().equals(other.countryCode.trim())) {\n      return false;\n    }\n    if (onkz == null) {\n      if (other.onkz != null) {\n        return false;\n      }\n    } else if (!onkz.trim().equals(other.onkz.trim())) {\n      return false;\n    }\n    if (tnum == null) {\n      if (other.tnum != null) {\n        return false;\n      }\n    } else if (!tnum.trim().equals(other.tnum.trim())) {\n      return false;\n    }\n    return true;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/DefaultSubscriptionNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/DefaultSubscriptionNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5452,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.bite.core.shared.util.CommonUtils;\nimport at.a1ta.cuco.core.shared.dto.IndexationStatus;\n\n@SuppressWarnings(\"serial\")\npublic class DefaultSubscriptionNode extends SubscriptionNode {\n\n  public DefaultSubscriptionNode(String accountNumber, String subscriptionId, DefaultSubscriptionType type, CallNumber callNumber, LastMileId lastMileId, BillableUser billableUser) {\n    super(accountNumber, subscriptionId);\n    this.type = type;\n    this.callNumber = callNumber;\n    this.lastMileId = lastMileId;\n    this.billableUser = billableUser;\n  }\n\n  public DefaultSubscriptionNode() {\n    super();\n  }\n\n  private DefaultSubscriptionType type;\n  private String typeText;\n  private CallNumber callNumber;\n  private BillableUser billableUser;\n  private LastMileId lastMileId;\n  private String address1;\n  private String address2;\n  private String address3;\n  private CallNumber rootCallNumberForBundleProduct;\n  private Integer childrenWithMatchingCallNumbersArraySize;\n\n  public DefaultSubscriptionType getType() {\n    return type;\n  }\n\n  public void setType(DefaultSubscriptionType type) {\n    this.type = type;\n  }\n\n  @Override\n  public CallNumber getCallNumber() {\n    return callNumber;\n  }\n\n  @Override\n  public void setCallNumber(CallNumber callNumber) {\n    this.callNumber = callNumber;\n  }\n\n  @Override\n  public BillableUser getBillableUser() {\n    return billableUser;\n  }\n\n  @Override\n  public void setBillableUser(BillableUser billableUser) {\n    this.billableUser = billableUser;\n  }\n\n  public LastMileId getLastMileId() {\n    return lastMileId;\n  }\n\n  public void setLastMileId(LastMileId lastMileId) {\n    this.lastMileId = lastMileId;\n  }\n\n  @Override\n  public String getText() {\n    String text = \"\";\n    if (lastMileId != null) {\n      text = lastMileId.toString();\n    } else if (callNumber != null) {\n      text = callNumber.toString();\n    } else if (billableUser != null) {\n      text = billableUser.getUserName();\n    } else if (getTopLevelProducts() != null) {\n      text = getTopLevelProducts();\n    }\n    return text;\n  }\n\n  public String getAddress1() {\n    return address1;\n  }\n\n  public void setAddress1(String address1) {\n    this.address1 = address1;\n  }\n\n  public String getAddress2() {\n    return address2;\n  }\n\n  public void setAddress2(String address2) {\n    this.address2 = address2;\n  }\n\n  public String getAddress3() {\n    return address3;\n  }\n\n  public void setAddress3(String address3) {\n    this.address3 = address3;\n  }\n\n  private String getCallNumberText() {\n    String callNum = getCallNumber() != null ? getCallNumber().toString() : \"-\";\n    return callNum.replaceAll(\"\\\\s+\", \"\");\n  }\n\n  private String getAddress1text() {\n    return getAddress1() != null ? getAddress1() : \"-\";\n  }\n\n  private String getAddress2Text() {\n    return getAddress2() != null ? getAddress2() : \"-\";\n  }\n\n  private String getAddress3Text() {\n    return getAddress3() != null ? getAddress3() : \"-\";\n  }\n\n  private String getIndexationText() {\n    if (getIdxStatus().equals(IndexationStatus.INDEXED)) {\n      return \"Mit Indexierung\";\n    } else if (getIdxStatus().equals(IndexationStatus.NOT_INDEXED)) {\n      return \"Indexierung ausgenommen\";\n    } else if (getIdxStatus().equals(IndexationStatus.INDEXED_NOT_STARTED)) {\n      return \"Mit Indexanpassung\";\n    }\n    return \"Ohne Indexierung\";\n  }\n\n  private String getBillableUserText() {\n    return getBillableUser() != null ? getBillableUser().getUserName() : \"-\";\n  }\n\n  private ArrayList<BaseNode> getChildrenForSearchFilter() {\n    ArrayList<BaseNode> emptyChild = new ArrayList<BaseNode>();\n    if (hasChildren()) {\n      return getChildren();\n    }\n    return emptyChild;\n  }\n\n  @Override\n  public String toString() {\n    return CommonUtils.toString(type).toString() + \"~\" + CommonUtils.toString(getCallNumberText()).toLowerCase() + \"~\" + CommonUtils.toString(getBillableUserText()).toLowerCase() + \"~\"\n        + CommonUtils.toString(getAddress1text()).toLowerCase() + \"~\" + CommonUtils.toString(getAddress2Text()).toLowerCase() + \"~\" + CommonUtils.toString(getAddress3Text()).toLowerCase() + \"~\"\n        + CommonUtils.toString(getAccountNumber()).toLowerCase() + \"~\" + CommonUtils.toString(getSubscriptionId()).toLowerCase() + \"~\" + CommonUtils.toString(getVertragNoForDisplay()).toLowerCase()\n        + \"~\" + CommonUtils.toString(getIndexationText()).toLowerCase() + \"~\" + CommonUtils.toString(getChildrenForSearchFilter()).toString().toLowerCase() + \"~\"\n        + CommonUtils.toString(getGeoCallNumberText()) + \"~\" + (getTypeText() != null ? getTypeText().toLowerCase() : \"\") + \"~\"\n        + (getTopLevelProducts() != null ? getTopLevelProducts().toLowerCase() : \"\") + \"~\";\n  }\n\n  public String getTypeText() {\n    return typeText;\n  }\n\n  public void setTypeText(String typeText) {\n    this.typeText = typeText;\n  }\n\n  public CallNumber getRootCallNumberForBundleProduct() {\n    return rootCallNumberForBundleProduct;\n  }\n\n  public void setRootCallNumberForBundleProduct(CallNumber callNumber) {\n    this.rootCallNumberForBundleProduct = callNumber;\n  }\n\n  public Integer getChildrenWithMatchingCallNumbersArraySize() {\n    return childrenWithMatchingCallNumbersArraySize;\n  }\n\n  public void setChildrenWithMatchingCallNumbersArraySize(Integer childrenWithMatchingCallNumbersArraySize) {\n    this.childrenWithMatchingCallNumbersArraySize = childrenWithMatchingCallNumbersArraySize;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/BillableUser.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/BillableUser.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 568,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class BillableUser implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String userName;\n\n  public BillableUser() {\n    // Do Nothing because default constructor.\n  }\n\n  public BillableUser(String userName) {\n    this.userName = userName;\n  }\n\n  public String getUserName() {\n    return userName;\n  }\n\n  public void setUserName(String userName) {\n    this.userName = userName;\n  }\n\n  @Override\n  public String toString() {\n    return userName;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/BaseNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/BaseNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5330,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.IndexationStatus;\n\npublic class BaseNode implements Node {\n  private String id;\n  private String contractSegment;\n  private BaseNode parent;\n  private int depth;\n  private int effectiveDepthForView;\n  private ArrayList<BaseNode> children = new ArrayList<BaseNode>();\n  private boolean childDetailsLoaded;\n  private boolean expanded;\n  private boolean hasIndirectParent;\n  private boolean feasibilityCheckAvailable;\n  private boolean displayA1CoachLink;\n  private String linkedSubscriptionId;\n\n  public boolean isDisplayA1CoachLink() {\n    return displayA1CoachLink;\n  }\n\n  public void setDisplayA1CoachLink(boolean displayA1CoachLink) {\n    this.displayA1CoachLink = displayA1CoachLink;\n  }\n\n  public boolean isFeasibilityCheckAvailable() {\n    return feasibilityCheckAvailable;\n  }\n\n  public void setFeasibilityCheckAvailable(boolean feasibilityCheckAvailable) {\n    this.feasibilityCheckAvailable = feasibilityCheckAvailable;\n  }\n\n  private MetaData metaData;\n  private CallNumber callNumber;\n  private BillableUser billableUser;\n  private GeoCallNumber geoCallNumber;\n  private IndexationStatus idxStatus = IndexationStatus.NOT_AVAILABLE;\n  private DISPLAY intendedUIDisplay;\n  private long partyId;\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public enum DISPLAY {\n    BROWSER, TABLE\n  }\n\n  public DISPLAY getIntendedUIDisplay() {\n    return intendedUIDisplay;\n  }\n\n  public void setIntendedUIDisplay(DISPLAY intendedUIDisplay) {\n    this.intendedUIDisplay = intendedUIDisplay;\n  }\n\n  @Override\n  public String getText() {\n    return \"\";\n  }\n\n  @Override\n  public String getId() {\n    return id;\n  }\n\n  @Override\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  @Override\n  public BaseNode getParent() {\n    return parent;\n  }\n\n  @Override\n  public void setParent(BaseNode parent) {\n    this.parent = parent;\n  }\n\n  @Override\n  public ArrayList<BaseNode> getChildren() {\n    return children;\n  }\n\n  @Override\n  public void setChildren(ArrayList<BaseNode> children) {\n    this.children = children;\n  }\n\n  @Override\n  public void addChild(BaseNode child) {\n    if (children == null) {\n      children = new ArrayList<BaseNode>();\n    }\n    children.add(child);\n  }\n\n  @Override\n  public boolean hasParent() {\n    return parent != null;\n  }\n\n  @Override\n  public boolean hasChildren() {\n    return children != null && !children.isEmpty();\n  }\n\n  @Override\n  public MetaData getMetaData() {\n    return metaData;\n  }\n\n  @Override\n  public void setMetaData(MetaData metaData) {\n    this.metaData = metaData;\n  }\n\n  protected String ellipsis(String input, int maxLen) {\n    if (input == null) {\n      return null;\n    }\n    if ((input.length() < maxLen) || (maxLen < 3)) {\n      return input;\n    }\n    return input.substring(0, maxLen - 3) + \"...\";\n  }\n\n  public IndexationStatus getIdxStatus() {\n    return idxStatus;\n  }\n\n  public void setIdxStatus(IndexationStatus idxStatus) {\n    this.idxStatus = idxStatus;\n  }\n\n  public String getContractSegment() {\n    return contractSegment;\n  }\n\n  public void setContractSegment(String contractSegment) {\n    this.contractSegment = contractSegment;\n  }\n\n  public CallNumber getCallNumber() {\n    return callNumber;\n  }\n\n  public void setCallNumber(CallNumber callNumber) {\n    this.callNumber = callNumber;\n  }\n\n  public BillableUser getBillableUser() {\n    return billableUser;\n  }\n\n  public void setBillableUser(BillableUser billableUser) {\n    this.billableUser = billableUser;\n  }\n\n  public GeoCallNumber getGeoCallNumber() {\n    return geoCallNumber;\n  }\n\n  public void setGeoCallNumber(GeoCallNumber geoCallNumber) {\n    this.geoCallNumber = geoCallNumber;\n  }\n\n  public int getDepth() {\n    return depth;\n  }\n\n  public void setDepth(int depth) {\n    this.depth = depth;\n  }\n\n  public boolean isExpanded() {\n    return expanded;\n  }\n\n  public void setExpanded(boolean expanded) {\n    this.expanded = expanded;\n  }\n\n  public boolean isChildDetailsLoaded() {\n    return childDetailsLoaded;\n  }\n\n  public void setChildDetailsLoaded(boolean childDetailsLoaded) {\n    this.childDetailsLoaded = childDetailsLoaded;\n  }\n\n  public String getSubscriptionCallNumber() {\n    return getCallNumber() != null ? (getCallNumber().getCountryCode() + getCallNumber().getOnkz() + getCallNumber().getTnum()) : \"\";\n  }\n\n  public String getGeoCallNumberText() {\n    return (getGeoCallNumber() != null ? getGeoCallNumber().toString() : \"\").replaceAll(\"\\\\s+\", \"\");\n  }\n\n  public String getLinkedSubscriptionId() {\n    return linkedSubscriptionId;\n  }\n\n  public void setLinkedSubscriptionId(String linkedSubscriptionId) {\n    this.linkedSubscriptionId = linkedSubscriptionId;\n  }\n\n  public int getEffectiveDepthForView() {\n    return getParent() != null ? getParent().getEffectiveDepthForView() + 1 : (effectiveDepthForView == 0 ? getDepth() : effectiveDepthForView);\n  }\n\n  public void setEffectiveDepthForView(int effectiveDepthForView) {\n    this.effectiveDepthForView = effectiveDepthForView;\n  }\n\n  public boolean isHavingIndirectParent() {\n    return hasIndirectParent;\n  }\n\n  public void setHasIndirectParent(boolean hasIndirectParent) {\n    this.hasIndirectParent = hasIndirectParent;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/Coordinates.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/Coordinates.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 620,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class Coordinates implements Serializable {\n\n  private double longitude;\n  private double latitude;\n\n  public Coordinates() {}\n\n  public Coordinates(double longitude, double latitude) {\n    this.longitude = longitude;\n    this.latitude = latitude;\n  }\n\n  public double getLongitude() {\n    return longitude;\n  }\n\n  public void setLongitude(double longitude) {\n    this.longitude = longitude;\n  }\n\n  public double getLatitude() {\n    return latitude;\n  }\n\n  public void setLatitude(double latitude) {\n    this.latitude = latitude;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/LastMileId.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/LastMileId.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 901,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class LastMileId implements Serializable{\n\t  private String countryCode;\n\t  private String onkz;\n\t  private String tnum;\n\n\t  public LastMileId() {\n\n\t  }\n\n\t  public LastMileId(String countryCode, String onkz, String tnum) {\n\t    this.countryCode = countryCode;\n\t    this.onkz = onkz;\n\t    this.tnum = tnum;\n\t  }\n\n\t  public String getCountryCode() {\n\t    return countryCode;\n\t  }\n\n\t  public void setCountryCode(String countryCode) {\n\t    this.countryCode = countryCode;\n\t  }\n\n\t  public String getOnkz() {\n\t    return onkz;\n\t  }\n\n\t  public void setOnkz(String onkz) {\n\t    this.onkz = onkz;\n\t  }\n\n\t  public String getTnum() {\n\t    return tnum;\n\t  }\n\n\t  public void setTnum(String tnum) {\n\t    this.tnum = tnum;\n\t  }\n\n\t  @Override\n\t  public String toString() {\n\t    return countryCode + \" \" + onkz + \" \" + tnum;\n\t  }\n\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/GetPartySummaryResponse.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/GetPartySummaryResponse.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1951,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class GetPartySummaryResponse implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private boolean errorResponse;\n  private String errorText;\n  private ArrayList<PartySummaryItem> productSummaryItems = new ArrayList<PartySummaryItem>();\n  private ArrayList<PartySummaryItem> subscriptionSummaryItems = new ArrayList<PartySummaryItem>();\n\n  public ArrayList<PartySummaryItem> getProductSummaryItems() {\n    return productSummaryItems;\n  }\n\n  public void setProductSummaryItems(ArrayList<PartySummaryItem> productSummaryItems) {\n    this.productSummaryItems = productSummaryItems;\n  }\n\n  public ArrayList<PartySummaryItem> getSubscriptionSummaryItems() {\n    return subscriptionSummaryItems;\n  }\n\n  public void setSubscriptionSummaryItems(ArrayList<PartySummaryItem> subscriptionSummaryItems) {\n    this.subscriptionSummaryItems = subscriptionSummaryItems;\n  }\n\n  public boolean isErrorResponse() {\n    return errorResponse;\n  }\n\n  public void setErrorResponse(boolean errorResponse) {\n    this.errorResponse = errorResponse;\n  }\n\n  public String getErrorText() {\n    return errorText;\n  }\n\n  public void setErrorText(String errorText) {\n    this.errorText = errorText;\n  }\n\n  public boolean containsSubscriptionSummaryItem(String key) {\n    if (getSubscriptionSummaryItems() != null && key != null) {\n      for (PartySummaryItem itm : getSubscriptionSummaryItems()) {\n        if (key.equalsIgnoreCase(itm.getName())) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public PartySummaryItem getSubscriptionSummaryItemByKey(String key) {\n    if (getSubscriptionSummaryItems() != null && key != null) {\n      for (PartySummaryItem itm : getSubscriptionSummaryItems()) {\n        if (key.equalsIgnoreCase(itm.getName())) {\n          return itm;\n        }\n      }\n    }\n    return null;\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SAPProductNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SAPProductNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 548,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class SAPProductNode extends BaseNode implements Serializable {\n  private String text;\n  private MetaData equipmentAttributes;\n\n  @Override\n  public String getText() {\n    return text;\n  }\n\n  public void setText(String text) {\n    this.text = text;\n  }\n\n  public MetaData getEquipmentAttributes() {\n    return equipmentAttributes;\n  }\n\n  public void setEquipmentAttributes(MetaData equipmentAttributes) {\n    this.equipmentAttributes = equipmentAttributes;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/MetaData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/MetaData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1400,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class MetaData implements Serializable {\n  private ArrayList<MetaDataEntry> list = new ArrayList<MetaDataEntry>();\n  private HashMap<String, MetaDataEntry> map = new HashMap<String, MetaDataEntry>();\n\n  public void put(ArrayList<MetaDataEntry> entries) {\n    for (MetaDataEntry entry : entries) {\n      put(entry);\n\n    }\n  }\n\n  public void put(MetaDataEntry entry) {\n    list.add(entry);\n    map.put(entry.getId() != null ? entry.getId().toLowerCase() : \"\", entry);\n  }\n\n  public ArrayList<MetaDataEntry> getAll() {\n    return list;\n  }\n\n  public boolean hasMetaData() {\n    return !list.isEmpty();\n  }\n\n  public boolean hasMetaDataEntryWithName(String name) {\n    for (MetaDataEntry entry : getAll()) {\n      if (entry != null && entry.getName() != null && entry.getName().equalsIgnoreCase(name)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public boolean hasMetaDataEntryWithID(String id) {\n    for (String key : map.keySet()) {\n      if (key != null && key.equalsIgnoreCase(id)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    for (MetaDataEntry entry : list) {\n      sb.append(entry).append(\"\\r\\n\");\n    }\n    return sb.toString();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoProductPriceBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoProductPriceBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 743,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class CuCoProductPriceBase implements Serializable {\n\n  private String productPriceId;\n  private String productOfferingPriceId;\n  private String Name;\n\n  public String getProductPriceId() {\n    return productPriceId;\n  }\n\n  public void setProductPriceId(String productPriceId) {\n    this.productPriceId = productPriceId;\n  }\n\n  public String getProductOfferingPriceId() {\n    return productOfferingPriceId;\n  }\n\n  public void setProductOfferingPriceId(String productOfferingPriceId) {\n    this.productOfferingPriceId = productOfferingPriceId;\n  }\n\n  public String getName() {\n    return Name;\n  }\n\n  public void setName(String name) {\n    Name = name;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoProdPriceCharge.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoProdPriceCharge.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1580,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class CuCoProdPriceCharge extends CuCoComponentProductPrice {\n  public CuCoProdPriceCharge(ProdPriceChargeType chargeType) {\n    super();\n    this.chargeType = chargeType;\n  }\n\n  public CuCoProdPriceCharge() {\n    super();\n  }\n\n  public enum ProdPriceChargeType {\n    RECURRING, SIMPLE_USAGE, ONE_TIME, ACCOUNT_DISCOUNT\n  }\n\n  String frequency;\n  String UnitOfMeasure;\n  ProdPriceChargeType chargeType = ProdPriceChargeType.RECURRING;\n\n  private List<CuCoProdPriceAlterations> alterations = new ArrayList<CuCoProdPriceAlterations>();\n\n  public String getFrequency() {\n    return frequency;\n  }\n\n  public void setFrequency(String frequency) {\n    this.frequency = frequency;\n  }\n\n  public String getUnitOfMeasure() {\n    return UnitOfMeasure;\n  }\n\n  public void setUnitOfMeasure(String unitOfMeasure) {\n    UnitOfMeasure = unitOfMeasure;\n  }\n\n  public ProdPriceChargeType getChargeType() {\n    return chargeType;\n  }\n\n  public void setChargeType(ProdPriceChargeType chargeType) {\n    this.chargeType = chargeType;\n  }\n\n  public List<CuCoProdPriceAlterations> getAlterations() {\n    return alterations;\n  }\n\n  public void setAlterations(List<CuCoProdPriceAlterations> alterations) {\n    this.alterations = alterations;\n  }\n\n  public void addToAlterations(CuCoProdPriceAlterations cuCoProdPriceAlterations) {\n    if (this.alterations == null) {\n      this.alterations = new ArrayList<CuCoProdPriceAlterations>();\n    }\n    this.alterations.add(cuCoProdPriceAlterations);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CCTClearanceStage.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CCTClearanceStage.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2570,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class CCTClearanceStage implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String productOfferingId;\n  private String quoteNumber;\n  private String login;\n  private String name;\n  private BiteUser user;\n  private BiteUser defaultSupervisor;\n  private String comments;\n  private String email;\n  private Date changeDate;\n  private String status;\n  private int orgLevel;\n  private ArrayList<CCTOrgStructureElement> otherSupervisors = new ArrayList<CCTOrgStructureElement>();\n\n  public String getProductOfferingId() {\n    return productOfferingId;\n  }\n\n  public void setProductOfferingId(String productOfferingId) {\n    this.productOfferingId = productOfferingId;\n  }\n\n  public String getQuoteNumber() {\n    return quoteNumber;\n  }\n\n  public void setQuoteNumber(String quoteNumber) {\n    this.quoteNumber = quoteNumber;\n  }\n\n  public String getLogin() {\n    return login;\n  }\n\n  public void setLogin(String login) {\n    this.login = login;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getComments() {\n    return comments;\n  }\n\n  public void setComments(String comments) {\n    this.comments = comments;\n  }\n\n  public String getEmail() {\n    return email;\n  }\n\n  public void setEmail(String email) {\n    this.email = email;\n  }\n\n  public Date getChangeDate() {\n    return changeDate;\n  }\n\n  public void setChangeDate(Date changeDate) {\n    this.changeDate = changeDate;\n  }\n\n  public String getStatus() {\n    return status;\n  }\n\n  public void setStatus(String status) {\n    this.status = status;\n  }\n\n  public int getOrgLevel() {\n    return orgLevel;\n  }\n\n  public void setOrgLevel(int orgLevel) {\n    this.orgLevel = orgLevel;\n  }\n\n  public static long getSerialversionuid() {\n    return serialVersionUID;\n  }\n\n  public ArrayList<CCTOrgStructureElement> getOtherSupervisors() {\n    return otherSupervisors;\n  }\n\n  public void setOtherSupervisors(ArrayList<CCTOrgStructureElement> otherSupervisors) {\n    this.otherSupervisors = otherSupervisors;\n  }\n\n  public BiteUser getUser() {\n    return user;\n  }\n\n  public void setUser(BiteUser user) {\n    this.user = user;\n  }\n\n  public BiteUser getDefaultSupervisor() {\n    return defaultSupervisor;\n  }\n\n  public void setDefaultSupervisor(BiteUser defaultSupervisor) {\n    this.defaultSupervisor = defaultSupervisor;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/EmptyProductNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/EmptyProductNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 253,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class EmptyProductNode extends BaseNode implements Serializable {\n  @Override\n  public String getText() {\n    return \"Keine Produkte\"; // TODO: externalize string\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/AccountNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/AccountNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1900,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.shared.dto.product;\n\nimport at.a1ta.bite.core.shared.util.CommonUtils;\n\n/**\n * \n */\npublic class AccountNode extends BaseNode implements AccountAware {\n\n  private String accountNumber;\n\n  private String customerName;\n\n  public AccountNode() {}\n\n  @Override\n  public String getAccountNumber() {\n    return this.accountNumber;\n  }\n\n  @Override\n  public String getText() {\n    return CommonUtils.defaultString(this.accountNumber, \"n/a\");\n  }\n\n  public static Builder builder() {\n    return new Builder();\n  }\n\n  public String getCustomerName() {\n    return customerName;\n  }\n\n  public void setCustomerName(String customerName) {\n    this.customerName = customerName;\n  }\n\n  public static class Builder {\n\n    private AccountNode node;\n\n    public Builder() {\n      node = new AccountNode();\n    }\n\n    public Builder accountNumber(String accountNumber) {\n      node.accountNumber = accountNumber;\n      node.setId(accountNumber);\n      return this;\n    }\n\n    public Builder parent(BaseNode parent) {\n      node.setParent(parent);\n      return this;\n    }\n\n    public AccountNode build() {\n      return node;\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/ProductTree.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/ProductTree.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 668,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\npublic class ProductTree implements Serializable {\n  private HashMap<Long, ArrayList<Location>> locationMap;\n  private ArrayList<BaseNode> partyNodes;\n\n  public HashMap<Long, ArrayList<Location>> getLocationMap() {\n    return locationMap;\n  }\n\n  public void setLocationMap(HashMap<Long, ArrayList<Location>> locations) {\n    this.locationMap = locations;\n  }\n\n  public ArrayList<BaseNode> getPartyNodes() {\n    return partyNodes;\n  }\n\n  public void setPartyNodes(ArrayList<BaseNode> partyNodes) {\n    this.partyNodes = partyNodes;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/GeoCallNumber.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/GeoCallNumber.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 954,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class GeoCallNumber implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String countryCode;\n  private String onkz;\n  private String tnum;\n\n  public GeoCallNumber() {\n    // Default Constructor\n  }\n\n  public GeoCallNumber(String countryCode, String onkz, String tnum) {\n    this.countryCode = countryCode;\n    this.onkz = onkz;\n    this.tnum = tnum;\n  }\n\n  public String getCountryCode() {\n    return countryCode;\n  }\n\n  public void setCountryCode(String countryCode) {\n    this.countryCode = countryCode;\n  }\n\n  public String getOnkz() {\n    return onkz;\n  }\n\n  public void setOnkz(String onkz) {\n    this.onkz = onkz;\n  }\n\n  public String getTnum() {\n    return tnum;\n  }\n\n  public void setTnum(String tnum) {\n    this.tnum = tnum;\n  }\n\n  @Override\n  public String toString() {\n    return countryCode + \" \" + onkz + \" \" + tnum;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/Location.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/Location.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1595,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class Location implements Serializable {\n\n  public enum LocationType {\n    MOBILE, FIXED, HYBRID\n  }\n\n  private long partyId;\n  private String locationId;\n  private String address;\n  private String city;\n  private String street;\n  private String poBox;\n  private Coordinates coordinates;\n  private LocationType locationType;\n\n  public boolean hasCoordinates() {\n    return coordinates != null;\n  }\n\n  public Coordinates getCoordinates() {\n    return coordinates;\n  }\n\n  public void setCoordinates(Coordinates coordinates) {\n    this.coordinates = coordinates;\n  }\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getLocationId() {\n    return locationId;\n  }\n\n  public void setLocationId(String locationId) {\n    this.locationId = locationId;\n  }\n\n  public String getAddress() {\n    return address;\n  }\n\n  public void setAddress(String address) {\n    this.address = address;\n  }\n\n  public void setCity(String city) {\n    this.city = city;\n  }\n\n  public String getCity() {\n    return city;\n  }\n\n  public void setStreet(String street) {\n    this.street = street;\n  }\n\n  public String getStreet() {\n    return street;\n  }\n\n  public void setPoBox(String poBox) {\n    this.poBox = poBox;\n  }\n\n  public String getPoBox() {\n    return poBox;\n  }\n\n  public LocationType getLocationType() {\n    return locationType;\n  }\n\n  public void setLocationType(LocationType locationType) {\n    this.locationType = locationType;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SAPPhysicalResourceNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SAPPhysicalResourceNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 557,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class SAPPhysicalResourceNode extends BaseNode implements Serializable {\n  private String text;\n  private MetaData equipmentAttributes;\n\n  @Override\n  public String getText() {\n    return text;\n  }\n\n  public void setText(String text) {\n    this.text = text;\n  }\n\n  public MetaData getEquipmentAttributes() {\n    return equipmentAttributes;\n  }\n\n  public void setEquipmentAttributes(MetaData equipmentAttributes) {\n    this.equipmentAttributes = equipmentAttributes;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/BRKAccountInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/BRKAccountInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 910,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class BRKAccountInfo implements Serializable {\n\n  private String accountNumber;\n\n  private String accountStatus;\n\n  private String accountName;\n\n  private String handlingFee;\n\n  public String getAccountNumber() {\n    return accountNumber;\n  }\n\n  public void setAccountNumber(String accountNumber) {\n    this.accountNumber = accountNumber;\n  }\n\n  public String getAccountStatus() {\n    return accountStatus;\n  }\n\n  public void setAccountStatus(String accountStatus) {\n    this.accountStatus = accountStatus;\n  }\n\n  public String getAccountName() {\n    return accountName;\n  }\n\n  public void setAccountName(String accountName) {\n    this.accountName = accountName;\n  }\n\n  public String getHandlingFee() {\n    return handlingFee;\n  }\n\n  public void setHandlingFee(String handlingFee) {\n    this.handlingFee = handlingFee;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoProdPriceAlterations.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoProdPriceAlterations.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2179,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.util.Date;\n\npublic class CuCoProdPriceAlterations extends CuCoComponentProductPrice {\n  public enum ProdPriceAlterationType {\n    RECURRING_DISCOUNT, ONETIME_DISCOUNT, ALLOWANCE\n  }\n\n  public CuCoProdPriceAlterations() {\n    super();\n  }\n\n  String frequency;\n  String UnitOfMeasure;\n  ProdPriceAlterationType alterationType = ProdPriceAlterationType.RECURRING_DISCOUNT;\n  int allowanceValue;\n  CuCoPrice alteredPriceAfterDiscount;\n  String parentPriceId;\n  private Date discountStartDate;\n  private Date discountEndDate;\n\n  public CuCoProdPriceAlterations(ProdPriceAlterationType alterationType) {\n    super();\n    this.alterationType = alterationType;\n  }\n\n  public String getFrequency() {\n    return frequency;\n  }\n\n  public void setFrequency(String frequency) {\n    this.frequency = frequency;\n  }\n\n  public String getUnitOfMeasure() {\n    return UnitOfMeasure;\n  }\n\n  public void setUnitOfMeasure(String unitOfMeasure) {\n    UnitOfMeasure = unitOfMeasure;\n  }\n\n  public ProdPriceAlterationType getAlterationType() {\n    return alterationType;\n  }\n\n  public void setAlterationType(ProdPriceAlterationType alterationType) {\n    this.alterationType = alterationType;\n  }\n\n  public int getAllowanceValue() {\n    return allowanceValue;\n  }\n\n  public void setAllowanceValue(int allowanceValue) {\n    this.allowanceValue = allowanceValue;\n  }\n\n  public CuCoPrice getAlteredPriceAfterDiscount() {\n    return alteredPriceAfterDiscount;\n  }\n\n  public void setAlteredPriceAfterDiscount(CuCoPrice alteredPriceAfterDiscount) {\n    this.alteredPriceAfterDiscount = alteredPriceAfterDiscount;\n  }\n\n  public String getParentPriceId() {\n    return parentPriceId;\n  }\n\n  public void setParentPriceId(String parentPriceId) {\n    this.parentPriceId = parentPriceId;\n  }\n\n  public Date getDiscountStartDate() {\n    return discountStartDate;\n  }\n\n  public void setDiscountStartDate(Date discountStartDate) {\n    this.discountStartDate = discountStartDate;\n  }\n\n  public Date getDiscountEndDate() {\n    return discountEndDate;\n  }\n\n  public void setDiscountEndDate(Date discountEndDate) {\n    this.discountEndDate = discountEndDate;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CCTOrgStructureElement.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CCTOrgStructureElement.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2266,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class CCTOrgStructureElement implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private String userID;\n  private int approvalLevel;\n  private String supervisorUserID;\n  private String user;\n  private String supervisor;\n  private BiteUser userDetails;\n  private BiteUser supervisorDetails;\n  private String team;\n  private String role;\n  private String orgId;\n  private String rolle;\n\n  @Override\n  public String toString() {\n    return userID + \" \" + approvalLevel + \" \" + supervisorUserID;\n  }\n\n  public String getSupervisor() {\n    return supervisor;\n  }\n\n  public void setSupervisor(String string) {\n    this.supervisor = string;\n  }\n\n  public String getUserID() {\n    return userID;\n  }\n\n  public void setUserID(String userID) {\n    this.userID = userID;\n  }\n\n  public int getApprovalLevel() {\n    return approvalLevel;\n  }\n\n  public void setApprovalLevel(int i) {\n    this.approvalLevel = i;\n  }\n\n  public String getSupervisorUserID() {\n    return supervisorUserID;\n  }\n\n  public void setSupervisorUserID(String supervisorUserID) {\n    this.supervisorUserID = supervisorUserID;\n  }\n\n  public static long getSerialversionuid() {\n    return serialVersionUID;\n  }\n\n  public String getUser() {\n    return user;\n  }\n\n  public void setUser(String user) {\n    this.user = user;\n  }\n\n  public String getTeam() {\n    return team;\n  }\n\n  public void setTeam(String team) {\n    this.team = team;\n  }\n\n  public String getRole() {\n    return role;\n  }\n\n  public void setRole(String role) {\n    this.role = role;\n  }\n\n  public String getOrgId() {\n    return orgId;\n  }\n\n  public void setOrgId(String orgId) {\n    this.orgId = orgId;\n  }\n\n  public BiteUser getUserDetails() {\n    return userDetails;\n  }\n\n  public void setUserDetails(BiteUser userDetails) {\n    this.userDetails = userDetails;\n  }\n\n  public BiteUser getSupervisorDetails() {\n    return supervisorDetails;\n  }\n\n  public void setSupervisorDetails(BiteUser supervisorDetails) {\n    this.supervisorDetails = supervisorDetails;\n  }\n\n  public String getRolle() {\n    return rolle;\n  }\n\n  public void setRolle(String rolle) {\n    this.rolle = rolle;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/LocationNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/LocationNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 609,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport at.a1ta.cuco.core.shared.dto.product.Location.LocationType;\n\npublic class LocationNode extends BaseNode {\n\n  private Location location;\n\n  public Location getLocation() {\n    return location;\n  }\n\n  public void setLocation(Location location) {\n    this.location = location;\n  }\n\n  @Override\n  public String getText() {\n    return location.getAddress();\n  }\n\n  public String getFullText() {\n    return location.getAddress();\n  }\n\n  public LocationType getLocationTypeFormLocation() {\n    return null != location ? location.getLocationType() : null;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/AsyncPlaceholderNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/AsyncPlaceholderNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 255,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\npublic class AsyncPlaceholderNode extends BaseNode implements Serializable {\n  @Override\n  public String getText() {\n    return \"wird geladen\"; // TODO: externalize string\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoPrice.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CuCoPrice.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 474,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\npublic class CuCoPrice implements Serializable {\n\n  private String units;\n  private BigDecimal amount;\n\n  public String getUnits() {\n    return units;\n  }\n\n  public void setUnits(String units) {\n    this.units = units;\n  }\n\n  public BigDecimal getAmount() {\n    return amount;\n  }\n\n  public void setAmount(BigDecimal bigDecimal) {\n    this.amount = bigDecimal;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CCTAuthorizedQuoteApproversForLevel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/CCTAuthorizedQuoteApproversForLevel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 622,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class CCTAuthorizedQuoteApproversForLevel implements Serializable {\n  private static final long serialVersionUID = 1L;\n  private int level;\n  private ArrayList<CCTOrgStructureElement> approvers;\n\n  public int getLevel() {\n    return level;\n  }\n\n  public void setLevel(int level) {\n    this.level = level;\n  }\n\n  public ArrayList<CCTOrgStructureElement> getApprovers() {\n    return approvers;\n  }\n\n  public void setApprovers(ArrayList<CCTOrgStructureElement> approvers) {\n    this.approvers = approvers;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/MetaDataEntryType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/MetaDataEntryType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 311,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\npublic enum MetaDataEntryType {\n  STRING(1), LONG(2), BOOLEAN(3), DATE_TIME(4), DECIMAL(5), LKMS_ID(6), MBIT(7), KBIT(8), MB(9);\n\n  private int value;\n\n  MetaDataEntryType(int value) {\n    this.value = value;\n  }\n\n  public int getValue() {\n    return value;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SubscriptionTree.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SubscriptionTree.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 668,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\n\npublic class SubscriptionTree implements Serializable {\n  private ArrayList<BaseNode> productNodes;\n  private DefaultSubscriptionNode subscriptionNode;\n\n  public ArrayList<BaseNode> getProductNodes() {\n    return productNodes;\n  }\n\n  public void setProductNodes(ArrayList<BaseNode> productNodes) {\n    this.productNodes = productNodes;\n  }\n\n  public DefaultSubscriptionNode getSubscriptionNode() {\n    return subscriptionNode;\n  }\n\n  public void setSubscriptionNode(DefaultSubscriptionNode subscriptionNode) {\n    this.subscriptionNode = subscriptionNode;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/AutoVvlInfo.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/AutoVvlInfo.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3091,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class AutoVvlInfo implements Serializable {\n\n  public enum AutoVvlStatus {\n    JA, NEIN, KEINE_VEREINBARUNG;\n  }\n\n  private AutoVvlStatus autoVvlStatus;\n  private Date latestCommitmentEndDate;\n  private String commitmentDuration;\n  private Date commitmentDurationStartTime;\n\n  private Date autoExtendedCommitmentActPeriodStartTime;\n  private Date autoExtendedCommitmentActPeriodEndTime;\n\n  private Date autoExtendedCommitmentNextPeriodStartTime;\n  private Date autoExtendedCommitmentNextPeriodEndTime;\n\n  private Date cancellationDateBeforeNextAutoVVL;\n\n  public Date getLatestCommitmentEndDate() {\n    return latestCommitmentEndDate;\n  }\n\n  public void setLatestCommitmentEndDate(Date latestCommitmentEndDate) {\n    this.latestCommitmentEndDate = latestCommitmentEndDate;\n  }\n\n  public String getCommitmentDuration() {\n    return commitmentDuration;\n  }\n\n  public void setCommitmentDuration(String commitmentDuration) {\n    this.commitmentDuration = commitmentDuration;\n  }\n\n  public Date getCommitmentDurationStartTime() {\n    return commitmentDurationStartTime;\n  }\n\n  public void setCommitmentDurationStartTime(Date commitmentDurationStartTime) {\n    this.commitmentDurationStartTime = commitmentDurationStartTime;\n  }\n\n  public Date getAutoExtendedCommitmentNextPeriodStartTime() {\n    return autoExtendedCommitmentNextPeriodStartTime;\n  }\n\n  public void setAutoExtendedCommitmentNextPeriodStartTime(Date autoExtendedCommitmentNextPeriodStartTime) {\n    this.autoExtendedCommitmentNextPeriodStartTime = autoExtendedCommitmentNextPeriodStartTime;\n  }\n\n  public Date getAutoExtendedCommitmentActPeriodStartTime() {\n    return autoExtendedCommitmentActPeriodStartTime;\n  }\n\n  public void setAutoExtendedCommitmentActPeriodStartTime(Date autoExtendedCommitmentActPeriodStartTime) {\n    this.autoExtendedCommitmentActPeriodStartTime = autoExtendedCommitmentActPeriodStartTime;\n  }\n\n  public AutoVvlStatus getAutoVvlStatus() {\n    return autoVvlStatus;\n  }\n\n  public void setAutoVvlStatus(AutoVvlStatus autoVvlStatus) {\n    this.autoVvlStatus = autoVvlStatus;\n  }\n\n  public Date getAutoExtendedCommitmentActPeriodEndTime() {\n    return autoExtendedCommitmentActPeriodEndTime;\n  }\n\n  public void setAutoExtendedCommitmentActPeriodEndTime(Date autoExtendedCommitmentActPeriodEndTime) {\n    this.autoExtendedCommitmentActPeriodEndTime = autoExtendedCommitmentActPeriodEndTime;\n  }\n\n  public Date getAutoExtendedCommitmentNextPeriodEndTime() {\n    return autoExtendedCommitmentNextPeriodEndTime;\n  }\n\n  public void setAutoExtendedCommitmentNextPeriodEndTime(Date autoExtendedCommitmentNextPeriodEndTime) {\n    this.autoExtendedCommitmentNextPeriodEndTime = autoExtendedCommitmentNextPeriodEndTime;\n  }\n\n  public void setCancellationDateBeforeNextAutoVVL(Date cancellationDateBeforeNextAutoVVL) {\n    this.cancellationDateBeforeNextAutoVVL = cancellationDateBeforeNextAutoVVL;\n  }\n\n  public Date getCancellationDateBeforeNextAutoVVL() {\n    return cancellationDateBeforeNextAutoVVL;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SubscriptionNode.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/SubscriptionNode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1835,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.bite.core.shared.util.SharedStringUtils;\n\npublic class SubscriptionNode extends BaseNode implements AccountAware {\n\n  private String accountNumber;\n\n  private String vertragNoForDisplay;\n\n  private String subscriptionId;\n\n  private String topLevelProducts;\n\n  private ArrayList<BaseNode> childrenWithMatchinCallNumbers = new ArrayList<BaseNode>();\n\n  public SubscriptionNode(String accountNumber, String subscriptionId) {\n    super();\n    setId(subscriptionId);\n    this.accountNumber = accountNumber;\n    this.subscriptionId = subscriptionId;\n  }\n\n  public SubscriptionNode() {\n    super();\n  }\n\n  @Override\n  public String getAccountNumber() {\n    return this.accountNumber;\n  }\n\n  public void setAccountNumber(String ban) {\n    this.accountNumber = ban;\n  }\n\n  public boolean hasBan() {\n    return !SharedStringUtils.isBlank(this.accountNumber);\n  }\n\n  public String getSubscriptionId() {\n    return subscriptionId;\n  }\n\n  public void setSubscriptionId(String subscriptionId) {\n    this.subscriptionId = subscriptionId;\n    setId(subscriptionId);\n  }\n\n  public String getVertragNoForDisplay() {\n    return vertragNoForDisplay;\n  }\n\n  public void setVertragNoForDisplay(String vertragNoForDisplay) {\n    this.vertragNoForDisplay = vertragNoForDisplay;\n  }\n\n  public ArrayList<BaseNode> getChildrenWithMatchingCallNumbers() {\n    return childrenWithMatchinCallNumbers;\n  }\n\n  public void setChildrenWithMatchinCallNumbers(ArrayList<BaseNode> childrenWithMatchinCallNumbers) {\n    this.childrenWithMatchinCallNumbers = childrenWithMatchinCallNumbers;\n  }\n\n  public String getTopLevelProducts() {\n    return topLevelProducts;\n  }\n\n  public void setTopLevelProducts(String topLevelProducts) {\n    this.topLevelProducts = topLevelProducts;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/MetaDataEntry.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/MetaDataEntry.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1927,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class MetaDataEntry implements Serializable {\n  private String name;\n  private String description;\n  private String value;\n  private String id;\n  private MetaDataEntryType type;\n  private Date validForStart;\n  private Date validForEnd;\n\n  public MetaDataEntry() {}\n\n  public MetaDataEntry(String name, String desc, String value, MetaDataEntryType type) {\n    this.name = name;\n    this.description = desc;\n    this.value = value;\n    this.type = type;\n  }\n\n  public MetaDataEntry(String name, String desc, String value, MetaDataEntryType type, String id) {\n    this.name = name;\n    this.description = desc;\n    this.value = value;\n    this.type = type;\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public String getValue() {\n    return value;\n  }\n\n  public void setValue(String value) {\n    this.value = value;\n  }\n\n  public MetaDataEntryType getType() {\n    return type;\n  }\n\n  public void setType(MetaDataEntryType type) {\n    this.type = type;\n  }\n\n  public Date getValidForEnd() {\n    return validForEnd;\n  }\n\n  public void setValidForEnd(Date validForEnd) {\n    this.validForEnd = validForEnd;\n  }\n\n  public Date getValidForStart() {\n    return validForStart;\n  }\n\n  @Override\n  public String toString() {\n    return \"name=\" + name + \"; value=\" + value + \"; type=\" + type + \"; validForStart=\" + validForStart + \"; validForEnd=\" + validForEnd + \"; id=\" + id;\n  }\n\n  public void setValidForStart(Date validForStart) {\n    this.validForStart = validForStart;\n  }\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/PartySummaryItem.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/product/PartySummaryItem.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 827,
    "content": "package at.a1ta.cuco.core.shared.dto.product;\n\nimport java.io.Serializable;\n\n@SuppressWarnings(\"serial\")\npublic class PartySummaryItem implements Serializable {\n  private String name;\n  private String url;\n  private long count;\n\n  public PartySummaryItem(String name, int count) {\n    this.setName(name);\n    this.setCount(count);\n  }\n\n  public PartySummaryItem(String name, String url) {\n    this.setName(name);\n    this.setUrl(url);\n  }\n\n  public PartySummaryItem() {\n    super();\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public long getCount() {\n    return count;\n  }\n\n  public void setCount(long count) {\n    this.count = count;\n  }\n\n  public String getUrl() {\n    return url;\n  }\n\n  public void setUrl(String url) {\n    this.url = url;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/Equipment.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/Equipment.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5503,
    "content": "package at.a1ta.cuco.core.shared.dto.customerequipment;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Date;\n\npublic class Equipment implements Serializable, Comparable<Equipment> {\n  private static final String TOP_LEVEL_PARENT_ID = \"\";\n  private static final String EMPTY = \"\";\n\n  private String id;\n  private String name;\n  private Equipment parent;\n  private String parentId;\n  private String serialNumber;\n  private String status;\n  private Date warrentyBegin;\n  private Date warrentyEnd;\n  private String materialId;\n  private String materialName;\n  private ArrayList<EquipmentAttribute> attributes;\n  private ArrayList<Equipment> children = new ArrayList<Equipment>();\n  private String equipmentTyp;\n  private String typBezeichnung;\n  private String equipmentArt;\n  private String artBezeichnung;\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(final String id) {\n    this.id = id;\n  }\n\n  public boolean hasEquipmentId() {\n    return id != null && !EMPTY.equals(id);\n  }\n\n  public boolean isPartListMaterial() {\n    return !hasEquipmentId();\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(final String name) {\n    this.name = name;\n  }\n\n  public Equipment getParent() {\n    return parent;\n  }\n\n  public void setParent(final Equipment parent) {\n    this.parent = parent;\n  }\n\n  public String getParentId() {\n    return parentId;\n  }\n\n  public void setParentId(final String parentId) {\n    this.parentId = parentId;\n  }\n\n  public boolean isTopLevel() {\n    return parentId == null || TOP_LEVEL_PARENT_ID.equals(parentId);\n  }\n\n  public boolean isMaterial() {\n    // TODO correct implementation\n    return materialId != null && !materialId.isEmpty();\n  }\n\n  public void addChild(final Equipment child) {\n    this.children.add(child);\n  }\n\n  public boolean hasChildren() {\n    return children != null && !children.isEmpty();\n  }\n\n  public ArrayList<Equipment> getChildren() {\n    return children;\n  }\n\n  public void setChildren(ArrayList<Equipment> children) {\n    this.children = children;\n  }\n\n  public String getSerialNumber() {\n    return serialNumber;\n  }\n\n  public void setSerialNumber(final String serialNumber) {\n    this.serialNumber = serialNumber;\n  }\n\n  public String getStatus() {\n    return status;\n  }\n\n  public void setStatus(final String status) {\n    this.status = status;\n  }\n\n  public Date getWarrentyBegin() {\n    return warrentyBegin;\n  }\n\n  public void setWarrentyBegin(final Date warrentyBegin) {\n    this.warrentyBegin = warrentyBegin;\n  }\n\n  public Date getWarrentyEnd() {\n    return warrentyEnd;\n  }\n\n  public void setWarrentyEnd(final Date warrentyEnd) {\n    this.warrentyEnd = warrentyEnd;\n  }\n\n  public String getMaterialId() {\n    return materialId;\n  }\n\n  public void setMaterialId(String materialId) {\n    this.materialId = materialId;\n  }\n\n  public String getMaterialName() {\n    return materialName;\n  }\n\n  public void setMaterialName(String materialName) {\n    this.materialName = materialName;\n  }\n\n  public ArrayList<EquipmentAttribute> getAttributes() {\n    return attributes;\n  }\n\n  public void setAttributes(ArrayList<EquipmentAttribute> attributes) {\n    this.attributes = attributes;\n  }\n\n  public boolean hasAttributes() {\n    return attributes != null && !attributes.isEmpty();\n  }\n\n  public boolean hasEquipmentTyp() {\n    return equipmentTyp != null && !equipmentTyp.isEmpty();\n  }\n\n  public String getEquipmentTyp() {\n    return equipmentTyp;\n  }\n\n  public void setEquipmentTyp(String equipmentTyp) {\n    this.equipmentTyp = equipmentTyp;\n  }\n\n  public String getTypBezeichnung() {\n    return typBezeichnung;\n  }\n\n  public void setTypBezeichnung(String typBezeichnung) {\n    this.typBezeichnung = typBezeichnung;\n  }\n\n  public boolean hasEquipmentArt() {\n    return equipmentArt != null && !equipmentArt.isEmpty();\n  }\n\n  public String getEquipmentArt() {\n    return equipmentArt;\n  }\n\n  public void setEquipmentArt(String equipmentArt) {\n    this.equipmentArt = equipmentArt;\n  }\n\n  public String getArtBezeichnung() {\n    return artBezeichnung;\n  }\n\n  public void setArtBezeichnung(String artBezeichnung) {\n    this.artBezeichnung = artBezeichnung;\n  }\n\n  /**\n   * Returns the tree level of the Equipment. A tree level of 0 means that the Equipment is a top level node without a\n   * parent, a level of 2 means that the Equipment has a parent and a grand-parent node\n   * \n   * @return The actual tree level\n   */\n  public int calculateTreeLevel() {\n    return calculateTreeLevel(this, 0);\n  }\n\n  private int calculateTreeLevel(final Equipment equipment, int level) {\n    if (equipment.parent == null) {\n      return level;\n    }\n    return calculateTreeLevel(equipment.parent, level + 1);\n  }\n\n  @Override\n  public int compareTo(final Equipment o) {\n    final String thisName = name != null ? name : EMPTY;\n    final String otherName = o.name != null ? o.name : EMPTY;\n    return thisName.compareTo(otherName);\n  }\n\n  @Override\n  public String toString() {\n    return \"Equipment: \" + \"ID=\" + id + \", ParentID=\" + parentId;\n  }\n\n  public String toTreeString() {\n    return toTreeString(0);\n  }\n\n  public String toTreeString(int level) {\n    String prefix = \"\";\n    String prefixSpace = \"  \";\n    for (int i = 0; i < level; i++) {\n      prefix += prefixSpace;\n    }\n\n    String s = \"\\r\\n\" + prefix + \"[\" + id + \"] \" + getName();\n    if (hasChildren()) {\n      for (Equipment child : children) {\n        s += child.toTreeString(level + 1);\n      }\n    }\n    return s;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/EquipmentTree.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/EquipmentTree.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1215,
    "content": "package at.a1ta.cuco.core.shared.dto.customerequipment;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\n\npublic class EquipmentTree extends Equipment {\n  private ArrayList<EquipmentSum> equipmentSums;\n  private EquipmentConsignee equipmentConsignee;\n  private Party party;\n  private long materialSum;\n\n  @SuppressWarnings(\"unused\")\n  private HashMap<String, String> eqtypDictionary;\n  @SuppressWarnings(\"unused\")\n  private HashMap<String, String> eqartDictionary;\n\n  public Party getParty() {\n    return party;\n  }\n\n  public void setParty(Party party) {\n    this.party = party;\n  }\n\n  public ArrayList<EquipmentSum> getEquipmentSums() {\n    return equipmentSums;\n  }\n\n  public void setEquipmentSums(ArrayList<EquipmentSum> materialCatalog) {\n    this.equipmentSums = materialCatalog;\n  }\n\n  public EquipmentConsignee getEquipmentConsignee() {\n    return equipmentConsignee;\n  }\n\n  public void setEquipmentConsignee(EquipmentConsignee equipmentConsignee) {\n    this.equipmentConsignee = equipmentConsignee;\n  }\n\n  public long getMaterialSum() {\n    return materialSum;\n  }\n\n  public void setMaterialSum(long materialSum) {\n    this.materialSum = materialSum;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/EquipmentAttribute.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/EquipmentAttribute.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 525,
    "content": "package at.a1ta.cuco.core.shared.dto.customerequipment;\n\nimport at.a1ta.bite.core.shared.dto.KeyValuePair;\n\npublic class EquipmentAttribute extends KeyValuePair {\n  private String equipmentId;\n\n  public EquipmentAttribute() {}\n\n  public EquipmentAttribute(String equipmentId, String key, String value) {\n    super(key, value);\n    this.equipmentId = equipmentId;\n  }\n\n  public String getEquipmentId() {\n    return equipmentId;\n  }\n\n  public void setEquipmentId(String equipmentId) {\n    this.equipmentId = equipmentId;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/EquipmentSum.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/EquipmentSum.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1099,
    "content": "package at.a1ta.cuco.core.shared.dto.customerequipment;\n\nimport java.io.Serializable;\n\npublic class EquipmentSum implements Serializable, Comparable<EquipmentSum> {\n  private static final String EMPTY = \"\";\n\n  private String id;\n  private String title;\n  private long count;\n\n  public EquipmentSum() {}\n\n  public EquipmentSum(final String id, final String title, final long count) {\n    this.id = id;\n    this.title = title;\n    this.count = count;\n  }\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(final String id) {\n    this.id = id;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public void setTitle(final String title) {\n    this.title = title;\n  }\n\n  public long getCount() {\n    return count;\n  }\n\n  public void setCount(long count) {\n    this.count = count;\n  }\n\n  public void incrementCount() {\n    count++;\n  }\n\n  @Override\n  public int compareTo(final EquipmentSum o) {\n    final String thisTitle = this.title == null ? EMPTY : this.title;\n    final String otherTitle = o.title == null ? EMPTY : o.title;\n    return thisTitle.compareTo(otherTitle);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/EquipmentConsignee.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/EquipmentConsignee.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2266,
    "content": "package at.a1ta.cuco.core.shared.dto.customerequipment;\n\nimport java.io.Serializable;\n\npublic class EquipmentConsignee implements Serializable {\n  private String id;\n  private String summaryShort;\n  private String summary;\n  private long partyId;\n\n  private String title;\n  private String name1;\n  private String name2;\n  private String plz;\n  private String city;\n  private String street;\n  private String houseNumber;\n  private String consignee;\n\n  public String getSummaryShort() {\n    return summaryShort;\n  }\n\n  public void setSummaryShort(String summaryShort) {\n    this.summaryShort = summaryShort;\n  }\n\n  public void setSummary(String summary) {\n    this.summary = summary;\n  }\n\n  public String getSummary() {\n    return summary;\n  }\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public void setTitle(String title) {\n    this.title = title;\n  }\n\n  public String getName1() {\n    return name1;\n  }\n\n  public void setName1(String name1) {\n    this.name1 = name1;\n  }\n\n  public String getName2() {\n    return name2;\n  }\n\n  public void setName2(String name2) {\n    this.name2 = name2;\n  }\n\n  public String getPlz() {\n    return plz;\n  }\n\n  public void setPlz(String plz) {\n    this.plz = plz;\n  }\n\n  public String getCity() {\n    return city;\n  }\n\n  public void setCity(String city) {\n    this.city = city;\n  }\n\n  public String getStreet() {\n    return street;\n  }\n\n  public void setStreet(String street) {\n    this.street = street;\n  }\n\n  public String getHouseNumber() {\n    return houseNumber;\n  }\n\n  public void setHouseNumber(String houseNumber) {\n    this.houseNumber = houseNumber;\n  }\n\n  public String getConsignee() {\n    return consignee;\n  }\n\n  public void setConsignee(String consignee) {\n    this.consignee = consignee;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (obj instanceof EquipmentConsignee) {\n      return id != null && id.equals(((EquipmentConsignee) obj).getId());\n    }\n    return false;\n  }\n\n  @Override\n  public int hashCode() {\n    return id == null ? 0 : id.hashCode();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/DummyEquipmentConsignee.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/customerequipment/DummyEquipmentConsignee.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 124,
    "content": "package at.a1ta.cuco.core.shared.dto.customerequipment;\n\npublic class DummyEquipmentConsignee extends EquipmentConsignee {}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/HistoryNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/HistoryNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2624,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\n@SuppressWarnings(\"serial\")\npublic class HistoryNote extends SalesInfoNote {\n  public enum HistoryLevel {\n    NOTE, PRODUCT_NOTE, TODO_GROUP_NOTE\n  }\n\n  public enum HistoryTitle {\n    NOTE_CREATED, NOTE_UPDATED, NOTE_FINALIZED, NOTE_DELETED, ATTACHMENT_ADDED, ATTACHMENT_DELETED, TERMIN_CREATED, TERMIN_MIGRATED, TERMIN_DELETED, PRODUCT_CREATED, PRODUCT_DELETED, PRODUCT_GROUP_CREATED, PRODUCT_GROUP_DELETED, PRODUCT_GROUP_ASSIGNED, PRODUCT_GROUP_MODIFIED, PRODUCT_GROUP_COMPLETED, TASK_CREATD, TASK_MODIFIED, TASK_DELETED, PRODUCT_UPDATED\n  }\n\n  private HistoryTitle historyTitle;\n  private HistoryLevel level;\n  private Long historyNoteId;\n\n  public HistoryNote() {\n    super();\n    this.setSalesInfoNoteType(SalesInfoNoteType.SI_HISTORY_NOTE);\n  }\n\n  public HistoryNote(HistoryLevel level, HistoryTitle title) {\n    super();\n    this.setSalesInfoNoteType(SalesInfoNoteType.SI_HISTORY_NOTE);\n    this.historyTitle = title;\n    this.level = level;\n  }\n\n  public HistoryTitle getHistoryTitle() {\n    return historyTitle;\n  }\n\n  public void setHistoryTitle(HistoryTitle historyTitle) {\n    this.historyTitle = historyTitle;\n  }\n\n  public void setHistoryTitle(String historyTitle) {\n    this.historyTitle = HistoryTitle.valueOf(historyTitle);\n  }\n\n  public HistoryLevel getLevel() {\n    return level;\n  }\n\n  public void setLevel(HistoryLevel level) {\n    this.level = level;\n  }\n\n  public void setLevel(String level) {\n    this.level = HistoryLevel.valueOf(level);\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((historyTitle == null) ? 0 : historyTitle.hashCode());\n    result = prime * result + ((level == null) ? 0 : level.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (!(obj instanceof HistoryNote)) {\n      return false;\n    }\n    HistoryNote other = (HistoryNote) obj;\n    if (historyTitle == null) {\n      if (other.historyTitle != null) {\n        return false;\n      }\n    } else if (!historyTitle.equals(other.historyTitle)) {\n      return false;\n    }\n    if (level != other.level) {\n      return false;\n    }\n    return true;\n  }\n\n  @Override\n  public String toString() {\n    return \"HistoryNote [historyTitle=\" + historyTitle + \", level=\" + level + \"]\";\n  }\n\n  public Long getHistoryNoteId() {\n    return historyNoteId;\n  }\n\n  public void setHistoryNoteId(Long historyNoteId) {\n    this.historyNoteId = historyNoteId;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/VisitReportSuccessorExistsException.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/VisitReportSuccessorExistsException.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 187,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\npublic class VisitReportSuccessorExistsException extends Throwable {\n\n  public VisitReportSuccessorExistsException() {\n    super();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/FeedbackQuestionsRow.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/FeedbackQuestionsRow.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1044,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\npublic class FeedbackQuestionsRow {\n  private String attributeName;\n  private String attributeType;\n  private Integer numberValue;\n  private Boolean booleanValue;\n  private String textValue;\n\n  public String getAttributeName() {\n    return attributeName;\n  }\n\n  public void setAttributeName(String attributeName) {\n    this.attributeName = attributeName;\n  }\n\n  public String getAttributeType() {\n    return attributeType;\n  }\n\n  public void setAttributeType(String attributeType) {\n    this.attributeType = attributeType;\n  }\n\n  public Integer getNumberValue() {\n    return numberValue;\n  }\n\n  public void setNumberValue(Integer numberValue) {\n    this.numberValue = numberValue;\n  }\n\n  public Boolean getBooleanValue() {\n    return booleanValue;\n  }\n\n  public void setBooleanValue(Boolean booleanValue) {\n    this.booleanValue = booleanValue;\n  }\n\n  public String getTextValue() {\n    return textValue;\n  }\n\n  public void setTextValue(String textValue) {\n    this.textValue = textValue;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SimpleNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SimpleNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 428,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\npublic class SimpleNote extends SalesInfoNote {\n\n  /**\n   * Copy Constructor\n   * \n   * @param simpleNote a <code>SimpleNote</code> object\n   */\n  public SimpleNote(SimpleNote simpleNote) {\n    super(simpleNote);\n  }\n  \n  public SimpleNote() {\n    super();\n  }\n\n  @Override\n  public String toString() {\n    return \"SimpleNote [super.toString()=\" + super.toString() + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesInfoNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesInfoNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9365,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\n@XmlAccessorType(XmlAccessType.NONE)\npublic class SalesInfoNote extends SalesInfoOverviewRow {\n  private static final long serialVersionUID = 1L;\n\n  public SalesInfoNote() {\n    super();\n  }\n\n  /**\n   * Copy Constructor\n   * \n   * @param salesInfoNote a <code>SalesInfoNote</code> object\n   */\n  public SalesInfoNote(SalesInfoNote salesInfoNote) {\n    super(salesInfoNote);\n    this.salesInfoNoteId = salesInfoNote.salesInfoNoteId;\n    this.salesInfoNoteType = salesInfoNote.salesInfoNoteType;\n    this.predecessorSalesInfoNoteId = salesInfoNote.predecessorSalesInfoNoteId;\n    this.partyId = salesInfoNote.partyId;\n    this.party = salesInfoNote.party;\n    this.noteText = salesInfoNote.noteText;\n    this.status = salesInfoNote.status;\n    this.task = salesInfoNote.task;\n    this.creationUser = salesInfoNote.creationUser;\n    this.creationTimestamp = salesInfoNote.creationTimestamp;\n    this.lastModificationUser = salesInfoNote.lastModificationUser;\n    this.lastModificationTimestamp = salesInfoNote.lastModificationTimestamp;\n    this.deleted = salesInfoNote.deleted;\n    this.finalized = salesInfoNote.finalized;\n    this.historyNotes = salesInfoNote.historyNotes;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((creationTimestamp == null) ? 0 : creationTimestamp.hashCode());\n    result = prime * result + ((creationUser == null) ? 0 : creationUser.hashCode());\n    result = prime * result + (deleted ? 1231 : 1237);\n    result = prime * result + ((historyNotes == null) ? 0 : historyNotes.hashCode());\n    result = prime * result + ((lastModificationTimestamp == null) ? 0 : lastModificationTimestamp.hashCode());\n    result = prime * result + ((lastModificationUser == null) ? 0 : lastModificationUser.hashCode());\n    result = prime * result + ((noteText == null) ? 0 : noteText.hashCode());\n    result = prime * result + ((party == null) ? 0 : party.hashCode());\n    result = prime * result + (int) (partyId ^ (partyId >>> 32));\n    result = prime * result + ((predecessorSalesInfoNoteId == null) ? 0 : predecessorSalesInfoNoteId.hashCode());\n    result = prime * result + (int) (salesInfoNoteId ^ (salesInfoNoteId >>> 32));\n    result = prime * result + ((salesInfoNoteType == null) ? 0 : salesInfoNoteType.hashCode());\n    result = prime * result + ((status == null) ? 0 : status.hashCode());\n    result = prime * result + ((task == null) ? 0 : task.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    SalesInfoNote other = (SalesInfoNote) obj;\n    if (creationTimestamp == null) {\n      if (other.creationTimestamp != null) {\n        return false;\n      }\n    } else if (!creationTimestamp.equals(other.creationTimestamp)) {\n      return false;\n    }\n    if (creationUser == null) {\n      if (other.creationUser != null) {\n        return false;\n      }\n    } else if (!creationUser.equals(other.creationUser)) {\n      return false;\n    }\n    if (deleted != other.deleted) {\n      return false;\n    }\n    if (finalized != other.finalized) {\n      return false;\n    }\n    if (historyNotes == null) {\n      if (other.historyNotes != null) {\n        return false;\n      }\n    } else if (!historyNotes.equals(other.historyNotes)) {\n      return false;\n    }\n    if (lastModificationTimestamp == null) {\n      if (other.lastModificationTimestamp != null) {\n        return false;\n      }\n    } else if (!lastModificationTimestamp.equals(other.lastModificationTimestamp)) {\n      return false;\n    }\n    if (lastModificationUser == null) {\n      if (other.lastModificationUser != null) {\n        return false;\n      }\n    } else if (!lastModificationUser.equals(other.lastModificationUser)) {\n      return false;\n    }\n    if (noteText == null) {\n      if (other.noteText != null) {\n        return false;\n      }\n    } else if (!noteText.equals(other.noteText)) {\n      return false;\n    }\n    if (party == null) {\n      if (other.party != null) {\n        return false;\n      }\n    } else if (!party.equals(other.party)) {\n      return false;\n    }\n    if (partyId != other.partyId) {\n      return false;\n    }\n    if (predecessorSalesInfoNoteId == null) {\n      if (other.predecessorSalesInfoNoteId != null) {\n        return false;\n      }\n    } else if (!predecessorSalesInfoNoteId.equals(other.predecessorSalesInfoNoteId)) {\n      return false;\n    }\n    if (salesInfoNoteId != other.salesInfoNoteId) {\n      return false;\n    }\n    if (salesInfoNoteType != other.salesInfoNoteType) {\n      return false;\n    }\n    if (status == null) {\n      if (other.status != null) {\n        return false;\n      }\n    } else if (!status.equals(other.status)) {\n      return false;\n    }\n    if (task == null) {\n      if (other.task != null) {\n        return false;\n      }\n    } else if (!task.equals(other.task)) {\n      return false;\n    }\n    return true;\n  }\n\n  public enum SalesInfoNoteType {\n    SI_HISTORY_NOTE, SI_SIMPLE_NOTE, SI_COMPETITOR_NOTE, SI_APPOINTMENT_NOTE, SI_VR_SBS_NOTE, SI_VR_SBS_PRODUCT_NOTE, SI_VR_GENERIC_NOTE, SI_VR_ANGEBOTE, SI_VR_DIGITAL_SELLING, SI_SALES_CONV_NOTE, SI_SALES_CONV_PRODUCT_NOTE, SI_TODO_GROUP_NOTE\n  }\n\n  private long salesInfoNoteId;\n  private SalesInfoNoteType salesInfoNoteType;\n  private Long predecessorSalesInfoNoteId;\n  private long partyId;\n  private Party party;\n  private String noteText;\n  private String status;\n  private Task task;\n  private BiteUser creationUser;\n  private Date creationTimestamp;\n  private BiteUser lastModificationUser;\n  private Date lastModificationTimestamp;\n  private boolean deleted;\n  private boolean finalized;\n  private List<HistoryNote> historyNotes = new ArrayList<HistoryNote>();\n\n  public long getSalesInfoNoteId() {\n    return salesInfoNoteId;\n  }\n\n  public void setSalesInfoNoteId(long salesInfoNoteId) {\n    this.salesInfoNoteId = salesInfoNoteId;\n  }\n\n  public SalesInfoNoteType getSalesInfoNoteType() {\n    return salesInfoNoteType;\n  }\n\n  public void setSalesInfoNoteType(SalesInfoNoteType salesInfoNoteType) {\n    this.salesInfoNoteType = salesInfoNoteType;\n  }\n\n  public Long getPredecessorSalesInfoNoteId() {\n    return predecessorSalesInfoNoteId;\n  }\n\n  public void setPredecessorSalesInfoNoteId(Long predecessorSalesInfoNoteId) {\n    this.predecessorSalesInfoNoteId = predecessorSalesInfoNoteId;\n  }\n\n  public long getPartyId() {\n    return partyId;\n  }\n\n  public void setPartyId(long partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getNoteText() {\n    return noteText;\n  }\n\n  public void setNoteText(String noteText) {\n    this.noteText = noteText;\n  }\n\n  public Task getTask() {\n    return task;\n  }\n\n  public void setTask(Task task) {\n    this.task = task;\n  }\n\n  public String getStatus() {\n    return status;\n  }\n\n  public void setStatus(String status) {\n    this.status = status;\n  }\n\n  public BiteUser getCreationUser() {\n    return creationUser;\n  }\n\n  public void setCreationUser(BiteUser creationUser) {\n    this.creationUser = creationUser;\n  }\n\n  public Date getCreationTimestamp() {\n    return creationTimestamp;\n  }\n\n  public void setCreationTimestamp(Date creationTimestamp) {\n    this.creationTimestamp = creationTimestamp;\n  }\n\n  public BiteUser getLastModificationUser() {\n    return lastModificationUser;\n  }\n\n  public void setLastModificationUser(BiteUser lastModificationUser) {\n    this.lastModificationUser = lastModificationUser;\n  }\n\n  public Date getLastModificationTimestamp() {\n    return lastModificationTimestamp;\n  }\n\n  public void setLastModificationTimestamp(Date lastModificationTimestamp) {\n    this.lastModificationTimestamp = lastModificationTimestamp;\n  }\n\n  public boolean isDeleted() {\n    return deleted;\n  }\n\n  public void setDeleted(boolean deleted) {\n    this.deleted = deleted;\n  }\n\n  @Override\n  public Date getLastModDate() {\n    return lastModificationTimestamp;\n  }\n\n  @Override\n  public String toString() {\n    return \"SalesInfoNote [salesInfoNoteId=\" + salesInfoNoteId + \", salesInfoNoteType=\" + salesInfoNoteType + \", predecessorSalesInfoNoteId=\" + predecessorSalesInfoNoteId + \", partyId=\" + partyId\n        + \", noteText=\" + noteText + \", task=\" + task + \", creationUser=\" + creationUser + \", creationTimestamp=\" + creationTimestamp + \", lastModificationUser=\" + lastModificationUser\n        + \", lastModificationTimestamp=\" + lastModificationTimestamp + \", deleted=\" + deleted + \",finalized=\" + finalized + \", status=\" + status + \"]\";\n  }\n\n  public Party getParty() {\n    return party;\n  }\n\n  public void setParty(Party party) {\n    this.party = party;\n  }\n\n  public List<HistoryNote> getHistoryNotes() {\n    return historyNotes;\n  }\n\n  public void setHistoryNotes(List<HistoryNote> historyNotes) {\n    this.historyNotes = historyNotes;\n  }\n\n  public boolean isFinalized() {\n    return finalized;\n  }\n\n  public void setFinalized(boolean finalized) {\n    this.finalized = finalized;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/AppointmentNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/AppointmentNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3103,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.CommunicationChannel;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.CommunicationType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.ContactType;\n\n@SuppressWarnings(\"serial\")\npublic class AppointmentNote extends SalesInfoNote {\n  private CommunicationType communicationType;\n  private CommunicationChannel communicationChannel;\n  private ContactType contactType;\n\n  /**\n   * Copy Constructor\n   * \n   * @param appointmentNote a <code>AppointmentNote</code> object\n   */\n  public AppointmentNote(AppointmentNote appointmentNote) {\n    super(appointmentNote);\n    this.setSalesInfoNoteType(SalesInfoNoteType.SI_APPOINTMENT_NOTE);\n    this.communicationType = appointmentNote.communicationType;\n    this.communicationChannel = appointmentNote.communicationChannel;\n    this.contactType = appointmentNote.contactType;\n  }\n\n  public AppointmentNote() {\n    super();\n    this.setSalesInfoNoteType(SalesInfoNoteType.SI_APPOINTMENT_NOTE);\n  }\n\n  public CommunicationType getCommunicationType() {\n    return communicationType;\n  }\n\n  public void setCommunicationType(CommunicationType communicationType) {\n    this.communicationType = communicationType;\n  }\n\n  public CommunicationChannel getCommunicationChannel() {\n    return communicationChannel;\n  }\n\n  public void setCommunicationChannel(CommunicationChannel communicationChannel) {\n    this.communicationChannel = communicationChannel;\n  }\n\n  public ContactType getContactType() {\n    return contactType;\n  }\n\n  public void setContactType(ContactType contactType) {\n    this.contactType = contactType;\n  }\n\n  /**\n   * Constructs a <code>String</code> with all attributes\n   * in name = value format.\n   * \n   * @return a <code>String</code> representation\n   *         of this object.\n   */\n  @Override\n  public String toString() {\n    final String TAB = \"    \";\n\n    String retValue = \"\";\n\n    retValue = \"AppointmentNote ( \" + super.toString() + TAB + \"communicationType = \" + this.communicationType + TAB\n        + \"communicationChannel = \" + this.communicationChannel + TAB + \"contactType = \" + this.contactType + TAB + \" )\";\n\n    return retValue;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((communicationChannel == null) ? 0 : communicationChannel.hashCode());\n    result = prime * result + ((communicationType == null) ? 0 : communicationType.hashCode());\n    result = prime * result + ((contactType == null) ? 0 : contactType.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    AppointmentNote other = (AppointmentNote) obj;\n    if (communicationChannel != other.communicationChannel) return false;\n    if (communicationType != other.communicationType) return false;\n    if (contactType != other.contactType) return false;\n    return true;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesConvProductNoteRow.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesConvProductNoteRow.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2124,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\npublic class SalesConvProductNoteRow {\n  private long productNoteId;\n  private String predecessorSiNoteId;\n  private String productCategory;\n  private String productDisplayName;\n  private String setupCategory;\n  private String quoteStatus;\n  private String turnoverQuantity;\n  private String assigneeType;\n  private int contactCount;\n  private boolean deleted;\n\n  public String getProductCategory() {\n    return productCategory;\n  }\n\n  public void setProductCategory(String productCategory) {\n    this.productCategory = productCategory;\n  }\n\n  public String getProductDisplayName() {\n    return productDisplayName;\n  }\n\n  public void setProductDisplayName(String productDisplayName) {\n    this.productDisplayName = productDisplayName;\n  }\n\n  public String getSetupCategory() {\n    return setupCategory;\n  }\n\n  public void setSetupCategory(String setupCategory) {\n    this.setupCategory = setupCategory;\n  }\n\n  public String getQuoteStatus() {\n    return quoteStatus;\n  }\n\n  public void setQuoteStatus(String quoteStatus) {\n    this.quoteStatus = quoteStatus;\n  }\n\n  public String getTurnoverQuantity() {\n    return turnoverQuantity;\n  }\n\n  public void setTurnoverQuantity(String turnoverQuantity) {\n    this.turnoverQuantity = turnoverQuantity;\n  }\n\n  public String getAssigneeType() {\n    return assigneeType;\n  }\n\n  public void setAssigneeType(String assigneeType) {\n    this.assigneeType = assigneeType;\n  }\n\n  public int getContactCount() {\n    return contactCount;\n  }\n\n  public void setContactCount(int contactCount) {\n    this.contactCount = contactCount;\n  }\n\n  public long getProductNoteId() {\n    return productNoteId;\n  }\n\n  public void setProductNoteId(long productNoteId) {\n    this.productNoteId = productNoteId;\n  }\n\n  public String getPredecessorSiNoteId() {\n    return predecessorSiNoteId;\n  }\n\n  public void setPredecessorSiNoteId(String predecessorSiNoteId) {\n    this.predecessorSiNoteId = predecessorSiNoteId;\n  }\n\n  public boolean isDeleted() {\n    return this.deleted;\n  }\n\n  public void setDeleted(boolean deleted) {\n    this.deleted = deleted;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesInfoNoteHistoryModificationType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesInfoNoteHistoryModificationType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 286,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\npublic enum SalesInfoNoteHistoryModificationType {\n  CREATED, CREATED_BY_PREDECESSOR, FOLLOWER_CREATED, MODIFIED, \n  DELETED, ASSIGNED, ORDER_ACCEPTED, IN_PROCESSING, COMPLETED_SUCCESSFULLY, \n  PRODUCT_SAVED, APPOINTMENT_COMMUNICATION\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SbsNoteReportRow.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SbsNoteReportRow.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2792,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport java.util.Date;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.CommunicationChannel;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.CommunicationType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.ContactSource;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.ContactType;\n\npublic class SbsNoteReportRow {\n\n  String userName;\n  String me1;\n  String me2;\n  String me3;\n  String me4;\n  CommunicationType communicationType;\n  CommunicationChannel communicationChannel;\n  ContactType contactType;\n  ContactSource contactSource;\n  Date startDate;\n\n  public String getMeAtLevel(int level) {\n    switch (level) {\n      case 1:\n        return me1;\n      case 2:\n        return me2;\n      case 3:\n        return me3;\n      case 4:\n        return me4;\n      default:\n        return null;\n    }\n  }\n\n  public String getUserName() {\n    return userName;\n  }\n\n  public void setUserName(String userName) {\n    this.userName = userName;\n  }\n\n  public String getMe1() {\n    return me1;\n  }\n\n  public void setMe1(String me1) {\n    this.me1 = me1;\n  }\n\n  public String getMe2() {\n    return me2;\n  }\n\n  public void setMe2(String me2) {\n    this.me2 = me2;\n  }\n\n  public String getMe3() {\n    return me3;\n  }\n\n  public void setMe3(String me3) {\n    this.me3 = me3;\n  }\n\n  public String getMe4() {\n    return me4;\n  }\n\n  public void setMe4(String me4) {\n    this.me4 = me4;\n  }\n\n  public CommunicationType getCommunicationType() {\n    return communicationType;\n  }\n\n  public void setCommunicationType(CommunicationType communicationType) {\n    this.communicationType = communicationType;\n  }\n\n  public CommunicationChannel getCommunicationChannel() {\n    return communicationChannel;\n  }\n\n  public void setCommunicationChannel(CommunicationChannel communicationChannel) {\n    this.communicationChannel = communicationChannel;\n  }\n\n  public ContactType getContactType() {\n    return contactType;\n  }\n\n  public void setContactType(ContactType contactType) {\n    this.contactType = contactType;\n  }\n\n  public ContactSource getContactSource() {\n    return contactSource;\n  }\n\n  public void setContactSource(ContactSource contactSource) {\n    this.contactSource = contactSource;\n  }\n\n  public Date getStartDate() {\n    return startDate;\n  }\n\n  public void setStartDate(Date startDate) {\n    this.startDate = startDate;\n  }\n\n  @Override\n  public String toString() {\n    return \"SbsNoteReportRow [userName=\" + userName + \", me1=\" + me1 + \", me2=\" + me2 + \", me3=\" + me3 + \", me4=\" + me4 + \", communicationType=\" + communicationType + \", communicationChannel=\" + communicationChannel + \", contactType=\" + contactType + \", contactSource=\" + contactSource\n        + \", startDate=\" + startDate + \"]\";\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesInfoNoteHistory.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesInfoNoteHistory.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2852,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\n\npublic class SalesInfoNoteHistory implements Serializable {\n  private long salesInfoNoteId;\n  private Date modificationTimestamp;\n  private UserInfo modificationUser;\n  private SalesInfoNoteHistoryModificationType modificationType;\n  private Long predecessorSalesInfoNoteId; // only filled out when modificationType == CREATED_BY_PREDECESSOR\n  private Long followerSalesInfoNoteId; // only filled out when modificationType == FOLLOWER_CREATED\n\n  public SalesInfoNoteHistory() {}\n\n  public SalesInfoNoteHistory(long salesInfoNoteId, Date modificationTimestamp, UserInfo modificationUser, SalesInfoNoteHistoryModificationType modificationType, Long predecessorSalesInfoNoteId, Long followerSalesInfoNoteId) {\n    this.salesInfoNoteId = salesInfoNoteId;\n    this.modificationTimestamp = modificationTimestamp;\n    this.modificationUser = modificationUser;\n    this.modificationType = modificationType;\n    this.predecessorSalesInfoNoteId = predecessorSalesInfoNoteId;\n    this.followerSalesInfoNoteId = followerSalesInfoNoteId;\n  }\n\n  public long getSalesInfoNoteId() {\n    return salesInfoNoteId;\n  }\n\n  public void setSalesInfoNoteId(long salesInfoNoteId) {\n    this.salesInfoNoteId = salesInfoNoteId;\n  }\n\n  public Date getModificationTimestamp() {\n    return modificationTimestamp;\n  }\n\n  public void setModificationTimestamp(Date modificationTimestamp) {\n    this.modificationTimestamp = modificationTimestamp;\n  }\n\n  public UserInfo getModificationUser() {\n    return modificationUser;\n  }\n\n  public void setModificationUser(UserInfo modificationUser) {\n    this.modificationUser = modificationUser;\n  }\n\n  public SalesInfoNoteHistoryModificationType getModificationType() {\n    return modificationType;\n  }\n\n  public void setModificationType(SalesInfoNoteHistoryModificationType modificationType) {\n    this.modificationType = modificationType;\n  }\n\n  public Long getPredecessorSalesInfoNoteId() {\n    return predecessorSalesInfoNoteId;\n  }\n\n  public void setPredecessorSalesInfoNoteId(Long predecessorSalesInfoNoteId) {\n    this.predecessorSalesInfoNoteId = predecessorSalesInfoNoteId;\n  }\n\n  public Long getFollowerSalesInfoNoteId() {\n    return followerSalesInfoNoteId;\n  }\n\n  public void setFollowerSalesInfoNoteId(Long followerSalesInfoNoteId) {\n    this.followerSalesInfoNoteId = followerSalesInfoNoteId;\n  }\n\n  @Override\n  public String toString() {\n    return \"SalesInfoNoteHistory [salesInfoNoteId=\" + salesInfoNoteId + \", modificationTimestamp=\" + modificationTimestamp + \", modificationUser=\" + modificationUser + \", modificationType=\" + modificationType + \", predecessorSalesInfoNoteId=\" + predecessorSalesInfoNoteId + \", followerSalesInfoNoteId=\" + followerSalesInfoNoteId + \"]\";\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/Task.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/Task.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7466,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress;\n\npublic class Task implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  /**\n   * Copy Constructor\n   * \n   * @param task a <code>Task</code> object\n   */\n  public Task(Task task) {\n    this.taskId = task.taskId;\n    this.active = task.active;\n    this.status = task.status;\n    this.type = task.type;\n    this.assigneeUser = task.assigneeUser;\n    this.startDate = task.startDate;\n    this.endDate = task.endDate;\n    this.sendReminderMail = task.sendReminderMail;\n    this.sendVCalendarMail = task.sendVCalendarMail;\n    this.address = task.address;\n    this.reminderMailSentDate = task.reminderMailSentDate;\n    this.vCalMailSentDate = task.vCalMailSentDate;\n    this.vCalMailTo = task.vCalMailTo;\n    this.vCalMailCC = task.vCalMailCC;\n  }\n\n  public Task() {\n    // default constructor to support GWT parsing\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + (active ? 1231 : 1237);\n    result = prime * result + ((address == null) ? 0 : address.hashCode());\n    result = prime * result + ((assigneeUser == null) ? 0 : assigneeUser.hashCode());\n    result = prime * result + ((endDate == null) ? 0 : endDate.hashCode());\n    result = prime * result + ((reminderMailSentDate == null) ? 0 : reminderMailSentDate.hashCode());\n    result = prime * result + (sendReminderMail ? 1231 : 1237);\n    result = prime * result + (sendVCalendarMail ? 1231 : 1237);\n    result = prime * result + ((startDate == null) ? 0 : startDate.hashCode());\n    result = prime * result + ((status == null) ? 0 : status.hashCode());\n    result = prime * result + (int) (taskId ^ (taskId >>> 32));\n    result = prime * result + ((type == null) ? 0 : type.hashCode());\n    result = prime * result + ((vCalMailCC == null) ? 0 : vCalMailCC.hashCode());\n    result = prime * result + ((vCalMailSentDate == null) ? 0 : vCalMailSentDate.hashCode());\n    result = prime * result + ((vCalMailTo == null) ? 0 : vCalMailTo.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    Task other = (Task) obj;\n    if (active != other.active) {\n      return false;\n    }\n    if (address == null) {\n      if (other.address != null) {\n        return false;\n      }\n    } else if (!address.equals(other.address)) {\n      return false;\n    }\n    if (assigneeUser == null) {\n      if (other.assigneeUser != null) {\n        return false;\n      }\n    } else if (!assigneeUser.equals(other.assigneeUser)) {\n      return false;\n    }\n    if (endDate == null) {\n      if (other.endDate != null) {\n        return false;\n      }\n    } else if (!endDate.equals(other.endDate)) {\n      return false;\n    }\n    if (reminderMailSentDate == null) {\n      if (other.reminderMailSentDate != null) {\n        return false;\n      }\n    } else if (!reminderMailSentDate.equals(other.reminderMailSentDate)) {\n      return false;\n    }\n    if (sendReminderMail != other.sendReminderMail) {\n      return false;\n    }\n    if (sendVCalendarMail != other.sendVCalendarMail) {\n      return false;\n    }\n    if (startDate == null) {\n      if (other.startDate != null) {\n        return false;\n      }\n    } else if (!startDate.equals(other.startDate)) {\n      return false;\n    }\n    if (status != other.status) {\n      return false;\n    }\n    if (taskId != other.taskId) {\n      return false;\n    }\n    if (type != other.type) {\n      return false;\n    }\n    if (vCalMailCC == null) {\n      if (other.vCalMailCC != null) {\n        return false;\n      }\n    } else if (!vCalMailCC.equals(other.vCalMailCC)) {\n      return false;\n    }\n    if (vCalMailSentDate == null) {\n      if (other.vCalMailSentDate != null) {\n        return false;\n      }\n    } else if (!vCalMailSentDate.equals(other.vCalMailSentDate)) {\n      return false;\n    }\n    if (vCalMailTo == null) {\n      if (other.vCalMailTo != null) {\n        return false;\n      }\n    } else if (!vCalMailTo.equals(other.vCalMailTo)) {\n      return false;\n    }\n    return true;\n  }\n\n  public enum TaskStatus {\n    NONE, OPEN, WORKING, DONE, OBSOLESCED_BY_SUCCESSOR\n  };\n\n  public enum TaskType {\n    NONE, CALL, QUOTE, INQUIRY, APPOINTMENT, SI_VR_SBS_PRODUCT_NOTE\n  };\n\n  private long taskId;\n  private boolean active;\n  private TaskStatus status;\n  private TaskType type;\n  private BiteUser assigneeUser;\n  private Date startDate;\n  private Date endDate;\n  private boolean sendReminderMail;\n  private boolean sendVCalendarMail;\n\n  private StandardAddress address;\n\n  private Date reminderMailSentDate;\n  private Date vCalMailSentDate;\n  private String vCalMailTo;\n  private String vCalMailCC;\n\n  public long getTaskId() {\n    return taskId;\n  }\n\n  public void setTaskId(long taskId) {\n    this.taskId = taskId;\n  }\n\n  public boolean isActive() {\n    return active;\n  }\n\n  public void setActive(boolean active) {\n    this.active = active;\n  }\n\n  public TaskStatus getStatus() {\n    return status;\n  }\n\n  public void setStatus(TaskStatus status) {\n    this.status = status;\n  }\n\n  public TaskType getType() {\n    return type;\n  }\n\n  public void setType(TaskType type) {\n    this.type = type;\n  }\n\n  public BiteUser getAssigneeUser() {\n    return assigneeUser;\n  }\n\n  public void setAssigneeUser(BiteUser assigneeUser) {\n    this.assigneeUser = assigneeUser;\n  }\n\n  public Date getStartDate() {\n    return startDate;\n  }\n\n  public void setStartDate(Date startDate) {\n    this.startDate = startDate;\n  }\n\n  public Date getEndDate() {\n    return endDate;\n  }\n\n  public void setEndDate(Date endDate) {\n    this.endDate = endDate;\n  }\n\n  public boolean isSendReminderMail() {\n    return sendReminderMail;\n  }\n\n  public void setSendReminderMail(boolean sendReminderMail) {\n    this.sendReminderMail = sendReminderMail;\n  }\n\n  public boolean isSendVCalendarMail() {\n    return sendVCalendarMail;\n  }\n\n  public void setSendVCalendarMail(boolean sendVCalendarMail) {\n    this.sendVCalendarMail = sendVCalendarMail;\n  }\n\n  public Date getReminderMailSentDate() {\n    return reminderMailSentDate;\n  }\n\n  public void setReminderMailSentDate(Date reminderMailSentDate) {\n    this.reminderMailSentDate = reminderMailSentDate;\n  }\n\n  public Date getvCalMailSentDate() {\n    return vCalMailSentDate;\n  }\n\n  public void setvCalMailSentDate(Date vCalMailSentDate) {\n    this.vCalMailSentDate = vCalMailSentDate;\n  }\n\n  @Override\n  public String toString() {\n    return \"Task [taskId=\" + taskId + \", active=\" + active + \", status=\" + status + \", type=\" + type + \", assigneeUser=\" + assigneeUser + \", startDate=\" + startDate + \", endDate=\" + endDate\n        + \", sendReminderMail=\" + sendReminderMail + \", sendVCalendarMail=\" + sendVCalendarMail + \"]\";\n  }\n\n  public String getvCalMailTo() {\n    return vCalMailTo;\n  }\n\n  public void setvCalMailTo(String vCalMailTo) {\n    this.vCalMailTo = vCalMailTo;\n  }\n\n  public String getvCalMailCC() {\n    return vCalMailCC;\n  }\n\n  public void setvCalMailCC(String vCalMailCC) {\n    this.vCalMailCC = vCalMailCC;\n  }\n\n  public StandardAddress getAddress() {\n    return address;\n  }\n\n  public void setAddress(StandardAddress address) {\n    this.address = address;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesConvNoteReportRow.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesConvNoteReportRow.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3399,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class SalesConvNoteReportRow {\n\n  private long siNoteId;\n  private String predecessorSiNoteId;\n  private String campaignId;\n  private String campaignName;\n  private Date lastUpdate;\n  private BiteUser lastModUser;\n  private String customerId;\n  private String customerFirstName;\n  private String customerLastName;\n  private String contactType;\n  private boolean taskActive;\n  private Date taskStartDate;\n  private List<SalesConvProductNoteRow> productNotes;\n  private List<FeedbackQuestionsRow> feedbackQuestions;\n  private boolean deleted;\n  private boolean finalized;\n\n  public long getSiNoteId() {\n    return siNoteId;\n  }\n\n  public void setSiNoteId(long siNoteId) {\n    this.siNoteId = siNoteId;\n  }\n\n  public String getCampaignId() {\n    return campaignId;\n  }\n\n  public void setCampaignId(String campaignId) {\n    this.campaignId = campaignId;\n  }\n\n  public String getCampaignName() {\n    return campaignName;\n  }\n\n  public void setCampaignName(String campaignName) {\n    this.campaignName = campaignName;\n  }\n\n  public Date getLastUpdate() {\n    return lastUpdate;\n  }\n\n  public void setLastUpdate(Date lastUpdate) {\n    this.lastUpdate = lastUpdate;\n  }\n\n  public BiteUser getLastModUser() {\n    return lastModUser;\n  }\n\n  public void setLastModUser(BiteUser lastModUser) {\n    this.lastModUser = lastModUser;\n  }\n\n  public String getCustomerId() {\n    return customerId;\n  }\n\n  public void setCustomerId(String customerId) {\n    this.customerId = customerId;\n  }\n\n  public String getCustomerFirstName() {\n    return customerFirstName;\n  }\n\n  public void setCustomerFirstName(String customerFirstName) {\n    this.customerFirstName = customerFirstName;\n  }\n\n  public String getCustomerLastName() {\n    return customerLastName;\n  }\n\n  public void setCustomerLastName(String customerLastName) {\n    this.customerLastName = customerLastName;\n  }\n\n  public String getContactType() {\n    return contactType;\n  }\n\n  public void setContactType(String contactType) {\n    this.contactType = contactType;\n  }\n\n  public boolean isTaskActive() {\n    return taskActive;\n  }\n\n  public void setTaskActive(boolean taskActive) {\n    this.taskActive = taskActive;\n  }\n\n  public Date getTaskStartDate() {\n    return taskStartDate;\n  }\n\n  public void setTaskStartDate(Date taskStartDate) {\n    this.taskStartDate = taskStartDate;\n  }\n\n  public List<SalesConvProductNoteRow> getProductNotes() {\n    return productNotes;\n  }\n\n  public void setProductNotes(List<SalesConvProductNoteRow> productNotes) {\n    this.productNotes = productNotes;\n  }\n\n  public List<FeedbackQuestionsRow> getFeedbackQuestions() {\n    return feedbackQuestions;\n  }\n\n  public void setFeedbackQuestions(List<FeedbackQuestionsRow> feedbackQuestions) {\n    this.feedbackQuestions = feedbackQuestions;\n  }\n\n  public String getPredecessorSiNoteId() {\n    return predecessorSiNoteId;\n  }\n\n  public void setPredecessorSiNoteId(String predecessorSiNoteId) {\n    this.predecessorSiNoteId = predecessorSiNoteId;\n  }\n\n  public boolean isDeleted() {\n    return this.deleted;\n  }\n\n  public void setDeleted(boolean deleted) {\n    this.deleted = deleted;\n  }\n\n  public boolean isFinalized() {\n    return finalized;\n  }\n\n  public void setFinalized(boolean finalized) {\n    this.finalized = finalized;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/CompetitorNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/CompetitorNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1846,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport java.util.Date;\n\npublic class CompetitorNote extends SalesInfoNote {\n  private String name;\n  private String productGroupName;\n  private String productName;\n  private Date bindingDate;\n  private Date reminderMailSentDate;\n\n  /**\n   * Copy Constructor\n   * \n   * @param competitorNote a <code>CompetitorNote</code> object\n   */\n  public CompetitorNote(CompetitorNote competitorNote) {\n    super(competitorNote);\n    this.name = competitorNote.name;\n    this.productGroupName = competitorNote.productGroupName;\n    this.productName = competitorNote.productName;\n    this.bindingDate = competitorNote.bindingDate;\n    this.reminderMailSentDate = competitorNote.reminderMailSentDate;\n  }\npublic CompetitorNote(){\nsuper();}\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getProductGroupName() {\n    return productGroupName;\n  }\n\n  public void setProductGroupName(String productGroupName) {\n    this.productGroupName = productGroupName;\n  }\n\n  public String getProductName() {\n    return productName;\n  }\n\n  public void setProductName(String productName) {\n    this.productName = productName;\n  }\n\n  public Date getBindingDate() {\n    return bindingDate;\n  }\n\n  public void setBindingDate(Date bindingDate) {\n    this.bindingDate = bindingDate;\n  }\n\n  public Date getReminderMailSentDate() {\n    return reminderMailSentDate;\n  }\n\n  public void setReminderMailSentDate(Date reminderMailSentDate) {\n    this.reminderMailSentDate = reminderMailSentDate;\n  }\n\n  @Override\n  public String toString() {\n    return \"CompetitorNote [name=\" + name + \", productGroupName=\" + productGroupName + \", productName=\" + productName + \", bindingDate=\" + bindingDate + \", reminderMailSentDate=\" + reminderMailSentDate + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesInfoOverviewRow.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/SalesInfoOverviewRow.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2728,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport java.io.Serializable;\nimport java.util.Comparator;\nimport java.util.Date;\n\nimport at.a1ta.cuco.core.shared.dto.OverviewStatus;\nimport at.a1ta.cuco.core.shared.dto.ReadOnlyStatusBasedOnCategory;\n\n/**\n * Marker Interface for the UI\n */\npublic abstract class SalesInfoOverviewRow implements Serializable {\n\n  /**\n   * Copy Constructor\n   * \n   * @param salesInfoOverviewRow a <code>SalesInfoOverviewRow</code> object\n   */\n  public SalesInfoOverviewRow(SalesInfoOverviewRow salesInfoOverviewRow) {\n    this.overviewStatus = salesInfoOverviewRow.overviewStatus;\n    this.statusBasedOnCaregory = salesInfoOverviewRow.statusBasedOnCaregory;\n  }\n\n  public SalesInfoOverviewRow() {\n    // TODO Auto-generated constructor stub\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((overviewStatus == null) ? 0 : overviewStatus.hashCode());\n    result = prime * result + ((statusBasedOnCaregory == null) ? 0 : statusBasedOnCaregory.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass() != obj.getClass()) return false;\n    SalesInfoOverviewRow other = (SalesInfoOverviewRow) obj;\n    if (overviewStatus != other.overviewStatus) return false;\n    if (statusBasedOnCaregory != other.statusBasedOnCaregory) return false;\n    return true;\n  }\n\n  private OverviewStatus overviewStatus;\n\n  private ReadOnlyStatusBasedOnCategory statusBasedOnCaregory;\n\n  public enum SalesInfoNoteGroups {\n    ALL, QUOTE, NOTE, REPORT, SALES_CONV\n  }\n\n  public static Comparator<SalesInfoOverviewRow> lastModDateComparator = new Comparator<SalesInfoOverviewRow>() {\n\n    @Override\n    public int compare(SalesInfoOverviewRow row1, SalesInfoOverviewRow row2) {\n      if (row1.getLastModDate().before(row2.getLastModDate())) {\n        return -1;\n      } else if (row1.getLastModDate().after(row2.getLastModDate())) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  };\n\n  public abstract Date getLastModDate();\n\n  public static Comparator<SalesInfoOverviewRow> getLastModDateComparator() {\n    return lastModDateComparator;\n  }\n\n  public OverviewStatus getOverviewStatus() {\n    return overviewStatus;\n  }\n\n  public void setOverviewStatus(OverviewStatus overviewStatus) {\n    this.overviewStatus = overviewStatus;\n  }\n\n  public ReadOnlyStatusBasedOnCategory getStatusBasedOnCaregory() {\n    return statusBasedOnCaregory;\n  }\n\n  public void setStatusBasedOnCaregory(ReadOnlyStatusBasedOnCategory havingReadOnlyProductCategories) {\n    this.statusBasedOnCaregory = havingReadOnlyProductCategories;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/ToDoGroupNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/ToDoGroupNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7156,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote;\n\n// this relates to Abwicklungsauftrag\n@SuppressWarnings(\"serial\")\npublic class ToDoGroupNote extends SalesInfoNote {\n  public enum ToDoStatus {\n    CREATED, ASSIGNED, ACCEPTED, INPROGRESS, DONE\n  };\n\n  private String toDoGroupName;\n  private ToDoStatus toDoGroupStatus = ToDoStatus.CREATED;\n  private String creatorNotes;\n  private String assigneeNotes;\n  private ArrayList<SBSProductNote> relatedNotes = new ArrayList<SBSProductNote>();\n  private ArrayList<Attribute> attributes = new ArrayList<Attribute>();\n  private BiteUser assignedToUser;\n  private String assigneeDealerId = \"\";\n  private String emailAdditionalText = \"\";\n  private PointOfSaleInfo assignedToDelearInfo;\n  private boolean sendAssignmentEmail = false;\n  private boolean sendCompletionEmail = false;\n\n  public ToDoGroupNote() {\n    super();\n    this.setSalesInfoNoteType(SalesInfoNoteType.SI_TODO_GROUP_NOTE);\n  }\n\n  public String getToDoGroupName() {\n    return toDoGroupName;\n  }\n\n  public void setToDoGroupName(String toDoGroupName) {\n    this.toDoGroupName = toDoGroupName;\n  }\n\n  public ToDoStatus getToDoGroupstatus() {\n    return toDoGroupStatus;\n  }\n\n  public void setToDoGroupstatus(ToDoStatus toDoGroupstatus) {\n    this.toDoGroupStatus = toDoGroupstatus;\n  }\n\n  public String getCreatorNote() {\n    return creatorNotes;\n  }\n\n  public void setCreatorNote(String creatorNote) {\n    this.creatorNotes = creatorNote;\n  }\n\n  public String getAssigneeNotes() {\n    return assigneeNotes;\n  }\n\n  public void setAssigneeNotes(String assigneeNotes) {\n    this.assigneeNotes = assigneeNotes;\n  }\n\n  public ArrayList<SBSProductNote> getRelatedNotes() {\n    return relatedNotes;\n  }\n\n  public void setRelatedNotes(ArrayList<SBSProductNote> relatedNotes) {\n    this.relatedNotes = relatedNotes;\n  }\n\n  public ArrayList<Attribute> getAttributes() {\n    return attributes;\n  }\n\n  public void setAttributes(ArrayList<Attribute> attributes) {\n    this.attributes = attributes;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((assignedToUser == null) ? 0 : assignedToUser.hashCode());\n    result = prime * result + ((assigneeDealerId == null) ? 0 : assigneeDealerId.hashCode());\n    result = prime * result + ((assigneeNotes == null) ? 0 : assigneeNotes.hashCode());\n    result = prime * result + ((attributes == null) ? 0 : attributes.hashCode());\n    result = prime * result + ((creatorNotes == null) ? 0 : creatorNotes.hashCode());\n    result = prime * result + ((emailAdditionalText == null) ? 0 : emailAdditionalText.hashCode());\n    result = prime * result + ((relatedNotes == null) ? 0 : relatedNotes.hashCode());\n    result = prime * result + ((toDoGroupName == null) ? 0 : toDoGroupName.hashCode());\n    result = prime * result + ((toDoGroupStatus == null) ? 0 : toDoGroupStatus.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (!super.equals(obj)) return false;\n    if (getClass() != obj.getClass()) return false;\n    ToDoGroupNote other = (ToDoGroupNote) obj;\n    if (assignedToUser == null) {\n      if (other.assignedToUser != null) return false;\n    } else if (!assignedToUser.equals(other.assignedToUser)) return false;\n    if (assigneeDealerId == null) {\n      if (other.assigneeDealerId != null) return false;\n    } else if (!assigneeDealerId.equals(other.assigneeDealerId)) return false;\n    if (assigneeNotes == null) {\n      if (other.assigneeNotes != null) return false;\n    } else if (!assigneeNotes.equals(other.assigneeNotes)) return false;\n    if (attributes == null) {\n      if (other.attributes != null) return false;\n    } else if (!attributes.equals(other.attributes)) return false;\n    if (creatorNotes == null) {\n      if (other.creatorNotes != null) return false;\n    } else if (!creatorNotes.equals(other.creatorNotes)) return false;\n    if (emailAdditionalText == null) {\n      if (other.emailAdditionalText != null) return false;\n    } else if (!emailAdditionalText.equals(other.emailAdditionalText)) return false;\n    if (relatedNotes == null) {\n      if (other.relatedNotes != null) return false;\n    } else if (!relatedNotes.equals(other.relatedNotes)) return false;\n    if (toDoGroupName == null) {\n      if (other.toDoGroupName != null) return false;\n    } else if (!toDoGroupName.equals(other.toDoGroupName)) return false;\n    if (toDoGroupStatus != other.toDoGroupStatus) return false;\n    return true;\n  }\n\n  @Override\n  public String toString() {\n    return \"ToDoGroupNote [toDoGroupName=\" + toDoGroupName + \", toDoGroupStatus=\" + toDoGroupStatus + \", creatorNotes=\" + creatorNotes + \", assigneeNotes=\" + assigneeNotes + \", relatedNotes=\"\n        + relatedNotes + \", attributes=\" + attributes + \", assignedToUser=\" + assignedToUser + \", assigneeDealerId=\" + assigneeDealerId + \", emailAdditionalText=\" + emailAdditionalText + \"]\";\n  }\n\n  public BiteUser getAssignedToUser() {\n    return assignedToUser;\n  }\n\n  public void setAssignedToUser(BiteUser assignedToUser) {\n    this.assignedToUser = assignedToUser;\n  }\n\n  public String getEmailAdditionalText() {\n    return emailAdditionalText;\n  }\n\n  public void setEmailAdditionalText(String emailAdditionalText) {\n    this.emailAdditionalText = emailAdditionalText;\n  }\n\n  public String getAssigneeDealerId() {\n    return assigneeDealerId;\n  }\n\n  public void setAssigneeDealerId(String assigneeDealerId) {\n    this.assigneeDealerId = assigneeDealerId;\n  }\n\n  public PointOfSaleInfo getAssignedToDelearInfo() {\n    return assignedToDelearInfo;\n  }\n\n  public void setAssignedToDelearInfo(PointOfSaleInfo assignedToDelearInfo) {\n    this.assignedToDelearInfo = assignedToDelearInfo;\n  }\n\n  public boolean isSendAssignmentEmail() {\n    return sendAssignmentEmail;\n  }\n\n  public void setSendAssignmentEmail(boolean sendAssignmentEmail) {\n    this.sendAssignmentEmail = sendAssignmentEmail;\n  }\n\n  public boolean isSendCompletionEmail() {\n    return sendCompletionEmail;\n  }\n\n  public void setSendCompletionEmail(boolean sendCompletionEmail) {\n    this.sendCompletionEmail = sendCompletionEmail;\n  }\n\n  public boolean isToDoCompleted() {\n    if (getAttributes() == null) {\n      return false;\n    }\n    boolean allToDosCompleted = true;\n    for (Attribute attrib : getAttributes()) {\n      if (!attrib.getNSBooleanValue()) {\n        allToDosCompleted = false;\n        break;\n      }\n    }\n    return allToDosCompleted;\n  }\n\n  public boolean isToDoInProgress() {\n    if (getAttributes() == null) {\n      return false;\n    }\n    boolean anyToDoCompleted = false;\n    boolean allToDosCompleted = true;\n    for (Attribute attrib : getAttributes()) {\n      if (attrib.getNSBooleanValue()) {\n        anyToDoCompleted = true;\n      } else {\n        allToDosCompleted = false;\n      }\n    }\n    return !allToDosCompleted && anyToDoCompleted;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SmartHomeNew.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SmartHomeNew.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4639,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class SmartHomeNew extends SmartHomeBase {\n\n  private boolean smartHomeTariff;\n  private BigDecimal smartHomeTariffPrice;\n  private String smartHomeTariffText;\n\n  private boolean securitySolution;\n  private BigDecimal securitySolutionPrice;\n  private String securitySolutionText;\n\n  private boolean indoorCamera;\n  private BigDecimal indoorCameraPrice;\n\n  private boolean multiSensor;\n  private BigDecimal multiSensorPrice;\n\n  private boolean bulb;\n  private BigDecimal bulbPrice;\n\n  private boolean socket;\n  private BigDecimal socketPrice;\n\n  private boolean outdoorCamera;\n\n  private boolean nukiCombo;\n  private BigDecimal nukiComboPrice;\n\n  public boolean isSmartHomeTariff() {\n    return smartHomeTariff;\n  }\n\n  public void setSmartHomeTariff(boolean smartHomeTariff) {\n    this.smartHomeTariff = smartHomeTariff;\n  }\n\n  public BigDecimal getSmartHomeTariffPrice() {\n    return smartHomeTariffPrice;\n  }\n\n  public void setSmartHomeTariffPrice(BigDecimal smartHomeTariffPrice) {\n    this.smartHomeTariffPrice = smartHomeTariffPrice;\n  }\n\n  public String getSmartHomeTariffText() {\n    return smartHomeTariffText;\n  }\n\n  public void setSmartHomeTariffText(String smartHomeTariffText) {\n    this.smartHomeTariffText = smartHomeTariffText;\n  }\n\n  public boolean isSecuritySolution() {\n    return securitySolution;\n  }\n\n  public void setSecuritySolution(boolean securitySolution) {\n    this.securitySolution = securitySolution;\n  }\n\n  public BigDecimal getSecuritySolutionPrice() {\n    return securitySolutionPrice;\n  }\n\n  public void setSecuritySolutionPrice(BigDecimal securitySolutionPrice) {\n    this.securitySolutionPrice = securitySolutionPrice;\n  }\n\n  public String getSecuritySolutionText() {\n    return securitySolutionText;\n  }\n\n  public void setSecuritySolutionText(String securitySolutionText) {\n    this.securitySolutionText = securitySolutionText;\n  }\n\n  public boolean isIndoorCamera() {\n    return indoorCamera;\n  }\n\n  public void setIndoorCamera(boolean indoorCamera) {\n    this.indoorCamera = indoorCamera;\n  }\n\n  public BigDecimal getIndoorCameraPrice() {\n    return indoorCameraPrice;\n  }\n\n  public void setIndoorCameraPrice(BigDecimal indoorCameraPrice) {\n    this.indoorCameraPrice = indoorCameraPrice;\n  }\n\n  public boolean isMultiSensor() {\n    return multiSensor;\n  }\n\n  public void setMultiSensor(boolean multiSensor) {\n    this.multiSensor = multiSensor;\n  }\n\n  public BigDecimal getMultiSensorPrice() {\n    return multiSensorPrice;\n  }\n\n  public void setMultiSensorPrice(BigDecimal multiSensorPrice) {\n    this.multiSensorPrice = multiSensorPrice;\n  }\n\n  public boolean isBulb() {\n    return bulb;\n  }\n\n  public void setBulb(boolean bulb) {\n    this.bulb = bulb;\n  }\n\n  public BigDecimal getBulbPrice() {\n    return bulbPrice;\n  }\n\n  public void setBulbPrice(BigDecimal bulbPrice) {\n    this.bulbPrice = bulbPrice;\n  }\n\n  public boolean isSocket() {\n    return socket;\n  }\n\n  public void setSocket(boolean socket) {\n    this.socket = socket;\n  }\n\n  public BigDecimal getSocketPrice() {\n    return socketPrice;\n  }\n\n  public void setSocketPrice(BigDecimal socketPrice) {\n    this.socketPrice = socketPrice;\n  }\n\n  public boolean isOutdoorCamera() {\n    return outdoorCamera;\n  }\n\n  public void setOutdoorCamera(boolean outdoorCamera) {\n    this.outdoorCamera = outdoorCamera;\n  }\n\n  public boolean isNukiCombo() {\n    return nukiCombo;\n  }\n\n  public void setNukiCombo(boolean nukiCombo) {\n    this.nukiCombo = nukiCombo;\n  }\n\n  public BigDecimal getNukiComboPrice() {\n    return nukiComboPrice;\n  }\n\n  public void setNukiComboPrice(BigDecimal nukiComboPrice) {\n    this.nukiComboPrice = nukiComboPrice;\n  }\n\n  @Override\n  public String toString() {\n    return \"SmartHomeNew [smartHomeTariff=\" + smartHomeTariff + \", smartHomeTariffPrice=\" + smartHomeTariffPrice + \", smartHomeTariffText=\" + smartHomeTariffText + \", securitySolution=\"\n        + securitySolution + \", securitySolutionPrice=\" + securitySolutionPrice + \", securitySolutionText=\" + securitySolutionText + \", indoorCamera=\" + indoorCamera + \", indoorCameraPrice=\"\n        + indoorCameraPrice + \", multiSensor=\" + multiSensor + \", multiSensorPrice=\" + multiSensorPrice + \", bulb=\" + bulb + \", bulbPrice=\" + bulbPrice + \", socket=\" + socket + \", socketPrice=\"\n        + socketPrice + \", outdoorCamera=\" + outdoorCamera + \", nukiCombo=\" + nukiCombo + \", nukiComboPrice=\" + nukiComboPrice + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SecurityOld.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SecurityOld.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1634,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class SecurityOld extends SecurityBase {\n  private boolean cyberDefence;\n  private BigDecimal cyberDefencePrice;\n  private String cyberDefenceText;\n\n  private boolean creditCard;\n  private BigDecimal creditCardPrice;\n\n  public boolean isCyberDefence() {\n    return cyberDefence;\n  }\n\n  public void setCyberDefence(boolean cyberDefence) {\n    this.cyberDefence = cyberDefence;\n  }\n\n  public BigDecimal getCyberDefencePrice() {\n    return cyberDefencePrice;\n  }\n\n  public void setCyberDefencePrice(BigDecimal cyberDefencePrice) {\n    this.cyberDefencePrice = cyberDefencePrice;\n  }\n\n  public String getCyberDefenceText() {\n    return cyberDefenceText;\n  }\n\n  public void setCyberDefenceText(String cyberDefenceText) {\n    this.cyberDefenceText = cyberDefenceText;\n  }\n\n  public boolean isCreditCard() {\n    return creditCard;\n  }\n\n  public void setCreditCard(boolean creditCard) {\n    this.creditCard = creditCard;\n  }\n\n  public BigDecimal getCreditCardPrice() {\n    return creditCardPrice;\n  }\n\n  public void setCreditCardPrice(BigDecimal creditCardPrice) {\n    this.creditCardPrice = creditCardPrice;\n  }\n\n  @Override\n  public String toString() {\n    return \"SecurityOld [cyberDefence=\" + cyberDefence + \", cyberDefencePrice=\" + cyberDefencePrice + \", cyberDefenceText=\" + cyberDefenceText + \", creditCard=\" + creditCard + \", creditCardPrice=\"\n        + creditCardPrice + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedNew.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedNew.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5406,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class InternetSpeedNew extends InternetSpeedBase {\n  private String productName;\n\n  private boolean a1InternetProtection; // Internetschutz\n  private BigDecimal a1InternetProtectionPrice;\n\n  private boolean a1InternetPowerPlus; // Internet Power Plus\n  private BigDecimal a1InternetPowerPlusPrice;\n\n  private boolean a1CyberProtection; // Cyberschutz\n  private BigDecimal a1CyberProtectionPrice;\n\n  private boolean a1MobileWarranty; // Handygarantie\n  private BigDecimal a1MobileWarrantyPrice;\n\n  private boolean a1Mastercard; // Mastercard\n  private BigDecimal a1MastercardPrice;\n\n  private boolean a1XploreTvStreaming; // Xplore TV Streaming\n  private BigDecimal a1XploreTvStreamingPrice;\n\n  private boolean a1PLC;\n  private BigDecimal a1PLCPrice;\n\n  private boolean a1Mesh;\n  private BigDecimal a1MeshPrice;\n\n  private boolean connectPlus;\n\n  public String getProductName() {\n    return productName;\n  }\n\n  public void setProductName(String productName) {\n    this.productName = productName;\n  }\n\n  public boolean isA1InternetProtection() {\n    return a1InternetProtection;\n  }\n\n  public void setA1InternetProtection(boolean a1InternetProtection) {\n    this.a1InternetProtection = a1InternetProtection;\n  }\n\n  public BigDecimal getA1InternetProtectionPrice() {\n    return a1InternetProtectionPrice;\n  }\n\n  public void setA1InternetProtectionPrice(BigDecimal a1InternetProtectionPrice) {\n    this.a1InternetProtectionPrice = a1InternetProtectionPrice;\n  }\n\n  public boolean isA1InternetPowerPlus() {\n    return a1InternetPowerPlus;\n  }\n\n  public void setA1InternetPowerPlus(boolean a1InternetPowerPlus) {\n    this.a1InternetPowerPlus = a1InternetPowerPlus;\n  }\n\n  public BigDecimal getA1InternetPowerPlusPrice() {\n    return a1InternetPowerPlusPrice;\n  }\n\n  public void setA1InternetPowerPlusPrice(BigDecimal a1InternetPowerPlusPrice) {\n    this.a1InternetPowerPlusPrice = a1InternetPowerPlusPrice;\n  }\n\n  public boolean isA1CyberProtection() {\n    return a1CyberProtection;\n  }\n\n  public void setA1CyberProtection(boolean a1CyberProtection) {\n    this.a1CyberProtection = a1CyberProtection;\n  }\n\n  public BigDecimal getA1CyberProtectionPrice() {\n    return a1CyberProtectionPrice;\n  }\n\n  public void setA1CyberProtectionPrice(BigDecimal a1CyberProtectionPrice) {\n    this.a1CyberProtectionPrice = a1CyberProtectionPrice;\n  }\n\n  public boolean isA1MobileWarranty() {\n    return a1MobileWarranty;\n  }\n\n  public void setA1MobileWarranty(boolean a1MobileWarranty) {\n    this.a1MobileWarranty = a1MobileWarranty;\n  }\n\n  public BigDecimal getA1MobileWarrantyPrice() {\n    return a1MobileWarrantyPrice;\n  }\n\n  public void setA1MobileWarrantyPrice(BigDecimal a1MobileWarrantyPrice) {\n    this.a1MobileWarrantyPrice = a1MobileWarrantyPrice;\n  }\n\n  public boolean isA1Mastercard() {\n    return a1Mastercard;\n  }\n\n  public void setA1Mastercard(boolean a1Mastercard) {\n    this.a1Mastercard = a1Mastercard;\n  }\n\n  public BigDecimal getA1MastercardPrice() {\n    return a1MastercardPrice;\n  }\n\n  public void setA1MastercardPrice(BigDecimal a1MastercardPrice) {\n    this.a1MastercardPrice = a1MastercardPrice;\n  }\n\n  public boolean isA1XploreTvStreaming() {\n    return a1XploreTvStreaming;\n  }\n\n  public void setA1XploreTvStreaming(boolean a1XploreTvStreaming) {\n    this.a1XploreTvStreaming = a1XploreTvStreaming;\n  }\n\n  public BigDecimal getA1XploreTvStreamingPrice() {\n    return a1XploreTvStreamingPrice;\n  }\n\n  public void setA1XploreTvStreamingPrice(BigDecimal a1XploreTvStreamingPrice) {\n    this.a1XploreTvStreamingPrice = a1XploreTvStreamingPrice;\n  }\n\n  public boolean isA1PLC() {\n    return a1PLC;\n  }\n\n  public void setA1PLC(boolean a1plc) {\n    a1PLC = a1plc;\n  }\n\n  public BigDecimal getA1PLCPrice() {\n    return a1PLCPrice;\n  }\n\n  public void setA1PLCPrice(BigDecimal a1plcPrice) {\n    a1PLCPrice = a1plcPrice;\n  }\n\n  public boolean isA1Mesh() {\n    return a1Mesh;\n  }\n\n  public void setA1Mesh(boolean a1Mesh) {\n    this.a1Mesh = a1Mesh;\n  }\n\n  public BigDecimal getA1MeshPrice() {\n    return a1MeshPrice;\n  }\n\n  public void setA1MeshPrice(BigDecimal a1MeshPrice) {\n    this.a1MeshPrice = a1MeshPrice;\n  }\n\n  public boolean isConnectPlus() {\n    return connectPlus;\n  }\n\n  public void setConnectPlus(boolean connectPlus) {\n    this.connectPlus = connectPlus;\n  }\n\n  @Override\n  public String toString() {\n    return \"InternetSpeedNew [productName=\" + productName + \", a1InternetProtection=\" + a1InternetProtection + \", a1InternetProtectionPrice=\" + a1InternetProtectionPrice + \", a1InternetPowerPlus=\"\n        + a1InternetPowerPlus + \", a1InternetPowerPlusPrice=\" + a1InternetPowerPlusPrice + \", a1CyberProtection=\" + a1CyberProtection + \", a1CyberProtectionPrice=\" + a1CyberProtectionPrice\n        + \", a1MobileWarranty=\" + a1MobileWarranty + \", a1MobileWarrantyPrice=\" + a1MobileWarrantyPrice + \", a1Mastercard=\" + a1Mastercard + \", a1MastercardPrice=\" + a1MastercardPrice\n        + \", a1XploreTvStreaming=\" + a1XploreTvStreaming + \", a1XploreTvStreamingPrice=\" + a1XploreTvStreamingPrice + \", a1PLC=\" + a1PLC + \", a1PLCPrice=\" + a1PLCPrice + \", a1Mesh=\" + a1Mesh\n        + \", a1MeshPrice=\" + a1MeshPrice + \", connectPlus=\" + connectPlus + \"]\";\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariff.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariff.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1238,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MobileTariff implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @XmlElement\n  private MobileTariffOld mobileTariffOld;\n\n  @XmlElement\n  private MobileTariffNew mobileTariffNew;\n\n  public MobileTariffOld getMobileTariffOld() {\n    if (mobileTariffOld == null) {\n      mobileTariffOld = new MobileTariffOld();\n    }\n    return mobileTariffOld;\n  }\n\n  public void setMobileTariffOld(MobileTariffOld mobileTariffOld) {\n    this.mobileTariffOld = mobileTariffOld;\n  }\n\n  public MobileTariffNew getMobileTariffNew() {\n    if (mobileTariffNew == null) {\n      mobileTariffNew = new MobileTariffNew();\n    }\n    return mobileTariffNew;\n  }\n\n  public void setMobileTariffNew(MobileTariffNew mobileTariffNew) {\n    this.mobileTariffNew = mobileTariffNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"MobileTariff [mobileTariffOld=\" + mobileTariffOld + \", mobileTariffNew=\" + mobileTariffNew + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariffNew.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariffNew.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6564,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MobileTariffNew extends MobileTariffBase {\n  private static final long serialVersionUID = 1L;\n\n  private String tariffValue;\n  private BigDecimal tariffPrice;\n\n  private String featureNutzenBoxValue;\n\n  private String tariffOptionValue;\n  private BigDecimal tariffOptionPrice;\n\n  private boolean internetProtection; // Internetschutz\n  private BigDecimal internetProtectionPrice;\n\n  private boolean cyberProtection; // Cyberschutz\n  private BigDecimal cyberProtectionPrice;\n\n  private boolean a1Mastercard; // A1 Mastercard;\n  private BigDecimal a1MastercardPrice;\n\n  private boolean a1XploreTvStreaming; // A1 Xplore TV Streaming\n  private BigDecimal a1XploreTvStreamingPrice;\n\n  private boolean a1XploreMusic; // A1 Xplore Music\n  private BigDecimal a1XploreMusicPrice;\n\n  private boolean additionSim; // Zusatz SIM\n  private BigDecimal additionSimPrice;\n\n  private String optionValue;\n  private BigDecimal optionPrice;\n\n  private BigDecimal freeStreaming;\n  private BigDecimal connectPlusDiscount;\n  private BigDecimal connectPlusBonus;\n\n  public String getTariffValue() {\n    return tariffValue;\n  }\n\n  public void setTariffValue(String tariffValue) {\n    this.tariffValue = tariffValue;\n  }\n\n  public BigDecimal getTariffPrice() {\n    return tariffPrice;\n  }\n\n  public void setTariffPrice(BigDecimal tariffPrice) {\n    this.tariffPrice = tariffPrice;\n  }\n\n  public String getFeatureNutzenBoxValue() {\n    return featureNutzenBoxValue;\n  }\n\n  public void setFeatureNutzenBoxValue(String featureNutzenBoxValue) {\n    this.featureNutzenBoxValue = featureNutzenBoxValue;\n  }\n\n  public String getTariffOptionValue() {\n    return tariffOptionValue;\n  }\n\n  public void setTariffOptionValue(String tariffOptionValue) {\n    this.tariffOptionValue = tariffOptionValue;\n  }\n\n  public BigDecimal getTariffOptionPrice() {\n    return tariffOptionPrice;\n  }\n\n  public void setTariffOptionPrice(BigDecimal tariffOptionPrice) {\n    this.tariffOptionPrice = tariffOptionPrice;\n  }\n\n  public boolean isInternetProtection() {\n    return internetProtection;\n  }\n\n  public void setInternetProtection(boolean internetProtection) {\n    this.internetProtection = internetProtection;\n  }\n\n  public BigDecimal getInternetProtectionPrice() {\n    return internetProtectionPrice;\n  }\n\n  public void setInternetProtectionPrice(BigDecimal internetProtectionPrice) {\n    this.internetProtectionPrice = internetProtectionPrice;\n  }\n\n  public boolean isCyberProtection() {\n    return cyberProtection;\n  }\n\n  public void setCyberProtection(boolean cyberProtection) {\n    this.cyberProtection = cyberProtection;\n  }\n\n  public BigDecimal getCyberProtectionPrice() {\n    return cyberProtectionPrice;\n  }\n\n  public void setCyberProtectionPrice(BigDecimal cyberProtectionPrice) {\n    this.cyberProtectionPrice = cyberProtectionPrice;\n  }\n\n  public boolean isA1Mastercard() {\n    return a1Mastercard;\n  }\n\n  public void setA1Mastercard(boolean a1Mastercard) {\n    this.a1Mastercard = a1Mastercard;\n  }\n\n  public BigDecimal getA1MastercardPrice() {\n    return a1MastercardPrice;\n  }\n\n  public void setA1MastercardPrice(BigDecimal a1MastercardPrice) {\n    this.a1MastercardPrice = a1MastercardPrice;\n  }\n\n  public boolean isA1XploreTvStreaming() {\n    return a1XploreTvStreaming;\n  }\n\n  public void setA1XploreTvStreaming(boolean a1XploreTvStreaming) {\n    this.a1XploreTvStreaming = a1XploreTvStreaming;\n  }\n\n  public BigDecimal getA1XploreTvStreamingPrice() {\n    return a1XploreTvStreamingPrice;\n  }\n\n  public void setA1XploreTvStreamingPrice(BigDecimal a1XploreTvStreamingPrice) {\n    this.a1XploreTvStreamingPrice = a1XploreTvStreamingPrice;\n  }\n\n  public boolean isA1XploreMusic() {\n    return a1XploreMusic;\n  }\n\n  public void setA1XploreMusic(boolean a1XploreMusic) {\n    this.a1XploreMusic = a1XploreMusic;\n  }\n\n  public BigDecimal getA1XploreMusicPrice() {\n    return a1XploreMusicPrice;\n  }\n\n  public void setA1XploreMusicPrice(BigDecimal a1XploreMusicPrice) {\n    this.a1XploreMusicPrice = a1XploreMusicPrice;\n  }\n\n  public boolean isAdditionSim() {\n    return additionSim;\n  }\n\n  public void setAdditionSim(boolean additionSim) {\n    this.additionSim = additionSim;\n  }\n\n  public BigDecimal getAdditionSimPrice() {\n    return additionSimPrice;\n  }\n\n  public void setAdditionSimPrice(BigDecimal additionSimPrice) {\n    this.additionSimPrice = additionSimPrice;\n  }\n\n  public String getOptionValue() {\n    return optionValue;\n  }\n\n  public void setOptionValue(String optionValue) {\n    this.optionValue = optionValue;\n  }\n\n  public BigDecimal getOptionPrice() {\n    return optionPrice;\n  }\n\n  public void setOptionPrice(BigDecimal optionPrice) {\n    this.optionPrice = optionPrice;\n  }\n\n  public BigDecimal getFreeStreaming() {\n    return freeStreaming;\n  }\n\n  public void setFreeStreaming(BigDecimal freeStreaming) {\n    this.freeStreaming = freeStreaming;\n  }\n\n  public BigDecimal getConnectPlusDiscount() {\n    return connectPlusDiscount;\n  }\n\n  public void setConnectPlusDiscount(BigDecimal connectPlusDiscount) {\n    this.connectPlusDiscount = connectPlusDiscount;\n  }\n\n  public BigDecimal getConnectPlusBonus() {\n    return connectPlusBonus;\n  }\n\n  public void setConnectPlusBonus(BigDecimal connectPlusBonus) {\n    this.connectPlusBonus = connectPlusBonus;\n  }\n\n  @Override\n  public String toString() {\n    return \"MobileTariffNew [tariffValue=\" + tariffValue + \", tariffPrice=\" + tariffPrice + \", featureNutzenBoxValue=\" + featureNutzenBoxValue + \", tariffOptionValue=\" + tariffOptionValue\n        + \", tariffOptionPrice=\" + tariffOptionPrice + \", internetProtection=\" + internetProtection + \", internetProtectionPrice=\" + internetProtectionPrice + \", cyberProtection=\" + cyberProtection\n        + \", cyberProtectionPrice=\" + cyberProtectionPrice + \", a1Mastercard=\" + a1Mastercard + \", a1MastercardPrice=\" + a1MastercardPrice + \", a1XploreTvStreaming=\" + a1XploreTvStreaming\n        + \", a1XploreTvStreamingPrice=\" + a1XploreTvStreamingPrice + \", a1XploreMusic=\" + a1XploreMusic + \", a1XploreMusicPrice=\" + a1XploreMusicPrice + \", additionSim=\" + additionSim\n        + \", additionSimPrice=\" + additionSimPrice + \", optionValue=\" + optionValue + \", optionPrice=\" + optionPrice + \", freeStreaming=\" + freeStreaming + \", connectPlusDiscount=\"\n        + connectPlusDiscount + \", connectPlusBonus=\" + connectPlusBonus + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/ServicesOld.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/ServicesOld.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1375,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class ServicesOld extends ServicesBase {\n  private String protectDataText;\n  private String initialSetupText;\n  private String basicEquipment;\n  private String protectMobileText;\n\n  public String getProtectDataText() {\n    return protectDataText;\n  }\n\n  public void setProtectDataText(String protectDataText) {\n    this.protectDataText = protectDataText;\n  }\n\n  public String getInitialSetupText() {\n    return initialSetupText;\n  }\n\n  public void setInitialSetupText(String initialSetupText) {\n    this.initialSetupText = initialSetupText;\n  }\n\n  public String getBasicEquipment() {\n    return basicEquipment;\n  }\n\n  public void setBasicEquipment(String basicEquipment) {\n    this.basicEquipment = basicEquipment;\n  }\n\n  public String getProtectMobileText() {\n    return protectMobileText;\n  }\n\n  public void setProtectMobileText(String protectMobileText) {\n    this.protectMobileText = protectMobileText;\n  }\n\n  @Override\n  public String toString() {\n    return \"ServicesOld [protectDataText=\" + protectDataText + \", initialSetupText=\" + initialSetupText + \", basicEquipment=\" + basicEquipment + \", protectMobileText=\" + protectMobileText + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SecurityBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SecurityBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1746,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class SecurityBase implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private boolean internetProtection;\n  private BigDecimal internetProtectionPrice;\n  private String internetProtectionText;\n\n  private String comment;\n\n  private BigDecimal sum;\n\n  public boolean isInternetProtection() {\n    return internetProtection;\n  }\n\n  public void setInternetProtection(boolean internetProtection) {\n    this.internetProtection = internetProtection;\n  }\n\n  public BigDecimal getInternetProtectionPrice() {\n    return internetProtectionPrice;\n  }\n\n  public void setInternetProtectionPrice(BigDecimal internetProtectionPrice) {\n    this.internetProtectionPrice = internetProtectionPrice;\n  }\n\n  public String getInternetProtectionText() {\n    return internetProtectionText;\n  }\n\n  public void setInternetProtectionText(String internetProtectionText) {\n    this.internetProtectionText = internetProtectionText;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"SecurityBase [internetProtection=\" + internetProtection + \", internetProtectionPrice=\" + internetProtectionPrice + \", internetProtectionText=\" + internetProtectionText + \", comment=\"\n        + comment + \", sum=\" + sum + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariffBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariffBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2555,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MobileTariffBase implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private String minutesValue; // Minuten\n  private String smsMmsValue; // SMS/MMS\n  private String dataVolumeValue; // Datenvolumen\n  private String internetSpeedValue; // Internetspeed\n  private String roamingOutsideEUValue; // Roaming au\u00dfer EU\n  private String foreignCountryMinutesValue; // Auslandsminuten\n\n  private String comment;\n\n  private BigDecimal sum;\n\n  public String getMinutesValue() {\n    return minutesValue;\n  }\n\n  public void setMinutesValue(String minutesValue) {\n    this.minutesValue = minutesValue;\n  }\n\n  public String getSmsMmsValue() {\n    return smsMmsValue;\n  }\n\n  public void setSmsMmsValue(String smsMmsValue) {\n    this.smsMmsValue = smsMmsValue;\n  }\n\n  public String getDataVolumeValue() {\n    return dataVolumeValue;\n  }\n\n  public void setDataVolumeValue(String dataVolumeValue) {\n    this.dataVolumeValue = dataVolumeValue;\n  }\n\n  public String getInternetSpeedValue() {\n    return internetSpeedValue;\n  }\n\n  public void setInternetSpeedValue(String internetSpeedValue) {\n    this.internetSpeedValue = internetSpeedValue;\n  }\n\n  public String getRoamingOutsideEUValue() {\n    return roamingOutsideEUValue;\n  }\n\n  public void setRoamingOutsideEUValue(String roamingOutsideEUValue) {\n    this.roamingOutsideEUValue = roamingOutsideEUValue;\n  }\n\n  public String getForeignCountryMinutesValue() {\n    return foreignCountryMinutesValue;\n  }\n\n  public void setForeignCountryMinutesValue(String foreignCountryMinutesValue) {\n    this.foreignCountryMinutesValue = foreignCountryMinutesValue;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"MobileTariffBase [minutesValue=\" + minutesValue + \", smsMmsValue=\" + smsMmsValue + \", dataVolumeValue=\" + dataVolumeValue + \", internetSpeedValue=\" + internetSpeedValue\n        + \", roamingOutsideEUValue=\" + roamingOutsideEUValue + \", foreignCountryMinutesValue=\" + foreignCountryMinutesValue + \", comment=\" + comment + \", sum=\" + sum + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedOld.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedOld.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2921,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class InternetSpeedOld extends InternetSpeedBase {\n  private boolean virusProtection; // Virenschutz\n  private BigDecimal virusProtectionPrice;\n\n  private boolean mobilityFeature; // Mobilitaetsfunktion\n  private BigDecimal mobilityFeaturePrice;\n\n  private boolean cyberProtection; // Cyberschutz\n  private BigDecimal cyberProtectionPrice;\n\n  private boolean homeNetwork;\n  private String homeNetworkValue;\n  private boolean verbundPowerOffer;\n\n  public boolean isVirusProtection() {\n    return virusProtection;\n  }\n\n  public void setVirusProtection(boolean virusProtection) {\n    this.virusProtection = virusProtection;\n  }\n\n  public BigDecimal getVirusProtectionPrice() {\n    return virusProtectionPrice;\n  }\n\n  public void setVirusProtectionPrice(BigDecimal virusProtectionPrice) {\n    this.virusProtectionPrice = virusProtectionPrice;\n  }\n\n  public boolean isMobilityFeature() {\n    return mobilityFeature;\n  }\n\n  public void setMobilityFeature(boolean mobilityFeature) {\n    this.mobilityFeature = mobilityFeature;\n  }\n\n  public BigDecimal getMobilityFeaturePrice() {\n    return mobilityFeaturePrice;\n  }\n\n  public void setMobilityFeaturePrice(BigDecimal mobilityFeaturePrice) {\n    this.mobilityFeaturePrice = mobilityFeaturePrice;\n  }\n\n  public boolean isCyberProtection() {\n    return cyberProtection;\n  }\n\n  public void setCyberProtection(boolean cyberProtection) {\n    this.cyberProtection = cyberProtection;\n  }\n\n  public BigDecimal getCyberProtectionPrice() {\n    return cyberProtectionPrice;\n  }\n\n  public void setCyberProtectionPrice(BigDecimal cyberProtectionPrice) {\n    this.cyberProtectionPrice = cyberProtectionPrice;\n  }\n\n  public boolean isHomeNetwork() {\n    return homeNetwork;\n  }\n\n  public void setHomeNetwork(boolean homeNetwork) {\n    this.homeNetwork = homeNetwork;\n  }\n\n  public String getHomeNetworkValue() {\n    return homeNetworkValue;\n  }\n\n  public void setHomeNetworkValue(String homeNetworkValue) {\n    this.homeNetworkValue = homeNetworkValue;\n  }\n\n  public boolean isVerbundPowerOffer() {\n    return verbundPowerOffer;\n  }\n\n  public void setVerbundPowerOffer(boolean verbundPowerOffer) {\n    this.verbundPowerOffer = verbundPowerOffer;\n  }\n\n  @Override\n  public String toString() {\n    return \"InternetSpeedOld [virusProtection=\" + virusProtection + \", virusProtectionPrice=\" + virusProtectionPrice + \", mobilityFeature=\" + mobilityFeature + \", mobilityFeaturePrice=\"\n        + mobilityFeaturePrice + \", cyberProtection=\" + cyberProtection + \", cyberProtectionPrice=\" + cyberProtectionPrice + \", homeNetwork=\" + homeNetwork + \", homeNetworkValue=\" + homeNetworkValue\n        + \", verbundPowerOffer=\" + verbundPowerOffer + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Payment.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Payment.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1088,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class Payment implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @XmlElement\n  private PaymentOld paymentOld;\n\n  @XmlElement\n  private PaymentNew paymentnNew;\n\n  public PaymentOld getPaymentOld() {\n    if (paymentOld == null) {\n      paymentOld = new PaymentOld();\n    }\n    return paymentOld;\n  }\n\n  public void setPaymentOld(PaymentOld paymentOld) {\n    this.paymentOld = paymentOld;\n  }\n\n  public PaymentNew getPaymentNew() {\n    if (paymentnNew == null) {\n      paymentnNew = new PaymentNew();\n    }\n    return paymentnNew;\n  }\n\n  public void setPaymentnNew(PaymentNew paymentnNew) {\n    this.paymentnNew = paymentnNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"Payment [paymentOld=\" + paymentOld + \", paymentnNew=\" + paymentnNew + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SecurityNew.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SecurityNew.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2634,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class SecurityNew extends SecurityBase {\n  private boolean a1CyberProtectionSingle;\n  private BigDecimal a1CyberProtectionSinglePrice;\n  private boolean a1CyberProtectionFamily;\n  private BigDecimal a1CyberProtectionFamilyPrice;\n  private String a1CyberProtectionText;\n\n  private boolean a1Mastercard;\n  private BigDecimal a1MastercardPrice;\n\n  public boolean isA1CyberProtectionSingle() {\n    return a1CyberProtectionSingle;\n  }\n\n  public void setA1CyberProtectionSingle(boolean a1CyberProtectionSingle) {\n    this.a1CyberProtectionSingle = a1CyberProtectionSingle;\n  }\n\n  public BigDecimal getA1CyberProtectionSinglePrice() {\n    return a1CyberProtectionSinglePrice;\n  }\n\n  public void setA1CyberProtectionSinglePrice(BigDecimal a1CyberProtectionSinglePrice) {\n    this.a1CyberProtectionSinglePrice = a1CyberProtectionSinglePrice;\n  }\n\n  public boolean isA1CyberProtectionFamily() {\n    return a1CyberProtectionFamily;\n  }\n\n  public void setA1CyberProtectionFamily(boolean a1CyberProtectionFamily) {\n    this.a1CyberProtectionFamily = a1CyberProtectionFamily;\n  }\n\n  public BigDecimal getA1CyberProtectionFamilyPrice() {\n    return a1CyberProtectionFamilyPrice;\n  }\n\n  public void setA1CyberProtectionFamilyPrice(BigDecimal a1CyberProtectionFamilyPrice) {\n    this.a1CyberProtectionFamilyPrice = a1CyberProtectionFamilyPrice;\n  }\n\n  public String getA1CyberProtectionText() {\n    return a1CyberProtectionText;\n  }\n\n  public void setA1CyberProtectionText(String a1CyberProtectionText) {\n    this.a1CyberProtectionText = a1CyberProtectionText;\n  }\n\n  public boolean isA1Mastercard() {\n    return a1Mastercard;\n  }\n\n  public void setA1Mastercard(boolean a1Mastercard) {\n    this.a1Mastercard = a1Mastercard;\n  }\n\n  public BigDecimal getA1MastercardPrice() {\n    return a1MastercardPrice;\n  }\n\n  public void setA1MastercardPrice(BigDecimal a1MastercardPrice) {\n    this.a1MastercardPrice = a1MastercardPrice;\n  }\n\n  @Override\n  public String toString() {\n    return \"SecurityNew [a1CyberProtectionSingle=\" + a1CyberProtectionSingle + \", a1CyberProtectionSinglePrice=\" + a1CyberProtectionSinglePrice + \", a1CyberProtectionFamily=\" + a1CyberProtectionFamily\n        + \", a1CyberProtectionFamilyPrice=\" + a1CyberProtectionFamilyPrice + \", a1CyberProtectionText=\" + a1CyberProtectionText + \", a1Mastercard=\" + a1Mastercard + \", a1MastercardPrice=\"\n        + a1MastercardPrice + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SmartHomeOld.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SmartHomeOld.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2414,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class SmartHomeOld extends SmartHomeBase {\n  private boolean smartSolution;\n  private BigDecimal smartSolutionPrice;\n  private String smartSolutionText;\n\n  private boolean alarmSystem;\n  private BigDecimal alarmSystemPrice;\n  private String alarmSystemText;\n\n  private String smartProductText;\n  private boolean googleNest;\n\n  public boolean isSmartSolution() {\n    return smartSolution;\n  }\n\n  public void setSmartSolution(boolean smartSolution) {\n    this.smartSolution = smartSolution;\n  }\n\n  public BigDecimal getSmartSolutionPrice() {\n    return smartSolutionPrice;\n  }\n\n  public void setSmartSolutionPrice(BigDecimal smartSolutionPrice) {\n    this.smartSolutionPrice = smartSolutionPrice;\n  }\n\n  public String getSmartSolutionText() {\n    return smartSolutionText;\n  }\n\n  public void setSmartSolutionText(String smartSolutionText) {\n    this.smartSolutionText = smartSolutionText;\n  }\n\n  public boolean isAlarmSystem() {\n    return alarmSystem;\n  }\n\n  public void setAlarmSystem(boolean alarmSystem) {\n    this.alarmSystem = alarmSystem;\n  }\n\n  public BigDecimal getAlarmSystemPrice() {\n    return alarmSystemPrice;\n  }\n\n  public void setAlarmSystemPrice(BigDecimal alarmSystemPrice) {\n    this.alarmSystemPrice = alarmSystemPrice;\n  }\n\n  public String getAlarmSystemText() {\n    return alarmSystemText;\n  }\n\n  public void setAlarmSystemText(String alarmSystemText) {\n    this.alarmSystemText = alarmSystemText;\n  }\n\n  public String getSmartProductText() {\n    return smartProductText;\n  }\n\n  public void setSmartProductText(String smartProductText) {\n    this.smartProductText = smartProductText;\n  }\n\n  public boolean isGoogleNest() {\n    return googleNest;\n  }\n\n  public void setGoogleNest(boolean googleNest) {\n    this.googleNest = googleNest;\n  }\n\n  @Override\n  public String toString() {\n    return \"SmartHomeOld [smartSolution=\" + smartSolution + \", smartSolutionPrice=\" + smartSolutionPrice + \", smartSolutionText=\" + smartSolutionText + \", alarmSystem=\" + alarmSystem\n        + \", alarmSystemPrice=\" + alarmSystemPrice + \", alarmSystemText=\" + alarmSystemText + \", smartProductText=\" + smartProductText + \", googleNest=\" + googleNest + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhoneBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhoneBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3082,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MobilePhoneBase implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private String mobilePhoneName;\n  private MobilePhoneMainUseType mainUseType; // Hauptnutzung\n\n  // Weitere Nutzung\n  private boolean communication;\n  private boolean socialMedia;\n  private boolean photoVideo;\n  private boolean streaming;\n  private boolean gaming;\n  private boolean navigation;\n  private boolean shopping;\n\n  private String mainUseComment;\n  private String comment;\n\n  private BigDecimal sum;\n\n  public String getMobilePhoneName() {\n    return mobilePhoneName;\n  }\n\n  public void setMobilePhoneName(String mobilePhoneName) {\n    this.mobilePhoneName = mobilePhoneName;\n  }\n\n  public MobilePhoneMainUseType getMainUseType() {\n    return mainUseType;\n  }\n\n  public void setMainUseType(MobilePhoneMainUseType mainUseType) {\n    this.mainUseType = mainUseType;\n  }\n\n  public boolean isCommunication() {\n    return communication;\n  }\n\n  public void setCommunication(boolean communication) {\n    this.communication = communication;\n  }\n\n  public boolean isSocialMedia() {\n    return socialMedia;\n  }\n\n  public void setSocialMedia(boolean socialMedia) {\n    this.socialMedia = socialMedia;\n  }\n\n  public boolean isPhotoVideo() {\n    return photoVideo;\n  }\n\n  public void setPhotoVideo(boolean photoVideo) {\n    this.photoVideo = photoVideo;\n  }\n\n  public boolean isStreaming() {\n    return streaming;\n  }\n\n  public void setStreaming(boolean streaming) {\n    this.streaming = streaming;\n  }\n\n  public boolean isGaming() {\n    return gaming;\n  }\n\n  public void setGaming(boolean gaming) {\n    this.gaming = gaming;\n  }\n\n  public boolean isNavigation() {\n    return navigation;\n  }\n\n  public void setNavigation(boolean navigation) {\n    this.navigation = navigation;\n  }\n\n  public boolean isShopping() {\n    return shopping;\n  }\n\n  public void setShopping(boolean shopping) {\n    this.shopping = shopping;\n  }\n\n  public String getMainUseComment() {\n    return mainUseComment;\n  }\n\n  public void setMainUseComment(String mainUseComment) {\n    this.mainUseComment = mainUseComment;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"MobilePhoneBase [mobilePhoneName=\" + mobilePhoneName + \", mainUseType=\" + mainUseType + \", communication=\" + communication + \", socialMedia=\" + socialMedia + \", photoVideo=\" + photoVideo\n        + \", streaming=\" + streaming + \", gaming=\" + gaming + \", navigation=\" + navigation + \", shopping=\" + shopping + \", mainUseComment=\" + mainUseComment + \", comment=\" + comment + \", sum=\" + sum\n        + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedMainUseType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedMainUseType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 184,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum InternetSpeedMainUseType {\n  STREAMING, //\n  SURF, //\n  SOCIAL_MEDIA, //\n  MAIL, //\n  GAMING\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Household.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Household.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2183,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class Household implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private HouseholdType type; // Typ des Haushalts\n  private Integer size; // Gr\u00f6\u00dfe\n  private Integer floor; // Stockwerke\n  private Integer persons; // Personen im haushalt\n  private Integer devices; // Anzahl der Ger\u00e4te\n  private String mail; // Mailadresse\n  private String phone; // R\u00fcckrufnummer\n  private String noteText; // Freitextfeld\n\n  public HouseholdType getType() {\n    return type;\n  }\n\n  public void setType(HouseholdType type) {\n    this.type = type;\n  }\n\n  public Integer getSize() {\n    return size;\n  }\n\n  public void setSize(Integer size) {\n    this.size = size;\n  }\n\n  public Integer getFloor() {\n    return floor;\n  }\n\n  public void setFloor(Integer floor) {\n    this.floor = floor;\n  }\n\n  public Integer getPersons() {\n    return persons;\n  }\n\n  public void setPersons(Integer persons) {\n    this.persons = persons;\n  }\n\n  public Integer getDevices() {\n    return devices;\n  }\n\n  public void setDevices(Integer devices) {\n    this.devices = devices;\n  }\n\n  public String getMail() {\n    return mail;\n  }\n\n  public void setMail(String mail) {\n    this.mail = mail;\n  }\n\n  public String getPhone() {\n    return phone;\n  }\n\n  public void setPhone(String phone) {\n    this.phone = phone;\n  }\n\n  public String getNoteText() {\n    return noteText;\n  }\n\n  public void setNoteText(String noteText) {\n    this.noteText = noteText;\n  }\n\n  @Override\n  public String toString() {\n    return \"Household [type=\" + type + \", size=\" + size + \", floor=\" + floor + \", persons=\" + persons + \", devices=\" + devices + \", mail=\" + mail + \", phone=\" + phone + \", noteText=\" + noteText + \"]\";\n  }\n\n  @Override\n  public int hashCode() {\n    // TODO Auto-generated method stub\n    return super.hashCode();\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    // TODO Auto-generated method stub\n    return super.equals(obj);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TV.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TV.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 918,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class TV implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @XmlElement\n  private TVOld tvOld;\n\n  @XmlElement\n  private TVNew tvNew;\n\n  public TVOld getTvOld() {\n    if (tvOld == null) {\n      tvOld = new TVOld();\n    }\n    return tvOld;\n  }\n\n  public void setTvOld(TVOld tvOld) {\n    this.tvOld = tvOld;\n  }\n\n  public TVNew getTvNew() {\n    if (tvNew == null) {\n      tvNew = new TVNew();\n    }\n    return tvNew;\n  }\n\n  public void setTvNew(TVNew tvNew) {\n    this.tvNew = tvNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"TV [tvOld=\" + tvOld + \", tvNew=\" + tvNew + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MusicSpeakerType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MusicSpeakerType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 148,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum MusicSpeakerType {\n  ON_EAR, //\n  IN_EAR, //\n  SPEAKER //\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/ServicesNew.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/ServicesNew.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4926,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class ServicesNew extends ServicesBase {\n  private boolean a1InitialSetup; // A1 Statklarservice\n  private BigDecimal a1InitialSetupPrice;\n\n  private boolean a1GuruService;\n  private BigDecimal a1GuruServicePrice;\n  private String a1GuruServiceText;\n\n  private boolean mobileBasicEquipment; // Handy-Grundausstattung\n  private BigDecimal mobileBasicEquipmentPrice;\n  private String mobileBasicEquipmentText;\n\n  private boolean additionalAccessory; // Weiteres Zubehoer\n  private BigDecimal additionalAccessoryPrice;\n  private String additionalAccessoryText;\n\n  private BigDecimal usedGadgetPrice;\n\n  private String recommendedPromotionalProduct; // Empfohlene Aktionsprodukte aufgrund Nutzung\n  private BigDecimal recommendedPromotionalProductPrice;\n\n  public boolean isA1InitialSetup() {\n    return a1InitialSetup;\n  }\n\n  public void setA1InitialSetup(boolean a1InitialSetup) {\n    this.a1InitialSetup = a1InitialSetup;\n  }\n\n  public BigDecimal getA1InitialSetupPrice() {\n    return a1InitialSetupPrice;\n  }\n\n  public void setA1InitialSetupPrice(BigDecimal a1InitialSetupPrice) {\n    this.a1InitialSetupPrice = a1InitialSetupPrice;\n  }\n\n  public boolean isA1GuruService() {\n    return a1GuruService;\n  }\n\n  public void setA1GuruService(boolean a1GuruService) {\n    this.a1GuruService = a1GuruService;\n  }\n\n  public BigDecimal getA1GuruServicePrice() {\n    return a1GuruServicePrice;\n  }\n\n  public void setA1GuruServicePrice(BigDecimal a1GuruServicePrice) {\n    this.a1GuruServicePrice = a1GuruServicePrice;\n  }\n\n  public String getA1GuruServiceText() {\n    return a1GuruServiceText;\n  }\n\n  public void setA1GuruServiceText(String a1GuruServiceText) {\n    this.a1GuruServiceText = a1GuruServiceText;\n  }\n\n  public boolean isMobileBasicEquipment() {\n    return mobileBasicEquipment;\n  }\n\n  public void setMobileBasicEquipment(boolean mobileBasicEquipment) {\n    this.mobileBasicEquipment = mobileBasicEquipment;\n  }\n\n  public BigDecimal getMobileBasicEquipmentPrice() {\n    return mobileBasicEquipmentPrice;\n  }\n\n  public void setMobileBasicEquipmentPrice(BigDecimal mobileBasicEquipmentPrice) {\n    this.mobileBasicEquipmentPrice = mobileBasicEquipmentPrice;\n  }\n\n  public String getMobileBasicEquipmentText() {\n    return mobileBasicEquipmentText;\n  }\n\n  public void setMobileBasicEquipmentText(String mobileBasicEquipmentText) {\n    this.mobileBasicEquipmentText = mobileBasicEquipmentText;\n  }\n\n  public boolean isAdditionalAccessory() {\n    return additionalAccessory;\n  }\n\n  public void setAdditionalAccessory(boolean additionalAccessory) {\n    this.additionalAccessory = additionalAccessory;\n  }\n\n  public BigDecimal getAdditionalAccessoryPrice() {\n    return additionalAccessoryPrice;\n  }\n\n  public void setAdditionalAccessoryPrice(BigDecimal additionalAccessoryPrice) {\n    this.additionalAccessoryPrice = additionalAccessoryPrice;\n  }\n\n  public String getAdditionalAccessoryText() {\n    return additionalAccessoryText;\n  }\n\n  public void setAdditionalAccessoryText(String additionalAccessoryText) {\n    this.additionalAccessoryText = additionalAccessoryText;\n  }\n\n  public BigDecimal getUsedGadgetPrice() {\n    return usedGadgetPrice;\n  }\n\n  public void setUsedGadgetPrice(BigDecimal usedGadgetPrice) {\n    this.usedGadgetPrice = usedGadgetPrice;\n  }\n\n  public String getRecommendedPromotionalProduct() {\n    return recommendedPromotionalProduct;\n  }\n\n  public void setRecommendedPromotionalProduct(String recommendedPromotionalProduct) {\n    this.recommendedPromotionalProduct = recommendedPromotionalProduct;\n  }\n\n  public BigDecimal getRecommendedPromotionalProductPrice() {\n    return recommendedPromotionalProductPrice;\n  }\n\n  public void setRecommendedPromotionalProductPrice(BigDecimal recommendedPromotionalProductPrice) {\n    this.recommendedPromotionalProductPrice = recommendedPromotionalProductPrice;\n  }\n\n  @Override\n  public String toString() {\n    return \"ServicesNew [a1InitialSetup=\" + a1InitialSetup + \", a1InitialSetupPrice=\" + a1InitialSetupPrice + \", a1GuruService=\" + a1GuruService + \", a1GuruServicePrice=\" + a1GuruServicePrice\n        + \", a1GuruServiceText=\" + a1GuruServiceText + \", mobileBasicEquipment=\" + mobileBasicEquipment + \", mobileBasicEquipmentPrice=\" + mobileBasicEquipmentPrice + \", mobileBasicEquipmentText=\"\n        + mobileBasicEquipmentText + \", additionalAccessory=\" + additionalAccessory + \", additionalAccessoryPrice=\" + additionalAccessoryPrice + \", additionalAccessoryText=\" + additionalAccessoryText\n        + \", usedGadgetPrice=\" + usedGadgetPrice + \", recommendedPromotionalProduct=\" + recommendedPromotionalProduct + \", recommendedPromotionalProductPrice=\" + recommendedPromotionalProductPrice\n        + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariffOld.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariffOld.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6815,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MobileTariffOld extends MobileTariffBase {\n  private static final long serialVersionUID = 1L;\n\n  private String tariffValue;\n  private BigDecimal tariffPrice;\n\n  private MobileTariffMainUseType mainUseType;\n  private String mainUseTypeComment;\n\n  // Weitere Nutzung\n  private boolean communication;\n  private boolean socialMedia;\n  private boolean photoVideo;\n  private boolean streaming;\n  private boolean gaming;\n  private boolean navigation;\n  private boolean shopping;\n\n  private boolean internetProtection; // Internetschutz\n  private BigDecimal internetProtectionPrice;\n\n  private boolean cyberProtection; // Cyberschutz\n  private BigDecimal cyberProtectionPrice;\n\n  private boolean creditCard; // Kreditkarte;\n  private BigDecimal creditCardPrice;\n\n  private boolean videoStreaming; // Videostreaming\n  private BigDecimal videoStreamingPrice;\n\n  private boolean musicStreaming; // Musikstreaming\n  private BigDecimal musicStreamingPrice;\n\n  private boolean additionalSim; // Zusatz SIM\n  private BigDecimal additionalSimPrice;\n\n  private String optionValue;\n  private BigDecimal optionPrice;\n\n  public String getTariffValue() {\n    return tariffValue;\n  }\n\n  public void setTariffValue(String tariffValue) {\n    this.tariffValue = tariffValue;\n  }\n\n  public BigDecimal getTariffPrice() {\n    return tariffPrice;\n  }\n\n  public void setTariffPrice(BigDecimal tariffPrice) {\n    this.tariffPrice = tariffPrice;\n  }\n\n  public MobileTariffMainUseType getMainUseType() {\n    return mainUseType;\n  }\n\n  public void setMainUseType(MobileTariffMainUseType mainUseType) {\n    this.mainUseType = mainUseType;\n  }\n\n  public String getMainUseTypeComment() {\n    return mainUseTypeComment;\n  }\n\n  public void setMainUseTypeComment(String mainUseTypeComment) {\n    this.mainUseTypeComment = mainUseTypeComment;\n  }\n\n  public boolean isCommunication() {\n    return communication;\n  }\n\n  public void setCommunication(boolean communication) {\n    this.communication = communication;\n  }\n\n  public boolean isSocialMedia() {\n    return socialMedia;\n  }\n\n  public void setSocialMedia(boolean socialMedia) {\n    this.socialMedia = socialMedia;\n  }\n\n  public boolean isPhotoVideo() {\n    return photoVideo;\n  }\n\n  public void setPhotoVideo(boolean photoVideo) {\n    this.photoVideo = photoVideo;\n  }\n\n  public boolean isStreaming() {\n    return streaming;\n  }\n\n  public void setStreaming(boolean streaming) {\n    this.streaming = streaming;\n  }\n\n  public boolean isGaming() {\n    return gaming;\n  }\n\n  public void setGaming(boolean gaming) {\n    this.gaming = gaming;\n  }\n\n  public boolean isNavigation() {\n    return navigation;\n  }\n\n  public void setNavigation(boolean navigation) {\n    this.navigation = navigation;\n  }\n\n  public boolean isShopping() {\n    return shopping;\n  }\n\n  public void setShopping(boolean shopping) {\n    this.shopping = shopping;\n  }\n\n  public boolean isInternetProtection() {\n    return internetProtection;\n  }\n\n  public void setInternetProtection(boolean internetProtection) {\n    this.internetProtection = internetProtection;\n  }\n\n  public BigDecimal getInternetProtectionPrice() {\n    return internetProtectionPrice;\n  }\n\n  public void setInternetProtectionPrice(BigDecimal internetProtectionPrice) {\n    this.internetProtectionPrice = internetProtectionPrice;\n  }\n\n  public boolean isCyberProtection() {\n    return cyberProtection;\n  }\n\n  public void setCyberProtection(boolean cyberProtection) {\n    this.cyberProtection = cyberProtection;\n  }\n\n  public BigDecimal getCyberProtectionPrice() {\n    return cyberProtectionPrice;\n  }\n\n  public void setCyberProtectionPrice(BigDecimal cyberProtectionPrice) {\n    this.cyberProtectionPrice = cyberProtectionPrice;\n  }\n\n  public boolean isCreditCard() {\n    return creditCard;\n  }\n\n  public void setCreditCard(boolean creditCard) {\n    this.creditCard = creditCard;\n  }\n\n  public BigDecimal getCreditCardPrice() {\n    return creditCardPrice;\n  }\n\n  public void setCreditCardPrice(BigDecimal creditCardPrice) {\n    this.creditCardPrice = creditCardPrice;\n  }\n\n  public boolean isVideoStreaming() {\n    return videoStreaming;\n  }\n\n  public void setVideoStreaming(boolean videoStreaming) {\n    this.videoStreaming = videoStreaming;\n  }\n\n  public BigDecimal getVideoStreamingPrice() {\n    return videoStreamingPrice;\n  }\n\n  public void setVideoStreamingPrice(BigDecimal videoStreamingPrice) {\n    this.videoStreamingPrice = videoStreamingPrice;\n  }\n\n  public boolean isMusicStreaming() {\n    return musicStreaming;\n  }\n\n  public void setMusicStreaming(boolean musicStreaming) {\n    this.musicStreaming = musicStreaming;\n  }\n\n  public BigDecimal getMusicStreamingPrice() {\n    return musicStreamingPrice;\n  }\n\n  public void setMusicStreamingPrice(BigDecimal musicStreamingPrice) {\n    this.musicStreamingPrice = musicStreamingPrice;\n  }\n\n  public boolean isAdditionalSim() {\n    return additionalSim;\n  }\n\n  public void setAdditionalSim(boolean additionalSim) {\n    this.additionalSim = additionalSim;\n  }\n\n  public BigDecimal getAdditionalSimPrice() {\n    return additionalSimPrice;\n  }\n\n  public void setAdditionalSimPrice(BigDecimal additionalSimPrice) {\n    this.additionalSimPrice = additionalSimPrice;\n  }\n\n  public String getOptionValue() {\n    return optionValue;\n  }\n\n  public void setOptionValue(String optionValue) {\n    this.optionValue = optionValue;\n  }\n\n  public BigDecimal getOptionPrice() {\n    return optionPrice;\n  }\n\n  public void setOptionPrice(BigDecimal optionPrice) {\n    this.optionPrice = optionPrice;\n  }\n\n  @Override\n  public String toString() {\n    return \"MobileTariffOld [tariffValue=\" + tariffValue + \", tariffPrice=\" + tariffPrice + \", mainUseType=\" + mainUseType + \", mainUseTypeComment=\" + mainUseTypeComment + \", communication=\"\n        + communication + \", socialMedia=\" + socialMedia + \", photoVideo=\" + photoVideo + \", streaming=\" + streaming + \", gaming=\" + gaming + \", navigation=\" + navigation + \", shopping=\" + shopping\n        + \", internetProtection=\" + internetProtection + \", internetProtectionPrice=\" + internetProtectionPrice + \", cyberProtection=\" + cyberProtection + \", cyberProtectionPrice=\"\n        + cyberProtectionPrice + \", creditCard=\" + creditCard + \", creditCardPrice=\" + creditCardPrice + \", videoStreaming=\" + videoStreaming + \", videoStreamingPrice=\" + videoStreamingPrice\n        + \", musicStreaming=\" + musicStreaming + \", musicStreamingPrice=\" + musicStreamingPrice + \", additionalSim=\" + additionalSim + \", additionalSimPrice=\" + additionalSimPrice + \", optionValue=\"\n        + optionValue + \", optionPrice=\" + optionPrice + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SummaryItem.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SummaryItem.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1188,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class SummaryItem implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private String name;\n  private BigDecimal sumOld;\n  private BigDecimal sumNew;\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public BigDecimal getSumOld() {\n    return sumOld;\n  }\n\n  public void setSumOld(BigDecimal sumOld) {\n    this.sumOld = sumOld;\n  }\n\n  public BigDecimal getSumNew() {\n    return sumNew;\n  }\n\n  public void setSumNew(BigDecimal sumNew) {\n    this.sumNew = sumNew;\n  }\n\n  public SummaryItem() {\n    super();\n  }\n\n  public SummaryItem(String name, BigDecimal sumOld, BigDecimal sumNew) {\n    super();\n    this.name = name;\n    this.sumOld = sumOld;\n    this.sumNew = sumNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"SummaryItem [name=\" + name + \", sumOld=\" + sumOld + \", sumNew=\" + sumNew + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhoneMainUseType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhoneMainUseType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 233,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum MobilePhoneMainUseType {\n  COMMUNICATION, //\n  SOCIAL_MEDIA, //\n  PHOTO_VIDEO, //\n  STREAMING, //\n  GAMING, //\n  NAVIGATION, //\n  SHOPPIMG //\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 158,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum InternetSpeedType {\n  MBIT_20, MBIT_40, MBIT_80, MBIT_150, MBIT_300\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeed.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeed.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1270,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class InternetSpeed implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @XmlElement\n  private InternetSpeedOld internetSpeedOld;\n\n  @XmlElement\n  private InternetSpeedNew internetSpeedNew;\n\n  public InternetSpeedOld getInternetSpeedOld() {\n    if (internetSpeedOld == null) {\n      internetSpeedOld = new InternetSpeedOld();\n    }\n    return internetSpeedOld;\n  }\n\n  public void setInternetSpeedOld(InternetSpeedOld internetSpeedOld) {\n    this.internetSpeedOld = internetSpeedOld;\n  }\n\n  public InternetSpeedNew getInternetSpeedNew() {\n    if (internetSpeedNew == null) {\n      internetSpeedNew = new InternetSpeedNew();\n    }\n    return internetSpeedNew;\n  }\n\n  public void setInternetSpeedNew(InternetSpeedNew internetSpeedNew) {\n    this.internetSpeedNew = internetSpeedNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"InternetSpeed [internetSpeedOld=\" + internetSpeedOld + \", internetSpeedNew=\" + internetSpeedNew + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/DigitalSellingNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/DigitalSellingNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8891,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\nimport java.util.List;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.XmlTransient;\n\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\n\n@XmlRootElement\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class DigitalSellingNote extends SalesInfoNote {\n  private static final long serialVersionUID = 1L;\n\n  @XmlTransient\n  private DigitalSellingNote savedInstance;\n\n  @XmlTransient\n  private String content;\n\n  @XmlElement\n  private Household household;\n\n  @XmlElement\n  private InternetSpeed internetSpeed;\n\n  @XmlElement\n  private TV tv;\n\n  @XmlElement\n  private MobilePhone mobilePhone;\n\n  @XmlElement\n  private MobileTariff mobileTariff;\n\n  @XmlElement\n  private Music music;\n\n  @XmlElement\n  private Security security;\n\n  @XmlElement\n  private SmartHome smartHome;\n\n  @XmlElement\n  private Payment payment;\n\n  @XmlElement\n  private Services services;\n\n  @XmlTransient\n  private List<Attribute> attributes;\n\n  @XmlElement\n  private String comment;\n\n  @XmlElement\n  private BigDecimal sumOld;\n\n  @XmlElement\n  private BigDecimal sumNew;\n\n  public DigitalSellingNote() {\n    super();\n  }\n\n  public DigitalSellingNote(DigitalSellingNote note) {\n    super(note);\n    this.household = note.getHousehold();\n    this.internetSpeed = note.getInternetSpeed();\n    this.tv = note.getTv();\n    this.mobilePhone = note.getMobilePhone();\n    this.mobileTariff = note.getMobileTariff();\n    this.music = note.getMusic();\n    this.security = note.getSecurity();\n    this.smartHome = note.getSmartHome();\n    this.payment = note.getPayment();\n    this.services = note.getServices();\n    this.comment = note.getComment();\n    this.sumOld = note.getSumOld();\n    this.sumNew = note.getSumNew();\n  }\n\n  public Household getHousehold() {\n    if (household == null) {\n      household = new Household();\n    }\n    return household;\n  }\n\n  public void setHousehold(Household household) {\n    this.household = household;\n  }\n\n  public InternetSpeed getInternetSpeed() {\n    if (internetSpeed == null) {\n      internetSpeed = new InternetSpeed();\n    }\n    return internetSpeed;\n  }\n\n  public void setInternetSpeed(InternetSpeed internetSpeed) {\n    this.internetSpeed = internetSpeed;\n  }\n\n  public TV getTv() {\n    if (tv == null) {\n      tv = new TV();\n    }\n    return tv;\n  }\n\n  public void setTv(TV tv) {\n    this.tv = tv;\n  }\n\n  public MobilePhone getMobilePhone() {\n    if (mobilePhone == null) {\n      mobilePhone = new MobilePhone();\n    }\n    return mobilePhone;\n  }\n\n  public void setMobilePhone(MobilePhone mobilePhone) {\n    this.mobilePhone = mobilePhone;\n  }\n\n  public MobileTariff getMobileTariff() {\n    if (mobileTariff == null) {\n      mobileTariff = new MobileTariff();\n    }\n    return mobileTariff;\n  }\n\n  public void setMobileTariff(MobileTariff mobileTariff) {\n    this.mobileTariff = mobileTariff;\n  }\n\n  public Music getMusic() {\n    if (music == null) {\n      music = new Music();\n    }\n    return music;\n  }\n\n  public void setMusic(Music music) {\n    this.music = music;\n  }\n\n  public Security getSecurity() {\n    if (security == null) {\n      security = new Security();\n    }\n    return security;\n  }\n\n  public void setSecurity(Security security) {\n    this.security = security;\n  }\n\n  public SmartHome getSmartHome() {\n    if (smartHome == null) {\n      smartHome = new SmartHome();\n    }\n    return smartHome;\n  }\n\n  public void setSmartHome(SmartHome smartHome) {\n    this.smartHome = smartHome;\n  }\n\n  public Payment getPayment() {\n    if (payment == null) {\n      payment = new Payment();\n    }\n    return payment;\n  }\n\n  public void setPayment(Payment payment) {\n    this.payment = payment;\n  }\n\n  public Services getServices() {\n    if (services == null) {\n      services = new Services();\n    }\n    return services;\n  }\n\n  public void setServices(Services services) {\n    this.services = services;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSumOld() {\n    return sumOld;\n  }\n\n  public void setSumOld(BigDecimal sumOld) {\n    this.sumOld = sumOld;\n  }\n\n  public BigDecimal getSumNew() {\n    return sumNew;\n  }\n\n  public void setSumNew(BigDecimal sumNew) {\n    this.sumNew = sumNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"DigitalSellingNote [household=\" + household + \", internetSpeed=\" + internetSpeed + \", tv=\" + tv + \", mobilePhone=\" + mobilePhone + \", mobileTariff=\" + mobileTariff + \", music=\" + music\n        + \", security=\" + security + \", smartHome=\" + smartHome + \", payment=\" + payment + \", services=\" + services + \", attributes=\" + attributes + \", comment=\" + comment + \", sumOld=\" + sumOld\n        + \", sumNew=\" + sumNew + \"]\";\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((household == null) ? 0 : household.hashCode());\n    result = prime * result + ((internetSpeed == null) ? 0 : internetSpeed.hashCode());\n    result = prime * result + ((mobilePhone == null) ? 0 : mobilePhone.hashCode());\n    result = prime * result + ((mobileTariff == null) ? 0 : mobileTariff.hashCode());\n    result = prime * result + ((music == null) ? 0 : music.hashCode());\n    result = prime * result + ((payment == null) ? 0 : payment.hashCode());\n    result = prime * result + ((security == null) ? 0 : security.hashCode());\n    result = prime * result + ((services == null) ? 0 : services.hashCode());\n    result = prime * result + ((smartHome == null) ? 0 : smartHome.hashCode());\n    result = prime * result + ((tv == null) ? 0 : tv.hashCode());\n    result = prime * result + comment.hashCode();\n    result = prime * result + sumOld.hashCode();\n    result = prime * result + sumNew.hashCode();\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    DigitalSellingNote other = (DigitalSellingNote) obj;\n    if (household == null) {\n      if (other.household != null) {\n        return false;\n      }\n    } else if (!household.equals(other.household)) {\n      return false;\n    }\n    if (internetSpeed == null) {\n      if (other.internetSpeed != null) {\n        return false;\n      }\n    } else if (!internetSpeed.equals(other.internetSpeed)) {\n      return false;\n    }\n    if (mobilePhone == null) {\n      if (other.mobilePhone != null) {\n        return false;\n      }\n    } else if (!mobilePhone.equals(other.mobilePhone)) {\n      return false;\n    }\n    if (mobileTariff == null) {\n      if (other.mobileTariff != null) {\n        return false;\n      }\n    } else if (!mobileTariff.equals(other.mobileTariff)) {\n      return false;\n    }\n    if (music == null) {\n      if (other.music != null) {\n        return false;\n      }\n    } else if (!music.equals(other.music)) {\n      return false;\n    }\n    if (payment == null) {\n      if (other.payment != null) {\n        return false;\n      }\n    } else if (!payment.equals(other.payment)) {\n      return false;\n    }\n    if (security == null) {\n      if (other.security != null) {\n        return false;\n      }\n    } else if (!security.equals(other.security)) {\n      return false;\n    }\n    if (services == null) {\n      if (other.services != null) {\n        return false;\n      }\n    } else if (!services.equals(other.services)) {\n      return false;\n    }\n    if (smartHome == null) {\n      if (other.smartHome != null) {\n        return false;\n      }\n    } else if (!smartHome.equals(other.smartHome)) {\n      return false;\n    }\n    if (tv == null) {\n      if (other.tv != null) {\n        return false;\n      }\n    } else if (!tv.equals(other.tv)) {\n      return false;\n    }\n    if (!comment.equals(other.comment)) {\n      return false;\n    }\n    if (!sumOld.equals(other.sumOld)) {\n      return false;\n    }\n    if (!sumNew.equals(other.sumNew)) {\n      return false;\n    }\n    return true;\n  }\n\n  public DigitalSellingNote getSavedInstance() {\n    if (savedInstance == null) {\n      return new DigitalSellingNote(this);\n    }\n    return savedInstance;\n  }\n\n  public void setSavedInstance(DigitalSellingNote savedInstance) {\n    this.savedInstance = savedInstance;\n  }\n\n  public String getContent() {\n    return content;\n  }\n\n  public void setContent(String content) {\n    this.content = content;\n  }\n\n  public List<Attribute> getAttributes() {\n    return attributes;\n  }\n\n  public void setAttributes(List<Attribute> attributes) {\n    this.attributes = attributes;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MusicApp.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MusicApp.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 211,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum MusicApp {\n  RADIO, //\n  SPOTIFY, //\n  APPLE_MUSIC, //\n  DEEZER, //\n  AMAZON_PRIME_MUSIC, //\n  AUDIBLE, //\n  PODCASTS //\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TVOld.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TVOld.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 252,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class TVOld extends TVBase {\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Security.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Security.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1110,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class Security implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @XmlElement\n  private SecurityOld securityOld;\n\n  @XmlElement\n  private SecurityNew securityNew;\n\n  public SecurityOld getSecurityOld() {\n    if (securityOld == null) {\n      securityOld = new SecurityOld();\n    }\n    return securityOld;\n  }\n\n  public void setSecurityOld(SecurityOld securityOld) {\n    this.securityOld = securityOld;\n  }\n\n  public SecurityNew getSecurityNew() {\n    if (securityNew == null) {\n      securityNew = new SecurityNew();\n    }\n    return securityNew;\n  }\n\n  public void setSecurityNew(SecurityNew securityNew) {\n    this.securityNew = securityNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"Security [securityOld=\" + securityOld + \", securityNew=\" + securityNew + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 142,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum InternetType {\n  WIRE, // Leitung\n  MOBILE // Mobil\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/InternetSpeedBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3283,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class InternetSpeedBase implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private InternetType internetType; // Typ des Internets\n  private BigDecimal internetTypePrice;\n  private InternetSpeedType internetSpeedType; // Type der Internetgeschwindigkeit\n  private BigDecimal internetSpeedPrice;\n  private InternetSpeedMainUseType mainUseType; // Hauptnutzung\n\n  // Weitere Nutzung\n  private boolean netflix;\n  private boolean surfMail;\n  private boolean socialMedia;\n  private boolean youtube;\n  private boolean gaming;\n\n  private String comment;\n\n  private BigDecimal sum;\n\n  public InternetType getInternetType() {\n    return internetType;\n  }\n\n  public void setInternetType(InternetType internetType) {\n    this.internetType = internetType;\n  }\n\n  public BigDecimal getInternetTypePrice() {\n    return internetTypePrice;\n  }\n\n  public void setInternetTypePrice(BigDecimal internetTypePrice) {\n    this.internetTypePrice = internetTypePrice;\n  }\n\n  public InternetSpeedType getInternetSpeedType() {\n    return internetSpeedType;\n  }\n\n  public void setInternetSpeedType(InternetSpeedType internetSpeedType) {\n    this.internetSpeedType = internetSpeedType;\n  }\n\n  public BigDecimal getInternetSpeedPrice() {\n    return internetSpeedPrice;\n  }\n\n  public void setInternetSpeedPrice(BigDecimal internetSpeedPrice) {\n    this.internetSpeedPrice = internetSpeedPrice;\n  }\n\n  public InternetSpeedMainUseType getMainUseType() {\n    return mainUseType;\n  }\n\n  public void setMainUseType(InternetSpeedMainUseType mainUseType) {\n    this.mainUseType = mainUseType;\n  }\n\n  public boolean isNetflix() {\n    return netflix;\n  }\n\n  public void setNetflix(boolean netflix) {\n    this.netflix = netflix;\n  }\n\n  public boolean isSurfMail() {\n    return surfMail;\n  }\n\n  public void setSurfMail(boolean surfMail) {\n    this.surfMail = surfMail;\n  }\n\n  public boolean isSocialMedia() {\n    return socialMedia;\n  }\n\n  public void setSocialMedia(boolean socialMedia) {\n    this.socialMedia = socialMedia;\n  }\n\n  public boolean isYoutube() {\n    return youtube;\n  }\n\n  public void setYoutube(boolean youtube) {\n    this.youtube = youtube;\n  }\n\n  public boolean isGaming() {\n    return gaming;\n  }\n\n  public void setGaming(boolean gaming) {\n    this.gaming = gaming;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"InternetSpeedBase [internetType=\" + internetType + \", internetTypePrice=\" + internetTypePrice + \", internetSpeedType=\" + internetSpeedType + \", internetSpeedPrice=\" + internetSpeedPrice\n        + \", mainUseType=\" + mainUseType + \", netflix=\" + netflix + \", surfMail=\" + surfMail + \", socialMedia=\" + socialMedia + \", youtube=\" + youtube + \", gaming=\" + gaming + \", comment=\" + comment\n        + \", sum=\" + sum + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhoneOld.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhoneOld.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4912,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MobilePhoneOld extends MobilePhoneBase {\n\n  private boolean partPayment; // Teilzahlung\n  private BigDecimal partPaymentPrice;\n\n  private boolean mobilePhoneInsurance; // Handyversicherung\n  private BigDecimal mobilePhoneInsurancePrice;\n\n  private boolean cyberProtection; // Cyberschutz\n  private BigDecimal cyberProtectionPrice;\n\n  private boolean creditCard; // Kreditkarte\n  private BigDecimal creditCardPrice;\n\n  private boolean videoStreaming; // Videostreaming\n  private BigDecimal videoStreamingPrice;\n\n  private boolean musicStreaming; // Musikstreaming\n  private BigDecimal musicStreamingPrice;\n\n  private boolean upgradePackage; // Sonstige Pakete\n  private BigDecimal upgradePackagePrice;\n\n  private String advantageText; // Vorteile\n  private String disadvantageText; // Nachteile\n\n  public boolean isPartPayment() {\n    return partPayment;\n  }\n\n  public void setPartPayment(boolean partPayment) {\n    this.partPayment = partPayment;\n  }\n\n  public BigDecimal getPartPaymentPrice() {\n    return partPaymentPrice;\n  }\n\n  public void setPartPaymentPrice(BigDecimal partPaymentPrice) {\n    this.partPaymentPrice = partPaymentPrice;\n  }\n\n  public boolean isMobilePhoneInsurance() {\n    return mobilePhoneInsurance;\n  }\n\n  public void setMobilePhoneInsurance(boolean mobilePhoneInsurance) {\n    this.mobilePhoneInsurance = mobilePhoneInsurance;\n  }\n\n  public BigDecimal getMobilePhoneInsurancePrice() {\n    return mobilePhoneInsurancePrice;\n  }\n\n  public void setMobilePhoneInsurancePrice(BigDecimal mobilePhoneInsurancePrice) {\n    this.mobilePhoneInsurancePrice = mobilePhoneInsurancePrice;\n  }\n\n  public boolean isCyberProtection() {\n    return cyberProtection;\n  }\n\n  public void setCyberProtection(boolean cyberProtection) {\n    this.cyberProtection = cyberProtection;\n  }\n\n  public BigDecimal getCyberProtectionPrice() {\n    return cyberProtectionPrice;\n  }\n\n  public void setCyberProtectionPrice(BigDecimal cyberProtectionPrice) {\n    this.cyberProtectionPrice = cyberProtectionPrice;\n  }\n\n  public boolean isCreditCard() {\n    return creditCard;\n  }\n\n  public void setCreditCard(boolean creditCard) {\n    this.creditCard = creditCard;\n  }\n\n  public BigDecimal getCreditCardPrice() {\n    return creditCardPrice;\n  }\n\n  public void setCreditCardPrice(BigDecimal creditCardPrice) {\n    this.creditCardPrice = creditCardPrice;\n  }\n\n  public boolean isVideoStreaming() {\n    return videoStreaming;\n  }\n\n  public void setVideoStreaming(boolean videoStreaming) {\n    this.videoStreaming = videoStreaming;\n  }\n\n  public BigDecimal getVideoStreamingPrice() {\n    return videoStreamingPrice;\n  }\n\n  public void setVideoStreamingPrice(BigDecimal videoStreamingPrice) {\n    this.videoStreamingPrice = videoStreamingPrice;\n  }\n\n  public boolean isMusicStreaming() {\n    return musicStreaming;\n  }\n\n  public void setMusicStreaming(boolean musicStreaming) {\n    this.musicStreaming = musicStreaming;\n  }\n\n  public BigDecimal getMusicStreamingPrice() {\n    return musicStreamingPrice;\n  }\n\n  public void setMusicStreamingPrice(BigDecimal musicStreamingPrice) {\n    this.musicStreamingPrice = musicStreamingPrice;\n  }\n\n  public boolean isUpgradePackage() {\n    return upgradePackage;\n  }\n\n  public void setUpgradePackage(boolean upgradePackage) {\n    this.upgradePackage = upgradePackage;\n  }\n\n  public BigDecimal getUpgradePackagePrice() {\n    return upgradePackagePrice;\n  }\n\n  public void setUpgradePackagePrice(BigDecimal upgradePackagePrice) {\n    this.upgradePackagePrice = upgradePackagePrice;\n  }\n\n  public String getAdvantageText() {\n    return advantageText;\n  }\n\n  public void setAdvantageText(String advantageText) {\n    this.advantageText = advantageText;\n  }\n\n  public String getDisadvantageText() {\n    return disadvantageText;\n  }\n\n  public void setDisadvantageText(String disadvantageText) {\n    this.disadvantageText = disadvantageText;\n  }\n\n  @Override\n  public String toString() {\n    return \"MobilePhoneOld [partPayment=\" + partPayment + \", partPaymentPrice=\" + partPaymentPrice + \", mobilePhoneInsurance=\" + mobilePhoneInsurance + \", mobilePhoneInsurancePrice=\"\n        + mobilePhoneInsurancePrice + \", cyberProtection=\" + cyberProtection + \", cyberProtectionPrice=\" + cyberProtectionPrice + \", creditCard=\" + creditCard + \", creditCardPrice=\" + creditCardPrice\n        + \", videoStreaming=\" + videoStreaming + \", videoStreamingPrice=\" + videoStreamingPrice + \", musicStreaming=\" + musicStreaming + \", musicStreamingPrice=\" + musicStreamingPrice\n        + \", upgradePackage=\" + upgradePackage + \", upgradePackagePrice=\" + upgradePackagePrice + \", advantageText=\" + advantageText + \", disadvantageText=\" + disadvantageText + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/PaymentOld.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/PaymentOld.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2629,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class PaymentOld implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private String appsPaymentTypeText;\n  private String shoppingPaymentTypeText;\n  private String travelPaymentTypeText;\n  private String mobilePaymentTypeText;\n  private String creditCardTypeText;\n  private BigDecimal creditCardTypePrice;\n\n  private String comment;\n  private BigDecimal sum;\n\n  public String getAppsPaymentTypeText() {\n    return appsPaymentTypeText;\n  }\n\n  public void setAppsPaymentTypeText(String appsPaymentTypeText) {\n    this.appsPaymentTypeText = appsPaymentTypeText;\n  }\n\n  public String getShoppingPaymentTypeText() {\n    return shoppingPaymentTypeText;\n  }\n\n  public void setShoppingPaymentTypeText(String shoppingPaymentTypeText) {\n    this.shoppingPaymentTypeText = shoppingPaymentTypeText;\n  }\n\n  public String getTravelPaymentTypeText() {\n    return travelPaymentTypeText;\n  }\n\n  public void setTravelPaymentTypeText(String travelPaymentTypeText) {\n    this.travelPaymentTypeText = travelPaymentTypeText;\n  }\n\n  public String getMobilePaymentTypeText() {\n    return mobilePaymentTypeText;\n  }\n\n  public void setMobilePaymentTypeText(String mobilePaymentTypeText) {\n    this.mobilePaymentTypeText = mobilePaymentTypeText;\n  }\n\n  public String getCreditCardTypeText() {\n    return creditCardTypeText;\n  }\n\n  public void setCreditCardTypeText(String creditCardTypeText) {\n    this.creditCardTypeText = creditCardTypeText;\n  }\n\n  public BigDecimal getCreditCardTypePrice() {\n    return creditCardTypePrice;\n  }\n\n  public void setCreditCardTypePrice(BigDecimal creditCardTypePrice) {\n    this.creditCardTypePrice = creditCardTypePrice;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"PaymentOld [appsPaymentTypeText=\" + appsPaymentTypeText + \", shoppingPaymentTypeText=\" + shoppingPaymentTypeText + \", travelPaymentTypeText=\" + travelPaymentTypeText\n        + \", mobilePaymentTypeText=\" + mobilePaymentTypeText + \", creditCardTypeText=\" + creditCardTypeText + \", creditCardTypePrice=\" + creditCardTypePrice + \", comment=\" + comment + \", sum=\" + sum\n        + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/ServicesBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/ServicesBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3834,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class ServicesBase implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private boolean eScooter;\n  private BigDecimal eScooterPrice;\n\n  private boolean vacuumRobot; // Staubsaugerroboter\n  private BigDecimal vacuumRobotPrice;\n\n  private boolean toothbrush;\n  private BigDecimal toothbrushPrice;\n\n  private boolean remoteToys;\n  private BigDecimal remoteToysPrice;\n\n  private boolean speaker;\n  private BigDecimal speakerPrice;\n\n  private boolean headset;\n  private BigDecimal headsetPrice;\n\n  private String usedGadgetText;\n\n  private BigDecimal sum;\n  private String comment;\n\n  public boolean iseScooter() {\n    return eScooter;\n  }\n\n  public void seteScooter(boolean eScooter) {\n    this.eScooter = eScooter;\n  }\n\n  public BigDecimal geteScooterPrice() {\n    return eScooterPrice;\n  }\n\n  public void seteScooterPrice(BigDecimal eScooterPrice) {\n    this.eScooterPrice = eScooterPrice;\n  }\n\n  public boolean isVacuumRobot() {\n    return vacuumRobot;\n  }\n\n  public void setVacuumRobot(boolean vacuumRobot) {\n    this.vacuumRobot = vacuumRobot;\n  }\n\n  public BigDecimal getVacuumRobotPrice() {\n    return vacuumRobotPrice;\n  }\n\n  public void setVacuumRobotPrice(BigDecimal vacuumRobotPrice) {\n    this.vacuumRobotPrice = vacuumRobotPrice;\n  }\n\n  public boolean isToothbrush() {\n    return toothbrush;\n  }\n\n  public void setToothbrush(boolean toothbrush) {\n    this.toothbrush = toothbrush;\n  }\n\n  public BigDecimal getToothbrushPrice() {\n    return toothbrushPrice;\n  }\n\n  public void setToothbrushPrice(BigDecimal toothbrushPrice) {\n    this.toothbrushPrice = toothbrushPrice;\n  }\n\n  public boolean isRemoteToys() {\n    return remoteToys;\n  }\n\n  public void setRemoteToys(boolean remoteToys) {\n    this.remoteToys = remoteToys;\n  }\n\n  public BigDecimal getRemoteToysPrice() {\n    return remoteToysPrice;\n  }\n\n  public void setRemoteToysPrice(BigDecimal remoteToysPrice) {\n    this.remoteToysPrice = remoteToysPrice;\n  }\n\n  public boolean isSpeaker() {\n    return speaker;\n  }\n\n  public void setSpeaker(boolean speaker) {\n    this.speaker = speaker;\n  }\n\n  public BigDecimal getSpeakerPrice() {\n    return speakerPrice;\n  }\n\n  public void setSpeakerPrice(BigDecimal speakerPrice) {\n    this.speakerPrice = speakerPrice;\n  }\n\n  public boolean isHeadset() {\n    return headset;\n  }\n\n  public void setHeadset(boolean headset) {\n    this.headset = headset;\n  }\n\n  public BigDecimal getHeadsetPrice() {\n    return headsetPrice;\n  }\n\n  public void setHeadsetPrice(BigDecimal headsetPrice) {\n    this.headsetPrice = headsetPrice;\n  }\n\n  public String getUsedGadgetText() {\n    return usedGadgetText;\n  }\n\n  public void setUsedGadgetText(String usedGadgetText) {\n    this.usedGadgetText = usedGadgetText;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  @Override\n  public String toString() {\n    return \"ServicesBase [eScooter=\" + eScooter + \", eScooterPrice=\" + eScooterPrice + \", vacuumRobot=\" + vacuumRobot + \", vacuumRobotPrice=\" + vacuumRobotPrice + \", toothbrush=\" + toothbrush\n        + \", toothbrushPrice=\" + toothbrushPrice + \", remoteToys=\" + remoteToys + \", remoteToysPrice=\" + remoteToysPrice + \", speaker=\" + speaker + \", speakerPrice=\" + speakerPrice + \", headset=\"\n        + headset + \", headsetPrice=\" + headsetPrice + \", usedGadgetText=\" + usedGadgetText + \", sum=\" + sum + \", comment=\" + comment + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhone.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhone.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1211,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MobilePhone implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @XmlElement\n  private MobilePhoneOld mobilePhoneOld;\n\n  @XmlElement\n  private MobilePhoneNew mobilePhoneNew;\n\n  public MobilePhoneOld getMobilePhoneOld() {\n    if (mobilePhoneOld == null) {\n      mobilePhoneOld = new MobilePhoneOld();\n    }\n    return mobilePhoneOld;\n  }\n\n  public void setMobilePhoneOld(MobilePhoneOld mobilePhoneOld) {\n    this.mobilePhoneOld = mobilePhoneOld;\n  }\n\n  public MobilePhoneNew getMobilePhoneNew() {\n    if (mobilePhoneNew == null) {\n      this.mobilePhoneNew = new MobilePhoneNew();\n    }\n    return mobilePhoneNew;\n  }\n\n  public void setMobilePhoneNew(MobilePhoneNew mobilePhoneNew) {\n    this.mobilePhoneNew = mobilePhoneNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"MobilePhone [mobilePhoneOld=\" + mobilePhoneOld + \", mobilePhoneNew=\" + mobilePhoneNew + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Services.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Services.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1110,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class Services implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  @XmlElement\n  private ServicesOld servicesOld;\n\n  @XmlElement\n  private ServicesNew servicesNew;\n\n  public ServicesOld getServicesOld() {\n    if (servicesOld == null) {\n      servicesOld = new ServicesOld();\n    }\n    return servicesOld;\n  }\n\n  public void setServicesOld(ServicesOld servicesOld) {\n    this.servicesOld = servicesOld;\n  }\n\n  public ServicesNew getServicesNew() {\n    if (servicesNew == null) {\n      servicesNew = new ServicesNew();\n    }\n    return servicesNew;\n  }\n\n  public void setServicesNew(ServicesNew servicesNew) {\n    this.servicesNew = servicesNew;\n  }\n\n  @Override\n  public String toString() {\n    return \"Services [servicesOld=\" + servicesOld + \", servicesNew=\" + servicesNew + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TVType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TVType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 143,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum TVType {\n  WIRE, // Leitung\n  MOBILE, // Mobil\n  SAT\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TVNew.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TVNew.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 252,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class TVNew extends TVBase {\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TVBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/TVBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6966,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class TVBase implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private TVType tvType;\n  private BigDecimal tvTypePrice;\n  private String countChannels; // Anzahl Sender\n  private String oftenViewedChannels; // Meist gesehen\n  private Integer countTVDevices;\n  private Integer countMediaBoxes;\n\n  private boolean sevenDaysReactivateWatch; // 7 Tage rueckwirkend fernsehen\n  private BigDecimal sevenDaysReactivateWatchPrice;\n\n  private boolean foreignLanguage; // Fremdsprachen TV\n  private String foreignLanguageText;\n  private BigDecimal foreignLanguagePrice;\n\n  private boolean streamingOption;\n  private BigDecimal streamingOptionPrice;\n\n  private boolean hdTv;\n  private BigDecimal hdTvPrice;\n\n  private boolean onlineStorage; // Online Rekorder / Speicher\n  private BigDecimal onlineStoragePrice;\n\n  private boolean sky;\n  private BigDecimal skyPrice;\n\n  private boolean premiumTv;\n  private BigDecimal premiumTvPrice;\n\n  private boolean optionSelection;\n  private String optionText;\n  private BigDecimal optionPrice;\n\n  private String comment;\n\n  private BigDecimal sum;\n\n  public TVType getTvType() {\n    return tvType;\n  }\n\n  public void setTvType(TVType tvType) {\n    this.tvType = tvType;\n  }\n\n  public BigDecimal getTvTypePrice() {\n    return tvTypePrice;\n  }\n\n  public void setTvTypePrice(BigDecimal tvTypePrice) {\n    this.tvTypePrice = tvTypePrice;\n  }\n\n  public String getCountChannels() {\n    return countChannels;\n  }\n\n  public void setCountChannels(String countChannels) {\n    this.countChannels = countChannels;\n  }\n\n  public String getOftenViewedChannels() {\n    return oftenViewedChannels;\n  }\n\n  public void setOftenViewedChannels(String oftenViewedChannels) {\n    this.oftenViewedChannels = oftenViewedChannels;\n  }\n\n  public Integer getCountTVDevices() {\n    return countTVDevices;\n  }\n\n  public void setCountTVDevices(Integer countTVDevices) {\n    this.countTVDevices = countTVDevices;\n  }\n\n  public Integer getCountMediaBoxes() {\n    return countMediaBoxes;\n  }\n\n  public void setCountMediaBoxes(Integer countMediaBoxes) {\n    this.countMediaBoxes = countMediaBoxes;\n  }\n\n  public boolean isSevenDaysReactivateWatch() {\n    return sevenDaysReactivateWatch;\n  }\n\n  public void setSevenDaysReactivateWatch(boolean sevenDaysReactivateWatch) {\n    this.sevenDaysReactivateWatch = sevenDaysReactivateWatch;\n  }\n\n  public BigDecimal getSevenDaysReactivateWatchPrice() {\n    return sevenDaysReactivateWatchPrice;\n  }\n\n  public void setSevenDaysReactivateWatchPrice(BigDecimal sevenDaysReactivateWatchPrice) {\n    this.sevenDaysReactivateWatchPrice = sevenDaysReactivateWatchPrice;\n  }\n\n  public boolean isForeignLanguage() {\n    return foreignLanguage;\n  }\n\n  public void setForeignLanguage(boolean foreignLanguage) {\n    this.foreignLanguage = foreignLanguage;\n  }\n\n  public String getForeignLanguageText() {\n    return foreignLanguageText;\n  }\n\n  public void setForeignLanguageText(String foreignLanguageText) {\n    this.foreignLanguageText = foreignLanguageText;\n  }\n\n  public BigDecimal getForeignLanguagePrice() {\n    return foreignLanguagePrice;\n  }\n\n  public void setForeignLanguagePrice(BigDecimal foreignLanguagePrice) {\n    this.foreignLanguagePrice = foreignLanguagePrice;\n  }\n\n  public boolean isStreamingOption() {\n    return streamingOption;\n  }\n\n  public void setStreamingOption(boolean streamingOption) {\n    this.streamingOption = streamingOption;\n  }\n\n  public BigDecimal getStreamingOptionPrice() {\n    return streamingOptionPrice;\n  }\n\n  public void setStreamingOptionPrice(BigDecimal streamingOptionPrice) {\n    this.streamingOptionPrice = streamingOptionPrice;\n  }\n\n  public boolean isHdTv() {\n    return hdTv;\n  }\n\n  public void setHdTv(boolean hdTv) {\n    this.hdTv = hdTv;\n  }\n\n  public BigDecimal getHdTvPrice() {\n    return hdTvPrice;\n  }\n\n  public void setHdTvPrice(BigDecimal hdTvPrice) {\n    this.hdTvPrice = hdTvPrice;\n  }\n\n  public boolean isOnlineStorage() {\n    return onlineStorage;\n  }\n\n  public void setOnlineStorage(boolean onlineStorage) {\n    this.onlineStorage = onlineStorage;\n  }\n\n  public BigDecimal getOnlineStoragePrice() {\n    return onlineStoragePrice;\n  }\n\n  public void setOnlineStoragePrice(BigDecimal onlineStoragePrice) {\n    this.onlineStoragePrice = onlineStoragePrice;\n  }\n\n  public boolean isSky() {\n    return sky;\n  }\n\n  public void setSky(boolean sky) {\n    this.sky = sky;\n  }\n\n  public BigDecimal getSkyPrice() {\n    return skyPrice;\n  }\n\n  public void setSkyPrice(BigDecimal skyPrice) {\n    this.skyPrice = skyPrice;\n  }\n\n  public boolean isPremiumTv() {\n    return premiumTv;\n  }\n\n  public void setPremiumTv(boolean premiumTv) {\n    this.premiumTv = premiumTv;\n  }\n\n  public BigDecimal getPremiumTvPrice() {\n    return premiumTvPrice;\n  }\n\n  public void setPremiumTvPrice(BigDecimal premiumTvPrice) {\n    this.premiumTvPrice = premiumTvPrice;\n  }\n\n  public boolean isOptionSelection() {\n    return optionSelection;\n  }\n\n  public void setOptionSelection(boolean optionSelection) {\n    this.optionSelection = optionSelection;\n  }\n\n  public String getOptionText() {\n    return optionText;\n  }\n\n  public void setOptionText(String optionText) {\n    this.optionText = optionText;\n  }\n\n  public BigDecimal getOptionPrice() {\n    return optionPrice;\n  }\n\n  public void setOptionPrice(BigDecimal optionPrice) {\n    this.optionPrice = optionPrice;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"TVBase [tvType=\" + tvType + \", tvTypePrice=\" + tvTypePrice + \", countChannels=\" + countChannels + \", oftenViewedChannels=\" + oftenViewedChannels + \", countTVDevices=\" + countTVDevices\n        + \", countMediaBoxes=\" + countMediaBoxes + \", sevenDaysReactivateWatch=\" + sevenDaysReactivateWatch + \", sevenDaysReactivateWatchPrice=\" + sevenDaysReactivateWatchPrice + \", foreignLanguage=\"\n        + foreignLanguage + \", foreignLanguageText=\" + foreignLanguageText + \", foreignLanguagePrice=\" + foreignLanguagePrice + \", streamingOption=\" + streamingOption + \", streamingOptionPrice=\"\n        + streamingOptionPrice + \", hdTv=\" + hdTv + \", hdTvPrice=\" + hdTvPrice + \", onlineStorage=\" + onlineStorage + \", onlineStoragePrice=\" + onlineStoragePrice + \", sky=\" + sky + \", skyPrice=\"\n        + skyPrice + \", premiumTv=\" + premiumTv + \", premiumTvPrice=\" + premiumTvPrice + \", optionSelection=\" + optionSelection + \", optionText=\" + optionText + \", optionPrice=\" + optionPrice\n        + \", comment=\" + comment + \", sum=\" + sum + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SmartHomeBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/SmartHomeBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2404,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class SmartHomeBase implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private boolean comfortSolution;\n  private BigDecimal comfortSolutionPrice;\n  private String comfortSolutionText;\n\n  private boolean smartProduct;\n  private BigDecimal smartProductPrice;\n\n  private boolean amazonAlexa;\n\n  private String comment;\n  private BigDecimal sum;\n\n  public boolean isComfortSolution() {\n    return comfortSolution;\n  }\n\n  public void setComfortSolution(boolean comfortSolution) {\n    this.comfortSolution = comfortSolution;\n  }\n\n  public BigDecimal getComfortSolutionPrice() {\n    return comfortSolutionPrice;\n  }\n\n  public void setComfortSolutionPrice(BigDecimal comfortSolutionPrice) {\n    this.comfortSolutionPrice = comfortSolutionPrice;\n  }\n\n  public String getComfortSolutionText() {\n    return comfortSolutionText;\n  }\n\n  public void setComfortSolutionText(String comfortSolutionText) {\n    this.comfortSolutionText = comfortSolutionText;\n  }\n\n  public boolean isSmartProduct() {\n    return smartProduct;\n  }\n\n  public void setSmartProduct(boolean smartProduct) {\n    this.smartProduct = smartProduct;\n  }\n\n  public BigDecimal getSmartProductPrice() {\n    return smartProductPrice;\n  }\n\n  public void setSmartProductPrice(BigDecimal smartProductPrice) {\n    this.smartProductPrice = smartProductPrice;\n  }\n\n  public boolean isAmazonAlexa() {\n    return amazonAlexa;\n  }\n\n  public void setAmazonAlexa(boolean amazonAlexa) {\n    this.amazonAlexa = amazonAlexa;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"SmartHomeBase [comfortSolution=\" + comfortSolution + \", comfortSolutionPrice=\" + comfortSolutionPrice + \", comfortSolutionText=\" + comfortSolutionText + \", smartProduct=\" + smartProduct\n        + \", smartProductPrice=\" + smartProductPrice + \", amazonAlexa=\" + amazonAlexa + \", comment=\" + comment + \", sum=\" + sum + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/HouseholdType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/HouseholdType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 125,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum HouseholdType {\n  APARTMENT, HOUSE\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariffMainUseType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobileTariffMainUseType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 233,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\npublic enum MobileTariffMainUseType {\n  COMMUNICATION, //\n  SOCIAL_MEDIA, //\n  PHOTO_VIDEO, //\n  STREAMING, //\n  GAMING, //\n  NAVIGATION, //\n  SHOPPIMG //\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhoneNew.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/MobilePhoneNew.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4838,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class MobilePhoneNew extends MobilePhoneBase {\n  private boolean partPayment; // Teilzahlung\n  private BigDecimal partPaymentPrice;\n\n  private boolean a1MobilePhoneInsurance; // A1 Handyversicherung\n  private BigDecimal a1MobilePhoneInsurancePrice;\n\n  private boolean a1CyberProtection; // A1 Cyberschutz\n  private BigDecimal a1CyberProtectionPrice;\n\n  private boolean a1Mastercard; // A1 Mastercard\n  private BigDecimal a1MastercardPrice;\n\n  private boolean a1XploreTvStreaming; // A1 Xplore TV Streaming\n  private BigDecimal a1XploreTvStreamingPrice;\n\n  private boolean a1XploreMusic; // A1 Xplore Music\n  private BigDecimal a1XploreMusicPrice;\n\n  private boolean a1UpgradePackage; // A1 Upgrade Paket\n  private BigDecimal a1UpgradePackagePrice;\n\n  private String optionValue;\n\n  public boolean isPartPayment() {\n    return partPayment;\n  }\n\n  public void setPartPayment(boolean partPayment) {\n    this.partPayment = partPayment;\n  }\n\n  public BigDecimal getPartPaymentPrice() {\n    return partPaymentPrice;\n  }\n\n  public void setPartPaymentPrice(BigDecimal partPaymentPrice) {\n    this.partPaymentPrice = partPaymentPrice;\n  }\n\n  public boolean isA1MobilePhoneInsurance() {\n    return a1MobilePhoneInsurance;\n  }\n\n  public void setA1MobilePhoneInsurance(boolean a1MobilePhoneInsurance) {\n    this.a1MobilePhoneInsurance = a1MobilePhoneInsurance;\n  }\n\n  public BigDecimal getA1MobilePhoneInsurancePrice() {\n    return a1MobilePhoneInsurancePrice;\n  }\n\n  public void setA1MobilePhoneInsurancePrice(BigDecimal a1MobilePhoneInsurancePrice) {\n    this.a1MobilePhoneInsurancePrice = a1MobilePhoneInsurancePrice;\n  }\n\n  public boolean isA1CyberProtection() {\n    return a1CyberProtection;\n  }\n\n  public void setA1CyberProtection(boolean a1CyberProtection) {\n    this.a1CyberProtection = a1CyberProtection;\n  }\n\n  public BigDecimal getA1CyberProtectionPrice() {\n    return a1CyberProtectionPrice;\n  }\n\n  public void setA1CyberProtectionPrice(BigDecimal a1CyberProtectionPrice) {\n    this.a1CyberProtectionPrice = a1CyberProtectionPrice;\n  }\n\n  public boolean isA1Mastercard() {\n    return a1Mastercard;\n  }\n\n  public void setA1Mastercard(boolean a1Mastercard) {\n    this.a1Mastercard = a1Mastercard;\n  }\n\n  public BigDecimal getA1MastercardPrice() {\n    return a1MastercardPrice;\n  }\n\n  public void setA1MastercardPrice(BigDecimal a1MastercardPrice) {\n    this.a1MastercardPrice = a1MastercardPrice;\n  }\n\n  public boolean isA1XploreTvStreaming() {\n    return a1XploreTvStreaming;\n  }\n\n  public void setA1XploreTvStreaming(boolean a1XploreTvStreaming) {\n    this.a1XploreTvStreaming = a1XploreTvStreaming;\n  }\n\n  public BigDecimal getA1XploreTvStreamingPrice() {\n    return a1XploreTvStreamingPrice;\n  }\n\n  public void setA1XploreTvStreamingPrice(BigDecimal a1XploreTvStreamingPrice) {\n    this.a1XploreTvStreamingPrice = a1XploreTvStreamingPrice;\n  }\n\n  public boolean isA1XploreMusic() {\n    return a1XploreMusic;\n  }\n\n  public void setA1XploreMusic(boolean a1XploreMusic) {\n    this.a1XploreMusic = a1XploreMusic;\n  }\n\n  public BigDecimal getA1XploreMusicPrice() {\n    return a1XploreMusicPrice;\n  }\n\n  public void setA1XploreMusicPrice(BigDecimal a1XploreMusicPrice) {\n    this.a1XploreMusicPrice = a1XploreMusicPrice;\n  }\n\n  public boolean isA1UpgradePackage() {\n    return a1UpgradePackage;\n  }\n\n  public void setA1UpgradePackage(boolean a1UpgradePackage) {\n    this.a1UpgradePackage = a1UpgradePackage;\n  }\n\n  public BigDecimal getA1UpgradePackagePrice() {\n    return a1UpgradePackagePrice;\n  }\n\n  public void setA1UpgradePackagePrice(BigDecimal a1UpgradePackagePrice) {\n    this.a1UpgradePackagePrice = a1UpgradePackagePrice;\n  }\n\n  public String getOptionValue() {\n    return optionValue;\n  }\n\n  public void setOptionValue(String optionValue) {\n    this.optionValue = optionValue;\n  }\n\n  @Override\n  public String toString() {\n    return \"MobilePhoneNew [partPayment=\" + partPayment + \", partPaymentPrice=\" + partPaymentPrice + \", a1MobilePhoneInsurance=\" + a1MobilePhoneInsurance + \", a1MobilePhoneInsurancePrice=\"\n        + a1MobilePhoneInsurancePrice + \", a1CyberProtection=\" + a1CyberProtection + \", a1CyberProtectionPrice=\" + a1CyberProtectionPrice + \", a1Mastercard=\" + a1Mastercard + \", a1MastercardPrice=\"\n        + a1MastercardPrice + \", a1XploreTvStreaming=\" + a1XploreTvStreaming + \", a1XploreTvStreamingPrice=\" + a1XploreTvStreamingPrice + \", a1XploreMusic=\" + a1XploreMusic + \", a1XploreMusicPrice=\"\n        + a1XploreMusicPrice + \", a1UpgradePackage=\" + a1UpgradePackage + \", a1UpgradePackagePrice=\" + a1UpgradePackagePrice + \", optionValue=\" + optionValue + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/PaymentNew.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/PaymentNew.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2525,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class PaymentNew implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private boolean a1Mastercard;\n  private BigDecimal a1MastercardPrice;\n  private String a1MastercardText;\n\n  private boolean appStoreA1Invoice; // App Store ueber A1 Rechnung\n  private BigDecimal appStoreA1InvoicePrice;\n  private String appStoreA1InvoiceText;\n\n  private String comment;\n  private BigDecimal sum;\n\n  public boolean isA1Mastercard() {\n    return a1Mastercard;\n  }\n\n  public void setA1Mastercard(boolean a1Mastercard) {\n    this.a1Mastercard = a1Mastercard;\n  }\n\n  public BigDecimal getA1MastercardPrice() {\n    return a1MastercardPrice;\n  }\n\n  public void setA1MastercardPrice(BigDecimal a1MastercardPrice) {\n    this.a1MastercardPrice = a1MastercardPrice;\n  }\n\n  public String getA1MastercardText() {\n    return a1MastercardText;\n  }\n\n  public void setA1MastercardText(String a1MastercardText) {\n    this.a1MastercardText = a1MastercardText;\n  }\n\n  public boolean isAppStoreA1Invoice() {\n    return appStoreA1Invoice;\n  }\n\n  public void setAppStoreA1Invoice(boolean appStoreA1Invoice) {\n    this.appStoreA1Invoice = appStoreA1Invoice;\n  }\n\n  public BigDecimal getAppStoreA1InvoicePrice() {\n    return appStoreA1InvoicePrice;\n  }\n\n  public void setAppStoreA1InvoicePrice(BigDecimal appStoreA1InvoicePrice) {\n    this.appStoreA1InvoicePrice = appStoreA1InvoicePrice;\n  }\n\n  public String getAppStoreA1InvoiceText() {\n    return appStoreA1InvoiceText;\n  }\n\n  public void setAppStoreA1InvoiceText(String appStoreA1InvoiceText) {\n    this.appStoreA1InvoiceText = appStoreA1InvoiceText;\n  }\n\n  public String getComment() {\n    return comment;\n  }\n\n  public void setComment(String comment) {\n    this.comment = comment;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"PaymentNew [a1Mastercard=\" + a1Mastercard + \", a1MastercardPrice=\" + a1MastercardPrice + \", a1MastercardText=\" + a1MastercardText + \", appStoreA1Invoice=\" + appStoreA1Invoice\n        + \", appStoreA1InvoicePrice=\" + appStoreA1InvoicePrice + \", appStoreA1InvoiceText=\" + appStoreA1InvoiceText + \", comment=\" + comment + \", sum=\" + sum + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Music.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/digitalselling/Music.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4790,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\n\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\n\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class Music implements Serializable {\n  private static final long serialVersionUID = 1L;\n\n  private String usedMusicApps;\n  private BigDecimal usedMusicAppsPrice;\n\n  private MusicApp musicApp;\n  private BigDecimal musicAppPrice;\n  private String musicAppText;\n\n  private boolean xMonthsFree;\n  private String xMonthsFreeText;\n\n  private String listenMusicLocationText;\n\n  private String speakerName;\n  private BigDecimal speakerPrice;\n  private String speakerFeatureText;\n\n  private MusicSpeakerType speakerType;\n\n  private String headsetName;\n  private BigDecimal headsetPrice;\n  private String headsetFeatureText;\n\n  private String commentOld;\n  private String commentNew;\n\n  private BigDecimal sum;\n\n  public String getUsedMusicApps() {\n    return usedMusicApps;\n  }\n\n  public void setUsedMusicApps(String usedMusicApps) {\n    this.usedMusicApps = usedMusicApps;\n  }\n\n  public BigDecimal getUsedMusicAppsPrice() {\n    return usedMusicAppsPrice;\n  }\n\n  public void setUsedMusicAppsPrice(BigDecimal usedMusicAppsPrice) {\n    this.usedMusicAppsPrice = usedMusicAppsPrice;\n  }\n\n  public MusicApp getMusicApp() {\n    return musicApp;\n  }\n\n  public void setMusicApp(MusicApp musicApp) {\n    this.musicApp = musicApp;\n  }\n\n  public BigDecimal getMusicAppPrice() {\n    return musicAppPrice;\n  }\n\n  public void setMusicAppPrice(BigDecimal musicAppPrice) {\n    this.musicAppPrice = musicAppPrice;\n  }\n\n  public String getMusicAppText() {\n    return musicAppText;\n  }\n\n  public void setMusicAppText(String musicAppText) {\n    this.musicAppText = musicAppText;\n  }\n\n  public boolean isxMonthsFree() {\n    return xMonthsFree;\n  }\n\n  public void setxMonthsFree(boolean xMonthsFree) {\n    this.xMonthsFree = xMonthsFree;\n  }\n\n  public String getxMonthsFreeText() {\n    return xMonthsFreeText;\n  }\n\n  public void setxMonthsFreeText(String xMonthsFreeText) {\n    this.xMonthsFreeText = xMonthsFreeText;\n  }\n\n  public String getListenMusicLocationText() {\n    return listenMusicLocationText;\n  }\n\n  public void setListenMusicLocationText(String listenMusicLocationText) {\n    this.listenMusicLocationText = listenMusicLocationText;\n  }\n\n  public String getSpeakerName() {\n    return speakerName;\n  }\n\n  public void setSpeakerName(String speakerName) {\n    this.speakerName = speakerName;\n  }\n\n  public BigDecimal getSpeakerPrice() {\n    return speakerPrice;\n  }\n\n  public void setSpeakerPrice(BigDecimal speakerPrice) {\n    this.speakerPrice = speakerPrice;\n  }\n\n  public String getSpeakerFeatureText() {\n    return speakerFeatureText;\n  }\n\n  public void setSpeakerFeatureText(String speakerFeatureText) {\n    this.speakerFeatureText = speakerFeatureText;\n  }\n\n  public MusicSpeakerType getSpeakerType() {\n    return speakerType;\n  }\n\n  public void setSpeakerType(MusicSpeakerType speakerType) {\n    this.speakerType = speakerType;\n  }\n\n  public String getHeadsetName() {\n    return headsetName;\n  }\n\n  public void setHeadsetName(String headsetName) {\n    this.headsetName = headsetName;\n  }\n\n  public BigDecimal getHeadsetPrice() {\n    return headsetPrice;\n  }\n\n  public void setHeadsetPrice(BigDecimal headsetPrice) {\n    this.headsetPrice = headsetPrice;\n  }\n\n  public String getHeadsetFeatureText() {\n    return headsetFeatureText;\n  }\n\n  public void setHeadsetFeatureText(String headsetFeatureText) {\n    this.headsetFeatureText = headsetFeatureText;\n  }\n\n  public String getCommentOld() {\n    return commentOld;\n  }\n\n  public void setCommentOld(String commentOld) {\n    this.commentOld = commentOld;\n  }\n\n  public String getCommentNew() {\n    return commentNew;\n  }\n\n  public void setCommentNew(String commentNew) {\n    this.commentNew = commentNew;\n  }\n\n  public BigDecimal getSum() {\n    return sum;\n  }\n\n  public void setSum(BigDecimal sum) {\n    this.sum = sum;\n  }\n\n  @Override\n  public String toString() {\n    return \"Music [usedMusicApps=\" + usedMusicApps + \", usedMusicAppsPrice=\" + usedMusicAppsPrice + \", musicApp=\" + musicApp + \", musicAppPrice=\" + musicAppPrice + \", musicAppText=\" + musicAppText\n        + \", xMonthsFree=\" + xMonthsFree + \", xMonthsFreeText=\" + xMonthsFreeText + \", listenMusicLocationText=\" + listenMusicLocationText + \", speakerName=\" + speakerName + \", speakerPrice=\"\n        + speakerPrice + \", speakerFeatureText=\" + speakerFeatureText + \", speakerType=\" + speakerType + \", headsetName=\" + headsetName + \", headsetPrice=\" + headsetPrice + \", headsetFeatureText=\"\n        + headsetFeatureText + \", commentOld=\" + commentOld + \", commentNew=\" + commentNew + \", sum=\" + sum + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/Country.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/Country.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 898,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\nimport java.io.Serializable;\n\npublic class Country implements Serializable {\n  private String iso3166Alpha2;\n  private String iso3166Alpha3;\n  private String nameGerman;\n\n  public String getIso3166Alpha2() {\n    return iso3166Alpha2;\n  }\n\n  public void setIso3166Alpha2(String iso3166Alpha2) {\n    this.iso3166Alpha2 = iso3166Alpha2;\n  }\n\n  public String getIso3166Alpha3() {\n    return iso3166Alpha3;\n  }\n\n  public void setIso3166Alpha3(String iso3166Alpha3) {\n    this.iso3166Alpha3 = iso3166Alpha3;\n  }\n\n  public String getNameGerman() {\n    return nameGerman;\n  }\n\n  public void setNameGerman(String nameGerman) {\n    this.nameGerman = nameGerman;\n  }\n\n  @Override\n  public String toString() {\n    return \"Country [iso3166Alpha2=\" + iso3166Alpha2 + \", iso3166Alpha3=\" + iso3166Alpha3 + \", nameGerman=\" + nameGerman + \"]\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SetupType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SetupType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 119,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\npublic enum SetupType {\n  NEW, NEW_SERVICE, NEW_LINE\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/HandlingAssigneeType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/HandlingAssigneeType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 122,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\npublic enum HandlingAssigneeType {\n  PARTNER_WEB, SHOP\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSOrgUnit.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSOrgUnit.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 875,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\nimport java.io.Serializable;\n\npublic class SBSOrgUnit implements Serializable {\n  private String id;\n  private String name;\n  private String street;\n  private String postalCode;\n  private String city;\n\n  public String getId() {\n    return id;\n  }\n\n  public void setId(String id) {\n    this.id = id;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getStreet() {\n    return street;\n  }\n\n  public void setStreet(String street) {\n    this.street = street;\n  }\n\n  public String getPostalCode() {\n    return postalCode;\n  }\n\n  public void setPostalCode(String postalCode) {\n    this.postalCode = postalCode;\n  }\n\n  public String getCity() {\n    return city;\n  }\n\n  public void setCity(String city) {\n    this.city = city;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/CommunicationType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/CommunicationType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 130,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\npublic enum CommunicationType {\n  WRITTEN, PERSONAL, TELEPHONIC\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/ContactSource.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/ContactSource.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 153,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\npublic enum ContactSource {\n  LEAD_SYSTEM, POLARIS, SELF_INITIATIVE, CUSTOMER_REQUEST\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSProductNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSProductNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 17732,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Set;\n\nimport at.a1ta.cuco.core.shared.dto.ContactPerson;\nimport at.a1ta.cuco.core.shared.dto.ProductOffering;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.ProductHistoryItem;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.FileAttachment;\n\npublic class SBSProductNote extends SalesInfoNote {\n\n  private String productId;\n  private String productAlternativeId;\n  private String productDisplayName;\n  private String productCategory;\n  private Set<SetupType> setupTypes;\n  private SetupCategory category;\n\n  private boolean winback;\n\n  private boolean consultationDesired;\n  private QuoteStatus quoteStatus;\n  private boolean purchaseWithoutWrittenQuote;\n\n  private Integer turnoverQuantity;\n  private Integer turnoverDurationMonths;\n  private BigDecimal turnoverOnetimeCost;\n  private BigDecimal turnoverMonthlyCost;\n  private BigDecimal turnoverYearlyCost;\n  private BigDecimal turnoverSum; // Anzahl * (montl. *laufzeit + einmalig+ j\u00e4hrliche Kosten / 12 * laufzeit)\n\n  private HandlingAssigneeType handlingAssigneeType;\n  private String handlingAssigneeOrgUnitId;\n  private String handlingAssigneeOrgUnitName;\n  private String handlingAssigneeOrgUnitStreet;\n  private String handlingAssigneeOrgUnitPostalCode;\n  private String handlingAssigneeOrgUnitCity;\n\n  private List<ProductHistoryItem> historyItems = new ArrayList<ProductHistoryItem>();\n  private Long productOfferingId;\n  private List<FileAttachment> fileAttachments;\n  private ContactPerson contactPerson;\n  private Long todoGroupNoteId;\n\n  public SBSProductNote() {\n    super();\n  }\n\n  /**\n   * Copy Constructor\n   * \n   * @param sBSProductNote a <code>SBSProductNote</code> object\n   */\n  public SBSProductNote(SBSProductNote sBSProductNote) {\n    super(sBSProductNote);\n    this.productId = sBSProductNote.productId;\n    this.productAlternativeId = sBSProductNote.productAlternativeId;\n    this.productDisplayName = sBSProductNote.productDisplayName;\n    this.productCategory = sBSProductNote.productCategory;\n    this.setupTypes = sBSProductNote.setupTypes;\n    this.category = sBSProductNote.category;\n    this.winback = sBSProductNote.winback;\n    this.consultationDesired = sBSProductNote.consultationDesired;\n    this.quoteStatus = sBSProductNote.quoteStatus;\n    this.purchaseWithoutWrittenQuote = sBSProductNote.purchaseWithoutWrittenQuote;\n    this.turnoverQuantity = sBSProductNote.turnoverQuantity;\n    this.turnoverDurationMonths = sBSProductNote.turnoverDurationMonths;\n    this.turnoverOnetimeCost = sBSProductNote.turnoverOnetimeCost;\n    this.turnoverMonthlyCost = sBSProductNote.turnoverMonthlyCost;\n    this.turnoverYearlyCost = sBSProductNote.turnoverYearlyCost;\n    this.turnoverSum = sBSProductNote.turnoverSum;\n    this.handlingAssigneeType = sBSProductNote.handlingAssigneeType;\n    this.handlingAssigneeOrgUnitId = sBSProductNote.handlingAssigneeOrgUnitId;\n    this.handlingAssigneeOrgUnitName = sBSProductNote.handlingAssigneeOrgUnitName;\n    this.handlingAssigneeOrgUnitStreet = sBSProductNote.handlingAssigneeOrgUnitStreet;\n    this.handlingAssigneeOrgUnitPostalCode = sBSProductNote.handlingAssigneeOrgUnitPostalCode;\n    this.handlingAssigneeOrgUnitCity = sBSProductNote.handlingAssigneeOrgUnitCity;\n    this.historyItems = sBSProductNote.historyItems;\n    this.productOfferingId = sBSProductNote.productOfferingId;\n  }\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n\n  public String getProductAlternativeId() {\n    return productAlternativeId;\n  }\n\n  public void setProductAlternativeId(String productAlternativeId) {\n    this.productAlternativeId = productAlternativeId;\n  }\n\n  public String getProductDisplayName() {\n    return productDisplayName;\n  }\n\n  public void setProductDisplayName(String productDisplayName) {\n    this.productDisplayName = productDisplayName;\n  }\n\n  public String getProductCategory() {\n    return productCategory;\n  }\n\n  public void setProductCategory(String productCategory) {\n    this.productCategory = productCategory;\n  }\n\n  public Set<SetupType> getSetupTypes() {\n    return setupTypes;\n  }\n\n  public void setSetupTypes(Set<SetupType> setupTypes) {\n    this.setupTypes = setupTypes;\n  }\n\n  public SetupCategory getCategory() {\n    return category;\n  }\n\n  public void setCategory(SetupCategory category) {\n    this.category = category;\n  }\n\n  public boolean isWinback() {\n    return winback;\n  }\n\n  public void setWinback(boolean winback) {\n    this.winback = winback;\n  }\n\n  public boolean isConsultationDesired() {\n    return consultationDesired;\n  }\n\n  public void setConsultationDesired(boolean consultationDesired) {\n    this.consultationDesired = consultationDesired;\n  }\n\n  public QuoteStatus getQuoteStatus() {\n    return quoteStatus;\n  }\n\n  public void setQuoteStatus(QuoteStatus quoteStatus) {\n    this.quoteStatus = quoteStatus;\n  }\n\n  public boolean isPurchaseWithoutWrittenQuote() {\n    return purchaseWithoutWrittenQuote;\n  }\n\n  public void setPurchaseWithoutWrittenQuote(boolean purchaseWithoutWrittenQuote) {\n    this.purchaseWithoutWrittenQuote = purchaseWithoutWrittenQuote;\n  }\n\n  public Integer getTurnoverQuantity() {\n    return turnoverQuantity;\n  }\n\n  public void setTurnoverQuantity(Integer turnoverQuantity) {\n    this.turnoverQuantity = turnoverQuantity;\n  }\n\n  public Integer getTurnoverDurationMonths() {\n    return turnoverDurationMonths;\n  }\n\n  public void setTurnoverDurationMonths(Integer turnoverDurationMonths) {\n    this.turnoverDurationMonths = turnoverDurationMonths;\n  }\n\n  public BigDecimal getTurnoverOnetimeCost() {\n    return turnoverOnetimeCost;\n  }\n\n  public void setTurnoverOnetimeCost(BigDecimal turnoverOnetimeCost) {\n    this.turnoverOnetimeCost = turnoverOnetimeCost;\n  }\n\n  public BigDecimal getTurnoverMonthlyCost() {\n    return turnoverMonthlyCost;\n  }\n\n  public void setTurnoverMonthlyCost(BigDecimal turnoverMonthlyCost) {\n    this.turnoverMonthlyCost = turnoverMonthlyCost;\n  }\n\n  public BigDecimal getTurnoverYearlyCost() {\n    return turnoverYearlyCost;\n  }\n\n  public void setTurnoverYearlyCost(BigDecimal turnoverYearlyCost) {\n    this.turnoverYearlyCost = turnoverYearlyCost;\n  }\n\n  public BigDecimal getTurnoverSum() {\n    return turnoverSum;\n  }\n\n  public void setTurnoverSum(BigDecimal turnoverSum) {\n    this.turnoverSum = turnoverSum;\n  }\n\n  public HandlingAssigneeType getHandlingAssigneeType() {\n    return handlingAssigneeType;\n  }\n\n  public void setHandlingAssigneeType(HandlingAssigneeType handlingAssigneeType) {\n    this.handlingAssigneeType = handlingAssigneeType;\n  }\n\n  public String getHandlingAssigneeOrgUnitId() {\n    return handlingAssigneeOrgUnitId;\n  }\n\n  public void setHandlingAssigneeOrgUnitId(String handlingAssigneeOrgUnitId) {\n    this.handlingAssigneeOrgUnitId = handlingAssigneeOrgUnitId;\n  }\n\n  public String getHandlingAssigneeOrgUnitName() {\n    return handlingAssigneeOrgUnitName;\n  }\n\n  public void setHandlingAssigneeOrgUnitName(String handlingAssigneeOrgUnitName) {\n    this.handlingAssigneeOrgUnitName = handlingAssigneeOrgUnitName;\n  }\n\n  public String getHandlingAssigneeOrgUnitStreet() {\n    return handlingAssigneeOrgUnitStreet;\n  }\n\n  public void setHandlingAssigneeOrgUnitStreet(String handlingAssigneeOrgUnitStreet) {\n    this.handlingAssigneeOrgUnitStreet = handlingAssigneeOrgUnitStreet;\n  }\n\n  public String getHandlingAssigneeOrgUnitPostalCode() {\n    return handlingAssigneeOrgUnitPostalCode;\n  }\n\n  public void setHandlingAssigneeOrgUnitPostalCode(String handlingAssigneeOrgUnitPostalCode) {\n    this.handlingAssigneeOrgUnitPostalCode = handlingAssigneeOrgUnitPostalCode;\n  }\n\n  public String getHandlingAssigneeOrgUnitCity() {\n    return handlingAssigneeOrgUnitCity;\n  }\n\n  public void setHandlingAssigneeOrgUnitCity(String handlingAssigneeOrgUnitCity) {\n    this.handlingAssigneeOrgUnitCity = handlingAssigneeOrgUnitCity;\n  }\n\n  @Override\n  public String toString() {\n    return \"SBSProductNote [productId=\" + productId + \", productAlternativeId=\" + productAlternativeId + \", productDisplayName=\" + productDisplayName + \", productCategory=\" + productCategory\n        + \", setupTypes=\" + setupTypes + \", category=\" + category + \", winback=\" + winback + \", consultationDesired=\" + consultationDesired + \", quoteStatus=\" + quoteStatus\n        + \", purchaseWithoutWrittenQuote=\" + purchaseWithoutWrittenQuote + \", turnoverQuantity=\" + turnoverQuantity + \", turnoverDurationMonths=\" + turnoverDurationMonths + \", turnoverOnetimeCost=\"\n        + turnoverOnetimeCost + \", turnoverMonthlyCost=\" + turnoverMonthlyCost + \", turnoverYearlyCost=\" + turnoverYearlyCost + \", turnoverSum=\" + turnoverSum + \", handlingAssigneeType=\"\n        + handlingAssigneeType + \", handlingAssigneeOrgUnitId=\" + handlingAssigneeOrgUnitId + \", handlingAssigneeOrgUnitName=\" + handlingAssigneeOrgUnitName + \", handlingAssigneeOrgUnitStreet=\"\n        + handlingAssigneeOrgUnitStreet + \", handlingAssigneeOrgUnitPostalCode=\" + handlingAssigneeOrgUnitPostalCode + \", handlingAssigneeOrgUnitCity=\" + handlingAssigneeOrgUnitCity + \"]\";\n  }\n\n  public List<ProductHistoryItem> getHistoryItems() {\n    return historyItems;\n  }\n\n  public void setHistoryItems(List<ProductHistoryItem> historyItems) {\n    this.historyItems = historyItems;\n  }\n\n  public ProductOffering getProductOffering() {\n    if (productOfferingId == null) {\n      return null;\n    }\n    ProductOffering.valueOf(productOfferingId);\n    return ProductOffering.valueOf(productOfferingId);\n  }\n\n  public void setProductOffering(ProductOffering productOffering) {\n    if (productOffering != null) {\n      this.productOfferingId = productOffering.getId();\n    } else {\n      this.productOfferingId = null;\n    }\n  }\n\n  public Long getProductOfferingId() {\n    return productOfferingId;\n  }\n\n  public void setProductOfferingId(Long productOfferingId) {\n    this.productOfferingId = productOfferingId;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((category == null) ? 0 : category.hashCode());\n    result = prime * result + (consultationDesired ? 1231 : 1237);\n    result = prime * result + ((handlingAssigneeOrgUnitCity == null) ? 0 : handlingAssigneeOrgUnitCity.hashCode());\n    result = prime * result + ((handlingAssigneeOrgUnitId == null) ? 0 : handlingAssigneeOrgUnitId.hashCode());\n    result = prime * result + ((handlingAssigneeOrgUnitName == null) ? 0 : handlingAssigneeOrgUnitName.hashCode());\n    result = prime * result + ((handlingAssigneeOrgUnitPostalCode == null) ? 0 : handlingAssigneeOrgUnitPostalCode.hashCode());\n    result = prime * result + ((handlingAssigneeOrgUnitStreet == null) ? 0 : handlingAssigneeOrgUnitStreet.hashCode());\n    result = prime * result + ((handlingAssigneeType == null) ? 0 : handlingAssigneeType.hashCode());\n    result = prime * result + ((historyItems == null) ? 0 : historyItems.hashCode());\n    result = prime * result + ((productAlternativeId == null) ? 0 : productAlternativeId.hashCode());\n    result = prime * result + ((productCategory == null) ? 0 : productCategory.hashCode());\n    result = prime * result + ((productDisplayName == null) ? 0 : productDisplayName.hashCode());\n    result = prime * result + ((productId == null) ? 0 : productId.hashCode());\n    result = prime * result + ((productOfferingId == null) ? 0 : productOfferingId.hashCode());\n    result = prime * result + (purchaseWithoutWrittenQuote ? 1231 : 1237);\n    result = prime * result + ((quoteStatus == null) ? 0 : quoteStatus.hashCode());\n    result = prime * result + ((setupTypes == null) ? 0 : setupTypes.hashCode());\n    result = prime * result + ((turnoverDurationMonths == null) ? 0 : turnoverDurationMonths.hashCode());\n    result = prime * result + ((turnoverMonthlyCost == null) ? 0 : turnoverMonthlyCost.hashCode());\n    result = prime * result + ((turnoverOnetimeCost == null) ? 0 : turnoverOnetimeCost.hashCode());\n    result = prime * result + ((turnoverQuantity == null) ? 0 : turnoverQuantity.hashCode());\n    result = prime * result + ((turnoverSum == null) ? 0 : turnoverSum.hashCode());\n    result = prime * result + ((turnoverYearlyCost == null) ? 0 : turnoverYearlyCost.hashCode());\n    result = prime * result + (winback ? 1231 : 1237);\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    SBSProductNote other = (SBSProductNote) obj;\n    if (category != other.category) {\n      return false;\n    }\n    if (consultationDesired != other.consultationDesired) {\n      return false;\n    }\n    if (handlingAssigneeOrgUnitCity == null) {\n      if (other.handlingAssigneeOrgUnitCity != null) {\n        return false;\n      }\n    } else if (!handlingAssigneeOrgUnitCity.equals(other.handlingAssigneeOrgUnitCity)) {\n      return false;\n    }\n    if (handlingAssigneeOrgUnitId == null) {\n      if (other.handlingAssigneeOrgUnitId != null) {\n        return false;\n      }\n    } else if (!handlingAssigneeOrgUnitId.equals(other.handlingAssigneeOrgUnitId)) {\n      return false;\n    }\n    if (handlingAssigneeOrgUnitName == null) {\n      if (other.handlingAssigneeOrgUnitName != null) {\n        return false;\n      }\n    } else if (!handlingAssigneeOrgUnitName.equals(other.handlingAssigneeOrgUnitName)) {\n      return false;\n    }\n    if (handlingAssigneeOrgUnitPostalCode == null) {\n      if (other.handlingAssigneeOrgUnitPostalCode != null) {\n        return false;\n      }\n    } else if (!handlingAssigneeOrgUnitPostalCode.equals(other.handlingAssigneeOrgUnitPostalCode)) {\n      return false;\n    }\n    if (handlingAssigneeOrgUnitStreet == null) {\n      if (other.handlingAssigneeOrgUnitStreet != null) {\n        return false;\n      }\n    } else if (!handlingAssigneeOrgUnitStreet.equals(other.handlingAssigneeOrgUnitStreet)) {\n      return false;\n    }\n    if (handlingAssigneeType != other.handlingAssigneeType) {\n      return false;\n    }\n    if (historyItems == null) {\n      if (other.historyItems != null) {\n        return false;\n      }\n    } else if (!historyItems.equals(other.historyItems)) {\n      return false;\n    }\n    if (productAlternativeId == null) {\n      if (other.productAlternativeId != null) {\n        return false;\n      }\n    } else if (!productAlternativeId.equals(other.productAlternativeId)) {\n      return false;\n    }\n    if (productCategory == null) {\n      if (other.productCategory != null) {\n        return false;\n      }\n    } else if (!productCategory.equals(other.productCategory)) {\n      return false;\n    }\n    if (productDisplayName == null) {\n      if (other.productDisplayName != null) {\n        return false;\n      }\n    } else if (!productDisplayName.equals(other.productDisplayName)) {\n      return false;\n    }\n    if (productId == null) {\n      if (other.productId != null) {\n        return false;\n      }\n    } else if (!productId.equals(other.productId)) {\n      return false;\n    }\n    if (productOfferingId == null) {\n      if (other.productOfferingId != null) {\n        return false;\n      }\n    } else if (!productOfferingId.equals(other.productOfferingId)) {\n      return false;\n    }\n    if (purchaseWithoutWrittenQuote != other.purchaseWithoutWrittenQuote) {\n      return false;\n    }\n    if (quoteStatus != other.quoteStatus) {\n      return false;\n    }\n    if (setupTypes == null) {\n      if (other.setupTypes != null) {\n        return false;\n      }\n    } else if (!setupTypes.equals(other.setupTypes)) {\n      return false;\n    }\n    if (turnoverDurationMonths == null) {\n      if (other.turnoverDurationMonths != null) {\n        return false;\n      }\n    } else if (!turnoverDurationMonths.equals(other.turnoverDurationMonths)) {\n      return false;\n    }\n    if (turnoverMonthlyCost == null) {\n      if (other.turnoverMonthlyCost != null) {\n        return false;\n      }\n    } else if (!turnoverMonthlyCost.equals(other.turnoverMonthlyCost)) {\n      return false;\n    }\n    if (turnoverOnetimeCost == null) {\n      if (other.turnoverOnetimeCost != null) {\n        return false;\n      }\n    } else if (!turnoverOnetimeCost.equals(other.turnoverOnetimeCost)) {\n      return false;\n    }\n    if (turnoverQuantity == null) {\n      if (other.turnoverQuantity != null) {\n        return false;\n      }\n    } else if (!turnoverQuantity.equals(other.turnoverQuantity)) {\n      return false;\n    }\n    if (turnoverSum == null) {\n      if (other.turnoverSum != null) {\n        return false;\n      }\n    } else if (!turnoverSum.equals(other.turnoverSum)) {\n      return false;\n    }\n    if (turnoverYearlyCost == null) {\n      if (other.turnoverYearlyCost != null) {\n        return false;\n      }\n    } else if (!turnoverYearlyCost.equals(other.turnoverYearlyCost)) {\n      return false;\n    }\n    if (winback != other.winback) {\n      return false;\n    }\n    return true;\n  }\n\n  public List<FileAttachment> getFileAttachments() {\n    return fileAttachments;\n  }\n\n  public void setFileAttachments(List<FileAttachment> fileAttachments) {\n    this.fileAttachments = fileAttachments;\n  }\n\n  public ContactPerson getContactPerson() {\n    return contactPerson;\n  }\n\n  public void setContactPerson(ContactPerson contactPerson) {\n    this.contactPerson = contactPerson;\n  }\n\n  public Long getTodoGroupNoteId() {\n    return todoGroupNoteId;\n  }\n\n  public void setTodoGroupNoteId(Long todoGroupNoteId) {\n    this.todoGroupNoteId = todoGroupNoteId;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSProduct.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSProduct.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2590,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\nimport java.io.Serializable;\nimport java.util.List;\n\npublic class SBSProduct implements Serializable {\n  private String productId;\n  private String productAlternativeId;\n  private String productDisplayName;\n  private String productCategory;\n  private String defaultConfig;\n  private String siNoteClass;\n  private boolean active;\n  private long sequence;\n  private List<String> setupTypes;\n  private List<String> setupCategories;\n  private List<String> quoteStatus;\n  private List<String> assigneeTypes;\n\n  public String getProductId() {\n    return productId;\n  }\n\n  public void setProductId(String productId) {\n    this.productId = productId;\n  }\n\n  public String getProductAlternativeId() {\n    return productAlternativeId;\n  }\n\n  public void setProductAlternativeId(String productAlternativeId) {\n    this.productAlternativeId = productAlternativeId;\n  }\n\n  public String getProductDisplayName() {\n    return productDisplayName;\n  }\n\n  public void setProductDisplayName(String productDisplayName) {\n    this.productDisplayName = productDisplayName;\n  }\n\n  public String getProductCategory() {\n    return productCategory;\n  }\n\n  public void setProductCategory(String productCategory) {\n    this.productCategory = productCategory;\n  }\n\n  public boolean isActive() {\n    return active;\n  }\n\n  public void setActive(boolean active) {\n    this.active = active;\n  }\n\n  public long getSequence() {\n    return sequence;\n  }\n\n  public void setSequence(long sequence) {\n    this.sequence = sequence;\n  }\n\n  public List<String> getSetupTypes() {\n    return setupTypes;\n  }\n\n  public void setSetupTypes(List<String> setupTypes) {\n    this.setupTypes = setupTypes;\n  }\n\n  public List<String> getSetupCategories() {\n    return setupCategories;\n  }\n\n  public void setSetupCategories(List<String> setupCategories) {\n    this.setupCategories = setupCategories;\n  }\n\n  public List<String> getQuoteStatus() {\n    return quoteStatus;\n  }\n\n  public void setQuoteStatus(List<String> quoteStatus) {\n    this.quoteStatus = quoteStatus;\n  }\n\n  public List<String> getAssigneeTypes() {\n    return assigneeTypes;\n  }\n\n  public void setAssigneeTypes(List<String> assigneeTypes) {\n    this.assigneeTypes = assigneeTypes;\n  }\n\n  public String getDefaultConfig() {\n    return defaultConfig;\n  }\n\n  public void setDefaultConfig(String defaultConfig) {\n    this.defaultConfig = defaultConfig;\n  }\n\n  public String getSiNoteClass() {\n    return siNoteClass;\n  }\n\n  public void setSiNoteClass(String siNoteClass) {\n    this.siNoteClass = siNoteClass;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SetupCategory.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SetupCategory.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 489,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\npublic enum SetupCategory {\n  CONTRACT_EXTENSION, // Vertragsverl\u00e4ngerung\n  NEW_ESTABLISHMENT, // Neuherstellung\n  UPGRADE, // Upgrade\n  DOWNGRADE, // Downgrade\n  SERVICE, // Service\n  INFORMATION, // Beauskunftung\n  SALE, // Verkauf\n  ADD_OPTIONS, // Zusatzpaket\n  TARIFCHANGE_UPGRADE, // Tarifwechsel Upgrade\n  TARIFCHANGE_DOWNGRADE, // Tarifwechsel Downgrade\n  NEXT, // Next\n  BHWR, // BHWR\n  EXTENSION // Erweiterung\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 12787,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.ContactPerson;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.AppointmentNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote.ToDoStatus;\n\npublic class SBSNote extends SalesInfoNote {\n  private static final long serialVersionUID = 1L;\n  private CommunicationType communicationType;\n  private CommunicationChannel communicationChannel;\n  private ContactType contactType;\n  private ContactSource contactSource;\n\n  private ContactPerson contactPerson;\n\n  private List<SBSProductNote> productNotes;\n  private List<SalesInfoNote> tasks;\n  private List<AppointmentNote> appointments = new ArrayList<AppointmentNote>();\n\n  private List<Attribute> feedbackAttributes;\n  private String feedbackText;\n  private List<Attribute> reflectionAttributes;\n  private String reflectionText;\n\n  private List<ContactPerson> availableContactPersons = new ArrayList<ContactPerson>();\n  private List<ToDoGroupNote> productNoteGroups = new ArrayList<ToDoGroupNote>();\n\n  private SBSNote savedInstance;\n\n  public SBSNote() {\n    super();\n  }\n\n  /**\n   * Copy Constructor\n   * \n   * @param sBSNote a <code>SBSNote</code> object\n   */\n  public SBSNote(SBSNote sBSNote) {\n    super(sBSNote);\n    this.communicationType = sBSNote.communicationType;\n    this.communicationChannel = sBSNote.communicationChannel;\n    this.contactType = sBSNote.contactType;\n    this.contactSource = sBSNote.contactSource;\n    this.contactPerson = sBSNote.contactPerson;\n    this.productNotes = sBSNote.productNotes;\n    this.tasks = sBSNote.tasks;\n    this.appointments = sBSNote.appointments;\n    this.feedbackAttributes = sBSNote.feedbackAttributes;\n    this.feedbackText = sBSNote.feedbackText;\n    this.reflectionAttributes = sBSNote.reflectionAttributes;\n    this.reflectionText = sBSNote.reflectionText;\n  }\n\n  public CommunicationType getCommunicationType() {\n    return communicationType;\n  }\n\n  public void setCommunicationType(CommunicationType communicationType) {\n    this.communicationType = communicationType;\n  }\n\n  public CommunicationChannel getCommunicationChannel() {\n    return communicationChannel;\n  }\n\n  public void setCommunicationChannel(CommunicationChannel communicationChannel) {\n    this.communicationChannel = communicationChannel;\n  }\n\n  public ContactType getContactType() {\n    return contactType;\n  }\n\n  public void setContactType(ContactType contactType) {\n    this.contactType = contactType;\n  }\n\n  public List<SBSProductNote> getProductNotes() {\n    return productNotes;\n  }\n\n  public void setProductNotes(List<SBSProductNote> productNotes) {\n    this.productNotes = productNotes;\n  }\n\n  public List<SalesInfoNote> getTasks() {\n    return tasks;\n  }\n\n  public void setTasks(List<SalesInfoNote> tasks) {\n    this.tasks = tasks;\n  }\n\n  public List<Attribute> getFeedbackAttributes() {\n    return feedbackAttributes;\n  }\n\n  public void setFeedbackAttributes(List<Attribute> feedbackAttributes) {\n    this.feedbackAttributes = feedbackAttributes;\n  }\n\n  public String getFeedbackText() {\n    return feedbackText;\n  }\n\n  public void setFeedbackText(String feedbackText) {\n    this.feedbackText = feedbackText;\n  }\n\n  public List<Attribute> getReflectionAttributes() {\n    return reflectionAttributes;\n  }\n\n  public void setReflectionAttributes(List<Attribute> reflectionAttributes) {\n    this.reflectionAttributes = reflectionAttributes;\n  }\n\n  public String getReflectionText() {\n    return reflectionText;\n  }\n\n  public void setReflectionText(String reflectionText) {\n    this.reflectionText = reflectionText;\n  }\n\n  public ContactSource getContactSource() {\n    return contactSource;\n  }\n\n  public void setContactSource(ContactSource contactSource) {\n    this.contactSource = contactSource;\n  }\n\n  public ContactPerson getContactPerson() {\n    return contactPerson;\n  }\n\n  public void setContactPerson(ContactPerson contactPerson) {\n    this.contactPerson = contactPerson;\n  }\n\n  @Override\n  public String toString() {\n    return \"SBSNote [communicationType=\" + communicationType + \", communicationChannel=\" + communicationChannel + \", contactType=\" + contactType + \", contactSource=\" + contactSource\n        + \", productNotes=\" + productNotes + \", tasks=\" + tasks + \", appointments=\" + appointments + \", feedbackAttributes=\" + feedbackAttributes + \", feedbackText=\" + feedbackText\n        + \", reflectionAttributes=\" + reflectionAttributes + \", reflectionText=\" + reflectionText + super.toString() + \"]\";\n  }\n\n  public List<AppointmentNote> getAppointments() {\n    return appointments;\n  }\n\n  public void setAppointments(List<AppointmentNote> appointments) {\n    this.appointments = appointments;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((appointments == null) ? 0 : appointments.hashCode());\n    result = prime * result + ((availableContactPersons == null) ? 0 : availableContactPersons.hashCode());\n    result = prime * result + ((communicationChannel == null) ? 0 : communicationChannel.hashCode());\n    result = prime * result + ((communicationType == null) ? 0 : communicationType.hashCode());\n    result = prime * result + ((contactPerson == null) ? 0 : contactPerson.hashCode());\n    result = prime * result + ((contactSource == null) ? 0 : contactSource.hashCode());\n    result = prime * result + ((contactType == null) ? 0 : contactType.hashCode());\n    result = prime * result + ((feedbackAttributes == null) ? 0 : feedbackAttributes.hashCode());\n    result = prime * result + ((feedbackText == null) ? 0 : feedbackText.hashCode());\n    result = prime * result + ((productNoteGroups == null) ? 0 : productNoteGroups.hashCode());\n    result = prime * result + ((productNotes == null) ? 0 : productNotes.hashCode());\n    result = prime * result + ((reflectionAttributes == null) ? 0 : reflectionAttributes.hashCode());\n    result = prime * result + ((reflectionText == null) ? 0 : reflectionText.hashCode());\n    result = prime * result + ((tasks == null) ? 0 : tasks.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    SBSNote other = (SBSNote) obj;\n    if (appointments == null) {\n      if (other.appointments != null) {\n        return false;\n      }\n    } else if (!appointments.equals(other.appointments)) {\n      return false;\n    }\n    if (availableContactPersons == null) {\n      if (other.availableContactPersons != null) {\n        return false;\n      }\n    } else if (!availableContactPersons.equals(other.availableContactPersons)) {\n      return false;\n    }\n    if (communicationChannel != other.communicationChannel) {\n      return false;\n    }\n    if (communicationType != other.communicationType) {\n      return false;\n    }\n    if (contactPerson == null) {\n      if (other.contactPerson != null) {\n        return false;\n      }\n    } else if (!contactPerson.equals(other.contactPerson)) {\n      return false;\n    }\n    if (contactSource != other.contactSource) {\n      return false;\n    }\n    if (contactType != other.contactType) {\n      return false;\n    }\n    if (feedbackAttributes == null) {\n      if (other.feedbackAttributes != null) {\n        return false;\n      }\n    } else if (!feedbackAttributes.equals(other.feedbackAttributes)) {\n      return false;\n    }\n    if (feedbackText == null) {\n      if (other.feedbackText != null) {\n        return false;\n      }\n    } else if (!feedbackText.equals(other.feedbackText)) {\n      return false;\n    }\n    if (productNoteGroups == null) {\n      if (other.productNoteGroups != null) {\n        return false;\n      }\n    } else if (!productNoteGroups.equals(other.productNoteGroups)) {\n      return false;\n    }\n    if (productNotes == null) {\n      if (other.productNotes != null) {\n        return false;\n      }\n    } else if (!productNotes.equals(other.productNotes)) {\n      return false;\n    }\n    if (reflectionAttributes == null) {\n      if (other.reflectionAttributes != null) {\n        return false;\n      }\n    } else if (!reflectionAttributes.equals(other.reflectionAttributes)) {\n      return false;\n    }\n    if (reflectionText == null) {\n      if (other.reflectionText != null) {\n        return false;\n      }\n    } else if (!reflectionText.equals(other.reflectionText)) {\n      return false;\n    }\n    if (tasks == null) {\n      if (other.tasks != null) {\n        return false;\n      }\n    } else if (!tasks.equals(other.tasks)) {\n      return false;\n    }\n    return true;\n  }\n\n  public boolean equalsUIEditableAttributes(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    SBSNote other = (SBSNote) obj;\n\n    if (getNoteText() == null || getNoteText().isEmpty()) {\n      if (other.getNoteText() != null && !other.getNoteText().isEmpty()) {\n        return false;\n      }\n    } else if (!getNoteText().equals(other.getNoteText())) {\n      return false;\n    }\n    if (getSalesInfoNoteId() != other.getSalesInfoNoteId()) {\n      return false;\n    }\n    if (getSalesInfoNoteType() != other.getSalesInfoNoteType()) {\n      return false;\n    }\n    if (getStatus() == null) {\n      if (other.getStatus() != null) {\n        return false;\n      }\n    } else if (!getStatus().equals(other.getStatus())) {\n      return false;\n    }\n    if (getTask() == null) {\n      if (other.getTask() != null) {\n        return false;\n      }\n    } else if (!getTask().equals(other.getTask())) {\n      return false;\n    }\n\n    if (communicationChannel != other.communicationChannel) {\n      return false;\n    }\n    if (communicationType != other.communicationType) {\n      return false;\n    }\n    if (contactPerson == null) {\n      if (other.contactPerson != null) {\n        return false;\n      }\n    } else if (!contactPerson.equals(other.contactPerson)) {\n      return false;\n    }\n    if (contactSource != other.contactSource) {\n      return false;\n    }\n    if (contactType != other.contactType) {\n      return false;\n    }\n    if (feedbackAttributes == null) {\n      if (other.feedbackAttributes != null) {\n        return false;\n      }\n    } else if (!feedbackAttributes.equals(other.feedbackAttributes)) {\n      return false;\n    }\n    if (feedbackText == null || feedbackText.isEmpty()) {\n      if (other.feedbackText != null && !other.feedbackText.isEmpty()) {\n        return false;\n      }\n    } else if (!feedbackText.equals(other.feedbackText)) {\n      return false;\n    }\n    if (reflectionAttributes == null) {\n      if (other.reflectionAttributes != null) {\n        return false;\n      }\n    } else if (!reflectionAttributes.equals(other.reflectionAttributes)) {\n      return false;\n    }\n    if (reflectionText == null || reflectionText.isEmpty()) {\n      if (other.reflectionText != null && !other.reflectionText.isEmpty()) {\n        return false;\n      }\n    } else if (!reflectionText.equals(other.reflectionText)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public List<ContactPerson> getAvailableContactPersons() {\n    return availableContactPersons;\n  }\n\n  public void setAvailableContactPersons(List<ContactPerson> availableContactPersons) {\n    this.availableContactPersons = availableContactPersons;\n  }\n\n  public List<ToDoGroupNote> getProductNoteGroups() {\n    return productNoteGroups;\n  }\n\n  public void setProductNoteGroups(List<ToDoGroupNote> productNoteGroups) {\n    this.productNoteGroups = productNoteGroups;\n  }\n\n  public SBSNote getSavedInstance() {\n    if (savedInstance == null) {\n      return new SBSNote(this);\n    }\n    return savedInstance;\n  }\n\n  public void setSavedInstance(SBSNote savedInstance) {\n    this.savedInstance = savedInstance;\n  }\n\n  public boolean hasAnyOpenProductNote() {\n    if (getProductNotes() == null || getProductNotes().isEmpty()) {\n      return false;\n    }\n    for (SBSProductNote note : getProductNotes()) {\n      if (note.getQuoteStatus() != QuoteStatus.ACCEPTED && note.getQuoteStatus() != QuoteStatus.DECLINED && note.getQuoteStatus() != QuoteStatus.OBSOLETE) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public boolean hasAnyOpenToDos() {\n    if (getProductNoteGroups() == null || getProductNoteGroups().isEmpty()) {\n      return false;\n    }\n\n    for (ToDoGroupNote note : getProductNoteGroups()) {\n      if (note.getToDoGroupstatus() != ToDoStatus.DONE) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/QuoteStatus.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/QuoteStatus.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 150,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\npublic enum QuoteStatus {\n  OPEN, PUT, ACCEPTED, DECLINED, OBSOLETE, POST_CREATION\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/ContactType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/ContactType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 156,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\npublic enum ContactType {\n  SERVICE_BUSINESS_CASE, SALES_PITCH, ESCALATION, CUSTOMER_CARE\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/VisitReportDetail.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/VisitReportDetail.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 542,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\nimport java.io.Serializable;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\n\npublic class VisitReportDetail implements Serializable {\n  private SalesInfoNote note;\n  private boolean editable;\n\n  public SalesInfoNote getNote() {\n    return note;\n  }\n\n  public void setNote(SalesInfoNote note) {\n    this.note = note;\n  }\n\n  public boolean isEditable() {\n    return editable;\n  }\n\n  public void setEditable(boolean editable) {\n    this.editable = editable;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/CommunicationChannel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/CommunicationChannel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 121,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\npublic enum CommunicationChannel {\n  INBOUND, OUTBOUND\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSProductNoteConfig.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/sbs/SBSProductNoteConfig.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 571,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs;\n\nimport java.io.Serializable;\nimport java.util.List;\n\npublic class SBSProductNoteConfig implements Serializable {\n  private List<SBSProduct> products;\n  private List<SBSOrgUnit> orgUnits;\n\n  public List<SBSProduct> getProducts() {\n    return products;\n  }\n\n  public void setProducts(List<SBSProduct> products) {\n    this.products = products;\n  }\n\n  public List<SBSOrgUnit> getOrgUnits() {\n    return orgUnits;\n  }\n\n  public void setOrgUnits(List<SBSOrgUnit> orgUnits) {\n    this.orgUnits = orgUnits;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/generic/GenericNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/generic/GenericNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 905,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\n\npublic class GenericNote extends SalesInfoNote {\n  private List<FileAttachment> fileAttachments;\n\n  /**\n   * Copy Constructor\n   * \n   * @param genericNote a <code>GenericNote</code> object\n   */\n  public GenericNote(GenericNote genericNote) {\n    super(genericNote);\n    this.fileAttachments = genericNote.fileAttachments;\n  }\n  \n  public GenericNote() {\n    super();\n    \n  }\n  \n\n  public List<FileAttachment> getFileAttachments() {\n    return fileAttachments;\n  }\n\n  public void setFileAttachments(List<FileAttachment> fileAttachments) {\n    this.fileAttachments = fileAttachments;\n  }\n\n  @Override\n  public String toString() {\n    return \"GenericReport [super.toString()=\" + super.toString() + \", fileAttachments=\" + fileAttachments + \"]\";\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/generic/FileAttachment.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/visitreport/generic/FileAttachment.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3825,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class FileAttachment implements Serializable {\n\n  /**\n   * Copy Constructor\n   * \n   * @param fileAttachment a <code>FileAttachment</code> object\n   */\n  public FileAttachment(FileAttachment fileAttachment) {\n    this.salesInfoNoteId = fileAttachment.salesInfoNoteId;\n    this.fileAttachmentId = fileAttachment.fileAttachmentId;\n    this.fileName = fileAttachment.fileName;\n    this.creationUser = fileAttachment.creationUser;\n    this.creationTimestamp = fileAttachment.creationTimestamp;\n    this.checked = fileAttachment.checked;\n  }\n\n  public FileAttachment() {\n    super();\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + (checked ? 1231 : 1237);\n    result = prime * result + ((creationTimestamp == null) ? 0 : creationTimestamp.hashCode());\n    result = prime * result + ((creationUser == null) ? 0 : creationUser.hashCode());\n    result = prime * result + (int) (fileAttachmentId ^ (fileAttachmentId >>> 32));\n    result = prime * result + ((fileName == null) ? 0 : fileName.hashCode());\n    result = prime * result + (int) (salesInfoNoteId ^ (salesInfoNoteId >>> 32));\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (obj == null) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    FileAttachment other = (FileAttachment) obj;\n    if (checked != other.checked) {\n      return false;\n    }\n    if (creationTimestamp == null) {\n      if (other.creationTimestamp != null) {\n        return false;\n      }\n    } else if (!creationTimestamp.equals(other.creationTimestamp)) {\n      return false;\n    }\n    if (creationUser == null) {\n      if (other.creationUser != null) {\n        return false;\n      }\n    } else if (!creationUser.equals(other.creationUser)) {\n      return false;\n    }\n    if (fileAttachmentId != other.fileAttachmentId) {\n      return false;\n    }\n    if (fileName == null) {\n      if (other.fileName != null) {\n        return false;\n      }\n    } else if (!fileName.equals(other.fileName)) {\n      return false;\n    }\n    if (salesInfoNoteId != other.salesInfoNoteId) {\n      return false;\n    }\n    return true;\n  }\n\n  private long salesInfoNoteId;\n  private long fileAttachmentId;\n  private String fileName;\n  private BiteUser creationUser;\n  private Date creationTimestamp;\n\n  private boolean checked = false;\n\n  public long getSalesInfoNoteId() {\n    return salesInfoNoteId;\n  }\n\n  public void setSalesInfoNoteId(long salesInfoNoteId) {\n    this.salesInfoNoteId = salesInfoNoteId;\n  }\n\n  public long getFileAttachmentId() {\n    return fileAttachmentId;\n  }\n\n  public void setFileAttachmentId(long fileAttachmentId) {\n    this.fileAttachmentId = fileAttachmentId;\n  }\n\n  public String getFileName() {\n    return fileName;\n  }\n\n  public void setFileName(String fileName) {\n    this.fileName = fileName;\n  }\n\n  public BiteUser getCreationUser() {\n    return creationUser;\n  }\n\n  public void setCreationUser(BiteUser creationUser) {\n    this.creationUser = creationUser;\n  }\n\n  public Date getCreationTimestamp() {\n    return creationTimestamp;\n  }\n\n  public void setCreationTimestamp(Date creationTimestamp) {\n    this.creationTimestamp = creationTimestamp;\n  }\n\n  @Override\n  public String toString() {\n    return \"FileAttachment [fileAttachmentId=\" + fileAttachmentId + \", fileName=\" + fileName + \", creationUser=\" + creationUser + \", creationTimestamp=\" + creationTimestamp + \"]\";\n  }\n\n  public boolean isChecked() {\n    return checked;\n  }\n\n  public void setChecked(boolean checked) {\n    this.checked = checked;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/salesconvnote/SalesConvNote.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/salesconvnote/SalesConvNote.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5991,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.FileAttachment;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote;\n\npublic class SalesConvNote extends SalesInfoNote {\n  private static final long serialVersionUID = 1L;\n\n  private ContactType contactType;\n\n  private String campaignId;\n  private String campaignName;\n  private String campaignCallNumber;\n\n  private List<Attribute> feedbackAttributes;\n  private String feedbackText;\n\n  private List<SBSProductNote> productNotes;\n\n  private List<FileAttachment> fileAttachments;\n\n  /**\n   * Copy Constructor\n   * \n   * @param salesConvNote a <code>SalesConvNote</code> object\n   */\n  public SalesConvNote(SalesConvNote salesConvNote) {\n    super(salesConvNote);\n    this.contactType = salesConvNote.contactType;\n    this.campaignId = salesConvNote.campaignId;\n    this.campaignName = salesConvNote.campaignName;\n    this.campaignCallNumber = salesConvNote.campaignCallNumber;\n    List<Attribute> attribs = new ArrayList<Attribute>();\n    for (Attribute attrib : salesConvNote.getFeedbackAttributes()) {\n      attribs.add(new Attribute(attrib));\n    }\n    this.feedbackAttributes = attribs;\n    this.feedbackText = salesConvNote.feedbackText;\n    List<SBSProductNote> notes = new ArrayList<SBSProductNote>();\n    for (SBSProductNote note : salesConvNote.getProductNotes()) {\n      notes.add(new SBSProductNote(note));\n    }\n    this.productNotes = salesConvNote.productNotes;\n    List<FileAttachment> attachments = new ArrayList<FileAttachment>();\n    for (FileAttachment atchment : salesConvNote.getFileAttachments()) {\n      attachments.add(new FileAttachment(atchment));\n    }\n    this.fileAttachments = attachments;\n  }\n\n  public SalesConvNote() {\n    super();\n  }\n\n  public List<FileAttachment> getFileAttachments() {\n    return fileAttachments;\n  }\n\n  public void setFileAttachments(List<FileAttachment> fileAttachments) {\n    this.fileAttachments = fileAttachments;\n  }\n\n  public ContactType getContactType() {\n    return contactType;\n  }\n\n  public void setContactType(ContactType contactType) {\n    this.contactType = contactType;\n  }\n\n  public List<Attribute> getFeedbackAttributes() {\n    return feedbackAttributes;\n  }\n\n  public void setFeedbackAttributes(List<Attribute> feedbackAttributes) {\n    this.feedbackAttributes = feedbackAttributes;\n  }\n\n  public String getFeedbackText() {\n    return feedbackText;\n  }\n\n  public void setFeedbackText(String feedbackText) {\n    this.feedbackText = feedbackText;\n  }\n\n  public String getCampaignId() {\n    return campaignId;\n  }\n\n  public void setCampaignId(String CampaignId) {\n    this.campaignId = CampaignId;\n  }\n\n  public String getCampaignName() {\n    return campaignName;\n  }\n\n  public void setCampaignName(String CampaignName) {\n    this.campaignName = CampaignName;\n  }\n\n  public List<SBSProductNote> getProductNotes() {\n    return productNotes;\n  }\n\n  public void setProductNotes(List<SBSProductNote> productNotes) {\n    this.productNotes = productNotes;\n  }\n\n  public String getCampaignCallNumber() {\n    return campaignCallNumber;\n  }\n\n  public void setCampaignCallNumber(String campaignCallNumber) {\n    this.campaignCallNumber = campaignCallNumber;\n  }\n\n  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((campaignCallNumber == null) ? 0 : campaignCallNumber.hashCode());\n    result = prime * result + ((campaignId == null) ? 0 : campaignId.hashCode());\n    result = prime * result + ((campaignName == null) ? 0 : campaignName.hashCode());\n    result = prime * result + ((contactType == null) ? 0 : contactType.hashCode());\n    result = prime * result + ((feedbackAttributes == null) ? 0 : feedbackAttributes.hashCode());\n    result = prime * result + ((feedbackText == null) ? 0 : feedbackText.hashCode());\n    result = prime * result + ((fileAttachments == null) ? 0 : fileAttachments.hashCode());\n    result = prime * result + ((productNotes == null) ? 0 : productNotes.hashCode());\n    return result;\n  }\n\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (getClass() != obj.getClass()) {\n      return false;\n    }\n    SalesConvNote other = (SalesConvNote) obj;\n    if (campaignCallNumber == null) {\n      if (other.campaignCallNumber != null) {\n        return false;\n      }\n    } else if (!campaignCallNumber.equals(other.campaignCallNumber)) {\n      return false;\n    }\n    if (campaignId == null) {\n      if (other.campaignId != null) {\n        return false;\n      }\n    } else if (!campaignId.equals(other.campaignId)) {\n      return false;\n    }\n    if (campaignName == null) {\n      if (other.campaignName != null) {\n        return false;\n      }\n    } else if (!campaignName.equals(other.campaignName)) {\n      return false;\n    }\n    if (contactType != other.contactType) {\n      return false;\n    }\n    if (feedbackAttributes == null) {\n      if (other.feedbackAttributes != null) {\n        return false;\n      }\n    } else if (!feedbackAttributes.equals(other.feedbackAttributes)) {\n      return false;\n    }\n    if (feedbackText == null) {\n      if (other.feedbackText != null) {\n        return false;\n      }\n    } else if (!feedbackText.equals(other.feedbackText)) {\n      return false;\n    }\n    if (fileAttachments == null) {\n      if (other.fileAttachments != null) {\n        return false;\n      }\n    } else if (!fileAttachments.equals(other.fileAttachments)) {\n      return false;\n    }\n    if (productNotes == null) {\n      if (other.productNotes != null) {\n        return false;\n      }\n    } else if (!productNotes.equals(other.productNotes)) {\n      return false;\n    }\n    return true;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/salesconvnote/TeamEmailAdminGroup.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/salesconvnote/TeamEmailAdminGroup.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 985,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote;\n\nimport java.io.Serializable;\n\npublic class TeamEmailAdminGroup implements Serializable {\n\n  private Integer id;\n  private String teamName;\n  private String teamEmail;\n  private String userList;\n  private Boolean isDefault;\n\n  public TeamEmailAdminGroup() {\n\n  }\n\n  public int getId() {\n    return id;\n  }\n\n  public void setId(int id) {\n    this.id = id;\n  }\n\n  public String getTeamName() {\n    return teamName;\n  }\n\n  public void setTeamName(String teamName) {\n    this.teamName = teamName;\n  }\n\n  public String getTeamEmail() {\n    return teamEmail;\n  }\n\n  public void setTeamEmail(String teamEmail) {\n    this.teamEmail = teamEmail;\n  }\n\n  public String getUserList() {\n    return userList;\n  }\n\n  public void setUserList(String userList) {\n    this.userList = userList;\n  }\n\n  public boolean isDefault() {\n    return isDefault;\n  }\n\n  public void setDefault(boolean isDefault) {\n    this.isDefault = isDefault;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/salesconvnote/ProductHistoryItem.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/salesconvnote/ProductHistoryItem.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1059,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\n\npublic class ProductHistoryItem implements Serializable {\n\n  private Long id;\n  private Long productNoteId;\n  private String note;\n  private BiteUser creationUser;\n  private Date creationDate;\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getNote() {\n    return note;\n  }\n\n  public void setNote(String note) {\n    this.note = note;\n  }\n\n  public Long getProductNoteId() {\n    return productNoteId;\n  }\n\n  public void setProductNoteId(Long productNoteId) {\n    this.productNoteId = productNoteId;\n  }\n\n  public BiteUser getCreationUser() {\n    return creationUser;\n  }\n\n  public void setCreationUser(BiteUser creationUser) {\n    this.creationUser = creationUser;\n  }\n\n  public Date getCreationDate() {\n    return creationDate;\n  }\n\n  public void setCreationDate(Date creationDate) {\n    this.creationDate = creationDate;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/salesconvnote/ContactType.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/dto/salesinfo/salesconvnote/ContactType.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 137,
    "content": "package at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote;\n\npublic enum ContactType {\n  PHONE_OUTBOUND, PHONE_INBOUND, LEAD, MAIL;\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/PhonenumberValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/PhonenumberValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 134,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class PhonenumberValidator {\n\n  public boolean isValid() {\n    return true;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/PartyIdValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/PartyIdValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 532,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class PartyIdValidator {\n\n  public PartyIdValidator() {}\n\n  public boolean isValid(String value) {\n    if (CommonValidator.isBlank(value)) {\n      return true;\n    }\n    return isValidLeadSearch(value) || (value.length() == 9 && CommonValidator.containsOnlyDigits(value));\n  }\n\n  private boolean isValidLeadSearch(String value) {\n    return value.trim().toUpperCase().startsWith(\"L\") && CommonValidator.containsOnlyDigits(value.trim().toUpperCase().replaceFirst(\"L\", \"\"));\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/BANValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/BANValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 293,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class BANValidator {\n\n  public BANValidator() {}\n\n  public boolean isValid(String value) {\n    if (CommonValidator.isBlank(value)) {\n      return true;\n    }\n    return value.length() == 9 && CommonValidator.containsOnlyDigits(value);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/OfferNumberValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/OfferNumberValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 279,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class OfferNumberValidator {\n\n  public OfferNumberValidator() {\n    // Default Constructor\n  }\n\n  public boolean isValid(String value) {\n    if (CommonValidator.isBlank(value)) {\n      return true;\n    }\n    return true;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/LastnameValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/LastnameValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 246,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class LastnameValidator {\n\n  public LastnameValidator() {}\n\n  public boolean isValid(String value) {\n    return CommonValidator.isBlank(value) || CommonValidator.isStringLonger(value, 3);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/ZipCodeValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/ZipCodeValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 332,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class ZipCodeValidator {\n\n  public ZipCodeValidator() {}\n\n  public boolean isValid(String value) {\n    if (CommonValidator.isBlank(value)) {\n      return true;\n    }\n    return CommonValidator.isStringLengthBetween(value, 4, 5) && CommonValidator.containsOnlyDigits(value);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/HousenumberValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/HousenumberValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 168,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class HousenumberValidator {\n\n  public boolean isValid() {\n    return true; // can contain also special chars\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/OneTVUserValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/OneTVUserValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 309,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class OneTVUserValidator {\n\n  public OneTVUserValidator() {\n    // Default Constructor\n  }\n\n  public boolean isValid(String value, String pattern) {\n    if (CommonValidator.isBlank(value)) {\n      return true;\n    }\n    return value.matches(pattern);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/BvkUserValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/BvkUserValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 304,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class BvkUserValidator {\n  public BvkUserValidator() {\n    // Default Constructor\n  }\n\n  public boolean isValid(String value, String pattern) {\n    if (CommonValidator.isBlank(value)) {\n      return true;\n    }\n    return value.matches(pattern);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/FirstnameValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/FirstnameValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 132,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class FirstnameValidator {\n\n  public boolean isValid() {\n    return true;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/StreetValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/StreetValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 242,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class StreetValidator {\n\n  public StreetValidator() {}\n\n  public boolean isValid(String value) {\n    return CommonValidator.isBlank(value) || CommonValidator.isStringLonger(value, 3);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/AONNumberValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/AONNumberValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 326,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class AONNumberValidator {\n\n  public AONNumberValidator() {}\n\n  public boolean isValid(String value) {\n    if (CommonValidator.isBlank(value)) {\n      return true;\n    }\n    return CommonValidator.isStringLonger(value, 6) && CommonValidator.containsOnlyDigits(value);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/CityValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/CityValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 238,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class CityValidator {\n\n  public CityValidator() {}\n\n  public boolean isValid(String value) {\n    return CommonValidator.isBlank(value) || CommonValidator.isStringLonger(value, 2);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/CommonValidator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/validator/CommonValidator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 659,
    "content": "package at.a1ta.cuco.core.shared.validator;\n\npublic class CommonValidator {\n\n  public static boolean containsOnlyDigits(String value) {\n    String onlyDigits = value.replaceAll(\"[^0-9]\", \"\");\n    return !value.isEmpty() && value.equals(onlyDigits);\n  }\n\n  public static boolean isStringLengthBetween(String value, int minLen, int maxLen) {\n    return value != null && value.length() >= minLen && value.length() <= maxLen;\n  }\n\n  public static boolean isStringLonger(String value, int minLen) {\n    return value != null && value.length() >= minLen;\n  }\n\n  public static boolean isBlank(String value) {\n    return value == null || value.trim().isEmpty();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/PartyModel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/PartyModel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6231,
    "content": "package at.a1ta.cuco.core.shared.model;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class PartyModel implements Serializable {\n\n  private static final long serialVersionUID = 1L;\n  private Long id;\n  private String bans;\n  private String commercialRegisterNumber;\n  private String businessSegment;\n  private String serviceClass;\n  private String gender;\n  private String firstname;\n  private String lastname;\n  private String addressLine1;\n  private String addressLine2;\n  private Date birthdate;\n  private String region;\n  private String teamName;\n  private String supportUserName;\n  private String attendingShop;\n  private String customerType;\n  private String npsString;\n  private String type;\n  private String churnLikeliness;\n  private String accumulatedChurnLikeliness;\n  private String customerWorthiness;\n  private String cooperation;\n  private String framework;\n  private String creditworthiness;\n  private String faxNumber;\n  private String vipStatus;\n  private String posString;\n  private String binding;\n  private String assocRegisterNumber;\n  private String indexation;\n  private String eveStatus;\n  private String a1ConnectPlusInfo;\n\n  public Long getId() {\n    return id;\n  }\n\n  public String getBans() {\n    return bans;\n  }\n\n  public String getCommercialRegisterNumber() {\n    return commercialRegisterNumber;\n  }\n\n  public String getBusinessSegment() {\n    return businessSegment;\n  }\n\n  public String getGender() {\n    return gender;\n  }\n\n  public String getName() {\n    return firstname + \" \" + lastname;\n  }\n\n  public String getAddress() {\n    return addressLine1 + \", \" + addressLine2;\n  }\n\n  public Date getBirthdate() {\n    return birthdate;\n  }\n\n  public String getRegion() {\n    return region;\n  }\n\n  public String getTeamName() {\n    return teamName;\n  }\n\n  public String getSupportUserName() {\n    return supportUserName;\n  }\n\n  public String getCustomerType() {\n    return customerType;\n  }\n\n  public String getType() {\n    return type;\n  }\n\n  public String getChurnLikeliness() {\n    return churnLikeliness;\n  }\n\n  public String getCustomerWorthiness() {\n    return customerWorthiness;\n  }\n\n  public String getCooperation() {\n    return cooperation;\n  }\n\n  public String getFramework() {\n    return framework;\n  }\n\n  public String getCreditworthiness() {\n    return creditworthiness;\n  }\n\n  public String getFaxNumber() {\n    return faxNumber;\n  }\n\n  public String getVipStatus() {\n    return vipStatus;\n  }\n\n  public String getBinding() {\n    return binding;\n  }\n\n  public String getAssocRegisterNumber() {\n    return assocRegisterNumber;\n  }\n\n  public String getIndexation() {\n    return indexation;\n  }\n\n  void setId(Long id) {\n    this.id = id;\n  }\n\n  void setBans(String bans) {\n    this.bans = bans;\n  }\n\n  void setCommercialRegisterNumber(String commercialRegisterNumber) {\n    this.commercialRegisterNumber = commercialRegisterNumber;\n  }\n\n  void setBusinessSegment(String businessSegment) {\n    this.businessSegment = businessSegment;\n  }\n\n  void setGender(String gender) {\n    this.gender = gender;\n  }\n\n  void setBirthdate(Date birthdate) {\n    this.birthdate = birthdate;\n  }\n\n  void setRegion(String region) {\n    this.region = region;\n  }\n\n  void setTeamName(String teamName) {\n    this.teamName = teamName;\n  }\n\n  void setSupportUserName(String supportUserName) {\n    this.supportUserName = supportUserName;\n  }\n\n  void setCustomerType(String customerType) {\n    this.customerType = customerType;\n  }\n\n  void setType(String type) {\n    this.type = type;\n  }\n\n  void setChurnLikeliness(String churnLikeliness) {\n    this.churnLikeliness = churnLikeliness;\n  }\n\n  void setCustomerWorthiness(String customerWorthiness) {\n    this.customerWorthiness = customerWorthiness;\n  }\n\n  void setCooperation(String cooperation) {\n    this.cooperation = cooperation;\n  }\n\n  void setFramework(String framework) {\n    this.framework = framework;\n  }\n\n  void setCreditworthiness(String creditworthiness) {\n    this.creditworthiness = creditworthiness;\n  }\n\n  void setFaxNumber(String faxNumber) {\n    this.faxNumber = faxNumber;\n  }\n\n  void setVipStatus(String vipStatus) {\n    this.vipStatus = vipStatus;\n  }\n\n  void setBinding(String binding) {\n    this.binding = binding;\n  }\n\n  void setAssocRegisterNumber(String assocRegisterNumber) {\n    this.assocRegisterNumber = assocRegisterNumber;\n  }\n\n  public String getAddressLine1() {\n    return addressLine1;\n  }\n\n  public void setAddressLine1(String addressLine1) {\n    this.addressLine1 = addressLine1;\n  }\n\n  public String getAddressLine2() {\n    return addressLine2;\n  }\n\n  public void setAddressLine2(String addressLine2) {\n    this.addressLine2 = addressLine2;\n  }\n\n  public String getFirstname() {\n    return firstname;\n  }\n\n  public void setFirstname(String firstname) {\n    this.firstname = firstname;\n  }\n\n  public String getLastname() {\n    return lastname;\n  }\n\n  public void setLastname(String lastname) {\n    this.lastname = lastname;\n  }\n\n  public void setAccumulatedChurnLikeliness(String accumulatedChurnLikeliness) {\n    this.accumulatedChurnLikeliness = accumulatedChurnLikeliness;\n  }\n\n  public String getAccumulatedChurnLikeliness() {\n    return accumulatedChurnLikeliness;\n  }\n\n  public String getAttendingShop() {\n    return attendingShop;\n  }\n\n  public void setAttendingShop(String attendingShop) {\n    this.attendingShop = attendingShop;\n  }\n\n  void setIndexation(String indexation) {\n    this.indexation = indexation;\n  }\n\n  public String getServiceClass() {\n    return serviceClass;\n  }\n\n  public void setServiceClass(String serviceClass) {\n    this.serviceClass = serviceClass;\n  }\n\n  public String getPosString() {\n    return posString;\n  }\n\n  public void setPosString(String posString) {\n    this.posString = posString;\n  }\n\n  public String getEveStatus() {\n    return eveStatus;\n  }\n\n  public void setEveStatus(String eveStatus) {\n    this.eveStatus = eveStatus;\n  }\n\n  public String getNpsString() {\n    return npsString;\n  }\n\n  public void setNpsString(String npsString) {\n    this.npsString = npsString;\n  }\n\n  public String getA1ConnectPlusInfo() {\n    return a1ConnectPlusInfo;\n  }\n\n  public void setA1ConnectPlusInfo(String a1ConnectPlusInfo) {\n    this.a1ConnectPlusInfo = a1ConnectPlusInfo;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/DualSegment.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/DualSegment.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1102,
    "content": "package at.a1ta.cuco.core.shared.model;\n\nimport java.util.EnumSet;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic enum DualSegment {\n  ALL(8, \"Alle\"), WIRED(1, \"Festnetz\"), MOBILE(2, \"Mobilfunk\"), DUAL(3, \"Dual\"), CONVERGENT(4, \"Konvergent\"), CONVERGENTWIRED(5, \"Festnetz & konvergent\"), CONVERGENTMOBILE(6, \"Mobilfunk & konvergent\"), DUALCONVERGENT(7, \"Dual & konvergent\"), NONCUSTOMER(9, \"Nicht-Kunden\"), UNKNOWN(-1, \"Unbekannt\");\n\n  private static final Map<Integer, DualSegment> lookup = new HashMap<Integer, DualSegment>();\n\n  static {\n    for (DualSegment dualSegment : EnumSet.allOf(DualSegment.class)) {\n      lookup.put(dualSegment.getCode(), dualSegment);\n    }\n  }\n\n  private int code;\n  private String title;\n\n  private DualSegment(int code, String title) {\n    this.code = code;\n    this.title = title;\n  }\n\n  public int getCode() {\n    return code;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public static DualSegment get(int code) {\n    DualSegment segment = lookup.get(code);\n    if (segment == null) {\n      segment = UNKNOWN;\n    }\n    return segment;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/PartyModelFactory.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/PartyModelFactory.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 11311,
    "content": "package at.a1ta.cuco.core.shared.model;\n\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.MobileChurnLikeliness;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartyCustomerLoyaltyInfo;\nimport at.a1ta.cuco.core.shared.dto.PartyProfileInfo;\nimport at.a1ta.cuco.core.shared.dto.PartyProfileNPSInfo;\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\nimport at.a1ta.cuco.core.shared.dto.ServiceClassInfo;\nimport at.a1ta.cuco.core.shared.dto.VipStatus.State;\n\npublic class PartyModelFactory {\n\n  enum MobileChurnLikelinessType {\n    HIGH(2), MEDIUM(3), LOW(4), NONE(5), UNKNOWN(6);\n\n    private final int order;\n\n    MobileChurnLikelinessType(int order) {\n      this.order = order;\n    }\n\n    public int getOrder() {\n      return order;\n    }\n  }\n\n  private static final String PRIO_UNKNOWN_TEXT = \"1. Unbekannt\";\n  private static final String PRIO_HIGH_TEXT = \"2. Hoch\";\n  private static final String PRIO_MEDIUM_TEXT = \"3. Mittel\";\n  private static final String PRIO_LOW_TEXT = \"4. Gering\";\n  private static final String PRIO_NONE_TEXT = \"5. Kein\";\n\n  private static final String DISPLAY_UNKNOWN_TEXT = \"Unbekannt\";\n  private static final String DISPLAY_HIGH_TEXT = \"Hoch\";\n  private static final String DISPLAY_MEDIUM_TEXT = \"Mittel\";\n  private static final String DISPLAY_LOW_TEXT = \"Gering\";\n  private static final String DISPLAY_NONE_TEXT = \"Kein\";\n\n  public static PartyModel createPartyModel(Party party) {\n    PartyModel result = new PartyModel();\n\n    result.setId(party.getId());\n    result.setCommercialRegisterNumber(party.getCommercialRegisterNumber());\n    result.setBusinessSegment(party.getBusinessSegment());\n    result.setServiceClass((!(party.isSBSCustomer() && (party.getServiceClassInfo() != null && party.getServiceClassInfo().getServiceClass() != ServiceClassInfo.SERVICE_CLASS_NOT_RECEIVED)))\n        || party.getServiceClassInfo().getServiceClassText() == null ? \"\" : party.getServiceClassInfo().getServiceClassText());\n    result.setGender(getGender(party));\n    result.setFirstname(party.getFirstname());\n    result.setLastname(party.getLastname());\n    result.setAddressLine1(party.getAddressLine1());\n    result.setAddressLine2(party.getAddressLine2());\n    result.setBirthdate(party.getBirthdate());\n    result.setRegion(party.getRegion());\n    result.setTeamName(party.getTeamName());\n    result.setSupportUserName(!isAttended(party) ? party.getSupportUserName() : \"Kein Betreuer\");\n    result.setIndexation(party.getIndexation());\n    result.setAttendingShop(isAttended(party) ? party.getKumsSkzShop().getBetreuteStelleNam() : \"Kein Shop\");\n    result.setNpsString(getNPSText(party));\n    result.setCustomerType(getCustomerType(party));\n    result.setType(getType(party) + (party.isLead() ? (\"(\" + party.getLeadId() + \")\") : \"\"));\n    result.setChurnLikeliness(getDisplayChurnText(party.getChurnLikeliness()));\n    result.setCustomerWorthiness(party.getCustomerWorthclass());\n    result.setFramework(party.isListedInFramework() ? \"ja\" : \"nein\");\n    result.setCreditworthiness(party.getCreditworthiness());\n    result.setFaxNumber(party.getFaxNumber());\n    result.setVipStatus(getVipStatus(party));\n    result.setAssocRegisterNumber(party.getCentralAssociationNumber());\n    result.setBinding(party.getCurrentBinding());\n    result.setCooperation(party.getCooperationDescription());\n    result.setBans(getBans(party));\n    result.setPosString(getPOSText(party));\n    result.setEveStatus(getEVEText(party));\n    if (party.getMobileChurnLikeliness() != null && !party.getMobileChurnLikeliness().isEmpty()) {\n      result.setAccumulatedChurnLikeliness(getDisplayChurnText(getAccumulatedChurnLikeliness(party)));\n    }\n    result.setA1ConnectPlusInfo(getA1ConnectPlusText(party));\n    return result;\n  }\n\n  private static String getPOSText(Party party) {\n    if (party.getPOSInfo() != null) {\n      if (party.getPOSInfo().getStaus() == PointOfSaleInfo.LOADING) {\n        return \"wird geladen...\";\n      } else if (party.getPOSInfo().getStaus() == PointOfSaleInfo.LOADED) {\n        return party.getPOSInfo().getNameAddressString();\n      } else if (party.getPOSInfo().getStaus() == PointOfSaleInfo.ERROR) {\n        return \"nicht verf\u00fcgbar\";\n      } else {\n        return \"-\";\n      }\n    }\n    return \"-\";\n  }\n\n  private static String getEVEText(Party party) {\n    if (party.getDeclarationOfConsentInfo() != null) {\n      if (party.getDeclarationOfConsentInfo().getStaus() == PointOfSaleInfo.LOADING) {\n        return \"wird geladen...\";\n      } else if (party.getDeclarationOfConsentInfo().getStaus() == PointOfSaleInfo.LOADED) {\n        return party.getDeclarationOfConsentInfo().getStatusNeedForAction().getDisplayText();\n      } else if (party.getDeclarationOfConsentInfo().getStaus() == PointOfSaleInfo.ERROR) {\n        return \"nicht verf\u00fcgbar\";\n      } else {\n        return \"-\";\n      }\n    }\n    return \"-\";\n  }\n\n  private static String getNPSText(Party party) {\n    if (party.getPartyProfileInfo() != null) {\n      if (party.getPartyProfileInfo().getStaus() == PartyProfileInfo.LOADING) {\n        return \"wird geladen...\";\n      } else if (party.getPartyProfileInfo().getStaus() == PartyProfileInfo.LOADED) {\n        if (party.getPartyProfileInfo().getScores().isEmpty()) {\n          return \"-\";\n        } else {\n          StringBuilder sb = new StringBuilder();\n          for (PartyProfileNPSInfo partyProfileNPSInfo : party.getPartyProfileInfo().getScores()) {\n            sb.append(partyProfileNPSInfo.getCompleteNpsStatus() + \"\\n\");\n          }\n          return sb.toString();\n        }\n      } else if (party.getPartyProfileInfo().getStaus() == PartyProfileInfo.ERROR) {\n        return \"NPS kann nicht abgefragt werden.\";\n      } else {\n        return \"-\";\n      }\n    }\n    return \"-\";\n  }\n\n  private static String getA1ConnectPlusText(Party party) {\n    if (party.getPartyCustomerLoyaltyInfo() != null) {\n      if (party.getPartyCustomerLoyaltyInfo().getStaus() == PartyCustomerLoyaltyInfo.LOADING) {\n        return \"wird geladen...\";\n      } else if (party.getPartyCustomerLoyaltyInfo().getStaus() == PartyCustomerLoyaltyInfo.LOADED) {\n        return party.getPartyCustomerLoyaltyInfo().isConnectPlusCustomer() ? \"aktiv\" : \"-\";\n      } else if (party.getPartyCustomerLoyaltyInfo().getStaus() == PartyCustomerLoyaltyInfo.ERROR) {\n        return \"Connect Plus Status kann nicht abgefragt werden.\";\n      } else {\n        return \"-\";\n      }\n    }\n    return \"-\";\n  }\n\n  private static boolean isAttended(Party party) {\n    return party.getKumsSkzShop() != null && party.getKumsSkzShop().isShopBetreut();\n  }\n\n  public static String getDisplayChurnText(String churnLikeliness) {\n    if (churnLikeliness == null) {\n      return DISPLAY_UNKNOWN_TEXT;\n    }\n    if (churnLikeliness.startsWith(\"2\")) {\n      return DISPLAY_HIGH_TEXT;\n    }\n    if (churnLikeliness.startsWith(\"3\")) {\n      return DISPLAY_MEDIUM_TEXT;\n    }\n    if (churnLikeliness.startsWith(\"4\")) {\n      return DISPLAY_LOW_TEXT;\n    }\n    if (churnLikeliness.startsWith(\"5\")) {\n      return DISPLAY_NONE_TEXT;\n    }\n    return DISPLAY_UNKNOWN_TEXT;\n  }\n\n  private static String getAccumulatedChurnLikeliness(Party party) {\n    String wiredChurn = convertWiredChurnLikeliness(party.getChurnLikeliness());\n    String mobileChurn = getMaxMobileChurnLikeliness(party);\n\n    if (wiredChurn == null || wiredChurn.startsWith(\"(\")) {\n      return MobileChurnLikelinessType.UNKNOWN.name().equalsIgnoreCase(mobileChurn) ? DISPLAY_UNKNOWN_TEXT : mobileChurn;\n    }\n    if (mobileChurn == null || mobileChurn.equalsIgnoreCase(MobileChurnLikelinessType.UNKNOWN.name())) {\n      return wiredChurn;\n    }\n    int churnId = Integer.parseInt(wiredChurn.charAt(0) + \"\");\n    int mobileChurnId = Integer.parseInt(mobileChurn.charAt(0) + \"\");\n\n    return churnId > mobileChurnId ? mobileChurn : wiredChurn;\n  }\n\n  private static String getMaxMobileChurnLikeliness(Party party) {\n    MobileChurnLikelinessType maxChurn = MobileChurnLikelinessType.UNKNOWN;\n    for (MobileChurnLikeliness churn : party.getMobileChurnLikeliness()) {\n      String likeliness = churn.getChurnLikeliness() == null ? MobileChurnLikelinessType.UNKNOWN.name() : churn.getChurnLikeliness();\n      if (MobileChurnLikelinessType.valueOf(likeliness).getOrder() < maxChurn.getOrder()) {\n        maxChurn = MobileChurnLikelinessType.valueOf(likeliness);\n      }\n    }\n    party.setMaxMobileChurnLikeliness(maxChurn.name());\n\n    return convertMobileChurnLikeliness(party.getMaxMobileChurnLikeliness());\n  }\n\n  private static String convertWiredChurnLikeliness(String churnLikeliness) {\n    if (churnLikeliness == null) {\n      return null;\n    }\n    if (churnLikeliness.contains(DISPLAY_HIGH_TEXT)) {\n      return PRIO_HIGH_TEXT;\n    }\n    if (churnLikeliness.contains(DISPLAY_MEDIUM_TEXT)) {\n      return PRIO_MEDIUM_TEXT;\n    }\n    if (churnLikeliness.contains(DISPLAY_LOW_TEXT)) {\n      return PRIO_LOW_TEXT;\n    }\n    if (churnLikeliness.contains(DISPLAY_NONE_TEXT)) {\n      return PRIO_NONE_TEXT;\n    }\n    return PRIO_UNKNOWN_TEXT;\n  }\n\n  private static String convertMobileChurnLikeliness(String churnLikeliness) {\n    if (churnLikeliness == null) {\n      return null;\n    }\n    if (churnLikeliness.equalsIgnoreCase(MobileChurnLikelinessType.HIGH.name())) {\n      return PRIO_HIGH_TEXT;\n    }\n    if (churnLikeliness.equalsIgnoreCase(MobileChurnLikelinessType.MEDIUM.name())) {\n      return PRIO_MEDIUM_TEXT;\n    }\n    if (churnLikeliness.equalsIgnoreCase(MobileChurnLikelinessType.LOW.name())) {\n      return PRIO_LOW_TEXT;\n    }\n    if (churnLikeliness.equalsIgnoreCase(MobileChurnLikelinessType.NONE.name())) {\n      return PRIO_NONE_TEXT;\n    }\n    return PRIO_UNKNOWN_TEXT;\n  }\n\n  private static String getVipStatus(Party party) {\n    String result;\n\n    if (party.getVipStatus() == null) {\n      result = \"Daten werden geladen ...\";\n    } else if (party.isVip()) {\n      result = \"VIP\";\n    } else if (party.getVipStatus().getState() == State.UNKNOWN) {\n      result = \"unbekannt\";\n    } else {\n      result = \"Kein VIP\";\n    }\n\n    return result;\n  }\n\n  private static String getType(Party party) {\n    return getType(party.getType());\n  }\n\n  public static String getType(int type) {\n    return DualSegment.get(type).name();\n  }\n\n  public static String getTitle(int type) {\n    return DualSegment.get(type).getTitle();\n  }\n\n  private static String getBans(Party party) {\n    StringBuilder result = new StringBuilder();\n    if (party.getBillingAccountNumbers() == null || party.getBillingAccountNumbers().size() == 0) {\n      return result.toString();\n    }\n\n    int idx = 0;\n    for (BillingAccountNumber ban : party.getBillingAccountNumbers()) {\n      if (idx++ > 0) {\n        result.append(\", \");\n      }\n      result.append(ban.getBan());\n    }\n\n    return result.toString();\n  }\n\n  private static String getCustomerType(Party party) {\n    if (\"Per\".equals(party.getCustomerType())) {\n      return \"Person\";\n    }\n    if (\"Org\".equals(party.getCustomerType())) {\n      return \"Organisation\";\n    }\n    return \"\";\n  }\n\n  private static String getGender(Party party) {\n    if (\"M\".equals(party.getGender())) {\n      return \"Herr\";\n    }\n    if (\"W\".equals(party.getGender()) || \"F\".equals(party.getGender())) {\n      return \"Frau\";\n    }\n    return \"Firma\";\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/AddressLinkData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/AddressLinkData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1078,
    "content": "package at.a1ta.cuco.core.shared.model;\n\nimport java.io.Serializable;\n\npublic class AddressLinkData implements Serializable {\n\n  private String street;\n  private String houseNumber;\n  private String zipCode;\n  private String city;\n  private String village;\n  private String country;\n\n  public String getCountry() {\n    return country;\n  }\n\n  public void setCountry(String country) {\n    this.country = country;\n  }\n\n  public String getVillage() {\n    return village;\n  }\n\n  public void setVillage(String village) {\n    this.village = village;\n  }\n\n  public String getStreet() {\n    return street;\n  }\n\n  public void setStreet(String street) {\n    this.street = street;\n  }\n\n  public String getHouseNumber() {\n    return houseNumber;\n  }\n\n  public void setHouseNumber(String houseNumber) {\n    this.houseNumber = houseNumber;\n  }\n\n  public String getZipCode() {\n    return zipCode;\n  }\n\n  public void setZipCode(String zipCode) {\n    this.zipCode = zipCode;\n  }\n\n  public String getCity() {\n    return city;\n  }\n\n  public void setCity(String city) {\n    this.city = city;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/productdetail/ProductDetail.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/productdetail/ProductDetail.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5594,
    "content": "package at.a1ta.cuco.core.shared.model.productdetail;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Date;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.a1ta.cuco.core.shared.model.AddressLinkData;\n\npublic class ProductDetail implements Serializable {\n  private String category;\n  private String locationId;\n  private String location;\n  private String serviceNumber;\n  private String aonCustomerNumber;\n  private String customerMarker;\n  private String customerType;\n  private String productName;\n  private String baseService;\n  private String secretLevel;\n  private String ban;\n  private String description;\n  private String indexation;\n  private String details;\n  private Date validFrom;\n  private Date binding;\n  private boolean anb;\n\n  private Long partyId;\n  private Party party;\n\n  private boolean locationExpanded = true;\n  private boolean numberExpanded = true;\n  private ArrayList<ProductDetail> locationSiblings = new ArrayList<ProductDetail>();\n  private ArrayList<ProductDetail> numberSiblings = new ArrayList<ProductDetail>();\n  private AddressLinkData addressLinkData;\n\n  private PhoneNumber phoneNumber;\n\n  public ProductDetail() {}\n\n  public ProductDetail(Long partyId) {\n    this.partyId = partyId;\n  }\n\n  public String getLocation() {\n    return location;\n  }\n\n  public void setLocation(String location) {\n    this.location = location;\n  }\n\n  public String getServiceNumber() {\n    return serviceNumber;\n  }\n\n  public void setServiceNumber(String serviceNumber) {\n    this.serviceNumber = serviceNumber;\n  }\n\n  public void setAonCustomerNumber(String aonCustomerNumber) {\n    this.aonCustomerNumber = aonCustomerNumber;\n  }\n\n  public String getAonCustomerNumber() {\n    return aonCustomerNumber;\n  }\n\n  public String getCustomerMarker() {\n    return customerMarker;\n  }\n\n  public void setCustomerMarker(String customerMarker) {\n    this.customerMarker = customerMarker;\n  }\n\n  public String getCustomerType() {\n    return customerType;\n  }\n\n  public void setCustomerType(String customerType) {\n    this.customerType = customerType;\n  }\n\n  public String getProductName() {\n    return productName;\n  }\n\n  public void setProductName(String productName) {\n    this.productName = productName;\n  }\n\n  public String getBaseService() {\n    return baseService;\n  }\n\n  public void setBaseService(String baseService) {\n    this.baseService = baseService;\n  }\n\n  public String getSecretLevel() {\n    return secretLevel;\n  }\n\n  public void setSecretLevel(String secretLevel) {\n    this.secretLevel = secretLevel;\n  }\n\n  public String getBan() {\n    return ban;\n  }\n\n  public void setBan(String ban) {\n    this.ban = ban;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public String getIndexation() {\n    return indexation;\n  }\n\n  public void setIndexation(String indexation) {\n    this.indexation = indexation;\n  }\n\n  public String getDetails() {\n    return details;\n  }\n\n  public void setDetails(String details) {\n    this.details = details;\n  }\n\n  public Date getBinding() {\n    return binding;\n  }\n\n  public void setBinding(Date binding) {\n    this.binding = binding;\n  }\n\n  public ArrayList<ProductDetail> getNumberSiblings() {\n    return numberSiblings;\n  }\n\n  public void setNumberSiblings(ArrayList<ProductDetail> numberSiblings) {\n    this.numberSiblings = numberSiblings;\n  }\n\n  public void setPartyId(Long partyId) {\n    this.partyId = partyId;\n  }\n\n  public Long getPartyId() {\n    return partyId;\n  }\n\n  public void setParty(Party party) {\n    this.party = party;\n  }\n\n  public Party getParty() {\n    return party;\n  }\n\n  public boolean hasNumberSiblings() {\n    return numberSiblings != null && numberSiblings.size() > 0;\n  }\n\n  public void addNumberSibling(ProductDetail sibling) {\n    if (sibling != this) {\n      numberSiblings.add(sibling);\n    }\n  }\n\n  public void setLocationId(String locationId) {\n    this.locationId = locationId;\n  }\n\n  public String getLocationId() {\n    return locationId;\n  }\n\n  public void setLocationSiblings(ArrayList<ProductDetail> locationSiblings) {\n    this.locationSiblings = locationSiblings;\n  }\n\n  public ArrayList<ProductDetail> getLocationSiblings() {\n    return locationSiblings;\n  }\n\n  public void addLocationSibling(ProductDetail sibling) {\n    if (sibling != this) {\n      locationSiblings.add(sibling);\n    }\n  }\n\n  public void setNumberExpanded(boolean numberExpanded) {\n    this.numberExpanded = numberExpanded;\n  }\n\n  public boolean isNumberExpanded() {\n    return numberExpanded;\n  }\n\n  public void setLocationExpanded(boolean locationExpanded) {\n    this.locationExpanded = locationExpanded;\n  }\n\n  public boolean isLocationExpanded() {\n    return locationExpanded;\n  }\n\n  public void setAnb(boolean anb) {\n    this.anb = anb;\n  }\n\n  public boolean isAnb() {\n    return anb;\n  }\n\n  public void setCategory(String category) {\n    this.category = category;\n  }\n\n  public String getCategory() {\n    return category;\n  }\n\n  public PhoneNumber getPhoneNumber() {\n    return phoneNumber;\n  }\n\n  public void setPhoneNumber(PhoneNumber phoneNumber) {\n    this.phoneNumber = phoneNumber;\n  }\n\n  public Date getValidFrom() {\n    return validFrom;\n  }\n\n  public void setValidFrom(Date validFrom) {\n    this.validFrom = validFrom;\n  }\n\n  public AddressLinkData getAddressLinkData() {\n    return addressLinkData;\n  }\n\n  public void setAddressLinkData(AddressLinkData addressLinkData) {\n    this.addressLinkData = addressLinkData;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/seg/MultiPartyMatrixData.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/seg/MultiPartyMatrixData.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1862,
    "content": "package at.a1ta.cuco.core.shared.model.seg;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport at.a1ta.cuco.core.shared.dto.MatrixPosition;\n\npublic class MultiPartyMatrixData {\n  private HashMap<Long, HashMap<Long, ArrayList<MultiPartyProductGroup>>> matrixData = new HashMap<Long, HashMap<Long, ArrayList<MultiPartyProductGroup>>>();\n\n  public void setMatrixData(ArrayList<MatrixPosition<MultiPartyProductGroup>> groups) {\n    for (MatrixPosition<MultiPartyProductGroup> posGroup : groups) {\n      MultiPartyProductGroup group = posGroup.getObject();\n      addMatrixData(posGroup.getSegment(), posGroup.getCategory(), group);\n    }\n  }\n\n  private void addMatrixData(long segment, long category, MultiPartyProductGroup prodGroup) {\n    HashMap<Long, ArrayList<MultiPartyProductGroup>> mapOfCategories = matrixData.get(segment); // contains the categories of a\n    // segment\n\n    if (mapOfCategories == null) {\n      mapOfCategories = new HashMap<Long, ArrayList<MultiPartyProductGroup>>();\n      matrixData.put(segment, mapOfCategories);\n    }\n\n    ArrayList<MultiPartyProductGroup> entries = mapOfCategories.get(category); // contains all productgroups of a matrixentry\n    if (entries == null) {\n      entries = new ArrayList<MultiPartyProductGroup>();\n      mapOfCategories.put(category, entries);\n    }\n\n    entries.add(prodGroup);\n  }\n\n  public ArrayList<MultiPartyProductGroup> getProductgroups(long segment, long category) {\n    try {\n      ArrayList<MultiPartyProductGroup> ret = matrixData.get(segment).get(category);\n      // check if ret is null to get no nullpointer exception if the calling class whant's so access the list\n      if (ret == null) {\n        return new ArrayList<MultiPartyProductGroup>();\n      }\n      return ret;\n    } catch (NullPointerException e) {\n      return new ArrayList<MultiPartyProductGroup>();\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/seg/MultiPartyProductGroup.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/seg/MultiPartyProductGroup.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5362,
    "content": "package at.a1ta.cuco.core.shared.model.seg;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.ProductGroup;\nimport at.a1ta.cuco.core.shared.dto.RTCode;\n\npublic class MultiPartyProductGroup implements Serializable {\n\n  private Long id;\n  private String code;\n  private String name;\n  private String description;\n  private String anbLookup;\n  private Date updateTs;\n\n  private Map<Long, Integer> nrNotes = new HashMap<Long, Integer>();\n  private Map<Long, Integer> nrNotesImported = new HashMap<Long, Integer>();\n  private Map<Long, Integer> nrSingleTurnarounds = new HashMap<Long, Integer>();\n  private Map<Long, Integer> nrReminders = new HashMap<Long, Integer>();\n  private Map<Long, Boolean> ta = new HashMap<Long, Boolean>();\n  private Map<Long, Boolean> anb = new HashMap<Long, Boolean>();\n  private Map<Long, Boolean> notInterested = new HashMap<Long, Boolean>();\n\n  private List<RTCode> rtCodes = new ArrayList<RTCode>();\n  private List<Party> parties = new ArrayList<Party>();\n\n  private static final Comparator<Party> MARKER_COMPARATOR = new Comparator<Party>() {\n    @Override\n    public int compare(Party o1, Party o2) {\n      Integer m1 = o1.getMarker();\n      Integer m2 = o2.getMarker();\n\n      return m1.compareTo(m2);\n    }\n  };\n\n  public MultiPartyProductGroup(ProductGroup source) {\n    this.id = source.getId();\n    this.code = source.getCode();\n    this.name = source.getName();\n    this.description = source.getDescription();\n    this.anbLookup = source.getAnbLookup();\n    this.updateTs = source.getUpdateTs();\n  }\n\n  public void addProductGroup(ProductGroup source, Party party) {\n    nrNotes.put(party.getId(), source.getNrNotes());\n    nrNotesImported.put(party.getId(), source.getNrNotesImported());\n    nrSingleTurnarounds.put(party.getId(), source.getNrSingleTurnarounds());\n    nrReminders.put(party.getId(), source.getNrReminders());\n    ta.put(party.getId(), source.hasTa());\n    anb.put(party.getId(), source.hasAnb());\n    notInterested.put(party.getId(), source.isNotInterested());\n\n    parties.add(party);\n    Collections.sort(parties, MARKER_COMPARATOR);\n  }\n\n  public Long getId() {\n    return id;\n  }\n\n  public void setId(Long id) {\n    this.id = id;\n  }\n\n  public String getCode() {\n    return code;\n  }\n\n  public void setCode(String code) {\n    this.code = code;\n  }\n\n  public String getName() {\n    return name;\n  }\n\n  public void setName(String name) {\n    this.name = name;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public String getAnbLookup() {\n    return anbLookup;\n  }\n\n  public void setAnbLookup(String anbLookup) {\n    this.anbLookup = anbLookup;\n  }\n\n  public Date getUpdateTs() {\n    return updateTs;\n  }\n\n  public void setUpdateTs(Date updateTs) {\n    this.updateTs = updateTs;\n  }\n\n  public void setNrNotes(Long partyId, int nrNotes) {\n    this.nrNotes.put(partyId, nrNotes);\n  }\n\n  public int getNrNotes(Long partyId) {\n    return nrNotes.get(partyId);\n  }\n\n  public int getNrNotesImported(Long partyId) {\n    return nrNotesImported.get(partyId);\n  }\n\n  public void setNrNotesImported(Long partyId, Integer nrNotesImported) {\n    this.nrNotesImported.put(partyId, nrNotesImported);\n  }\n\n  public void setNrSingleTurnarounds(Long partyId, Integer nrSingleTurnarounds) {\n    this.nrSingleTurnarounds.put(partyId, nrSingleTurnarounds);\n  }\n\n  public int getNrSingleTurnarounds(Long partyId) {\n    return this.nrSingleTurnarounds.get(partyId);\n  }\n\n  public boolean hasOneTa(ArrayList<Long> partyIds) {\n    for (Long partyId : partyIds) {\n      boolean hasTa = ta.get(partyId);\n      if (hasTa) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public boolean hasTa(Long partyId) {\n    return ta.get(partyId);\n  }\n\n  public void setTa(Long partyId, boolean ta) {\n    this.ta.put(partyId, ta);\n  }\n\n  public boolean hasOneAnb(ArrayList<Long> partyIds) {\n    for (Long partyId : partyIds) {\n      boolean hasAnb = anb.get(partyId);\n      if (hasAnb) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public boolean hasAnb(Long partyId) {\n    return anb.get(partyId);\n  }\n\n  public void setAnb(Long partyId, boolean anb) {\n    this.anb.put(partyId, anb);\n  }\n\n  public List<RTCode> getRTCodes() {\n    return rtCodes;\n  }\n\n  public void setRTCodes(java.util.List<RTCode> codes) {\n    this.rtCodes = codes;\n  }\n\n  public void setNotInterested(Long partyId, boolean notInterested) {\n    this.notInterested.put(partyId, notInterested);\n  }\n\n  public boolean isNotInterested(Long partyId) {\n    return notInterested.get(partyId);\n  }\n\n  public int getNrReminders(Long partyId) {\n    return nrReminders.get(partyId);\n  }\n\n  public void setNrReminders(Long partyId, int nrReminders) {\n    this.nrReminders.put(partyId, nrReminders);\n  }\n\n  public List<Party> getParties() {\n    return parties;\n  }\n\n  public boolean hasAnyIcon(Long partyId) {\n    return anb.get(partyId) || ta.get(partyId) || getNrReminders(partyId) > 0 || getNrNotes(partyId) > 0 || getNrNotesImported(partyId) > 0\n        || getNrSingleTurnarounds(partyId) > 0;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/contactperson/ContactPersonComparator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/shared/model/contactperson/ContactPersonComparator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 645,
    "content": "package at.a1ta.cuco.core.shared.model.contactperson;\n\nimport java.io.Serializable;\nimport java.util.Comparator;\n\nimport at.a1ta.cuco.core.shared.dto.ContactPerson;\n\npublic class ContactPersonComparator implements Comparator<ContactPerson>, Serializable {\n  @Override\n  public int compare(ContactPerson o1, ContactPerson o2) {\n    String s1 = buildComparisonString(o1);\n    String s2 = buildComparisonString(o2);\n    return s1.compareTo(s2);\n  }\n\n  private String buildComparisonString(ContactPerson detail) {\n    return detail.getAddressLine2() + \" \" + detail.getAddressLine1() + \" \" + detail.getLastname() + \" \" + detail.getFirstname();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/audit/CuCoAuditEvent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/audit/CuCoAuditEvent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2976,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.audit;\n\nimport at.a1ta.bite.audit.AuditAttribute;\nimport at.a1ta.bite.audit.core.SimpleAuditEvent;\nimport at.a1ta.bite.core.bean.AuthenticatedSessionContext;\n\npublic class CuCoAuditEvent extends SimpleAuditEvent {\n\n  public CuCoAuditEvent(String username, CuCoAuditScope scope, CuCoAuditActivity activity) {\n    super(username, scope, activity);\n  }\n\n  public CuCoAuditEvent(String username, CuCoAuditScope scope, CuCoAuditActivity activity, AuditAttribute... attributes) {\n    super(username, scope, activity);\n    this.addAttributes(attributes);\n  }\n\n  public CuCoAuditEvent(AuthenticatedSessionContext context, CuCoAuditScope scope, CuCoAuditActivity activity) {\n    super(context != null ? context.getUsername() : \"-\", scope, activity);\n    this.withContext(context);\n  }\n\n  public CuCoAuditEvent withIP(String ipaddress) {\n    return withAttribute(CuCoAuditAttribute.IP_ADDRESS.withValue(ipaddress));\n  }\n\n  public CuCoAuditEvent withSession(String sessionid) {\n    return withAttribute(CuCoAuditAttribute.SESSION_ID.withValue(sessionid));\n  }\n\n  public CuCoAuditEvent withError(String errormessage) {\n    return withAttribute(CuCoAuditAttribute.ERROR_MESSAGE.withValue(errormessage));\n  }\n\n  public CuCoAuditEvent withReferenceNumber(String referenceNumber) {\n    return withAttribute(CuCoAuditAttribute.REFERENCE_NUMBER.withValue(referenceNumber));\n  }\n\n  public CuCoAuditEvent withUsername(String username) {\n    return withAttribute(CuCoAuditAttribute.USERNAME.withValue(username));\n  }\n\n  public CuCoAuditEvent withCustomerNumber(long customerNumber) {\n    return withAttribute(CuCoAuditAttribute.CUSTOMERNUMBER.withValue(Long.toString(customerNumber)));\n  }\n\n  public CuCoAuditEvent withAttribute(AuditAttribute attribute) {\n    this.addAttribute(attribute);\n    return this;\n  }\n\n  public CuCoAuditEvent withContext(AuthenticatedSessionContext context) {\n    if (context != null) {\n      return withSession(context.getSessionId()).withIP(context.getIpAddress()).withUsername(context.getUsername());\n    }\n    return this;\n  }\n\n  public CuCoAuditEvent withMessage(String message, Object... args) {\n    this.setMessage(message);\n    this.setArgumentArray(args);\n    return this;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/audit/CuCoAuditScope.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/audit/CuCoAuditScope.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 233,
    "content": "package at.a1ta.cuco.core.audit;\n\nimport at.a1ta.bite.audit.AuditScope;\n\npublic enum CuCoAuditScope implements AuditScope {\n  APPLICATION, SEARCH, CUSTOMER;\n\n  @Override\n  public String getName() {\n    return this.toString();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/audit/CuCoAuditAttribute.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/audit/CuCoAuditAttribute.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1244,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.audit;\n\nimport at.a1ta.bite.audit.AuditAttribute;\n\npublic enum CuCoAuditAttribute {\n  IP_ADDRESS, SESSION_ID, ERROR_MESSAGE, REFERENCE_NUMBER, USERNAME, CUSTOMERNUMBER;\n\n  public AuditAttribute withValue(final String value) {\n    return new AuditAttribute() {\n\n      @Override\n      public String getName() {\n        return CuCoAuditAttribute.this.toString();\n      }\n\n      @Override\n      public Object getValue() {\n        return value;\n      }\n\n    };\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/audit/CuCoAuditActivity.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/audit/CuCoAuditActivity.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1037,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.audit;\n\nimport at.a1ta.bite.audit.AuditActivity;\n\npublic enum CuCoAuditActivity implements AuditActivity {\n  SEARCH, SEARCH_LEAD, VIEW, REQUEST_UNLOCK, UNLOCK, LOCK, LOCK_OVERRIDE;\n\n  @Override\n  public String getName() {\n    return this.toString();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/audit/ContextAwareAuditHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/audit/ContextAwareAuditHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1214,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.audit;\n\nimport at.a1ta.bite.core.bean.AuthenticatedSessionContext;\nimport at.a1ta.bite.core.bean.ThreadContext;\n\npublic final class ContextAwareAuditHelper {\n\n  private ContextAwareAuditHelper() {}\n\n  public static CuCoAuditEvent createFor(CuCoAuditScope scope, CuCoAuditActivity activity) {\n    AuthenticatedSessionContext context = ThreadContext.getSessionContext();\n    return new CuCoAuditEvent(context, scope, activity);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/export/CSVFieldFormater.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/export/CSVFieldFormater.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1404,
    "content": "package at.a1ta.cuco.core.export;\n\npublic class CSVFieldFormater implements Formater {\n\n  // Good example for formating and escaping CSV values: http://en.wikipedia.org/wiki/Comma-separated_values#Example\n\n  public static final String SEPERATOR_DEFAULT_RFC4180 = \",\";\n\n  public static final String SEPERATOR = \";\";\n\n  private static final String EMPTY = \"\";\n\n  // private static final String REGEX_LINE_FEEDS = \"\\\\r|\\\\n\";\n\n  private static final String CR = \"\\r\";\n\n  private static final String LF = \"\\n\";\n\n  private static final String QUOTE = \"\\\"\";\n\n  private static final String QUOTE_ESCAPED = \"\\\"\\\"\";\n\n  @Override\n  public String format(final Object object) {\n    return escapeText(object) + SEPERATOR; // TODO escape the seperator\n  }\n\n  private String escapeText(final Object original) {\n    if (original == null) {\n      return null;\n    }\n    String escaped = original.toString();\n    // escaoe a COMMA\n    if (escaped.contains(QUOTE)) {\n      escaped = escaped.replaceAll(QUOTE, QUOTE_ESCAPED);\n    }\n\n    // sorround the field by COMMAs when a seperator or a CRLF or a LF is part of the field or the field is an empty string\n    if (escaped.contains(SEPERATOR_DEFAULT_RFC4180) || escaped.contains(SEPERATOR) || escaped.contains(LF) || escaped.contains(CR)\n        || escaped.contains(QUOTE) || escaped.equals(EMPTY)) {\n      escaped = QUOTE + escaped + QUOTE;\n    }\n\n    return escaped;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/export/CSVRowFormater.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/export/CSVRowFormater.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 674,
    "content": "package at.a1ta.cuco.core.export;\n\nimport org.apache.commons.lang.StringUtils;\n\npublic class CSVRowFormater implements Formater {\n\n  private static final String LINE_BREAK = \"\\r\\n\";\n\n  private final String seperator;\n\n  public CSVRowFormater() {\n    this(LINE_BREAK);\n  }\n\n  public CSVRowFormater(final String seperator) {\n    this.seperator = seperator;\n  }\n\n  @Override\n  public String format(final Object object) {\n    String str = (object == null ? StringUtils.EMPTY : object.toString());\n    final int lastSepIdx = str.lastIndexOf(CSVFieldFormater.SEPERATOR);\n    if (lastSepIdx >= 0) {\n      str = str.substring(0, lastSepIdx);\n    }\n    return str + seperator;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/export/DateFormater.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/export/DateFormater.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 945,
    "content": "package at.a1ta.cuco.core.export;\n\nimport org.apache.commons.lang.time.FastDateFormat;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class DateFormater implements Formater {\n\n  private static final Logger log = LoggerFactory.getLogger(DateFormater.class);\n\n  protected static final String DEFAULT_PATTERN = \"dd.MM.yyy hh:mm\";\n\n  protected static final String DEFAULT_VALUE = \"\";\n\n  private final FastDateFormat sdf;\n\n  private final String defaultValue;\n\n  public DateFormater() {\n    this(DEFAULT_PATTERN, DEFAULT_VALUE);\n  }\n\n  public DateFormater(final String dateFormat, final String defaultValue) {\n    this.sdf = FastDateFormat.getInstance(dateFormat);\n    this.defaultValue = defaultValue;\n  }\n\n  @Override\n  public String format(final Object object) {\n    try {\n      return sdf.format(object);\n    } catch (Exception e) {\n      log.warn(\"Could not parse value: \" + object, e);\n      return defaultValue;\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/export/TableContent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/export/TableContent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3158,
    "content": "package at.a1ta.cuco.core.export;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class TableContent implements ExportContent {\n\n  private static final int DEFAULT_ROW_LEN = 128; // performance influence for the StringBuilder\n\n  private List<List<Object>> table = new ArrayList<List<Object>>();\n\n  private Formater nullFormater = new NullFormater();\n\n  private Map<Class<?>, Formater> typeFormaters = new HashMap<Class<?>, Formater>();\n\n  private Map<Integer, Formater> columnFormaters = new HashMap<Integer, Formater>();\n\n  private Formater rowFormater;\n\n  private Formater contentFormater;\n\n  public TableContent() {\n    typeFormaters.put(Date.class, new DateFormater());\n    typeFormaters.put(Boolean.class, new BooleanFormater());\n    typeFormaters.put(null, new NullFormater());\n  }\n\n  @Override\n  public void setTypeFormater(final Class<?> clazz, final Formater formater) {\n    typeFormaters.put(clazz, formater);\n  }\n\n  @Override\n  public void setRowFormater(final Formater formater) {\n    rowFormater = formater;\n  }\n\n  @Override\n  public void setColumnFormater(final int column, final Formater formater) {\n    columnFormaters.put(column, formater);\n  }\n\n  public void setColumnFormater(final int startColumn, final int endColumn, final Formater formater) {\n    for (int i = startColumn; i <= endColumn; i++) {\n      columnFormaters.put(i, formater);\n    }\n  }\n\n  @Override\n  public void clear() {\n    table.clear();\n  }\n\n  @Override\n  public int addRow(final Object... columnValues) {\n    final List<Object> columns = Arrays.asList(columnValues);\n    table.add(columns);\n    return table.size() - 1;\n  }\n\n  @Override\n  public int setRow(final int row, final Object... columnValues) {\n    final List<Object> columns = Arrays.asList(columnValues);\n    // TODO manuels check if the index is correct\n    table.set(row, columns);\n    return row;\n  }\n\n  @Override\n  public String asString() {\n    final StringBuilder sbContent = new StringBuilder(table.size() * DEFAULT_ROW_LEN);\n\n    for (final List<Object> row : table) {\n      int curColIdx = 0;\n\n      final StringBuilder sbRow = new StringBuilder(DEFAULT_ROW_LEN);\n      for (final Object cell : row) {\n        sbRow.append(format(cell, curColIdx));\n        curColIdx++;\n      }\n      sbContent.append(rowFormater.format(sbRow));\n    }\n\n    if (contentFormater != null) {\n      return contentFormater.format(sbContent);\n    }\n    return sbContent.toString();\n  }\n\n  private String format(final Object value, final int curCellIdx) {\n    final Class<?> clazz = value == null ? null : value.getClass();\n    Formater formater = clazz == null ? nullFormater : typeFormaters.get(clazz);\n    if (formater == null) {\n      formater = nullFormater;\n    }\n\n    final String content = formater.format(value);\n    final Formater columnFormater = columnFormaters.get(curCellIdx);\n    if (columnFormater != null) {\n      return columnFormater.format(content);\n    }\n    return content;\n  }\n\n  @Override\n  public void setContentFormater(final Formater formater) {\n    this.contentFormater = formater;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/export/Formater.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/export/Formater.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 111,
    "content": "package at.a1ta.cuco.core.export;\n\npublic interface Formater {\n\n  public String format(final Object object);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/export/ExportContent.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/export/ExportContent.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 514,
    "content": "package at.a1ta.cuco.core.export;\n\npublic interface ExportContent {\n\n  public void setTypeFormater(final Class<?> clazz, final Formater formater);\n\n  public void setColumnFormater(final int column, final Formater formater);\n\n  public void setRowFormater(final Formater formater);\n\n  public void setContentFormater(final Formater formater);\n\n  public void clear();\n\n  public int addRow(final Object... columnValues);\n\n  public int setRow(final int row, final Object... columnValues);\n\n  public String asString();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/export/BooleanFormater.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/export/BooleanFormater.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1061,
    "content": "package at.a1ta.cuco.core.export;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class BooleanFormater implements Formater {\n\n  private static final Logger log = LoggerFactory.getLogger(BooleanFormater.class);\n\n  private static final String DEFAULT_TRUE = \"ja\";\n\n  private static final String DEFAULT_FALSE = \"nein\";\n\n  private static final String DEFAULT_VALUE = \"\";\n\n  private final String trueValue;\n\n  private final String falseValue;\n\n  private final String defaultValue;\n\n  public BooleanFormater() {\n    this(DEFAULT_TRUE, DEFAULT_FALSE, DEFAULT_VALUE);\n  }\n\n  public BooleanFormater(final String trueValue, final String falseValue, final String defaultValue) {\n    this.trueValue = trueValue;\n    this.falseValue = falseValue;\n    this.defaultValue = defaultValue;\n  }\n\n  @Override\n  public String format(final Object object) {\n    try {\n      return ((Boolean) object).booleanValue() ? trueValue : falseValue;\n    } catch (Exception e) {\n      log.warn(\"Could not parse value: \" + object, e);\n      return defaultValue;\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/export/NullFormater.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/export/NullFormater.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 450,
    "content": "package at.a1ta.cuco.core.export;\n\npublic class NullFormater implements Formater {\n\n  private static final String DEFAULT_VALUE = \"\";\n\n  private final String defaultValue;\n\n  public NullFormater() {\n    this(DEFAULT_VALUE);\n  }\n\n  public NullFormater(final String defaultValue) {\n    this.defaultValue = defaultValue;\n  }\n\n  @Override\n  public String format(final Object object) {\n    return object == null ? defaultValue : object.toString();\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/VIPHistoryService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/VIPHistoryService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1248,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.VIPHistoryEntry;\n\npublic interface VIPHistoryService {\n\n  List<VIPHistoryEntry> getVIPHistory(Long customerId);\n\n  List<VIPHistoryEntry> getVIPHistory(Date from, Date to, String searchTerm, String vipStatus);\n\n  void saveVIPStatusAndHistory(VIPHistoryEntry vipHistory, String lastChangeDate, Party cucoCustomer, String uUuser);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ProductBrowserService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ProductBrowserService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1052,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.Map;\n\nimport at.a1ta.cuco.core.shared.dto.product.BaseNode;\nimport at.a1ta.cuco.core.shared.dto.product.ProductTree;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionNode;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionTree;\nimport at.a1telekom.eai.customerinventory.Product;\nimport at.a1telekom.eai.customerinventory.ProductPrice;\n\npublic interface ProductBrowserService {\n  ProductTree getSubscriptionTree(ArrayList<Long> partyIds, String sessionId, boolean hasAuthorityToSeeCustomerInventoryXMLs);\n\n  SubscriptionTree getSubscriptionTree(SubscriptionNode node, String sessionId, boolean hasAuthorityToSeeCustomerInventoryXMLs);\n\n  Product[] getProductsForCustomerAccount(String ban, String partyId);\n\n  void loadInventoryPricesForBAN(String ban, String partyId, Map<String, ProductPrice> socPriceMap);\n\n  ArrayList<BaseNode> getSubscriptionsDataForCustomer(ArrayList<Long> partyIds, String sessionId, boolean hasAuthorityToSeeCustomerInventoryXMLs);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CustomerInteractionService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CustomerInteractionService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1274,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.bite.data.clarify.shared.dto.ClarifyCustomerInteractionResponse;\nimport at.a1ta.bite.data.clarify.shared.dto.CustomerInteraction;\n\npublic interface CustomerInteractionService {\n\n  ClarifyCustomerInteractionResponse listInteractions(long customerId, String siteId);\n\n  List<CustomerInteraction> listMKInteractions(long customerId);\n\n  List<CustomerInteraction> listAllInteractions(long customerId, String siteId, boolean loadMKInteractions);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CustomerEquipmentService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CustomerEquipmentService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1469,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.net.MalformedURLException;\nimport java.rmi.RemoteException;\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentConsignee;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentTree;\n\npublic interface CustomerEquipmentService {\n  EquipmentTree getEquipmentTree(final String equipmentConsigneeId, final long partyId) throws RemoteException, MalformedURLException;\n\n  ArrayList<EquipmentConsignee> getEquipmentConsignees(final ArrayList<Long> partyIds) throws MalformedURLException, RemoteException;\n\n  ArrayList<EquipmentConsignee> getEquipmentConsignees(long partyId) throws MalformedURLException, RemoteException;\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/UserShopAssignmentService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/UserShopAssignmentService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 846,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignment;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\npublic interface UserShopAssignmentService {\n  \n  // select\n  public List<UserShopAssignment> getUserShopAssignments();\n  public HashMap<String, String> getUserShopAssignmentsForUserManagement();\n  public List<UserShopAssignmentLogLine> getLogEntries();  \n  public Integer getLogEntriesCount();\n  public List<String> getUserNamesForAssignments();\n  public List<String> getAssignedShopIDs();\n  \n  // insert\n  public void insertLogEntry(UserShopAssignmentLogLine logline);\n  public void insertUserShopAssignment(UserShopAssignment assignment);\n  \n  // delete\n  public void purgeLogEntries();\n  public void purgeUserShopAssignments();\n  \n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/BillingCycleService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/BillingCycleService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1065,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.Date;\n\nimport at.a1ta.cuco.core.shared.dto.BillingCycle;\n\npublic interface BillingCycleService {\n\n  ArrayList<BillingCycle> getBillingCycle(Long clearingAccount);\n\n  Date getUsageEndDate(Long clearingAccount) throws Exception;\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/PartyProfileService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/PartyProfileService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 266,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.PartyProfileInfo;\n\npublic interface PartyProfileService {\n  PartyProfileInfo getParty(final long partyId);\n\n  String getBvkUser(String bvkUserId);\n\n  String getOneTVUser(String oneTVUserId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CustomerUnlockService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CustomerUnlockService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1635,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.dao.cusco.CusCoResponse;\nimport at.a1ta.cuco.core.shared.dto.Customer;\nimport at.a1ta.cuco.core.shared.dto.access.UnlockRequestContext;\nimport at.a1ta.cuco.core.shared.dto.access.UnlockStateEnum;\n\npublic interface CustomerUnlockService {\n\n  boolean checkIfUnlockded(Customer customer, UserInfo user, String contextKey, String jobId);\n\n  boolean checkIfUnlockedForSession(Customer customer, UserInfo user, String sessionId);\n\n  CusCoResponse sendUnlockRequest(Customer customer, UserInfo user, UnlockRequestContext context, String contextKey);\n\n  boolean updateUnlockRequestStateAndCheckIfUnlocked(Customer customer, UserInfo user, String contextKey, String referenceKey);\n\n  void lockOverride(Customer customer, UserInfo user, String contextKey, UnlockStateEnum state);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/KUMSCommonService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/KUMSCommonService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 321,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\n\npublic interface KUMSCommonService {\n\n  /**\n   * Get the full list of all POS<br />\n   * \n   * @return empty list if no data found\n   */\n  public ArrayList<PointOfSaleInfo> loadAvailablePOSList();\n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/VBMProductsService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/VBMProductsService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1221,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMDeclineReason;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProduct;\n\npublic interface VBMProductsService {\n  List<VBMProduct> listVBMProduct(long customerId, String productName, String monthYearPeriod, Integer scoringTotal, int maxResults);\n\n  void registerCustomerResponse(VBMDeclineReason declineReason, VBMProduct vbmProduct, String username, String userID);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CucoLogsService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CucoLogsService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1067,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\npublic interface CucoLogsService {\n\n  void entryForPartyLoaded(Party party, UserInfo userInfo, BillingAccountNumber curBan);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/AttributeService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/AttributeService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 850,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig;\nimport at.a1ta.cuco.core.shared.dto.AttributeHistory;\n\npublic interface AttributeService {\n\n  List<AttributeConfig> getAllConfigs();\n\n  AttributeConfig insertConfig(AttributeConfig config, long user);\n\n  AttributeConfig updateConfig(AttributeConfig config, long user);\n\n  AttributeConfig deleteConfig(AttributeConfig config, long user);\n\n  AttributeConfig activateConfig(AttributeConfig config, long user);\n\n  AttributeConfig deactivateConfig(AttributeConfig config, long user);\n\n  List<Attribute> getByPartyId(long partyId, String segment);\n\n  Attribute addAttributeAndArchive(Attribute attribute, long user);\n\n  List<AttributeHistory> getHistory(long partyId, long attributeConfigId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CdPersonService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CdPersonService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 256,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.cd.CdPerson;\n\npublic interface CdPersonService {\n\n  public List<CdPerson> getPersons(List<String> userNames);\n\n  public CdPerson getPerson(String userName);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/DuposMobileSignatureService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/DuposMobileSignatureService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 142,
    "content": "package at.a1ta.cuco.core.service;\n\npublic interface DuposMobileSignatureService {\n\n  String sendContractToSign(String jobId, byte[] data);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CrmAuthenticationService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CrmAuthenticationService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 482,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.CrmAuthenticationInfo;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\npublic interface CrmAuthenticationService {\n  HashMap<String, CrmAuthenticationInfo> getCustomerPasswords(final ArrayList<BillingAccountNumber> ban, Party party, UserInfo userInfo);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/PartySearchValueFormatHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/PartySearchValueFormatHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1345,
    "content": "package at.a1ta.cuco.core.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.dao.util.PhoneNumberParser;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\n@Component\npublic class PartySearchValueFormatHelper {\n\n  private static final String LEADING_ZERO = \"0\";\n  private static final int COMMERCIAL_REG_NUMBER_LEN = 9;\n\n  private final PhoneNumberParser phoneNumberParser;\n\n  @Autowired\n  public PartySearchValueFormatHelper(PhoneNumberDao phoneNumberDao) {\n    this.phoneNumberParser = new PhoneNumberParser(phoneNumberDao);\n  }\n\n  public PhoneNumberStructure parsePhoneNumber(String phoneNumber) {\n    return phoneNumberParser.parse(phoneNumber);\n  }\n\n  public String formatCommectialRegisterNumber(String commectialRegisterNumber) {\n    if (commectialRegisterNumber == null || commectialRegisterNumber.length() > COMMERCIAL_REG_NUMBER_LEN) {\n      return commectialRegisterNumber;\n    }\n\n    final int max = COMMERCIAL_REG_NUMBER_LEN - commectialRegisterNumber.length();\n    final StringBuilder paddingLeft = new StringBuilder(max * 2);\n    for (int i = 0; i < max; i++) {\n      paddingLeft.append(LEADING_ZERO);\n    }\n    return paddingLeft.toString() + commectialRegisterNumber;\n\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ProductAdminService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ProductAdminService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1983,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroup;\nimport at.a1ta.cuco.core.shared.dto.Product;\nimport at.a1ta.cuco.core.shared.dto.ProductLevel;\n\npublic interface ProductAdminService {\n\n  List<InventoryProductGroup> getAllInventoryProductGroups();\n\n  void saveInventoryProductGroup(InventoryProductGroup inventoryProductGroup);\n\n  void moveInventoryProductGroupUp(InventoryProductGroup inventoryProductGroup);\n\n  void moveInventoryProductGroupDown(InventoryProductGroup inventoryProductGroup);\n\n  void deleteInventoryProductGroup(InventoryProductGroup inventoryProductGroup);\n\n  void addProductToInventoryProductGroup(String productId, Long inventoryProductGroupId);\n\n  void addLevelToInventoryProductGroup(Long levelId, Long inventoryProductGroupId);\n\n  void removeProductFromInventoryProductGroup(String productId, Long inventoryProductGroupId);\n\n  void removeLevelFromInventoryProductGroup(Long levelId, Long inventoryProductGroupId);\n\n  List<Product> getProductsForInventoryProductGroup(Long inventoryProductGroupId);\n\n  List<ProductLevel> getProductLevelsForInventoryProductGroup(Long inventoryProductGroupId);\n\n  List<ProductLevel> getProductTree();\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/POSService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/POSService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 758,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote;\n\npublic interface POSService {\n\n  public void sendPOSChangeEmail(Party party, PointOfSaleInfo current, PointOfSaleInfo requested, String justification, UserInfo userInfo);\n\n  public void sendToDoAssignedToPOSEmail(Party party, ToDoGroupNote current, PointOfSaleInfo requested, String justification, BiteUser authenticatedUser);\n\n  void sendToDoCompletedToPOSEmail(Party party, ToDoGroupNote groupNote, PointOfSaleInfo requestedPOS, String justification, BiteUser user);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/UnknownAreaCodeService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/UnknownAreaCodeService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1289,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.Collection;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\n\npublic interface UnknownAreaCodeService {\n\n  UnknownAreaCode getUnknownAreaCodeById(Long id);\n\n  List<UnknownAreaCode> getAllUnknownAreaCodes();\n\n  void saveUnknownAreaCode(UnknownAreaCode code);\n\n  void deleteUnknownAreaCode(Long id);\n\n  Collection<PhoneNumber> filterPhoneNumbersWithUnknownAreaCode(Collection<PhoneNumber> phoneNumbers);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/FreeUnitService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/FreeUnitService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1027,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.rmi.RemoteException;\n\nimport at.telekom.www.voip.api20.ResponseType;\n\npublic interface FreeUnitService {\n  ResponseType getFreeMinutes(final String countryNr, final String onkz, final String telNr) throws RemoteException;\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/LinksPortletService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/LinksPortletService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 209,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.LinksPortlet;\n\npublic interface LinksPortletService {\n\n  // select\n  public List<LinksPortlet> getAllLinks();\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/UITextsEditorService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/UITextsEditorService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 317,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.UIText;\n\npublic interface UITextsEditorService {\n\n  // select\n  public List<UIText> getUITexts();\n  \n  // update\n  public void updateUIText(UIText text);\n  \n  // search\n  public List<UIText> searchText(String text);\n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/EsbPartyService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/EsbPartyService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 232,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.EsbParty;\nimport at.a1telekom.eai.party.Party;\n\npublic interface EsbPartyService {\n\n  EsbParty getESBParty(long partyId);\n  \n  Party getParty(long partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/GamificationLocalService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/GamificationLocalService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 628,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.Map;\n\nimport at.a1ta.cuco.core.shared.dto.GamificationMessage;\n\npublic interface GamificationLocalService {\n  public void markAllMessagesRead(ArrayList<GamificationMessage> messages, String agentId);\n\n  public void addAllMessagesToCuCoDB(ArrayList<GamificationMessage> messages, String agentId);\n\n  public Map<String, GamificationMessage> getAlreadyStoredMessages(ArrayList<GamificationMessage> messages, String agentId);\n\n  public String getGamificationToken(String userName);\n\n  public Boolean validateGamificationOneTimeToken(String token);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ImageSizeService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ImageSizeService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 984,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ImageSize;\n\npublic interface ImageSizeService {\n  /**\n   * @return list of all image sizes\n   */\n  List<ImageSize> getImageSizes();\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/KumsCustomerService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/KumsCustomerService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1185,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.KumsCustomerInfo;\nimport at.a1ta.cuco.core.shared.dto.VipStatus;\n\npublic interface KumsCustomerService {\n\n  KumsCustomerInfo getKumsCustomerInfo(String customerId);\n\n  VipStatus getVipStatus(String customerId);\n\n  String getLastChangeDate(String customerId);\n\n  void saveVipStatus(String customerId, String lastChangeDate, String vipStatus, String user);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/SalesInfoService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/SalesInfoService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1862,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.salesinfo.AppointmentNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.CompetitorNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesConvNoteReportRow;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SbsNoteReportRow;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SimpleNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.Task;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.TeamEmailAdminGroup;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote;\n\npublic interface SalesInfoService {\n\n  List<SalesInfoNote> getNotesByPartyId(long partyId, List<SalesInfoNoteType> salesInfoNoteTypesToLoad);\n\n  void insertSalesInfoNote(SalesInfoNote salesInfoNote);\n\n  void updateSalesInfoNote(SalesInfoNote salesInfoNote);\n\n  SimpleNote getSimpleNoteByNoteId(long noteId);\n\n  CompetitorNote getCompetitorNoteByNoteId(long noteId);\n\n  Task getTask(long taskId);\n\n  SalesInfoNote getSalesInfoNote(long salesInfoNoteId);\n\n  List<SbsNoteReportRow> getSbsNoteReportData(Date startDate, Date endDate);\n\n  List<SalesConvNoteReportRow> getSalesConvNoteReportData(Date startDate, Date endDate);\n\n  List<TeamEmailAdminGroup> getTeamEmailAdminGroups();\n\n  String saveTeamEmailAdminGroups(List<TeamEmailAdminGroup> teamEmailAdminGroups);\n\n  Collection<SBSProductNote> getProductNotesByNoteId(long noteId);\n\n  void markNoteAsDeleted(SalesInfoNote note);\n\n  AppointmentNote getAppointmentNoteByNoteId(long noteId);\n\n  SalesInfoNote getAppointmentNoteForHistoryByNoteId(Long historyNoteId);\n\n  SalesInfoNote getTaskNoteForHistoryByNoteId(Long historyNoteId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/SettingsEditorService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/SettingsEditorService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 321,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.Setting;\n\npublic interface SettingsEditorService {\n\n  // select\n  public List<Setting> getSettings();\n\n  // update\n  public void updateSetting(Setting setting);\n\n  // search\n  public List<Setting> searchText(String text);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CustomerBlockService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CustomerBlockService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1208,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.CustomerBlock;\n\npublic interface CustomerBlockService {\n\n  List<CustomerBlock> getCustomerBlocksForFlashInfo(long flashInfoId);\n\n  CustomerBlock getCustomerBlockById(long customerBlockId);\n\n  void insertCustomerBlock(CustomerBlock customerBlock);\n\n  void updateCustomerBlock(CustomerBlock customerBlock);\n\n  void deleteCustomerBlock(long customerBlockId);\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/FlashInfoService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/FlashInfoService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1220,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.FlashInfo;\n\npublic interface FlashInfoService {\n\n  FlashInfo getFlashInfoById(long flashId);\n\n  List<FlashInfo> getAllFlashInfos();\n\n  List<FlashInfo> getFlashInfoForUserAndCustomer(long userId, long customerId);\n\n  void saveFlashInfo(FlashInfo flashInfo);\n\n  void deleteFlashInfo(long flashId);\n\n  void insertFlashViewed(long flashInfoId, long partyId, long userId);\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ChargingTypeService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ChargingTypeService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 951,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\n\npublic interface ChargingTypeService {\n  List<ChargingType> getAllChargingTypes();\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ReportingService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ReportingService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 402,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.HashMap;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.bean.File;\nimport at.a1ta.cuco.core.bean.Reporting;\n\npublic interface ReportingService {\n\n  public Reporting getReporting(int id);\n\n  public List<Reporting> getAllReportings();\n\n  public List<HashMap<String, Object>> executeReporting(long id);\n\n  public File exportReportAsExcel(Long id);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/UserInfoStatisticsService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/UserInfoStatisticsService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 953,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.UserInfoStatistics;\n\npublic interface UserInfoStatisticsService {\n\n  UserInfoStatistics getUserInfoStatistics(String uUser);\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CCTOrgStructureElementService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CCTOrgStructureElementService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 342,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\npublic interface CCTOrgStructureElementService {\n  public List<String> getAllUsers();\n\n  public void eraseOldEntries();\n\n  void updateCCTOrg(ArrayList<CCTOrgStructureElement> user);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ContactPersonService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ContactPersonService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1636,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ContactPerson;\n\npublic interface ContactPersonService {\n\n  /**\n   * Get list of contact persons for customer with given id\n   * \n   * @param customerId\n   *          The id of the customer to get the contacts for\n   * @return empty list if no data found\n   */\n  List<ContactPerson> listContactPersons(List<Long> partyIds);\n\n  void insertLocalContact(ContactPerson contact);\n\n  void updateLocalContact(ContactPerson contact);\n\n  void updateLocalContactStatus(ContactPerson contact);\n\n  void updateDWHContactStatus(ContactPerson contact);\n\n  void deleteLocalContact(ContactPerson contact);\n\n  void markLocalContactDeleted(ContactPerson contact);\n\n  List<ContactPerson> listContactPersonsIncludingDeleted(List<Long> partyIds);\n\n  Boolean checkIfReferenceExists(Long partyId, Long id);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CuCoGamificationPlainWebsocketEndPoint.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CuCoGamificationPlainWebsocketEndPoint.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 23756,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.net.InetSocketAddress;\nimport java.security.KeyStore;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Queue;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentLinkedQueue;\nimport java.util.concurrent.ExecutorService;\n\nimport javax.annotation.PreDestroy;\nimport javax.net.ssl.KeyManagerFactory;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.TrustManagerFactory;\n\nimport org.java_websocket.WebSocket;\nimport org.java_websocket.handshake.ClientHandshake;\nimport org.java_websocket.server.DefaultSSLWebSocketServerFactory;\nimport org.java_websocket.server.WebSocketServer;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.service.LocalSettingService;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.shared.dto.CuCoGamificationLoginMessage;\nimport at.a1ta.cuco.core.shared.dto.GamificationCuCoMessages;\nimport at.a1ta.cuco.core.shared.dto.GamificationData;\nimport at.a1ta.cuco.core.shared.dto.GamificationMessage;\nimport at.a1ta.cuco.core.shared.dto.GamificationMessageComparator;\nimport at.a1ta.cuco.core.shared.dto.GamificationRequest;\nimport at.a1ta.cuco.core.shared.dto.GamificationResponse;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.google.gson.Gson;\n\nclass GamificationWebsocketThread extends Thread {\n\n  public GamificationWebsocketThread(Queue<CucoWebSocketWrapper> currentQueue, String threadSeqNumber, SettingService settingService, GamificationHttpService gamificationService) {\n    super();\n    this.currentQueue = currentQueue;\n    this.threadSequenceNumber = threadSeqNumber;\n    this.settingService = settingService;\n    this.gamificationHttpService = gamificationService;\n    setDaemon(true);\n  }\n\n  private static org.slf4j.Logger logger = LoggerFactory.getLogger(\"GAMIFICATION\");\n  private static org.slf4j.Logger genericLogger = LoggerFactory.getLogger(GamificationWebsocketThread.class.getName());\n  private Queue<CucoWebSocketWrapper> currentQueue;\n  private String threadSequenceNumber;\n  private static ConcurrentHashMap<String, String> keyQidMap = new ConcurrentHashMap<String, String>();\n  private static ConcurrentHashMap<String, Long> keyLastQueryTimeMap = new ConcurrentHashMap<String, Long>();\n  private SettingService settingService;\n  private GamificationHttpService gamificationHttpService;\n  private static final String DEFAULT_QUERY = \"{\\\"query\\\":\\\"query root($agentId:ID! $limit:Int!) \"\n      + \"{ cucoMessages(agentId:$agentId, limit:$limit) { agentId messages { messageUid timestamp title message type url }}}\\\",\\\"\"\n      + \"variables\\\":{\\\"agentId\\\":\\\"#agentId#\\\", \\\"limit\\\":#limit#},\\\"operationName\\\":\\\"root\\\"}\";\n  private volatile boolean stop = false;\n\n  private String trimResourceDesString(String input) {\n    return input != null ? input.replaceAll(\"/\", \"\") : null;\n  }\n\n  private GamificationResponse getGamificationMessages(String userName) {\n    if (settingService != null && !settingService.getBooleanValue(\"gamification.gamificationEnabled\", false)) {\n      return null;\n    }\n    GamificationRequest request = new GamificationRequest();\n    request.setAgentId(userName);\n    request.setLimit(settingService != null ? settingService.getIntValue(\"gamification.Messagelimit\", 30) : 30);\n    request.setContentType(\"application/json\");\n    String queryString = settingService != null ? settingService.getValueOrDefault(\"gamification.queryString\", DEFAULT_QUERY) : DEFAULT_QUERY;\n    queryString = queryString.replace(\"#agentId#\", request.getAgentId()).replace(\"#limit#\", request.getLimit() + \"\");\n    request.setQueryString(queryString);\n    request.setApiKey(settingService != null ? settingService.getValueOrDefault(\"gamification.queryAPIKey\", \"\") : \"\");\n    GamificationResponse availableGamificationMessages = gamificationHttpService.getAvailableGamificationMessages(request,\n        settingService != null ? settingService.getValueOrDefault(\"gamification.targetURL\", \"http://vlbotai002.at.inside:8085/graphql\") : \"http://vlbotai002.at.inside:8085/graphql\");\n    if (availableGamificationMessages != null && availableGamificationMessages.getMessages() != null && availableGamificationMessages.getMessages().size() > 0) {\n      Collections.sort(availableGamificationMessages.getMessages(), new GamificationMessageComparator());\n      for (GamificationMessage msg : availableGamificationMessages.getMessages()) {\n        msg.setTimestampDateFormat(null);\n      }\n      availableGamificationMessages.getData().getCucoMessages().setMessages(availableGamificationMessages.getMessages());\n    }\n\n    return availableGamificationMessages;\n  }\n\n  public void stopNow() {\n    this.stop = true;\n    interrupt();\n  }\n\n  public int getNoOfActiveSessions() {\n    return getCurrentQueue() != null ? getCurrentQueue().size() : 0;\n  }\n\n  @Override\n  public void run() {\n    while (!stop) {\n      try {\n        if (settingService != null && !settingService.getBooleanValue(\"gamification.gamificationEnabled\", false)) {\n          // do not stop thread,will be needed if toggle is turned on again\n          logger.debug(\"GamificationInactive\");\n          continue;\n        }\n        long starttime = Calendar.getInstance().getTimeInMillis();\n        if (getCurrentQueue() != null && getCurrentQueue().size() > 0) {\n          logger.debug(\"checking session on queue \" + currentQueue);\n          int delayBetweenTwoRequests = Integer.parseInt(settingService.getValueOrDefault(\"gamification.gamificationInquiryDelayInSeconds\", \"30\")) * 1000;\n          ArrayList<CucoWebSocketWrapper> closedSessions = new ArrayList<CucoWebSocketWrapper>();\n          for (CucoWebSocketWrapper session : getCurrentQueue()) {\n            if (settingService != null && !settingService.getBooleanValue(\"gamification.gamificationEnabled\", false)) {\n              if (settingService == null) {\n                logger.info(\"Gamification is disabled : settingService is null \" + settingService);\n              } else {\n                logger.info(\"Gamification is disabled - check gamification.gamificationEnabled: \" + settingService.getBooleanValue(\"gamification.gamificationEnabled\", false));\n              }\n              break;\n            }\n            if (session.getSocket().isClosed() || session.getSocket().isClosing()) {\n              closedSessions.add(session);\n            } else {\n              String sessionkey = trimResourceDesString(session.getSocket().getResourceDescriptor());\n              if (sessionkey != null\n                  && (!keyLastQueryTimeMap.keySet().contains(sessionkey) || (keyLastQueryTimeMap.keySet().contains(sessionkey) && (Calendar.getInstance().getTimeInMillis() - keyLastQueryTimeMap\n                      .get(sessionkey)) >= delayBetweenTwoRequests))) {\n                try {\n\n                  GamificationResponse res = getGamificationMessages(session.getQid());\n                  if (session.getSocket().isOpen() && res != null) {\n                    session.getSocket().send(new Gson().toJson(res, GamificationResponse.class));\n                    keyLastQueryTimeMap.put(sessionkey, Calendar.getInstance().getTimeInMillis());\n                  }\n                } catch (Exception ex) {\n                  logger.error(\"Error while calling Gamification webservice for User session \" + session != null ? keyQidMap.get(sessionkey) : \"-\" + \" :\" + ex.getMessage(), ex.getCause());\n                  if (session != null) {\n                    try {\n                      keyLastQueryTimeMap.put(sessionkey, Calendar.getInstance().getTimeInMillis());\n                      session.getSocket().send(new Gson().toJson(getGamificationResponseWithStatus(\"Error :\" + ex.getMessage(), session != null ? session.getQid() : \"\")));\n                    } catch (Exception e) {\n                      logger.error(\"Error while sending error status to User session \" + keyQidMap.get(sessionkey) + \" :\" + e.getMessage(), e.getCause());\n                    }\n                  }\n\n                }\n\n              }\n            }\n          }\n\n          for (CucoWebSocketWrapper session : closedSessions) {\n            releaseSession(session);\n          }\n          String msg = \"Finished checking all sessions (\" + getCurrentQueue().size() + \") of Thread Seq Number: \" + getThreadSequenceNumber() + \" in \"\n              + (Calendar.getInstance().getTimeInMillis() - starttime) / 1000 + \" Seconds\";\n          logger.debug(msg);\n        }\n        sleep(5000);\n      } catch (Exception e) {\n        logger.error(\"Error in websocket threads \" + \" :\" + e.getMessage(), e.getCause());\n      }\n    }\n\n  }\n\n  private void releaseSession(CucoWebSocketWrapper session) {\n    String sessionKey = trimResourceDesString(session.getSocket().getResourceDescriptor());\n    try {\n      logger.info(\"Trying to close User Session \" + \" :\" + sessionKey);\n      keyQidMap.remove(sessionKey);\n      getCurrentQueue().remove(session);\n    } catch (Exception ex) {\n      logger.error(\"Error while closing session \" + \" :\" + sessionKey, ex);\n    }\n  }\n\n  public Queue<CucoWebSocketWrapper> getCurrentQueue() {\n    return currentQueue;\n  }\n\n  public void setCurrentQueue(Queue<CucoWebSocketWrapper> currentQueue) {\n    this.currentQueue = currentQueue;\n  }\n\n  public String getThreadSequenceNumber() {\n    return threadSequenceNumber;\n  }\n\n  public void setThreadSequenceNumber(String threadSequenceNumber) {\n    this.threadSequenceNumber = threadSequenceNumber;\n  }\n\n  private GamificationResponse getGamificationResponseWithStatus(String status, String agentId) {\n    GamificationResponse res = new GamificationResponse();\n    res.setStatus(status);\n    res.setUnreadMsgCount(0);\n    res.setData(new GamificationData());\n    res.getData().setCucoMessages(new GamificationCuCoMessages());\n    res.getData().getCucoMessages().setAgentId(agentId);\n    res.getData().getCucoMessages().setMessages(new ArrayList<GamificationMessage>());\n    return res;\n  }\n}\n\n@Component\npublic class CuCoGamificationPlainWebsocketEndPoint extends WebSocketServer {\n  private static org.slf4j.Logger logger = LoggerFactory.getLogger(\"GAMIFICATION\");\n  private static org.slf4j.Logger genericLogger = LoggerFactory.getLogger(CuCoGamificationPlainWebsocketEndPoint.class.getName());\n  private static Queue<CucoWebSocketWrapper> queue = new ConcurrentLinkedQueue<CucoWebSocketWrapper>();\n\n  // will hold the threadPool queues, each queue will maintain equal number of sessions\n  private static List<Queue<CucoWebSocketWrapper>> listOfSessionQueues = Collections.synchronizedList(new ArrayList<Queue<CucoWebSocketWrapper>>());\n  // will hold all the threads to close them properly on the server shutdown\n  private static List<GamificationWebsocketThread> gamificationThreads = Collections.synchronizedList(new ArrayList<GamificationWebsocketThread>());\n  private static ConcurrentHashMap<String, String> keyQidMap = new ConcurrentHashMap<String, String>();\n  @Autowired\n  private SettingService settingService;\n  @Autowired\n  private GamificationHttpService gamificationHttpService;\n  private LocalSettingService localSettingService;\n  @Autowired\n  private GamificationLocalService gamificationLocalService;\n  private ExecutorService executorService;\n  private int portNumber;\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n\n  @Autowired\n  public CuCoGamificationPlainWebsocketEndPoint(LocalSettingService localSettingService) {\n\n    super(new InetSocketAddress(Integer.parseInt(localSettingService.getValue(\"websocket.portNo\") == null ? \"7480\" : localSettingService.getValue(\"websocket.portNo\"))));\n    setLocalSettingService(localSettingService);\n    setPortNumber(Integer.parseInt(getLocalSettingService().getValue(\"websocket.portNo\") == null ? \"7480\" : getLocalSettingService().getValue(\"websocket.portNo\")));\n    logger.info(\"Starting Gamification Threads on port \" + getPortNumber());\n    genericLogger.info(\"Starting Gamification Threads on port \" + getPortNumber());\n    if (Boolean.valueOf(getLocalSettingService().getValue(\"websocket.enabledOnCurrentServer\"))) {\n      FileInputStream fis = null;\n      try {\n\n        if (Boolean.valueOf(getLocalSettingService().getValue(\"websocket.enableSSL\"))) {\n          KeyStore ks = KeyStore.getInstance(getLocalSettingService().getValue(\"websocket.keyStoreType\"));\n          File kf = new File(getLocalSettingService().getValue(\"websocket.keyStoreLocation\"));\n          fis = new FileInputStream(kf);\n          ks.load(fis, getLocalSettingService().getValue(\"websocket.keyStoreKey\").toCharArray());\n\n          KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n          kmf.init(ks, getLocalSettingService().getValue(\"websocket.keyStoreKey\").toCharArray());\n          TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n          tmf.init(ks);\n\n          SSLContext sslContext = null;\n          sslContext = SSLContext.getInstance(\"TLS\");\n          sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n\n          setWebSocketFactory(new DefaultSSLWebSocketServerFactory(sslContext));\n\n        }\n        start();\n      } catch (Exception e) {\n        logger.error(\"Error while Starting Gamification Threads on port \" + getPortNumber() + \" :\" + e.getMessage(), e.getCause(), e);\n      } finally {\n        if (fis != null) {\n          try {\n            fis.close();\n          } catch (IOException e) {\n            // do nothing\n          }\n        }\n      }\n    } else {\n      String msg = \"Gamification websocket will not be started, value of websocket.enabledOnCurrentServer is - \"\n          + Boolean.valueOf(getLocalSettingService().getValue(\"websocket.enabledOnCurrentServer\"));\n      logger.error(msg);\n      genericLogger.error(msg);\n    }\n  }\n\n  private void startThreads() {\n    int threadPoolSize = getLocalSettingService().getValue(\"websocket.poolSize\") != null ? Integer.parseInt(getLocalSettingService().getValue(\"websocket.poolSize\")) : 30;\n    logger.debug(\"Starting Gamification Threads with \" + threadPoolSize + \" Queues\");\n    executorService = java.util.concurrent.Executors.newFixedThreadPool(threadPoolSize);\n\n    listOfSessionQueues.clear();\n    gamificationThreads.clear();\n    while (listOfSessionQueues.size() < threadPoolSize) {\n      listOfSessionQueues.add(new ConcurrentLinkedQueue<CucoWebSocketWrapper>());\n    }\n\n    int index = 0;\n    for (Queue<CucoWebSocketWrapper> queue : listOfSessionQueues) {\n      GamificationWebsocketThread task = new GamificationWebsocketThread(queue, index + \"\", settingService, getGamificationHttpService());\n      gamificationThreads.add(task);\n      executorService.submit(task);\n      index += 1;\n    }\n  }\n\n  private int getQueueIndexWithMinimumSessions() {\n    if (gamificationThreads.size() == 0) {\n      return -1;\n    }\n    int index = 0;\n    int minSize = gamificationThreads.get(0).getNoOfActiveSessions();\n    for (int i = 0; i < gamificationThreads.size(); i++) {\n      if (gamificationThreads.get(i).getNoOfActiveSessions() == 0) {\n        index = i;\n        minSize = gamificationThreads.get(i).getNoOfActiveSessions();\n        break;\n      }\n      if (gamificationThreads.get(i).getNoOfActiveSessions() < minSize) {\n        index = i;\n        minSize = gamificationThreads.get(i).getNoOfActiveSessions();\n      }\n    }\n\n    return index;\n\n  }\n\n  public void onClientMessage(WebSocket session, String messageJson) {\n    if (settingService != null && !settingService.getBooleanValue(\"gamification.gamificationEnabled\", false)) {\n      session.close();\n      // Gamification Disabled Do nothing.\n      return;\n    }\n    logger.debug(\"received message from  User :\" + messageJson);\n    ObjectMapper mapper = new ObjectMapper();\n    CuCoGamificationLoginMessage userMessage = null;\n    String sessionKey = trimResourceDesString(session.getResourceDescriptor());\n    try {\n      userMessage = mapper.readValue(messageJson, CuCoGamificationLoginMessage.class);\n      userMessage.setSessionKey(sessionKey);\n      if (keyQidMap.containsKey(userMessage.getSessionKey())) {\n\n        keyQidMap.put(userMessage.getSessionKey(), userMessage.getId());\n        int queueIndexWithMinimumSessions = getQueueIndexWithMinimumSessions();\n        if (queueIndexWithMinimumSessions < 0) {\n          queue = new ConcurrentLinkedQueue<CucoWebSocketWrapper>();\n          queue.add(new CucoWebSocketWrapper(session, userMessage.getId(), userMessage.getSessionKey()));\n          listOfSessionQueues.add(queue);\n        } else {\n          if (gamificationThreads.get(queueIndexWithMinimumSessions).getNoOfActiveSessions() < (localSettingService.getValue(\"websocket.maxSessionsPerPool\") != null ? Integer\n              .parseInt(localSettingService.getValue(\"websocket.maxSessionsPerPool\")) : 200)) {\n            gamificationThreads.get(queueIndexWithMinimumSessions).getCurrentQueue().add(new CucoWebSocketWrapper(session, userMessage.getId(), userMessage.getSessionKey()));\n          } else {\n            logger.error(\"Session rejected due to very high number of active users.\" + sessionKey);\n            session.close();\n            return;\n          }\n        }\n        GamificationResponse res = getGamificationResponseWithStatus(\"Success\", userMessage.getId());\n        session.send(new Gson().toJson(res, GamificationResponse.class));\n        logger.info(\"Listener Started for User :\" + userMessage.getId());\n      } else {\n        logger.error(\"Session closed due to invalid message sent by user \" + sessionKey);\n        session.close();\n      }\n    } catch (Exception ex) {\n      session.close();\n      logger.error(\"Error while initiating listner for user \" + sessionKey + \" :\" + ex.getMessage(), ex.getCause());\n    }\n\n  }\n\n  private String trimResourceDesString(String input) {\n    return input != null ? input.replaceAll(\"/\", \"\") : null;\n  }\n\n  private GamificationResponse getGamificationResponseWithStatus(String status, String agentId) {\n    GamificationResponse res = new GamificationResponse();\n    res.setStatus(status);\n    res.setUnreadMsgCount(0);\n    res.setData(new GamificationData());\n    res.getData().setCucoMessages(new GamificationCuCoMessages());\n    res.getData().getCucoMessages().setAgentId(agentId);\n    res.getData().getCucoMessages().setMessages(new ArrayList<GamificationMessage>());\n    return res;\n  }\n\n  @Override\n  public void onClose(WebSocket session, int arg1, String arg2, boolean arg3) {\n    logger.debug(\"User session closed\" + trimResourceDesString(session.getResourceDescriptor()), arg1 + \" \" + arg2 + \" \" + arg3);\n  }\n\n  @Override\n  public void onError(WebSocket session, Exception ex) {\n    ex.printStackTrace();\n    if (logger != null && session != null) {\n      logger.error(\"Error for User session \" + trimResourceDesString(session.getResourceDescriptor()) + \" :\" + ex.getMessage(), ex.getCause());\n    }\n  }\n\n  @Override\n  public void onMessage(WebSocket session, String message) {\n    onClientMessage(session, message);\n  }\n\n  @Override\n  public void onOpen(WebSocket session, ClientHandshake arg1) {\n    String resourceDescriptor = trimResourceDesString(session.getResourceDescriptor());\n    try {\n      if ((settingService != null && !settingService.getBooleanValue(\"gamification.gamificationEnabled\", false)) || resourceDescriptor == null || resourceDescriptor.isEmpty()) {\n        // Gamification Disabled Do nothing.\n        session.close();\n        return;\n      }\n      if (resourceDescriptor.contains(\"printStatusInLogs\")) {\n        if (listOfSessionQueues.size() == 0) {\n          logger.info(\"Gamification Listner is not yet started. Waiting for Client to Connect\");\n        } else {\n          logger.info(\"Gamification Listner is started. Current Load Details are below:\");\n          logger.info(\"-----------------------  Queue Number   -----------------------  Number Of Sessions  --------------------\");\n          int index = 1;\n          for (GamificationWebsocketThread thread : gamificationThreads) {\n            logger.info(\"-----------------------       \" + index + \"       -----------------------         \" + thread.getNoOfActiveSessions() + \"   --------------------\");\n            index += 1;\n          }\n        }\n        session.close();\n        return;\n      }\n      if (listOfSessionQueues.size() == 0) {\n        startThreads();\n      }\n\n      if (getGamificationLocalService().validateGamificationOneTimeToken(resourceDescriptor)) {\n        logger.info(\"Token validated Successfully : \" + resourceDescriptor);\n        keyQidMap.put(resourceDescriptor, session.getRemoteSocketAddress() != null ? session.getRemoteSocketAddress().getHostName() : \"-\");\n        GamificationResponse res = new GamificationResponse();\n        res.setStatus(\"sessionKey:\" + resourceDescriptor);\n        session.send(new Gson().toJson(res, GamificationResponse.class));\n      } else {\n        logger.error(\"Token validation failed  : \" + resourceDescriptor);\n        session.close();\n      }\n    } catch (Exception e) {\n      session.close();\n      logger.error(\"Error while initiating User session \" + session.getRemoteSocketAddress() + resourceDescriptor + \" :\" + e.getMessage(), e.getCause());\n    }\n  }\n\n  @Override\n  public void onStart() {\n    logger.debug(\"Cuco Gamification Server Started at Port \" + getPortNumber());\n  }\n\n  public GamificationHttpService getGamificationHttpService() {\n    return gamificationHttpService;\n  }\n\n  @Autowired\n  public void setGamificationHttpService(GamificationHttpService gamificationHttpService) {\n    this.gamificationHttpService = gamificationHttpService;\n  }\n\n  @PreDestroy\n  @Override\n  public void stop() throws IOException, InterruptedException {\n    super.stop();\n    logger.info(\"Stopping Gamification threads\");\n    for (GamificationWebsocketThread thread : gamificationThreads) {\n      try {\n        thread.stopNow();\n      } catch (Exception ex) {\n        if (logger != null) {\n          logger.error(\"Error while stopping threads\", ex);\n        }\n      }\n    }\n    try {\n      if (executorService != null) {\n        executorService.shutdown();\n        executorService.shutdownNow();\n        logger.info(\"Gamification threads stopped\");\n      }\n    } catch (Exception ex) {\n      if (logger != null) {\n        logger.error(\"Error while stopping threads\", ex);\n      }\n    }\n  }\n\n  public LocalSettingService getLocalSettingService() {\n    return localSettingService;\n  }\n\n  @Autowired\n  public void setLocalSettingService(LocalSettingService localSettingService) {\n    this.localSettingService = localSettingService;\n  }\n\n  public int getPortNumber() {\n    return portNumber;\n  }\n\n  public void setPortNumber(int portNumber) {\n    this.portNumber = portNumber;\n  }\n\n  public GamificationLocalService getGamificationLocalService() {\n    return gamificationLocalService;\n  }\n\n  public void setGamificationLocalService(GamificationLocalService gamificationLocalService) {\n    this.gamificationLocalService = gamificationLocalService;\n  }\n}\n\nclass CucoWebSocketWrapper {\n  WebSocket socket;\n  String qid;\n  String Key;\n\n  public CucoWebSocketWrapper(WebSocket socket, String qid, String key) {\n    super();\n    this.socket = socket;\n    this.qid = qid;\n    Key = key;\n  }\n\n  public WebSocket getSocket() {\n    return socket;\n  }\n\n  public void setSocket(WebSocket socket) {\n    this.socket = socket;\n  }\n\n  public String getQid() {\n    return qid;\n  }\n\n  public void setQid(String qid) {\n    this.qid = qid;\n  }\n\n  public String getKey() {\n    return Key;\n  }\n\n  public void setKey(String key) {\n    Key = key;\n  }\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/MarketplaceInventoryService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/MarketplaceInventoryService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 224,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.product.LocationNode;\n\npublic interface MarketplaceInventoryService {\n\n  LocationNode getMarketplaceAccountsWithSubscriptionsForParty(long partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/LocationService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/LocationService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1420,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.Pageable;\n\nimport at.a1ta.bite.data.clarify.shared.dto.Location;\nimport at.a1ta.bite.data.clarify.shared.dto.LocationCollection;\nimport at.a1telekom.eai.lkmslocation.AddressDetail;\n\npublic interface LocationService {\n\n  LocationCollection getClarifyLocationsForCustomer(Long customerId, int locationPageSize, int locationPageIndex);\n\n  Number getDistinctNrLocations4customer(Number customerId);\n\n  Page<Location> getClarifyLocationsForCustmomer(Long customerId, Pageable pageable);\n\n  AddressDetail getAddressDetailForLocation(String lkmsId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/InvoiceService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/InvoiceService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 510,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.LinkedHashMap;\n\nimport at.a1ta.cuco.core.shared.dto.ClearingAccount;\nimport at.a1ta.cuco.core.shared.dto.Invoice;\n\npublic interface InvoiceService {\n  LinkedHashMap<Long, ArrayList<ClearingAccount>> getInvoiceData(ArrayList<Long> partyIds);\n\n  String getMobileInvoiceDownloadLink(Invoice invoice, ClearingAccount clearingAccount);\n\n  String getFixedLineInvoiceDownloadLink(Invoice invoice);\n\n  Invoice getById(long invoiceId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/TurnoverService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/TurnoverService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 948,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Turnover;\n\npublic interface TurnoverService {\n\n  List<Turnover> getAllForParty(long partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CreditTypeService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CreditTypeService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1060,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.CreditType;\n\npublic interface CreditTypeService {\n\n  CreditType getCreditTypeById(Long id);\n\n  List<CreditType> getAllCreditTypes();\n\n  void saveCreditType(CreditType ct);\n\n  void deleteCreditType(Long id);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/InsuranceBrokerCpiService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/InsuranceBrokerCpiService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 285,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.InsuranceBrokerInfo;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionNode;\n\npublic interface InsuranceBrokerCpiService {\n  InsuranceBrokerInfo getCpiContractQuickInfo(SubscriptionNode subscriptionNode);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/PhoneNumberService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/PhoneNumberService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4042,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.MobileChurnLikeliness;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\npublic interface PhoneNumberService {\n\n  /**\n   * Geth the list of phonenumbers owned by a customer\n   * \n   * @param customerId The id of the customer to get the number for\n   * @return empty list if no data found\n   */\n  List<PhoneNumber> listPhoneNumbers4Customer(Number customerId);\n\n  /**\n   * Get the list of phonenumber owned by given customer with given contract\n   * \n   * @param customerId The id of the customer to get the number for\n   * @param contractId The contract assigned to the number\n   * @return empty list if no data found\n   */\n  List<PhoneNumber> listPhoneNumbers4Customer(Number customerId, Number contractId);\n\n  /**\n   * Get the list of phonenumbers owned by given customer\n   * \n   * @param customerId The id of the customer to get the number for\n   * @param contractId The contract assigned to the number\n   * @param locationId The location the phone is settled\n   * @return empty list if no data found\n   */\n  List<PhoneNumber> listPhoneNumbers4Customer(Number customerId, Number contractId, Number locationId);\n\n  /**\n   * Get the list of phonenumbers owned by given customer\n   * \n   * @param customerId The id of the customer to get the number for\n   * @param contractId The contract assigned to the number\n   * @param locationId The location the phone is settled\n   * @param skip The number of entries to be skipped at the beginning of the result\n   * @param maxResults The total number of items to be contained in result\n   * @return empty list if no data found\n   */\n  List<PhoneNumber> listPhoneNumbers4Customer(Number customerId, Number contractId, Number locationId, int skip, int maxResults);\n\n  /**\n   * Get the list of phonenumbers for a given location\n   * \n   * @param locationId The if of the location the number is settled at\n   * @return empty list if no data found\n   */\n  List<PhoneNumber> listPhoneNumbers4Location(Number locationId);\n\n  /**\n   * Get the list of phonenumbers for a given location owned by a given customer\n   * \n   * @param locationId The if of the location the number is settled at\n   * @param customerId The id of the customer to get the number for\n   * @return empty list if no data found\n   */\n  List<PhoneNumber> listPhoneNumbers4Location(Number locationId, Number customerId);\n\n  /**\n   * Get the list of phonenumbers for a given contract\n   * \n   * @param contractId The id of the contract the number belongs to\n   * @return empty list if no data found\n   */\n  List<PhoneNumber> listPhoneNumbers4Contract(Number contractId);\n\n  PhoneNumberStructure parse(final String input);\n\n  List<BillingAccountNumber> getBillingAccountNumbersForParty(long partyId);\n\n  Long getBillingAccountNumberForPhoneNumber(String countryCode, String onkz, String number);\n\n  ArrayList<String> getPhoneNumbersForClearingAccountId(long clearingAccountId);\n\n  List<PhoneNumber> getPhoneNumbersForBillingAccountNumber(BillingAccountNumber ban);\n\n  List<MobileChurnLikeliness> getMobileChurnLikelinessForParty(long partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/UsageDataService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/UsageDataService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1408,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.usagedata.InetUsage;\nimport at.a1ta.cuco.core.shared.dto.usagedata.MobileUsage;\nimport at.a1ta.cuco.core.shared.dto.usagedata.NetworkProvider;\nimport at.a1ta.cuco.core.shared.dto.usagedata.VoiceUsage;\n\npublic interface UsageDataService {\n\n  List<String> getFixedLineNumbers(long partyId);\n\n  List<String> getMobileBanNumbers(long partyId);\n\n  List<String> getMobileNumbers(long partyId, String ban);\n\n  List<String> getAonNumbers(long partyId);\n\n  List<VoiceUsage> getFixedLineUsage(List<Long> partyIds);\n\n  List<VoiceUsage> getFixedLineUsage(long partyId);\n\n  List<VoiceUsage> getFixedLineUsage(long partyId, String phoneNumber);\n\n  List<VoiceUsage> getFixedLineZoneUsage(long partyId, String phoneNumber);\n\n  List<VoiceUsage> getFixedLineTimeZones(long partyId, String phoneNumber);\n\n  List<InetUsage> getAonUsageData(List<Long> partyIds, NetworkProvider provider);\n\n  List<InetUsage> getAonUsageData(long partyId, NetworkProvider provider);\n\n  List<InetUsage> getAonUsageData(long partyId, String aonNumber, NetworkProvider networkProvider);\n\n  List<MobileUsage> getMobileUsageDataPerBan(long partyId, String ban);\n\n  List<MobileUsage> getMobileUsageData(List<Long> partyIds);\n\n  List<MobileUsage> getMobileUsageData(long partyId);\n\n  List<MobileUsage> getMobileUsageData(long partyId, String phoneNumber);\n\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/PartyDeclarationOfConsentService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/PartyDeclarationOfConsentService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 396,
    "content": "package at.a1ta.cuco.core.service;\n\nimport a1.gdpr.webservice.Brand;\nimport a1.gdpr.webservice.UserType;\nimport at.a1ta.cuco.core.shared.dto.PartyDeclarationOfConsentInfo;\n\npublic interface PartyDeclarationOfConsentService {\n  PartyDeclarationOfConsentInfo getCurrentDeclarationOfConsentForParty(final String partyID, final String userId, final Brand.Enum brand, final UserType.Enum userType);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/PartyCustomerLoyaltyService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/PartyCustomerLoyaltyService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 205,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.PartyCustomerLoyaltyInfo;\n\npublic interface PartyCustomerLoyaltyService {\n  PartyCustomerLoyaltyInfo getParty(final long partyId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/AccessTokenService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/AccessTokenService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 647,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.rmi.RemoteException;\n\nimport at.a1ta.cuco.core.bean.PWUTokenResponse;\nimport at.a1ta.cuco.core.shared.dto.AccessToken;\nimport at.a1ta.cuco.core.shared.dto.PartnerCenterAccessTokenRequest;\n\nimport com.telekomaustriagroup.esb.landingpagedealer.OrderServiceFault;\n\npublic interface AccessTokenService {\n\n  String LANDING_PAGE_DEALER_SETTING_PREFIX = \"at.telekom.esb.LandingPageDealer.createTokenForOrderDataRequest\";\n\n  AccessToken getAccessTokenForPartnerCenter(PartnerCenterAccessTokenRequest request);\n\n  PWUTokenResponse validatePWUToken(String token) throws RemoteException, OrderServiceFault;\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ServiceService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ServiceService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1092,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Service;\n\npublic interface ServiceService {\n\n  List<Service> getAllServices();\n\n  void saveService(Service ct);\n\n  void deleteService(Long id);\n\n  List<Service> getValidForUser(Long userId);\n\n  List<Service> searchService(String service);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/AutoVvlService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/AutoVvlService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 312,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.product.AutoVvlInfo;\nimport at.a1ta.cuco.core.shared.dto.product.CallNumber;\n\npublic interface AutoVvlService {\n\n  public AutoVvlInfo getAutoVvlInfoByCallNumber(CallNumber cn);\n\n  public AutoVvlInfo getAutoVvlInfoByBan(String banNumber);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/PayableTicketService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/PayableTicketService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1062,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\n\npublic interface PayableTicketService {\n\n  List<PayableTicket> getTicketsForParties(List<Party> parties);\n\n  void insertTicket(PayableTicket ticket);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/PromotionService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/PromotionService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 281,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.product.CallNumber;\nimport at.a1ta.cuco.core.shared.dto.product.Promotion;\n\npublic interface PromotionService {\n\n  ArrayList<Promotion> getSubscriptions(CallNumber callNumber);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/InsuranceBrokerHsiService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/InsuranceBrokerHsiService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 365,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.InsuranceBrokerInfo;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionNode;\n\npublic interface InsuranceBrokerHsiService {\n  InsuranceBrokerInfo getCostFreeClaimInfo(SubscriptionNode subscriptionNode);\n\n  InsuranceBrokerInfo getHsiContractQuickInfo(SubscriptionNode subscriptionNode);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ImageService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ImageService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1593,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.Image;\n\npublic interface ImageService {\n  /**\n   * @param id\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   * @return list of images\n   */\n  List<Image> getImages(final Number id, final String uuser, final String filename, final String name, final Number imageSizeId);\n\n  /**\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   */\n  void saveImage(final String uuser, final String filename, final String name, final Number imageSizeId);\n\n  /**\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   * @return number of affected rows\n   */\n  int updateImage(final String uuser, final String filename, final String name, final Number imageSizeId);\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/MasterSessionControlService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/MasterSessionControlService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 178,
    "content": "package at.a1ta.cuco.core.service;\n\npublic interface MasterSessionControlService {\n\n  String getURLForDOCHome(String partyID, String username, String name, String ipAddress);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/MobilPointsService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/MobilPointsService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1234,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.MobilPoints;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.MobilPointsBundle;\n\npublic interface MobilPointsService {\n  public MobilPointsBundle getMobilPoints(String phoneNumber);\n\n  public MobilPointsBundle getBusinessHardwareReplacement(String ban);\n\n  public MobilPoints getMobilPoints(PhoneNumberStructure phoneNumberStructure);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CMBuddyHttpService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CMBuddyHttpService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 114,
    "content": "package at.a1ta.cuco.core.service;\n\npublic interface CMBuddyHttpService {\n\n  String getBuddyLink(Long partyId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/CuscoUnlockService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/CuscoUnlockService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 384,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.dao.cusco.CusCoResponse;\nimport at.a1ta.cuco.core.shared.dto.Customer;\n\npublic interface CuscoUnlockService {\n\n  CusCoResponse prepareForSign(Customer customer, UserInfo userInfo, String contactPerson, String templateId);\n\n  CusCoResponse checkStatusForSigned(String jobId);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/PartyService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/PartyService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2736,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.List;\n\nimport at.a1ta.bite.data.solr.core.query.Field;\nimport at.a1ta.bite.data.solr.core.query.result.FacetResult;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartyAdditionalInfo;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.SimplePage;\n\npublic interface PartyService {\n\n  Party get(long id);\n\n  SimplePage<Party> search(PartySearch customerSearch);\n\n  /**\n   * Get the list of customers assigned to a given header<br />\n   * <b>Note:</b> if headerId == customerId the result will be same customer as requested\n   * \n   * @param headerId The id of the header the customers are assigned to\n   * @return empty list if no data found\n   */\n  List<Party> getCustomers4Header(Number headerId);\n\n  /**\n   * Get the list of customers assigned to a given header<br />\n   * <b>Note:</b> if headerId == customerId the result will be same customer as requested\n   * \n   * @param headerId The id of the header the customers are assigned to\n   * @param skip The number of entries to be skipped at the beginning of the result\n   * @param maxResults The total number of items to be contained in result\n   * @return empty list if no data found\n   */\n  List<Party> getCustomers4Header(Number headerId, int skip, int maxResults);\n\n  int countCustomers4Header(Long headerId);\n\n  boolean isSubsidised(long customerId);\n\n  List<String> getAllSegments();\n\n  Party getHierarchyForParty(long partyId);\n\n  List<FacetResult> facetedSearch(PartySearch partySearch, Field facetedField);\n\n  boolean isIndexedSearchEnabled();\n\n  SimplePage<Party> searchNonCustomers(PartySearch partySearch);\n\n  void saveNonCustomer(Party party);\n\n  void mergeNonCustomerAndTransferOffers(Party party);\n\n  PartyAdditionalInfo getPartyAdditionalInfo(long partyId, String userName);\n\n  PartyAdditionalInfo getPartyAdditionalInfo(long partyId);\n\n  String getPartyIdForQuoteNumber(String offerNumber);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/GamificationHttpService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/GamificationHttpService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 300,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.GamificationRequest;\nimport at.a1ta.cuco.core.shared.dto.GamificationResponse;\n\npublic interface GamificationHttpService {\n  GamificationResponse getAvailableGamificationMessages(GamificationRequest message, String endpoint);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/BrkServiceClient.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/BrkServiceClient.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 328,
    "content": "package at.a1ta.cuco.core.service;\n\nimport at.a1ta.cuco.core.shared.dto.product.BRKAccountInfo;\n\npublic interface BrkServiceClient {\n\n  public BRKAccountInfo getBRKAccountInfo(String brkAccountNumber);\n\n  public String getBRKAccountNumber(String banNumber);\n\n  public BRKAccountInfo getBRKAccountInfoForBAN(String banNumber);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/TeamService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/TeamService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1058,
    "content": "package at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\n\npublic interface TeamService {\n\n  public void updateTeam(Team team);\n\n  public void insertTeam(Team team);\n\n  public List<Team> getAllTeams();\n\n  public void deleteTeam(Long teamId);\n\n  public Team getTeam(Long teamId);\n\n  public Team getTeamForUser(Long userId);\n\n  public void save(Team team);\n\n  public void removeTeamMember(Long teamId, Long userId);\n\n  public List<BiteUser> getAllUsers(Auth authority);\n\n  public void addTeamMembers(Long teamId, List<Long> userIds);\n\n  public List<Service> getNotLinkedServices(Long teamId);\n\n  public void addServices(Long teamId, List<Long> serviceIds);\n\n  public void removeService(Long teamId, Long serviceId);\n\n  public List<Service> getService(String service);\n\n  public ArrayList<BiteUser> searchUsers(String name, String user, String orgunit);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/ClearingAccountService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/ClearingAccountService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1322,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport at.a1ta.cuco.core.shared.dto.ClearingAccount;\n\npublic interface ClearingAccountService {\n  List<ClearingAccount> getByPartyId(Long partyId);\n\n  List<ClearingAccount> getActiveTaByPartyId(Long partyId);\n\n  List<ClearingAccount> getByPartyIds(ArrayList<Long> partyIds);\n\n  ClearingAccount getClearingAccountForPhonenumber(String phonenubmer);\n\n  Long getClearingNumberForPhonenumber(String phonenubmer);\n\n  ClearingAccount getByAccountNumber(Long clearingAccountNumber);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PayableTicketServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PayableTicketServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8246,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.PrintWriter;\nimport java.io.StringWriter;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport javax.annotation.PostConstruct;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport at.a1ta.bite.core.server.dao.PersonDao;\nimport at.a1ta.bite.core.shared.BaseStrategyHolder;\nimport at.a1ta.bite.core.shared.Strategy;\nimport at.a1ta.bite.core.shared.StrategyHolder;\nimport at.a1ta.bite.core.shared.dto.cd.CdPerson;\nimport at.a1ta.bite.data.clarify.service.ClarifyInteractionService;\nimport at.a1ta.bite.data.clarify.shared.dto.ClarifyInteraction;\nimport at.a1ta.cuco.core.dao.db.PayableTicketDao;\nimport at.a1ta.cuco.core.dao.esb.BrianDao;\nimport at.a1ta.cuco.core.service.PayableTicketService;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PayableTicket;\n\n@Service\npublic class PayableTicketServiceImpl implements PayableTicketService {\n  private static final Logger logger = LoggerFactory.getLogger(PayableTicketServiceImpl.class);\n\n  private PayableTicketDao payableTicketDao;\n  private ClarifyInteractionService interactionService;\n\n  private StrategyHolder<Strategy<PayableTicket>, PayableTicket> holder;\n\n  private PersonDao personDao;\n\n  private BrianDao brianDao;\n\n  public PayableTicketServiceImpl() {\n\n  }\n\n  PayableTicketServiceImpl(List<Strategy<PayableTicket>> strategies) {\n    this.holder = new PayableTicketStrategyHolder(strategies);\n  }\n\n  @Override\n  public List<PayableTicket> getTicketsForParties(List<Party> parties) {\n    return payableTicketDao.getTicketsForParties(parties);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void insertTicket(PayableTicket ticket) {\n    try {\n      if (ticket.getService().getChargingType().getId().equals(3L)) {\n        ticket.setExportedDate(new Date());\n      }\n\n      this.holder.handle(ticket);\n      logger.info(\"PAST ticket for customer=\" + ticket.getCustomerId() + \", onkz=\" + ticket.getOnkz() + \", lknz=\" + ticket.getLknz() + \", number=\" + ticket.getNumber() + \", service id=\"\n          + ticket.getService().getId() + \" created.\");\n    } catch (Exception e) {\n      logger.error(\"Error inserting PAST ticket\", e);\n      throw e;\n    }\n  }\n\n  /**\n   * Ticket strategy holder taking care of handling tickets\n   */\n  private static class PayableTicketStrategyHolder extends BaseStrategyHolder<Strategy<PayableTicket>, PayableTicket> {\n\n    protected PayableTicketStrategyHolder(List<Strategy<PayableTicket>> list) {\n      super(list);\n    }\n\n  }\n\n  /**\n   * Saves Payable ticket to database and creates interaction for non mobile ones.\n   */\n  private class GlobalTicketStrategy implements Strategy<PayableTicket> {\n\n    private final PayableTicketDao ticketDao;\n\n    protected GlobalTicketStrategy(PayableTicketDao ticketDao) {\n      this.ticketDao = ticketDao;\n    }\n\n    @Override\n    public Object handle(PayableTicket value) {\n      handleTicket(value);\n      return Boolean.TRUE;\n    }\n\n    private void handleTicket(PayableTicket ticket) {\n      if (ticket.getService().getChargingType().getId().equals(1L)) {\n        if (ticket.getOnkz() == null || ticket.getOnkz().equals(\"\") || ticket.getNumber() == null || ticket.getNumber().equals(\"\")) {\n          throw new RuntimeException(\"Number is null or empty\");\n        }\n      } else if (ticket.getService().getChargingType().getId().equals(2L)) {\n        if (ticket.getClearingAccountNumber() == null) {\n          throw new RuntimeException(\"Clearingaccount is null\");\n        }\n      }\n      ticketDao.insertTicket(ticket);\n    }\n\n    @Override\n    public boolean canHandle(PayableTicket candidate) {\n      return true;\n    }\n\n  }\n\n  /**\n   * Writes interactions for non mobile tickets to ClarifyFixed\n   */\n  private class InteractionWritingStrategy implements Strategy<PayableTicket> {\n\n    private final ClarifyInteractionService interactionService;\n\n    public InteractionWritingStrategy(ClarifyInteractionService interactionService) {\n      super();\n      this.interactionService = interactionService;\n    }\n\n    @Override\n    public Object handle(PayableTicket ticket) {\n      writeInteraction(ticket);\n      return Boolean.TRUE;\n    }\n\n    @Override\n    public boolean canHandle(PayableTicket candidate) {\n      if (candidate.getService() != null && candidate.getService().getChargingType() != null) {\n        return !candidate.getService().getChargingType().isMobileChargingType();\n      }\n      return false;\n    }\n\n    private void writeInteraction(PayableTicket ticket) {\n      try {\n        interactionService.saveInteraction(getInteractionForTicket(ticket));\n      } catch (Exception e) {\n        StringWriter stack = new StringWriter();\n        e.printStackTrace(new PrintWriter(stack));\n        logger.debug(\"Exception: \" + stack.toString());\n        logger.error(\"Interaction for PaST Ticket \" + (ticket != null ? ticket.getId() : \"\") + \" could not be created.\", e);\n      }\n    }\n\n    private ClarifyInteraction getInteractionForTicket(PayableTicket ticket) {\n      CdPerson agent = personDao.getPerson(ticket.getAgent().getUsername());\n      ClarifyInteraction interaction = new ClarifyInteraction(ClarifyInteraction.Type.CONTACT);\n\n      interaction.setPartyId(ticket.getCustomerId());\n      interaction.setAgentUuser(ticket.getAgent().getUsername());\n      interaction.setPhoneNumber(ticket.getOnkz() + ticket.getNumber());\n      interaction.setInsertedBy(\"PaST\");\n      interaction.setDirection(ClarifyInteraction.Direction.INBOUND);\n      interaction.setType(\"PaST\");\n\n      if (ticket.getService().getProduct() != null) {\n        interaction.setProduct(ticket.getService().getProduct());\n      }\n      if (ticket.getService().getReason1() != null) {\n        interaction.setReason1(ticket.getService().getReason1());\n      }\n      if (ticket.getService().getReason2() != null) {\n        interaction.setReason2(ticket.getService().getReason2());\n      }\n      interaction.setReason3(\"Nettobetrag: \" + ticket.getCosts() + \"\u20ac\");\n      if (ticket.getService().getResult() != null) {\n        interaction.setResult(ticket.getService().getResult());\n      }\n\n      String notes = \"Agent: \" + agent.getCn() + \" (\" + agent.getUuser() + \")\\n\";\n      notes = notes + \"Telefonnummer: \" + ticket.getOnkz() + \"/\" + ticket.getNumber() + \"\\n\\n\";\n      notes = notes + \"Zusatzinfos:\\n\" + ticket.getComment();\n      interaction.setNote(notes);\n\n      return interaction;\n    }\n  }\n\n  /**\n   * Save ticket to ADX billing system (used for mobile/convergent products)\n   */\n  private class ADXTicketStrategy implements Strategy<PayableTicket> {\n\n    private BrianDao brainDao;\n\n    protected ADXTicketStrategy(BrianDao brainDao) {\n      this.brainDao = brainDao;\n    }\n\n    @Override\n    public Boolean handle(PayableTicket value) {\n      addCredit(value);\n      return Boolean.TRUE;\n    }\n\n    private void addCredit(PayableTicket ticket) {\n      brainDao.addCreditRecord(ticket);\n    }\n\n    @Override\n    public boolean canHandle(PayableTicket candidate) {\n      if (candidate == null) {\n        return false;\n      }\n\n      return candidate.getService().getChargingType().getId().equals(3L);\n    }\n\n  }\n\n  @Autowired\n  public void setPayableTicketDao(PayableTicketDao payableTicketDao) {\n    this.payableTicketDao = payableTicketDao;\n  }\n\n  @Autowired\n  public void setInteractionService(ClarifyInteractionService interactionService) {\n    this.interactionService = interactionService;\n  }\n\n  @Autowired\n  public void setBrianDao(BrianDao brianDao) {\n    this.brianDao = brianDao;\n  }\n\n  @Autowired\n  public void setPersonDao(PersonDao personDao) {\n    this.personDao = personDao;\n  }\n\n  @PostConstruct\n  public void afterPropertiesSet() {\n    List<Strategy<PayableTicket>> strategies = new ArrayList<Strategy<PayableTicket>>();\n    strategies.add(new GlobalTicketStrategy(this.payableTicketDao));\n    strategies.add(new ADXTicketStrategy(brianDao));\n    strategies.add(new InteractionWritingStrategy(interactionService));\n    this.holder = new PayableTicketStrategyHolder(strategies);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ContactPersonServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ContactPersonServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4284,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.ContactPersonDao;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.service.ContactPersonService;\nimport at.a1ta.cuco.core.shared.dto.ContactPerson;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\n@Service\npublic class ContactPersonServiceImpl implements ContactPersonService {\n\n  private ContactPersonDao contactPersonDao;\n  private PartyDao partyDao;\n\n  @Override\n  public List<ContactPerson> listContactPersons(List<Long> partyIds) {\n    List<ContactPerson> result = new ArrayList<ContactPerson>();\n    result.addAll(contactPersonDao.listContactPersonsInclLocalContacts(partyIds));\n    result.addAll(extractContactPersons(partyDao.loadParties(partyIds)));\n    return result;\n  }\n\n  @Override\n  public List<ContactPerson> listContactPersonsIncludingDeleted(List<Long> partyIds) {\n    List<ContactPerson> result = new ArrayList<ContactPerson>();\n    result.addAll(contactPersonDao.listContactPersonsInclLocalContactsAndDeletedContacts(partyIds));\n    result.addAll(extractContactPersons(partyDao.loadParties(partyIds)));\n    return result;\n  }\n\n  private List<ContactPerson> extractContactPersons(List<Party> parties) {\n    List<ContactPerson> result = new ArrayList<ContactPerson>();\n\n    for (Party party : parties) {\n      boolean containsName = party.getContactPersonLastName() != null && party.getContactPersonFirstName() != null;\n      boolean containsMail = party.getEMailAddress() != null;\n      boolean hasPhoneOrFaxNumber = party.getContactPhoneNumber1() != null || party.getContactPhoneNumber2() != null || party.getFaxNumber() != null;\n\n      boolean displayContact = containsName && (containsMail || hasPhoneOrFaxNumber);\n\n      if (!displayContact) {\n        continue;\n      }\n      ContactPerson person = extractContactPerson(party);\n\n      result.add(person);\n    }\n\n    return result;\n  }\n\n  private ContactPerson extractContactPerson(Party party) {\n    ContactPerson result = new ContactPerson();\n\n    result.setCustomerId(party.getId());\n    result.setSalutation(party.getContactPersonSalutation());\n    result.setTitle(party.getContactPersonTitle());\n    result.setFirstname(party.getContactPersonFirstName());\n    result.setLastname(party.getContactPersonLastName());\n    result.setBirthdate(party.getContactPersonBirthdate());\n    result.setAddressLine1(party.getAddressLine1());\n    result.setAddressLine2(party.getAddressLine2());\n    result.setMail(party.getEMailAddress());\n    result.setMobilephoneNumber(party.getMobilePhoneNumber());\n    result.setFaxNumber(party.getFaxNumber());\n    result.setDayPhoneNumber(party.getContactPhoneNumber1());\n    result.setNightPhoneNumber(party.getContactPhoneNumber2());\n    result.setActive(true);\n    result.setDeleted(0);\n    result.setSource(\"KUMS\");\n\n    return result;\n  }\n\n  @Autowired\n  public void setPartyDao(@Qualifier(\"cucoCustomerDao\") PartyDao partyDao) {\n    this.partyDao = partyDao;\n  }\n\n  @Autowired\n  public ContactPersonServiceImpl(ContactPersonDao contactPersonDao) {\n    this.contactPersonDao = contactPersonDao;\n  }\n\n  @Override\n  public void insertLocalContact(ContactPerson contact) {\n    this.contactPersonDao.insertLocalContact(contact);\n\n  }\n\n  @Override\n  public void updateLocalContact(ContactPerson contact) {\n    this.contactPersonDao.updateLocalContact(contact);\n\n  }\n\n  @Override\n  public void updateLocalContactStatus(ContactPerson contact) {\n    this.contactPersonDao.updateLocalContactStatus(contact);\n  }\n\n  @Override\n  public void updateDWHContactStatus(ContactPerson contact) {\n    this.contactPersonDao.updateDWHContactStatus(contact);\n  }\n\n  @Override\n  public void deleteLocalContact(ContactPerson contact) {\n    this.contactPersonDao.deleteLocalContact(contact);\n  }\n\n  @Override\n  public void markLocalContactDeleted(ContactPerson contact) {\n    this.contactPersonDao.markLocalContactDeleted(contact);\n  }\n\n  @Override\n  public Boolean checkIfReferenceExists(Long partyId, Long id) {\n    return this.contactPersonDao.checkIfReferenceExists(partyId, id);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/KumsCustomerServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/KumsCustomerServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8917,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.rmi.RemoteException;\n\nimport javax.xml.ws.WebServiceException;\n\nimport net.sf.ehcache.Cache;\nimport net.sf.ehcache.CacheManager;\nimport net.sf.ehcache.Element;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport wskums_s_wstokumskundebearbeiten_wskums_s_wstokumskundebearbeiten.EditCustomerType;\nimport wskums_s_wstokumskundebearbeiten_wskums_s_wstokumskundebearbeiten.WSKUMSKUNDEBEARBEITEN;\nimport wskums_s_wstokumskundebearbeiten_wskums_s_wstokumskundebearbeiten.WSKUMSKUNDEBEARBEITENInput;\nimport wskums_s_wstokumskundebearbeiten_wskums_s_wstokumskundebearbeiten.WSKUMSKUNDEBEARBEITENReturnCode;\nimport wskums_s_wstokumskundebearbeiten_wskums_s_wstokumskundebearbeiten.WSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFromDocument;\nimport wskums_s_wstokumskundebearbeiten_wskums_s_wstokumskundebearbeiten.WSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFromResponseDocument;\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.service.KumsCustomerService;\nimport at.a1ta.cuco.core.shared.dto.KumsCustomerInfo;\nimport at.a1ta.cuco.core.shared.dto.VipStatus;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSHeader;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSUCHEPRIMBERECHT2;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSUCHEPRIMBERECHTInput2;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSUCHEPRIMBERECHTOutput2;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseDocument;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseType;\nimport at.telekom.www.eai.wskums_s_wstokumssucheprimberecht.WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromType;\n\nimport com.telekomaustriagroup.esb.kumscustomer.KUMSCustomerStub;\n\n@Service\npublic class KumsCustomerServiceImpl extends BaseEsbClient<KUMSCustomerStub> implements KumsCustomerService {\n\n  private static final String EMPTY = \"\";\n\n  private static final Logger logger = LoggerFactory.getLogger(KumsCustomerServiceImpl.class);\n\n  private static final String SETTING_VIP_BEARBEITER = \"vip.bearbeiter\";\n\n  private static final String SETTING_VIP_SOURCESYSTEM = \"vip.sourcesystem\";\n\n  private static final String VERB = \"Retrieve\";\n\n  private Cache cache = CacheManager.getInstance().getCache(\"VIPCache\");\n\n  private SettingService settingService;\n\n  @Override\n  public VipStatus getVipStatus(String customerId) {\n    Element e = getVipStatusFromCache(customerId, cache);\n\n    if (e != null) {\n      logger.debug(\"VIPCache hit: \" + customerId);\n      return new VipStatus((Integer) e.getValue());\n    }\n\n    try {\n      Integer intStatus = getVipStatusFromKums(customerId);\n      cache.put(new Element(customerId, intStatus));\n      logger.debug(\"VIPCache put: \" + customerId + \":\" + intStatus);\n\n      return new VipStatus(intStatus);\n    } catch (Exception ex) {\n      logger.error(\"Error during getting VIP status for customer \" + customerId);\n      return new VipStatus();\n    }\n  }\n\n  private Element getVipStatusFromCache(String customerId, Cache cache) {\n    try {\n      return cache.get(customerId);\n    } catch (Throwable ex) {\n      logger.error(ex.getMessage(), ex);\n    }\n    return null;\n  }\n\n  private Integer getVipStatusFromKums(String customerId) {\n    WSKUMSSUCHEPRIMBERECHTOutput2 output = getCustomerData(customerId);\n\n    if (output.getSbText() == null) {\n      return null;\n    }\n    String vip = output.getSbText().getValue();\n\n    return vip != null ? Integer.valueOf(vip) : null;\n  }\n\n  @Override\n  public String getLastChangeDate(String customerId) {\n    WSKUMSSUCHEPRIMBERECHTOutput2 output = getCustomerData(customerId);\n\n    return output.getLetzteaend().getValue();\n  }\n\n  @Override\n  public KumsCustomerInfo getKumsCustomerInfo(String customerId) {\n    WSKUMSSUCHEPRIMBERECHTOutput2 output = getCustomerData(customerId);\n\n    KumsCustomerInfo info = new KumsCustomerInfo();\n    info.setLastChangeDate(output.getLetzteaend().getValue());\n    String vip = output.getSbText().getValue();\n    info.setVipStatus(vip != null ? Integer.valueOf(vip) : null);\n\n    return info;\n  }\n\n  private WSKUMSSUCHEPRIMBERECHTOutput2 getCustomerData(String customerId) {\n    try {\n      WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument reqDocument = WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromDocument.Factory.newInstance();\n      WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromType request = reqDocument.addNewWSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2From();\n\n      WSKUMSSUCHEPRIMBERECHT2 wskumssucheprimberecht2 = request.addNewWSKUMSSUCHEPRIMBERECHT2();\n      wskumssucheprimberecht2.setVerb(VERB);\n      WSHeader header = wskumssucheprimberecht2.addNewHeader();\n      WSKUMSSUCHEPRIMBERECHTInput2 input = wskumssucheprimberecht2.addNewWSKUMSSUCHEPRIMBERECHTInput();\n\n      header.setSourcesystem(settingService.getValue(SETTING_VIP_SOURCESYSTEM));\n      input.setBearbeiter(settingService.getValue(SETTING_VIP_BEARBEITER));\n      input.setPartnerid(customerId);\n\n      WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseDocument responseDoc;\n      responseDoc = stub.SuchePrimaer(reqDocument, null);\n      WSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponseType response = responseDoc.getWSKUMSSWSToKUMSSuchePrimBerechtWSKUMSSUCHEPRIMBERECHT2FromResponse();\n      WSKUMSSUCHEPRIMBERECHTOutput2 output = response.getWSKUMSSUCHEPRIMBERECHT2().getWSKUMSSUCHEPRIMBERECHTOutput();\n\n      if (response.getWSKUMSSUCHEPRIMBERECHT2().getFault().getFaultString() != null && !response.getWSKUMSSUCHEPRIMBERECHT2().getFault().getFaultString().isEmpty()) {\n        String faultMessage = response.getWSKUMSSUCHEPRIMBERECHT2().getFault().getFaultString();\n        throw new WebServiceException(faultMessage);\n      }\n      return output;\n    } catch (RemoteException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n  @Override\n  public void saveVipStatus(String customerId, String lastChangeDate, String vipStatus, String user) {\n    try {\n      WSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFromDocument reqDocument = prepareWSKUMSKUNDEBEARBEITENRequest(customerId, lastChangeDate, vipStatus, user);\n      WSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFromResponseDocument responseDoc = stub.editCustomer(reqDocument, null);\n\n      EditCustomerType response = responseDoc.getWSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFromResponse();\n      WSKUMSKUNDEBEARBEITENReturnCode returnCode = response.getWSKUMSKUNDEBEARBEITEN().getWSKUMSKUNDEBEARBEITENReturnCode();\n      if (returnCode != null && returnCode.getFEHLERTEXT() != null && !returnCode.getFEHLERTEXT().isEmpty()) {\n        logger.error(returnCode.getFEHLERTEXT());\n        throw new EsbException(returnCode.getFEHLERTEXT());\n      }\n\n    } catch (RemoteException e) {\n      throw new EsbException(e);\n    }\n    cache.remove(customerId);\n  }\n\n  private WSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFromDocument prepareWSKUMSKUNDEBEARBEITENRequest(String customerId, String lastChangeDate, String vipStatus, String user) {\n    WSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFromDocument reqDocument = WSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFromDocument.Factory.newInstance();\n    EditCustomerType request = reqDocument.addNewWSKUMSSWSToKUMSKundeBearbeitenWSKUMSKUNDEBEARBEITENFrom();\n\n    WSKUMSKUNDEBEARBEITEN wskumskundebearbeiten = request.addNewWSKUMSKUNDEBEARBEITEN();\n\n    WSKUMSKUNDEBEARBEITENReturnCode addNewWSKUMSKUNDEBEARBEITENReturnCode = wskumskundebearbeiten.addNewWSKUMSKUNDEBEARBEITENReturnCode();\n    addNewWSKUMSKUNDEBEARBEITENReturnCode.setRC(EMPTY);\n    addNewWSKUMSKUNDEBEARBEITENReturnCode.setFEHLERNR(EMPTY);\n    addNewWSKUMSKUNDEBEARBEITENReturnCode.setFEHLERTEXT(EMPTY);\n\n    WSKUMSKUNDEBEARBEITENInput input = wskumskundebearbeiten.addNewWSKUMSKUNDEBEARBEITENInput();\n    input.setBearbeiter(this.settingService.getValue(SETTING_VIP_BEARBEITER));\n    input.setSystem(this.settingService.getValue(SETTING_VIP_SOURCESYSTEM));\n    input.setKundennummer(customerId);\n    input.setPvorname(\"N\");\n    input.setPgeburtsdatum(\"N\");\n    input.setLetzteaenderung(lastChangeDate);\n    input.setSbText(vipStatus);\n    input.setGz(user);\n    return reqDocument;\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MobilPointsServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MobilPointsServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4053,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.Future;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.springframework.beans.factory.ObjectFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.esb.MobilPointsDao;\nimport at.a1ta.cuco.core.service.MobilPointsService;\nimport at.a1ta.cuco.core.service.PhoneNumberService;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.BusinessHardwareReplacement;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.MobilPoints;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.MobilPointsBundle;\n\n@Service\npublic class MobilPointsServiceImpl implements MobilPointsService {\n  @Autowired\n  private PhoneNumberService phonenumberService;\n\n  @Autowired\n  private ObjectFactory<MobilPointsCallable> mobilePointsCallableFactory;\n  @Autowired\n  private ObjectFactory<BusinessHardwareReplacementCallable> businessHardwareReplacementCallableFactory;\n  @Autowired\n  private MobilPointsDao mobilPointsDao;\n\n  private ExecutorService executor = Executors.newCachedThreadPool();\n\n  @Override\n  public MobilPointsBundle getMobilPoints(String phoneNumber) {\n    try {\n      PhoneNumberStructure phoneNumberStructure = getPhoneNumberStructureFromString(phoneNumber);\n      long billingAccountNumber = getBillingAccountNumber(phoneNumberStructure);\n\n      MobilPointsCallable mobilePointsCallable = mobilePointsCallableFactory.getObject();\n      mobilePointsCallable.setPhoneNumberStructure(phoneNumberStructure);\n      Future<MobilPoints> futureMobilPoints = executor.submit(mobilePointsCallable);\n\n      BusinessHardwareReplacementCallable businessHardwareReplacementCallable = businessHardwareReplacementCallableFactory.getObject();\n      businessHardwareReplacementCallable.setBillingAccountNumber(billingAccountNumber);\n      Future<BusinessHardwareReplacement> futureBusinessHardwareReplacement = executor.submit(businessHardwareReplacementCallable);\n\n      MobilPoints mobilPoints = futureMobilPoints.get();\n      BusinessHardwareReplacement businessHardwareReplacement = futureBusinessHardwareReplacement.get();\n\n      return createBundle(phoneNumber, mobilPoints, businessHardwareReplacement);\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error during requesting Mobil Points and Business Hardware Replacement\", e);\n    }\n  }\n\n  @Override\n  public MobilPoints getMobilPoints(PhoneNumberStructure phoneNumberStructure) {\n    return mobilPointsDao.getMobilPoints(phoneNumberStructure);\n  }\n\n  @Override\n  public MobilPointsBundle getBusinessHardwareReplacement(String ban) {\n    if (StringUtils.isEmpty(ban)) {\n      BusinessHardwareReplacement hr = new BusinessHardwareReplacement();\n      hr.setBusinessRewardingAccountsAvailable(false);\n      return createBundle(ban, null, hr);\n    }\n    BusinessHardwareReplacementCallable businessHardwareReplacementCallable = businessHardwareReplacementCallableFactory.getObject();\n    businessHardwareReplacementCallable.setBillingAccountNumber(Long.valueOf(ban));\n    BusinessHardwareReplacement result = businessHardwareReplacementCallable.call();\n\n    return createBundle(ban, null, result);\n  }\n\n  private long getBillingAccountNumber(PhoneNumberStructure phoneNumberStr) {\n    return phonenumberService.getBillingAccountNumberForPhoneNumber(phoneNumberStr.getCountryCode(), phoneNumberStr.getOnkz(), phoneNumberStr.getNumber());\n  }\n\n  private PhoneNumberStructure getPhoneNumberStructureFromString(String phoneNumber) {\n    return phonenumberService.parse(phoneNumber);\n  }\n\n  private MobilPointsBundle createBundle(String phoneNumber, MobilPoints mobilPoints, BusinessHardwareReplacement hr) {\n    MobilPointsBundle bundle = new MobilPointsBundle();\n    bundle.setPhoneNumber(phoneNumber);\n    bundle.setMobilPoints(mobilPoints);\n    bundle.setBusinessHardwareReplacement(hr);\n    return bundle;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ImageServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ImageServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1516,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.dao.db.ImageDao;\nimport at.a1ta.cuco.core.service.ImageService;\nimport at.a1ta.cuco.core.shared.dto.Image;\n\n/**\n * @author richard.gebauer@telekom.at\n */\npublic class ImageServiceImpl implements ImageService {\n  private ImageDao imageDao;\n\n  public ImageServiceImpl(final ImageDao imageDao) {\n    if (imageDao == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"imageDao\");\n    }\n    this.imageDao = imageDao;\n  }\n\n  /**\n   * @param id\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   * @return list of images\n   */\n  @Override\n  public List<Image> getImages(final Number id, final String uuser, final String filename, final String name, final Number imageSizeId) {\n    return this.imageDao.getImages(id, uuser, filename, name, imageSizeId);\n  }\n\n  /**\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   */\n  @Override\n  public void saveImage(final String uuser, final String filename, final String name, final Number imageSizeId) {\n    this.imageDao.saveImage(uuser, filename, name, imageSizeId);\n  }\n\n  /**\n   * @param uuser\n   * @param filename\n   * @param name\n   * @param imageSizeId\n   * @return number of affected rows\n   */\n  @Override\n  public int updateImage(final String uuser, final String filename, final String name, final Number imageSizeId) {\n    return this.imageDao.updateImage(uuser, filename, name, imageSizeId);\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/NoteMailHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/NoteMailHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3060,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.Date;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.service.SalesInfoService;\nimport at.a1ta.cuco.core.service.visitreport.VisitReportService;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.Task;\n\npublic class NoteMailHelper {\n\n  private VisitReportService visitReportService;\n  private SalesInfoService salesInfoService;\n  private MailService mailService;\n\n  public NoteMailHelper(VisitReportService visitReportService, SalesInfoService salesInfoService, MailService mailService) {\n    this.visitReportService = visitReportService;\n    this.salesInfoService = salesInfoService;\n    this.mailService = mailService;\n  }\n\n  public void sendInsertMails(SalesInfoNote note) throws Exception {\n    if (isVcalMailActive(note.getTask())) {\n      mailService.sendVcalMail(note);\n    }\n  }\n\n  public void sendUpdateMails(SalesInfoNote note) throws Exception {\n    SalesInfoNote origNote = null;\n\n    if (SalesInfoNoteType.SI_SIMPLE_NOTE == note.getSalesInfoNoteType()) {\n      origNote = salesInfoService.getSimpleNoteByNoteId(note.getSalesInfoNoteId());\n    } else if (SalesInfoNoteType.SI_COMPETITOR_NOTE == note.getSalesInfoNoteType()) {\n      origNote = salesInfoService.getCompetitorNoteByNoteId(note.getSalesInfoNoteId());\n    } else if (SalesInfoNoteType.SI_SALES_CONV_NOTE == note.getSalesInfoNoteType()) {\n      origNote = visitReportService.getSalesConvNoteByNoteId(note.getSalesInfoNoteId());\n    }\n\n    if (origNote == null) {\n      return;\n    }\n    Task currTask = note.getTask();\n    Task origTask = origNote.getTask();\n\n    if (isVcalMailActive(currTask) && (hasTextChanged(note, origNote) || hasTimeChanged(origTask, currTask) || hasAssigneeChanged(origTask, currTask))) {\n      mailService.sendVcalMail(note);\n    }\n\n    if ((isVcalMailActive(origTask) && !isVcalMailActive(currTask)) || (hasAssigneeChanged(origTask, currTask) && isVcalMailActive(origTask))) {\n      mailService.sendVcalCancelMail(origNote);\n    }\n  }\n\n  private boolean isVcalMailActive(Task task) {\n    return task.isActive() && task.isSendVCalendarMail();\n  }\n\n  private boolean hasTextChanged(SalesInfoNote orig, SalesInfoNote curr) {\n    String origText = orig.getNoteText();\n    String currText = curr.getNoteText();\n    if (currText == null) {\n      return origText != null;\n    }\n    return !currText.equals(origText);\n  }\n\n  private boolean hasTimeChanged(Task orig, Task curr) {\n    Date origDate = orig.getStartDate();\n    Date currDate = curr.getStartDate();\n    if (currDate == null) {\n      return origDate != null;\n    }\n    return !currDate.equals(origDate);\n  }\n\n  private boolean hasAssigneeChanged(Task orig, Task curr) {\n\n    BiteUser currUser = curr.getAssigneeUser();\n    if (currUser == null) {\n      return orig != null;\n    }\n    BiteUser origUser = orig.getAssigneeUser();\n    return !currUser.getId().equals(origUser.getId());\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MasterSessionControlServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MasterSessionControlServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4781,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.service.MasterSessionControlService;\n\nimport com.telekomaustriagroup.esb.mastersessioncontrol.MasterSessionControlStub;\nimport com.tibco.www.ns.mastersessioncontrol.CreateSessionDocument;\nimport com.tibco.www.ns.mastersessioncontrol.CreateSessionDocument.CreateSession;\nimport com.tibco.www.ns.mastersessioncontrol.LoginDataType;\nimport com.tibco.www.ns.mastersessioncontrol.ResponseDocument;\n\n@Service\npublic class MasterSessionControlServiceImpl extends BaseEsbClient<MasterSessionControlStub> implements MasterSessionControlService {\n\n  private static final Logger logger = LoggerFactory.getLogger(MasterSessionControlServiceImpl.class);\n  private SettingService settingService;\n\n  public MasterSessionControlServiceImpl() {\n\n  }\n\n  @Override\n  public String getURLForDOCHome(String partyID, String username, String name, String ipAddress) {\n    String url = null;\n    try {\n      CreateSessionDocument createSessionDocument = CreateSessionDocument.Factory.newInstance();\n      String[] configuredRequestParamSettings = settingService.getValuesIgnoreMissing(\"gdprJune2017.masterSessionControlServiceLoginData\");\n      Map<String, String> configuredRequestParamMap = new HashMap<String, String>();\n      for (String param : configuredRequestParamSettings) {\n        if (StringUtils.isEmpty(param) || !param.contains(\"=\") || param.split(\"=\").length < 2) {\n          continue;\n        }\n        configuredRequestParamMap.put(param.split(\"=\")[0], param.split(\"=\")[1]);\n      }\n      CreateSession createSession = CreateSession.Factory.newInstance();\n      LoginDataType loginData = createSession.addNewLoginData();\n      loginData.setAonAccountId(configuredRequestParamMap.containsKey(\"AonAccountId\") ? configuredRequestParamMap.get(\"AonAccountId\") : \"0\");\n      loginData.setPhoneNumber(configuredRequestParamMap.containsKey(\"PhoneNumber\") ? configuredRequestParamMap.get(\"PhoneNumber\") : \"\");\n      loginData.setMobileNumber(configuredRequestParamMap.containsKey(\"MobileNumber\") ? configuredRequestParamMap.get(\"MobileNumber\") : \"\");\n      loginData.setMobileTariffType(configuredRequestParamMap.containsKey(\"MobileTariffType\") ? configuredRequestParamMap.get(\"MobileTariffType\") : \"NONE\");\n      loginData.setBillingAccountId(configuredRequestParamMap.containsKey(\"BillingAccountId\") ? configuredRequestParamMap.get(\"BillingAccountId\") : \"0\");\n      loginData.setBillingAccountNumber(configuredRequestParamMap.containsKey(\"BillingAccountNumber\") ? configuredRequestParamMap.get(\"BillingAccountNumber\") : \"\");\n      loginData.setKumsPartnerId(partyID);\n      loginData.setDisplayName(name);\n      loginData.setLoginName(username);\n      loginData.setRemoteIp(ipAddress);\n      loginData.setLoginType(configuredRequestParamMap.containsKey(\"LoginType\") ? configuredRequestParamMap.get(\"LoginType\") : \"AGENT\");\n      loginData.setCustomerType(configuredRequestParamMap.containsKey(\"CustomerType\") ? configuredRequestParamMap.get(\"CustomerType\") : \"A1TA\");\n      loginData.setAuthenticationSystem(configuredRequestParamMap.containsKey(\"AuthenticationSystem\") ? configuredRequestParamMap.get(\"AuthenticationSystem\") : \"CUSTOMER_COCKPIT\");\n      loginData.setRole(configuredRequestParamMap.containsKey(\"Role\") ? configuredRequestParamMap.get(\"Role\") : \"MANAGE_CUSTOMER\");\n      loginData.setServiceId(configuredRequestParamMap.containsKey(\"ServiceId\") ? configuredRequestParamMap.get(\"ServiceId\") : \"DOC_HOME\");\n      createSessionDocument.setCreateSession(createSession);\n      ResponseDocument response = stub.createSession(createSessionDocument, null);\n      if (response != null && response.getResponse() != null && response.getResponse().getEntryArray() != null && response.getResponse().getEntryArray(0).getRedirect() != null) {\n        url = response.getResponse().getEntryArray(0).getRedirect();\n      } else {\n        if (response == null || response.getResponse() == null) {\n          logger.error(\"null response from MasterSessionControl for DOC_HOME\");\n        } else {\n          logger.error(\"Invalid response from MasterSessionControl for DOC_HOME\", response);\n        }\n      }\n    } catch (Exception ex) {\n      logger.error(\"Error while getting Master session for DOC_HOME\", ex);\n    }\n\n    return url;\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/BusinessHardwareReplacementCallable.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/BusinessHardwareReplacementCallable.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1340,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.concurrent.Callable;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.cuco.core.dao.esb.BusinessHardwareReplacementDao;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.BusinessHardwareReplacement;\n\n@Component\npublic class BusinessHardwareReplacementCallable implements Callable<BusinessHardwareReplacement> {\n  private static final Logger logger = LoggerFactory.getLogger(MobilPointsCallable.class);\n  private long billingAccountNumber;\n\n  private BusinessHardwareReplacementDao businessHardwareReplacementDao;\n\n  @Override\n  public BusinessHardwareReplacement call() {\n    try {\n      return businessHardwareReplacementDao.getBusinessHardwareReplacement(billingAccountNumber);\n    } catch (Exception e) {\n      logger.error(\"Error during loading Business Hardware Replacement\", e);\n      return null;\n    }\n  }\n\n  public void setBillingAccountNumber(long billingAccountNumber) {\n    this.billingAccountNumber = billingAccountNumber;\n  }\n\n  @Autowired\n  public void setBusinessHardwareReplacementDao(BusinessHardwareReplacementDao businessHardwareReplacementDao) {\n    this.businessHardwareReplacementDao = businessHardwareReplacementDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UITextsEditorServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UITextsEditorServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 782,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.UITextsEditorDAO;\nimport at.a1ta.cuco.core.service.UITextsEditorService;\nimport at.a1ta.cuco.core.shared.dto.UIText;\n\n@Service\npublic class UITextsEditorServiceImpl implements UITextsEditorService {\n  \n  @Autowired\n  private UITextsEditorDAO uiTextsEditorDAO;\n  \n  @Override\n  public List<UIText> getUITexts() {\n    return uiTextsEditorDAO.getUITexts();\n  }\n\n  @Override\n  public void updateUIText(UIText text) {\n    uiTextsEditorDAO.updateUIText(text);\n  }\n  \n  @Override\n  public List<UIText> searchText(String text) {\n    return uiTextsEditorDAO.searchText(text);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PhoneNumberServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PhoneNumberServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3560,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.service.PhoneNumberService;\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.MobileChurnLikeliness;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\n\n@Service\npublic class PhoneNumberServiceImpl implements PhoneNumberService {\n  @Autowired\n  private PhoneNumberDao phoneNumberDao;\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers4Contract(final Number contractId) {\n    if (contractId == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"contractId\");\n    }\n    return this.phoneNumberDao.listPhoneNumbers(null, (Long) contractId, null, -1, -1);\n  }\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers4Customer(final Number customerId) {\n    return this.listPhoneNumbers4Customer(customerId, null);\n  }\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers4Customer(final Number customerId, final Number contractId) {\n    return this.listPhoneNumbers4Customer(customerId, contractId, null);\n  }\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers4Customer(final Number customerId, final Number contractId, final Number locationId) {\n    return this.listPhoneNumbers4Customer(customerId, contractId, locationId, -1, -1);\n  }\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers4Customer(final Number customerId, final Number contractId, final Number locationId, final int skip, final int maxResults) {\n    if (customerId == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"customerId\");\n    }\n    return this.phoneNumberDao.listPhoneNumbers((Long) customerId, (Long) contractId, (Long) locationId, skip, maxResults);\n  }\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers4Location(final Number locationId) {\n    return this.listPhoneNumbers4Location(locationId, null);\n  }\n\n  @Override\n  public List<PhoneNumber> listPhoneNumbers4Location(final Number locationId, final Number customerId) {\n    if (locationId == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"locationId\");\n    }\n    return this.phoneNumberDao.listPhoneNumbers((Long) customerId, null, (Long) locationId, -1, -1);\n  }\n\n  @Override\n  public PhoneNumberStructure parse(final String phoneNumberAsString) {\n    return phoneNumberDao.parse(phoneNumberAsString);\n  }\n\n  @Override\n  public List<BillingAccountNumber> getBillingAccountNumbersForParty(long partyId) {\n    return phoneNumberDao.getBillingAccountNumbersForParty(partyId);\n  }\n\n  @Override\n  public Long getBillingAccountNumberForPhoneNumber(String countryCode, String onkz, String number) {\n    return phoneNumberDao.getBillingAccountNumberForPhoneNumber(countryCode, onkz, number);\n  }\n\n  @Override\n  public ArrayList<String> getPhoneNumbersForClearingAccountId(long clearingAccountId) {\n    return (ArrayList<String>) phoneNumberDao.getPhoneNumbersForClearingAccountId(clearingAccountId);\n  }\n\n  @Override\n  public List<PhoneNumber> getPhoneNumbersForBillingAccountNumber(BillingAccountNumber ban) {\n    return phoneNumberDao.getPhoneNumbersForBillingAccountNumber(ban.getBan());\n  }\n\n  @Override\n  public List<MobileChurnLikeliness> getMobileChurnLikelinessForParty(long partyId) {\n    return phoneNumberDao.getMobileChurnLikelinessForParty(partyId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PartyDeclarationOfConsentServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PartyDeclarationOfConsentServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3870,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Service;\n\nimport a1.gdpr.webservice.Brand;\nimport a1.gdpr.webservice.GetCurrentDeclarationOfConsentForPartyRequest;\nimport a1.gdpr.webservice.GetCurrentDeclarationOfConsentForPartyRequestDocument;\nimport a1.gdpr.webservice.GetCurrentDeclarationOfConsentForPartyResponseDocument;\nimport a1.gdpr.webservice.Touchpoint;\nimport a1.gdpr.webservice.UserType;\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.cuco.core.service.PartyDeclarationOfConsentService;\nimport at.a1ta.cuco.core.shared.dto.PartyDeclarationOfConsentInfo;\nimport at.a1ta.cuco.core.shared.dto.PartyDeclarationOfConsentInfo.StatusNeedForAction;\nimport at.a1ta.cuco.core.shared.dto.PartyDeclarationOfConsentInfo.StatusOfCompleteness;\n\nimport com.telekomaustriagroup.esb.partydeclarationofconsent.PartyDeclarationOfConsentStub;\n\n@Service\npublic class PartyDeclarationOfConsentServiceImpl extends BaseEsbClient<PartyDeclarationOfConsentStub> implements PartyDeclarationOfConsentService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(PartyDeclarationOfConsentServiceImpl.class);\n\n  @Override\n  public PartyDeclarationOfConsentInfo getCurrentDeclarationOfConsentForParty(String partyId, String userId, Brand.Enum brand, UserType.Enum userType) {\n    PartyDeclarationOfConsentInfo partyDeclarationOfConsentInfo = new PartyDeclarationOfConsentInfo(PartyDeclarationOfConsentInfo.LOADING, StatusOfCompleteness.UNKNOWN);\n    try {\n      GetCurrentDeclarationOfConsentForPartyRequestDocument getCurrentDeclarationOfConsentForPartyRequestDocument = GetCurrentDeclarationOfConsentForPartyRequestDocument.Factory.newInstance();\n      GetCurrentDeclarationOfConsentForPartyRequest request = GetCurrentDeclarationOfConsentForPartyRequest.Factory.newInstance();\n      request.setPartyId(partyId);\n      request.setTouchpoint(Touchpoint.CUSTOMER_COCKPIT);\n      request.setBrand(Brand.A_1_RBM);\n      request.setUser(userId);\n      request.setUserType(UserType.CUSTOMER);\n      if (brand != null) {\n        request.setBrand(brand);\n      }\n\n      if (userType != null) {\n        request.setUserType(userType);\n      }\n      getCurrentDeclarationOfConsentForPartyRequestDocument.setGetCurrentDeclarationOfConsentForPartyRequest(request);\n      partyDeclarationOfConsentInfo.setStaus(PartyDeclarationOfConsentInfo.NOT_RECEIVED);\n      GetCurrentDeclarationOfConsentForPartyResponseDocument response = stub.getCurrentDeclarationOfConsentForParty(getCurrentDeclarationOfConsentForPartyRequestDocument, null);\n      if (response != null && response.getGetCurrentDeclarationOfConsentForPartyResponse() != null && response.getGetCurrentDeclarationOfConsentForPartyResponse().getParty() != null\n          && response.getGetCurrentDeclarationOfConsentForPartyResponse().getParty().getCurrentDeclarationOfConsent() != null) {\n        partyDeclarationOfConsentInfo.setStaus(PartyDeclarationOfConsentInfo.LOADED);\n        partyDeclarationOfConsentInfo.setStatusOfCompleteness(StatusOfCompleteness.valueOf(response.getGetCurrentDeclarationOfConsentForPartyResponse().getParty().getCurrentDeclarationOfConsent()\n            .getStatusOfCompleteness().toString()));\n        partyDeclarationOfConsentInfo.setStatusNeedForAction(StatusNeedForAction.valueOf(response.getGetCurrentDeclarationOfConsentForPartyResponse().getParty().getCurrentDeclarationOfConsent()\n            .getStatusNeedForAction().toString()));\n      } else {\n        partyDeclarationOfConsentInfo.setStaus(PartyDeclarationOfConsentInfo.NOT_RECEIVED);\n      }\n    } catch (Exception ex) {\n      partyDeclarationOfConsentInfo.setStaus(PartyDeclarationOfConsentInfo.ERROR);\n      LOGGER.error(\"Error while loading PartyDeclarationOfConsent\", ex);\n    }\n\n    return partyDeclarationOfConsentInfo;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/SettingsEditorServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/SettingsEditorServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 802,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.shared.dto.Setting;\nimport at.a1ta.cuco.core.dao.db.SettingsEditorDAO;\nimport at.a1ta.cuco.core.service.SettingsEditorService;\n\n@Service\npublic class SettingsEditorServiceImpl implements SettingsEditorService {\n\n  @Autowired\n  private SettingsEditorDAO settingsEditorDAO;\n\n  @Override\n  public List<Setting> getSettings() {\n    return settingsEditorDAO.getSettings();\n  }\n\n  @Override\n  public void updateSetting(Setting setting) {\n    settingsEditorDAO.updateSetting(setting);\n  }\n\n  @Override\n  public List<Setting> searchText(String text) {\n    return settingsEditorDAO.searchSetting(text);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CdPersonServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CdPersonServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 683,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.dao.cd.CdPersonDao;\nimport at.a1ta.bite.core.shared.dto.cd.CdPerson;\nimport at.a1ta.cuco.core.service.CdPersonService;\n\n@Service\npublic class CdPersonServiceImpl implements CdPersonService {\n\n  @Autowired\n  private CdPersonDao cdPersonDao;\n\n  @Override\n  public List<CdPerson> getPersons(List<String> userNames) {\n    return cdPersonDao.getPersons(userNames);\n  }\n\n  @Override\n  public CdPerson getPerson(String userName) {\n    return cdPersonDao.getPerson(userName);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/TeamServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/TeamServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3718,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.dao.db.TeamDao;\nimport at.a1ta.cuco.core.service.TeamService;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.Service;\nimport at.a1ta.cuco.core.shared.dto.Team;\n\n@org.springframework.stereotype.Service\npublic class TeamServiceImpl implements TeamService {\n\n  private TeamDao teamDao;\n\n  @Override\n  public List<Team> getAllTeams() {\n    List<Team> teams = teamDao.getAllTeams();\n    for (Team team : teams) {\n      team.setMembers(teamDao.getUsersForTeam(team.getId()));\n      team.setServices(teamDao.getServicesForTeam(team.getId()));\n    }\n\n    return teams;\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void updateTeam(Team team) {\n    teamDao.updateTeam(team);\n\n    teamDao.removeAllMembers(team.getId());\n    for (BiteUser user : team.getMembers()) {\n      teamDao.addMember(team.getId(), user.getId());\n    }\n\n    teamDao.removeAllServices(team.getId());\n    for (Service service : team.getServices()) {\n      teamDao.addService(team.getId(), service.getId());\n    }\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void deleteTeam(Long teamId) {\n    teamDao.removeAllMembers(teamId);\n    teamDao.removeAllServices(teamId);\n    teamDao.deleteTeam(teamId);\n  }\n\n  @Override\n  public Team getTeam(Long teamId) {\n    Team team = teamDao.getTeam(teamId);\n    team.setMembers(teamDao.getUsersForTeam(teamId));\n    team.setServices(teamDao.getServicesForTeam(teamId));\n    return team;\n  }\n\n  @Override\n  public void save(Team team) {\n    if (team.getId() == null || team.getId().equals(0L)) {\n      insertTeam(team);\n    } else {\n      updateTeam(team);\n    }\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void insertTeam(Team team) {\n    teamDao.addTeam(team);\n    for (BiteUser user : team.getMembers()) {\n      teamDao.addMember(team.getId(), user.getId());\n    }\n    for (Service service : team.getServices()) {\n      teamDao.addService(team.getId(), service.getId());\n    }\n  }\n\n  @Override\n  public void removeTeamMember(Long teamId, Long userId) {\n    teamDao.removeMember(teamId, userId);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void addTeamMembers(Long teamId, List<Long> userIds) {\n    for (Long userId : userIds) {\n      teamDao.removeUserFromTeam(userId);\n      teamDao.addMember(teamId, userId);\n    }\n  }\n\n  @Override\n  public List<Service> getNotLinkedServices(Long teamId) {\n    return teamDao.getNotLinkedServices(teamId);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void addServices(Long teamId, List<Long> serviceIds) {\n    for (Long serviceId : serviceIds) {\n      teamDao.addService(teamId, serviceId);\n    }\n  }\n\n  @Override\n  public void removeService(Long teamId, Long serviceId) {\n    teamDao.removeService(teamId, serviceId);\n  }\n\n  @Override\n  public List<BiteUser> getAllUsers(Auth authority) {\n    return teamDao.getAllUsers(authority);\n  }\n\n  @Override\n  public Team getTeamForUser(Long userId) {\n    return teamDao.getTeamForUser(userId);\n  }\n\n  @Autowired\n  public void setTeamDao(TeamDao teamDao) {\n    this.teamDao = teamDao;\n  }\n\n  @Override\n  public List<Service> getService(String service) {\n    return teamDao.getService(service);\n  }\n\n  @Override\n  public ArrayList<BiteUser> searchUsers(String name, String user, String orgunit) {\n    return (ArrayList<BiteUser>) teamDao.searchUsers(name, user, orgunit);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ReportingServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ReportingServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4474,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\nimport java.util.HashMap;\nimport java.util.List;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.DataFormat;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.bean.File;\nimport at.a1ta.cuco.core.bean.File.MIMEType;\nimport at.a1ta.cuco.core.bean.Reporting;\nimport at.a1ta.cuco.core.dao.db.ReportingDao;\nimport at.a1ta.cuco.core.service.ReportingService;\n\n@Service\npublic class ReportingServiceImpl implements ReportingService {\n\n  private static final Logger logger = LoggerFactory.getLogger(ReportingServiceImpl.class);\n\n  @Autowired\n  private ReportingDao reportingDao;\n\n  @Override\n  public Reporting getReporting(int id) {\n    return reportingDao.getReporting(id);\n  }\n\n  @Override\n  public List<Reporting> getAllReportings() {\n    return reportingDao.getAllReportings();\n  }\n\n  @Override\n  public List<HashMap<String, Object>> executeReporting(long id) {\n    logger.info(\"User executes report \" + id);\n\n    Reporting reporting = reportingDao.getReporting(id);\n    if (reporting.isLongRunning()) {\n      String query = \"select * from custc.\" + reporting.getTableName();\n      return reportingDao.executeReporting(query);\n    }\n    return reportingDao.executeReporting(reporting.getQuery());\n  }\n\n  @Override\n  public File exportReportAsExcel(Long id) {\n    List<HashMap<String, Object>> data = executeReporting(id);\n\n    HSSFWorkbook workbook = new HSSFWorkbook();\n    HSSFSheet sheet = workbook.createSheet(\"Report\");\n\n    DataFormat format = workbook.createDataFormat();\n    CellStyle style = workbook.createCellStyle();\n    style.setDataFormat(format.getFormat(\"0.00\"));\n\n    int rowIdx = 0;\n    int colIdx = 0;\n\n    // Header\n    HSSFRow row = sheet.createRow(rowIdx);\n    if (data.size() > 0) {\n      for (String key : data.get(0).keySet()) {\n        HSSFCell cell = row.createCell(colIdx, HSSFCell.CELL_TYPE_STRING);\n        cell.setCellValue(key);\n        colIdx++;\n      }\n      colIdx = 0;\n      rowIdx++;\n\n      for (HashMap<String, Object> datum : data) {\n        row = sheet.createRow(rowIdx);\n        for (String key : datum.keySet()) {\n          Object val = datum.get(key);\n          if (val != null) {\n            HSSFCell cell = row.createCell(colIdx, getCellTypeForValue(val));\n            if (val instanceof Integer) {\n              cell.setCellValue((Integer) val);\n            } else if (val instanceof Long) {\n              cell.setCellValue((Long) val);\n            } else if (val instanceof Float) {\n              cell.setCellValue((Float) val);\n              cell.setCellStyle(style);\n            } else if (val instanceof Double) {\n              cell.setCellValue((Double) val);\n              cell.setCellStyle(style);\n            } else if (val instanceof BigInteger) {\n              cell.setCellValue(((BigInteger) val).doubleValue());\n            } else if (val instanceof BigDecimal) {\n              cell.setCellValue(((BigDecimal) val).doubleValue());\n              cell.setCellStyle(style);\n            } else {\n              cell.setCellValue(val.toString());\n            }\n          }\n          colIdx++;\n        }\n        colIdx = 0;\n        rowIdx++;\n      }\n\n      for (int i = 0; i < data.get(0).size(); i++) {\n        sheet.autoSizeColumn(i);\n      }\n    } else {\n      HSSFCell cell = row.createCell(colIdx, HSSFCell.CELL_TYPE_STRING);\n      cell.setCellValue(\"No data found.\");\n    }\n\n    File file = new File(\"export.xls\", MIMEType.XLS);\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n    try {\n      workbook.write(bos);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    file.setContent(bos.toByteArray());\n    return file;\n  }\n\n  private int getCellTypeForValue(Object object) {\n    if (object instanceof Long || object instanceof Double || object instanceof Float || object instanceof Integer || object instanceof BigInteger || object instanceof BigDecimal) {\n      return HSSFCell.CELL_TYPE_NUMERIC;\n    }\n    return HSSFCell.CELL_TYPE_STRING;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CustomerInteractionServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CustomerInteractionServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2595,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.data.clarify.dao.ClarifyInteractionAndWorkflowDao;\nimport at.a1ta.bite.data.clarify.shared.dto.ClarifyCustomerInteractionResponse;\nimport at.a1ta.bite.data.clarify.shared.dto.CustomerInteraction;\nimport at.a1ta.cuco.core.dao.db.MKInteractionDao;\nimport at.a1ta.cuco.core.service.CustomerInteractionService;\n\n@Service\npublic class CustomerInteractionServiceImpl implements CustomerInteractionService {\n\n  private static final String MK_SITE_INDICATOR = \"MK\";\n\n  private ClarifyInteractionAndWorkflowDao clarifyInteractionAndWorkflowDao;\n\n  private MKInteractionDao mkInteractionDao;\n\n  @Override\n  public ClarifyCustomerInteractionResponse listInteractions(long customerId, String siteId) {\n    return clarifyInteractionAndWorkflowDao.getClarifyInteractionsViaSite(customerId, siteId);\n  }\n\n  @Override\n  public List<CustomerInteraction> listMKInteractions(long customerId) {\n    return mkInteractionDao.listMKInteractions(customerId);\n  }\n\n  @Override\n  public List<CustomerInteraction> listAllInteractions(long customerId, String siteId, boolean addMKInteractions) {\n    List<CustomerInteraction> interactions = new ArrayList<CustomerInteraction>();\n    if (!StringUtils.startsWith(siteId, MK_SITE_INDICATOR)) {\n      interactions.addAll(listInteractions(customerId, siteId).getInteractions());\n    }\n    if (addMKInteractions) {\n      interactions.addAll(listMKInteractions(customerId));\n    }\n    Collections.sort(interactions, new Comparator<CustomerInteraction>() {\n\n      @Override\n      public int compare(CustomerInteraction i1, CustomerInteraction i2) {\n        if (i1.getStartDate() == null && i2.getStartDate() == null) {\n          return 0;\n        }\n        if (i1.getStartDate() == null) {\n          return 1;\n        }\n        if (i2.getStartDate() == null) {\n          return -1;\n        }\n        return -i1.getStartDate().compareTo(i2.getStartDate());\n      }\n    });\n    return interactions;\n  }\n\n  @Autowired\n  public void setClarifyInteractionAndWorkflowDao(ClarifyInteractionAndWorkflowDao clarifyInteractionAndWorkflowDao) {\n    this.clarifyInteractionAndWorkflowDao = clarifyInteractionAndWorkflowDao;\n  }\n\n  @Autowired\n  public void setMkInteractionDao(MKInteractionDao mkInteractionDao) {\n    this.mkInteractionDao = mkInteractionDao;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/VIPHistoryServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/VIPHistoryServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2120,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport org.apache.commons.lang.NullArgumentException;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.dao.db.VIPHistoryDao;\nimport at.a1ta.cuco.core.service.KumsCustomerService;\nimport at.a1ta.cuco.core.service.VIPHistoryService;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.VIPHistoryEntry;\n\n@Service\npublic class VIPHistoryServiceImpl implements VIPHistoryService {\n\n  private static final Logger logger = LoggerFactory.getLogger(VIPHistoryServiceImpl.class);\n\n  @Autowired\n  private VIPHistoryDao vipHistoryDao;\n\n  @Autowired\n  @Qualifier(\"cucoCustomerDao\")\n  private PartyDao customerDao;\n\n  @Autowired\n  private KumsCustomerService kumsCustomerService;\n\n  @Override\n  public List<VIPHistoryEntry> getVIPHistory(Long customerId) {\n    if (customerId == null) {\n      throw new NullArgumentException(\"customerId\");\n    }\n    return vipHistoryDao.getVIPHistory(customerId);\n  }\n\n  @Override\n  public List<VIPHistoryEntry> getVIPHistory(Date from, Date to, String searchTerm, String vipStatus) {\n    return vipHistoryDao.getVIPHistory(from, to, searchTerm, vipStatus);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void saveVIPStatusAndHistory(VIPHistoryEntry vipHistory, String lastChangeDate, Party cucoCustomer, String uUser) {\n    if (vipHistory == null) {\n      throw new NullArgumentException(\"vipHistory\");\n    }\n    vipHistoryDao.saveVIPHistory(vipHistory);\n\n    if (cucoCustomer != null) {\n      customerDao.saveCucoCustomer(cucoCustomer);\n    }\n\n    kumsCustomerService.saveVipStatus(String.valueOf(vipHistory.getCustomerId()), lastChangeDate, String.valueOf(vipHistory.getNewStatus() != null ? vipHistory.getNewStatus() : \" \"), uUser);\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MobilPointsCallable.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MobilPointsCallable.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1255,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.concurrent.Callable;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Scope;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.cuco.core.dao.esb.MobilPointsDao;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.mobilpoints.MobilPoints;\n\n@Component\n@Scope(\"prototype\")\npublic class MobilPointsCallable implements Callable<MobilPoints> {\n  private static Logger logger = LoggerFactory.getLogger(MobilPointsCallable.class);\n\n  private MobilPointsDao mobilPointsDao;\n  private PhoneNumberStructure phoneNumberStructure;\n\n  @Override\n  public MobilPoints call() {\n    try {\n      return mobilPointsDao.getMobilPoints(phoneNumberStructure);\n    } catch (Exception e) {\n      logger.error(\"Error during loading Mobil Points\", e);\n      return null;\n    }\n  }\n\n  @Autowired\n  public void setMobilPointsDao(MobilPointsDao mobilPointsDao) {\n    this.mobilPointsDao = mobilPointsDao;\n  }\n\n  public void setPhoneNumberStructure(PhoneNumberStructure phoneNumberStructure) {\n    this.phoneNumberStructure = phoneNumberStructure;\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ImageSizeServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ImageSizeServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 738,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport at.a1ta.cuco.core.dao.db.ImageSizeDao;\nimport at.a1ta.cuco.core.service.ImageSizeService;\nimport at.a1ta.cuco.core.shared.dto.ImageSize;\n\n/**\n * @author richard.gebauer@telekom.at\n */\npublic class ImageSizeServiceImpl implements ImageSizeService {\n  private ImageSizeDao imageSizeDao;\n\n  public ImageSizeServiceImpl(final ImageSizeDao imageSizeDao) {\n    if (imageSizeDao == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"imageSizeDao\");\n    }\n    this.imageSizeDao = imageSizeDao;\n  }\n\n  /**\n   * @return list of all image sizes\n   */\n  @Override\n  public List<ImageSize> getImageSizes() {\n    return this.imageSizeDao.getImageSizes();\n  }\n}",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/LocationServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/LocationServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3719,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.Assert;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.data.clarify.dao.ClarifyInteractionAndWorkflowDao;\nimport at.a1ta.bite.data.clarify.shared.dto.Location;\nimport at.a1ta.bite.data.clarify.shared.dto.LocationCollection;\nimport at.a1ta.cuco.core.dao.db.LocationDao;\nimport at.a1ta.cuco.core.service.LocationService;\nimport at.a1ta.cuco.core.service.customerequipment.ProductBrowserServiceImpl;\nimport at.a1telekom.eai.lkmslocation.AddressDetail;\nimport at.a1telekom.eai.lkmslocation.GetAddressRequest;\nimport at.a1telekom.eai.lkmslocation.GetAddressRequestDocument;\nimport at.a1telekom.eai.lkmslocation.GetAddressResponse;\nimport at.a1telekom.eai.lkmslocation.GetAddressResponseDocument;\n\nimport com.telekomaustriagroup.esb.lkmslocation.LKMSLocationStub;\n\n@Service\npublic class LocationServiceImpl extends BaseEsbClient<LKMSLocationStub> implements LocationService {\n\n  private static final Logger logger = LoggerFactory.getLogger(ProductBrowserServiceImpl.class);\n\n  private LocationDao locationDao;\n\n  private ClarifyInteractionAndWorkflowDao clarifyInteractionAndWorkflowDao;\n\n  public LocationServiceImpl() {\n\n  }\n\n  @Autowired\n  public LocationServiceImpl(LocationDao locationDao) {\n    if (locationDao == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"locationDao\");\n    }\n    this.locationDao = locationDao;\n  }\n\n  @Override\n  public Number getDistinctNrLocations4customer(Number customerId) {\n    if (customerId == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"customerId\");\n    }\n    return this.locationDao.getDistinctNrLocations4customer(customerId.longValue());\n  }\n\n  @Override\n  public LocationCollection getClarifyLocationsForCustomer(Long customerId, int locationPageSize, int locationPageIndex) {\n    return clarifyInteractionAndWorkflowDao.getLocationList(customerId, locationPageSize, locationPageIndex);\n  }\n\n  @Override\n  public Page<Location> getClarifyLocationsForCustmomer(Long customerId, Pageable pageable) {\n    Assert.notNull(customerId);\n    Pageable pageRequest = pageable != null ? pageable : new PageRequest(0, 10);\n    return clarifyInteractionAndWorkflowDao.findLocationsByCustomerId(customerId, pageRequest);\n  }\n\n  @Autowired\n  public void setClarifyInteractionAndWorkflowDao(ClarifyInteractionAndWorkflowDao clarifyInteractionAndWorkflowDao) {\n    this.clarifyInteractionAndWorkflowDao = clarifyInteractionAndWorkflowDao;\n  }\n\n  @Override\n  public AddressDetail getAddressDetailForLocation(String lkmsId) {\n    if (lkmsId != null) {\n      try {\n        GetAddressRequestDocument reqDoc = GetAddressRequestDocument.Factory.newInstance();\n        GetAddressRequest req = GetAddressRequest.Factory.newInstance();\n        req.setSourceSystem(\"CUCO\"); // TODO externalize to db setting\n        req.setUser(\"UCUCO1\");// TODO externalize to db setting\n        req.setLkmsId(lkmsId);\n\n        reqDoc.setGetAddressRequest(req);\n\n        GetAddressResponseDocument respDoc = stub.getAddress(reqDoc, null);\n        GetAddressResponse resp = respDoc.getGetAddressResponse();\n\n        return resp.getAddressDetail();\n\n      } catch (Exception e) {\n        logger.error(e.getMessage(), e);\n        throw new RuntimeException(\"An error occurred during the getAddress call: \" + e.getMessage(), e);\n      }\n    }\n    return null;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/BillingCycleServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/BillingCycleServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1738,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.Date;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.billingcycle.BillingCycleDao;\nimport at.a1ta.cuco.core.service.BillingCycleService;\nimport at.a1ta.cuco.core.shared.dto.BillingCycle;\nimport at.a1ta.cuco.core.shared.dto.BillingCycleEntry;\n\n/**\n * @author q914835 manuels\n */\n@Service\npublic class BillingCycleServiceImpl implements BillingCycleService {\n\n  private static String USAGE_END_DATE_STR = \"Usage End-Date\";\n\n  private BillingCycleDao billingCycleDao;\n\n  private KumsAccountService kumsAccountService;\n\n  @Override\n  public ArrayList<BillingCycle> getBillingCycle(Long clearingAccount) {\n    try {\n      String vblock = kumsAccountService.getAccount(clearingAccount.toString()).getBILLCYCLID();\n      return (ArrayList<BillingCycle>) billingCycleDao.getBillingCycle(vblock);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n  @Override\n  public Date getUsageEndDate(Long clearingAccount) throws Exception {\n    ArrayList<BillingCycle> bcs = getBillingCycle(clearingAccount);\n    if (bcs != null && bcs.size() > 0) {\n      BillingCycle first = bcs.get(0);\n      for (BillingCycleEntry e : first.getEntries()) {\n        if (e.getStep().contains(USAGE_END_DATE_STR)) {\n          return e.getFrom();\n        }\n      }\n    }\n    return null;\n  }\n\n  @Autowired\n  public void setBillingCycleDao(BillingCycleDao billingCycleDao) {\n    this.billingCycleDao = billingCycleDao;\n  }\n\n  @Autowired\n  public void setKumsAccountService(KumsAccountService kumsAccountService) {\n    this.kumsAccountService = kumsAccountService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CustomerUnlockServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CustomerUnlockServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 10144,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.impl;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.dao.DataAccessException;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.Assert;\n\nimport at.a1ta.bite.audit.core.Auditor;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.audit.ContextAwareAuditHelper;\nimport at.a1ta.cuco.core.audit.CuCoAuditActivity;\nimport at.a1ta.cuco.core.audit.CuCoAuditScope;\nimport at.a1ta.cuco.core.dao.cusco.CusCoResponse;\nimport at.a1ta.cuco.core.dao.db.CustomerUnlockRequestDao;\nimport at.a1ta.cuco.core.service.CuscoUnlockService;\nimport at.a1ta.cuco.core.service.CustomerUnlockService;\nimport at.a1ta.cuco.core.shared.dto.Customer;\nimport at.a1ta.cuco.core.shared.dto.access.ContextAwareCustomerUnlockRequest;\nimport at.a1ta.cuco.core.shared.dto.access.UnlockRequestContext;\nimport at.a1ta.cuco.core.shared.dto.access.UnlockStateEnum;\n\n@Service\npublic class CustomerUnlockServiceImpl implements CustomerUnlockService {\n\n  private static final Logger logger = LoggerFactory.getLogger(CustomerUnlockServiceImpl.class);\n\n  private SettingService settings;\n  private CustomerUnlockRequestDao unlockDao;\n  private CuscoUnlockService cuscoUnlockService;\n\n  @Override\n  public boolean checkIfUnlockedForSession(Customer customer, UserInfo user, String sessionId) {\n    Assert.notNull(customer);\n    Assert.notNull(user);\n\n    List<ContextAwareCustomerUnlockRequest> result = unlockDao.findByCustomerIdAndUsernameAndContextKey(customer.getCustomerNumber(), user.getBiteUser(), sessionId);\n    if (result.isEmpty()) {\n      return false;\n    }\n\n    for (ContextAwareCustomerUnlockRequest unlockRequest : result) {\n      if ((unlockRequest != null && UnlockStateEnum.FINISHED_UNLOCKED.equals(unlockRequest.getState()))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  @Override\n  public boolean checkIfUnlockded(Customer customer, UserInfo user, String contextKey, String referenceKey) {\n    Assert.notNull(customer);\n    Assert.notNull(user);\n    Assert.notNull(referenceKey);\n\n    ContextAwareCustomerUnlockRequest result = unlockDao.findByCustomerIdAndUsernameAndJobIdAndSessionKey(customer.getCustomerNumber(), user.getBiteUser(), referenceKey, contextKey);\n\n    if (result == null || !UnlockStateEnum.FINISHED_UNLOCKED.equals(result.getState())) {\n      return false;\n    }\n    Auditor.audit(ContextAwareAuditHelper.createFor(CuCoAuditScope.CUSTOMER, CuCoAuditActivity.UNLOCK).withCustomerNumber(customer.getId()));\n\n    return true;\n  }\n\n  @Override\n  public CusCoResponse sendUnlockRequest(Customer customer, UserInfo user, UnlockRequestContext context, String contextKey) {\n    long start = System.currentTimeMillis();\n    logger.debug(\"START:sendUnlockRequest;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";;;\");\n    Assert.notNull(customer);\n    Assert.notNull(user);\n    Assert.notNull(context);\n    Assert.hasText(contextKey);\n\n    ContextAwareCustomerUnlockRequest request = new ContextAwareCustomerUnlockRequest();\n    request.setContext(context);\n    request.setCustomerId(customer.getId());\n    request.setSessionKey(contextKey);\n    request.setUser(user.getBiteUser());\n\n    Auditor.audit(ContextAwareAuditHelper.createFor(CuCoAuditScope.CUSTOMER, CuCoAuditActivity.REQUEST_UNLOCK).withCustomerNumber(customer.getId()));\n\n    long start_cusco = System.currentTimeMillis();\n    logger.debug(\"START:sendUnlockRequest:prepareForSign;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";;;\");\n    CusCoResponse response;\n    try {\n      response = cuscoUnlockService.prepareForSign(customer, user, null, settings.getValue(\"dupos.cusco.template\"));\n    } catch (Exception e) {\n      logger.error(\"Error while preparing document for sign\", e);\n      throw e;\n    }\n    long end_cusco = System.currentTimeMillis();\n    request.setJobId(response.getJobId());\n    logger.debug(\"END:sendUnlockRequest:prepareForSign;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";cusco.jobid:\" + response.getJobId() + \";duration:\"\n        + (end_cusco - start_cusco) + \"ms;\");\n    unlockDao.insert(request);\n\n    long end = System.currentTimeMillis();\n    logger.debug(\"END:sendUnlockRequest;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";cusco.jobid:\" + response.getJobId() + \";duration:\" + (end - start) + \"ms;\");\n    return response;\n  }\n\n  @Override\n  public boolean updateUnlockRequestStateAndCheckIfUnlocked(Customer customer, UserInfo user, String contextKey, String referenceKey) {\n    try {\n      long start = System.currentTimeMillis();\n      logger.debug(\"START:updateUnlockRequestStateAndCheckIfUnlocked;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";cusco.jobid:\" + referenceKey + \";;\");\n      logger.debug(\"START:updateUnlockRequestStateAndCheckIfUnlocked:checkStatusForSigned;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";cusco.jobid:\" + referenceKey + \";;\");\n      CusCoResponse response = cuscoUnlockService.checkStatusForSigned(referenceKey);\n      long end_cusco = System.currentTimeMillis();\n      logger.debug(\"END:updateUnlockRequestStateAndCheckIfUnlocked:checkStatusForSigned;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";cusco.jobid:\" + referenceKey\n          + \";duration:\" + (end_cusco - start) + \"ms;\");\n\n      if (StringUtils.equalsIgnoreCase(\"signed\", response.getStatus())) {\n        ContextAwareCustomerUnlockRequest request = unlockDao.findByCustomerIdAndUsernameAndJobIdAndSessionKey(customer.getCustomerNumber(), user.getBiteUser(), referenceKey, contextKey);\n\n        if (request != null) {\n          request.setState(UnlockStateEnum.FINISHED_UNLOCKED);\n          logger.debug(\"checkStatusForSigned:FINISHED_UNLOCKED;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";cusco.jobid:\" + referenceKey + \";;\");\n          request.setFinished(new Date());\n        }\n        unlockDao.update(request);\n\n        Auditor.audit(ContextAwareAuditHelper.createFor(CuCoAuditScope.CUSTOMER, CuCoAuditActivity.UNLOCK).withCustomerNumber(customer.getId()));\n      } else if (!StringUtils.equalsIgnoreCase(\"Unknown\", response.getStatus())) {\n        ContextAwareCustomerUnlockRequest request = unlockDao.findByCustomerIdAndUsernameAndJobIdAndSessionKey(customer.getCustomerNumber(), user.getBiteUser(), referenceKey, contextKey);\n\n        if (request != null) {\n          request.setState(UnlockStateEnum.FINISHED_LOCKED);\n          logger.debug(\"checkStatusForSigned:FINISHED_LOCKED;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";cusco.jobid:\" + referenceKey + \";;\");\n          request.setFinished(new Date());\n        }\n        unlockDao.update(request);\n\n        Auditor.audit(ContextAwareAuditHelper.createFor(CuCoAuditScope.CUSTOMER, CuCoAuditActivity.LOCK).withCustomerNumber(customer.getId()));\n      }\n      long end = System.currentTimeMillis();\n      logger.debug(\n          \"END:updateUnlockRequestStateAndCheckIfUnlocked;username:\" + user.getUsername() + \";customer:\" + customer.getId() + \";cusco.jobid:\" + referenceKey + \";duration:\" + (end - start) + \"ms;\");\n    } catch (DataAccessException e) {\n      logger.info(\"Error while requesting for \" + customer.getId() + \" / \" + user.getUsername() + \"/ \" + referenceKey, e);\n    }\n\n    return checkIfUnlockded(customer, user, contextKey, referenceKey);\n  }\n\n  @Override\n  public void lockOverride(Customer customer, UserInfo user, String sessionId, UnlockStateEnum state) {\n    List<ContextAwareCustomerUnlockRequest> result = unlockDao.findByCustomerIdAndUsernameAndContextKey(customer.getCustomerNumber(), user.getBiteUser(), sessionId);\n\n    if (result.isEmpty()) {\n      Auditor.audit(ContextAwareAuditHelper.createFor(CuCoAuditScope.CUSTOMER, CuCoAuditActivity.LOCK_OVERRIDE).withCustomerNumber(customer.getId()));\n\n      ContextAwareCustomerUnlockRequest request = new ContextAwareCustomerUnlockRequest();\n      request.setContext(UnlockRequestContext.SESSION);\n      request.setCreated(new Date());\n      request.setCustomerId(customer.getId());\n      request.setFinished(new Date());\n      request.setSessionKey(sessionId);\n      request.setState(state);\n      request.setUser(user.getBiteUser());\n      request.setJobId(\"manual-override-\" + user.getUsername() + \"-\" + sessionId);\n      request.setFinished(request.getCreated());\n      unlockDao.insert(request);\n      return;\n    }\n\n    for (ContextAwareCustomerUnlockRequest request : result) {\n      request.setState(state);\n      request.setFinished(new Date());\n      Auditor.audit(ContextAwareAuditHelper.createFor(CuCoAuditScope.CUSTOMER, CuCoAuditActivity.LOCK_OVERRIDE).withCustomerNumber(customer.getId()));\n      unlockDao.update(request);\n    }\n  }\n\n  @Autowired(required = false)\n  public void setUnlockDao(CustomerUnlockRequestDao unlockDao) {\n    this.unlockDao = unlockDao;\n  }\n\n  @Autowired\n  public void setCuscoUnlockService(CuscoUnlockService cuscoUnlockService) {\n    this.cuscoUnlockService = cuscoUnlockService;\n  }\n\n  @Autowired\n  public void setSettings(SettingService settings) {\n    this.settings = settings;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ChargingTypeServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ChargingTypeServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 704,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.ChargingTypeDao;\nimport at.a1ta.cuco.core.service.ChargingTypeService;\nimport at.a1ta.cuco.core.shared.dto.ChargingType;\n\n@Service\npublic class ChargingTypeServiceImpl implements ChargingTypeService {\n\n  private ChargingTypeDao chargingTypeDao;\n\n  @Override\n  public List<ChargingType> getAllChargingTypes() {\n    return chargingTypeDao.getAllChargingTypes();\n  }\n\n  @Autowired\n  public void setChargingTypeDao(ChargingTypeDao chargingTypeDao) {\n    this.chargingTypeDao = chargingTypeDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/LinksPortletServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/LinksPortletServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 689,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.LinksPortletDao;\nimport at.a1ta.cuco.core.service.LinksPortletService;\nimport at.a1ta.cuco.core.shared.dto.LinksPortlet;\n\n@Service\npublic class LinksPortletServiceImpl implements LinksPortletService {\n\n  private LinksPortletDao linksPortletDao;\n\n  @Override\n  public List<LinksPortlet> getAllLinks() {\n    return linksPortletDao.getAllLinks();\n  }\n\n  @Autowired\n  public void setLinksPortletDao(LinksPortletDao linksPortletDao) {\n    this.linksPortletDao = linksPortletDao;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PartyCustomerLoyaltyServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PartyCustomerLoyaltyServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3306,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.File;\n\nimport org.apache.commons.io.FileUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.service.PartyCustomerLoyaltyService;\nimport at.a1ta.cuco.core.shared.dto.PartyCustomerLoyaltyInfo;\nimport at.a1telekom.cll.customerloyalty.ConnectPlusCustomer;\nimport at.a1telekom.cll.customerloyalty.IsConnectPlusCustomerRequest;\nimport at.a1telekom.cll.customerloyalty.IsConnectPlusCustomerRequestDocument;\nimport at.a1telekom.cll.customerloyalty.IsConnectPlusCustomerResponse;\nimport at.a1telekom.cll.customerloyalty.IsConnectPlusCustomerResponseDocument;\n\nimport com.telekomaustriagroup.esb.customerloyalty.CustomerLoyaltyStub;\n\n@Service\npublic class PartyCustomerLoyaltyServiceImpl extends BaseEsbClient<CustomerLoyaltyStub> implements PartyCustomerLoyaltyService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(PartyCustomerLoyaltyServiceImpl.class);\n  @Autowired\n  private SettingService settingService;\n\n  @Override\n  public PartyCustomerLoyaltyInfo getParty(long partyId) {\n    if (!settingService.getBooleanValue(\"partyDataPortletView.showA1ConnectPlusInfo\", true)) {\n      return null;\n    }\n\n    PartyCustomerLoyaltyInfo partyCustomerLoyaltyInfo = new PartyCustomerLoyaltyInfo(PartyCustomerLoyaltyInfo.LOADING);\n\n    try {\n      IsConnectPlusCustomerRequestDocument isConnectPlusCustomerRequestDocument = IsConnectPlusCustomerRequestDocument.Factory.newInstance();\n      IsConnectPlusCustomerRequest request = IsConnectPlusCustomerRequest.Factory.newInstance();\n      ConnectPlusCustomer addNewCustomer = request.addNewCustomer();\n      addNewCustomer.setPartyId(Long.toString(partyId));\n      isConnectPlusCustomerRequestDocument.setIsConnectPlusCustomerRequest(request);\n      partyCustomerLoyaltyInfo.setStaus(PartyCustomerLoyaltyInfo.NOT_RECEIVED);\n\n      IsConnectPlusCustomerResponse response;\n      IsConnectPlusCustomerResponseDocument responseDoc;\n      String mockResponseFileName = System.getProperty(\"catalina.base\") + \"//mocks//CustomerLoyaltyIsConnectPlusCustomerCMSYS5905.xml\";\n      if (settingService.getBooleanValue(\"testModeActive\", false) && new File(mockResponseFileName).exists()) {\n        response = IsConnectPlusCustomerResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileName))).getIsConnectPlusCustomerResponse();\n      } else {\n        responseDoc = stub.isConnectPlusCustomer(isConnectPlusCustomerRequestDocument, null);\n        response = responseDoc.getIsConnectPlusCustomerResponse();\n      }\n      if (response != null) {\n        partyCustomerLoyaltyInfo.setStaus(PartyCustomerLoyaltyInfo.LOADED);\n        partyCustomerLoyaltyInfo.setConnectPlusCustomer(response.getConnectPlusCustomer());\n      } else {\n        partyCustomerLoyaltyInfo.setStaus(PartyCustomerLoyaltyInfo.NOT_RECEIVED);\n      }\n    } catch (Exception ex) {\n      partyCustomerLoyaltyInfo.setStaus(PartyCustomerLoyaltyInfo.ERROR);\n      LOGGER.error(\"Error while loading CustomerLoyalty\", ex);\n    }\n    return partyCustomerLoyaltyInfo;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/KUMSCommonServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/KUMSCommonServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 948,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.cuco.core.dao.db.ImageSizeDao;\nimport at.a1ta.cuco.core.dao.esb.KUMSCommonDao;\nimport at.a1ta.cuco.core.service.KUMSCommonService;\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\n\nimport com.telekomaustriagroup.esb.kumscommon.KUMSCommonStub;\n\n@Service\npublic class KUMSCommonServiceImpl extends BaseEsbClient<KUMSCommonStub> implements KUMSCommonService {\n  \n  private static final Logger LOGGER = LoggerFactory.getLogger(KUMSCommonServiceImpl.class);\n  \n  @Autowired\n  private KUMSCommonDao kumsCommonDao;\n\n  @Override\n  public ArrayList<PointOfSaleInfo> loadAvailablePOSList() {\n    return kumsCommonDao.loadAvailablePOSList();\n  }\n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MailService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MailService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 20906,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.TimeZone;\n\nimport org.apache.commons.lang.ArrayUtils;\nimport org.apache.commons.lang.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.mail.Mail;\nimport at.a1ta.bite.core.mail.MailSender;\nimport at.a1ta.bite.core.server.dao.PersonDao;\nimport at.a1ta.bite.core.server.exception.MissingSettingException;\nimport at.a1ta.bite.core.server.service.LocalSettingService;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.cd.CdPerson;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.dao.db.SalesInfoDao;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.CompetitorNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\n\n/**\n * This class contains all functions for sending email to users\n * \n * @author Rene Weidinger\n * @version 1.0\n */\n@Component\npublic class MailService {\n\n  private static final String THREAT_REPORT_MAIL_DEFAULT_HEADER = \"Folgende Nutzer haben sich entgegen ihren Gewohnheiten verhalten:\\r\\n\";\n\n  private static final String THREAT_REPORT_MAIL_DEFAULT_FOOTER = \"Automatisch generierte Mail, basierend auf einer Auswertung der letzten 14 Tage.\";\n\n  private static final String THREAT_REPORT_MAIL_DEFAULT_SUBJECT = \"[CuCo]: Potential Data Theft Alert\";\n\n  private static final Logger mailLogger = LoggerFactory.getLogger(\"mailings\");\n\n  public static final String KEIN_BE = \"Kein Be\";\n\n  private static SimpleDateFormat iCalendarDateFormat = new SimpleDateFormat(\"yyyyMMdd'T'HHmm00'Z'\");\n  private static SimpleDateFormat bindingDateFormat = new SimpleDateFormat(\"dd.MM.yyyy\");\n\n  private SettingService settingService;\n\n  private LocalSettingService localSettingService;\n\n  private PartyDao partyDao;\n\n  private PersonDao personDao;\n\n  private MailSender mailSender;\n\n  private SalesInfoDao salesInfoDao;\n\n  public void sendBindingPeriodReminderMail(CompetitorNote cpNote) throws Exception {\n    mailLogger.debug(\"Send binding period reminder mail for SalesInfoNote: \" + cpNote.getSalesInfoNoteId());\n    Mail mail = prepareBindingPeriodEmail(cpNote);\n    if (mail != null) {\n      mailSender.sendMail(mail);\n    }\n\n    cpNote.setReminderMailSentDate(new Date());\n    salesInfoDao.updateBindingPeriodReminderMailSentDate(cpNote);\n  }\n\n  public void sendTaskReminderMail(SalesInfoNote siNote) throws Exception {\n    mailLogger.debug(\"Send task reminder mail for SalesInfoNote: \" + siNote.toString());\n    Mail mail = prepareTaskEmail(siNote);\n    mailSender.sendMail(mail);\n\n    siNote.getTask().setReminderMailSentDate(new Date());\n    salesInfoDao.updateTaskReminderMailSentDate(siNote.getTask());\n  }\n\n  public void sendVcalMail(SalesInfoNote siNote) throws Exception {\n    mailLogger.debug(\"Send Vcal mail for SalesInfoNote: \" + siNote.getSalesInfoNoteId());\n    Mail mail = prepareTaskEmail(siNote);\n    mail = addVcalInvite(mail, siNote);\n    mailSender.sendMail(mail);\n\n    siNote.getTask().setvCalMailSentDate(new Date());\n    siNote.getTask().setvCalMailTo(StringUtils.join(mail.getRecipients(), \";\"));\n    siNote.getTask().setvCalMailCC(StringUtils.join(mail.getCc(), \";\"));\n    salesInfoDao.updateTaskVcalMailSentInfo(siNote.getTask());\n  }\n\n  public void sendVcalCancelMail(SalesInfoNote siNote) throws Exception {\n    mailLogger.debug(\"Send Vcal cancel mail for SalesInfoNote: \" + siNote.getSalesInfoNoteId());\n    Mail mail = prepareTaskEmail(siNote);\n    if (mail != null) {\n      mail = setPreviousRecipients(siNote, mail);\n      mail = addVcalCancel(mail, siNote);\n      mailSender.sendMail(mail);\n    }\n  }\n\n  public void sendSalesConvReminderMail(SalesInfoNote siNote) throws Exception {\n    mailLogger.debug(\"Send reminder mail for SalesConvNote: \" + siNote.getSalesInfoNoteId());\n    Mail mail = prepareSalesConvEmail(siNote);\n    mailSender.sendMail(mail);\n\n    salesInfoDao.updateLastReminderMailSentDateForSalesConvNote(siNote.getSalesInfoNoteId());\n  }\n\n  private Mail setPreviousRecipients(SalesInfoNote siNote, Mail mail) {\n    if (siNote.getTask().getvCalMailTo() != null) {\n      String[] recipients = StringUtils.split(siNote.getTask().getvCalMailTo(), \";\");\n      mail.setRecipients(recipients);\n    }\n    if (siNote.getTask().getvCalMailCC() != null) {\n      String[] cc = StringUtils.split(siNote.getTask().getvCalMailCC(), \";\");\n      mail.setCc(cc);\n    }\n\n    return mail;\n  }\n\n  private Mail prepareSalesConvEmail(SalesInfoNote siNote) {\n    Party party = partyDao.loadParty(siNote.getPartyId());\n    if (party == null) {\n      mailLogger.error(\"Party is null for party id \" + siNote.getPartyId() + \" and si note id \" + siNote.getSalesInfoNoteId() + \" , cannot send email!\");\n      return null;\n    }\n\n    StringBuilder text = prepareSalesConvMailText(party, siNote.getLastModificationUser());\n    Mail mail = new Mail();\n\n    setSalesConvMailRecipients(siNote.getLastModificationUser(), mail);\n    if (ArrayUtils.isEmpty(mail.getRecipients())) {\n      return null;\n    }\n    mail.setSubject(readSetting(\"salesconv.mail.reminder.subject\") + \" \" + siNote.getPartyId());\n    mail.setMessage(text.toString());\n\n    mailLogger.info(\"real mail recipient: \" + ArrayUtils.toString(mail.getRecipients()));\n    if (mail.getCc() != null) {\n      mailLogger.info(\"real mail cc: \" + ArrayUtils.toString(mail.getCc()));\n    }\n    return mail;\n  }\n\n  private Mail prepareTaskEmail(SalesInfoNote siNote) {\n    Party party = partyDao.loadParty(siNote.getPartyId());\n    if (party == null) {\n      mailLogger.error(\"Party is null for party id \" + siNote.getPartyId() + \" and si note id \" + siNote.getSalesInfoNoteId() + \" , cannot send email!\");\n      return null;\n    }\n    if (siNote.getTask().getAssigneeUser() == null) {\n      mailLogger.error(\n          \"Assignee user is null for party id \" + siNote.getPartyId() + \" and si note id \" + siNote.getSalesInfoNoteId() + \" ,task id is \" + siNote.getTask().getTaskId() + \", cannot send email!\");\n      return null;\n    }\n\n    String productGroup = \"KUNDENNOTIZ\";\n    String comment = siNote.getNoteText();\n\n    StringBuilder text = prepareTaskMailText(productGroup, comment, party, siNote.getLastModificationUser());\n    Mail mail = new Mail();\n\n    setMailRecipientsForTasks(party, siNote.getTask().getAssigneeUser(), siNote.getLastModificationUser(), mail);\n    if (ArrayUtils.isEmpty(mail.getRecipients())) {\n      complementAlternateRecipients(mail);\n      complementAlternateMessage(text);\n    }\n    mail.setSubject(readSetting(\"mail.reminder.subject\") + \" \" + siNote.getPartyId());\n    mail.setMessage(text.toString());\n\n    mailLogger.info(\"real mail recipient: \" + ArrayUtils.toString(mail.getRecipients()));\n    if (mail.getCc() != null) {\n      mailLogger.info(\"real mail cc: \" + ArrayUtils.toString(mail.getCc()));\n    }\n    return mail;\n  }\n\n  private Mail prepareBindingPeriodEmail(CompetitorNote cpNote) {\n    Party party = partyDao.loadParty(cpNote.getPartyId());\n    if (party == null) {\n      mailLogger.error(\"Can't send mail for unknown partyId: \" + cpNote.getPartyId());\n      return null;\n    }\n\n    CdPerson secondaryReceiver = personDao.getPerson(cpNote.getLastModificationUser().getUsername());\n\n    StringBuilder text = prepareBindingPeriodMailText(cpNote, party, secondaryReceiver);\n    Mail mail = new Mail();\n\n    setMailRecipientsForBindingPeriodReminder(party, secondaryReceiver, mail);\n    if (ArrayUtils.isEmpty(mail.getRecipients())) {\n      complementAlternateRecipients(mail);\n      complementAlternateMessage(text);\n    }\n    mail.setSubject(readSetting(\"binding.period.mail.reminder.subject\"));\n    mail.setMessage(text.toString());\n\n    mailLogger.info(\"real mail recipient: \" + ArrayUtils.toString(mail.getRecipients()));\n    if (mail.getCc() != null) {\n      mailLogger.info(\"real mail cc: \" + ArrayUtils.toString(mail.getCc()));\n    }\n    return mail;\n  }\n\n  private Mail addVcalInvite(Mail mail, SalesInfoNote siNote) {\n    mail.setvCalendarContent(createVcalMessage(mail, siNote, VcalType.INVITE));\n    return mail;\n  }\n\n  private Mail addVcalCancel(Mail mail, SalesInfoNote siNote) {\n    mail.setvCalendarContent(createVcalMessage(mail, siNote, VcalType.CANCEL));\n    return mail;\n  }\n\n  public void sendThreatReportMail(String message) throws Exception {\n    Mail mail = prepareThreatReportMail(message);\n    mailSender.sendMail(mail);\n  }\n\n  private Mail prepareThreatReportMail(String message) {\n    Mail mail = new Mail();\n    addRecipientsToThreatReportMail(mail);\n    mail.setSubject(settingService.getValueOrDefault(\"data.theft.alert.mail.subject\", THREAT_REPORT_MAIL_DEFAULT_SUBJECT));\n    mail.setMessage(assembleThreatReportMailBody(message));\n    return mail;\n  }\n\n  private void addRecipientsToThreatReportMail(Mail mail) {\n    mail.setRecipients(settingService.getValuesIgnoreMissing(\"data.theft.alert.mail.to\"));\n    mail.setCc(settingService.getValuesIgnoreMissing(\"data.theft.alert.mail.cc\"));\n    mail.setBcc(settingService.getValuesIgnoreMissing(\"data.theft.alert.mail.bcc\"));\n  }\n\n  private String assembleThreatReportMailBody(String message) {\n    StringBuilder mailText = new StringBuilder(settingService.getValueOrDefault(\"data.theft.alert.mail.header\", THREAT_REPORT_MAIL_DEFAULT_HEADER));\n    mailText.append(message);\n    mailText.append(settingService.getValueOrDefault(\"data.theft.alert.mail.footer\", THREAT_REPORT_MAIL_DEFAULT_FOOTER));\n    mailText.append(\"<br /><span style=\\\"font-size: 75%\\\">\" + new Date().toString() + \"</span>\");\n    return mailText.toString();\n  }\n\n  private StringBuilder prepareTaskMailText(String productGroup, String comment, Party party, BiteUser secondaryReciever) {\n    StringBuilder text = new StringBuilder();\n    appendhead(text);\n    appendBody(productGroup, comment, party, secondaryReciever, text);\n    appendfoot(text);\n    return text;\n  }\n\n  private StringBuilder prepareSalesConvMailText(Party party, BiteUser secondaryReciever) {\n    StringBuilder text = new StringBuilder();\n    appendhead(text);\n    appendBodySalesConv(party, secondaryReciever, text);\n    appendfoot(text);\n    return text;\n  }\n\n  private void appendBodySalesConv(Party party, BiteUser secondaryReciever, StringBuilder text) {\n    StringBuffer name = createCustomerName(party);\n    String street = party.getStreet() + \" \" + party.getHousenumber();\n    String city = party.getPoBox() + \" \" + party.getCity();\n\n    mailLogger.debug(localSettingService.getValue(\"app_url\"));\n\n    String link = localSettingService.getValue(\"app_url\") + \"?customerId=\" + party.getId() + \"&screen=salesInfo\";\n\n    String body = readSetting(\"salesconv.mail.reminder.text\");\n    body = body.replace(\"[0]\", nonNull(name.toString()));\n    body = body.replace(\"[1]\", nonNull(street));\n    body = body.replace(\"[2]\", nonNull(city));\n    body = body.replace(\"[6]\", nonNull(link));\n    text.append(body);\n  }\n\n  private StringBuilder prepareBindingPeriodMailText(CompetitorNote siNote, Party party, CdPerson creatorUser) {\n\n    StringBuilder text = new StringBuilder();\n    appendBindingPeriodHead(text);\n    appendBindingPeriodBody(siNote, party, text);\n    appendBindingPeriodFoot(text);\n    return text;\n  }\n\n  private void appendBindingPeriodHead(StringBuilder buf) {\n    buf.append(readSetting(\"binding.period.mail.header\"));\n  }\n\n  private void appendBindingPeriodBody(CompetitorNote cpNote, Party party, StringBuilder text) {\n    StringBuffer name = createCustomerName(party);\n    String street = party.getStreet() + \" \" + party.getHousenumber();\n    String city = party.getPoBox() + \" \" + party.getCity();\n\n    mailLogger.debug(localSettingService.getValue(\"app_url\"));\n\n    String link = localSettingService.getValue(\"app_url\") + \"?customerId=\" + party.getId();\n\n    String body = readSetting(\"binding.period.mail.reminder.text\");\n    body = body.replace(\"[0]\", bindingDateFormat.format(cpNote.getBindingDate()));\n    body = body.replace(\"[1]\", cpNote.getName() == null ? \"\" : cpNote.getName());\n    body = body.replace(\"[2]\", name == null ? \"\" : name.toString());\n    body = body.replace(\"[3]\", street);\n    body = body.replace(\"[4]\", city);\n    body = body.replace(\"[5]\", link);\n    text.append(body);\n  }\n\n  private void appendBindingPeriodFoot(StringBuilder buf) {\n    buf.append(readSetting(\"binding.period.mail.footer\"));\n  }\n\n  private void complementAlternateMessage(StringBuilder text) {\n    text.insert(0, readSetting(\"mail.reminder.alternatetext\"));\n  }\n\n  private void complementAlternateRecipients(Mail mail) {\n    mail.setRecipients(readSetting(\"mail.reminder.alternateteams\").split(\";\"));\n  }\n\n  private void setMailRecipientsForBindingPeriodReminder(Party party, CdPerson secondaryReceiver, Mail mail) {\n    String email = null;\n    String cc = null;\n\n    mailLogger.debug(party.getSupportUserId());\n    if (KEIN_BE.equals(party.getSupportUserId())) {\n      email = StringUtils.trimToNull(secondaryReceiver.getEmail());\n      if (email != null && secondaryReceiver.getExecutive() != null) {\n        cc = personDao.getPerson(secondaryReceiver.getExecutive()).getEmail();\n      }\n    } else {\n      CdPerson supporter = personDao.getPerson(party.getSupportUserId());\n      email = StringUtils.trimToNull(supporter.getEmail());\n      if (email != null && supporter.getExecutive() != null) {\n        cc = personDao.getPerson(supporter.getExecutive()).getEmail();\n      }\n    }\n\n    mail.setRecipients((email == null) ? null : new String[] {email});\n    mail.setCc((cc == null) ? null : new String[] {cc});\n  }\n\n  private void setSalesConvMailRecipients(BiteUser primaryReceiver, Mail mail) {\n    String email = null;\n    String cc = null;\n\n    if (primaryReceiver != null && primaryReceiver.getEmail() != null) {\n      email = primaryReceiver.getEmail();\n      if (email != null) {\n        cc = getExecutiveEmail(primaryReceiver);\n      }\n    }\n\n    mail.setRecipients((email == null) ? null : new String[] {email});\n    mail.setCc((cc == null) ? null : new String[] {cc});\n  }\n\n  private void setMailRecipientsForTasks(Party party, BiteUser primaryReceiver, BiteUser secondaryReceiver, Mail mail) {\n    String email = null;\n    String cc = null;\n\n    if (primaryReceiver != null && primaryReceiver.getEmail() != null) {\n      email = primaryReceiver.getEmail();\n      if (email != null) {\n        cc = getExecutiveEmail(primaryReceiver);\n      }\n    } else {\n      if (KEIN_BE.equals(party.getSupportUserId())) {\n        email = secondaryReceiver.getEmail();\n        if (email != null) {\n          cc = getExecutiveEmail(secondaryReceiver);\n        }\n      } else {\n        CdPerson supporter = personDao.getPerson(party.getSupportUserId());\n        email = StringUtils.trimToNull(supporter.getEmail());\n        if (email != null && supporter.getExecutive() != null) {\n          cc = personDao.getPerson(supporter.getExecutive()).getEmail();\n        }\n      }\n    }\n\n    mail.setRecipients((email == null) ? null : new String[] {email});\n    mail.setCc((cc == null) ? null : new String[] {cc});\n  }\n\n  private String getExecutiveEmail(BiteUser user) {\n    if (user.isPartnerCenterUser()) {\n      return null;\n    }\n    CdPerson person = personDao.getPerson(user.getUsername());\n    if (person.getExecutive() != null) {\n      return personDao.getPerson(person.getExecutive()).getEmail();\n    }\n    return null;\n  }\n\n  private void appendBody(String productGroup, String comment, Party party, BiteUser secondaryReciever, StringBuilder text) {\n    StringBuffer name = createCustomerName(party);\n    String street = party.getStreet() + \" \" + party.getHousenumber();\n    String city = party.getPoBox() + \" \" + party.getCity();\n    String creator = secondaryReciever.getName();\n\n    mailLogger.debug(localSettingService.getValue(\"app_url\"));\n\n    String link = localSettingService.getValue(\"app_url\") + \"?customerId=\" + party.getId();\n\n    String body = readSetting(\"mail.reminder.text\");\n    body = body.replace(\"[0]\", nonNull(name.toString()));\n    body = body.replace(\"[1]\", nonNull(street));\n    body = body.replace(\"[2]\", nonNull(city));\n    body = body.replace(\"[3]\", nonNull(productGroup));\n    body = body.replace(\"[4]\", nonNull(comment));\n    body = body.replace(\"[5]\", nonNull(creator));\n    body = body.replace(\"[6]\", nonNull(link));\n    text.append(body);\n  }\n\n  private String nonNull(String str) {\n    return str == null ? \"\" : str;\n  }\n\n  private enum VcalType {\n    INVITE, CANCEL\n  }\n\n  public String createVcalMessage(Mail mail, SalesInfoNote siNote, VcalType type) {\n\n    // mailsender alters the recipient & CC, therefore get the altered list\n    String from = mailSender.determineSenderAddress();\n    String[] realRecipients = mailSender.getRealRecipients(mail);\n    String[] realCCs = mailSender.getRealCC(mail);\n\n    Date start = siNote.getTask().getStartDate();\n    iCalendarDateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    Date end = siNote.getTask().getEndDate();\n\n    // check the icalendar spec in order to build a more complicated meeting request\n    StringBuilder calendarContent = new StringBuilder();\n    calendarContent.append(\"BEGIN:VCALENDAR\\n\");\n\n    if (type == VcalType.INVITE) {\n      calendarContent.append(\"METHOD:REQUEST\\n\");\n    } else if (type == VcalType.CANCEL) {\n      calendarContent.append(\"METHOD:CANCEL\\n\");\n      calendarContent.append(\"STATUS:CANCELLED\\n\");\n    }\n    calendarContent.append(\"PRODID:A1\\n\");\n    calendarContent.append(\"VERSION:2.0\\n\");\n    calendarContent.append(\"BEGIN:VEVENT\\n\");\n    calendarContent.append(\"DTSTAMP:\" + iCalendarDateFormat.format(new Date()) + \"\\n\");\n    if (start != null) {\n      calendarContent.append(\"DTSTART:\" + iCalendarDateFormat.format(start) + \"\\n\");\n    }\n    if (end != null) {\n      calendarContent.append(\"DTEND:\" + iCalendarDateFormat.format(end) + \"\\n\");\n    }\n    calendarContent.append(\"SUMMARY:\" + readSetting(\"mail.reminder.subject\") + \" \" + siNote.getPartyId() + \"\\n\");\n    calendarContent.append(\"UID:\" + siNote.getSalesInfoNoteId() + \"\\n\");\n    for (String cc : realCCs) {\n      calendarContent.append(\"ATTENDEE;ROLE=NON-PARTICIPANT;PARTSTAT=NEEDS-ACTION;RSVP=TRUE:MAILTO:\" + cc + \"\\n\");\n    }\n    for (String to : realRecipients) {\n      calendarContent.append(\"ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=NEEDS-ACTION;RSVP=TRUE:MAILTO:\" + to + \"\\n\");\n    }\n    calendarContent.append(\"ORGANIZER:MAILTO:\" + from + \"\\n\");\n    calendarContent.append(\"LOCATION:-\\n\");\n    calendarContent.append(\"DESCRIPTION:TODO\\n\");\n    calendarContent.append(\"SEQUENCE:0\\n\");\n    calendarContent.append(\"PRIORITY:5\\n\" + \"CLASS:PUBLIC\\n\");\n    calendarContent.append(\"STATUS:CONFIRMED\\n\");\n    calendarContent.append(\"TRANSP:OPAQUE\\n\");\n    calendarContent.append(\"BEGIN:VALARM\\n\");\n    calendarContent.append(\"ACTION:DISPLAY\\n\");\n    calendarContent.append(\"DESCRIPTION:REMINDER\\n\");\n    calendarContent.append(\"TRIGGER;RELATED=START:-PT00H15M00S\\n\");\n    calendarContent.append(\"END:VALARM\\n\");\n    calendarContent.append(\"END:VEVENT\\n\");\n    calendarContent.append(\"END:VCALENDAR\");\n\n    return calendarContent.toString();\n  }\n\n  /**\n   * reads the setting with the key.\n   * \n   * @param setting key\n   * @throws MissingSettingException if the setting is missing.\n   */\n  private String readSetting(String settingKey) {\n    String value = settingService.getValue(settingKey);\n    if (value == null) {\n      throw new MissingSettingException(settingKey);\n    }\n    return value;\n  }\n\n  private void appendhead(StringBuilder buf) {\n    buf.append(readSetting(\"mail.header\"));\n  }\n\n  private void appendfoot(StringBuilder buf) {\n    buf.append(readSetting(\"mail.footer\"));\n  }\n\n  private StringBuffer createCustomerName(Party c) {\n    StringBuffer name = new StringBuffer();\n    if (c.getSalutation() != null) {\n      name.append(c.getSalutation());\n      name.append(\" \");\n    }\n    if (c.getFirstname() != null) {\n      name.append(c.getFirstname());\n      name.append(\" \");\n    }\n    name.append(c.getLastname());\n    return name;\n  }\n\n  @Autowired\n  @Qualifier(\"cucoCustomerDao\")\n  public void setPartyDao(PartyDao partyDao) {\n    this.partyDao = partyDao;\n  }\n\n  @Autowired\n  public void setPersonDao(PersonDao personDao) {\n    this.personDao = personDao;\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n\n  @Autowired\n  public void setLocalSettingService(LocalSettingService localSettingService) {\n    this.localSettingService = localSettingService;\n  }\n\n  @Autowired\n  public void setMailSender(MailSender mailSender) {\n    this.mailSender = mailSender;\n  }\n\n  @Autowired\n  public void setSalesInfoDao(SalesInfoDao salesInfoDao) {\n    this.salesInfoDao = salesInfoDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CustomerBlockServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CustomerBlockServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1207,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.CustomerBlockDao;\nimport at.a1ta.cuco.core.service.CustomerBlockService;\nimport at.a1ta.cuco.core.shared.dto.CustomerBlock;\n\n@Service\npublic class CustomerBlockServiceImpl implements CustomerBlockService {\n\n  @Autowired\n  private CustomerBlockDao customerBlockDao;\n\n  @Override\n  public List<CustomerBlock> getCustomerBlocksForFlashInfo(long flashInfoId) {\n    return customerBlockDao.getCustomerBlocksForFlashInfo(flashInfoId);\n  }\n\n  @Override\n  public CustomerBlock getCustomerBlockById(long customerBlockId) {\n    return customerBlockDao.getCustomerBlockById(customerBlockId);\n  }\n\n  @Override\n  public void insertCustomerBlock(CustomerBlock customerBlock) {\n    customerBlockDao.insertCustomerBlock(customerBlock);\n  }\n\n  @Override\n  public void updateCustomerBlock(CustomerBlock customerBlock) {\n    customerBlockDao.updateCustomerBlock(customerBlock);\n  }\n\n  @Override\n  public void deleteCustomerBlock(long customerBlockId) {\n    customerBlockDao.deleteCustomerBlock(customerBlockId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CCTOrgStructureElementServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CCTOrgStructureElementServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1147,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.CCTOrgStructureElementDao;\nimport at.a1ta.cuco.core.service.CCTOrgStructureElementService;\nimport at.a1ta.cuco.core.shared.dto.product.CCTOrgStructureElement;\n\n@Service\npublic class CCTOrgStructureElementServiceImpl implements CCTOrgStructureElementService {\n  private CCTOrgStructureElementDao cCTOrgStructureElementDao;\n\n  @Autowired\n  public void setcCTOrgStructureElementDao(CCTOrgStructureElementDao cCTOrgStructureElementDao) {\n    this.cCTOrgStructureElementDao = cCTOrgStructureElementDao;\n  }\n\n  @Override\n  public void updateCCTOrg(ArrayList<CCTOrgStructureElement> cctClearanceOrgStructure) {\n    cCTOrgStructureElementDao.deleteAllAndBatchInsertInTransaction(cctClearanceOrgStructure);\n  }\n\n  @Override\n  public List<String> getAllUsers() {\n    return cCTOrgStructureElementDao.getAllUsers();\n  }\n\n  @Override\n  public void eraseOldEntries() {\n    cCTOrgStructureElementDao.eraseOldEntries();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ProductAdminServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ProductAdminServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 10614,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\n\nimport org.apache.commons.lang3.ObjectUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport at.a1ta.cuco.core.dao.db.InventoryProductGroupDao;\nimport at.a1ta.cuco.core.dao.db.ProductHierarchyDao;\nimport at.a1ta.cuco.core.service.ProductAdminService;\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroup;\nimport at.a1ta.cuco.core.shared.dto.InventoryProductGroupAssignation;\nimport at.a1ta.cuco.core.shared.dto.Product;\nimport at.a1ta.cuco.core.shared.dto.ProductHierarchy;\nimport at.a1ta.cuco.core.shared.dto.ProductLevel;\n\n@Service\npublic class ProductAdminServiceImpl implements ProductAdminService {\n\n  @Autowired\n  private InventoryProductGroupDao inventoryProductGroupDao;\n\n  @Autowired\n  private ProductHierarchyDao productHierarchyDao;\n\n  @Override\n  public List<InventoryProductGroup> getAllInventoryProductGroups() {\n    return inventoryProductGroupDao.getAllInventoryProductGroups();\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void saveInventoryProductGroup(InventoryProductGroup inventoryProductGroup) {\n    if (inventoryProductGroup.getId() != null) {\n      inventoryProductGroupDao.updateInventoryProductGroup(inventoryProductGroup);\n    } else {\n      inventoryProductGroupDao.insertInventoryProductGroup(inventoryProductGroup);\n    }\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void moveInventoryProductGroupUp(InventoryProductGroup inventoryProductGroup) {\n    inventoryProductGroupDao.moveInventoryProductGroupUp(inventoryProductGroup);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void moveInventoryProductGroupDown(InventoryProductGroup inventoryProductGroup) {\n    inventoryProductGroupDao.moveInventoryProductGroupDown(inventoryProductGroup);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void deleteInventoryProductGroup(InventoryProductGroup inventoryProductGroup) {\n    inventoryProductGroupDao.deleteInventoryProductGroup(inventoryProductGroup);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void addProductToInventoryProductGroup(String productId, Long inventoryProductGroupId) {\n    inventoryProductGroupDao.addProductToInventoryProductGroup(productId, inventoryProductGroupId);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void addLevelToInventoryProductGroup(Long levelId, Long inventoryProductGroupId) {\n    inventoryProductGroupDao.addLevelToInventoryProductGroup(levelId, inventoryProductGroupId);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void removeProductFromInventoryProductGroup(String productId, Long inventoryProductGroupId) {\n    inventoryProductGroupDao.removeProductFromInventoryProductGroup(productId, inventoryProductGroupId);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void removeLevelFromInventoryProductGroup(Long levelId, Long inventoryProductGroupId) {\n    inventoryProductGroupDao.removeLevelFromInventoryProductGroup(levelId, inventoryProductGroupId);\n  }\n\n  @Override\n  public List<Product> getProductsForInventoryProductGroup(Long inventoryProductGroupId) {\n    return inventoryProductGroupDao.getProductsForInventoryProductGroup(inventoryProductGroupId);\n  }\n\n  @Override\n  public List<ProductLevel> getProductLevelsForInventoryProductGroup(Long inventoryProductGroupId) {\n    return inventoryProductGroupDao.getProductLevelsForInventoryProductGroup(inventoryProductGroupId);\n  }\n\n  @Override\n  public List<ProductLevel> getProductTree() {\n    List<ProductHierarchy> productHierarchy = productHierarchyDao.getProductHierarchy();\n    List<InventoryProductGroupAssignation> inventoryProductGroupAssignations = inventoryProductGroupDao.getInventoryProductGroupAssignations();\n\n    HashMap<String, InventoryProductGroupAssignation> assignedProducts = getAssignedProducts(inventoryProductGroupAssignations);\n    HashMap<Long, InventoryProductGroupAssignation> assignedLevels = getAssignedLevels(inventoryProductGroupAssignations);\n    List<ProductLevel> productTree = createProductTree(productHierarchy, assignedProducts, assignedLevels);\n\n    return productTree;\n  }\n\n  private List<ProductLevel> createProductTree(List<ProductHierarchy> productHierarchy, HashMap<String, InventoryProductGroupAssignation> assignedProducts, HashMap<Long, InventoryProductGroupAssignation> assignedLevels) {\n    Set<Long> level1Ids = new HashSet<Long>();\n    List<ProductLevel> productTree = new ArrayList<ProductLevel>();\n    for (ProductHierarchy item : productHierarchy) {\n      if (!level1Ids.contains(item.getProductLevel1Id())) {\n        ProductLevel level1 = new ProductLevel(item.getProductLevel1Id(), item.getProductLevel1Description());\n        checkLevelAssignation(level1, assignedLevels);\n        addLevel2(productHierarchy, level1, assignedProducts, assignedLevels);\n        productTree.add(level1);\n        level1Ids.add(item.getProductLevel1Id());\n      }\n    }\n    return productTree;\n  }\n\n  private void addLevel2(List<ProductHierarchy> productHierarchy, ProductLevel level1, HashMap<String, InventoryProductGroupAssignation> assignedProducts, HashMap<Long, InventoryProductGroupAssignation> assignedLevels) {\n    Set<Long> level2Ids = new HashSet<Long>();\n    for (ProductHierarchy item : productHierarchy) {\n      if (level1.getProductLevelId().equals(item.getProductLevel1Id())) {\n        if (!level2Ids.contains(item.getProductLevel2Id())) {\n          ProductLevel level2 = new ProductLevel(item.getProductLevel2Id(), item.getProductLevel2Description());\n          checkLevelAssignation(level2, assignedLevels);\n          addLevel3(productHierarchy, level2, assignedProducts, assignedLevels);\n          level2.setParent(level1);\n          level1.addSubProductLevel(level2);\n          level2Ids.add(item.getProductLevel2Id());\n        }\n      }\n    }\n  }\n\n  private void addLevel3(List<ProductHierarchy> productHierarchy, ProductLevel level2, HashMap<String, InventoryProductGroupAssignation> assignedProducts, HashMap<Long, InventoryProductGroupAssignation> assignedLevels) {\n    Set<Long> level3Ids = new HashSet<Long>();\n    for (ProductHierarchy item : productHierarchy) {\n      if (level2.getProductLevelId().equals(item.getProductLevel2Id())) {\n        if (!level3Ids.contains(item.getProductLevel3Id())) {\n          ProductLevel level3 = new ProductLevel(item.getProductLevel3Id(), item.getProductLevel3Description());\n          checkLevelAssignation(level3, assignedLevels);\n          addLevel4(productHierarchy, level3, assignedProducts, assignedLevels);\n          level3.setParent(level2);\n          level2.addSubProductLevel(level3);\n          level3Ids.add(item.getProductLevel3Id());\n        }\n      }\n    }\n  }\n\n  private void addLevel4(List<ProductHierarchy> productHierarchy, ProductLevel level3, HashMap<String, InventoryProductGroupAssignation> assignedProducts, HashMap<Long, InventoryProductGroupAssignation> assignedLevels) {\n    Set<Long> level4Ids = new HashSet<Long>();\n    for (ProductHierarchy item : productHierarchy) {\n      if (level3.getProductLevelId().equals(item.getProductLevel3Id())) {\n        if (!level4Ids.contains(item.getProductLevel4Id())) {\n          ProductLevel level4 = new ProductLevel(item.getProductLevel4Id(), item.getProductLevel4Description());\n          checkLevelAssignation(level4, assignedLevels);\n          addProducts(productHierarchy, level4, assignedProducts);\n          level4.setParent(level3);\n          level3.addSubProductLevel(level4);\n          level4Ids.add(item.getProductLevel4Id());\n        }\n      }\n    }\n  }\n\n  private void addProducts(List<ProductHierarchy> productHierarchy, ProductLevel level4, HashMap<String, InventoryProductGroupAssignation> assignedProducts) {\n    for (ProductHierarchy item : productHierarchy) {\n      if (level4.getProductLevelId().equals(item.getProductLevel4Id())) {\n        String productDescription = item.getProductDescription() == null ? item.getProductId() : item.getProductDescription();\n\n        Product product = new Product(item.getProductId(), productDescription);\n        checkProductAssignation(product, assignedProducts);\n        product.setParent(level4);\n        level4.addProduct(product);\n      }\n    }\n    \n    Collections.sort(level4.getProducts(), new Comparator<Product>() {\n      @Override\n      public int compare(Product p1, Product p2) {\n        return ObjectUtils.compare(p1.getDescription(), p2.getDescription());\n      }\n    });\n  }\n\n  private HashMap<String, InventoryProductGroupAssignation> getAssignedProducts(List<InventoryProductGroupAssignation> inventoryProductGroupAssignations) {\n    HashMap<String, InventoryProductGroupAssignation> assignedProducts = new HashMap<String, InventoryProductGroupAssignation>(500);\n    for (InventoryProductGroupAssignation assignment : inventoryProductGroupAssignations) {\n      if (assignment.getProductId() != null) {\n        assignedProducts.put(assignment.getProductId(), assignment);\n      }\n    }\n    return assignedProducts;\n  }\n\n  private HashMap<Long, InventoryProductGroupAssignation> getAssignedLevels(List<InventoryProductGroupAssignation> inventoryProductGroupAssignations) {\n    HashMap<Long, InventoryProductGroupAssignation> assignedLevels = new HashMap<Long, InventoryProductGroupAssignation>(500);\n    for (InventoryProductGroupAssignation assignment : inventoryProductGroupAssignations) {\n      if (assignment.getLevelId() != 0) {\n        assignedLevels.put(assignment.getLevelId(), assignment);\n      }\n    }\n    return assignedLevels;\n  }\n\n  private void checkLevelAssignation(ProductLevel level, HashMap<Long, InventoryProductGroupAssignation> assignedLevels) {\n    if (assignedLevels.containsKey(level.getProductLevelId())) {\n      level.setInventoryProductGroup(inventoryProductGroupDao.getInventoryProductGroup(assignedLevels.get(level.getProductLevelId()).getInventoryProductGroupId()));\n    }\n  }\n\n  private void checkProductAssignation(Product product, HashMap<String, InventoryProductGroupAssignation> assignedProducts) {\n    if (assignedProducts.containsKey(product.getProductId())) {\n      product.setInventoryProductGroup(inventoryProductGroupDao.getInventoryProductGroup(assignedProducts.get(product.getProductId()).getInventoryProductGroupId()));\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/SalesInfoServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/SalesInfoServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5637,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.dao.UserDao;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.dao.db.SalesInfoDao;\nimport at.a1ta.cuco.core.dao.db.StandardAddressDao;\nimport at.a1ta.cuco.core.service.SalesInfoService;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.AppointmentNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.CompetitorNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesConvNoteReportRow;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SbsNoteReportRow;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SimpleNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.Task;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.TeamEmailAdminGroup;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote;\n\n@Service\npublic class SalesInfoServiceImpl implements SalesInfoService {\n  @Autowired\n  private SalesInfoDao salesInfoDao;\n  @Autowired\n  private StandardAddressDao standardAddressDao;\n  @Autowired\n  private UserDao userDao;\n\n  @Override\n  public List<SalesInfoNote> getNotesByPartyId(long partyId, List<SalesInfoNoteType> salesInfoNoteTypesToLoad) {\n    return salesInfoDao.getNotesByPartyId(partyId, salesInfoNoteTypesToLoad);\n  }\n\n  @Override\n  public void insertSalesInfoNote(SalesInfoNote note) {\n    if (note.getTask() != null && note.getTask().getAddress() != null && note.getTask().getAddress().getAddressId() < 0) {\n      standardAddressDao.insertAddress(note.getTask().getAddress());\n    }\n    if (note.getTask() != null) {\n      salesInfoDao.insertTask(note.getTask());\n    }\n    salesInfoDao.insertNote(note);\n    if (note instanceof SimpleNote) {\n      salesInfoDao.insertSimpleNote((SimpleNote) note);\n    } else if (note instanceof CompetitorNote) {\n      salesInfoDao.insertCompetitorNote((CompetitorNote) note);\n    } else if (note instanceof AppointmentNote) {\n      salesInfoDao.insertAppointmentNote((AppointmentNote) note);\n    }\n  }\n\n  @Override\n  public void updateSalesInfoNote(SalesInfoNote note) {\n    salesInfoDao.updateNote(note);\n    if (note instanceof SimpleNote) {\n      // nothing to do\n    } else if (note instanceof CompetitorNote) {\n      salesInfoDao.updateCompetitorNote((CompetitorNote) note);\n    } else if (note instanceof AppointmentNote) {\n      salesInfoDao.updateAppointmentNote((AppointmentNote) note);\n    }\n    if (note.getTask() != null && note.getTask().getAddress() != null) {\n      if (note.getTask().getAddress().getAddressId() < 0) {\n        standardAddressDao.insertAddress(note.getTask().getAddress());\n      } else {\n        standardAddressDao.updateAddress(note.getTask().getAddress());\n      }\n    }\n    if (note.getTask() != null) {\n      salesInfoDao.updateTask(note.getTask());\n    }\n  }\n\n  @Override\n  public void markNoteAsDeleted(SalesInfoNote note) {\n\n    salesInfoDao.markNoteAsDeleted(note);\n  }\n\n  @Override\n  public SimpleNote getSimpleNoteByNoteId(long noteId) {\n    return salesInfoDao.getSimpleNoteByNoteId(noteId);\n  }\n\n  @Override\n  public CompetitorNote getCompetitorNoteByNoteId(long noteId) {\n    return salesInfoDao.getCompetitorNoteByNoteId(noteId);\n  }\n\n  @Override\n  public AppointmentNote getAppointmentNoteByNoteId(long noteId) {\n    return salesInfoDao.getAppointmentNoteByNoteId(noteId);\n  }\n\n  @Override\n  public Task getTask(long taskId) {\n    return salesInfoDao.getTask(taskId);\n  }\n\n  @Override\n  public SalesInfoNote getSalesInfoNote(long salesInfoNoteId) {\n    return salesInfoDao.getSalesInfoNote(salesInfoNoteId);\n  }\n\n  @Override\n  public List<SbsNoteReportRow> getSbsNoteReportData(Date startDate, Date endDate) {\n    return salesInfoDao.getSbsNoteReportData(startDate, endDate);\n  }\n\n  @Override\n  public List<SalesConvNoteReportRow> getSalesConvNoteReportData(Date startDate, Date endDate) {\n    return salesInfoDao.getSalesConvNoteReportData(startDate, endDate);\n  }\n\n  @Override\n  public List<TeamEmailAdminGroup> getTeamEmailAdminGroups() {\n    return salesInfoDao.getTeamEmailAdminGroups();\n  }\n\n  @Override\n  public String saveTeamEmailAdminGroups(List<TeamEmailAdminGroup> teamEmailAdminGroups) {\n    String failedUsers = \"\";\n    for (TeamEmailAdminGroup t : teamEmailAdminGroups) {\n      salesInfoDao.deleteTeamEmailAdminUsersByTeamEmailId(t.getId());\n      if (t.getUserList() != null && !t.getUserList().isEmpty()) {\n        for (String login : t.getUserList().split(\";\")) {\n          UserInfo userInfo = userDao.getByUsername(login.trim());\n          if (userInfo != null) {\n            salesInfoDao.insertTeamEmailAdminUser(t.getId(), userInfo.getId());\n          } else {\n            failedUsers += login + \";\";\n          }\n        }\n      }\n      salesInfoDao.updateTeamEmailAdminGroup(t);\n    }\n    return failedUsers;\n  }\n\n  // Changed By Nisha(Added this unimplemented method for removing errors)\n\n  @Override\n  public Collection<SBSProductNote> getProductNotesByNoteId(long noteId) {\n    // TODO Auto-generated method stub\n    return null;\n  }\n\n  @Override\n  public SalesInfoNote getAppointmentNoteForHistoryByNoteId(Long historyNoteId) {\n    return salesInfoDao.getAppointmentNoteForHistoryByNoteId(historyNoteId);\n  }\n\n  @Override\n  public SalesInfoNote getTaskNoteForHistoryByNoteId(Long historyNoteId) {\n    return salesInfoDao.getTaskNoteForHistoryByNoteId(historyNoteId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CreditTypeServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CreditTypeServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1081,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.CreditTypeDao;\nimport at.a1ta.cuco.core.service.CreditTypeService;\nimport at.a1ta.cuco.core.shared.dto.CreditType;\n\n@Service\npublic class CreditTypeServiceImpl implements CreditTypeService {\n\n  private CreditTypeDao creditTypeDao;\n\n  @Override\n  public void deleteCreditType(Long id) {\n    creditTypeDao.deleteCreditType(id);\n  }\n\n  @Override\n  public List<CreditType> getAllCreditTypes() {\n    return creditTypeDao.getAllCreditTypes();\n  }\n\n  @Override\n  public CreditType getCreditTypeById(Long id) {\n    return creditTypeDao.getCreditTypeById(id);\n  }\n\n  @Override\n  public void saveCreditType(CreditType ct) {\n    if (ct.getId() == null) {\n      creditTypeDao.insertCreditType(ct);\n    } else {\n      creditTypeDao.updateCreditType(ct);\n    }\n  }\n\n  @Autowired\n  public void setCreditTypeDao(CreditTypeDao creditTypeDao) {\n    this.creditTypeDao = creditTypeDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ServiceServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ServiceServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1132,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport at.a1ta.cuco.core.dao.db.ServiceDao;\nimport at.a1ta.cuco.core.service.ServiceService;\nimport at.a1ta.cuco.core.shared.dto.Service;\n\n@org.springframework.stereotype.Service\npublic class ServiceServiceImpl implements ServiceService {\n\n  private ServiceDao serviceDao;\n\n  @Override\n  public void deleteService(Long id) {\n    serviceDao.deleteService(id);\n  }\n\n  @Override\n  public List<Service> getAllServices() {\n    return serviceDao.getAllServices();\n  }\n\n  @Override\n  public void saveService(Service service) {\n    if (service.getId() == null) {\n      serviceDao.insertService(service);\n    } else {\n      serviceDao.updateService(service);\n    }\n  }\n\n  @Override\n  public List<Service> getValidForUser(Long userId) {\n    return serviceDao.getValidForUser(userId);\n  }\n\n  @Autowired\n  public void setServiceDao(ServiceDao serviceDao) {\n    this.serviceDao = serviceDao;\n  }\n\n  @Override\n  public List<Service> searchService(String service) {\n    return serviceDao.searchService(service);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/FlashInfoServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/FlashInfoServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5357,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport at.a1ta.bite.core.shared.dto.security.Role;\nimport at.a1ta.cuco.core.dao.db.FlashInfoDao;\nimport at.a1ta.cuco.core.service.CustomerBlockService;\nimport at.a1ta.cuco.core.service.FlashInfoService;\nimport at.a1ta.cuco.core.shared.dto.CustomerBlock;\nimport at.a1ta.cuco.core.shared.dto.FlashInfo;\nimport at.a1ta.cuco.core.shared.dto.Tupel;\n\n@Service\npublic class FlashInfoServiceImpl implements FlashInfoService {\n\n  private FlashInfoDao flashInfoDao;\n  private CustomerBlockService customerBlockService;\n\n  @Override\n  public FlashInfo getFlashInfoById(long flashId) {\n    return flashInfoDao.getFlashInfoById(flashId);\n  }\n\n  @Override\n  public List<FlashInfo> getAllFlashInfos() {\n    return flashInfoDao.getAllFlashInfos();\n  }\n\n  @Override\n  public List<FlashInfo> getFlashInfoForUserAndCustomer(long userId, long customerId) {\n    return flashInfoDao.getFlashInfoForUserAndCustomer(userId, customerId);\n  }\n\n  @Override\n  @Transactional(value = \"transactionManager\")\n  public void saveFlashInfo(FlashInfo flashInfo) {\n    setCorrectFlashInfoToBlock(flashInfo);\n    if (flashInfo.getId() == -1) {\n      createFlashInfo(flashInfo);\n    } else {\n      updateFlashInfo(flashInfo);\n    }\n  }\n\n  @Override\n  public void deleteFlashInfo(long flashId) {\n    flashInfoDao.deleteFlashInfo(flashId);\n  }\n\n  @Override\n  public void insertFlashViewed(long flashInfoId, long partyId, long userId) {\n    flashInfoDao.insertFlashViewed(flashInfoId, partyId, userId);\n  }\n\n  private void createFlashInfo(FlashInfo flashInfo) {\n    flashInfoDao.insertFlashInfo(flashInfo);\n    insertRoles(flashInfo);\n    insertFlashCustomers(flashInfo);\n    insertCustomerBlocks(flashInfo);\n  }\n\n  private void setCorrectFlashInfoToBlock(FlashInfo flashInfo) {\n    for (CustomerBlock block : flashInfo.getCustomerBlocks()) {\n      block.setFlashInfo(flashInfo);\n    }\n  }\n\n  private void insertRoles(FlashInfo flashInfo) {\n    for (Role role : flashInfo.getRoles()) {\n      flashInfoDao.insertFlashRole(flashInfo.getId(), role.getName());\n    }\n  }\n\n  private void insertFlashCustomers(FlashInfo flashInfo) {\n    long flashId = flashInfo.getId();\n    HashMap<Long, Tupel<Long, Long>> toAdd = new HashMap<Long, Tupel<Long, Long>>(1000);\n    for (CustomerBlock block : flashInfo.getCustomerBlocks()) {\n      long count = 0;\n      for (long customer : getFilteredCustomers(block)) {\n        if (!toAdd.containsKey(flashId)) {\n          count++;\n        }\n        toAdd.put(customer, new Tupel<Long, Long>(flashId, customer));\n      }\n      block.setCount(count);\n    }\n\n    flashInfoDao.insertFlashCustomer(toAdd.values());\n  }\n\n  private ArrayList<Long> getFilteredCustomers(CustomerBlock block) {\n    if (block.getData() == null || block.getData().equals(\"\")) {\n      return new ArrayList<Long>();\n    }\n\n    String[] stringIds = block.getData().replaceAll(\"\\r\\n\", \"\").split(\";\");\n    ArrayList<Long> longIds = new ArrayList<Long>(stringIds.length);\n    for (int i = 0; i < stringIds.length; i++) {\n      try {\n        longIds.add(Long.parseLong(stringIds[i]));\n      } catch (NumberFormatException e) {\n        // if it's not parseable, forget it\n      }\n    }\n    return longIds;\n  }\n\n  private void insertCustomerBlocks(FlashInfo flashInfo) {\n    for (CustomerBlock block : flashInfo.getCustomerBlocks()) {\n      customerBlockService.insertCustomerBlock(block);\n    }\n  }\n\n  private void updateFlashInfo(FlashInfo flashInfo) {\n    flashInfoDao.updateFlashInfo(flashInfo);\n\n    flashInfoDao.deleteFlashRoleForFlash(flashInfo.getId());\n    insertRoles(flashInfo);\n\n    flashInfoDao.deleteFlashCustomerForFlash(flashInfo.getId());\n    insertFlashCustomers(flashInfo);\n    processBlocks(flashInfo);\n  }\n\n  private void processBlocks(FlashInfo flashInfo) {\n    List<CustomerBlock> toDelete = getBlocksToDelete(flashInfo);\n    for (CustomerBlock block : toDelete) {\n      customerBlockService.deleteCustomerBlock(block.getId());\n    }\n\n    for (CustomerBlock block : flashInfo.getCustomerBlocks()) {\n      if (block.getId() == -1) {\n        customerBlockService.insertCustomerBlock(block);\n      } else {\n        customerBlockService.updateCustomerBlock(block);\n      }\n    }\n  }\n\n  private List<CustomerBlock> getBlocksToDelete(FlashInfo flashInfo) {\n    ArrayList<CustomerBlock> toDelete = new ArrayList<CustomerBlock>();\n    for (CustomerBlock oldBlock : customerBlockService.getCustomerBlocksForFlashInfo(flashInfo.getId())) {\n      if (!flashInfoContainsBlock(flashInfo, oldBlock)) {\n        toDelete.add(oldBlock);\n      }\n    }\n\n    return toDelete;\n  }\n\n  private boolean flashInfoContainsBlock(FlashInfo flashInfo, CustomerBlock oldBlock) {\n    for (CustomerBlock block : flashInfo.getCustomerBlocks()) {\n      if (block.getId() == oldBlock.getId()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  @Autowired\n  public void setFlashInfoDao(FlashInfoDao flashInfoDao) {\n    this.flashInfoDao = flashInfoDao;\n  }\n\n  @Autowired\n  public void setCustomerBlockService(CustomerBlockService customerBlockService) {\n    this.customerBlockService = customerBlockService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/KumsAccountService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/KumsAccountService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 901,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.telekom.www.eai.wstokumsretrieveaccount.GetAccountDocument;\nimport at.telekom.www.eai.wstokumsretrieveaccount.GetAccountResponseDocument;\nimport at.telekom.www.eai.wstokumsretrieveaccount.WSKUMSRetrieveAccountResponseACC1ACCOUNTType;\n\nimport com.telekomaustriagroup.esb.kumsaccount.KUMSAccountStub;\n\n@Service\npublic class KumsAccountService extends BaseEsbClient<KUMSAccountStub> {\n\n  public WSKUMSRetrieveAccountResponseACC1ACCOUNTType getAccount(String clearingAccount) throws Exception {\n    GetAccountDocument doc = GetAccountDocument.Factory.newInstance();\n    doc.addNewGetAccount().setACCTID(clearingAccount);\n\n    GetAccountResponseDocument value = stub.getAccount(doc, null);\n\n    return value.getGetAccountResponse().getACC1ACCOUNT();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UsageDataServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UsageDataServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3176,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.UsageDataDao;\nimport at.a1ta.cuco.core.service.PhoneNumberService;\nimport at.a1ta.cuco.core.service.UsageDataService;\nimport at.a1ta.cuco.core.shared.dto.usagedata.InetUsage;\nimport at.a1ta.cuco.core.shared.dto.usagedata.MobileUsage;\nimport at.a1ta.cuco.core.shared.dto.usagedata.NetworkProvider;\nimport at.a1ta.cuco.core.shared.dto.usagedata.VoiceUsage;\n\n@Service\npublic class UsageDataServiceImpl implements UsageDataService {\n\n  @Autowired\n  private UsageDataDao usageDataDao;\n\n  @Autowired\n  private PhoneNumberService phoneNumberService;\n\n  @Override\n  public List<String> getFixedLineNumbers(long partyId) {\n    return usageDataDao.getFixedLineNumbers(partyId);\n  }\n\n  @Override\n  public List<String> getMobileBanNumbers(long partyId) {\n    return usageDataDao.getMobileBanNumbers(partyId);\n  }\n\n  @Override\n  public List<String> getMobileNumbers(long partyId, String ban) {\n    return usageDataDao.getMobileNumbers(partyId, ban);\n  }\n\n  @Override\n  public List<String> getAonNumbers(long partyId) {\n    return usageDataDao.getAonNumbers(partyId);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineUsage(List<Long> partyIds) {\n    return usageDataDao.getFixedLineUsage(partyIds);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineUsage(long partyId) {\n    return usageDataDao.getFixedLineUsage(partyId);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineUsage(long partyId, String phoneNumber) {\n    return usageDataDao.getFixedLineUsage(partyId, phoneNumber);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineZoneUsage(long partyId, String phoneNumber) {\n    return usageDataDao.getFixedLineZoneUsage(partyId, phoneNumber);\n  }\n\n  @Override\n  public List<VoiceUsage> getFixedLineTimeZones(long partyId, String phoneNumber) {\n    return usageDataDao.getFixedLineTimeZones(partyId, phoneNumber);\n  }\n\n  @Override\n  public List<InetUsage> getAonUsageData(List<Long> partyIds, NetworkProvider provider) {\n    return usageDataDao.getAonUsageData(partyIds, provider);\n  }\n\n  @Override\n  public java.util.List<InetUsage> getAonUsageData(long partyId, NetworkProvider provider) {\n    return usageDataDao.getAonUsageData(partyId, provider);\n  }\n\n  @Override\n  public List<InetUsage> getAonUsageData(long partyId, String aonNumber, NetworkProvider networkProvider) {\n    return usageDataDao.getAonUsageData(partyId, aonNumber, networkProvider);\n  }\n\n  @Override\n  public List<MobileUsage> getMobileUsageData(List<Long> partyIds) {\n    return usageDataDao.getMobileUsageData(partyIds);\n  }\n\n  @Override\n  public List<MobileUsage> getMobileUsageDataPerBan(long partyId, String ban) {\n    return usageDataDao.getMobileUsageDataPerBan(partyId, ban);\n  }\n\n  @Override\n  public List<MobileUsage> getMobileUsageData(long partyId) {\n    return usageDataDao.getMobileUsageData(partyId);\n  }\n\n  @Override\n  public List<MobileUsage> getMobileUsageData(long partyId, String phoneNumber) {\n    return usageDataDao.getMobileUsageData(partyId, phoneNumber);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UserShopAssignmentServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UserShopAssignmentServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2658,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.TeamDao;\nimport at.a1ta.cuco.core.dao.db.UserShopAssignmentDao;\nimport at.a1ta.cuco.core.service.UserShopAssignmentService;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignment;\nimport at.a1ta.cuco.core.shared.dto.UserShopAssignmentLogLine;\n\n@Service\npublic class UserShopAssignmentServiceImpl implements UserShopAssignmentService {\n\n  private UserShopAssignmentDao userShopAssignmentDao;\n\n  @Autowired\n  public void setUserShopAssignmentDao(UserShopAssignmentDao userShopAssignmentDao) {\n    this.userShopAssignmentDao = userShopAssignmentDao;\n  }\n  \n  @Override\n  public List<UserShopAssignment> getUserShopAssignments() {\n    return userShopAssignmentDao.getUserShopAssignments();\n  }\n  \n  @Override\n  public HashMap<String,String> getUserShopAssignmentsForUserManagement() {\n    HashMap<String,String> preparedData = new HashMap<String,String>();\n    ArrayList<UserShopAssignment> data = new ArrayList<UserShopAssignment>(getUserShopAssignments());\n    \n    for( UserShopAssignment u : data ) {\n      if( preparedData.containsKey( u.getUserName().toUpperCase() ) ) {\n        String shopids = preparedData.get( u.getUserName().toUpperCase() );\n        shopids = shopids + \", \" + u.getShopID();\n        preparedData.put(u.getUserName().toUpperCase(), shopids);\n      }\n      else {\n        preparedData.put(u.getUserName().toUpperCase(), u.getShopID());\n      }\n    }\n    \n    return preparedData;\n  }\n\n  @Override\n  public List<UserShopAssignmentLogLine> getLogEntries() {\n    return userShopAssignmentDao.getLogEntries();\n  }\n\n  @Override\n  public Integer getLogEntriesCount() {\n    return userShopAssignmentDao.getLogEntriesCount();\n  }\n\n  @Override\n  public void insertLogEntry(UserShopAssignmentLogLine logline) {\n    userShopAssignmentDao.insertLogEntry(logline);\n  }\n\n  @Override\n  public void insertUserShopAssignment(UserShopAssignment assignment) {\n    userShopAssignmentDao.insertUserShopAssignment(assignment);\n  }\n\n  @Override\n  public void purgeLogEntries() {\n    userShopAssignmentDao.purgeLogEntries();\n  }\n\n  @Override\n  public void purgeUserShopAssignments() {\n    userShopAssignmentDao.purgeUserShopAssignments();\n  }\n\n  @Override\n  public List<String> getUserNamesForAssignments() {\n    return userShopAssignmentDao.getUserNamesForAssignments();\n  }\n\n  @Override\n  public List<String> getAssignedShopIDs() {\n    return userShopAssignmentDao.getAssignedShopIDs();\n  }\n  \n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CustomerAssignmentService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CustomerAssignmentService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 865,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.esb.CustomerAssignmentDao;\nimport at.a1ta.cuco.core.shared.dto.ContractOwnerAssignment;\n\n@Service\npublic class CustomerAssignmentService {\n\n  private CustomerAssignmentDao customerAssignmentDao;\n\n  public ContractOwnerAssignment getContractOwnerAssignmentByBan(String ban) {\n    return customerAssignmentDao.getContractOwnerAssignmentByBan(ban);\n  }\n\n  public ContractOwnerAssignment getContractOwnerAssignmentByPartyId(String partyId) {\n    return customerAssignmentDao.getContractOwnerAssignmentByPartyId(partyId);\n  }\n\n  @Autowired\n  public void setCustomerAssignmentDao(CustomerAssignmentDao customerAssignmentDao) {\n    this.customerAssignmentDao = customerAssignmentDao;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PartyProfileServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PartyProfileServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 11897,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\nimport org.apache.commons.io.FileUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.service.PartyProfileService;\nimport at.a1ta.cuco.core.shared.dto.PartyAdditionalInfo;\nimport at.a1ta.cuco.core.shared.dto.PartyProfileInfo;\nimport at.a1ta.cuco.core.shared.dto.PartyProfileNPSInfo;\nimport at.a1ta.cuco.core.shared.dto.PartyProfileSolvency;\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress.AddressDataSource;\nimport at.a1ta.cuco.core.shared.dto.SupportingUnit;\nimport at.a1telekom.parma.pps.v1_0.GetPartyFields;\nimport at.a1telekom.parma.pps.v1_0.GetPartyRequest;\nimport at.a1telekom.parma.pps.v1_0.GetPartyRequestDocument;\nimport at.a1telekom.parma.pps.v1_0.GetPartyResponse;\nimport at.a1telekom.parma.pps.v1_0.GetPartyResponseDocument;\nimport at.a1telekom.parma.pps.v1_0.common.Address;\nimport at.a1telekom.parma.pps.v1_0.common.AuthorizationInfo;\nimport at.a1telekom.parma.pps.v1_0.common.ContactInformation;\nimport at.a1telekom.parma.pps.v1_0.common.NetPromoterScore;\n\nimport com.telekomaustriagroup.esb.partyprofile.PartyProfileStub;\n\n@Service\npublic class PartyProfileServiceImpl extends BaseEsbClient<PartyProfileStub> implements PartyProfileService {\n\nprivate static final Logger LOGGER = LoggerFactory.getLogger(PartyProfileServiceImpl.class);\n  @Autowired\n  private SettingService settingService;\n\n  private static final String DEFAULT_SYSTEM = \"CUCO\";\n  private static final String DEFAULT_USER = \"UCuCO01\";\n\n  /**\n   * Key for ...\n   */\n  private static final String DEALER_EMAIL_KEY = \"EMAIL\";\n  /**\n   * Key for ...\n   */\n  private static final String DEALER_PHONE_KEY = \"PHONE\";\n\n  \n  @Override\n  public PartyProfileInfo getParty(long partyId) {\n    if (!settingService.getBooleanValue(\"nps.showNPSInfo\", false)) {\n      return null;\n    }\n    PartyProfileInfo partyProfileInfo = new PartyProfileInfo(PartyProfileInfo.LOADING);\n\n    try {\n      GetPartyRequestDocument getPartyRequestDocument = GetPartyRequestDocument.Factory.newInstance();\n      GetPartyRequest request = GetPartyRequest.Factory.newInstance();\n      GetPartyFields getPartyFields = GetPartyFields.Factory.newInstance();\n      getPartyFields.setPartyId(Integer.parseInt(partyId + \"\"));\n      request.setGetPartyFields(getPartyFields);\n      request.setAuthorizationInfo(AuthorizationInfo.Factory.newInstance());\n      request.getAuthorizationInfo().setSystem(settingService.getValueOrDefault(\"esbPartyProfileSystem\", DEFAULT_SYSTEM));\n      request.getAuthorizationInfo().setUser(settingService.getValueOrDefault(\"esbPartyProfileUser\", DEFAULT_USER));\n      getPartyRequestDocument.setGetPartyRequest(request);\n      partyProfileInfo.setStaus(PartyProfileInfo.NOT_RECEIVED);\n\n      GetPartyResponse response;\n      GetPartyResponseDocument responseDoc;\n      String mockResponseFileName = System.getProperty(\"catalina.base\") + \"//mocks//PartyProfileGetPartyCMSYS3413.xml\";\n      if (settingService.getBooleanValue(\"testModeActive\", false) && new File(mockResponseFileName).exists()) {\n        response = GetPartyResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileName))).getGetPartyResponse();\n      } else {\n        responseDoc = stub.getParty(getPartyRequestDocument, null);\n        response = responseDoc.getGetPartyResponse();\n      }\n      \n      if (response != null && response.getParty() != null && response.getParty().getNetPromoterScoreArray() != null) {\n        partyProfileInfo.setStaus(PartyProfileInfo.LOADED);\n        for (NetPromoterScore score : response.getParty().getNetPromoterScoreArray()) {\n          if (score.getScoringType() != null && score.getScoringValue() != null && score.getScoringDate() != null) {\n            Date date = score.getScoringDate().getTime();\n            SimpleDateFormat sdf = new SimpleDateFormat(\"d.M.yyyy\");\n            String getScoringDate = sdf.format(date);\n            partyProfileInfo.addToScores(new PartyProfileNPSInfo(score.getScoringType(), score.getScoringValue(), getScoringDate));\n          }\n        }\n        if (response.getParty().getSolvency() == null || response.getParty().getSolvency().getCreditLimit() == null || response.getParty().getSolvency().getCreditLimit().getAmount() == null) {\n        \tLOGGER.info(\"did not receive creditlimit in PartyProfile\");\n        } else {\n        \tPartyProfileSolvency partyProfileSolvency = new PartyProfileSolvency();\n        \tpartyProfileSolvency.setCreditLimit(response.getParty().getSolvency().getCreditLimit().getAmount().toPlainString());\n        \tpartyProfileInfo.setSolvency(partyProfileSolvency);\n        }\n\n        PointOfSaleInfo posInfo = new PointOfSaleInfo();\n        SupportingUnit supportingUnit = new SupportingUnit();\n        \n        \n        \n        if (response.getParty() == null || response.getParty().getSupportingUnit() == null) {\n            posInfo.setStaus(PointOfSaleInfo.ERROR);\n            supportingUnit.setStatus(SupportingUnit.ERROR);\n            LOGGER.info(\"did not receive supportingUnit info in PartyProfile\");\n        } else {\n            \n            partyProfileInfo.setAccountManagementSegment(response.getParty().getAccountManagementSegment());\n            supportingUnit.setSkzText(response.getParty().getSupportingUnit().getSkzText());\n            supportingUnit.setShopSupport(response.getParty().getSupportingUnit().getShopSupport());\n            supportingUnit.setSupportName(response.getParty().getSupportingUnit().getSupportName());\n            \n            if (response.getParty().getSupportingUnit().getContactInformation() != null) {\n                for (final ContactInformation contactInformation : response.getParty().getSupportingUnit().getContactInformation().getListArray()) {\n                    if (DEALER_EMAIL_KEY.equals(contactInformation.getType())) {\n                        supportingUnit.setEmailAddress(contactInformation.getEmailAddress());\n                    }\n                    if (DEALER_PHONE_KEY.equals(contactInformation.getType())) {\n                        supportingUnit.setPhoneNumber(contactInformation.getRawPhoneNumber());\n                    }\n                }\n            }\n            \n            if (response.getParty().getPointOfSale() == null) {\n                posInfo.setStaus(PointOfSaleInfo.NOT_RECEIVED);\n            } else {\n                posInfo.setAddress(extractAddress(response.getParty().getPointOfSale().getAddress()));\n                posInfo.setDealerId(response.getParty().getPointOfSale().getDealerId());\n                posInfo.setDealerName(response.getParty().getPointOfSale().getDealerName());\n                posInfo.setDelearEmailId(response.getParty().getPointOfSale().getEMail());\n                posInfo.setDealerPhonenumber(response.getParty().getPointOfSale().getPhoneNumber());\n                posInfo.setStaus(PointOfSaleInfo.LOADED);\n            }\n\n            partyProfileInfo.setShopSupport(response.getParty().getSupportingUnit().getShopSupport());\n            partyProfileInfo.setAccountManagementSegment(response.getParty().getAccountManagementSegment());\n\n            supportingUnit.setStatus(SupportingUnit.LOADED);\n            partyProfileInfo.setPosInfo(posInfo);\n            partyProfileInfo.setSupportingUnit(supportingUnit);\n        }\n        \n      } else {\n        partyProfileInfo.setStaus(PartyProfileInfo.NOT_RECEIVED);\n      }\n    } catch (Exception ex) {\n      partyProfileInfo.setStaus(PartyProfileInfo.ERROR);\n      LOGGER.error(\"Error while loading PartyProfile\", ex);\n    }\n    return partyProfileInfo;\n  }\n\n  @Override\n  public String getBvkUser(String bvkUserId) {\n\n    try {\n      GetPartyRequestDocument getPartyRequestDocument = GetPartyRequestDocument.Factory.newInstance();\n      GetPartyRequest request = GetPartyRequest.Factory.newInstance();\n      GetPartyFields getPartyFields = GetPartyFields.Factory.newInstance();\n      getPartyFields.setBvkId(bvkUserId.toUpperCase());\n      request.setGetPartyFields(getPartyFields);\n      request.setAuthorizationInfo(AuthorizationInfo.Factory.newInstance());\n      request.getAuthorizationInfo().setSystem(settingService.getValueOrDefault(\"esbPartyProfileSystem\", DEFAULT_SYSTEM));\n      request.getAuthorizationInfo().setUser(settingService.getValueOrDefault(\"esbPartyProfileUser\", DEFAULT_USER));\n      getPartyRequestDocument.setGetPartyRequest(request);\n\n      GetPartyResponse response;\n      GetPartyResponseDocument responseDoc;\n      String mockResponseFileName = System.getProperty(\"catalina.base\") + \"//mocks//PartyProfileGetPartyUsingBvkUserIdCMSYS3220.xml\";\n      if (settingService.getBooleanValue(\"testModeActive\", false) && new File(mockResponseFileName).exists()) {\n        response = GetPartyResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileName))).getGetPartyResponse();\n      } else {\n        responseDoc = stub.getParty(getPartyRequestDocument, null);\n        response = responseDoc.getGetPartyResponse();\n      }\n      return response.getParty().getPartyId() + \"\";\n    } catch (Exception ex) {\n      LOGGER.error(\"Error while loading PartyProfile Service using BvkUserID\", ex);\n    }\n    return \"\";\n  }\n\n  @Override\n  public String getOneTVUser(String oneTVUserId) {\n\n    try {\n      GetPartyRequestDocument getPartyRequestDocument = GetPartyRequestDocument.Factory.newInstance();\n      GetPartyRequest request = GetPartyRequest.Factory.newInstance();\n      GetPartyFields getPartyFields = GetPartyFields.Factory.newInstance();\n\n      getPartyFields.addNewCloudService().setCloudServiceUsername(oneTVUserId);\n      getPartyFields.getCloudService().setPlatformName(settingService.getValue(\"partyProfile.OneTvUser.setPlatformName\"));\n\n      request.setGetPartyFields(getPartyFields);\n      request.setAuthorizationInfo(AuthorizationInfo.Factory.newInstance());\n      request.getAuthorizationInfo().setSystem(settingService.getValueOrDefault(\"esbPartyProfileSystem\", DEFAULT_SYSTEM));\n      request.getAuthorizationInfo().setUser(settingService.getValueOrDefault(\"esbPartyProfileUser\", DEFAULT_USER));\n      getPartyRequestDocument.setGetPartyRequest(request);\n\n      GetPartyResponse response;\n      GetPartyResponseDocument responseDoc;\n\n      responseDoc = stub.getParty(getPartyRequestDocument, null);\n      response = responseDoc.getGetPartyResponse();\n      return response.getParty().getPartyId() + \"\";\n    } catch (Exception ex) {\n      LOGGER.error(\"Error while loading PartyProfile Service using OneTVUserID\", ex);\n    }\n    return \"\";\n  }\n  \n  private StandardAddress extractAddress(Address esbAddress) {\n      StandardAddress address = new StandardAddress();\n      if (esbAddress != null) {\n        address.setLkmsId(esbAddress.getLocationId());\n        address.setStreet(esbAddress.getStreet().getStreetName());\n        address.setHouseNumber(esbAddress.getHouseNumber());\n        address.setBlock(esbAddress.getBlock());\n        address.setStaircase(esbAddress.getStaircase());\n        address.setFloorNumber(esbAddress.getFloorNumber());\n        address.setDoorNumber(esbAddress.getDoorNumber());\n        address.setAdditional(esbAddress.getAdditional());\n        address.setPostcode(esbAddress.getStreet().getStreetPostcode());\n        address.setVillage(esbAddress.getStreet().getStreetVillage());\n        address.setCity(esbAddress.getStreet().getStreetCity());\n        address.setCountry(esbAddress.getCountry3Char());\n      }\n      address.setDataSource(AddressDataSource.PARTY_SERVICE);\n      return address;\n    }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/BrkServiceClientImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/BrkServiceClientImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6142,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.Calendar;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.cuco.core.service.BrkServiceClient;\nimport at.a1ta.cuco.core.shared.dto.product.BRKAccountInfo;\nimport at.mobilkom.eai.brk2.GetBRKAccountInfosRequestDocument;\nimport at.mobilkom.eai.brk2.GetBRKAccountInfosRequestType;\nimport at.mobilkom.eai.brk2.GetBRKAccountInfosResponseDocument;\nimport at.mobilkom.eai.brk2.GetBRKAccountInfosResponseType;\nimport at.mobilkom.eai.brk2.GetBRKAccounts4BANRequestDocument;\nimport at.mobilkom.eai.brk2.GetBRKAccounts4BANRequestType;\nimport at.mobilkom.eai.brk2.GetBRKAccounts4BANResponseDocument;\nimport at.mobilkom.eai.brk2.GetBRKAccounts4BANResponseType;\nimport at.mobilkom.eai.tracking.TrackingType;\nimport at.mobilkom.eai.tracking.TrackingType.TopServiceConsumer;\n\nimport com.telekomaustriagroup.esb.brksvc.BrkSvcStub;\n\n@Service\npublic class BrkServiceClientImpl extends BaseEsbClient<BrkSvcStub> implements BrkServiceClient {\n\n  @Autowired\n  TextService textService;\n  private static final Logger logger = LoggerFactory.getLogger(BrkServiceClientImpl.class);\n\n  @Override\n  public BRKAccountInfo getBRKAccountInfo(String brkAccountNumber) {\n    GetBRKAccountInfosRequestType getBRKAccountInfosRequestType = GetBRKAccountInfosRequestType.Factory.newInstance();\n    getBRKAccountInfosRequestType.setBRKAccountNumber(brkAccountNumber);\n    addTrackingDetails(getBRKAccountInfosRequestType.addNewTracking());\n    getBRKAccountInfosRequestType.setShowSpecialConditions(true);\n    getBRKAccountInfosRequestType.setShowHandlingFee(true);\n    GetBRKAccountInfosRequestDocument getBrkAccountInfosRequestDocument = GetBRKAccountInfosRequestDocument.Factory.newInstance();\n    getBrkAccountInfosRequestDocument.setGetBRKAccountInfosRequest(getBRKAccountInfosRequestType);\n    GetBRKAccountInfosResponseType getBRKAccountInfosResponse = null;\n    try {\n      GetBRKAccountInfosResponseDocument getBRKAccountInfosResponseDocument = stub.getBRKAccountInfos(getBrkAccountInfosRequestDocument, null);\n      getBRKAccountInfosResponse = getBRKAccountInfosResponseDocument.getGetBRKAccountInfosResponse();\n    } catch (Exception e) {\n      logger.error(e.getMessage(), e);\n      throw new RuntimeException(\"An error occurred during the getEquipmentConsignees call: \" + e.getMessage(), e);\n    }\n    BRKAccountInfo brkAccountInfo = new BRKAccountInfo();\n    brkAccountInfo.setAccountNumber(brkAccountNumber);\n    brkAccountInfo.setHandlingFee(\"-\");\n    if (getBRKAccountInfosResponse != null) {\n      brkAccountInfo.setAccountName(getBRKAccountInfosResponse.getBRKAccountName());\n      if (getBRKAccountInfosResponse.isSetHandlingFee() && StringUtils.isNotEmpty(getBRKAccountInfosResponse.getHandlingFee())) {\n        Map<String, String> handlingFeesMap = getHandlingFeesDisplayTextMap();\n        brkAccountInfo.setHandlingFee(handlingFeesMap.get(getBRKAccountInfosResponse.getHandlingFee()));\n      }\n    }\n    return brkAccountInfo;\n  }\n\n  private Map<String, String> getHandlingFeesDisplayTextMap() {\n    Map<String, String> map = new HashMap<String, String>();\n    String[] entries = textService.getByKeyWithDefaultText(\"brkSvc_handlingKeyResponseMappings\", \"\").getText().split(\"##\");\n    for (String entry : entries) {\n      String[] tokens = entry.trim().split(\"=\");\n      if (tokens != null && tokens.length == 2) {\n        map.put(tokens[0].trim(), tokens[1].trim());\n      }\n    }\n\n    return map;\n  }\n\n  @Override\n  public String getBRKAccountNumber(String banNumber) {\n    String brkAccountNumber = null;\n    GetBRKAccounts4BANRequestType getBRKAccounts4BANRequestType = GetBRKAccounts4BANRequestType.Factory.newInstance();\n    getBRKAccounts4BANRequestType.setBillingAccountNumber(banNumber);\n\n    getBRKAccounts4BANRequestType.setTracking(addTrackingDetails(getBRKAccounts4BANRequestType.addNewTracking()));\n    GetBRKAccounts4BANRequestDocument getBRKAccounts4BANRequestDocument = GetBRKAccounts4BANRequestDocument.Factory.newInstance();\n    getBRKAccounts4BANRequestDocument.setGetBRKAccounts4BANRequest(getBRKAccounts4BANRequestType);\n    GetBRKAccounts4BANResponseType getBRKAccounts4BANResponse = null;\n    try {\n      GetBRKAccounts4BANResponseDocument bRKAccounts4BANResponseDocument = stub.getBRKAccounts4BAN(getBRKAccounts4BANRequestDocument, null);\n      getBRKAccounts4BANResponse = bRKAccounts4BANResponseDocument.getGetBRKAccounts4BANResponse();\n    } catch (Exception e) {\n      logger.error(e.getMessage(), e);\n      throw new RuntimeException(\"An error occurred during the getEquipmentConsignees call: \" + e.getMessage(), e);\n    }\n    if (getBRKAccounts4BANResponse != null && getBRKAccounts4BANResponse.isSetBRKAccountItems() && getBRKAccounts4BANResponse.getBRKAccountItems().sizeOfBRKAccountItemArray() > 0) {\n      brkAccountNumber = getBRKAccounts4BANResponse.getBRKAccountItems().getBRKAccountItemArray(0).getBRKAccount().getBRKAccountNumber();\n    }\n    return brkAccountNumber;\n  }\n\n  private TrackingType addTrackingDetails(TrackingType trackingDetails) {\n    trackingDetails.setEnvironment(TrackingType.Environment.TEST);\n    TopServiceConsumer addNewTopServiceConsumer = trackingDetails.addNewTopServiceConsumer();\n    addNewTopServiceConsumer.setCallerName(\"CUCO\");\n    addNewTopServiceConsumer.setCallerSessionID(\"1\");\n    addNewTopServiceConsumer.setCallerSessionName(\"1\");\n    addNewTopServiceConsumer.setTimestamp(Calendar.getInstance());\n    addNewTopServiceConsumer.setTouchpointName(TopServiceConsumer.TouchpointName.CS);\n    return trackingDetails;\n  }\n\n  @Override\n  public BRKAccountInfo getBRKAccountInfoForBAN(String banNumber) {\n    String brkAccountnumber = getBRKAccountNumber(banNumber);\n    if (StringUtils.isNotEmpty(brkAccountnumber)) {\n      return getBRKAccountInfo(brkAccountnumber);\n    }\n    return null;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ClearingAccountServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/ClearingAccountServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1778,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.ClearingAccountDao;\nimport at.a1ta.cuco.core.service.ClearingAccountService;\nimport at.a1ta.cuco.core.shared.dto.ClearingAccount;\n\n@Service\npublic class ClearingAccountServiceImpl implements ClearingAccountService {\n\n  private ClearingAccountDao clearingAccountDao;\n\n  @Override\n  public List<ClearingAccount> getByPartyId(Long partyId) {\n    final ArrayList<Long> ids = new ArrayList<Long>(1);\n    ids.add(partyId);\n    return getByPartyIds(ids);\n  }\n\n  @Override\n  public List<ClearingAccount> getByPartyIds(ArrayList<Long> partyIds) {\n    return clearingAccountDao.getByPartyIds(partyIds);\n  }\n\n  @Override\n  public ClearingAccount getClearingAccountForPhonenumber(String phonenumber) {\n    if (phonenumber == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"phonenumber\");\n    }\n    return clearingAccountDao.getClearingAccountForPhonenumber(phonenumber);\n  }\n\n  @Override\n  public Long getClearingNumberForPhonenumber(String phonenubmer) {\n    final ClearingAccount c = getClearingAccountForPhonenumber(phonenubmer);\n    return c != null ? c.getAccountNumber() : null;\n  }\n\n  @Override\n  public ClearingAccount getByAccountNumber(Long accountNumber) {\n    return clearingAccountDao.getByAccountNumber(accountNumber);\n  }\n\n  @Override\n  public List<ClearingAccount> getActiveTaByPartyId(Long partyId) {\n    return clearingAccountDao.getActiveTaByPartyId(partyId);\n  }\n\n  @Autowired\n  public void setClearingAccountDao(ClearingAccountDao clearingAccountDao) {\n    this.clearingAccountDao = clearingAccountDao;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CrmAuthenticationServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CrmAuthenticationServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4098,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.dao.db.CucoLogsDao;\nimport at.a1ta.cuco.core.service.CrmAuthenticationService;\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.CrmAuthenticationInfo;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.mobilkom.crm.authentication.GetCustomerPasswordsRequestDocument;\nimport at.mobilkom.crm.authentication.GetCustomerPasswordsRequestDocument.GetCustomerPasswordsRequest;\nimport at.mobilkom.crm.authentication.GetCustomerPasswordsResponseDocument;\nimport at.mobilkom.crm.authentication.GetCustomerPasswordsResponseDocument.GetCustomerPasswordsResponse;\nimport at.mobilkom.crm.authentication.Password;\nimport at.mobilkom.crm.authentication.PasswordTypeEnum;\n\nimport com.telekomaustriagroup.esb.crmauthenticationsvc.CrmAuthenticationSvcStub;\n\n@Service\npublic class CrmAuthenticationServiceImpl extends BaseEsbClient<CrmAuthenticationSvcStub> implements CrmAuthenticationService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(CrmAuthenticationServiceImpl.class);\n  @Autowired\n  private SettingService settingService;\n  @Autowired\n  private CucoLogsDao cucoLogsDao;\n\n  private static final String PASSWORDVIEW_PASSWORDTYPE = \"mobile PW\";\n\n  @Override\n  public HashMap<String, CrmAuthenticationInfo> getCustomerPasswords(ArrayList<BillingAccountNumber> bans, Party party, UserInfo userInfo) {\n    HashMap<String, CrmAuthenticationInfo> result = new HashMap<String, CrmAuthenticationInfo>();\n    for (BillingAccountNumber curBan : bans) {\n      CrmAuthenticationInfo crmAuthenticationInfo = new CrmAuthenticationInfo(CrmAuthenticationInfo.LOADING);\n\n      try {\n        GetCustomerPasswordsRequestDocument getCustomerPasswordsRequestDocument = GetCustomerPasswordsRequestDocument.Factory.newInstance();\n        GetCustomerPasswordsRequest request = GetCustomerPasswordsRequest.Factory.newInstance();\n        request.setBan(curBan.getBan() + \"\");\n        request.setCallingSystem(\"CUCO\");\n        getCustomerPasswordsRequestDocument.setGetCustomerPasswordsRequest(request);\n        crmAuthenticationInfo.setStatus(CrmAuthenticationInfo.NOT_RECEIVED);\n        crmAuthenticationInfo.setBan(curBan.getBan() + \"\");\n        GetCustomerPasswordsResponseDocument responseDoc = stub.getCustomerPasswords(getCustomerPasswordsRequestDocument, null);\n        GetCustomerPasswordsResponse response = responseDoc.getGetCustomerPasswordsResponse();\n        if (response != null && response.getPasswords() != null && response.getPasswords().getPasswordArray() != null) {\n          crmAuthenticationInfo.setStatus(CrmAuthenticationInfo.LOADED);\n          for (Password pwd : response.getPasswords().getPasswordArray()) {\n            if (pwd.getType() != null && pwd.getValue() != null && pwd.getType() == PasswordTypeEnum.BAN) { // && pwd.getState()==PasswordStateEnum.ACTIVE\n              crmAuthenticationInfo.setPassword(pwd.getValue());\n            }\n          }\n          if (crmAuthenticationInfo.getPassword() != null && !crmAuthenticationInfo.getPassword().isEmpty()) {\n            cucoLogsDao.insertLogEntryForViewPassword(party.getId(), userInfo.getName(), userInfo.getUsername(),\n                settingService.getValueOrDefault(\"cucoLogsPasswordViewPasswordType\", PASSWORDVIEW_PASSWORDTYPE), curBan.getBan() + \"\");\n          }\n        } else {\n          crmAuthenticationInfo.setStatus(CrmAuthenticationInfo.NOT_RECEIVED);\n        }\n      } catch (Exception ex) {\n        crmAuthenticationInfo.setStatus(CrmAuthenticationInfo.ERROR);\n        LOGGER.error(\"Error while loading CrmAuthentication\", ex);\n      }\n      result.put(curBan.getBan() + \"\", crmAuthenticationInfo);\n    }\n    return result;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/GamificationHttpServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/GamificationHttpServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6150,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport org.apache.http.HttpEntity;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.client.HttpClient;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.entity.ContentType;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.impl.conn.PoolingClientConnectionManager;\nimport org.apache.http.impl.conn.SchemeRegistryFactory;\nimport org.apache.http.util.EntityUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.data.cusco.http.CusCoMessageFormatter;\nimport at.a1ta.cuco.core.service.GamificationHttpService;\nimport at.a1ta.cuco.core.service.GamificationLocalService;\nimport at.a1ta.cuco.core.shared.dto.GamificationMessage;\nimport at.a1ta.cuco.core.shared.dto.GamificationRequest;\nimport at.a1ta.cuco.core.shared.dto.GamificationResponse;\n\nimport com.google.gson.Gson;\n\n@Service\npublic class GamificationHttpServiceImpl implements GamificationHttpService {\n\n  private static final int DEFAULT_MAX_CONNECTIONS = 5;\n  private static final int DEFAULT_MAX_CONNECTIONS_PER_ROUTE = 5;\n  private HttpClient httpClient;\n  @Autowired\n  private GamificationLocalService gamificationLocalService;\n\n  @Autowired\n  private SettingService settingService;\n\n  private static final Logger logger = LoggerFactory.getLogger(GamificationHttpServiceImpl.class);\n\n  private final SimpleDateFormat SIMPLE_DATE_FORMAT = new SimpleDateFormat(\"EEE MMM dd yyyy HH:mm:ss 'GMT'Z (z)\", Locale.US);\n\n  public GamificationHttpServiceImpl() {\n    this(DEFAULT_MAX_CONNECTIONS, DEFAULT_MAX_CONNECTIONS_PER_ROUTE, null);\n  }\n\n  public GamificationHttpServiceImpl(int maxTotalConnections, int maxConnectionPerRoute) {\n    this(maxTotalConnections, maxConnectionPerRoute, null);\n  }\n\n  public GamificationHttpServiceImpl(int maxTotalConnections, int maxConnectionPerRoute, CusCoMessageFormatter formatter) {\n    PoolingClientConnectionManager conMan = new PoolingClientConnectionManager(SchemeRegistryFactory.createDefault());\n    conMan.setMaxTotal(maxTotalConnections);\n    conMan.setDefaultMaxPerRoute(maxConnectionPerRoute);\n    this.httpClient = new DefaultHttpClient(conMan);\n  }\n\n  public GamificationHttpServiceImpl(HttpClient httpClient) {\n    if (httpClient == null) {\n      PoolingClientConnectionManager conMan = new PoolingClientConnectionManager(SchemeRegistryFactory.createDefault());\n      conMan.setMaxTotal(DEFAULT_MAX_CONNECTIONS);\n      conMan.setDefaultMaxPerRoute(DEFAULT_MAX_CONNECTIONS_PER_ROUTE);\n      this.httpClient = new DefaultHttpClient(conMan);\n    } else {\n      this.httpClient = httpClient;\n    }\n  }\n\n  @Override\n  public GamificationResponse getAvailableGamificationMessages(final GamificationRequest message, final String endpoint) {\n    HttpPost postRequest = new HttpPost(endpoint);\n    HttpResponse httpResponse = null;\n    GamificationResponse response = new GamificationResponse();\n    if (!settingService.getBooleanValue(\"gamification.gamificationEnabled\", false)) {\n      return response;\n    }\n    try {\n      postRequest.addHeader(\"content-type\", \"application/json\");\n      HttpEntity entity = new StringEntity(message.getQueryString(), ContentType.APPLICATION_JSON);\n      postRequest.setEntity(entity);\n      httpResponse = httpClient.execute(postRequest);\n      response.setStatus(Integer.toString(httpResponse.getStatusLine().getStatusCode()));\n      String responseData = EntityUtils.toString(httpResponse.getEntity(), \"UTF-8\");\n      logger.debug(responseData);\n      GamificationResponse parsedResponse = new Gson().fromJson(responseData, GamificationResponse.class);\n      if (settingService.getBooleanValue(\"gamification.gamificationLocalHistoryEnabled\", true) && parsedResponse != null && parsedResponse.getMessages().size() > 0) {\n        Map<String, GamificationMessage> alreadyStoredMessages = gamificationLocalService.getAlreadyStoredMessages((ArrayList<GamificationMessage>) parsedResponse.getMessages(), message.getAgentId());\n        List<GamificationMessage> newMessages = new ArrayList<GamificationMessage>();\n        List<GamificationMessage> alreadyStoredUnreadMessages = new ArrayList<GamificationMessage>();\n        for (GamificationMessage msg : parsedResponse.getMessages()) {\n          if (msg.getTimestamp() != null) {\n            try {\n              msg.setTimestampDateFormat(SIMPLE_DATE_FORMAT.parse(msg.getTimestamp()));\n            } catch (Exception ex) {\n              // do nothing.\n            }\n          }\n          msg.setReadByAgent(false);\n          if (alreadyStoredMessages.containsKey(msg.getMessageUid())) {\n            msg.setReadByAgent(alreadyStoredMessages.get(msg.getMessageUid()).isReadByAgent());\n            if (!msg.isReadByAgent()) {\n              alreadyStoredUnreadMessages.add(msg);\n            }\n          } else {\n            newMessages.add(msg);\n          }\n        }\n        parsedResponse.setUnreadMsgCount(newMessages.size() + alreadyStoredUnreadMessages.size());\n        gamificationLocalService.addAllMessagesToCuCoDB((ArrayList<GamificationMessage>) newMessages, message.getAgentId());\n      }\n      return parsedResponse == null ? response : parsedResponse;\n    } catch (Exception e) {\n      logger.error(\"Error while retrieving Gamification Info For User \" + message.getAgentId() + \" :\" + e.getMessage(), e.getCause());\n      throw new RuntimeException(e.getMessage(), e);\n    } finally {\n      if (httpResponse != null && httpResponse.getEntity() != null) {\n        try {\n          EntityUtils.consume(httpResponse.getEntity());\n        } catch (IOException e) {\n          logger.error(\"Error while consuming HTTP Response for User \" + message.getAgentId() + \" :\" + e.getMessage(), e.getCause());\n        }\n      }\n      postRequest.releaseConnection();\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/GamificationLocalServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/GamificationLocalServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1626,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.Map;\n\nimport org.apache.commons.lang.math.RandomUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.GamificationLocalDAO;\nimport at.a1ta.cuco.core.service.GamificationLocalService;\nimport at.a1ta.cuco.core.shared.dto.GamificationMessage;\n\n@Service\npublic class GamificationLocalServiceImpl implements GamificationLocalService {\n\n  @Autowired\n  private GamificationLocalDAO gamificationLocalDAO;\n\n  @Override\n  public void markAllMessagesRead(ArrayList<GamificationMessage> messages, String agentId) {\n    gamificationLocalDAO.markAllMessagesRead(messages, agentId);\n  }\n\n  @Override\n  public void addAllMessagesToCuCoDB(ArrayList<GamificationMessage> messages, String agentId) {\n    gamificationLocalDAO.addAllMessagesToCuCoDB(messages, agentId);\n  }\n\n  @Override\n  public Map<String, GamificationMessage> getAlreadyStoredMessages(ArrayList<GamificationMessage> messages, String agentId) {\n    return gamificationLocalDAO.getAlreadyStoredMessages(messages, agentId);\n  }\n\n  @Override\n  public String getGamificationToken(String userName) {\n    return gamificationLocalDAO.creatGamificationOneTimeToken(userName, userName + \"-\" + System.currentTimeMillis() + RandomUtils.nextInt());\n  }\n\n  @Override\n  public Boolean validateGamificationOneTimeToken(String token) {\n    if (token != null && (token.contains(\"/\"))) {\n      token = token.replaceAll(\"/\", \"\");\n    }\n    return gamificationLocalDAO.validateGamificationOneTimeToken(token);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CMBuddyHttpServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CMBuddyHttpServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4300,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.IOException;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.apache.http.Header;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.client.ClientProtocolException;\nimport org.apache.http.client.HttpClient;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.entity.ContentType;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.google.gson.Gson;\n\nimport at.a1ta.bite.core.server.service.LocalSettingService;\nimport at.a1ta.cuco.core.service.CMBuddyHttpService;\nimport at.a1ta.cuco.core.shared.dto.CMBuddyLogin;\n\n@Service\npublic class CMBuddyHttpServiceImpl implements CMBuddyHttpService {\n\n  private HttpClient httpClient;\n\n  private LocalSettingService localSettingService;\n\n  private static final Logger logger = LoggerFactory.getLogger(CMBuddyHttpServiceImpl.class);\n\n  public CMBuddyHttpServiceImpl() {\n    if (httpClient == null) {\n      this.httpClient = new DefaultHttpClient();\n    }\n  }\n\n  @Override\n  public String getBuddyLink(Long partyId) {\n    if (partyId == null) {\n      return null;\n    }\n    String token = getToken();\n    if (token == null) {\n      return null;\n    }\n\n    if (checkParty(token, partyId)) {\n      String toolUrl = this.localSettingService.getValue(\"cm_buddy.tool.url\");\n      return generateUrl(toolUrl, partyId);\n    }\n    return null;\n  }\n\n  private String getToken() {\n    CMBuddyLogin login = getLoginData();\n    Gson gson = new Gson();\n    HttpEntity entity = new StringEntity(gson.toJson(login), ContentType.APPLICATION_JSON);\n\n    String endpoint = this.localSettingService.getValue(\"cm_buddy.api.login.url\");\n    HttpPost postRequest = new HttpPost(endpoint);\n    postRequest.setHeader(\"Accept\", \"application/json\");\n    postRequest.setEntity(entity);\n\n    try {\n      HttpResponse httpResponse = httpClient.execute(postRequest);\n      Header[] headers = httpResponse.getAllHeaders();\n      for (Header header : headers) {\n        if (\"Token\".equalsIgnoreCase(header.getName())) {\n          String token = header.getValue();\n          postRequest.releaseConnection();\n          return token;\n        }\n      }\n      logger.warn(\"No token available from CM Buddy login\");\n    } catch (ClientProtocolException e) {\n      logger.error(\"Error during CM Buddy login\", e);\n    } catch (IOException e) {\n      logger.error(\"Error during CM Buddy login\", e);\n    }\n    postRequest.releaseConnection();\n\n    return null;\n  }\n\n  private CMBuddyLogin getLoginData() {\n    CMBuddyLogin login = new CMBuddyLogin();\n    String username = this.localSettingService.getValue(\"cm_buddy.api.login.username\");\n    login.setUsername(username);\n    String password = this.localSettingService.getValue(\"cm_buddy.api.login.password\");\n    login.setPassword(password);\n    return login;\n  }\n\n  private boolean checkParty(String token, Long partyId) {\n    String endpoint = this.localSettingService.getValue(\"cm_buddy.api.check.url\");\n    HttpGet getRequest = new HttpGet(generateUrl(endpoint, partyId));\n    getRequest.setHeader(\"Authorization\", token);\n\n    try {\n      HttpResponse httpResponse = httpClient.execute(getRequest);\n      if (httpResponse.getStatusLine().getStatusCode() == 200) {\n        getRequest.releaseConnection();\n        return true;\n      }\n      getRequest.releaseConnection();\n      logger.info(\"Party not available in CM Buddy tool, got status \" + httpResponse.getStatusLine().getStatusCode());\n      return false;\n    } catch (ClientProtocolException e) {\n      logger.error(\"Error during CM Buddy check\", e);\n    } catch (IOException e) {\n      logger.error(\"Error during CM Buddy check\", e);\n    }\n    getRequest.releaseConnection();\n    return false;\n  }\n\n  private String generateUrl(String endpoint, Long partyId) {\n    return StringUtils.replace(endpoint, \"{partyId}\", partyId.toString());\n  }\n\n  @Autowired\n  public void setLocalSettingService(LocalSettingService localSettingService) {\n    this.localSettingService = localSettingService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/VBMProductsServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/VBMProductsServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1313,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.dao.SettingDao;\nimport at.a1ta.cuco.core.dao.db.VbmProductsDao;\nimport at.a1ta.cuco.core.service.VBMProductsService;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMDeclineReason;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProduct;\n\n@Service\npublic class VBMProductsServiceImpl implements VBMProductsService {\n  @Autowired\n  private VbmProductsDao vBMProductsDao;\n\n  @Autowired\n  private SettingDao settingsDao;\n\n  @Override\n  public List<VBMProduct> listVBMProduct(long customerId, String productName, String monthYearPeriod, Integer scoringTotal, int maxResults) {\n\n    return this.vBMProductsDao.listVBMProduct(\n        customerId,\n        productName,\n        monthYearPeriod,\n        settingsDao.getSettingOrNull(\"vbm.scoring.threshold\") != null ? Integer.valueOf(settingsDao.getSettingOrNull(\n            \"vbm.scoring.threshold\").getValue()) : 50, maxResults);\n  }\n\n  @Override\n  public void registerCustomerResponse(VBMDeclineReason declineReason, VBMProduct vbmProduct, String username, String userID) {\n    vBMProductsDao.registerCustomerResponse(declineReason, vbmProduct, username, userID);\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/FreeUnitServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/FreeUnitServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1525,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.math.BigInteger;\nimport java.rmi.RemoteException;\nimport java.util.GregorianCalendar;\n\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.cuco.core.service.FreeUnitService;\nimport at.telekom.eai.freeunits.xsd.FreeMinutesRequestDocument;\nimport at.telekom.eai.freeunits.xsd.FreeMinutesResponseDocument;\nimport at.telekom.www.voip.api20.RequestType;\nimport at.telekom.www.voip.api20.ResponseType;\n\nimport com.telekomaustriagroup.esb.freeunits.FreeUnitsStub;\n\n@Service\npublic class FreeUnitServiceImpl extends BaseEsbClient<FreeUnitsStub> implements FreeUnitService {\n  private static BigInteger REQUEST_ID = new BigInteger(\"11111111\");\n  private static String REQUESTING_SYSTEM = \"CUCO\";\n  private static String TNVERHAELTNISID = \"\";\n\n  @Override\n  public ResponseType getFreeMinutes(String countryNr, String onkz, String telNr) throws RemoteException {\n    FreeMinutesRequestDocument reqDoc = FreeMinutesRequestDocument.Factory.newInstance();\n    RequestType request = reqDoc.addNewFreeMinutesRequest();\n\n    request.setRequestID(REQUEST_ID);\n    request.setRequestTS(new GregorianCalendar());\n    request.setRequestingSystem(REQUESTING_SYSTEM);\n    request.setTNVERHAELTNISID(TNVERHAELTNISID);\n    request.setCOUNTRYNR(countryNr);\n    request.setKZNR(onkz);\n    request.setTNNR(telNr);\n\n    FreeMinutesResponseDocument resp = stub.getFreeMinutes(reqDoc, null);\n    return resp.getFreeMinutesResponse();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/AccessTokenServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/AccessTokenServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2885,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.rmi.RemoteException;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.Assert;\nimport org.springframework.util.StringUtils;\n\nimport at.a1ta.bite.core.server.esb.EsbException;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.Setting;\nimport at.a1ta.cuco.core.bean.PWUTokenResponse;\nimport at.a1ta.cuco.core.dao.esb.PartnerCenterLandingPageDao;\nimport at.a1ta.cuco.core.service.AccessTokenService;\nimport at.a1ta.cuco.core.shared.dto.AccessToken;\nimport at.a1ta.cuco.core.shared.dto.PartnerCenterAccessTokenRequest;\n\nimport com.telekomaustriagroup.esb.landingpagedealer.OrderServiceFault;\n\n@Service\npublic class AccessTokenServiceImpl implements AccessTokenService {\n\n  private static final Logger logger = LoggerFactory.getLogger(AccessTokenServiceImpl.class);\n\n  private PartnerCenterLandingPageDao landingPageDao;\n  private SettingService settingService;\n\n  @Override\n  public AccessToken getAccessTokenForPartnerCenter(PartnerCenterAccessTokenRequest request) {\n    configureRequestWithDefaultsIfNotSet(request);\n    try {\n      return landingPageDao.getAccessToken(request);\n    } catch (EsbException e) {\n      logger.error(\"Unable to load access token for PartnerCenter\", e);\n    }\n    return AccessToken.NONE;\n  }\n\n  private void configureRequestWithDefaultsIfNotSet(PartnerCenterAccessTokenRequest request) {\n    appendSourceSystemConfigurationIfNotSet(request);\n    appendProcessIdConfigurationIfNotSet(request);\n  }\n\n  private void appendProcessIdConfigurationIfNotSet(PartnerCenterAccessTokenRequest request) {\n    if (!StringUtils.hasText(request.getProcessId())) {\n      request.setProcessId(retrieveSettingValue(\"processId\"));\n    }\n  }\n\n  private void appendSourceSystemConfigurationIfNotSet(PartnerCenterAccessTokenRequest request) {\n    if (!StringUtils.hasText(request.getSourceSystem())) {\n      request.setSourceSystem(retrieveSettingValue(\"frontEndSystem\"));\n    }\n  }\n\n  private String retrieveSettingValue(String keyPart) {\n    final String fullKey = LANDING_PAGE_DEALER_SETTING_PREFIX + \".\" + keyPart;\n    Setting setting = settingService.getSetting(fullKey);\n    Assert.notNull(setting, \"Setting for '\" + fullKey + \"' must not be null.\");\n\n    return setting.getValue();\n  }\n\n  @Override\n  public PWUTokenResponse validatePWUToken(String token) throws RemoteException, OrderServiceFault {\n    return landingPageDao.validatePWUToken(token);\n  }\n\n  @Autowired\n  public void setLandingPageDao(PartnerCenterLandingPageDao landingPageDao) {\n    this.landingPageDao = landingPageDao;\n  }\n\n  @Autowired\n  public void setConfigurationService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/InvoiceServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/InvoiceServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 10682,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.rmi.RemoteException;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.LinkedHashMap;\n\nimport javax.xml.ws.WebServiceException;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.dao.db.InvoiceDao;\nimport at.a1ta.cuco.core.service.ClearingAccountService;\nimport at.a1ta.cuco.core.service.InvoiceService;\nimport at.a1ta.cuco.core.shared.dto.ClearingAccount;\nimport at.a1ta.cuco.core.shared.dto.Invoice;\nimport at.a1ta.cuco.core.shared.dto.Invoice.InvoiceDateComparator;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSFault;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSHeader;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5IXOSAddress;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5IXOSAddressReq;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5IXOSAddressRes;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromDocument;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromDocument.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFrom;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponseDocument;\nimport at.telekom.www.eai.wssap5_s_retrieveixosaddress.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponseDocument.WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponse;\n\nimport com.telekomaustriagroup.esb.sap5billinginformation.SAP5BillingInformationStub;\n\n@Service\npublic class InvoiceServiceImpl extends BaseEsbClient<SAP5BillingInformationStub> implements InvoiceService {\n  private static InvoiceDateComparator invoiceDateComparator = new InvoiceDateComparator();\n  private static Logger logger = LoggerFactory.getLogger(InvoiceServiceImpl.class);\n  private static String EMPTY = \"\";\n  private static String DOCUMENT_ID_PLACEHOLDER = \"\\\\[documentId\\\\]\";\n  private static String REPOSITORY_ID_PLACEHOLDER = \"\\\\[repositoryId\\\\]\";\n  private InvoiceDao invoiceDao;\n  private SettingService settingService;\n  private ClearingAccountService clearingAccountService;\n\n  @Override\n  public LinkedHashMap<Long, ArrayList<ClearingAccount>> getInvoiceData(ArrayList<Long> partyIds) {\n    LinkedHashMap<Long, ClearingAccount> clearingAccounts = getClearingAccountsMap(partyIds);\n    fillClearingAccountsWithInvoices(clearingAccounts, partyIds);\n    return createPartyIdToClearingAccountsMap(partyIds, clearingAccounts.values());\n  }\n\n  private LinkedHashMap<Long, ArrayList<ClearingAccount>> createPartyIdToClearingAccountsMap(ArrayList<Long> partyIds, Collection<ClearingAccount> clearingAccounts) {\n    LinkedHashMap<Long, ArrayList<ClearingAccount>> partyIdToClearingAccountsMap = new LinkedHashMap<Long, ArrayList<ClearingAccount>>(8);\n    for (Long partyId : partyIds) {\n      ArrayList<ClearingAccount> clearingAccountsForParty = getClearingAccountsForParty(partyId, clearingAccounts);\n      partyIdToClearingAccountsMap.put(partyId, clearingAccountsForParty);\n    }\n    return partyIdToClearingAccountsMap;\n  }\n\n  private void fillClearingAccountsWithInvoices(LinkedHashMap<Long, ClearingAccount> clearingAccountsMap, ArrayList<Long> partyIds) {\n    if (!clearingAccountsMap.isEmpty()) {\n      ArrayList<Invoice> invoices = getInvoices(partyIds);\n      linkInvoicesToClearingAccounts(invoices, clearingAccountsMap);\n    }\n  }\n\n  private void linkInvoicesToClearingAccounts(ArrayList<Invoice> invoices, LinkedHashMap<Long, ClearingAccount> clearingAccountsMap) {\n    for (Invoice invoice : invoices) {\n      ClearingAccount clearingAccount = clearingAccountsMap.get(invoice.getClearingAccountNumber());\n      if (clearingAccount != null) {\n        invoice.setMobile(clearingAccount.isMobileAccount());\n        clearingAccount.addInvoices(invoice);\n      } else {\n        logger.warn(\"No clearingAccount for ClearingAccountNumber: \" + invoice.getClearingAccountNumber());\n      }\n    }\n  }\n\n  private LinkedHashMap<Long, ClearingAccount> getClearingAccountsMap(ArrayList<Long> partyIds) {\n    ArrayList<ClearingAccount> clearingAccounts = getClearingAccounts(partyIds);\n    LinkedHashMap<Long, ClearingAccount> clearingAccountsMap = new LinkedHashMap<Long, ClearingAccount>(clearingAccounts.size() * 2);\n    for (ClearingAccount account : clearingAccounts) {\n      clearingAccountsMap.put(account.getAccountNumber(), account);\n    }\n    return clearingAccountsMap;\n  }\n\n  private ArrayList<ClearingAccount> getClearingAccountsForParty(Long partyId, Collection<ClearingAccount> allClearingAccounts) {\n    ArrayList<ClearingAccount> clearingAccountsForParty = new ArrayList<ClearingAccount>();\n    ArrayList<Invoice> allInvoicesForParty = new ArrayList<Invoice>();\n\n    for (ClearingAccount account : allClearingAccounts) {\n      if (account.getPartyId().equals(partyId)) {\n        clearingAccountsForParty.add(account);\n        if (account.hasInvoices()) {\n          allInvoicesForParty.addAll(account.getInvoices());\n        }\n      }\n    }\n\n    Collections.sort(allInvoicesForParty, invoiceDateComparator);\n\n    if (clearingAccountsForParty.size() > 1) {\n      clearingAccountsForParty.add(0, createVirtualClearingAccount(clearingAccountsForParty, allInvoicesForParty));\n    }\n\n    return clearingAccountsForParty;\n  }\n\n  private ClearingAccount createVirtualClearingAccount(ArrayList<ClearingAccount> allClearingAccounts, ArrayList<Invoice> invoicesToAdd) {\n    ClearingAccount virtualClearingAccount = new ClearingAccount();\n    virtualClearingAccount.setInvoices(invoicesToAdd);\n\n    for (ClearingAccount account : allClearingAccounts) {\n      if (account.isMobileAccount()) {\n        virtualClearingAccount.setVirtualClearingAccountMobile(true);\n      }\n      if (account.isFixedLineAccount()) {\n        virtualClearingAccount.setVirtualClearingAccountFixedLine(true);\n      }\n    }\n\n    return virtualClearingAccount;\n  }\n\n  private ArrayList<Invoice> getInvoices(Collection<Long> partyIds) {\n    return new ArrayList<Invoice>(invoiceDao.getByPartyIds(partyIds));\n  }\n\n  private ArrayList<ClearingAccount> getClearingAccounts(ArrayList<Long> partyIds) {\n    return new ArrayList<ClearingAccount>(clearingAccountService.getByPartyIds(partyIds));\n  }\n\n  @Override\n  public String getMobileInvoiceDownloadLink(Invoice invoice, ClearingAccount clearingAccount) {\n    String urlPattern = settingService.getValue(\"ext_link_invoiceArchive_mobile\");\n\n    String url = urlPattern.replaceFirst(\"\\\\[ban\\\\]\", Long.toString(clearingAccount.getBan()));\n    url = url.replaceFirst(\"\\\\[ben\\\\]\", Long.toString(clearingAccount.getBen()));\n    url = url.replaceFirst(\"\\\\[billseqnr\\\\]\", Long.toString(invoice.getInvoiceRunId()));\n\n    return url;\n  }\n\n  @Override\n  public String getFixedLineInvoiceDownloadLink(Invoice invoice) {\n    // Get service parameters from config\n    String verb = settingService.getValue(\"interfaces_ws_WSSAP5_S_RetrieveIXOSAddress_verb\");\n    String sourcesystem = settingService.getValue(\"interfaces_ws_WSSAP5_S_RetrieveIXOSAddress_sourcesystem\");\n    String documenttype = settingService.getValue(\"interfaces_ws_WSSAP5_S_RetrieveIXOSAddress_documenttype\");\n    String redirectUrl = settingService.getValue(\"ext_link_invoiceArchive\");\n\n    WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromDocument reqDoc = WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromDocument.Factory.newInstance();\n    WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFrom request = reqDoc.addNewWSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFrom();\n\n    try {\n      // configure request\n      WSSAP5IXOSAddress adr = WSSAP5IXOSAddress.Factory.newInstance();\n      adr.setVerb(verb);\n\n      WSHeader header = WSHeader.Factory.newInstance();\n      header.setSourcesystem(sourcesystem);\n      header.setTransaktion(EMPTY);\n      header.setAPIArt(EMPTY);\n      header.setParameter(EMPTY);\n      adr.setHeader(header);\n\n      WSSAP5IXOSAddressReq adrReq = WSSAP5IXOSAddressReq.Factory.newInstance();\n      adrReq.setDocumentType(documenttype);\n      adrReq.setInvoiceNumber(\"\" + invoice.getInvoiceId());\n      adr.setRequest(adrReq);\n\n      WSSAP5IXOSAddressRes adrRes = WSSAP5IXOSAddressRes.Factory.newInstance();\n      adrRes.setArchiveID(EMPTY);\n      adrRes.setDocumentID(EMPTY);\n      adr.setResponse(adrRes);\n\n      WSFault fault = WSFault.Factory.newInstance();\n      fault.setFaultActor(EMPTY);\n      fault.setFaultCode(EMPTY);\n      fault.setFaultSeverity(EMPTY);\n      fault.setFaultString(EMPTY);\n      fault.setFaultType(EMPTY);\n      adr.setFault(fault);\n\n      request.setWSSAP5IXOSAddress(adr);\n      reqDoc.setWSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFrom(request);\n\n      // Invoke Service\n      WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponseDocument responseDoc;\n      responseDoc = stub.retrieveIXOSAddress(reqDoc, null);\n      WSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponse response = responseDoc.getWSSAP5SRetrieveIXOSAddressWSSAP5IXOSAddressFromResponse();\n\n      // check the result for fault codes\n      if (response.getWSSAP5IXOSAddress().getFault().getFaultString() != null && EMPTY.equals(response.getWSSAP5IXOSAddress().getFault().getFaultString())) {\n        String repositoryId = response.getWSSAP5IXOSAddress().getResponse().getArchiveID();\n        String documentId = response.getWSSAP5IXOSAddress().getResponse().getDocumentID();\n        if (repositoryId != null && documentId != null) {\n          String downloadLink = redirectUrl.replaceAll(DOCUMENT_ID_PLACEHOLDER, documentId);\n          downloadLink = downloadLink.replaceAll(REPOSITORY_ID_PLACEHOLDER, repositoryId);\n          return downloadLink;\n        }\n        throw new WebServiceException(\"Empty repositoryId, docuentId received\");\n      }\n      throw new RuntimeException(response.getWSSAP5IXOSAddress().getFault().getFaultString());\n    } catch (RemoteException e) {\n      throw new WebServiceException(e);\n    }\n  }\n\n  @Override\n  public Invoice getById(long invoiceId) {\n    return invoiceDao.getById(invoiceId);\n  }\n\n  @Autowired\n  public void setClearingAccountService(ClearingAccountService clearingAccountService) {\n    this.clearingAccountService = clearingAccountService;\n  }\n\n  @Autowired\n  public void setInvoiceDao(InvoiceDao invoiceDao) {\n    this.invoiceDao = invoiceDao;\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/EsbPartyServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/EsbPartyServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 760,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.esb.EsbPartyDao;\nimport at.a1ta.cuco.core.service.EsbPartyService;\nimport at.a1ta.cuco.core.shared.dto.EsbParty;\nimport at.a1telekom.eai.party.Party;\n\n@Service\npublic class EsbPartyServiceImpl implements EsbPartyService {\n\n  private EsbPartyDao esbPartyDao;\n\n  @Override\n  public Party getParty(long partyId) {\n    return esbPartyDao.getParty(partyId);\n  }\n  \n  @Override\n  public EsbParty getESBParty(long partyId) {\n    return esbPartyDao.getESBParty(partyId);\n  }\n\n  @Autowired\n  public void setEsbPartyDao(EsbPartyDao esbPartyDao) {\n    this.esbPartyDao = esbPartyDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/DuposMobileSignatureServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/DuposMobileSignatureServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2490,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.rmi.RemoteException;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Service;\n\nimport com.telekomaustriagroup.esb.duposmobilesignature.DuposMobileSignatureStub;\nimport com.telekomaustriagroup.esb.duposmobilesignature.Fault;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.cuco.core.service.DuposMobileSignatureService;\nimport at.telekom.eai.schemas.eai.duposmobilesignature.FilesType;\nimport at.telekom.eai.schemas.eai.duposmobilesignature.SendContractToSign;\nimport at.telekom.eai.schemas.eai.duposmobilesignature.SendContractToSignDocument;\nimport at.telekom.eai.schemas.eai.duposmobilesignature.SendContractToSignResponseDocument;\nimport at.telekom.eai.schemas.eai.duposmobilesignature.SignMethodType;\n\n@Service\npublic class DuposMobileSignatureServiceImpl extends BaseEsbClient<DuposMobileSignatureStub> implements DuposMobileSignatureService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(DuposMobileSignatureServiceImpl.class);\n\n  @Override\n  public String sendContractToSign(String jobId, byte[] data) {\n    SendContractToSignDocument request = getRequestForContractSign(jobId, data);\n\n    SendContractToSignResponseDocument response = null;\n    try {\n      response = stub.sendContractToSign(request, null);\n    } catch (RemoteException | Fault e) {\n      LOGGER.error(\"Error while sending contract to sign\", e);\n    }\n    if (response == null || response.getSendContractToSignResponse() == null) {\n      LOGGER.error(\"Error while sending contract to sign, response is null\");\n      return null;\n    }\n    if (response.getSendContractToSignResponse().getDataItemsArray() == null || response.getSendContractToSignResponse().getDataItemsArray().length == 0) {\n      LOGGER.error(\"Error while sending contract to sign, data items are null or empty\");\n      return null;\n    }\n    return response.getSendContractToSignResponse().getDataItemsArray(0).getSigningUrlQRCode();\n  }\n\n  private SendContractToSignDocument getRequestForContractSign(String jobId, byte[] data) {\n    SendContractToSignDocument request = SendContractToSignDocument.Factory.newInstance();\n    SendContractToSign doc = request.addNewSendContractToSign();\n    doc.setSignMethod(SignMethodType.MOBILE);\n    FilesType fileType = doc.addNewFiles();\n    fileType.setFileName(jobId);\n    fileType.setFileData(data);\n    fileType.setFileSize(data.length);\n    return request;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UnknownAreaCodeServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UnknownAreaCodeServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3625,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.impl;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport org.apache.commons.collections.CollectionUtils;\nimport org.apache.commons.collections.Predicate;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.UnknownAreaCodeDao;\nimport at.a1ta.cuco.core.service.UnknownAreaCodeService;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumber;\nimport at.a1ta.cuco.core.shared.dto.UnknownAreaCode;\n\n@Service\npublic class UnknownAreaCodeServiceImpl implements UnknownAreaCodeService {\n\n  private UnknownAreaCodeDao unknownAreaCodeDao;\n\n  @Override\n  public void deleteUnknownAreaCode(Long id) {\n    unknownAreaCodeDao.deleteUnknownAreaCode(id);\n  }\n\n  @Override\n  public List<UnknownAreaCode> getAllUnknownAreaCodes() {\n    return unknownAreaCodeDao.getAllUnknownAreaCodes();\n  }\n\n  @Override\n  public UnknownAreaCode getUnknownAreaCodeById(Long id) {\n    return unknownAreaCodeDao.getUnknownAreaCodeById(id);\n  }\n\n  @Override\n  public void saveUnknownAreaCode(UnknownAreaCode ct) {\n    if (ct.getId() == null) {\n      unknownAreaCodeDao.insertUnknownAreaCode(ct);\n    } else {\n      unknownAreaCodeDao.updateUnknownAreaCode(ct);\n    }\n  }\n\n  @Autowired\n  public void setUnknownAreaCodeDao(UnknownAreaCodeDao unknownAreaCodeDao) {\n    this.unknownAreaCodeDao = unknownAreaCodeDao;\n  }\n\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  @Override\n  public List<PhoneNumber> filterPhoneNumbersWithUnknownAreaCode(Collection<PhoneNumber> phoneNumbers) {\n    final List<UnknownAreaCode> unknownCodes = getAllUnknownAreaCodes();\n    if (unknownCodes.isEmpty()) {\n      return new ArrayList<PhoneNumber>(phoneNumbers);\n    }\n    final Pattern pattern = createUnknownNumberFilterPattern(unknownCodes);\n\n    return new ArrayList(CollectionUtils.select(phoneNumbers, new Predicate() {\n      @Override\n      public boolean evaluate(Object input) {\n        if (input instanceof PhoneNumber) {\n          PhoneNumber number = (PhoneNumber) input;\n          Matcher x = pattern.matcher(number.getCityIdentificationNumber());\n          return !x.matches();\n        }\n        return false;\n      }\n    }));\n\n  }\n\n  private Pattern createUnknownNumberFilterPattern(Collection<UnknownAreaCode> excludes) {\n    StringBuilder sb = new StringBuilder();\n    for (UnknownAreaCode code : excludes) {\n      String areaCode = code.getAreaCode();\n\n      if (areaCode != null && areaCode.startsWith(\"0\")) {\n        areaCode = code.getAreaCode().replaceFirst(\"0\", \"\");\n      }\n      sb.append(\"[0]?\");\n      sb.append(areaCode);\n      sb.append(\"|\");\n    }\n    if (sb.indexOf(\"|\") > 0) {\n      sb.deleteCharAt(sb.lastIndexOf(\"|\"));\n    }\n    return Pattern.compile(sb.toString());\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/AutoVvlServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/AutoVvlServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 10912,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.Calendar;\nimport java.util.Date;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.cuco.core.service.AutoVvlService;\nimport at.a1ta.cuco.core.shared.dto.product.AutoVvlInfo;\nimport at.a1ta.cuco.core.shared.dto.product.AutoVvlInfo.AutoVvlStatus;\nimport at.a1ta.cuco.core.shared.dto.product.CallNumber;\nimport at.a1telekom.cdm.common.TimePeriod;\nimport at.a1telekom.cdm.common.error.ErrorDetailsDocument;\nimport at.a1telekom.cdm.common.error.ErrorDetailsType;\nimport at.a1telekom.eai.customerinventorytermination.ADXAccount;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForADXAccountRequest;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForADXAccountRequestDocument;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForADXAccountResponse;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForADXAccountResponse.AutoExtendedCommitmentContract;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForADXAccountResponse.AutoExtendedCommitmentContract.CommitmentDuration;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForADXAccountResponseDocument;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForSubscriptionRequest;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForSubscriptionRequestDocument;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForSubscriptionResponse;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForSubscriptionResponse.AutoExtendedCommitment;\nimport at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForSubscriptionResponseDocument;\n\nimport com.telekomaustriagroup.esb.customerinventorytermination.CustomerInventoryTerminationStub;\nimport com.telekomaustriagroup.esb.customerinventorytermination.Error;\n\n@Service\npublic class AutoVvlServiceImpl extends BaseEsbClient<CustomerInventoryTerminationStub> implements AutoVvlService {\n\n  @Autowired\n  TextService textService;\n\n  @Override\n  public AutoVvlInfo getAutoVvlInfoByCallNumber(CallNumber callNumber) {\n    try {\n      GetTerminationInformationForSubscriptionRequestDocument reqDoc = GetTerminationInformationForSubscriptionRequestDocument.Factory.newInstance();\n      GetTerminationInformationForSubscriptionRequest request = reqDoc.addNewGetTerminationInformationForSubscriptionRequest();\n\n      request.setCallNumber(createCallnumber(callNumber, request));\n\n      GetTerminationInformationForSubscriptionResponseDocument respDoc = stub.getTerminationInformationForSubscription(reqDoc, null);\n      GetTerminationInformationForSubscriptionResponse response = respDoc.getGetTerminationInformationForSubscriptionResponse();\n\n      if (response != null) {\n        AutoVvlInfo autoVvlInfo = new AutoVvlInfo();\n        AutoExtendedCommitment autoExtendedCommitment = response.getAutoExtendedCommitment();\n        autoVvlInfo.setAutoVvlStatus(mapAutoVvlStatus(autoExtendedCommitment));\n        if (autoExtendedCommitment != null) {\n          TimePeriod actPeriod = autoExtendedCommitment.getActPeriod();\n          if (actPeriod != null) {\n            if (actPeriod.getStartDateTime() != null) {\n              autoVvlInfo.setAutoExtendedCommitmentActPeriodStartTime(actPeriod.getStartDateTime().getTime());\n\n            }\n            if (actPeriod.getEndDateTime() != null) {\n              autoVvlInfo.setAutoExtendedCommitmentActPeriodEndTime(actPeriod.getEndDateTime().getTime());\n            }\n          }\n\n          TimePeriod nextPeriod = autoExtendedCommitment.getNextPeriod();\n          if (nextPeriod != null) {\n            if (nextPeriod.getStartDateTime() != null) {\n              autoVvlInfo.setAutoExtendedCommitmentNextPeriodStartTime(nextPeriod.getStartDateTime().getTime());\n              autoVvlInfo.setCancellationDateBeforeNextAutoVVL(subtractOneDay(nextPeriod.getStartDateTime().getTime()));\n\n            }\n            if (nextPeriod.getEndDateTime() != null) {\n              autoVvlInfo.setAutoExtendedCommitmentNextPeriodEndTime(nextPeriod.getEndDateTime().getTime());\n            }\n          }\n        }\n\n        Calendar latestCommitmentEndDate = response.getLatestCommitmentEndDate();\n        if (latestCommitmentEndDate != null) {\n          autoVvlInfo.setLatestCommitmentEndDate(latestCommitmentEndDate.getTime());\n        }\n\n        return autoVvlInfo;\n      }\n    } catch (Error err) {\n      ErrorDetailsDocument faultMessage = err.getFaultMessage();\n      ErrorDetailsType errorDetails = faultMessage.getErrorDetails();\n\n      if (!errorDetails.getIsTechnical() && \"CUSTINV-1001\".equals(errorDetails.getErrorCode())) {\n        AutoVvlInfo autoVvlInfo = new AutoVvlInfo();\n        autoVvlInfo.setAutoVvlStatus(AutoVvlStatus.KEINE_VEREINBARUNG);\n        return autoVvlInfo;\n      }\n      throw new RuntimeException(err);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n    return null;\n\n  }\n\n  private at.a1telekom.cdm.common.CallNumber createCallnumber(CallNumber callNumber, GetTerminationInformationForSubscriptionRequest request) {\n    at.a1telekom.cdm.common.CallNumber cn = request.addNewCallNumber();\n    if (callNumber != null) {\n      cn.setCC(callNumber.getCountryCode());\n      cn.setNDC(callNumber.getOnkz());\n      cn.setSN(callNumber.getTnum());\n    }\n    return cn;\n  }\n\n  @Override\n  public AutoVvlInfo getAutoVvlInfoByBan(String ban) {\n    try {\n      GetTerminationInformationForADXAccountRequestDocument reqDoc = GetTerminationInformationForADXAccountRequestDocument.Factory.newInstance();\n      GetTerminationInformationForADXAccountRequest request = reqDoc.addNewGetTerminationInformationForADXAccountRequest();\n\n      ADXAccount account = request.addNewADXAccount();\n      account.setAccountNumber(ban);\n\n      GetTerminationInformationForADXAccountResponseDocument respDoc = stub.getTerminationInformationForADXAccount(reqDoc, null);\n      GetTerminationInformationForADXAccountResponse response = respDoc.getGetTerminationInformationForADXAccountResponse();\n\n      if (response != null) {\n        AutoVvlInfo autoVvlInfo = new AutoVvlInfo();\n        AutoExtendedCommitmentContract autoExtendedCommitmentContract = response.getAutoExtendedCommitmentContract();\n\n        autoVvlInfo.setAutoVvlStatus(mapAutoVvlStatus(autoExtendedCommitmentContract));\n\n        if (autoExtendedCommitmentContract != null) {\n          CommitmentDuration commitmentDuration = autoExtendedCommitmentContract.getCommitmentDuration();\n          if (commitmentDuration != null) {\n            autoVvlInfo.setCommitmentDuration(createCommitmentDuration(autoExtendedCommitmentContract));\n            if (commitmentDuration.getStartDateTime() != null) {\n              autoVvlInfo.setCommitmentDurationStartTime(commitmentDuration.getStartDateTime().getTime());\n            }\n          }\n\n          at.a1telekom.eai.customerinventorytermination.GetTerminationInformationForADXAccountResponse.AutoExtendedCommitmentContract.AutoExtendedCommitment autoExtendedCommitment = autoExtendedCommitmentContract.getAutoExtendedCommitment();\n\n          if (autoExtendedCommitment != null) {\n            TimePeriod actPeriod = autoExtendedCommitment.getActPeriod();\n            if (actPeriod != null) {\n              if (actPeriod.getStartDateTime() != null) {\n                autoVvlInfo.setAutoExtendedCommitmentActPeriodStartTime(actPeriod.getStartDateTime().getTime());\n              }\n              if (actPeriod.getEndDateTime() != null) {\n                autoVvlInfo.setAutoExtendedCommitmentActPeriodEndTime(actPeriod.getEndDateTime().getTime());\n              }\n            }\n\n            TimePeriod nextPeriod = autoExtendedCommitment.getNextPeriod();\n            if (nextPeriod != null) {\n              if (nextPeriod.getStartDateTime() != null) {\n                autoVvlInfo.setAutoExtendedCommitmentNextPeriodStartTime(nextPeriod.getStartDateTime().getTime());\n                autoVvlInfo.setCancellationDateBeforeNextAutoVVL(subtractThreeMonth(nextPeriod.getStartDateTime().getTime()));\n              }\n              if (nextPeriod.getEndDateTime() != null) {\n                autoVvlInfo.setAutoExtendedCommitmentNextPeriodEndTime(nextPeriod.getEndDateTime().getTime());\n              }\n            }\n          }\n\n        }\n\n        Calendar latestCommitmentEndDate = response.getLatestCommitmentEndDate();\n        if (latestCommitmentEndDate != null) {\n          autoVvlInfo.setLatestCommitmentEndDate(latestCommitmentEndDate.getTime());\n        }\n\n        return autoVvlInfo;\n      }\n    } catch (Error err) {\n      ErrorDetailsDocument faultMessage = err.getFaultMessage();\n      ErrorDetailsType errorDetails = faultMessage.getErrorDetails();\n\n      if (!errorDetails.getIsTechnical() && \"CUSTINV-1002\".equals(errorDetails.getErrorCode())) {\n        AutoVvlInfo autoVvlInfo = new AutoVvlInfo();\n        autoVvlInfo.setAutoVvlStatus(AutoVvlStatus.KEINE_VEREINBARUNG);\n        return autoVvlInfo;\n      }\n      throw new RuntimeException(err);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n    return null;\n  }\n\n  private String createCommitmentDuration(AutoExtendedCommitmentContract autoExtendedCommitmentContract) {\n\n    int commitmentDuration = autoExtendedCommitmentContract.getCommitmentDuration().getDuration();\n\n    String commitmentDurationUnit = autoExtendedCommitmentContract.getCommitmentDuration().getDurationUnit().toString();\n    textService.getByKeyWithDefaultText(\"productBrowserDetails_AutoVvl_DurationUnit_Enum_\" + commitmentDurationUnit, commitmentDurationUnit);\n\n    return commitmentDuration + \" \" + commitmentDurationUnit;\n  }\n\n  private AutoVvlStatus mapAutoVvlStatus(AutoExtendedCommitment commitment) {\n    if (commitment == null) {\n      return AutoVvlStatus.KEINE_VEREINBARUNG;\n    }\n\n    return commitment.getAcceptance() ? AutoVvlStatus.JA : AutoVvlStatus.NEIN;\n  }\n\n  private AutoVvlStatus mapAutoVvlStatus(AutoExtendedCommitmentContract commitment) {\n    if (commitment == null) {\n      return AutoVvlStatus.KEINE_VEREINBARUNG;\n    }\n    return commitment.getAcceptance() ? AutoVvlStatus.JA : AutoVvlStatus.NEIN;\n  }\n\n  private Date subtractThreeMonth(Date date) {\n    return calcDate(date, Calendar.MONTH, -3);\n  }\n\n  private Date subtractOneDay(Date date) {\n    return calcDate(date, Calendar.DAY_OF_YEAR, -1);\n  }\n\n  private Date calcDate(Date date, int unit, int amount) {\n    if (date != null) {\n      Calendar calendar = Calendar.getInstance();\n      calendar.setTime(date);\n      calendar.add(unit, amount);\n      return calendar.getTime();\n    }\n    return null;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/InsuranceBrokerHsiServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/InsuranceBrokerHsiServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8668,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.File;\nimport java.util.ArrayList;\n\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.EnumTestDataCd;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.GetContractQuickInfoSoapMethodRequestDocument;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.GetContractQuickInfoSoapMethodRequestDocument.GetContractQuickInfoSoapMethodRequest;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.GetContractQuickInfoSoapMethodResponseDocument;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.GetContractQuickInfoSoapMethodResponseDocument.GetContractQuickInfoSoapMethodResponse;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.GetCostFreeClaimInfoSoapMethodRequestDocument;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.GetCostFreeClaimInfoSoapMethodRequestDocument.GetCostFreeClaimInfoSoapMethodRequest;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.GetCostFreeClaimInfoSoapMethodResponseDocument;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.GetCostFreeClaimInfoSoapMethodResponseDocument.GetCostFreeClaimInfoSoapMethodResponse;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.InsuranceContract;\nimport mergedhsi01soapv1controller.controller.core.remoteclient.standard.hsi01.hhi.lamie.b2b.eneon.RuntimeInformationFacade;\n\nimport org.apache.commons.io.FileUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.service.InsuranceBrokerHsiService;\nimport at.a1ta.cuco.core.shared.dto.InsuranceBrokerContractInfo;\nimport at.a1ta.cuco.core.shared.dto.InsuranceBrokerInfo;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionNode;\n\nimport com.telekomaustriagroup.esb.insurancebrokerhsi.InsuranceBrokerHSIStub;\n\n@Service\npublic class InsuranceBrokerHsiServiceImpl extends BaseEsbClient<InsuranceBrokerHSIStub> implements InsuranceBrokerHsiService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(InsuranceBrokerHsiServiceImpl.class);\n  @Autowired\n  private SettingService settingService;\n\n  @Override\n  public InsuranceBrokerInfo getCostFreeClaimInfo(SubscriptionNode subscriptionNode) {\n    InsuranceBrokerInfo insuranceBrokerInfo = new InsuranceBrokerInfo(InsuranceBrokerInfo.LOADING);\n\n    try {\n      GetCostFreeClaimInfoSoapMethodRequestDocument getCostFreeClaimInfoRequestDocument = GetCostFreeClaimInfoSoapMethodRequestDocument.Factory.newInstance();\n      GetCostFreeClaimInfoSoapMethodRequest request = GetCostFreeClaimInfoSoapMethodRequest.Factory.newInstance();\n      RuntimeInformationFacade getRunTimeInformation = RuntimeInformationFacade.Factory.newInstance();\n      getRunTimeInformation.setTestDataCd(EnumTestDataCd.PRODUCTIVE);\n      request.addNewRequest().addNewIM().setBillingMSISDN(subscriptionNode.getSubscriptionCallNumber());\n      request.getRequest().addNewIMM().setRuntimeInformation(getRunTimeInformation);\n      getCostFreeClaimInfoRequestDocument.setGetCostFreeClaimInfoSoapMethodRequest(request);\n      insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.NOT_RECEIVED);\n\n      GetCostFreeClaimInfoSoapMethodResponse response;\n      GetCostFreeClaimInfoSoapMethodResponseDocument responseDoc;\n      responseDoc = stub.GetCostFreeClaimInfo(getCostFreeClaimInfoRequestDocument, null);\n      response = responseDoc.getGetCostFreeClaimInfoSoapMethodResponse();\n      if (response != null && response.getGetCostFreeClaimInfoResult() != null && response.getGetCostFreeClaimInfoResult().getIM() != null) {\n        insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.LOADED);\n        insuranceBrokerInfo.setMonthLeft(response.getGetCostFreeClaimInfoResult().getIM().getMonthLeft());\n        insuranceBrokerInfo.setCostFreeClaimInd(response.getGetCostFreeClaimInfoResult().getIM().getCostFreeClaimInd());\n      } else {\n        insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.NOT_RECEIVED);\n      }\n    } catch (Exception ex) {\n      insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.ERROR);\n      LOGGER.error(\"Error while loading InsuranceBrokerHsi service\", ex);\n    }\n    return insuranceBrokerInfo;\n  }\n\n  @Override\n  public InsuranceBrokerInfo getHsiContractQuickInfo(SubscriptionNode subscriptionNode) {\n    InsuranceBrokerInfo insuranceBrokerInfo = new InsuranceBrokerInfo(InsuranceBrokerInfo.LOADING);\n    ArrayList<InsuranceBrokerContractInfo> insuranceBrokerContractInfo = new ArrayList<InsuranceBrokerContractInfo>();\n    try {\n      GetContractQuickInfoSoapMethodRequestDocument getContractQuickInfoRequestDocument = GetContractQuickInfoSoapMethodRequestDocument.Factory.newInstance();\n      GetContractQuickInfoSoapMethodRequest request = GetContractQuickInfoSoapMethodRequest.Factory.newInstance();\n      RuntimeInformationFacade getRunTimeInformation = RuntimeInformationFacade.Factory.newInstance();\n      getRunTimeInformation.setTestDataCd(EnumTestDataCd.PRODUCTIVE);\n      request.addNewRequest().addNewIM().setBillingMSISDN(subscriptionNode.getSubscriptionCallNumber());\n      request.getRequest().addNewIMM().setRuntimeInformation(getRunTimeInformation);\n      getContractQuickInfoRequestDocument.setGetContractQuickInfoSoapMethodRequest(request);\n      insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.NOT_RECEIVED);\n      GetContractQuickInfoSoapMethodResponse response;\n      GetContractQuickInfoSoapMethodResponseDocument responseDoc;\n      String mockResponseFileName = System.getProperty(\"catalina.base\") + \"//mocks//GetContractQuickInfoResponse.xml\";\n      if (settingService.getBooleanValue(\"testModeActive\", false) && new File(mockResponseFileName).exists()) {\n        response = GetContractQuickInfoSoapMethodResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileName))).getGetContractQuickInfoSoapMethodResponse();\n      } else {\n        responseDoc = stub.GetContractQuickInfo(getContractQuickInfoRequestDocument, null);\n        response = responseDoc.getGetContractQuickInfoSoapMethodResponse();\n      }\n\n      if (response != null && response.getGetContractQuickInfoResult() != null && response.getGetContractQuickInfoResult().getIM() != null) {\n        insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.LOADED);\n        insuranceBrokerInfo.setContractInd(response.getGetContractQuickInfoResult().getIM().getCoverage() != null ? response.getGetContractQuickInfoResult().getIM().getCoverage().getContractInd()\n            : false);\n        insuranceBrokerInfo.setContractTypeEligible(response.getGetContractQuickInfoResult().getIM().getCoverage() != null ? response.getGetContractQuickInfoResult().getIM().getCoverage()\n            .getContractTypeEligible() : false);\n        if (response.getGetContractQuickInfoResult().getIM().getInsuranceContracts().getInsuranceContractArray().length != 0) {\n          for (InsuranceContract insuranceContract : response.getGetContractQuickInfoResult().getIM().getInsuranceContracts().getInsuranceContractArray()) {\n            insuranceBrokerContractInfo.add(new InsuranceBrokerContractInfo(\n                insuranceContract.getContractInfo() != null ? (insuranceContract.getContractInfo().getMarketingContractTypeName() != null ? insuranceContract.getContractInfo()\n                    .getMarketingContractTypeName() : \"-\") : \"-\", insuranceContract.getDevice() != null ? (insuranceContract.getDevice().getDeviceMarketingName() != null ? insuranceContract\n                    .getDevice().getDeviceMarketingName() : \"-\") : \"-\", insuranceContract.getIMEI() != null ? insuranceContract.getIMEI() : \"-\"));\n          }\n          insuranceBrokerInfo.setContractInfo(insuranceBrokerContractInfo);\n        } else {\n          insuranceBrokerInfo.addToContractInfo(new InsuranceBrokerContractInfo(\"-\", \"-\", \"-\"));\n        }\n      } else {\n        insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.NOT_RECEIVED);\n      }\n    } catch (Exception ex) {\n      insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.ERROR);\n      LOGGER.error(\"Error while loading InsuranceBrokerHsi service\", ex);\n    }\n    return insuranceBrokerInfo;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UserInfoStatisticsServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/UserInfoStatisticsServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 780,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.UserInfoStatisticsDao;\nimport at.a1ta.cuco.core.service.UserInfoStatisticsService;\nimport at.a1ta.cuco.core.shared.dto.UserInfoStatistics;\n\n@Service\npublic class UserInfoStatisticsServiceImpl implements UserInfoStatisticsService {\n\n  private UserInfoStatisticsDao userInfoStatisticsDao;\n\n  @Override\n  public UserInfoStatistics getUserInfoStatistics(String uUser) {\n    return userInfoStatisticsDao.getUserInfoStatistics(uUser);\n  }\n\n  @Autowired\n  public void setUserInfoStatisticsDao(UserInfoStatisticsDao userInfoStatisticsDao) {\n    this.userInfoStatisticsDao = userInfoStatisticsDao;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/POSServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/POSServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9477,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.mail.Mail;\nimport at.a1ta.bite.core.mail.MailSender;\nimport at.a1ta.bite.core.server.dao.PersonDao;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.core.shared.dto.cd.CdPerson;\nimport at.a1ta.bite.core.shared.util.CommonUtils;\nimport at.a1ta.cuco.core.service.POSService;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote;\n\n@Service\npublic class POSServiceImpl implements POSService {\n  private static final Logger logger = LoggerFactory.getLogger(POSServiceImpl.class);\n  private static final Logger mailLogger = LoggerFactory.getLogger(\"mailings\");\n  @Autowired\n  private MailSender mailSender;\n\n  @Autowired\n  private SettingService settingService;\n\n  @Autowired\n  private PersonDao personDao;\n\n  @Override\n  public void sendPOSChangeEmail(Party party, PointOfSaleInfo current, PointOfSaleInfo requested, String justification, UserInfo userInfo) {\n\n    if (mailActivated()) {\n      if (party == null || userInfo == null) {\n        throw new RuntimeException(\"Party and/or UserInfo missing\");\n      }\n      String template = mailTemplate();\n\n      // [0] userId - fill in the CuCo logged in user\n      // [1] userName - fill in the CuCo logged in user (lastname and firstname)\n      // [2] partyId - fill in the current customer id\n      // [3] partyName - fill in the last name, first name, company name of the customer\n      // [4] currentDealerId - fill in the current dealer id of the customer\n      // [5] currentDealerName - fill in the current dealer name of the customer\n      // [6] suggestedDealerId - fill in the current dealer id of the customer (that has been selected in the popup)\n      // [7] suggestedDealerName - fill in the current dealer name of the customer (that has been selected in the popup)\n      // [8] reasonNote - fill in the given note of the textfield of the popup\n\n      template = template.replace(\"[0]\", userInfo.getUsername());\n      template = template.replace(\"[1]\", userInfo.getName());\n      template = template.replace(\"[2]\", \"\" + party.getId());\n      template = template.replace(\"[3]\", party.getName());\n      template = template.replace(\"[4]\", \"\" + current.getDealerId());\n      template = template.replace(\"[5]\", current.getDealerName());\n      template = template.replace(\"[6]\", \"\" + requested.getDealerId());\n      template = template.replace(\"[7]\", requested.getDealerName());\n      template = template.replace(\"[8]\", justification);\n\n      Mail mail = new Mail();\n      mail.setRecipients(mailAddresses());\n      String executiveEmail = getExecutiveEmail(userInfo.getBiteUser());\n      if (executiveEmail != null) {\n        mail.setCc(new String[] {executiveEmail});\n      } else {\n        logger.warn(\"No Supervisor found for user \" + userInfo.getUsername());\n      }\n      mail.setSubject(mailSubject());\n      mail.setMessage(template);\n\n      try {\n        mailSender.sendMail(mail);\n      } catch (Exception ex) {\n        mailLogger.error(ex.getMessage(), ex);\n        throw new RuntimeException(ex.getCause());\n      }\n    }\n\n  }\n\n  private String getExecutiveEmail(BiteUser user) {\n    if (user.isPartnerCenterUser()) {\n      return null;\n    }\n    CdPerson person = personDao.getPerson(user.getUsername());\n    if (person.getExecutive() != null) {\n      return personDao.getPerson(person.getExecutive()).getEmail();\n    }\n    return null;\n  }\n\n  private boolean mailActivated() {\n    return settingService.getBooleanValue(\"mail.cuco.poschange.active\", true);\n  }\n\n  private String mailSubject() {\n    return settingService.getValue(\"mail.cuco.poschange.subject\");\n  }\n\n  private String mailTemplate() {\n    return settingService.getValue(\"mail.cuco.poschange.mail\");\n  }\n\n  private String[] mailAddresses() {\n    return settingService.getValuesIgnoreMissing(\"mail.cuco.poschange.adress\");\n  }\n\n  @Override\n  public void sendToDoAssignedToPOSEmail(Party party, ToDoGroupNote groupNote, PointOfSaleInfo requestedPOS, String justification, BiteUser user) {\n\n    if (toDoAssignEmailActivated()) {\n      try {\n        if (party == null || user == null || requestedPOS == null || requestedPOS.getDelearEmailId() == null) {\n          throw new RuntimeException(\"Required Details like Party(\" + party + \")  and/or UserInfo(\" + user + \") and/or POS (\" + requestedPOS + \") Email Address(\"\n              + (requestedPOS != null ? requestedPOS.getDelearEmailId() : \"null\") + \") Missing\");\n        }\n        Mail mail = new Mail();\n        mail.setRecipients(new String[] {requestedPOS.getDelearEmailId()});\n        String executiveEmail = getExecutiveEmail(user);\n        if (executiveEmail != null) {\n          mail.setCc(new String[] {executiveEmail});\n        } else {\n          logger.warn(\"No Supervisor found for user \" + user.getUsername());\n        }\n        mail.setSubject(toDoAssignMailSubject().replace(\"<CustomerNumber>\", groupNote.getParty().getId() + \"\"));\n        mail.setMessage(toDoAssignMailTemplate().replace(\"<CustomerNumber>\", groupNote.getParty().getId() + \"\").replace(\"<CustomerName>\", groupNote.getParty().getName())\n            .replace(\"<Justification>\", groupNote.getEmailAdditionalText()));\n\n        mailSender.sendMail(mail);\n        groupNote.setAssigneeNotes(CommonUtils.defaultString(groupNote.getAssigneeNotes()) + newLineBreak() + mail.getMessage().replaceAll(\"\\\\<.*?>\", \"\") + newLineBreak());\n      } catch (Exception ex) {\n        mailLogger.error(\"Error while Sending ToDoAssignment Email for note ID  \" + groupNote.getPredecessorSalesInfoNoteId() + \" , party Id \" + groupNote.getPartyId(), ex);\n        groupNote.setAssigneeNotes(CommonUtils.defaultString(groupNote.getAssigneeNotes()) + newLineBreak()\n            + getFailureMessage().replace(\"<DelearNameAddress>\", groupNote.getAssignedToDelearInfo().getNameAddressString()) + newLineBreak());\n\n      }\n    }\n\n  }\n\n  @Override\n  public void sendToDoCompletedToPOSEmail(Party party, ToDoGroupNote groupNote, PointOfSaleInfo requestedPOS, String justification, BiteUser user) {\n\n    if (toDoCompletedEmailActivated()) {\n      try {\n        if (party == null || user == null || groupNote.getCreationUser() == null || groupNote.getCreationUser().getEmail() == null || groupNote.getCreationUser().getEmail().isEmpty()) {\n          throw new RuntimeException(\"Required Details like Party (\" + party + \") and/or UserInfo (\" + user + \") and/or Creator (\" + groupNote.getCreationUser() + \") Email Address (\"\n              + groupNote.getCreationUser().getEmail() + \") Missing\");\n        }\n        Mail mail = new Mail();\n        mail.setRecipients(new String[] {groupNote.getCreationUser().getEmail()});\n        String executiveEmail = getExecutiveEmail(user);\n        if (executiveEmail != null) {\n          mail.setCc(new String[] {executiveEmail});\n        } else {\n          logger.warn(\"No Supervisor found for user \" + user.getUsername());\n        }\n        mail.setSubject(toDoCompletedMailSubject().replace(\"<CustomerNumber>\", groupNote.getParty().getId() + \"\"));\n        mail.setMessage(toDoCompletedMailTemplate().replace(\"<CustomerNumber>\", groupNote.getParty().getId() + \"\").replace(\"<CustomerName>\", groupNote.getParty().getName())\n            .replace(\"<Justification>\", groupNote.getEmailAdditionalText()));\n\n        mailSender.sendMail(mail);\n        groupNote.setAssigneeNotes(CommonUtils.defaultString(groupNote.getAssigneeNotes()) + newLineBreak() + mail.getMessage().replaceAll(\"\\\\<.*?>\", \"\") + newLineBreak());\n      } catch (Exception ex) {\n        mailLogger.error(\"Error while Sending ToDoCompletion Email for note ID  \" + groupNote.getPredecessorSalesInfoNoteId() + \" , party Id \" + groupNote.getPartyId(), ex);\n        groupNote.setAssigneeNotes(CommonUtils.defaultString(groupNote.getAssigneeNotes())\n            + newLineBreak()\n            + getFailureMessage().replace(\"<DelearNameAddress>\",\n                (groupNote.getAssignedToDelearInfo() != null ? groupNote.getAssignedToDelearInfo().getNameAddressString() : \"delear id-\" + groupNote.getAssigneeDealerId())) + newLineBreak());\n\n      }\n    }\n\n  }\n\n  private String newLineBreak() {\n    return \"\\n===========================================\\n\";\n  }\n\n  private boolean toDoAssignEmailActivated() {\n    return settingService.getBooleanValue(\"mail.cuco.assignToDo.mail.active\", true);\n  }\n\n  private String toDoAssignMailTemplate() {\n    return settingService.getValue(\"mail.cuco.assignToDo.mail_template\");\n  }\n\n  private String toDoAssignMailSubject() {\n    return settingService.getValue(\"mail.cuco.assignToDo.mail_subject\");\n  }\n\n  private boolean toDoCompletedEmailActivated() {\n    return settingService.getBooleanValue(\"mail.cuco.toDoCompleted.mail.active\", true);\n  }\n\n  private String toDoCompletedMailTemplate() {\n    return settingService.getValue(\"mail.cuco.toDoCompleted.mail_template\");\n  }\n\n  private String toDoCompletedMailSubject() {\n    return settingService.getValue(\"mail.cuco.toDoCompleted.mail_subject\");\n  }\n\n  private String getFailureMessage() {\n    // TODO Auto-generated method stub\n    return settingService.getValue(\"mail.cuco.assignToDo.mail_failureMessageInNotes\");\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/AttributeServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/AttributeServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4316,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.Date;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.cuco.core.dao.db.AttributeDao;\nimport at.a1ta.cuco.core.service.AttributeService;\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig;\nimport at.a1ta.cuco.core.shared.dto.AttributeHistory;\n\n@Service\npublic class AttributeServiceImpl implements AttributeService {\n\n  @Autowired\n  AttributeDao attributeDao;\n\n  @Override\n  public List<AttributeConfig> getAllConfigs() {\n    return attributeDao.getAllConfigs();\n  }\n\n  @Override\n  public AttributeConfig insertConfig(AttributeConfig config, long user) {\n    Date date = new Date();\n    BiteUser BiteUser = createUser(user);\n    config.setCreator(BiteUser);\n    config.setCreateDate(date);\n    config.setLastModifier(BiteUser);\n    config.setLastUpdate(date);\n    config.setDeleted(false);\n    attributeDao.insertConfig(config);\n    return config;\n  }\n\n  private BiteUser createUser(long userId) {\n    BiteUser user = new BiteUser();\n    user.setId(userId);\n    return user;\n  }\n\n  @Override\n  public AttributeConfig updateConfig(AttributeConfig config, long user) {\n    config.setLastModifier(createUser(user));\n    config.setLastUpdate(new Date());\n    attributeDao.updateConfig(config);\n    return config;\n  }\n\n  @Override\n  public AttributeConfig deleteConfig(AttributeConfig config, long user) {\n    config.setDeleted(true);\n    config.setLastModifier(createUser(user));\n    config.setLastUpdate(new Date());\n    attributeDao.updateConfig(config);\n    return config;\n  }\n\n  @Override\n  public AttributeConfig activateConfig(AttributeConfig config, long user) {\n    config.setActive(true);\n    config.setLastModifier(createUser(user));\n    config.setLastUpdate(new Date());\n    attributeDao.updateConfig(config);\n    return config;\n  }\n\n  @Override\n  public AttributeConfig deactivateConfig(AttributeConfig config, long user) {\n    config.setActive(false);\n    config.setLastModifier(createUser(user));\n    config.setLastUpdate(new Date());\n    attributeDao.updateConfig(config);\n    return config;\n  }\n\n  @Override\n  public List<Attribute> getByPartyId(long partyId, String segment) {\n    return attributeDao.getByPartyId(partyId, segment);\n  }\n\n  @Override\n  public Attribute addAttributeAndArchive(Attribute attribute, long user) {\n    attribute.setLastModifier(createUser(user));\n    attribute.setLastUpdate(new Date());\n\n    archiveExisting(attribute);\n\n    attributeDao.insert(attribute);\n    return attribute;\n  }\n\n  private void archiveExisting(Attribute attribute) {\n    List<Attribute> existingAttributes = attributeDao.getSameExistingAttributes(attribute);\n    if (existingAttributes != null && existingAttributes.size() > 0) {\n      attribute.setHasHistory(true);\n      for (Attribute attr : existingAttributes) {\n        AttributeHistory history = createHistory(attr);\n        attributeDao.insertHistory(history);\n        attributeDao.delete(attr);\n      }\n    }\n  }\n\n  private AttributeHistory createHistory(Attribute attr) {\n    AttributeConfig attributeConfig = createConfig(attr);\n    AttributeHistory history = new AttributeHistory();\n    if (attr != null) {\n      history.setAttributeId(attr.getAttributeId());\n      history.setAttributeConfig(attributeConfig);\n      history.setKundeId(attr.getKundeId());\n      history.setBooleanValue(attr.getBooleanValue());\n      history.setNumberValue(attr.getNumberValue());\n      history.setCreateDate(attr.getLastUpdate());\n      history.setCreator(createUser(attr.getLastModifier().getId()));\n      history.setTextValue(attr.getTextValue());\n    }\n    return history;\n  }\n\n  private AttributeConfig createConfig(Attribute attr) {\n    AttributeConfig attributeConfig = new AttributeConfig();\n    if (attr != null && attr.getAttributeConfig() != null) {\n      attributeConfig.setAttributeConfigId(attr.getAttributeConfig().getAttributeConfigId());\n    }\n    return attributeConfig;\n  }\n\n  @Override\n  public List<AttributeHistory> getHistory(long partyId, long attributeConfigId) {\n    List<AttributeHistory> history = attributeDao.getHistory(partyId, attributeConfigId);\n    return history;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/TurnoverServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/TurnoverServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 560,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.dao.db.TurnoverDao;\nimport at.a1ta.cuco.core.service.TurnoverService;\nimport at.a1ta.cuco.core.shared.dto.Turnover;\n\n@Service\npublic class TurnoverServiceImpl implements TurnoverService {\n\n  @Autowired\n  private TurnoverDao turnoverDao;\n\n  @Override\n  public List<Turnover> getAllForParty(long partyId) {\n    return turnoverDao.getAllForParty(partyId);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PartyServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/PartyServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 23372,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.util.Calendar;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.TimeZone;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.Assert;\n\nimport a1.gdpr.webservice.Brand;\nimport a1.gdpr.webservice.UserType;\nimport at.a1ta.bite.audit.core.Auditor;\nimport at.a1ta.bite.core.server.dto.PartySearchEvent;\nimport at.a1ta.bite.core.server.dto.Trackable;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.server.service.UserTrackingService;\nimport at.a1ta.bite.data.solr.core.query.Field;\nimport at.a1ta.bite.data.solr.core.query.result.FacetResult;\nimport at.a1ta.cuco.core.audit.ContextAwareAuditHelper;\nimport at.a1ta.cuco.core.audit.CuCoAuditActivity;\nimport at.a1ta.cuco.core.audit.CuCoAuditScope;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.service.EsbPartyService;\nimport at.a1ta.cuco.core.service.PartyCustomerLoyaltyService;\nimport at.a1ta.cuco.core.service.PartyDeclarationOfConsentService;\nimport at.a1ta.cuco.core.service.PartyProfileService;\nimport at.a1ta.cuco.core.service.PartySearchValueFormatHelper;\nimport at.a1ta.cuco.core.service.PartyService;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartyAdditionalInfo;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.PhoneNumberStructure;\nimport at.a1ta.cuco.core.shared.dto.PointOfSaleInfo;\nimport at.a1ta.cuco.core.shared.dto.ServiceClassInfo;\nimport at.a1ta.cuco.core.shared.dto.SimplePage;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress;\nimport at.a1ta.cuco.core.shared.dto.StandardAddress.AddressDataSource;\nimport at.a1ta.cuco.core.shared.validator.AONNumberValidator;\nimport at.a1ta.cuco.core.shared.validator.BANValidator;\nimport at.a1ta.cuco.core.shared.validator.CityValidator;\nimport at.a1ta.cuco.core.shared.validator.CommonValidator;\nimport at.a1ta.cuco.core.shared.validator.FirstnameValidator;\nimport at.a1ta.cuco.core.shared.validator.HousenumberValidator;\nimport at.a1ta.cuco.core.shared.validator.LastnameValidator;\nimport at.a1ta.cuco.core.shared.validator.PartyIdValidator;\nimport at.a1ta.cuco.core.shared.validator.PhonenumberValidator;\nimport at.a1ta.cuco.core.shared.validator.StreetValidator;\nimport at.a1ta.cuco.core.shared.validator.ZipCodeValidator;\nimport at.a1telekom.eai.party.Address;\n\n@Service\npublic class PartyServiceImpl implements PartyService {\n\n  private final PartyIdValidator partyIdValidator = new PartyIdValidator();\n  private final BANValidator banValidator = new BANValidator();\n  private final AONNumberValidator aonNumberValidator = new AONNumberValidator();\n  private final LastnameValidator lastnameValidator = new LastnameValidator();\n  private final FirstnameValidator firstnameValidator = new FirstnameValidator();\n  private final PhonenumberValidator phonenumberValidator = new PhonenumberValidator();\n  private final ZipCodeValidator zipCodeValidator = new ZipCodeValidator();\n  private final CityValidator cityValidator = new CityValidator();\n\n  private final HousenumberValidator housenumberValidator = new HousenumberValidator();\n  private final StreetValidator streetValidator = new StreetValidator();\n\n  static final int DEFAULT_MAX_ELEM = 2000;\n  static final String PARTYSEARCH_SOLR_ENABLED = \"Partysearch.solrEnabled\";\n  static final String FACETED_PARTYSEARCH_ENABLED = \"Partysearch.solrFacetedSearchEnabled\";\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(PartyServiceImpl.class);\n\n  private static final String SETTING_SUBSIDISED_TARIFS = \"subsidised_tarifs\";\n  private static final String SETTING_SUBSIDISED_TARIFS_SEPERATOR = \";\";\n\n  private PartyDao customerDao;\n  private PartyDao partySolrRepository;\n  private PartyDao partySolrRepositoryWithPhoneNumbers;\n  private PartySearchValueFormatHelper partySearchFormatHelper;\n\n  private SettingService settingService;\n  private UserTrackingService userTrackingService;\n  @Autowired\n  private EsbPartyService esbPartyService;\n  @Autowired\n  private PartyDeclarationOfConsentService partyDeclarationOfConsentService;\n  @Autowired\n  private PartyProfileService partyProfileService;\n  @Autowired\n  private PartyCustomerLoyaltyService partyCustomerLoyaltyService;\n\n  @Override\n  public Party get(final long id) {\n    Party party = customerDao.loadParty(id);\n    // adjust offset\n    if (party != null && party.getBirthdate() != null) {\n      try {\n        party.setDateOfBirth(party.getBirthdate().getTime() + getOffsetDiff());\n      } catch (Exception ex) {\n        LOGGER.warn(\"Could not adjust DST for DOB for party : \" + party.getId() + \" - DOB: \" + party.getDateOfBirth());\n      }\n    }\n    return party;\n  }\n\n  public static int getOffsetDiff() {\n    final Calendar cal = Calendar.getInstance(TimeZone.getDefault());\n    return (cal.get(Calendar.ZONE_OFFSET) + cal.get(Calendar.DST_OFFSET));\n  }\n\n  @Override\n  public SimplePage<Party> search(PartySearch partySearch) {\n    Assert.notNull(partySearch);\n    // if user tries to search for lead, copy id to lead id\n    if (!CommonValidator.isBlank(partySearch.getId()) && partySearch.getId().trim().toUpperCase().startsWith(\"L\")) {\n      partySearch.setLeadId(partySearch.getId());\n      partySearch.setId(partySearch.getId().toLowerCase().replace('l', ' ').trim());\n    }\n\n    Auditor.audit(ContextAwareAuditHelper.createFor(CuCoAuditScope.CUSTOMER, CuCoAuditActivity.SEARCH).withMessage(partySearch.toString()));\n\n    PartySearch formattedSearch = formatSearchValues(partySearch);\n\n    boolean indexedSearchEnabled = isIndexedSearchEnabled();\n    final int maxResults = settingService.getIntValue(\"Partysearch.maxResults\", DEFAULT_MAX_ELEM);\n\n    SimplePage<Party> searchResult = new SimplePage<Party>();\n    if (indexedSearchEnabled) {\n      if (partySearch.isFulltext()) {\n        failsafeTrackUserSearch(new PartySearchEvent(partySearch.getSearchExecutingUserName(), PartySearchEvent.EventType.SEARCH_FT));\n      } else if (StringUtils.isNotBlank(partySearch.getAonAccountNumber())) {\n        failsafeTrackUserSearch(new PartySearchEvent(partySearch.getSearchExecutingUserName(), PartySearchEvent.EventType.SEARCH_PRI));\n      } else {\n        failsafeTrackUserSearch(new PartySearchEvent(partySearch.getSearchExecutingUserName(), PartySearchEvent.EventType.SEARCH_SOL));\n      }\n      searchResult = indexedSearch(formattedSearch, maxResults);\n    }\n    if ((!indexedSearchEnabled || searchResult == null || searchResult.getContent().isEmpty()) && !partySearch.isFulltext()) {\n      if ((isUniqueFieldGiven(partySearch) && areUniqueFieldsValid(partySearch)) || areNoneUniqueSearchCriteriaValid(partySearch)) {\n        failsafeTrackUserSearch(new PartySearchEvent(partySearch.getSearchExecutingUserName(), PartySearchEvent.EventType.SEARCH_FB));\n\n        searchResult = this.customerDao.search(formattedSearch, maxResults);\n      } else {\n        searchResult = new SimplePage<Party>();\n        searchResult.setInputValid(false);\n      }\n    }\n\n    return searchResult;\n  }\n\n  @Override\n  public SimplePage<Party> searchNonCustomers(PartySearch partySearch) {\n    Assert.notNull(partySearch);\n\n    Auditor.audit(ContextAwareAuditHelper.createFor(CuCoAuditScope.CUSTOMER, CuCoAuditActivity.SEARCH_LEAD).withMessage(partySearch.toString()));\n\n    PartySearch formattedSearch = formatSearchValues(partySearch);\n    final int maxResults = settingService.getIntValue(\"Partysearch.maxResults\", DEFAULT_MAX_ELEM);\n    SimplePage<Party> searchResult = this.customerDao.searchNonCustomer(formattedSearch, maxResults);\n    return searchResult;\n  }\n\n  @Override\n  public List<FacetResult> facetedSearch(PartySearch partySearch, Field facetedField) {\n    Assert.notNull(partySearch);\n    Assert.notNull(facetedField);\n    // if user tries to search for lead, copy id to lead id\n    if (!CommonValidator.isBlank(partySearch.getId()) && partySearch.getId().trim().toUpperCase().startsWith(\"L\")) {\n      partySearch.setLeadId(partySearch.getId());\n      partySearch.setId(partySearch.getId().toLowerCase().replace('l', ' ').trim());\n    }\n    boolean indexedSearchEnabled = solrFacetedSearchEnabled();\n\n    List<FacetResult> searchResult = Collections.<FacetResult> emptyList();\n    if (indexedSearchEnabled) {\n      try {\n        searchResult = chooseRepositoryForSearch(partySearch).facetedSearch(partySearch, facetedField);\n      } catch (Exception e) {\n        LOGGER.warn(\"Could not execute SOLR Query\", e);\n      }\n      return searchResult;\n    }\n    return searchResult;\n  }\n\n  private PartySearch formatSearchValues(PartySearch partySearch) {\n    PhoneNumberStructure phoneStructure = partySearchFormatHelper.parsePhoneNumber(partySearch.getPhoneNumber());\n    if (phoneStructure != null) {\n      partySearch.setLkz(phoneStructure.getCountryCode());\n      partySearch.setOkz(phoneStructure.getOnkz());\n      partySearch.setCallNumber(phoneStructure.getNumber());\n    }\n    partySearch.setCommercialRegisterNumber(partySearchFormatHelper.formatCommectialRegisterNumber(partySearch.getCommercialRegisterNumber()));\n    return partySearch;\n  }\n\n  private SimplePage<Party> indexedSearch(PartySearch customerSearch, int maxResults) {\n    SimplePage<Party> result = new SimplePage<Party>();\n    // if user tries to search for lead, copy id to lead id\n    if (!CommonValidator.isBlank(customerSearch.getId()) && customerSearch.getId().trim().toUpperCase().startsWith(\"L\")) {\n      customerSearch.setLeadId(customerSearch.getId());\n      customerSearch.setId(customerSearch.getId().toLowerCase().replace('l', ' ').trim());\n    }\n    try {\n      result = chooseRepositoryForSearch(customerSearch).search(customerSearch, maxResults);\n    } catch (Exception e) {\n      LOGGER.warn(\"Could not execute SOLR Query\", e);\n    }\n    return result;\n  }\n\n  private PartyDao chooseRepositoryForSearch(PartySearch customerSearch) {\n\n    if (customerSearch.isFulltext()) {\n      return this.partySolrRepositoryWithPhoneNumbers;\n    }\n    if (StringUtils.isNotBlank(customerSearch.getAonAccountNumber())) {\n      return this.customerDao;\n    } else if (isSearchForPhoneNumberOrBAN(customerSearch)) {\n      return this.partySolrRepositoryWithPhoneNumbers;\n    }\n    return this.partySolrRepository;\n  }\n\n  private boolean isSearchForPhoneNumberOrBAN(PartySearch customerSearch) {\n    return (StringUtils.isNotBlank(customerSearch.getBillingAccountNumber()) || StringUtils.isNotBlank(customerSearch.getOkz()) || StringUtils.isNotBlank(customerSearch.getPhoneNumber()));\n  }\n\n  @Override\n  public List<Party> getCustomers4Header(final Number headerId) {\n    return this.getCustomers4Header(headerId.longValue(), -1, -1);\n  }\n\n  @Override\n  public List<Party> getCustomers4Header(final Number headerId, final int skip, final int maxResults) {\n    if (headerId == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"headerId\");\n    }\n    return this.customerDao.getCustomers4Header(headerId.longValue(), skip, maxResults);\n  }\n\n  @Override\n  public Party getHierarchyForParty(long partyId) {\n    List<Party> parties = customerDao.getHierarchyForParty(partyId);\n\n    Map<Long, Party> id2party = new HashMap<Long, Party>(parties.size());\n    for (Party party : parties) {\n      id2party.put(party.getId(), party);\n    }\n\n    Party rootParty = null;\n    for (Party party : parties) {\n      long parentId = party.getHeaderId();\n\n      if (party.getId() == parentId) {\n        rootParty = party;\n      } else {\n        Party parent = id2party.get(parentId);\n        parent.addChild(party);\n      }\n    }\n\n    return rootParty;\n  }\n\n  @Override\n  public int countCustomers4Header(Long headerId) {\n    if (headerId == null) {\n      throw new org.apache.commons.lang.NullArgumentException(\"headerId\");\n    }\n    return customerDao.countCustomers4Header(headerId);\n  }\n\n  @Override\n  public boolean isSubsidised(final long customerId) {\n    final String value = settingService.getValue(SETTING_SUBSIDISED_TARIFS);\n    return this.customerDao.isSubsidised(customerId, value.split(SETTING_SUBSIDISED_TARIFS_SEPERATOR));\n  }\n\n  @Override\n  public List<String> getAllSegments() {\n    return customerDao.getAllSegments();\n  }\n\n  @Override\n  public boolean isIndexedSearchEnabled() {\n    boolean searchUsingSolr = true;\n    try {\n      searchUsingSolr = settingService.getBooleanValue(PARTYSEARCH_SOLR_ENABLED, true);\n    } catch (Exception e) {\n      LOGGER.debug(PARTYSEARCH_SOLR_ENABLED + \" not found using default value (\" + searchUsingSolr + \")\");\n    }\n    return searchUsingSolr;\n  }\n\n  private boolean solrFacetedSearchEnabled() {\n    boolean searchUsingSolr = false;\n    try {\n      searchUsingSolr = settingService.getBooleanValue(FACETED_PARTYSEARCH_ENABLED, true);\n    } catch (Exception e) {\n      LOGGER.debug(FACETED_PARTYSEARCH_ENABLED + \" not found using default value (\" + searchUsingSolr + \")\");\n    }\n    return searchUsingSolr;\n  }\n\n  private boolean isLastNameCompanyNameValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getLastName()) || lastnameValidator.isValid(partySearch.getLastName());\n  }\n\n  private boolean isFirstNameValid() {\n    return firstnameValidator.isValid();\n  }\n\n  private boolean isAONNumberValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getAonAccountNumber()) || aonNumberValidator.isValid(partySearch.getAonAccountNumber());\n  }\n\n  private boolean isStreetValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getStreet()) || streetValidator.isValid(partySearch.getStreet());\n  }\n\n  private boolean isZIPCodeValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getPostcode()) || zipCodeValidator.isValid(partySearch.getPostcode());\n  }\n\n  private boolean isHouseNumberValid() {\n    return housenumberValidator.isValid();\n  }\n\n  private boolean isCityValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getCity()) || cityValidator.isValid(partySearch.getCity());\n  }\n\n  private boolean isPartyIdValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getId()) || partyIdValidator.isValid(partySearch.getId());\n  }\n\n  private boolean isPhoneNumberValid() {\n    return phonenumberValidator.isValid();\n  }\n\n  private boolean isBANValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getBillingAccountNumber()) || banValidator.isValid(partySearch.getBillingAccountNumber());\n  }\n\n  private boolean areFirstNameDependenciesValid(PartySearch partySearch) {\n    return !(StringUtils.isNotEmpty(partySearch.getFirstName()) && StringUtils.isEmpty(partySearch.getLastName()));\n  }\n\n  private boolean areStreetDependenciesValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getStreet()) || (StringUtils.isNotEmpty(partySearch.getPostcode()) && StringUtils.isNotEmpty(partySearch.getCity()));\n  }\n\n  private boolean areHouseNumberDependenciesValid(PartySearch partySearch) {\n    return StringUtils.isEmpty(partySearch.getHouseNumber()) || StringUtils.isNotEmpty(partySearch.getStreet());\n  }\n\n  private boolean areNoneUniqueSearchCriteriaValid(PartySearch partySearch) {\n    if (!validateNoneUniqueSearchCriteria(partySearch)) {\n      return false;\n    }\n    return validateDependencies(partySearch);\n  }\n\n  private boolean validateNoneUniqueSearchCriteria(PartySearch partySearch) {\n    if (!isLastNameCompanyNameValid(partySearch)) {\n      return false;\n    }\n    if (!isFirstNameValid()) {\n      return false;\n    }\n    if (!isStreetValid(partySearch)) {\n      return false;\n    }\n    if (!isZIPCodeValid(partySearch)) {\n      return false;\n    }\n    if (!isHouseNumberValid()) {\n      return false;\n    }\n    if (!isCityValid(partySearch)) {\n      return false;\n    }\n    return true;\n  }\n\n  private boolean validateDependencies(PartySearch partySearch) {\n    if (!areFirstNameDependenciesValid(partySearch)) {\n      return false;\n    }\n    if (!areStreetDependenciesValid(partySearch)) {\n      return false;\n    }\n    if (!areHouseNumberDependenciesValid(partySearch)) {\n      return false;\n    }\n    return true;\n  }\n\n  private boolean isUniqueFieldGiven(PartySearch partySearch) {\n    return !StringUtils.isEmpty(partySearch.getId()) || !StringUtils.isEmpty(partySearch.getPhoneNumber()) || !StringUtils.isEmpty(partySearch.getBillingAccountNumber())\n        || !StringUtils.isEmpty(partySearch.getAonAccountNumber()) || !StringUtils.isEmpty(partySearch.getCommercialRegisterNumber());\n  }\n\n  private boolean areUniqueFieldsValid(PartySearch partySearch) {\n    return isPartyIdValid(partySearch) && isPhoneNumberValid() && isBANValid(partySearch) && isAONNumberValid(partySearch);\n  }\n\n  private void failsafeTrackUserSearch(Trackable trackable) {\n    try {\n      userTrackingService.trackUserEvent(trackable);\n    } catch (Exception e) {\n      LOGGER.warn(\"Could not track user event.\", e);\n    }\n  }\n\n  @Autowired\n  public void setCustomerDao(@Qualifier(\"cucoCustomerDao\") PartyDao customerDao) {\n    this.customerDao = customerDao;\n  }\n\n  @Autowired(required = false)\n  public void setPartySolrRepository(@Qualifier(\"partySolrRepository\") PartyDao partySolrRepository) {\n    this.partySolrRepository = partySolrRepository;\n  }\n\n  @Autowired(required = false)\n  public void setPartySolrRepositoryWithPhoneNumbers(@Qualifier(\"partySolrRepositoryWithPhoneNumbers\") PartyDao partySolrRepositoryWithPhoneNumbers) {\n    this.partySolrRepositoryWithPhoneNumbers = partySolrRepositoryWithPhoneNumbers;\n  }\n\n  @Autowired\n  public void setPartySearchFormatterHelper(PartySearchValueFormatHelper partySearchFormatterHelper) {\n    this.partySearchFormatHelper = partySearchFormatterHelper;\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n\n  @Autowired\n  public void setUserTrackingService(UserTrackingService userTrackingService) {\n    this.userTrackingService = userTrackingService;\n  }\n\n  @Override\n  public void saveNonCustomer(Party party) {\n    this.customerDao.insertNonCustomerContact(party);\n  }\n\n  @Override\n  public void mergeNonCustomerAndTransferOffers(Party party) {\n    this.customerDao.mergeNonCustomerAndTransferOffers(party);\n    this.customerDao.markNonCustomerMerged(party);\n  }\n\n  @Override\n  public PartyAdditionalInfo getPartyAdditionalInfo(long partyId, String userName) {\n    PartyAdditionalInfo info = new PartyAdditionalInfo();\n    // defaulting to Error.\n    PointOfSaleInfo pointOfSaleInfo = new PointOfSaleInfo(PointOfSaleInfo.LOADING, null, null);\n    ServiceClassInfo serviceClassInfo = new ServiceClassInfo(ServiceClassInfo.SERVICE_CLASS_LOADING, null);\n    try {\n      at.a1telekom.eai.party.Party partyExternObj = esbPartyService.getParty(partyId);\n      if (partyExternObj != null) {\n        pointOfSaleInfo.setStaus(PointOfSaleInfo.NOT_RECEIVED);\n        serviceClassInfo.setServiceClass(partyExternObj.getServiceClass());\n        serviceClassInfo.setServiceClassText(partyExternObj.getServiceClassText());\n        if (partyExternObj.isSetPointOfSale() && settingService.getBooleanValue(\"pos.showPOSInfo\", true)) {\n          pointOfSaleInfo.setDealerId(partyExternObj.getPointOfSale().getDealerNumber());\n          pointOfSaleInfo.setDealerName(partyExternObj.getPointOfSale().getName());\n          pointOfSaleInfo.setDelearEmailId(partyExternObj.getPointOfSale().getEmailAddress());\n          pointOfSaleInfo.setAddress(extractAddress(partyExternObj.getPointOfSale().getAddress()));\n          pointOfSaleInfo.setStaus(PointOfSaleInfo.LOADED);\n        } else if (settingService.getBooleanValue(\"testModeActive\", false)) {\n          if ((partyId == 100134728 || partyId == 106892050 || partyId == 105474529) && settingService.getBooleanValue(\"pos.showPOSInfo\", true)) {\n            pointOfSaleInfo.setStaus(PointOfSaleInfo.LOADED);\n            pointOfSaleInfo.setDealerId(\"Mocked:\");\n            pointOfSaleInfo.setDealerName(\"Mocked:\" + partyExternObj.getShortName());\n            pointOfSaleInfo.setAddress(mockStandardAddress());\n          }\n          if ((partyId == 107067684) && settingService.getBooleanValue(\"pos.showPOSInfo\", true)) {\n            Thread.sleep(30000);\n          }\n          if ((partyId == 106318953) && settingService.getBooleanValue(\"pos.showPOSInfo\", true)) {\n            throw new RuntimeException();\n          }\n\n        }\n      } else {\n        pointOfSaleInfo.setStaus(PointOfSaleInfo.NOT_RECEIVED);\n        serviceClassInfo.setServiceClass(ServiceClassInfo.SERVICE_CLASS_NOT_RECEIVED);\n      }\n    } catch (Exception ex) {\n      pointOfSaleInfo.setStaus(PointOfSaleInfo.ERROR);\n      serviceClassInfo.setServiceClass(ServiceClassInfo.SERVICE_CLASS_ERROR);\n      LOGGER.error(\"Error while loading additional info from ESB Party Service\", ex);\n    }\n    info.setServiceClassInfo(serviceClassInfo);\n    // switched to PartyProfile\n    // info.setPointOfSaleInfo(pointOfSaleInfo);\n    if (settingService.getBooleanValue(\"gdprJune2017.showDeclarationOfConsent\")) {\n      info.setPartyDeclarationOfConsentInfo(partyDeclarationOfConsentService.getCurrentDeclarationOfConsentForParty(String.valueOf(partyId), userName, Brand.A_1_RBM, UserType.AGENT));\n    }\n    return info;\n  }\n\n  private StandardAddress extractAddress(Address esbAddress) {\n    StandardAddress address = new StandardAddress();\n    if (esbAddress != null) {\n      address.setLkmsId(esbAddress.getLkmsId());\n      address.setStreet(esbAddress.getStreet());\n      address.setHouseNumber(esbAddress.getHouseNumber());\n      address.setBlock(esbAddress.getBlock());\n      address.setStaircase(esbAddress.getStaircase());\n      address.setFloorNumber(esbAddress.getFloorNumber());\n      address.setDoorNumber(esbAddress.getDoorNumber());\n      address.setAdditional(esbAddress.getAdditional());\n      address.setPostcode(esbAddress.getPostcode());\n      address.setCity(esbAddress.getCity());\n      address.setVillage(esbAddress.getVillage());\n      address.setCountry(esbAddress.getCountry());\n    }\n    address.setDataSource(AddressDataSource.PARTY_SERVICE);\n    return address;\n  }\n\n  private StandardAddress mockStandardAddress() {\n    StandardAddress address = new StandardAddress();\n    address.setLkmsId(\"1212\");\n    address.setStreet(\"Schuttelstrasse\");\n    address.setHouseNumber(\"23-25A\");\n    address.setBlock(\"25\");\n    address.setStaircase(\"0\");\n    address.setFloorNumber(\"100\");\n    address.setDoorNumber(\"1011\");\n    address.setAdditional(\"\");\n    address.setPostcode(\"1020\");\n    address.setCity(\"Wien\");\n    address.setVillage(\"Wien\");\n    address.setCountry(\"Austria\");\n    address.setDataSource(AddressDataSource.PARTY_SERVICE);\n    return address;\n  }\n\n  @Override\n  public PartyAdditionalInfo getPartyAdditionalInfo(long partyId) {\n    PartyAdditionalInfo info = new PartyAdditionalInfo();\n    info.setPartyProfileInfo(partyProfileService.getParty(partyId));\n    info.setPartyCustomerLoyaltyInfo(partyCustomerLoyaltyService.getParty(partyId));\n    return info;\n  }\n\n  @Override\n  public String getPartyIdForQuoteNumber(String offerNumber) {\n    return customerDao.getPartyIdForQuoteNumber(offerNumber);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/InsuranceBrokerCpiServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/InsuranceBrokerCpiServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5020,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.File;\n\nimport mergedcpi01soapv1controller.controller.core.remoteclient.standard.cpi01.hhi.lamie.b2b.eneon.EnumTestDataCd;\nimport mergedcpi01soapv1controller.controller.core.remoteclient.standard.cpi01.hhi.lamie.b2b.eneon.GetContractQuickInfoSoapMethodRequestDocument;\nimport mergedcpi01soapv1controller.controller.core.remoteclient.standard.cpi01.hhi.lamie.b2b.eneon.GetContractQuickInfoSoapMethodRequestDocument.GetContractQuickInfoSoapMethodRequest;\nimport mergedcpi01soapv1controller.controller.core.remoteclient.standard.cpi01.hhi.lamie.b2b.eneon.GetContractQuickInfoSoapMethodResponseDocument;\nimport mergedcpi01soapv1controller.controller.core.remoteclient.standard.cpi01.hhi.lamie.b2b.eneon.GetContractQuickInfoSoapMethodResponseDocument.GetContractQuickInfoSoapMethodResponse;\nimport mergedcpi01soapv1controller.controller.core.remoteclient.standard.cpi01.hhi.lamie.b2b.eneon.RuntimeInformationFacade;\n\nimport org.apache.commons.io.FileUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.cuco.core.service.InsuranceBrokerCpiService;\nimport at.a1ta.cuco.core.shared.dto.InsuranceBrokerInfo;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionNode;\n\nimport com.telekomaustriagroup.esb.insurancebrokercpi.InsuranceBrokerCPIStub;\n\n@Service\npublic class InsuranceBrokerCpiServiceImpl extends BaseEsbClient<InsuranceBrokerCPIStub> implements InsuranceBrokerCpiService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(InsuranceBrokerCpiServiceImpl.class);\n  @Autowired\n  private SettingService settingService;\n\n  @Override\n  public InsuranceBrokerInfo getCpiContractQuickInfo(SubscriptionNode subscriptionNode) {\n    InsuranceBrokerInfo insuranceBrokerInfo = new InsuranceBrokerInfo(InsuranceBrokerInfo.LOADING);\n\n    try {\n      GetContractQuickInfoSoapMethodRequestDocument getContractQuickInfoRequestDocument = GetContractQuickInfoSoapMethodRequestDocument.Factory.newInstance();\n      GetContractQuickInfoSoapMethodRequest request = GetContractQuickInfoSoapMethodRequest.Factory.newInstance();\n      RuntimeInformationFacade getRunTimeInformation = RuntimeInformationFacade.Factory.newInstance();\n      getRunTimeInformation.setTestDataCd(EnumTestDataCd.PRODUCTIVE);\n      request.addNewRequest().addNewIM().setBillingMSISDN(subscriptionNode.getSubscriptionCallNumber());\n      request.getRequest().addNewIMM().setRuntimeInformation(getRunTimeInformation);\n      getContractQuickInfoRequestDocument.setGetContractQuickInfoSoapMethodRequest(request);\n      insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.NOT_RECEIVED);\n\n      GetContractQuickInfoSoapMethodResponse response;\n      GetContractQuickInfoSoapMethodResponseDocument responseDoc;\n      String mockResponseFileName = System.getProperty(\"catalina.base\") + \"//mocks//GetContractQuickInfoResponseCpi.xml\";\n      if (settingService.getBooleanValue(\"testModeActive\", false) && new File(mockResponseFileName).exists()) {\n        response = GetContractQuickInfoSoapMethodResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileName))).getGetContractQuickInfoSoapMethodResponse();\n      } else {\n        responseDoc = stub.GetContractQuickInfo(getContractQuickInfoRequestDocument, null);\n        response = responseDoc.getGetContractQuickInfoSoapMethodResponse();\n      }\n      if (response != null && response.getGetContractQuickInfoResult() != null && response.getGetContractQuickInfoResult().getIM() != null) {\n        insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.LOADED);\n        insuranceBrokerInfo.setContractInd(response.getGetContractQuickInfoResult().getIM().getCoverage() != null ? response.getGetContractQuickInfoResult().getIM().getCoverage().getContractInd()\n            : false);\n        insuranceBrokerInfo.setContractTypeEligible(response.getGetContractQuickInfoResult().getIM().getCoverage() != null ? response.getGetContractQuickInfoResult().getIM().getCoverage()\n            .getContractTypeEligible() : false);\n        insuranceBrokerInfo.setMarketingContractTypeName(response.getGetContractQuickInfoResult().getIM().getContractInfo() != null ? (response.getGetContractQuickInfoResult().getIM()\n            .getContractInfo().getMarketingContractTypeName() != null ? response.getGetContractQuickInfoResult().getIM().getContractInfo().getMarketingContractTypeName() : \"-\") : \"-\");\n        insuranceBrokerInfo.setDeviceMarketingName(\"-\");\n        insuranceBrokerInfo.setImei(\"-\");\n      } else {\n        insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.NOT_RECEIVED);\n      }\n    } catch (Exception ex) {\n      insuranceBrokerInfo.setStatus(InsuranceBrokerInfo.ERROR);\n      LOGGER.error(\"Error while loading InsuranceBrokerCpi service\", ex);\n    }\n    return insuranceBrokerInfo;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CuscoUnlockServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CuscoUnlockServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9593,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.io.StringWriter;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.rmi.RemoteException;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport javax.xml.transform.OutputKeys;\nimport javax.xml.transform.Transformer;\nimport javax.xml.transform.TransformerException;\nimport javax.xml.transform.TransformerFactory;\nimport javax.xml.transform.dom.DOMSource;\nimport javax.xml.transform.stream.StreamResult;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.apache.commons.lang.StringUtils;\nimport org.apache.commons.lang.time.FastDateFormat;\nimport org.apache.xmlbeans.XmlException;\nimport org.apache.xmlbeans.XmlObject;\nimport org.joda.time.DateTime;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.Assert;\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Text;\n\nimport com.telekomaustriagroup.esb.cusco.CuscoError;\nimport com.telekomaustriagroup.esb.cusco.CuscoStub;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.data.cusco.CusCoConfigurtationBean;\nimport at.a1ta.bite.data.cusco.CusCoMessage;\nimport at.a1ta.bite.data.cusco.CusCoMessageBuilder;\nimport at.a1ta.cuco.core.dao.cusco.CusCoResponse;\nimport at.a1ta.cuco.core.service.CuscoUnlockService;\nimport at.a1ta.cuco.core.shared.dto.Customer;\nimport at.mobilkom.crm.cusco.CheckStatusForSignedRequestDocument;\nimport at.mobilkom.crm.cusco.CheckStatusForSignedRequestType;\nimport at.mobilkom.crm.cusco.CheckStatusForSignedResponseDocument;\nimport at.mobilkom.crm.cusco.CheckStatusForSignedResponseType;\nimport at.mobilkom.crm.cusco.NewJobType.VariableData;\nimport at.mobilkom.crm.cusco.PrepareForSignRequestDocument;\nimport at.mobilkom.crm.cusco.PrepareForSignRequestType;\nimport at.mobilkom.crm.cusco.PrepareForSignResponseDocument;\n\n@Service\npublic class CuscoUnlockServiceImpl extends BaseEsbClient<CuscoStub> implements CuscoUnlockService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(CuscoUnlockServiceImpl.class);\n\n  private static final String OP_PREPARE_FOR_SIGN = \"PrepareForSign\";\n  private static final String OP_CHECK_STATUS_FOR_SIGNED = \"CheckStatusForSigned\";\n\n  private static final String SOURCE_SYSTEM_CUCO = \"CuCo\";\n  private static final String DUMMY_PSWD = \"no-password\";\n\n  private static final FastDateFormat DATEFORMAT = FastDateFormat.getInstance(\"dd.MM.yyyy\");\n\n  @Override\n  public CusCoResponse prepareForSign(Customer customer, UserInfo userInfo, String contactPerson, String templateId) {\n    final CusCoMessage message = getCuscoMessageBuilder().createForOperation(OP_PREPARE_FOR_SIGN);\n    message.setTemplateId(templateId);\n    message.setOutputChannel(\"Brief\");\n    message.setStatusReportId(\"12354\");\n\n    PrepareForSignRequestDocument requestDoc = PrepareForSignRequestDocument.Factory.newInstance();\n    PrepareForSignRequestType request = requestDoc.addNewPrepareForSignRequest();\n    request.setJobId(message.getJobId());\n    request.setPassword(message.getPassword());\n    request.setSendingSystem(message.getSourceSystem());\n    request.setTemplateId(templateId);\n    request.setOutputChannel(message.getOutputChannel());\n    request.setInteractionId(\"\");\n\n    appendMessageData(customer, userInfo, contactPerson, request);\n\n    PrepareForSignResponseDocument response;\n    try {\n      response = stub.prepareForSign(requestDoc, null);\n    } catch (RemoteException | CuscoError e) {\n      LOGGER.error(\"Error while preparing for sign\", e);\n      CusCoResponse cuscoResponse = new CusCoResponse();\n      cuscoResponse.setJobId(message.getJobId());\n      cuscoResponse.setStatus(\"500\");\n      return cuscoResponse;\n    }\n    CusCoResponse cuscoResponse = new CusCoResponse();\n    cuscoResponse.setJobId(message.getJobId());\n    cuscoResponse.setStatus(\"200\");\n\n    String responseDocStr = response.getPrepareForSignResponse().getDocument();\n    byte[] responseDoc = responseDocStr.getBytes();\n    cuscoResponse.setRawData(Base64.decodeBase64(responseDoc));\n    return cuscoResponse;\n  }\n\n  private CusCoMessageBuilder getCuscoMessageBuilder() {\n    CusCoConfigurtationBean configBean = new CusCoConfigurtationBean(SOURCE_SYSTEM_CUCO, DUMMY_PSWD);\n    return new CusCoMessageBuilder(configBean);\n  }\n\n  void appendMessageData(Customer customer, UserInfo userInfo, String contactPerson, PrepareForSignRequestType request) {\n    Assert.notNull(customer);\n    Assert.notNull(userInfo);\n\n    Map<String, String> parameterMap = getRequestParameters(customer, userInfo, contactPerson);\n\n    DocumentBuilderFactory dbfac = DocumentBuilderFactory.newInstance();\n    DocumentBuilder docBuilder = null;\n    Document doc = null;\n    try {\n      docBuilder = dbfac.newDocumentBuilder();\n      doc = docBuilder.newDocument();\n\n      URL namespaceURL = new URL(\"http://crm.mobilkom.at/cusco\");\n      Element documentNode = doc.createElementNS(namespaceURL.toString(), \"Document\");\n      doc.appendChild(documentNode);\n      for (Map.Entry<String, String> entry : parameterMap.entrySet()) {\n        if (entry.getKey() != null && entry.getValue() != null) {\n          addChildTextNodeToParent(entry.getKey(), entry.getValue(), documentNode, doc);\n        }\n      }\n\n      String xmlData = domToString(doc);\n      XmlObject document = XmlObject.Factory.parse(xmlData);\n\n      VariableData data = request.addNewVariableData();\n      data.set(document);\n    } catch (XmlException | ParserConfigurationException | TransformerException | MalformedURLException e) {\n      LOGGER.error(\"Error while converting string to xml\", e);\n    }\n  }\n\n  private Map<String, String> getRequestParameters(Customer customer, UserInfo userInfo, String contactPerson) {\n    Map<String, String> parameterMap = new HashMap<String, String>();\n    parameterMap.put(\"PartyId\", Long.toString(customer.getId()));\n    parameterMap.put(\"PartyBirthdate\", customer.getBirthdate() != null ? DATEFORMAT.format(customer.getBirthdate()) : \"\");\n    if (StringUtils.equalsIgnoreCase(\"Firma\", customer.getSalutation())) {\n      parameterMap.put(\"CustomerIsCompany\", Boolean.toString(true));\n      parameterMap.put(\"ContractCompNumber\", customer.getCommercialRegisterNumber());\n    } else {\n      parameterMap.put(\"CustomerIsCompany\", Boolean.toString(false));\n    }\n    parameterMap.put(\"ContractTitle\", customer.getTitle());\n    parameterMap.put(\"ContractSalutation\", customer.getSalutation());\n    parameterMap.put(\"ContractFirstName\", customer.getFirstname());\n    parameterMap.put(\"ContractLastName\", customer.getLastname());\n    parameterMap.put(\"ContractStreet\", customer.getStreet());\n    parameterMap.put(\"ContractHousenr\", customer.getHousenumber());\n    parameterMap.put(\"ContractCountry\", customer.getCountry());\n    parameterMap.put(\"ContractZipCode\", customer.getPoBox());\n    parameterMap.put(\"ContractCity\", customer.getCity());\n    parameterMap.put(\"DealerId\", userInfo.getUsername());\n    parameterMap.put(\"DealerSalesPerson\", userInfo.getName());\n    parameterMap.put(\"ContactPersonFullName\", contactPerson);\n    parameterMap.put(\"ContractLastChangeStr\", DateTime.now().toString(\"dd.MM.yyyy\"));\n    parameterMap.put(\"DealerCity\", userInfo.getBiteUser().getManagementLevel1OrgUnitDescription());\n    return parameterMap;\n  }\n\n  private void addChildTextNodeToParent(String childTag, String childText, Element parent, Document doc) {\n    Element node = doc.createElement(childTag);\n    Text text = doc.createTextNode(childText);\n    node.appendChild(text);\n    parent.appendChild(node);\n  }\n\n  private String domToString(Document doc) throws TransformerException {\n    String ret = null;\n\n    TransformerFactory transfac = TransformerFactory.newInstance();\n    Transformer trans = transfac.newTransformer();\n    trans.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\n    trans.setOutputProperty(OutputKeys.INDENT, \"yes\");\n\n    StringWriter sw = new StringWriter();\n    StreamResult result = new StreamResult(sw);\n    DOMSource source = new DOMSource(doc);\n    trans.transform(source, result);\n    ret = sw.toString();\n\n    return ret;\n  }\n\n  @Override\n  public CusCoResponse checkStatusForSigned(String jobId) {\n    Assert.hasText(jobId);\n    CusCoMessage message = getCuscoMessageBuilder().createForOperation(OP_CHECK_STATUS_FOR_SIGNED, jobId);\n\n    CheckStatusForSignedRequestDocument requestDoc = CheckStatusForSignedRequestDocument.Factory.newInstance();\n    CheckStatusForSignedRequestType request = requestDoc.addNewCheckStatusForSignedRequest();\n    request.setJobId(message.getJobId());\n    request.setPassword(message.getPassword());\n    request.setSendingSystem(message.getSourceSystem());\n\n    CheckStatusForSignedResponseDocument response;\n    try {\n      response = stub.checkStatusForSigned(requestDoc, null);\n    } catch (RemoteException | CuscoError e) {\n      LOGGER.error(\"Error while checking status for signed\", e);\n      CusCoResponse cuscoResponse = new CusCoResponse();\n      cuscoResponse.setJobId(message.getJobId());\n      cuscoResponse.setStatus(\"500\");\n      return cuscoResponse;\n    }\n    CusCoResponse cuscoResponse = new CusCoResponse();\n    cuscoResponse.setJobId(message.getJobId());\n\n    CheckStatusForSignedResponseType responseType = response.getCheckStatusForSignedResponse();\n    cuscoResponse.setStatus(responseType.getStatus());\n    return cuscoResponse;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MarketplaceInventoryServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/MarketplaceInventoryServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 9268,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.HashMap;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.bite.core.shared.util.CommonUtils;\nimport at.a1ta.cuco.core.service.MarketplaceInventoryService;\nimport at.a1ta.cuco.core.shared.dto.product.AccountNode;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultProductNode;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultSubscriptionNode;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultSubscriptionType;\nimport at.a1ta.cuco.core.shared.dto.product.Location;\nimport at.a1ta.cuco.core.shared.dto.product.Location.LocationType;\nimport at.a1ta.cuco.core.shared.dto.product.LocationNode;\nimport at.a1ta.cuco.core.shared.dto.product.MetaData;\nimport at.a1ta.cuco.core.shared.dto.product.MetaDataEntry;\nimport at.a1ta.cuco.core.shared.dto.product.MetaDataEntryType;\nimport at.a1telekom.eai.marketplaceinventory.GetMarketplaceSubscriptionsForPartyRequestDocument;\nimport at.a1telekom.eai.marketplaceinventory.GetMarketplaceSubscriptionsForPartyResType.Account;\nimport at.a1telekom.eai.marketplaceinventory.GetMarketplaceSubscriptionsForPartyResType.Account.Subscription;\nimport at.a1telekom.eai.marketplaceinventory.GetMarketplaceSubscriptionsForPartyResponseDocument;\nimport at.a1telekom.eai.marketplaceinventory.RequestType;\n\nimport com.telekomaustriagroup.esb.marketplaceinventory.MarketplaceInventoryStub;\n\n@Service\npublic class MarketplaceInventoryServiceImpl extends BaseEsbClient<MarketplaceInventoryStub> implements MarketplaceInventoryService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(MarketplaceInventoryServiceImpl.class);\n  @Autowired\n  private SettingService settingService;\n\n  @Autowired\n  private TextService textService;\n\n  private static SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd.MM.yyyy\");\n\n  private static final HashMap<String, String> DATE_FORMAT_REGEXPS = new HashMap<String, String>() {\n    {\n      put(\"^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$\", \"yyyy-MM-dd\");\n    }\n  };\n\n  @Override\n  public LocationNode getMarketplaceAccountsWithSubscriptionsForParty(long partyId) {\n    LocationNode locationNode = new LocationNode();\n    if (!settingService.getBooleanValue(\"productBrowser.showMarketPlaceSubscriptions\", false)) {\n      return locationNode;\n    }\n\n    try {\n      GetMarketplaceSubscriptionsForPartyRequestDocument reqDoc = GetMarketplaceSubscriptionsForPartyRequestDocument.Factory.newInstance();\n      RequestType addNewGetMarketplaceSubscriptionsForPartyRequest = reqDoc.addNewGetMarketplaceSubscriptionsForPartyRequest();\n      addNewGetMarketplaceSubscriptionsForPartyRequest.setPartyId(partyId + \"\");\n      reqDoc.setGetMarketplaceSubscriptionsForPartyRequest(addNewGetMarketplaceSubscriptionsForPartyRequest);\n\n      GetMarketplaceSubscriptionsForPartyResponseDocument response = stub.getMarketplaceSubscriptionsForParty(reqDoc, null);\n      final String statusLabel = textService.getByKeyWithDefaultText(\"productbrowser.marketplace.statusLabel\", \"Status:\").getText();\n      final String serviceStatusLabel = textService.getByKeyWithDefaultText(\"productbrowser.marketplace.serviceStatusLabel\", \"Service Status:\").getText();\n      final String periodLabel = textService.getByKeyWithDefaultText(\"productbrowser.marketplace.periodLabel\", \"Periode:\").getText();\n      if (response != null && response.getGetMarketplaceSubscriptionsForPartyResponse() != null && response.getGetMarketplaceSubscriptionsForPartyResponse().getAccountArray() != null\n          && response.getGetMarketplaceSubscriptionsForPartyResponse().getAccountArray().length > 0) {\n\n        Location location = new Location();\n        location.setAddress(\"Keine Adresse\");\n        location.setLocationId(\"unknown\");\n        location.setPartyId(partyId);\n        location.setLocationType(LocationType.HYBRID);\n        locationNode = new LocationNode();\n        locationNode.setId(\"unknown\");\n        locationNode.setLocation(location);\n        locationNode.getLocation().setLocationId(\"MarketplaceLocation\");\n        locationNode.getLocation().setPartyId(partyId);\n        locationNode.setDepth(0);\n        locationNode.setDisplayA1CoachLink(false);\n        locationNode.setFeasibilityCheckAvailable(false);\n        for (Account account : response.getGetMarketplaceSubscriptionsForPartyResponse().getAccountArray()) {\n          AccountNode accountNode = AccountNode.builder().accountNumber(account.getID()).parent(locationNode).build();\n          accountNode.setPartyId(partyId);\n          accountNode.setId(account.getID());\n          accountNode.setParent(locationNode);\n          accountNode.setCustomerName(account.getCustomerName());\n          accountNode.setDepth(1);\n          accountNode.setDisplayA1CoachLink(false);\n          accountNode.setFeasibilityCheckAvailable(false);\n          locationNode.addChild(accountNode);\n          DefaultSubscriptionNode subNode = new DefaultSubscriptionNode();\n          subNode.setAccountNumber(account.getID());\n          subNode.setDepth(2);\n          subNode.setSubscriptionId(account.getID());\n          subNode.setId(account.getID());\n          subNode.setType(DefaultSubscriptionType.Marketplace);\n          subNode.setTypeText(DefaultSubscriptionType.Marketplace.name());\n          subNode.setTopLevelProducts(textService.getByKeyWithDefaultText(\"productbrowser.marketplace.topLevelProductLabel\", \"A1 Marketplace\").getText());\n          subNode.setDisplayA1CoachLink(false);\n          subNode.setEffectiveDepthForView(0);\n          subNode.setPartyId(partyId);\n          subNode.setFeasibilityCheckAvailable(false);\n          subNode.setParent(accountNode);\n          subNode.setExpanded(false);\n          subNode.setChildDetailsLoaded(true);\n          accountNode.addChild(subNode);\n          for (Subscription sub : account.getSubscriptionArray()) {\n            DefaultProductNode prodNode = new DefaultProductNode();\n            prodNode.setId(sub.getID());\n            prodNode.setDepth(3);\n            prodNode.setEffectiveDepthForView(1);\n            prodNode.setPartyId(partyId);\n            prodNode.setProductName(sub.getName());\n            prodNode.setValidForStart(getDateInCuCoFormat(sub.getStartDate()));\n            prodNode.setCommitmentStartDate(getDateInCuCoFormat(sub.getStartDate()));\n            prodNode.setValidForEnd(getDateInCuCoFormat(sub.getExpirationDate()));\n            prodNode.setCommitmentEndDate(getDateInCuCoFormat(sub.getExpirationDate()));\n            prodNode.setProductStatus(sub.getStatus());\n            prodNode.setAutoVVLDuration(\"\");\n            prodNode.setAutoVVLEndDate(\"\");\n            prodNode.setAutoVVLStartDate(\"\");\n            prodNode.setText(sub.getName());\n            prodNode.setMatchingCallNumberWithRootSubscription(true);\n            MetaData metaData = new MetaData();\n            ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n            entries.add(new MetaDataEntry(periodLabel, periodLabel, sub.getPeriod(), MetaDataEntryType.STRING));\n            entries.add(new MetaDataEntry(statusLabel, statusLabel, sub.getStatus(), MetaDataEntryType.STRING));\n            entries.add(new MetaDataEntry(serviceStatusLabel, serviceStatusLabel, sub.getServiceStatus(), MetaDataEntryType.STRING));\n            metaData.put(entries);\n            prodNode.setMetaData(metaData);\n            prodNode.setProductCharacteristicValuesAsMetaData(new MetaData());\n            prodNode.getProductCharacteristicValuesAsMetaData().put(entries);\n            String productCharacteristicValues = \"\";\n            for (MetaDataEntry entry : prodNode.getProductCharacteristicValuesAsMetaData().getAll()) {\n              productCharacteristicValues += \"<pre-wrap style='font-family: Verdana;'>\" + entry.getName() + \" \" + entry.getValue() + \"</pre-wrap>\" + \"<br/>\";\n            }\n            prodNode.setProductCharacteristicValuesAsString(productCharacteristicValues);\n            accountNode.setDisplayA1CoachLink(false);\n            accountNode.setFeasibilityCheckAvailable(false);\n            prodNode.setParent(subNode);\n            subNode.addChild(prodNode);\n          }\n        }\n\n      }\n    } catch (Exception ex) {\n      LOGGER.error(\"Error while retrieving Marketplace subscriptions for party \" + partyId, ex);\n    }\n    return locationNode;\n  }\n\n  private String getDateInCuCoFormat(String inputDate) {\n    if (CommonUtils.cleanString(inputDate) == null) {\n      return inputDate;\n    }\n    try {\n      SimpleDateFormat orig = new SimpleDateFormat(determineDateFormat(inputDate));\n      Date date = orig.parse(inputDate);\n      return dateFormat.format(date);\n    } catch (Exception e) {\n      return inputDate;\n    }\n\n  }\n\n  private String determineDateFormat(String dateString) {\n    for (String regexp : DATE_FORMAT_REGEXPS.keySet()) {\n      if (dateString.toLowerCase().matches(regexp)) {\n        return DATE_FORMAT_REGEXPS.get(regexp);\n      }\n    }\n    return \"yyyy-mm-dd\";\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CucoLogsServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/impl/CucoLogsServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1147,
    "content": "package at.a1ta.cuco.core.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.dao.db.CucoLogsDao;\nimport at.a1ta.cuco.core.service.CucoLogsService;\nimport at.a1ta.cuco.core.shared.dto.BillingAccountNumber;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\n@Service\npublic class CucoLogsServiceImpl implements CucoLogsService {\n\n  @Autowired\n  private CucoLogsDao cucoLogsDao;\n\n  @Autowired\n  private SettingService settingService;\n  private static final String PARTYLOADED_LOGTYPE = \"Party Loaded\";\n\n  @Autowired\n  public CucoLogsServiceImpl(CucoLogsDao cucoLogsDao) {\n    this.cucoLogsDao = cucoLogsDao;\n  }\n\n  @Override\n  public void entryForPartyLoaded(Party party, UserInfo userInfo, BillingAccountNumber curBan) {\n    this.cucoLogsDao.insertLogEntryForPartyLoaded(party.getId(), userInfo.getName(), userInfo.getUsername(), curBan.getBan() + \"\",\n        settingService.getValueOrDefault(\"cucoLogsPartyLoadedLogType\", PARTYLOADED_LOGTYPE));\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/visitreport/VisitReportPrintService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/visitreport/VisitReportPrintService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 8201,
    "content": "package at.a1ta.cuco.core.service.visitreport;\n\nimport java.math.BigDecimal;\nimport java.text.DecimalFormat;\nimport java.text.NumberFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.bite.core.shared.dto.Text;\nimport at.a1ta.cuco.core.service.util.ReportUtil;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.DigitalSellingNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.InternetSpeed;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.InternetSpeedNew;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.InternetSpeedOld;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.MobilePhoneNew;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.MobilePhoneOld;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.MobileTariffNew;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.MobileTariffOld;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.Music;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.PaymentNew;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.PaymentOld;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.SecurityNew;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.SecurityOld;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.ServicesNew;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.ServicesOld;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.SmartHomeNew;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.SmartHomeOld;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.TVNew;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.TVOld;\nimport net.sf.jasperreports.engine.JRException;\nimport net.sf.jasperreports.engine.JasperPrint;\n\n@Service\npublic class VisitReportPrintService {\n\n  private static final NumberFormat numberFormat = new DecimalFormat(\"#0.00\");\n\n  private TextService textService;\n\n  public JasperPrint generateDigitalSellingNoteReport(final DigitalSellingNote note, final String nameOfUser) throws JRException {\n    String jrxml = \"at/a1ta/cuco/core/service/visitreport/digitalSellingNote.jrxml\";\n    Map<String, Object> params = createParamsForReport(nameOfUser, getText(\"si_vi_ds_summary_table_title_sum_old\"), getText(\"si_vi_ds_summary_table_title_sum_new\"), note.getComment());\n\n    ArrayList<DigitalSellingNotePrintModel> data = generateModel(note);\n    return ReportUtil.createReport(jrxml, data, params);\n  }\n\n  private ArrayList<DigitalSellingNotePrintModel> generateModel(DigitalSellingNote note) {\n    ArrayList<DigitalSellingNotePrintModel> list = new ArrayList<DigitalSellingNotePrintModel>();\n\n    InternetSpeed internetSpeed = note.getInternetSpeed();\n    InternetSpeedOld isOld = internetSpeed.getInternetSpeedOld();\n    InternetSpeedNew isNew = internetSpeed.getInternetSpeedNew();\n    if (shouldShow(isOld.getSum(), isOld.getComment(), isNew.getSum(), isNew.getComment())) {\n      list.add(getPrintModel(\"si_vi_ds_internet_speed_title\", isOld.getSum(), isOld.getComment(), isNew.getSum(), isNew.getComment()));\n    }\n\n    TVOld tvOld = note.getTv().getTvOld();\n    TVNew tvNew = note.getTv().getTvNew();\n    if (shouldShow(tvOld.getSum(), tvOld.getComment(), tvNew.getSum(), tvNew.getComment())) {\n      list.add(getPrintModel(\"si_vi_ds_tv_title\", tvOld.getSum(), tvOld.getComment(), tvNew.getSum(), tvNew.getComment()));\n    }\n\n    MobilePhoneOld mpOld = note.getMobilePhone().getMobilePhoneOld();\n    MobilePhoneNew mpNew = note.getMobilePhone().getMobilePhoneNew();\n    if (shouldShow(mpOld.getSum(), mpOld.getComment(), mpNew.getSum(), mpNew.getComment())) {\n      list.add(getPrintModel(\"si_vi_ds_mobile_phone_title\", mpOld.getSum(), mpOld.getComment(), mpNew.getSum(), mpNew.getComment()));\n    }\n\n    MobileTariffOld mtOld = note.getMobileTariff().getMobileTariffOld();\n    MobileTariffNew mtNew = note.getMobileTariff().getMobileTariffNew();\n    if (shouldShow(mtOld.getSum(), mtOld.getComment(), mtNew.getSum(), mtNew.getComment())) {\n      list.add(getPrintModel(\"si_vi_ds_mobile_tariff_title\", mtOld.getSum(), mtOld.getComment(), mtNew.getSum(), mtNew.getComment()));\n    }\n\n    Music music = note.getMusic();\n    if (shouldShow(music.getSum(), music.getCommentOld(), null, music.getCommentNew())) {\n      list.add(getPrintModel(\"si_vi_ds_music_title\", music.getSum(), music.getCommentOld(), null, music.getCommentNew()));\n    }\n\n    SecurityOld secOld = note.getSecurity().getSecurityOld();\n    SecurityNew secNew = note.getSecurity().getSecurityNew();\n    if (shouldShow(secOld.getSum(), secOld.getComment(), secNew.getSum(), secNew.getComment())) {\n      list.add(getPrintModel(\"si_vi_ds_security_title\", secOld.getSum(), secOld.getComment(), secNew.getSum(), secNew.getComment()));\n    }\n\n    SmartHomeOld smOld = note.getSmartHome().getSmartHomeOld();\n    SmartHomeNew smNew = note.getSmartHome().getSmartHomeNew();\n    if (shouldShow(smOld.getSum(), smOld.getComment(), smNew.getSum(), smNew.getComment())) {\n      list.add(getPrintModel(\"si_vi_ds_smart_home_title\", smOld.getSum(), smOld.getComment(), smNew.getSum(), smNew.getComment()));\n    }\n\n    PaymentOld payOld = note.getPayment().getPaymentOld();\n    PaymentNew payNew = note.getPayment().getPaymentNew();\n    if (shouldShow(payOld.getSum(), payOld.getComment(), payNew.getSum(), payNew.getComment())) {\n      list.add(getPrintModel(\"si_vi_ds_payment_title\", payOld.getSum(), payOld.getComment(), payNew.getSum(), payNew.getComment()));\n    }\n\n    ServicesOld svOld = note.getServices().getServicesOld();\n    ServicesNew svNew = note.getServices().getServicesNew();\n    if (shouldShow(svOld.getSum(), svOld.getComment(), svNew.getSum(), svNew.getComment())) {\n      list.add(getPrintModel(\"si_vi_ds_services_title\", svOld.getSum(), svOld.getComment(), svNew.getSum(), svNew.getComment()));\n    }\n\n    list.add(getPrintModel(\"si_vi_ds_summary_total_sum\", note.getSumOld(), null, note.getSumNew(), null));\n\n    return list;\n  }\n\n  private boolean shouldShow(BigDecimal priceOld, String noteOld, BigDecimal priceNew, String noteNew) {\n    if (hasPrice(priceOld) || hasNote(noteOld) || hasPrice(priceNew) || hasNote(noteNew)) {\n      return true;\n    }\n    return false;\n  }\n\n  private boolean hasPrice(BigDecimal price) {\n    return price != null && price.compareTo(BigDecimal.ZERO) != 0;\n  }\n\n  private boolean hasNote(String note) {\n    return note != null && !note.trim().isEmpty();\n  }\n\n  private DigitalSellingNotePrintModel getPrintModel(String textKey, BigDecimal priceOld, String noteOld, BigDecimal priceNew, String noteNew) {\n    String title = getText(textKey);\n    return new DigitalSellingNotePrintModel(title, formatPrice(priceOld), noteOld, formatPrice(priceNew), noteNew);\n  }\n\n  private String getText(String textKey) {\n    Text text = textService.getByKey(textKey);\n    if (text == null) {\n      return textKey;\n    }\n    return text.getText();\n  }\n\n  private Map<String, Object> createParamsForReport(final String nameOfUser, final String colOldHeader, final String colNewHeader, String comment) {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"nameOfUser\", nameOfUser);\n    params.put(\"templateFile\", \"at/a1ta/cuco/core/service/visitreport/styles.jrtx\");\n    params.put(\"bgLogo\", \"at/a1ta/cuco/core/service/visitreport/a1_piano.png\");\n    params.put(\"colOldHeader\", colOldHeader);\n    params.put(\"colNewHeader\", colNewHeader);\n    params.put(\"comment\", comment);\n    return params;\n  }\n\n  @Autowired\n  public void setTextService(TextService textService) {\n    this.textService = textService;\n  }\n\n  public static String formatPrice(BigDecimal price) {\n    if (price == null) {\n      return \"\";\n    }\n    return \"\u20ac \" + numberFormat.format(price);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/visitreport/VisitReportServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/visitreport/VisitReportServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 55943,
    "content": "package at.a1ta.cuco.core.service.visitreport;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.StringReader;\nimport java.io.StringWriter;\nimport java.net.URISyntaxException;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\nimport javax.xml.bind.JAXBContext;\nimport javax.xml.bind.JAXBException;\nimport javax.xml.bind.Marshaller;\nimport javax.xml.bind.Unmarshaller;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.apache.commons.io.FileUtils;\nimport org.apache.xmlbeans.XmlException;\nimport org.joda.time.DateTime;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.SerializationUtils;\n\nimport com.google.gson.Gson;\nimport com.telekomaustriagroup.esb.cuscocustomercontact.ErrorMessage;\n\nimport at.a1ta.bite.core.server.service.LocalSettingService;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.AuthorityHelper;\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.bite.data.cusco.CusCoConfigurtationBean;\nimport at.a1ta.bite.data.cusco.CusCoMessage;\nimport at.a1ta.bite.data.cusco.CusCoMessageBuilder;\nimport at.a1ta.bite.data.cusco.service.CuscoCustomerContactService;\nimport at.a1ta.cuco.core.dao.db.AttributeDao;\nimport at.a1ta.cuco.core.dao.db.impl.PartyDaoImpl;\nimport at.a1ta.cuco.core.dao.db.visitreport.VisitReportDao;\nimport at.a1ta.cuco.core.service.POSService;\nimport at.a1ta.cuco.core.service.SalesInfoService;\nimport at.a1ta.cuco.core.service.impl.MailService;\nimport at.a1ta.cuco.core.service.impl.NoteMailHelper;\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig;\nimport at.a1ta.cuco.core.shared.dto.AttributeConfig.Groupings;\nimport at.a1ta.cuco.core.shared.dto.Auth;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.SalesConvEmailData;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.AppointmentNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.CompetitorNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.HistoryNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.HistoryNote.HistoryLevel;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.HistoryNote.HistoryTitle;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SimpleNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.Task;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.Task.TaskStatus;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.VisitReportSuccessorExistsException;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.ProductHistoryItem;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.SalesConvNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.DigitalSellingNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.FileAttachment;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.GenericNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSOrgUnit;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProduct;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote;\nimport net.sf.jasperreports.engine.JRException;\nimport net.sf.jasperreports.engine.JasperPrint;\n\n@Service\npublic class VisitReportServiceImpl implements VisitReportService {\n\n  private static final String OUTPUT_CHANNEL_EMAIL = \"Email\";\n  private static final String SOURCE_SYSTEM_CUCO = \"CuCo\";\n  private static final String DUMMY_PSWD = \"no-password\";\n\n  public static final String noteAttachmentTemplateName = \"salesInfo.note.attachment.template.name\";\n  public static final String noteAttachmentTemplate = \"salesInfo.note.attachment.template\";\n  public static final String noteAttachmentTemplateAttachments = \"salesInfo.note.attachment.template.attachments\";\n  private final static Logger logger = LoggerFactory.getLogger(VisitReportServiceImpl.class);\n  private final Gson gson = new Gson();\n\n  @Autowired\n  private VisitReportDao visitReportDao;\n\n  @Autowired\n  private AttributeDao attributeDao;\n\n  @Autowired\n  private SalesInfoService salesInfoService;\n\n  @Autowired\n  private LocalSettingService localSettingService;\n\n  @Autowired\n  private SettingService settingService;\n\n  @Autowired\n  @Qualifier(\"cucoCustomerDao\")\n  PartyDaoImpl partyDao;\n\n  @Autowired\n  MailService mailService;\n\n  @Autowired\n  POSService posService;\n\n  @Autowired\n  CuscoCustomerContactService cuscoCustomerContactService;\n\n  @Autowired\n  VisitReportPrintService visitReportPrintService;\n\n  @Override\n  public Collection<SBSProduct> getSBSProducts() {\n    return visitReportDao.loadSBSProducts(SalesInfoNoteType.SI_VR_SBS_PRODUCT_NOTE);\n  }\n\n  @Override\n  public Collection<SBSProduct> getAllSBSProducts() {\n    return visitReportDao.loadAllSBSProducts();\n  }\n\n  @Override\n  public Collection<SBSProduct> getSalesConvProducts() {\n    return visitReportDao.loadSBSProducts(SalesInfoNoteType.SI_SALES_CONV_PRODUCT_NOTE);\n  }\n\n  @Override\n  public GenericNote getGenericNoteByNoteId(long noteId) {\n    GenericNote note = visitReportDao.loadGenericNoteByNoteId(noteId);\n    note.setParty(partyDao.loadParty(note.getPartyId()));\n    return note;\n  }\n\n  @Override\n  public SBSNote getSBSNoteByNoteId(long noteId) {\n    SBSNote note = visitReportDao.loadSBSNoteByNoteId(noteId, settingService.getBooleanValue(\"salesInfo.note.visitReport.experimentalQueryActive\", false));\n\n    note.setParty(partyDao.loadParty(note.getPartyId()));\n\n    ArrayList<SalesInfoNote> tasks = new ArrayList<SalesInfoNote>();\n    for (SalesInfoNote task : note.getTasks()) {\n      switch (task.getSalesInfoNoteType()) {\n        case SI_COMPETITOR_NOTE:\n          tasks.add(salesInfoService.getCompetitorNoteByNoteId(task.getSalesInfoNoteId()));\n          break;\n        case SI_SIMPLE_NOTE:\n          tasks.add(salesInfoService.getSimpleNoteByNoteId(task.getSalesInfoNoteId()));\n          break;\n        default:\n          break;\n      }\n    }\n    note.setTasks(tasks);\n\n    ArrayList<AppointmentNote> appointments = new ArrayList<AppointmentNote>();\n\n    for (SalesInfoNote task : note.getAppointments()) {\n      switch (task.getSalesInfoNoteType()) {\n        case SI_APPOINTMENT_NOTE:\n          appointments.add(salesInfoService.getAppointmentNoteByNoteId(task.getSalesInfoNoteId()));\n          break;\n        default:\n          break;\n      }\n    }\n    note.setAppointments(appointments);\n    SBSNote savedNoteInstance = new SBSNote();\n    try {\n      savedNoteInstance = (SBSNote) SerializationUtils.deserialize(SerializationUtils.serialize(note));\n    } catch (Exception e) {\n      logger.warn(\"Error while cloaning SBS Note\", e);\n    } finally {\n      note.setSavedInstance(savedNoteInstance);\n    }\n    return note;\n  }\n\n  @Override\n  public Collection<Attribute> getSBSNoteTemplateReflection() {\n    return visitReportDao.loadSalesInfoAttributesByGrouping(AttributeConfig.Groupings.VISITREPORT_SBS_REFLECTION.name());\n  }\n\n  @Override\n  public Collection<Attribute> getSBSNoteTemplateFeedback() {\n    return visitReportDao.loadSalesInfoAttributesByGrouping(AttributeConfig.Groupings.VISITREPORT_SBS_FEEDBACK.name());\n  }\n\n  @Override\n  public Collection<Attribute> getSalesConvNoteTemplateFeedback() {\n    return visitReportDao.loadSalesInfoAttributesByGrouping(AttributeConfig.Groupings.VISITREPORT_SALES_CONV_FEEDBACK.name());\n  }\n\n  @Override\n  public ArrayList<Attribute> getToDoGroupNoteTemplateToDos() {\n    return new ArrayList<Attribute>(visitReportDao.loadSalesInfoAttributesByGrouping(AttributeConfig.Groupings.VISITREPORT_SBS_TODO_ITEM.name()));\n  }\n\n  @Override\n  public void saveGenericNote(GenericNote note, String attachmentsFolderName) {\n    if (note.getSalesInfoNoteId() == -1) {\n      insertGenericNote(note, attachmentsFolderName);\n    } else {\n      updateGenericNote(note);\n    }\n  }\n\n  private void insertGenericNote(GenericNote note, String attachmentsFolderName) {\n    salesInfoService.insertSalesInfoNote(note);\n    visitReportDao.insertGenericNote(note);\n    for (FileAttachment attachment : note.getFileAttachments()) {\n      attachment.setSalesInfoNoteId(note.getSalesInfoNoteId());\n      visitReportDao.insertFileAttachment(attachment);\n    }\n    File tempLocation = new File(getTempUploadPath(attachmentsFolderName));\n    File newLocation = new File(getUploadPath(note.getSalesInfoNoteId()));\n    try {\n      FileUtils.moveDirectory(tempLocation, newLocation);\n    } catch (Exception e) {\n    }\n\n    if (note.getPredecessorSalesInfoNoteId() != null) {\n      updateOriginalGenericNote(note);\n    }\n  }\n\n  @Override\n  public void saveQuotePdfAsFileAttachment(String fileName, byte[] quotePdfBytes, long salesConvNoteId, BiteUser currentUser) throws IOException {\n\n    File quotePdf = new File(getUploadPath(salesConvNoteId) + fileName);\n\n    byte[] decodeBase64 = Base64.decodeBase64(quotePdfBytes);\n\n    FileUtils.writeByteArrayToFile(quotePdf, decodeBase64);\n\n    FileAttachment attachment = new FileAttachment();\n    attachment.setCreationTimestamp(new Date());\n    attachment.setCreationUser(currentUser);\n    attachment.setFileName(fileName);\n    attachment.setSalesInfoNoteId(salesConvNoteId);\n\n    visitReportDao.insertFileAttachment(attachment);\n  }\n\n  private void updateOriginalGenericNote(GenericNote note) {\n    GenericNote predecessor = getGenericNoteByNoteId(note.getPredecessorSalesInfoNoteId());\n    if (predecessor != null && !predecessor.isDeleted()) {\n      for (FileAttachment attachment : predecessor.getFileAttachments()) {\n        File predecessorFile = new File(getUploadPath(predecessor.getSalesInfoNoteId()) + attachment.getFileName());\n        File successorFile = new File(getUploadPath(note.getSalesInfoNoteId()) + attachment.getFileName());\n        try {\n          FileUtils.copyFile(predecessorFile, successorFile);\n        } catch (IOException e) {\n        }\n      }\n    }\n  }\n\n  private void updateGenericNote(GenericNote note) {\n    salesInfoService.updateSalesInfoNote(note);\n    updateFileAttachments(note.getSalesInfoNoteId(), note.getFileAttachments());\n  }\n\n  private void updateFileAttachments(Long salesConvNoteId, List<FileAttachment> attachments) {\n    Collection<FileAttachment> dbAttachments = visitReportDao.loadFileAttachmentsByNote(salesConvNoteId);\n    for (FileAttachment dbAttachment : dbAttachments) {\n      boolean found = false;\n      for (FileAttachment attachment : attachments) {\n        if (attachment.getFileAttachmentId() == dbAttachment.getFileAttachmentId()) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        visitReportDao.deleteFileAttachment(dbAttachment.getFileAttachmentId());\n        File attachmentFile = new File(getUploadPath(salesConvNoteId) + dbAttachment.getFileName());\n        FileUtils.deleteQuietly(attachmentFile);\n      }\n    }\n    for (FileAttachment attachment : attachments) {\n      if (attachment.getFileAttachmentId() == -1) {\n        attachment.setSalesInfoNoteId(salesConvNoteId);\n        visitReportDao.insertFileAttachment(attachment);\n      }\n    }\n  }\n\n  private String getTempUploadPath(String uuid) {\n    String path = localSettingService.getValue(\"application_salesInfoNote_filePath\");\n    if (!path.endsWith(\"/\")) {\n      path += \"/\";\n    }\n    path += uuid;\n    if (!path.endsWith(\"/\")) {\n      path += \"/\";\n    }\n    return path;\n  }\n\n  private String getUploadPath(long salesInfoNoteId) {\n    String path = localSettingService.getValue(\"application_salesInfoNote_filePath\");\n    if (!path.endsWith(\"/\")) {\n      path += \"/\";\n    }\n    path += String.valueOf(salesInfoNoteId);\n    if (!path.endsWith(\"/\")) {\n      path += \"/\";\n    }\n    return path;\n  }\n\n  @Override\n  public Collection<SBSOrgUnit> getSBSOrgUnits() {\n    return visitReportDao.loadSBSOrgUnits();\n  }\n\n  @Override\n  public SBSNote createSuccessorSBSNote(long noteId, BiteUser authenticatedUser) {\n    SBSNote orgNote = getSBSNoteByNoteId(noteId);\n\n    SBSNote newNote = new SBSNote();\n    newNote.setSalesInfoNoteId(-1);\n    newNote.setSalesInfoNoteType(orgNote.getSalesInfoNoteType());\n    newNote.setPredecessorSalesInfoNoteId(noteId);\n    newNote.setPartyId(orgNote.getPartyId());\n    newNote.setNoteText(orgNote.getNoteText());\n\n    // copy task\n    DateTime taskStart = new DateTime();\n    taskStart = taskStart.withSecondOfMinute(0);\n    taskStart = taskStart.withMillisOfSecond(0);\n\n    Task task = new Task();\n    task.setActive(orgNote.getTask().isActive());\n    task.setStatus(orgNote.getTask().getStatus());\n    task.setType(orgNote.getTask().getType());\n    task.setAssigneeUser(orgNote.getTask().getAssigneeUser());\n    task.setStartDate(taskStart.toDate());\n    task.setEndDate(taskStart.plusMinutes(15).toDate());\n    task.setSendReminderMail(orgNote.getTask().isSendReminderMail());\n    task.setSendVCalendarMail(orgNote.getTask().isSendVCalendarMail());\n    task.setAddress(orgNote.getTask().getAddress());\n    newNote.setTask(task);\n\n    newNote.setCreationUser(authenticatedUser);\n    newNote.setCreationTimestamp(new Date());\n    newNote.setLastModificationUser(authenticatedUser);\n    newNote.setLastModificationTimestamp(new Date());\n    newNote.setDeleted(false);\n    newNote.setCommunicationType(orgNote.getCommunicationType());\n    newNote.setCommunicationChannel(orgNote.getCommunicationChannel());\n    newNote.setContactType(orgNote.getContactType());\n    newNote.setContactSource(orgNote.getContactSource());\n\n    newNote.setContactPerson(orgNote.getContactPerson());\n\n    // copy all product notes\n    newNote.setProductNotes(new ArrayList<SBSProductNote>());\n    for (SBSProductNote productNote : orgNote.getProductNotes()) {\n      if (!productNote.isDeleted()) {\n        productNote.setSalesInfoNoteId(-1);\n        productNote.getTask().setTaskId(-1);\n        newNote.getProductNotes().add(productNote);\n      }\n    }\n\n    // copy not deleted and open tasks\n    newNote.setTasks(new ArrayList<SalesInfoNote>());\n    for (SalesInfoNote subTask : orgNote.getTasks()) {\n      if (!subTask.isDeleted() && subTask.getTask() != null && (subTask.getTask().getStatus() == TaskStatus.OPEN || subTask.getTask().getStatus() == TaskStatus.WORKING)) {\n        switch (subTask.getSalesInfoNoteType()) {\n          case SI_COMPETITOR_NOTE:\n            CompetitorNote competitorNote = salesInfoService.getCompetitorNoteByNoteId(subTask.getSalesInfoNoteId());\n            competitorNote.setSalesInfoNoteId(-1);\n            competitorNote.getTask().setTaskId(-1);\n            newNote.getTasks().add(competitorNote);\n            break;\n          case SI_SIMPLE_NOTE:\n            SimpleNote simpleNote = salesInfoService.getSimpleNoteByNoteId(subTask.getSalesInfoNoteId());\n            simpleNote.setSalesInfoNoteId(-1);\n            simpleNote.getTask().setTaskId(-1);\n            newNote.getTasks().add(simpleNote);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n\n    newNote.setFeedbackAttributes(new ArrayList<Attribute>(visitReportDao.loadSalesInfoAttributesByGrouping(AttributeConfig.Groupings.VISITREPORT_SBS_FEEDBACK.name())));\n    newNote.setReflectionAttributes(new ArrayList<Attribute>(visitReportDao.loadSalesInfoAttributesByGrouping(AttributeConfig.Groupings.VISITREPORT_SBS_REFLECTION.name())));\n\n    return newNote;\n  }\n\n  @Override\n  public boolean hasSuccessorNote(long noteId) {\n    return visitReportDao.hasSuccessorNote(noteId);\n  }\n\n  @Override\n  public GenericNote createSuccessorGenericNote(long noteId, BiteUser authenticatedUser) {\n    GenericNote orgNote = getGenericNoteByNoteId(noteId);\n\n    GenericNote newNote = new GenericNote();\n    newNote.setSalesInfoNoteId(-1);\n    newNote.setSalesInfoNoteType(orgNote.getSalesInfoNoteType());\n    newNote.setPredecessorSalesInfoNoteId(noteId);\n    newNote.setPartyId(orgNote.getPartyId());\n    newNote.setNoteText(orgNote.getNoteText());\n\n    // copy task\n    DateTime taskStart = new DateTime();\n    taskStart = taskStart.withSecondOfMinute(0);\n    taskStart = taskStart.withMillisOfSecond(0);\n\n    Task task = new Task();\n    task.setActive(orgNote.getTask().isActive());\n    task.setStatus(orgNote.getTask().getStatus());\n    task.setType(orgNote.getTask().getType());\n    task.setAssigneeUser(orgNote.getTask().getAssigneeUser());\n    task.setStartDate(taskStart.toDate());\n    task.setEndDate(taskStart.plusMinutes(15).toDate());\n    task.setSendReminderMail(orgNote.getTask().isSendReminderMail());\n    task.setSendVCalendarMail(orgNote.getTask().isSendVCalendarMail());\n    task.setAddress(orgNote.getTask().getAddress());\n    newNote.setTask(task);\n\n    newNote.setCreationUser(authenticatedUser);\n    newNote.setCreationTimestamp(new Date());\n    newNote.setLastModificationUser(authenticatedUser);\n    newNote.setLastModificationTimestamp(new Date());\n    newNote.setDeleted(false);\n\n    newNote.setFileAttachments(orgNote.getFileAttachments());\n\n    return newNote;\n  }\n\n  @Override\n  public void deleteGenericNote(SalesInfoNote note, UserInfo currentUser) throws VisitReportSuccessorExistsException {\n    if (visitReportDao.hasSuccessorNote(note.getSalesInfoNoteId()) && !AuthorityHelper.hasAuthority(currentUser, Auth.SI_VR_SBS_NOTE_ADMIN)) {\n      throw new VisitReportSuccessorExistsException();\n    }\n    // create .deleted file in folder\n    String path = getUploadPath(note.getSalesInfoNoteId());\n    File deletedFile = new File(path + \".deleted\");\n    try {\n      deletedFile.createNewFile();\n    } catch (Exception e) {\n    }\n  }\n\n  @Override\n  public void deleteSBSNote(SalesInfoNote note, UserInfo currentUser) throws VisitReportSuccessorExistsException {\n    if (visitReportDao.hasSuccessorNote(note.getSalesInfoNoteId()) && !AuthorityHelper.hasAuthority(currentUser, Auth.SI_VR_GENERIC_NOTE_ADMIN)) {\n      throw new VisitReportSuccessorExistsException();\n    }\n\n    // delete child notes\n    SBSNote sbsNote = getSBSNoteByNoteId(note.getSalesInfoNoteId());\n    for (SBSProductNote productNote : sbsNote.getProductNotes()) {\n      productNote.setDeleted(true);\n      productNote.setLastModificationTimestamp(new Date());\n      productNote.setLastModificationUser(currentUser.getBiteUser());\n      salesInfoService.updateSalesInfoNote(productNote);\n    }\n    for (SalesInfoNote task : sbsNote.getTasks()) {\n      task.setDeleted(true);\n      task.setLastModificationTimestamp(new Date());\n      task.setLastModificationUser(currentUser.getBiteUser());\n      salesInfoService.updateSalesInfoNote(task);\n    }\n  }\n\n  @Override\n  public void deleteSalesConvNote(SalesInfoNote note, UserInfo currentUser) {\n\n    // delete child notes\n    SalesConvNote salesConvNote = getSalesConvNoteByNoteId(note.getSalesInfoNoteId());\n    for (SBSProductNote productNote : salesConvNote.getProductNotes()) {\n      productNote.setDeleted(true);\n      productNote.setLastModificationTimestamp(new Date());\n      if (currentUser != null) {\n        productNote.setLastModificationUser(currentUser.getBiteUser());\n      } else {\n        productNote.setLastModificationUser(note.getLastModificationUser());\n      }\n      visitReportDao.updateSBSProductNote(productNote);\n      salesInfoService.updateSalesInfoNote(productNote);\n    }\n  }\n\n  public void deleteSalesConvNoteWithoutTimeUpdates(SalesInfoNote note) {\n\n    // delete child notes\n    SalesConvNote salesConvNote = getSalesConvNoteByNoteId(note.getSalesInfoNoteId());\n    for (SBSProductNote productNote : salesConvNote.getProductNotes()) {\n      productNote.setDeleted(true);\n      visitReportDao.updateSBSProductNote(productNote);\n      salesInfoService.updateSalesInfoNote(productNote);\n    }\n  }\n\n  public void deleteSBSNoteWithoutTimeUpdates(SalesInfoNote note) {\n\n    // delete child notes\n    SBSNote sbsNote = getSBSNoteByNoteId(note.getSalesInfoNoteId());\n    for (SBSProductNote productNote : sbsNote.getProductNotes()) {\n      productNote.setDeleted(true);\n      salesInfoService.updateSalesInfoNote(productNote);\n    }\n\n    for (ToDoGroupNote todoGroup : sbsNote.getProductNoteGroups()) {\n      todoGroup.setDeleted(true);\n      salesInfoService.updateSalesInfoNote(todoGroup);\n\n      for (SBSProductNote productNote : todoGroup.getRelatedNotes()) {\n        productNote.setDeleted(true);\n        salesInfoService.updateSalesInfoNote(productNote);\n        for (SalesInfoNote historyNote : productNote.getHistoryNotes()) {\n          historyNote.setDeleted(true);\n          salesInfoService.updateSalesInfoNote(historyNote);\n        }\n      }\n      for (SalesInfoNote historyNote : todoGroup.getHistoryNotes()) {\n        historyNote.setDeleted(true);\n        salesInfoService.updateSalesInfoNote(historyNote);\n      }\n    }\n    for (SalesInfoNote product : sbsNote.getProductNotes()) {\n      product.setDeleted(true);\n      salesInfoService.updateSalesInfoNote(product);\n      for (SalesInfoNote historyNote : product.getHistoryNotes()) {\n        historyNote.setDeleted(true);\n        salesInfoService.updateSalesInfoNote(historyNote);\n      }\n    }\n\n    for (SalesInfoNote historyNote : sbsNote.getHistoryNotes()) {\n      if (((HistoryNote) historyNote).getLevel() == HistoryLevel.NOTE) {\n        historyNote.setDeleted(true);\n        salesInfoService.updateSalesInfoNote(historyNote);\n      }\n    }\n\n    for (SalesInfoNote appointmentNote : sbsNote.getAppointments()) {\n      appointmentNote.setDeleted(true);\n      salesInfoService.updateSalesInfoNote(appointmentNote);\n    }\n\n    for (SalesInfoNote task : sbsNote.getTasks()) {\n      task.setDeleted(true);\n      salesInfoService.updateSalesInfoNote(task);\n    }\n  }\n\n  private SBSProductNote getSBSProductConfig(String productId, SalesInfoNoteType type) {\n    String config = visitReportDao.loadSBSProductConfig(productId, type);\n\n    if (config != null) {\n      return gson.fromJson(config, SBSProductNote.class);\n    }\n    return new SBSProductNote();\n  }\n\n  @Override\n  public SBSProductNote getSBSProductConfig(String productId) {\n    return getSBSProductConfig(productId, SalesInfoNoteType.SI_VR_SBS_PRODUCT_NOTE);\n  }\n\n  @Override\n  public SBSProductNote getSalesConvProductConfig(String productId) {\n    return getSBSProductConfig(productId, SalesInfoNoteType.SI_SALES_CONV_PRODUCT_NOTE);\n  }\n\n  @Override\n  public SalesConvNote getSalesConvNoteByNoteId(long noteId) {\n    SalesConvNote note = visitReportDao.loadSalesConvNoteByNoteId(noteId, settingService.getBooleanValue(\"salesInfo.note.visitReport.experimentalQueryActive\", false));\n    note.setParty(partyDao.loadParty(note.getPartyId()));\n    return note;\n  }\n\n  @Override\n  public Collection<SBSProductNote> getProductNotesByNoteId(long noteId) {\n    Collection<SBSProductNote> productNotes = visitReportDao.loadProductNotesByNote(noteId, settingService.getBooleanValue(\"salesInfo.note.visitReport.experimentalQueryActive\", false));\n\n    return productNotes;\n  }\n\n  @Override\n  public void saveSalesConvNote(SalesConvNote note, String attachmentsFolderName, BiteUser authenticatedUser) throws Exception {\n    modifySalesConvNote(note, attachmentsFolderName, authenticatedUser);\n  }\n\n  private void modifySalesConvNote(SalesConvNote note, String attachmentsFolderName, BiteUser authenticatedUser) throws Exception {\n    boolean isUpdateScenario = false;\n    // CMSYS-721 create new note entry for each modification\n    if (note.getSalesInfoNoteId() > -1) {\n      if (note.isDeleted()) {\n        // if note is deleted,no need to perform any other operation\n        salesInfoService.markNoteAsDeleted(note);\n        deleteSalesConvNoteWithoutTimeUpdates(note);\n        return;\n      }\n      isUpdateScenario = true;\n      // Mark existing notes deleted and save a new records for them to track history\n      note.setDeleted(true);\n      ArrayList<Long> alreadyDeletedNotes = new ArrayList<Long>();\n      for (SBSProductNote productNote : note.getProductNotes()) {\n        if (productNote.isDeleted()) {\n          alreadyDeletedNotes.add(productNote.getSalesInfoNoteId());\n        }\n        productNote.setDeleted(true);\n      }\n      salesInfoService.markNoteAsDeleted(note);\n      deleteSalesConvNoteWithoutTimeUpdates(note);\n\n      // Now save new record of sales conv note and product notes\n      note.setDeleted(false);\n      note.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n      note.setSalesInfoNoteId(-1);\n\n      List<SBSProductNote> notesForRemoval = new ArrayList<SBSProductNote>();\n      for (SBSProductNote productNote : note.getProductNotes()) {\n        // CMSYS-721 create new note entry for each modification, already removed note should not be added again.\n        if (alreadyDeletedNotes.contains(productNote.getSalesInfoNoteId())) {\n          notesForRemoval.add(productNote);\n          continue;\n        }\n        productNote.setSalesInfoNoteId(-1);\n        productNote.setDeleted(false);\n      }\n      note.getProductNotes().removeAll(notesForRemoval);\n    }\n    note.setLastModificationTimestamp(new Date());\n    note.setLastModificationUser(authenticatedUser);\n    for (Attribute attribute : note.getFeedbackAttributes()) {\n      attribute.setLastModifier(authenticatedUser);\n      attribute.setLastUpdate(new Date());\n    }\n\n    salesInfoService.insertSalesInfoNote(note);\n    NoteMailHelper noteMailHelper = new NoteMailHelper(this, salesInfoService, mailService);\n    noteMailHelper.sendInsertMails(note);\n\n    visitReportDao.insertSalesConvNote(note);\n    for (SBSProductNote productNote : note.getProductNotes()) {\n      productNote.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n      salesInfoService.insertSalesInfoNote(productNote);\n      visitReportDao.insertSBSProductNote(productNote);\n      insertNewHistoryItems(productNote);\n    }\n    for (Attribute attribute : note.getFeedbackAttributes()) {\n      attributeDao.insert(attribute);\n      visitReportDao.insertNoteAttribute(note.getSalesInfoNoteId(), attribute.getAttributeId());\n    }\n\n    for (FileAttachment attachment : note.getFileAttachments()) {\n      attachment.setSalesInfoNoteId(note.getSalesInfoNoteId());\n      if (isUpdateScenario && attachment.getFileAttachmentId() > -1) {\n        visitReportDao.updateFileAttachmentNotesRelation(attachment);\n      } else {\n        visitReportDao.insertFileAttachment(attachment);\n      }\n    }\n\n    File tempLocation = new File(getTempUploadPath(attachmentsFolderName));\n    File newLocation = new File(getUploadPath(note.getSalesInfoNoteId()));\n    try {\n      FileUtils.moveDirectory(tempLocation, newLocation);\n    } catch (Exception e) {\n    }\n\n    if (isUpdateScenario) {\n      File oldNoteAttachmentFolder = new File(getUploadPath(note.getPredecessorSalesInfoNoteId()));\n      File newNoteAttachmentFolder = new File(getUploadPath(note.getSalesInfoNoteId()));\n      try {\n        FileUtils.moveDirectory(oldNoteAttachmentFolder, newNoteAttachmentFolder);\n      } catch (Exception e) {\n      }\n    }\n  }\n\n  private void insertNewHistoryItems(SBSProductNote productNote) {\n    for (ProductHistoryItem historyItem : productNote.getHistoryItems()) {\n      if (historyItem.getId() == null) {\n        historyItem.setProductNoteId(productNote.getSalesInfoNoteId());\n        visitReportDao.insertProductHistoryItem(historyItem);\n      } else {\n        historyItem.setProductNoteId(productNote.getSalesInfoNoteId());\n        visitReportDao.updateProductHistoryItem(historyItem);\n      }\n    }\n  }\n\n  @Override\n  public boolean sendAttachmentEmail(SalesConvEmailData emailData, UserInfo authenticatedUser) throws IOException, URISyntaxException, XmlException, ErrorMessage {\n\n    emailData.setSender(visitReportDao.getTeamEmailAddress(authenticatedUser.getId()));\n\n    String emailTemplate = settingService.getValue(noteAttachmentTemplate);\n\n    emailTemplate = emailTemplate.replaceAll(\"\\\\{sender\\\\}\", emailData.getSender());\n    emailTemplate = emailTemplate.replaceAll(\"\\\\{receiver\\\\}\", emailData.getRecipient());\n    emailTemplate = emailTemplate.replaceAll(\"\\\\{subject\\\\}\", emailData.getSubject());\n    emailTemplate = emailTemplate.replaceAll(\"\\\\{message\\\\}\", emailData.getMessage());\n    emailTemplate = emailTemplate.replaceAll(\"\\\\{attachments\\\\}\", formatAttachments(emailData.getAttachmentUrls()));\n\n    CusCoMessage cuscoMessage = createCuscoMessage(emailData, emailTemplate);\n\n    return cuscoCustomerContactService.sendEmailDocument(cuscoMessage);\n  }\n\n  private CusCoMessage createCuscoMessage(SalesConvEmailData emailData, String xmlData) {\n    CusCoConfigurtationBean configBean = new CusCoConfigurtationBean(SOURCE_SYSTEM_CUCO, DUMMY_PSWD);\n    CusCoMessageBuilder builder = new CusCoMessageBuilder(configBean);\n    CusCoMessage cuscoMessage = builder.createForOperation(\"SALESNOTE\");\n    cuscoMessage.setOutputChannel(OUTPUT_CHANNEL_EMAIL);\n    cuscoMessage.setTemplateId(settingService.getValue(noteAttachmentTemplateName));\n    cuscoMessage.getParameterMap().put(\"XmlData\", xmlData);\n    cuscoMessage.getParameterMap().put(\"partyId\", emailData.getPartyId());\n    cuscoMessage.getParameterMap().put(\"sender\", emailData.getSender());\n    cuscoMessage.getParameterMap().put(\"recipient\", emailData.getRecipient());\n\n    return cuscoMessage;\n  }\n\n  private String formatAttachments(Map<String, String> attachmentUrls) {\n    String attachmentsBlock = \"\";\n    String attachmentTemplate = settingService.getValue(noteAttachmentTemplateAttachments);\n    for (Entry<String, String> url : attachmentUrls.entrySet()) {\n      String template = attachmentTemplate;\n      template = template.replaceAll(\"\\\\{attachmentName\\\\}\", url.getKey());\n      template = template.replaceAll(\"\\\\{attachmentUrl\\\\}\", url.getValue());\n      attachmentsBlock += template;\n    }\n\n    return attachmentsBlock;\n  }\n\n  @Override\n  public void saveSBSNote(SBSNote note, String attachmentsFolderName, BiteUser authenticatedUser) {\n    saveSBSNotesWithHistory(note, authenticatedUser);\n  }\n\n  private void updateOriginalSBSNote(SBSNote note, BiteUser authenticatedUser) {\n    SBSNote predecessor = getSBSNoteByNoteId(note.getPredecessorSalesInfoNoteId());\n    if (predecessor != null && !predecessor.isDeleted()) {\n      // set status of tasks\n      for (SalesInfoNote task : predecessor.getTasks()) {\n        if (!task.isDeleted() && task.getTask() != null && (task.getTask().getStatus() == TaskStatus.OPEN || task.getTask().getStatus() == TaskStatus.WORKING)) {\n          task.getTask().setStatus(TaskStatus.OBSOLESCED_BY_SUCCESSOR);\n          task.getTask().setActive(false);\n          task.setLastModificationUser(authenticatedUser);\n          task.setLastModificationTimestamp(new Date());\n          salesInfoService.updateSalesInfoNote(task);\n        }\n      }\n      // set status of appointment\n      for (SalesInfoNote appointment : predecessor.getAppointments()) {\n        if (!appointment.isDeleted() && appointment.getTask() != null && (appointment.getTask().getStatus() == TaskStatus.OPEN || appointment.getTask().getStatus() == TaskStatus.WORKING)) {\n          appointment.getTask().setStatus(TaskStatus.OBSOLESCED_BY_SUCCESSOR);\n          appointment.getTask().setActive(false);\n          appointment.setLastModificationUser(authenticatedUser);\n          appointment.setLastModificationTimestamp(new Date());\n          salesInfoService.updateSalesInfoNote(appointment);\n        }\n      }\n      // remove reminder date of product notes\n      for (SBSProductNote productNote : predecessor.getProductNotes()) {\n        if (!productNote.isDeleted()) {\n          productNote.getTask().setStatus(TaskStatus.OBSOLESCED_BY_SUCCESSOR);\n          productNote.getTask().setActive(false);\n          productNote.setLastModificationUser(authenticatedUser);\n          productNote.setLastModificationTimestamp(new Date());\n          salesInfoService.updateSalesInfoNote(productNote);\n        }\n      }\n\n      for (ToDoGroupNote groupNote : predecessor.getProductNoteGroups()) {\n        for (SBSProductNote productNote : groupNote.getRelatedNotes()) {\n          if (!productNote.isDeleted()) {\n            productNote.getTask().setStatus(TaskStatus.OBSOLESCED_BY_SUCCESSOR);\n            productNote.getTask().setActive(false);\n            productNote.setLastModificationUser(authenticatedUser);\n            productNote.setLastModificationTimestamp(new Date());\n            salesInfoService.updateSalesInfoNote(productNote);\n          }\n        }\n\n      }\n    }\n  }\n\n  // This method will save new record on each activity performed on SBS note to maintain the history of the changes done by the user\n  private void saveSBSNotesWithHistory(SBSNote note, BiteUser authenticatedUser) {\n    boolean isUpdateScenario = false;\n    if (note.getSalesInfoNoteId() > -1) {\n      isUpdateScenario = true;\n      if (note.isDeleted()) {\n        // if note is deleted,no need to perform any other operation\n        salesInfoService.markNoteAsDeleted(note);\n        deleteSBSNoteWithoutTimeUpdates(note);\n        return;\n      }\n      // start Mark existing notes deleted and save a new records for them to track history\n      note.setDeleted(true);\n      ArrayList<Long> alreadyDeletedNotes = new ArrayList<Long>();\n      for (SBSProductNote productNote : note.getProductNotes()) {\n        if (productNote.isDeleted()) {\n          alreadyDeletedNotes.add(productNote.getSalesInfoNoteId());\n        }\n        productNote.setDeleted(true);\n\n        for (SalesInfoNote historyNote : productNote.getHistoryNotes()) {\n          if (historyNote.isDeleted()) {\n            alreadyDeletedNotes.add(historyNote.getSalesInfoNoteId());\n          }\n          historyNote.setDeleted(true);\n\n        }\n      }\n\n      for (ToDoGroupNote groupNote : note.getProductNoteGroups()) {\n\n        if (groupNote.isDeleted()) {\n          alreadyDeletedNotes.add(groupNote.getSalesInfoNoteId());\n          groupNote.setDeleted(true);\n          // returning as deleted noted will be handled in sbsnote.getproductNotes\n          continue;\n        }\n\n        for (SalesInfoNote historyNote : groupNote.getHistoryNotes()) {\n          if (historyNote.isDeleted()) {\n            alreadyDeletedNotes.add(historyNote.getSalesInfoNoteId());\n          }\n          historyNote.setDeleted(true);\n        }\n\n        for (SBSProductNote productNote : groupNote.getRelatedNotes()) {\n          if (productNote.isDeleted()) {\n            alreadyDeletedNotes.add(productNote.getSalesInfoNoteId());\n          }\n          productNote.setDeleted(true);\n\n          for (SalesInfoNote historyNote : productNote.getHistoryNotes()) {\n            if (historyNote.isDeleted()) {\n              alreadyDeletedNotes.add(historyNote.getSalesInfoNoteId());\n            }\n            historyNote.setDeleted(true);\n          }\n        }\n\n      }\n      for (SalesInfoNote taskNote : note.getTasks()) {\n        if (taskNote.isDeleted()) {\n          alreadyDeletedNotes.add(taskNote.getSalesInfoNoteId());\n        }\n        taskNote.setDeleted(true);\n      }\n      for (SalesInfoNote appointmentNote : note.getAppointments()) {\n        if (appointmentNote.isDeleted()) {\n          alreadyDeletedNotes.add(appointmentNote.getSalesInfoNoteId());\n        }\n        appointmentNote.setDeleted(true);\n      }\n      salesInfoService.markNoteAsDeleted(note);\n      deleteSBSNoteWithoutTimeUpdates(note);\n      // End - Mark existing notes deleted and save a new records for them to track history\n      // Now save new record of sales conv note and product notes\n      note.setDeleted(false);\n      note.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n      note.setSalesInfoNoteId(-1);\n\n      List<SBSProductNote> notesForRemoval = new ArrayList<SBSProductNote>();\n      for (SBSProductNote productNote : note.getProductNotes()) {\n        // create new note entry for each modification, already removed note should not be added again.\n        if (alreadyDeletedNotes.contains(productNote.getSalesInfoNoteId())) {\n          notesForRemoval.add(productNote);\n          continue;\n        }\n        productNote.setSalesInfoNoteId(-1);\n        productNote.setDeleted(false);\n\n        List<HistoryNote> historyNotesForRemoval = new ArrayList<HistoryNote>();\n        for (HistoryNote historyNote : productNote.getHistoryNotes()) {\n          if (alreadyDeletedNotes.contains(historyNote.getSalesInfoNoteId())) {\n            historyNotesForRemoval.add(historyNote);\n            continue;\n          }\n          historyNote.setSalesInfoNoteId(-1);\n          historyNote.setDeleted(false);\n        }\n        productNote.getHistoryNotes().removeAll(historyNotesForRemoval);\n      }\n      note.getProductNotes().removeAll(notesForRemoval);\n\n      List<ToDoGroupNote> groupsForRemoval = new ArrayList<ToDoGroupNote>();\n      for (ToDoGroupNote groupNote : note.getProductNoteGroups()) {\n        // create new note entry for each modification, already removed note should not be added again.\n        if (alreadyDeletedNotes.contains(groupNote.getSalesInfoNoteId())) {\n          groupsForRemoval.add(groupNote);\n          continue;\n        }\n        groupNote.setSalesInfoNoteId(-1);\n        groupNote.setDeleted(false);\n\n        List<HistoryNote> historyNotesForRemoval = new ArrayList<HistoryNote>();\n        for (HistoryNote historyNote : groupNote.getHistoryNotes()) {\n          if (alreadyDeletedNotes.contains(historyNote.getSalesInfoNoteId())) {\n            historyNotesForRemoval.add(historyNote);\n            continue;\n          }\n          historyNote.setSalesInfoNoteId(-1);\n          historyNote.setDeleted(false);\n        }\n        groupNote.getHistoryNotes().removeAll(historyNotesForRemoval);\n\n        List<SBSProductNote> pnForRemoval = new ArrayList<SBSProductNote>();\n        for (SBSProductNote productNote : groupNote.getRelatedNotes()) {\n          // create new note entry for each modification, already removed note should not be added again.\n          if (alreadyDeletedNotes.contains(productNote.getSalesInfoNoteId())) {\n            pnForRemoval.add(productNote);\n            continue;\n          }\n          productNote.setSalesInfoNoteId(-1);\n          productNote.setDeleted(false);\n\n          List<HistoryNote> prodHistoryNotesForRemoval = new ArrayList<HistoryNote>();\n          for (HistoryNote historyNote : productNote.getHistoryNotes()) {\n            if (alreadyDeletedNotes.contains(historyNote.getSalesInfoNoteId())) {\n              prodHistoryNotesForRemoval.add(historyNote);\n              continue;\n            }\n            historyNote.setSalesInfoNoteId(-1);\n            historyNote.setDeleted(false);\n          }\n          productNote.getHistoryNotes().removeAll(prodHistoryNotesForRemoval);\n        }\n        groupNote.getRelatedNotes().removeAll(pnForRemoval);\n      }\n      note.getProductNoteGroups().removeAll(groupsForRemoval);\n\n      List<SalesInfoNote> tasksForRemoval = new ArrayList<SalesInfoNote>();\n      for (SalesInfoNote taskNote : note.getTasks()) {\n        // create new note entry for each modification, already removed note should not be added again.\n        if (alreadyDeletedNotes.contains(taskNote.getSalesInfoNoteId())) {\n          tasksForRemoval.add(taskNote);\n          continue;\n        }\n        taskNote.setSalesInfoNoteId(-1);\n        taskNote.setDeleted(false);\n      }\n      note.getTasks().removeAll(tasksForRemoval);\n\n      List<SalesInfoNote> appointmentsForRemoval = new ArrayList<SalesInfoNote>();\n      for (SalesInfoNote appointmentNote : note.getAppointments()) {\n        // create new note entry for each modification, already removed note should not be added again.\n        if (alreadyDeletedNotes.contains(appointmentNote.getSalesInfoNoteId())) {\n          appointmentsForRemoval.add(appointmentNote);\n          continue;\n        }\n        appointmentNote.setSalesInfoNoteId(-1);\n        appointmentNote.setDeleted(false);\n      }\n      note.getAppointments().removeAll(appointmentsForRemoval);\n    }\n\n    salesInfoService.insertSalesInfoNote(note);\n    visitReportDao.insertSBSNote(note);\n    for (SBSProductNote productNote : note.getProductNotes()) {\n      productNote.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n\n      salesInfoService.insertSalesInfoNote(productNote);\n      visitReportDao.insertSBSProductNote(productNote);\n\n      for (HistoryNote historyNote : productNote.getHistoryNotes()) {\n        historyNote.setPredecessorSalesInfoNoteId(productNote.getSalesInfoNoteId());\n        if (historyNote.getHistoryNoteId() == null || historyNote.getHistoryNoteId() < 1) {\n          historyNote.setHistoryNoteId(productNote.getSalesInfoNoteId());\n        }\n        salesInfoService.insertSalesInfoNote(historyNote);\n        visitReportDao.insertHistoryNote(historyNote);\n      }\n\n      // save attachments\n\n      for (FileAttachment attachment : productNote.getFileAttachments()) {\n        attachment.setSalesInfoNoteId(productNote.getSalesInfoNoteId());\n        if (isUpdateScenario && attachment.getFileAttachmentId() > -1) {\n          visitReportDao.updateFileAttachmentNotesRelation(attachment);\n        } else {\n          visitReportDao.insertFileAttachment(attachment);\n\n          File currentFileName = new File(getUploadPath(productNote.getPartyId()) + \"/\" + attachment.getFileName());\n          File newFileName = new File(getUploadPath(productNote.getPartyId()) + \"/\" + attachment.getFileAttachmentId());\n          try {\n            currentFileName.renameTo(newFileName);\n          } catch (Exception ex) {\n            logger.error(\"Error while Trying to move file location from \" + currentFileName.getAbsolutePath() + \"  to \" + newFileName.getAbsolutePath(), ex);\n          }\n        }\n      }\n\n    }\n    for (Attribute attribute : note.getReflectionAttributes()) {\n      attributeDao.insert(attribute);\n      visitReportDao.insertNoteAttribute(note.getSalesInfoNoteId(), attribute.getAttributeId());\n    }\n    for (Attribute attribute : note.getFeedbackAttributes()) {\n      attributeDao.insert(attribute);\n      visitReportDao.insertNoteAttribute(note.getSalesInfoNoteId(), attribute.getAttributeId());\n    }\n    for (SalesInfoNote task : note.getTasks()) {\n      task.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n      salesInfoService.insertSalesInfoNote(task);\n      for (HistoryNote historyNote : task.getHistoryNotes()) {\n        historyNote.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n        if (historyNote.getHistoryNoteId() == null || historyNote.getHistoryNoteId() < 1) {\n          historyNote.setHistoryNoteId(task.getSalesInfoNoteId());\n        }\n        salesInfoService.insertSalesInfoNote(historyNote);\n        visitReportDao.insertHistoryNote(historyNote);\n      }\n    }\n    for (SalesInfoNote appointments : note.getAppointments()) {\n      appointments.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n      salesInfoService.insertSalesInfoNote(appointments);\n\n      for (HistoryNote historyNote : appointments.getHistoryNotes()) {\n        historyNote.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n        if (historyNote.getHistoryNoteId() == null || historyNote.getHistoryNoteId() < 1) {\n          historyNote.setHistoryNoteId(appointments.getSalesInfoNoteId());\n        }\n        salesInfoService.insertSalesInfoNote(historyNote);\n        visitReportDao.insertHistoryNote(historyNote);\n      }\n    }\n\n    for (HistoryNote historyNote : note.getHistoryNotes()) {\n      // only process history notes at sbsnote level, others will be handled individually\n      if (historyNote.getLevel() == HistoryLevel.NOTE) {\n        historyNote.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n        if (historyNote.getHistoryNoteId() == null || historyNote.getHistoryNoteId() < 1) {\n          historyNote.setHistoryNoteId(note.getSalesInfoNoteId());\n        }\n        salesInfoService.insertSalesInfoNote(historyNote);\n        visitReportDao.insertHistoryNote(historyNote);\n      }\n    }\n\n    for (ToDoGroupNote groupNote : note.getProductNoteGroups()) {\n      if (groupNote.isDeleted()) {\n        continue;\n      }\n      groupNote.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n      // Check if assignee is changed, if so, send reminder email\n      if (groupNote.isSendCompletionEmail()) {\n        posService.sendToDoCompletedToPOSEmail(note.getParty(), groupNote, groupNote.getAssignedToDelearInfo(), groupNote.getEmailAdditionalText(), authenticatedUser);\n      }\n      if (groupNote.isSendAssignmentEmail()) {\n        posService.sendToDoAssignedToPOSEmail(note.getParty(), groupNote, groupNote.getAssignedToDelearInfo(), groupNote.getEmailAdditionalText(), authenticatedUser);\n      }\n      salesInfoService.insertSalesInfoNote(groupNote);\n      visitReportDao.insertSBSToDoGroupNote(groupNote);\n\n      for (HistoryNote historyNote : groupNote.getHistoryNotes()) {\n        historyNote.setPredecessorSalesInfoNoteId(groupNote.getSalesInfoNoteId());\n        if (historyNote.getHistoryNoteId() == null || historyNote.getHistoryNoteId() < 1) {\n          historyNote.setHistoryNoteId(groupNote.getSalesInfoNoteId());\n        }\n        salesInfoService.insertSalesInfoNote(historyNote);\n        visitReportDao.insertHistoryNote(historyNote);\n      }\n\n      for (SBSProductNote productNote : groupNote.getRelatedNotes()) {\n        if (productNote.isDeleted()) {\n          continue;\n        }\n        productNote.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n        productNote.setTodoGroupNoteId(groupNote.getSalesInfoNoteId());\n\n        salesInfoService.insertSalesInfoNote(productNote);\n        visitReportDao.insertSBSProductNote(productNote);\n\n        for (HistoryNote historyNote : productNote.getHistoryNotes()) {\n          historyNote.setPredecessorSalesInfoNoteId(productNote.getSalesInfoNoteId());\n          if (historyNote.getHistoryNoteId() == null || historyNote.getHistoryNoteId() < 1) {\n            historyNote.setHistoryNoteId(productNote.getSalesInfoNoteId());\n          }\n          salesInfoService.insertSalesInfoNote(historyNote);\n          visitReportDao.insertHistoryNote(historyNote);\n        }\n\n        // save attachments\n        for (FileAttachment attachment : productNote.getFileAttachments()) {\n          attachment.setSalesInfoNoteId(productNote.getSalesInfoNoteId());\n          if (isUpdateScenario && attachment.getFileAttachmentId() > -1) {\n            visitReportDao.updateFileAttachmentNotesRelation(attachment);\n          } else {\n            visitReportDao.insertFileAttachment(attachment);\n            File currentFileName = new File(getUploadPath(productNote.getPartyId()) + \"/\" + attachment.getFileName());\n            File newFileName = new File(getUploadPath(productNote.getPartyId()) + \"/\" + attachment.getFileAttachmentId());\n            try {\n              currentFileName.renameTo(newFileName);\n            } catch (Exception ex) {\n              logger.error(\"For GroupNote: Error while Trying to move file location from \" + currentFileName.getAbsolutePath() + \"  to \" + newFileName.getAbsolutePath(), ex);\n            }\n          }\n        }\n      }\n\n      for (Attribute attribute : groupNote.getAttributes()) {\n        attribute.setLastModifier(authenticatedUser);\n        attribute.setLastUpdate(new Date());\n        attribute.setKundeId(groupNote.getPartyId());\n        attributeDao.insert(attribute);\n        visitReportDao.insertNoteAttribute(groupNote.getSalesInfoNoteId(), attribute.getAttributeId());\n      }\n    }\n\n    if (note.getPredecessorSalesInfoNoteId() != null) {\n      updateOriginalSBSNote(note, note.getCreationUser());\n    }\n  }\n\n  @Override\n  public void sendAssignToDoEmail(Party party, SBSNote sbsNote, ToDoGroupNote groupNote, BiteUser biteUserFromSession) {\n    // TODO Auto-generated method stub\n\n  }\n\n  @Override\n  public SalesInfoNote getNoteForHistoryByNoteId(HistoryNote historyNote) {\n    if (historyNote.getLevel() == HistoryLevel.NOTE) {\n      if (historyNote.getHistoryTitle() == HistoryTitle.PRODUCT_DELETED) {\n        return visitReportDao.getProductNoteForHistoryByNoteId(historyNote.getHistoryNoteId());\n      } else if (historyNote.getHistoryTitle() == HistoryTitle.PRODUCT_GROUP_DELETED) {\n        return visitReportDao.getToDoGroupNoteForHistoryByNoteId(historyNote.getHistoryNoteId());\n      } else if (historyNote.getHistoryTitle() == HistoryTitle.TERMIN_CREATED || historyNote.getHistoryTitle() == HistoryTitle.TERMIN_DELETED\n          || historyNote.getHistoryTitle() == HistoryTitle.TERMIN_MIGRATED) {\n        return salesInfoService.getAppointmentNoteForHistoryByNoteId(historyNote.getHistoryNoteId());\n      } else if (historyNote.getHistoryTitle() == HistoryTitle.TASK_CREATD || historyNote.getHistoryTitle() == HistoryTitle.TASK_MODIFIED\n          || historyNote.getHistoryTitle() == HistoryTitle.TASK_DELETED) {\n        return salesInfoService.getTaskNoteForHistoryByNoteId(historyNote.getHistoryNoteId());\n      }\n      return visitReportDao.getNoteForHistoryByNoteId(historyNote.getHistoryNoteId());\n    } else if (historyNote.getLevel() == HistoryLevel.PRODUCT_NOTE) {\n      return visitReportDao.getProductNoteForHistoryByNoteId(historyNote.getHistoryNoteId());\n    } else if (historyNote.getLevel() == HistoryLevel.TODO_GROUP_NOTE) {\n      return visitReportDao.getToDoGroupNoteForHistoryByNoteId(historyNote.getHistoryNoteId());\n    }\n    return null;\n  }\n\n  @Override\n  public Collection<HistoryNote> getHistoryNotesByNoteId(Long predecessorSalesInfoNoteId) {\n    return visitReportDao.getHistoryNotesByNoteId(predecessorSalesInfoNoteId);\n  }\n\n  @Override\n  public void insertSBSProduct(SBSProduct product) {\n    visitReportDao.insertSBSProduct(product);\n  }\n\n  @Override\n  public void updateSBSProduct(SBSProduct product) {\n    visitReportDao.updateSBSProduct(product);\n  }\n\n  @Override\n  public DigitalSellingNote getDigitalSellingNoteByNoteId(long noteId) {\n    DigitalSellingNote note = visitReportDao.loadDigitalSellingNoteByNoteId(noteId);\n\n    DigitalSellingNote xmlNote = null;\n    if (note.getContent() != null) {\n      xmlNote = unmarshalDigitalSellingNote(note.getContent());\n    }\n    if (xmlNote != null) {\n      note.setHousehold(xmlNote.getHousehold());\n      note.setInternetSpeed(xmlNote.getInternetSpeed());\n      note.setTv(xmlNote.getTv());\n      note.setMobilePhone(xmlNote.getMobilePhone());\n      note.setMobileTariff(xmlNote.getMobileTariff());\n      note.setMusic(xmlNote.getMusic());\n      note.setSecurity(xmlNote.getSecurity());\n      note.setSmartHome(xmlNote.getSmartHome());\n      note.setPayment(xmlNote.getPayment());\n      note.setServices(xmlNote.getServices());\n      note.setSumNew(xmlNote.getSumNew());\n      note.setSumOld(xmlNote.getSumOld());\n      note.setComment(xmlNote.getComment());\n    }\n    note.setSavedInstance(xmlNote);\n    note.setParty(partyDao.loadParty(note.getPartyId()));\n    return note;\n  }\n\n  @Override\n  public DigitalSellingNote createSuccessorDigitalSellingNote(long noteId, BiteUser authenticatedUser) {\n    DigitalSellingNote orgNote = getDigitalSellingNoteByNoteId(noteId);\n\n    DigitalSellingNote newNote = new DigitalSellingNote();\n    newNote.setSalesInfoNoteId(-1);\n    newNote.setSalesInfoNoteType(orgNote.getSalesInfoNoteType());\n    newNote.setPredecessorSalesInfoNoteId(noteId);\n    newNote.setPartyId(orgNote.getPartyId());\n    newNote.setNoteText(orgNote.getNoteText());\n\n    // copy task\n    DateTime taskStart = new DateTime();\n    taskStart = taskStart.withSecondOfMinute(0);\n    taskStart = taskStart.withMillisOfSecond(0);\n\n    Task task = new Task();\n    task.setActive(orgNote.getTask().isActive());\n    task.setStatus(orgNote.getTask().getStatus());\n    task.setType(orgNote.getTask().getType());\n    task.setAssigneeUser(orgNote.getTask().getAssigneeUser());\n    task.setStartDate(taskStart.toDate());\n    task.setEndDate(taskStart.plusMinutes(15).toDate());\n    task.setSendReminderMail(orgNote.getTask().isSendReminderMail());\n    task.setSendVCalendarMail(orgNote.getTask().isSendVCalendarMail());\n    task.setAddress(orgNote.getTask().getAddress());\n    newNote.setTask(task);\n\n    newNote.setCreationUser(authenticatedUser);\n    newNote.setCreationTimestamp(new Date());\n    newNote.setLastModificationUser(authenticatedUser);\n    newNote.setLastModificationTimestamp(new Date());\n    newNote.setDeleted(false);\n\n    return newNote;\n  }\n\n  @Override\n  public void saveDigitalSellingNote(DigitalSellingNote note, BiteUser authenticatedUser) {\n    if (note.getSalesInfoNoteId() > -1) {\n      if (note.isDeleted()) {\n        // if note is deleted, no need to perform any other operation\n        salesInfoService.markNoteAsDeleted(note);\n        deleteSBSNoteWithoutTimeUpdates(note);\n        return;\n      }\n\n      note.setDeleted(true);\n      salesInfoService.markNoteAsDeleted(note);\n\n      note.setDeleted(false);\n      note.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n      note.setSalesInfoNoteId(-1);\n    }\n    note.setContent(marshalDigitalSellingNote(note));\n    insertDigitalSellingNote(note);\n    insertDigitalSellingAttributes(note, authenticatedUser);\n\n    for (HistoryNote historyNote : note.getHistoryNotes()) {\n      // only process history notes at digital selling level, others will be handled individually\n      if (historyNote.getLevel() == HistoryLevel.NOTE) {\n        historyNote.setPredecessorSalesInfoNoteId(note.getSalesInfoNoteId());\n        if (historyNote.getHistoryNoteId() == null || historyNote.getHistoryNoteId() < 1) {\n          historyNote.setHistoryNoteId(note.getSalesInfoNoteId());\n        }\n        salesInfoService.insertSalesInfoNote(historyNote);\n        visitReportDao.insertHistoryNote(historyNote);\n      }\n    }\n  }\n\n  private void insertDigitalSellingAttributes(DigitalSellingNote note, BiteUser authenticatedUser) {\n    for (Attribute attribute : note.getAttributes()) {\n      attribute.setLastModifier(authenticatedUser);\n      attribute.setLastUpdate(new Date());\n      attribute.setKundeId(note.getPartyId());\n      attributeDao.insert(attribute);\n      visitReportDao.insertNoteAttribute(note.getSalesInfoNoteId(), attribute.getAttributeId());\n    }\n  }\n\n  private void insertDigitalSellingNote(DigitalSellingNote note) {\n    salesInfoService.insertSalesInfoNote(note);\n    visitReportDao.insertDigitalSellingNote(note);\n  }\n\n  protected String marshalDigitalSellingNote(final DigitalSellingNote digitalSellingNote) {\n    try {\n      JAXBContext jc = JAXBContext.newInstance(DigitalSellingNote.class);\n      final Marshaller marshaller = jc.createMarshaller();\n\n      final StringWriter sw = new StringWriter();\n      marshaller.marshal(digitalSellingNote, sw);\n      return sw.toString();\n    } catch (JAXBException e) {\n      logger.error(\"Error while marshalling digital selling note\", e);\n    }\n    return null;\n  }\n\n  protected DigitalSellingNote unmarshalDigitalSellingNote(final String input) {\n    try {\n      final JAXBContext jc = JAXBContext.newInstance(DigitalSellingNote.class);\n      final Unmarshaller unmarshaller = jc.createUnmarshaller();\n      return (DigitalSellingNote) unmarshaller.unmarshal(new StringReader(input));\n    } catch (JAXBException e) {\n      logger.error(\"Error while unmarshalling digital selling note\", e);\n    }\n    return null;\n  }\n\n  @Override\n  public ArrayList<Attribute> getDigitalSellingNoteAttributes() {\n    ArrayList<Attribute> attributes = new ArrayList<Attribute>();\n    for (Groupings grouping : AttributeConfig.Groupings.values()) {\n      if (grouping.name().startsWith(\"DIGITAL_SELLING_\")) {\n        attributes.addAll(visitReportDao.loadSalesInfoAttributesByGrouping(grouping.name()));\n      }\n    }\n    return attributes;\n  }\n\n  @Override\n  public JasperPrint generatePartyDataReport(DigitalSellingNote note, String nameOfUser) throws JRException {\n    return visitReportPrintService.generateDigitalSellingNoteReport(note, nameOfUser);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/visitreport/DigitalSellingNotePrintModel.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/visitreport/DigitalSellingNotePrintModel.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1218,
    "content": "package at.a1ta.cuco.core.service.visitreport;\n\nimport java.io.Serializable;\n\npublic class DigitalSellingNotePrintModel implements Serializable {\n\n  private String title;\n  private String priceOld;\n  private String noteOld;\n  private String priceNew;\n  private String noteNew;\n\n  public DigitalSellingNotePrintModel(String title, String priceOld, String noteOld, String priceNew, String noteNew) {\n    super();\n    this.title = title;\n    this.priceOld = priceOld;\n    this.noteOld = noteOld;\n    this.priceNew = priceNew;\n    this.noteNew = noteNew;\n  }\n\n  public String getTitle() {\n    return title;\n  }\n\n  public void setTitle(String title) {\n    this.title = title;\n  }\n\n  public String getPriceOld() {\n    return priceOld;\n  }\n\n  public void setPriceOld(String priceOld) {\n    this.priceOld = priceOld;\n  }\n\n  public String getNoteOld() {\n    return noteOld;\n  }\n\n  public void setNoteOld(String noteOld) {\n    this.noteOld = noteOld;\n  }\n\n  public String getPriceNew() {\n    return priceNew;\n  }\n\n  public void setPriceNew(String priceNew) {\n    this.priceNew = priceNew;\n  }\n\n  public String getNoteNew() {\n    return noteNew;\n  }\n\n  public void setNoteNew(String noteNew) {\n    this.noteNew = noteNew;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/visitreport/VisitReportService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/visitreport/VisitReportService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4064,
    "content": "package at.a1ta.cuco.core.service.visitreport;\n\nimport java.io.IOException;\nimport java.net.URISyntaxException;\nimport java.util.ArrayList;\nimport java.util.Collection;\n\nimport org.apache.xmlbeans.XmlException;\n\nimport com.telekomaustriagroup.esb.cuscocustomercontact.ErrorMessage;\n\nimport at.a1ta.bite.core.shared.dto.BiteUser;\nimport at.a1ta.bite.core.shared.dto.UserInfo;\nimport at.a1ta.cuco.core.shared.dto.Attribute;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.SalesConvEmailData;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.HistoryNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.ToDoGroupNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.VisitReportSuccessorExistsException;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.salesconvnote.SalesConvNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.digitalselling.DigitalSellingNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.generic.GenericNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSOrgUnit;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProduct;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.visitreport.sbs.SBSProductNote;\nimport net.sf.jasperreports.engine.JRException;\nimport net.sf.jasperreports.engine.JasperPrint;\n\npublic interface VisitReportService {\n\n  Collection<SBSProduct> getSBSProducts();\n\n  GenericNote getGenericNoteByNoteId(long noteId);\n\n  SBSNote getSBSNoteByNoteId(long noteId);\n\n  Collection<Attribute> getSBSNoteTemplateReflection();\n\n  Collection<Attribute> getSBSNoteTemplateFeedback();\n\n  void saveSBSNote(SBSNote note, String attachmentsFolderName, BiteUser biteUser);\n\n  void saveGenericNote(GenericNote note, String attachmentsFolderName);\n\n  Collection<SBSOrgUnit> getSBSOrgUnits();\n\n  SBSNote createSuccessorSBSNote(long noteId, BiteUser authenticatedUser);\n\n  boolean hasSuccessorNote(long noteId);\n\n  GenericNote createSuccessorGenericNote(long noteId, BiteUser authenticatedUser);\n\n  void deleteSBSNote(SalesInfoNote note, UserInfo currentUser) throws VisitReportSuccessorExistsException;\n\n  void deleteGenericNote(SalesInfoNote note, UserInfo currentUser) throws VisitReportSuccessorExistsException;\n\n  void deleteSalesConvNote(SalesInfoNote note, UserInfo currentUser);\n\n  SBSProductNote getSBSProductConfig(String productId);\n\n  SalesConvNote getSalesConvNoteByNoteId(long noteId);\n\n  void saveSalesConvNote(SalesConvNote note, String attachmentsFolderName, BiteUser biteUser) throws Exception;\n\n  SBSProductNote getSalesConvProductConfig(String productId);\n\n  Collection<SBSProduct> getSalesConvProducts();\n\n  Collection<Attribute> getSalesConvNoteTemplateFeedback();\n\n  boolean sendAttachmentEmail(SalesConvEmailData emailData, UserInfo authenticatedUser) throws IOException, URISyntaxException, XmlException, ErrorMessage;\n\n  void saveQuotePdfAsFileAttachment(String fileName, byte[] quotePdfBytes, long salesConvNoteId, BiteUser currentUser) throws IOException;\n\n  Collection<SBSProductNote> getProductNotesByNoteId(long noteId);\n\n  ArrayList<Attribute> getToDoGroupNoteTemplateToDos();\n\n  void sendAssignToDoEmail(Party party, SBSNote sbsNote, ToDoGroupNote groupNote, BiteUser biteUserFromSession);\n\n  SalesInfoNote getNoteForHistoryByNoteId(HistoryNote historyNote);\n\n  Collection<HistoryNote> getHistoryNotesByNoteId(Long predecessorSalesInfoNoteId);\n\n  void insertSBSProduct(SBSProduct product);\n\n  void updateSBSProduct(SBSProduct product);\n\n  Collection<SBSProduct> getAllSBSProducts();\n\n  DigitalSellingNote getDigitalSellingNoteByNoteId(long noteId);\n\n  DigitalSellingNote createSuccessorDigitalSellingNote(long noteId, BiteUser authenticatedUser);\n\n  void saveDigitalSellingNote(DigitalSellingNote note, BiteUser authenticatedUser);\n\n  ArrayList<Attribute> getDigitalSellingNoteAttributes();\n\n  JasperPrint generatePartyDataReport(final DigitalSellingNote note, final String nameOfUser) throws JRException;\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/util/JasperUtil.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/util/JasperUtil.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 102,
    "content": "package at.a1ta.cuco.core.service.util;\n\n\npublic class JasperUtil {\n\n  public void doSomething() {}\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/util/ImageUtil.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/util/ImageUtil.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2244,
    "content": "package at.a1ta.cuco.core.service.util;\n\nimport java.awt.Image;\nimport java.awt.image.BufferedImage;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\n\nimport javax.imageio.ImageIO;\nimport javax.swing.ImageIcon;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n/**\n * contains image processing utility functions\n * \n * @author martin.gutenbrunner@telekom.at\n */\npublic final class ImageUtil {\n\n  private static final Logger logger = LoggerFactory.getLogger(ImageUtil.class);\n\n  private ImageUtil() {}\n\n  /**\n   * handles resizing of images. this is very useful for uploading video thumbnails and user's images which can be of\n   * specific sizes for display purposes\n   * \n   * @param imageData original image data\n   * @param width desired width\n   * @param height desired height\n   * @param preserveAspectRatio whether image must not be stretched\n   * @return resized image data\n   */\n  public static byte[] resizeImage(final byte imageData[], final int width, final int height, final boolean preserveAspectRatio) {\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"ImageUtil::resizeImage width:\" + width + \", height:\" + height);\n    }\n\n    final ImageIcon imageIcon = new ImageIcon(imageData);\n    final ImageIcon thumb;\n    final BufferedImage img;\n    int h = imageIcon.getIconHeight();\n    int w = imageIcon.getIconWidth();\n\n    if (h > height || w > width) {\n      if (preserveAspectRatio) {\n        // w / h = width / height.\n        if (w * height < width * h) {\n          w = -1;\n          h = height;\n        } else {\n          w = width;\n          h = -1;\n        }\n      } else {\n        w = width;\n        h = height;\n      }\n    }\n    thumb = new ImageIcon(imageIcon.getImage().getScaledInstance(w, h, Image.SCALE_SMOOTH));\n    img = new BufferedImage(thumb.getIconWidth(), thumb.getIconHeight(), BufferedImage.TYPE_INT_RGB);\n    img.getGraphics().drawImage(thumb.getImage(), 0, 0, null);\n    try {\n      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ImageIO.write(img, \"jpg\", baos);\n      return baos.toByteArray();\n    } catch (final IOException ioe) {\n      if (logger.isErrorEnabled()) {\n        logger.error(ioe.getMessage(), ioe);\n      }\n    }\n    return null;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/util/ReportUtil.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/util/ReportUtil.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2877,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.util;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Collection;\nimport java.util.Map;\n\nimport net.sf.jasperreports.engine.JRException;\nimport net.sf.jasperreports.engine.JasperCompileManager;\nimport net.sf.jasperreports.engine.JasperFillManager;\nimport net.sf.jasperreports.engine.JasperPrint;\nimport net.sf.jasperreports.engine.JasperReport;\nimport net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic final class ReportUtil {\n\n  private static final Logger logger = LoggerFactory.getLogger(ReportUtil.class);\n\n  private ReportUtil() {}\n\n  public static JasperPrint createReport(final String jrxml, @SuppressWarnings(\"rawtypes\") final Collection beanCollection, final Map<String, Object> params) {\n    InputStream inputStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(jrxml);\n    return createReport(inputStream, beanCollection, params);\n  }\n\n  public static JasperPrint createReport(final InputStream inputStream, @SuppressWarnings(\"rawtypes\") final Collection beanCollection, final Map<String, Object> params) {\n    try {\n      JasperReport report = JasperCompileManager.compileReport(inputStream);\n      return JasperFillManager.fillReport(report, params, new JRBeanCollectionDataSource(beanCollection));\n    } catch (JRException e) {\n      logger.error(e.getMessage(), e);\n      throw new RuntimeException(e);\n    } finally {\n      try {\n        inputStream.close();\n      } catch (IOException e) {\n        logger.error(e.getMessage(), e);\n      }\n    }\n  }\n\n  public static JasperReport createSubreport(String jrxml) {\n    InputStream inputStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(jrxml);\n    try {\n      return JasperCompileManager.compileReport(inputStream);\n    } catch (JRException e) {\n      logger.error(e.getMessage(), e);\n      throw new RuntimeException(e);\n    } finally {\n      try {\n        inputStream.close();\n      } catch (IOException e) {\n        logger.error(e.getMessage(), e);\n      }\n    }\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5413,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.Equipment;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentAttribute;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentConsignee;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentSum;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentTree;\nimport at.telekom.eai.businesscustomerequipment.xsd.EquipmentItem;\nimport at.telekom.eai.businesscustomerequipment.xsd.EquipmentResponse;\nimport at.telekom.eai.businesscustomerequipment.xsd.Merkmaltem;\n\n@Service\npublic class CustomerEquipmentHelper {\n\n  private static final Logger logger = LoggerFactory.getLogger(CustomerEquipmentHelper.class);\n\n  @Autowired\n  private CustomerEquipmentTranslator translator;\n\n  public EquipmentTree buildEquipmentTree(final EquipmentResponse response, final Party party, final EquipmentConsignee equipmentConsignee) {\n    final Map<String, ArrayList<EquipmentAttribute>> equipmentIdAttributesMap = buildEquipmentIdAttributesMap(response.getMerkmaltemArray());\n\n    final ArrayList<Equipment> equipments = translator.convertToEquipmentBeans(response.getEquipmentItemArray(), equipmentIdAttributesMap);\n    Collections.sort(equipments);\n\n    final Map<String, Equipment> equipmentIdEquipmentMap = buildEquipmentIdMap(equipments);\n\n    final EquipmentTree data = new EquipmentTree();\n    buildEquipmentTree(data, equipments, equipmentIdEquipmentMap);\n\n    data.setEquipmentConsignee(equipmentConsignee);\n    data.setEquipmentSums(getEquipmentSums(response));\n    data.setMaterialSum(calculateMaterialSum(data));\n    data.setParty(party);\n    return data;\n  }\n\n  private long calculateMaterialSum(EquipmentTree data) {\n    long allCount = 0;\n    for (EquipmentSum sum : data.getEquipmentSums()) {\n      allCount += sum.getCount();\n    }\n    return allCount;\n  }\n\n  public static String cleanEquipmentNumber(String equipmentNumber) {\n    return StringUtils.stripStart(equipmentNumber, \"0\");\n  }\n\n  private Map<String, ArrayList<EquipmentAttribute>> buildEquipmentIdAttributesMap(final Merkmaltem[] merkmalItems) {\n    final Map<String, ArrayList<EquipmentAttribute>> equipmentIdAttributesMap = new HashMap<String, ArrayList<EquipmentAttribute>>(\n        merkmalItems.length * 2);\n\n    for (final Merkmaltem merkmalItem : merkmalItems) {\n      final String equipmentId = cleanEquipmentNumber(merkmalItem.getEquipmentnummer());\n\n      ArrayList<EquipmentAttribute> attributes = equipmentIdAttributesMap.get(equipmentId);\n      if (attributes == null) {\n        attributes = new ArrayList<EquipmentAttribute>();\n        equipmentIdAttributesMap.put(equipmentId, attributes);\n      }\n\n      attributes.add(new EquipmentAttribute(equipmentId, merkmalItem.getMerkmalsname(), merkmalItem.getMerkmalswert()));\n      Collections.sort(attributes);\n    }\n\n    return equipmentIdAttributesMap;\n  }\n\n  private void buildEquipmentTree(final EquipmentTree rootEquipment, final ArrayList<Equipment> equipments,\n      final Map<String, Equipment> equipmentIdEquipmentMap) {\n    for (final Equipment equipment : equipments) {\n      if (equipment.isTopLevel()) {\n        linkChildToParentEquipment(equipment, rootEquipment);\n      } else {\n        final String parentId = equipment.getParentId();\n        final Equipment parent = equipmentIdEquipmentMap.get(parentId);\n\n        if (parent != null) {\n          linkChildToParentEquipment(equipment, parent);\n        } else {\n          logger.warn(\"Customer Business Equipment with ID '\" + equipment.getId() + \"' referes a none existing parent equipment with ID '\"\n              + parentId + \"'\");\n        }\n      }\n    }\n  }\n\n  private void linkChildToParentEquipment(final Equipment child, final Equipment parent) {\n    parent.addChild(child);\n    child.setParent(parent);\n  }\n\n  private ArrayList<EquipmentSum> getEquipmentSums(final EquipmentResponse response) {\n    final Map<String, EquipmentSum> equipmentSums = new HashMap<String, EquipmentSum>();\n\n    for (final EquipmentItem item : response.getEquipmentItemArray()) {\n      final String materialId = item.getMaterialnummer();\n      final String materialTitle = item.getMaterialbezeichnung();\n\n      EquipmentSum material = equipmentSums.get(materialId);\n      if (material == null) {\n        // not existing yet\n        material = new EquipmentSum(materialId, materialTitle, 0);\n        equipmentSums.put(materialId, material);\n      }\n      material.incrementCount();\n    }\n\n    final ArrayList<EquipmentSum> lst = new ArrayList<EquipmentSum>(equipmentSums.values());\n    Collections.sort(lst);\n    return lst;\n  }\n\n  private Map<String, Equipment> buildEquipmentIdMap(final ArrayList<Equipment> equipments) {\n    final Map<String, Equipment> equipmentsMap = new LinkedHashMap<String, Equipment>();\n    for (final Equipment equipment : equipments) {\n      if (equipment.hasEquipmentId()) {\n        equipmentsMap.put(equipment.getId(), equipment);\n      }\n    }\n    return equipmentsMap;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6259,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport java.net.MalformedURLException;\nimport java.rmi.RemoteException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport net.sf.ehcache.Cache;\nimport net.sf.ehcache.CacheManager;\nimport net.sf.ehcache.Element;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.cuco.core.service.CustomerEquipmentService;\nimport at.a1ta.cuco.core.service.PartyService;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentConsignee;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentTree;\nimport at.telekom.eai.businesscustomerequipment.xsd.EquipmentRequest;\nimport at.telekom.eai.businesscustomerequipment.xsd.EquipmentResponse;\nimport at.telekom.eai.businesscustomerequipment.xsd.GetEquipmentRequestDocument;\nimport at.telekom.eai.businesscustomerequipment.xsd.GetEquipmentResponseDocument;\nimport at.telekom.eai.businesscustomerequipment.xsd.GetPartnersRequestDocument;\nimport at.telekom.eai.businesscustomerequipment.xsd.GetPartnersResponseDocument;\nimport at.telekom.eai.businesscustomerequipment.xsd.PartnerItem;\nimport at.telekom.eai.businesscustomerequipment.xsd.PartnerRequest;\nimport at.telekom.eai.businesscustomerequipment.xsd.PartnerResponse;\n\nimport com.telekomaustriagroup.esb.businesscustomerequipment.BusinessCustomerEquipmentStub;\n\n@Service\npublic class CustomerEquipmentServiceImpl extends BaseEsbClient<BusinessCustomerEquipmentStub> implements CustomerEquipmentService {\n  private static Logger logger = LoggerFactory.getLogger(CustomerEquipmentServiceImpl.class);\n\n  private static String EHCACHE_KEY = \"customerEquipmentCache\";\n\n  @Autowired\n  private PartyService partyService;\n  @Autowired\n  private CustomerEquipmentHelper helper;\n  @Autowired\n  private CustomerEquipmentTranslator translator;\n\n  @Override\n  public EquipmentTree getEquipmentTree(String equipmentConsigneeId, long partyId) throws RemoteException, MalformedURLException {\n    Cache cache = CacheManager.getInstance().getCache(EHCACHE_KEY);\n    Element cacheElement = cache.get(equipmentConsigneeId);\n\n    if (cacheElement == null) {\n      EquipmentTree data = getEquipmentTreeFromSAP(equipmentConsigneeId, partyId);\n\n      logger.debug(\"Caching Business Customer Equipment data for consigneeId '\" + equipmentConsigneeId + \"' and partyId '\" + partyId + \"'.\");\n      cacheElement = new Element(equipmentConsigneeId, data);\n      cache.put(cacheElement);\n\n      return data;\n    }\n\n    logger.debug(\"Returning cached Business Customer Equipment data for consigneeId '\" + equipmentConsigneeId + \"' and partyId '\" + partyId + \"'.\");\n    return (EquipmentTree) cacheElement.getObjectValue();\n  }\n\n  private EquipmentTree getEquipmentTreeFromSAP(String equipmentConsigneeId, long partyId) throws RemoteException, MalformedURLException {\n    Party party = partyService.get(partyId);\n    EquipmentConsignee equipmentConsignee = getEquipmentConsignee(partyId, equipmentConsigneeId);\n    EquipmentResponse response = requestEquipments(equipmentConsigneeId);\n\n    return helper.buildEquipmentTree(response, party, equipmentConsignee);\n  }\n\n  @Override\n  public ArrayList<EquipmentConsignee> getEquipmentConsignees(ArrayList<Long> partyIds) throws MalformedURLException, RemoteException {\n    ArrayList<EquipmentConsignee> allConsignees = new ArrayList<EquipmentConsignee>();\n    for (long partyId : partyIds) {\n      allConsignees.addAll(getEquipmentConsignees(partyId));\n    }\n    return allConsignees;\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  @Override\n  public ArrayList<EquipmentConsignee> getEquipmentConsignees(long partyId) throws MalformedURLException, RemoteException {\n\n    Cache cache = CacheManager.getInstance().getCache(EHCACHE_KEY);\n    Element cacheElement = cache.get(partyId);\n\n    if (cacheElement == null) {\n      ArrayList<EquipmentConsignee> data = getEquipmentConsigneesFromSAP(partyId);\n\n      logger.debug(\"Caching Business Customer Equipment Consignees for partyId '\" + partyId + \"'.\");\n      cacheElement = new Element(partyId, data);\n      cache.put(cacheElement);\n\n      return data;\n    }\n\n    logger.debug(\"Returning cached Business Customer Equipment Consignees for partyId '\" + partyId + \"'.\");\n    return (ArrayList<EquipmentConsignee>) cacheElement.getObjectValue();\n  }\n\n  private ArrayList<EquipmentConsignee> getEquipmentConsigneesFromSAP(long partyId) throws MalformedURLException, RemoteException {\n    PartnerRequest request = PartnerRequest.Factory.newInstance();\n    request.setAuftraggeber(partyId + \"\");\n\n    GetPartnersRequestDocument requestDocument = GetPartnersRequestDocument.Factory.newInstance();\n    requestDocument.setGetPartnersRequest(request);\n\n    GetPartnersResponseDocument responseDocument = stub.getPartners(requestDocument, null);\n\n    PartnerResponse response = responseDocument.getGetPartnersResponse();\n\n    PartnerItem[] partnerItems = response.getPartnerItemArray();\n    return translator.convertToEquipmentConsigneeBeans(partyId, partnerItems);\n  }\n\n  private EquipmentConsignee getEquipmentConsignee(long partyId, String equipmentConsigneeId) throws RemoteException, MalformedURLException {\n    List<EquipmentConsignee> consignees = getEquipmentConsignees(partyId);\n\n    for (EquipmentConsignee consignee : consignees) {\n      if (equipmentConsigneeId.equals(consignee.getId())) {\n        return consignee;\n      }\n    }\n\n    throw new RuntimeException(\"Could not find Business Customer Equipment consignee with ID '\" + equipmentConsigneeId + \"'\");\n  }\n\n  private EquipmentResponse requestEquipments(String equipmentConsigneeId) throws RemoteException, MalformedURLException {\n    EquipmentRequest request = EquipmentRequest.Factory.newInstance();\n    request.setWarenempfanger(equipmentConsigneeId);\n\n    GetEquipmentRequestDocument requestDocument = GetEquipmentRequestDocument.Factory.newInstance();\n    requestDocument.setGetEquipmentRequest(request);\n\n    GetEquipmentResponseDocument responseDocument = stub.getEquipment(requestDocument, null);\n\n    return responseDocument.getGetEquipmentResponse();\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentExcelHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentExcelHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 19868,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport java.io.OutputStream;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.lang.time.FastDateFormat;\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFCellStyle;\nimport org.apache.poi.hssf.usermodel.HSSFFont;\nimport org.apache.poi.hssf.usermodel.HSSFFooter;\nimport org.apache.poi.hssf.usermodel.HSSFPrintSetup;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.hssf.usermodel.HeaderFooter;\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.CreationHelper;\nimport org.apache.poi.ss.usermodel.Font;\nimport org.apache.poi.ss.util.CellRangeAddress;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.Equipment;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentSum;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentTree;\n\n@Service\npublic class CustomerEquipmentExcelHelper {\n  private static final Logger logger = LoggerFactory.getLogger(CustomerEquipmentExcelHelper.class);\n\n  private static final String BLANK = \" \";\n  private static final String EMPTY = \"\";\n\n  // Font settings\n  private static final short[] FONT_SIZES = new short[] {20, 18, 16, 14, 13, 12, 11, 10};\n  private static final short DEFAULT_FONT_SIZE = 12;\n\n  // Date cells\n  private static final String DATE_FORMAT = \"dd.mm.yyyy\"; // Excel date format for warrenty dates\n  private static final FastDateFormat SDF = FastDateFormat.getInstance(\"dd.MM.yyyy\"); // birthdate\n\n  // HSSFCellStyle styles\n  private static final String STYLE_DEFAULT_TREE_PARENT = \"defaultTreeParent\";\n  private static final String STYLE_MAIN_TITLE = \"mainTitle\";\n  private static final String STYLE_BOLD = \"bold\";\n  private static final String STYLE_GRAY_BOLD = \"grayBackgroundAndBoldFont\";\n  private static final String STYLE_ALIGN_RIGHT = \"alignRight\";\n  private static final String STYLE_DATE = \"date\";\n  private static final String STYLE_PARENT_NODE_DATE = \"dateParentNode\";\n  private static final String STYLE_PARENT_NODE = \"parentNode\";\n  private static final String STYLE_EQUIPMENT_GROUP = \"equipmentGroup\";\n\n  // Column and field captions\n  private static final String COL_MATERIAL_TITLE = \"Bezeichnung\";\n  private static final String COL_MATERIAL_ID = \"Materialnummer\";\n  private static final String COL_MATERIAL_COUNT = \"Anzahl\";\n  private static final String COL_TREE_TITLE = \"Bezeichnung\";\n  private static final String COL_TREE_ID = \"EquipmentNr.\";\n  private static final String COL_TREE_STATUS = \"Status\";\n  private static final String COL_TREE_SERIAL = \"Seriennr.\";\n  private static final String COL_TREE_WARRENTY_BEGIN = \"Gew\u00e4hrl. Beginn\";\n  private static final String COL_TREE_WARRENTY_END = \"Gew\u00e4hrl. Ende\";\n  private static final String CUSTOMER_BIRTH_DATE = \"Geburtsdatum: \";\n\n  private static final String CUSTOMER_SEG = \"Seg.: \";\n  private static final String CUSTOMER_FBNR = \"FBNR: \";\n  private static final String CUSTOMER_ZVR = \"ZVR: \";\n  private static final String CUSTOMER_TYPE_PER = \"Per\";\n  private static final String CUSTOMER_TYPE_ORG = \"Org\";\n\n  // Sheet captions and general\n  private static final String FOOTER_PAGE = \"Seite \";\n  private static final String CAPTION_CUSTOMER_ID = \"KdNr.: \";\n  private static final String CAPTION_PARTNER = \"Warenempf\u00e4nger: \";\n  private static final String SHEET_TREE = \"Inventarbaum\";\n  private static final String SHEET_MATERIAL = \"Equipmentsummen\";\n  private static final String SHEET_TREE_TITLE = \"Equipmentdaten\";\n\n  private static final String TOTAL_SUM = \"Gesamtanzahl:\";\n  private static final String PREFIX_GROUP = \"\u00dcbergeordnetes Equipment: \";\n\n  /**\n   * Writes the given EquipmentData object to an output stream using the the Excel format\n   * \n   * @param out\n   * @param data\n   */\n  public void streamExcelFile(final OutputStream stream, final EquipmentTree tree) {\n    try {\n      final HSSFWorkbook workbook = new HSSFWorkbook();\n      final HSSFSheet sheetTree = workbook.createSheet(SHEET_TREE);\n      final HSSFSheet sheetMaterial = workbook.createSheet(SHEET_MATERIAL);\n      final Map<Object, HSSFCellStyle> styleMap = generateStyles(workbook);\n\n      // Sheet: Tree\n      initTreeSheet(sheetTree);\n\n      buildTreeColumnHeaders(tree, sheetTree, styleMap);\n      final ArrayList<Equipment> topLevels = tree.getChildren();\n      for (final Equipment topLevel : topLevels) {\n        visitTree(topLevel, sheetTree, workbook, styleMap);\n      }\n      autoSizeColumns(sheetTree, 6);\n\n      // Sheet: Material\n      buildMaterialColumnHeaders(sheetMaterial, styleMap);\n      final ArrayList<EquipmentSum> materials = tree.getEquipmentSums();\n      for (final EquipmentSum m : materials) {\n        visitMaterial(m, sheetMaterial, workbook);\n      }\n\n      buildMaterialSums(sheetMaterial, styleMap);\n      autoSizeColumns(sheetMaterial, 3);\n\n      // write servlet response stream\n      workbook.write(stream);\n      stream.flush();\n      stream.close();\n    } catch (Exception e) {\n      logger.error(e.getMessage(), e);\n    } finally {\n      try {\n        stream.flush();\n        stream.close();\n      } catch (Exception e) {\n        logger.error(e.getMessage(), e);\n      }\n    }\n  }\n\n  /**\n   * Generates all needed HSSF styles\n   * \n   * @param wb\n   * @return HSSF Style map\n   */\n  private Map<Object, HSSFCellStyle> generateStyles(final HSSFWorkbook workbook) {\n    final Map<Object, HSSFCellStyle> styleMap = new HashMap<Object, HSSFCellStyle>();\n    final CreationHelper ch = workbook.getCreationHelper();\n\n    // The tree sheet's main title style\n    final HSSFCellStyle styleMainTitle = workbook.createCellStyle();\n    final HSSFFont styleMainTitleFont = workbook.createFont();\n    styleMainTitleFont.setFontHeightInPoints((short) 18);\n    styleMainTitleFont.setBoldweight(Font.BOLDWEIGHT_BOLD);\n    styleMainTitle.setFont(styleMainTitleFont);\n\n    // Date style\n    final HSSFCellStyle styleDate = workbook.createCellStyle();\n    styleDate.setDataFormat(ch.createDataFormat().getFormat(DATE_FORMAT));\n\n    // Gray background and bold\n    final HSSFCellStyle styleGrayAndBold = workbook.createCellStyle();\n    final HSSFFont hssfFontNormal = workbook.createFont();\n    hssfFontNormal.setBoldweight(Font.BOLDWEIGHT_BOLD);\n    styleGrayAndBold.setFont(hssfFontNormal);\n    styleGrayAndBold.setFillPattern(CellStyle.SOLID_FOREGROUND);\n    styleGrayAndBold.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);\n\n    // Equipment group\n    final HSSFCellStyle styleEquipmentGroup = workbook.createCellStyle();\n    final HSSFFont hssfFontSmall = workbook.createFont();\n    hssfFontSmall.setFontHeightInPoints((short) 7);\n    styleEquipmentGroup.setFont(hssfFontSmall);\n    styleEquipmentGroup.setFillPattern(CellStyle.SOLID_FOREGROUND);\n    styleEquipmentGroup.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);\n\n    // Equipment parent node\n    final HSSFCellStyle styleParentNode = workbook.createCellStyle();\n    styleParentNode.setFillPattern(CellStyle.SOLID_FOREGROUND);\n    styleParentNode.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);\n\n    // styleParentNodeDate\n    final HSSFCellStyle styleParentNodeDate = workbook.createCellStyle();\n    styleParentNodeDate.setDataFormat(ch.createDataFormat().getFormat(DATE_FORMAT));\n    styleParentNodeDate.setFillPattern(CellStyle.SOLID_FOREGROUND);\n    styleParentNodeDate.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);\n\n    // Align right\n    final HSSFCellStyle styleAlignRight = workbook.createCellStyle();\n    styleAlignRight.setAlignment(CellStyle.ALIGN_RIGHT);\n\n    // Bold\n    final HSSFCellStyle styleBold = workbook.createCellStyle();\n    final HSSFFont hssfFontBold = workbook.createFont();\n    hssfFontBold.setBoldweight(Font.BOLDWEIGHT_BOLD);\n    styleBold.setFont(hssfFontBold);\n\n    styleMap.put(STYLE_MAIN_TITLE, styleMainTitle);\n    styleMap.put(STYLE_DATE, styleDate);\n    styleMap.put(STYLE_GRAY_BOLD, styleGrayAndBold);\n    styleMap.put(STYLE_EQUIPMENT_GROUP, styleEquipmentGroup);\n    styleMap.put(STYLE_ALIGN_RIGHT, styleAlignRight);\n    styleMap.put(STYLE_BOLD, styleBold);\n    styleMap.put(STYLE_PARENT_NODE, styleParentNode);\n    styleMap.put(STYLE_PARENT_NODE_DATE, styleParentNodeDate);\n\n    // Default tree parent style (will be taken when a deep tree level is given)\n    final HSSFCellStyle styleDefaultParent = workbook.createCellStyle();\n    final HSSFFont fontDefaultParent = workbook.createFont();\n    fontDefaultParent.setFontHeightInPoints(DEFAULT_FONT_SIZE);\n    fontDefaultParent.setBoldweight(Font.BOLDWEIGHT_BOLD);\n    styleDefaultParent.setFont(fontDefaultParent);\n    styleDefaultParent.setFillPattern(CellStyle.SOLID_FOREGROUND);\n    styleDefaultParent.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);\n    styleMap.put(STYLE_DEFAULT_TREE_PARENT, styleDefaultParent);\n\n    for (int i = 0; i < FONT_SIZES.length; i++) {\n      final HSSFCellStyle treeLevelStyle = workbook.createCellStyle();\n      final HSSFFont hssfFont = workbook.createFont();\n      // calculate the font point size depending on the node's level in the tree\n      final short height = i > (FONT_SIZES.length - 1) ? DEFAULT_FONT_SIZE : FONT_SIZES[i];\n      hssfFont.setFontHeightInPoints(height);\n      hssfFont.setBoldweight(Font.BOLDWEIGHT_BOLD);\n      treeLevelStyle.setFont(hssfFont);\n      treeLevelStyle.setFillPattern(CellStyle.SOLID_FOREGROUND);\n      treeLevelStyle.setFillForegroundColor(HSSFColor.GREY_25_PERCENT.index);\n      styleMap.put(i, treeLevelStyle);\n    }\n\n    return styleMap;\n  }\n\n  /**\n   * Creates a new cell\n   * \n   * @param treeLevel\n   * @param styleMap\n   * @return\n   */\n  private HSSFCellStyle getHSSFCellStyle(final int treeLevel, final Map<Object, HSSFCellStyle> styleMap) {\n    if (treeLevel >= FONT_SIZES.length) {\n      return styleMap.get(STYLE_DEFAULT_TREE_PARENT);\n    }\n    return styleMap.get(treeLevel);\n  }\n\n  /**\n   * Creates a new cell\n   * \n   * @param rowIdx\n   * @param cellIdx\n   * @param sheet\n   * @return\n   */\n  private HSSFCell getCell(final int rowIdx, final int cellIdx, final HSSFSheet sheet) {\n    return getCell(rowIdx, cellIdx, sheet, null);\n  }\n\n  private HSSFCell getCell(final int rowIdx, final int cellIdx, final HSSFSheet sheet, final HSSFCellStyle style) {\n    HSSFRow row = sheet.getRow(rowIdx);\n    if (row == null) {\n      row = sheet.createRow(rowIdx);\n    }\n    HSSFCell cell = row.getCell(cellIdx);\n    if (cell == null) {\n      cell = row.createCell(cellIdx);\n    }\n    if (style != null) {\n      cell.setCellStyle(style);\n    }\n    return cell;\n  }\n\n  /**\n   * Builds one Equipment material row\n   * \n   * @param material\n   * @param sheet\n   * @param wb\n   */\n  private void visitMaterial(final EquipmentSum material, final HSSFSheet sheet, final HSSFWorkbook wb) {\n    final int rowCo = sheet.getLastRowNum() + 1;\n    getCell(rowCo, 0, sheet).setCellValue(material.getTitle());\n    getCell(rowCo, 1, sheet).setCellValue(material.getId());\n    getCell(rowCo, 2, sheet).setCellValue(material.getCount());\n  }\n\n  /**\n   * Build one Equipment item row and invokes the recursive visitTree method for its children items\n   * \n   * @param node\n   * @param sheet\n   * @param wb\n   * @param styleMap\n   */\n  private void visitTree(final Equipment node, final HSSFSheet sheet, final HSSFWorkbook wb, final Map<Object, HSSFCellStyle> styleMap) {\n    int rowCo = sheet.getLastRowNum() + 1;\n\n    if (node.hasChildren()) {\n      final HSSFCellStyle parentNodeStyle = styleMap.get(STYLE_PARENT_NODE);\n      final HSSFCellStyle parentNodeDateStyle = styleMap.get(STYLE_PARENT_NODE_DATE);\n      final HSSFCellStyle parentNodeTitleStyle = getHSSFCellStyle(node.calculateTreeLevel(), styleMap);\n\n      rowCo++; // empty line before every group\n      setCells(rowCo, sheet, node, parentNodeTitleStyle, parentNodeStyle, parentNodeDateStyle);\n\n      final Equipment myParent = node.getParent();\n      if (myParent != null) {\n        final HSSFCellStyle groupStyle = styleMap.get(STYLE_EQUIPMENT_GROUP);\n        getCell(++rowCo, 0, sheet, groupStyle).setCellValue(PREFIX_GROUP + myParent.getName() + \"; \" + myParent.getId());\n        getCell(rowCo, 1, sheet, groupStyle);\n        getCell(rowCo, 2, sheet, groupStyle);\n        getCell(rowCo, 3, sheet, groupStyle);\n        getCell(rowCo, 4, sheet, groupStyle);\n        getCell(rowCo, 5, sheet, groupStyle);\n        sheet.getRow(rowCo).setHeightInPoints(11.0F);\n      }\n\n      final ArrayList<Equipment> children = node.getChildren();\n      for (final Equipment child : children) {\n        visitTree(child, sheet, wb, styleMap);\n      }\n    } else {\n      setCells(rowCo, sheet, node, null, null, styleMap.get(STYLE_DATE));\n    }\n  }\n\n  /**\n   * Builds one row for an Equipment item\n   * \n   * @param rowCo\n   * @param sheet\n   * @param node\n   * @param nameStyle\n   * @param otherStyle\n   * @param dateStyle\n   */\n  private void setCells(final int rowCo, final HSSFSheet sheet, final Equipment node, final HSSFCellStyle nameStyle,\n      final HSSFCellStyle otherStyle, final HSSFCellStyle dateStyle) {\n    final HSSFCell name = getCell(rowCo, 0, sheet, nameStyle);\n    final HSSFCell id = getCell(rowCo, 1, sheet, otherStyle);\n    final HSSFCell status = getCell(rowCo, 2, sheet, otherStyle);\n    final HSSFCell serial = getCell(rowCo, 3, sheet, otherStyle);\n    final HSSFCell warrentyBegin = getCell(rowCo, 4, sheet, dateStyle);\n    final HSSFCell warrentyEnd = getCell(rowCo, 5, sheet, dateStyle);\n\n    if (node.getName() != null) {\n      name.setCellValue(node.getName());\n    }\n    if (node.getId() != null) {\n      id.setCellValue(node.getId());\n    }\n    if (node.getStatus() != null) {\n      status.setCellValue(node.getStatus());\n    }\n    if (node.getSerialNumber() != null) {\n      serial.setCellValue(node.getSerialNumber());\n    }\n    if (node.getWarrentyBegin() != null) {\n      warrentyBegin.setCellValue(node.getWarrentyBegin());\n    }\n    if (node.getWarrentyEnd() != null) {\n      warrentyEnd.setCellValue(node.getWarrentyEnd());\n    }\n  }\n\n  private void initTreeSheet(final HSSFSheet sheet) {\n    final HSSFPrintSetup ps = sheet.getPrintSetup();\n    ps.setFitHeight(Short.MAX_VALUE); // if less than Short.MAX_VALUE pages are available than the available page count is the value\n    ps.setFitWidth((short) 1);\n    ps.setLandscape(true);\n    sheet.setAutobreaks(true);\n    sheet.setFitToPage(true);\n\n    final HSSFFooter footer = sheet.getFooter();\n    footer.setRight(FOOTER_PAGE + HeaderFooter.page() + \" / \" + HeaderFooter.numPages());\n  }\n\n  /**\n   * Equipment material sheet - build SUM formular\n   * \n   * @param sheetMaterial\n   * @param styleMap\n   */\n  private void buildMaterialSums(final HSSFSheet sheetMaterial, final Map<Object, HSSFCellStyle> styleMap) {\n    final HSSFCellStyle styleGrayBold = styleMap.get(STYLE_GRAY_BOLD);\n    final int rowCo = sheetMaterial.getLastRowNum() + 1;\n    getCell(rowCo, 0, sheetMaterial, styleGrayBold);\n    getCell(rowCo, 1, sheetMaterial, styleGrayBold).setCellValue(TOTAL_SUM);\n    getCell(rowCo, 2, sheetMaterial, styleGrayBold).setCellFormula(\"SUM(C2:C\" + rowCo + \")\");\n  }\n\n  /**\n   * Auto size columns on a sheet\n   * \n   * @param sheet\n   * @param count\n   */\n  private void autoSizeColumns(final HSSFSheet sheet, final int count) {\n    for (int i = 0; i < count; i++) {\n      sheet.autoSizeColumn(i);\n    }\n  }\n\n  /**\n   * Builds a nice readable customer name\n   * \n   * @param customer\n   * @return\n   */\n  private String getCustomerName(final Party customer) {\n    String name = EMPTY;\n    if (customer.getSalutation() != null) {\n      name += customer.getSalutation() + BLANK;\n    }\n    if (customer.getTitle() != null) {\n      name += customer.getTitle() + BLANK;\n    }\n    if (customer.getFirstname() != null) {\n      name += customer.getFirstname() + BLANK;\n    }\n    if (customer.getLastname() != null) {\n      name += customer.getLastname();\n    }\n    return name;\n  }\n\n  /**\n   * Equipment tree sheet - build column headers\n   * \n   * @param info\n   * @param sheet\n   * @param styleMap\n   */\n  private void buildTreeColumnHeaders(final EquipmentTree data, final HSSFSheet sheet, final Map<Object, HSSFCellStyle> styleMap) {\n    // Kundennr,Warenempf\u00e4nger,Informationen merged cells\n    sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(2, 2, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(3, 3, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(4, 4, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(5, 5, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(6, 6, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(7, 7, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(8, 8, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(9, 9, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(10, 10, 0, 5));\n    sheet.addMergedRegion(new CellRangeAddress(11, 11, 0, 5));\n\n    final HSSFCellStyle styleBold = styleMap.get(STYLE_BOLD);\n\n    int rowCo = 0;\n    getCell(rowCo++, 0, sheet, styleMap.get(STYLE_MAIN_TITLE)).setCellValue(SHEET_TREE_TITLE);\n    // getCell(rowCo++, 0, sheet).setCellValue(CAPTION_INFO + data.getInfoDetails());\n\n    if (data.getEquipmentConsignee() != null) {\n      rowCo++;\n      getCell(rowCo++, 0, sheet, styleBold).setCellValue(CAPTION_PARTNER);\n      getCell(rowCo++, 0, sheet).setCellValue(data.getEquipmentConsignee().getSummary());\n    }\n\n    final Party customer = data.getParty();\n    if (customer != null) {\n      rowCo++;\n      getCell(rowCo++, 0, sheet).setCellValue(CAPTION_CUSTOMER_ID + customer.getCustomerNumber());\n      getCell(rowCo++, 0, sheet).setCellValue(CUSTOMER_SEG + customer.getBusinessSegment());\n\n      if (CUSTOMER_TYPE_PER.equals(customer.getCustomerType())) {\n        getCell(rowCo++, 0, sheet).setCellValue(CUSTOMER_BIRTH_DATE + SDF.format(customer.getBirthdate()));\n\n      } else if (CUSTOMER_TYPE_ORG.equals(customer.getCustomerType())) {\n        if (customer.getCommercialRegisterNumber() != null) {\n          getCell(rowCo++, 0, sheet).setCellValue(CUSTOMER_FBNR + customer.getCommercialRegisterNumber());\n        }\n        if (customer.getCentralAssociationNumber() != null) {\n          getCell(rowCo++, 0, sheet).setCellValue(CUSTOMER_ZVR + customer.getCentralAssociationNumber());\n        }\n      }\n\n      rowCo++;\n      getCell(rowCo++, 0, sheet, styleBold).setCellValue(getCustomerName(customer));\n      getCell(rowCo++, 0, sheet).setCellValue(customer.getAddressLine1() + BLANK + customer.getAddressLine2());\n    }\n\n    // Column captions\n    getCell(++rowCo, 0, sheet, styleBold).setCellValue(COL_TREE_TITLE);\n    getCell(rowCo, 1, sheet, styleBold).setCellValue(COL_TREE_ID);\n    getCell(rowCo, 2, sheet, styleBold).setCellValue(COL_TREE_STATUS);\n    getCell(rowCo, 3, sheet, styleBold).setCellValue(COL_TREE_SERIAL);\n    getCell(rowCo, 4, sheet, styleBold).setCellValue(COL_TREE_WARRENTY_BEGIN);\n    getCell(rowCo++, 5, sheet, styleBold).setCellValue(COL_TREE_WARRENTY_END);\n  }\n\n  /**\n   * Equipment material sheet - build column headers\n   * \n   * @param sheet\n   * @param styleMap\n   */\n  private void buildMaterialColumnHeaders(final HSSFSheet sheet, final Map<Object, HSSFCellStyle> styleMap) {\n    final HSSFCellStyle styleGrayBold = styleMap.get(STYLE_GRAY_BOLD);\n\n    // Column captions\n    getCell(0, 0, sheet, styleGrayBold).setCellValue(COL_MATERIAL_TITLE);\n    getCell(0, 1, sheet, styleGrayBold).setCellValue(COL_MATERIAL_ID);\n    getCell(0, 2, sheet, styleGrayBold).setCellValue(COL_MATERIAL_COUNT);\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentTranslator.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/CustomerEquipmentTranslator.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7133,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.cuco.core.shared.dto.customerequipment.Equipment;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentAttribute;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentConsignee;\nimport at.telekom.eai.businesscustomerequipment.xsd.EquipmentItem;\nimport at.telekom.eai.businesscustomerequipment.xsd.PartnerItem;\n\n@Service\npublic class CustomerEquipmentTranslator {\n  private static final String EMPTY_STR = \"\";\n  private static final String BLANK_STR = \" \";\n  private static final String BLANK_COMMA_STR = \", \";\n  private static final String PARTNER_PREFIX = \", ID: \";\n\n  // Equipment status encoding\n  private static final String STATUS_ACTIVE = \"aktiv\";\n  private static final String STATUS_NOT_ACTIVE = \"inaktiv\";\n  private static final String STATUS_INAK = \"inak\";\n\n  public ArrayList<EquipmentConsignee> convertToEquipmentConsigneeBeans(final long partyId, final PartnerItem[] partnerItems) {\n    final ArrayList<EquipmentConsignee> lst = new ArrayList<EquipmentConsignee>(partnerItems.length);\n    for (final PartnerItem item : partnerItems) {\n      lst.add(convertToEquipmentConsigneeBean(partyId, item));\n    }\n    return lst;\n  }\n\n  private EquipmentConsignee convertToEquipmentConsigneeBean(final long partyId, final PartnerItem item) {\n    final String sAnrede = StringUtils.defaultIfEmpty(item.getAnredeschlussel(), EMPTY_STR);\n    final String sName1 = StringUtils.defaultIfEmpty(item.getName1(), EMPTY_STR);\n    final String sName2 = StringUtils.defaultIfEmpty(item.getName2(), EMPTY_STR);\n    final String sPlz = StringUtils.defaultIfEmpty(item.getPostZahl(), EMPTY_STR);\n    final String sOrt = StringUtils.defaultIfEmpty(item.getOrt(), EMPTY_STR);\n    final String sStrasse = StringUtils.defaultIfEmpty(item.getStrasse(), EMPTY_STR);\n    final String sHausNr = StringUtils.defaultIfEmpty(item.getHausnummer(), EMPTY_STR);\n\n    final EquipmentConsignee equipmentConsignee = new EquipmentConsignee();\n    equipmentConsignee.setId(item.getWarenempfanger());\n    equipmentConsignee.setSummary(sAnrede + BLANK_STR + sName1 + BLANK_STR + sName2 + BLANK_COMMA_STR + sStrasse + BLANK_STR + sHausNr + BLANK_COMMA_STR + sPlz + BLANK_STR + sOrt + PARTNER_PREFIX + item.getWarenempfanger());\n    equipmentConsignee.setSummaryShort(sName1 + BLANK_STR + sName2 + BLANK_COMMA_STR + sPlz + BLANK_STR + sOrt);\n    equipmentConsignee.setPartyId(partyId);\n\n    equipmentConsignee.setTitle(item.getAnredeschlussel());\n    equipmentConsignee.setName1(item.getName1());\n    equipmentConsignee.setName2(item.getName2());\n    equipmentConsignee.setPlz(item.getPostZahl());\n    equipmentConsignee.setCity(item.getOrt());\n    equipmentConsignee.setStreet(item.getStrasse());\n    equipmentConsignee.setHouseNumber(item.getHausnummer());\n    equipmentConsignee.setConsignee(item.getWarenempfanger());\n\n    return equipmentConsignee;\n  }\n\n  public ArrayList<Equipment> convertToEquipmentBeans(final EquipmentItem[] equipmentItems, final Map<String, ArrayList<EquipmentAttribute>> attributesMap) {\n    final ArrayList<Equipment> lst = new ArrayList<Equipment>(equipmentItems.length);\n    for (final EquipmentItem item : equipmentItems) {\n      lst.add(convertToEquipmentBean(item, attributesMap));\n    }\n    return lst;\n  }\n\n  private Date toDate(Calendar calendar) {\n    return calendar == null ? null : calendar.getTime();\n  }\n\n  public Equipment convertToEquipmentBean(final EquipmentItem equipmentItem, final Map<String, ArrayList<EquipmentAttribute>> attributesMap) {\n    final Equipment equipment = new Equipment();\n    equipment.setId(CustomerEquipmentHelper.cleanEquipmentNumber(equipmentItem.getEquipmentnummer()));\n    equipment.setName(equipmentItem.getEquipmentbezeichnung());\n    equipment.setParentId(CustomerEquipmentHelper.cleanEquipmentNumber(equipmentItem.getUbergeorgnetesEquipment()));\n    equipment.setAttributes(attributesMap.get(CustomerEquipmentHelper.cleanEquipmentNumber(equipmentItem.getEquipmentnummer())));\n    equipment.setStatus(translateEquipmentStatus(equipmentItem.getSystemstatus()));\n    equipment.setWarrentyBegin(toDate(equipmentItem.getGewahrleistungsdatumBegin()));\n    equipment.setWarrentyEnd(toDate(equipmentItem.getGewahrleistungsdatumEnde()));\n    equipment.setSerialNumber(equipmentItem.getSerialnummer());\n    equipment.setMaterialId(equipmentItem.getMaterialnummer());\n    equipment.setMaterialName(equipmentItem.getMaterialbezeichnung());\n\n    equipment.setEquipmentTyp(equipmentItem.getEquipmenttyp());\n    equipment.setTypBezeichnung(equipmentItem.getTypbezeichnung());\n\n    equipment.setEquipmentArt(equipmentItem.getEquipmentart());\n    equipment.setArtBezeichnung(equipmentItem.getArtbezeichnung());\n\n    return equipment;\n  }\n\n  private String translateEquipmentStatus(final String systemStatus) {\n    return systemStatus != null && systemStatus.toLowerCase().contains(STATUS_INAK) ? STATUS_NOT_ACTIVE : STATUS_ACTIVE;\n  }\n\n  @SuppressWarnings(\"unused\")\n  private String getConvertedEquipmentStatusExtended(final EquipmentItem e) {\n    String sysStat = e.getSystemstatus(); // System status ...should always be provided\n    String anwStat = e.getAnwenderstatus(); // Anwender status ...may be provided\n\n    // get the active / not active status\n    final String activeNotActiveStatus = sysStat != null && sysStat.toLowerCase().contains(STATUS_INAK) ? STATUS_NOT_ACTIVE : STATUS_ACTIVE;\n\n    // Mapping for the system status codes\n    final Map<String, String> sysStatMap = new HashMap<String, String>();\n    sysStatMap.put(\"efre\", \"Equipment ist frei zu Verf\u00fcgung\");\n    sysStatMap.put(\"eheq\", \"Equipment ist in ein \u00fcbergeordnetes Equipment eingebaut\");\n    sysStatMap.put(\"elag\", \"Equipment liegt auf Lager\");\n    sysStatMap.put(\"elie\", \"Equipment ist einem Lieferschein zugeordnet\");\n\n    // Mapping for the anwender status codes\n    final Map<String, String> anwStatMap = new HashMap<String, String>();\n    anwStatMap.put(\"abg\", \"abgebaut\");\n    anwStatMap.put(\"fehl\", \"Eingabefehler\");\n    anwStatMap.put(\"gek\", \"gek\u00fcndigt\");\n    anwStatMap.put(\"ues\", \"\u00fcbersiedelt\");\n\n    // get other system stati\n    final List<String> sysLst = new ArrayList<String>();\n    if (sysStat != null) {\n      sysStat = sysStat.toLowerCase();\n\n      final Set<String> sysStatKeys = sysStatMap.keySet();\n      for (final String key : sysStatKeys) {\n        if (sysStat.contains(key)) {\n          sysLst.add(sysStatMap.get(key));\n        }\n      }\n    }\n\n    // get other anw stati\n    final List<String> anwLst = new ArrayList<String>();\n    if (anwStat != null) {\n      anwStat = anwStat.toLowerCase();\n\n      final Set<String> anwStatKeys = anwStatMap.keySet();\n      for (final String key : anwStatKeys) {\n        if (anwStat.contains(key)) {\n          anwLst.add(anwStatMap.get(key));\n        }\n      }\n    }\n\n    return activeNotActiveStatus;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/PartySummaryServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/PartySummaryServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5609,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport java.util.ArrayList;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.cuco.core.dao.db.CmDBICTServiceDao;\nimport at.a1ta.cuco.core.shared.dto.product.GetPartySummaryResponse;\nimport at.a1ta.cuco.core.shared.dto.product.PartySummaryItem;\nimport at.a1telekom.eai.customerinventory.GetPartySummaryRequest;\nimport at.a1telekom.eai.customerinventory.GetPartySummaryRequest.LoadOptions;\nimport at.a1telekom.eai.customerinventory.GetPartySummaryRequestDocument;\nimport at.a1telekom.eai.customerinventory.GetPartySummaryResponse.SubscriptionTypes;\nimport at.a1telekom.eai.customerinventory.GetPartySummaryResponse.SubscriptionTypes.SubscriptionType;\nimport at.a1telekom.eai.customerinventory.GetPartySummaryResponse.TopLevelProducts;\nimport at.a1telekom.eai.customerinventory.GetPartySummaryResponse.TopLevelProducts.Product;\nimport at.a1telekom.eai.customerinventory.GetPartySummaryResponseDocument;\n\nimport com.codahale.metrics.annotation.Metered;\nimport com.telekomaustriagroup.esb.customerinventory.CustomerInventoryStub;\n\n@Service\npublic class PartySummaryServiceImpl extends BaseEsbClient<CustomerInventoryStub> implements PartySummaryService {\n\n  private static final String UI_TEXT = \"_UI_Text\";\n  private static final String PRODUCT_OVERVIEW_SUB_TYPE = \"ProductOverview_SubType_\";\n  private static final Logger logger = LoggerFactory.getLogger(PartySummaryServiceImpl.class);\n  @Autowired\n  private SettingService settingService;\n  @Autowired\n  private TextService textService;\n  @Autowired\n  private CmDBICTServiceDao cmDBICTServiceDao;\n\n  @Override\n  @Metered(name = \"PartySummaryService.getPartySummary\", absolute = true)\n  public GetPartySummaryResponse getPartySummary(Long partyId) {\n    GetPartySummaryRequestDocument requestDoc = GetPartySummaryRequestDocument.Factory.newInstance();\n    GetPartySummaryRequest req = requestDoc.addNewGetPartySummaryRequest();\n    LoadOptions loadOptions = req.addNewLoadOptions();\n    loadOptions.setGetProductSummary(true);\n    loadOptions.setGetSubscriptionTypeSummary(true);\n    loadOptions.setCountChildSubscriptions(true);\n    loadOptions.setGroupProductSummaryByBillingAccount(true);\n    req.setPartyId(partyId + \"\");\n    requestDoc.setGetPartySummaryRequest(req);\n    GetPartySummaryResponseDocument partySummary;\n    GetPartySummaryResponse cucoResponse = new GetPartySummaryResponse();\n    try {\n      if (settingService.getBooleanValue(\"testModeActiveForDec\", false)) {\n        cucoResponse.getSubscriptionSummaryItems().add(new PartySummaryItem(\"Festnetz\", 4));\n        cucoResponse.getSubscriptionSummaryItems().add(new PartySummaryItem(\"Mobil\", 1));\n        cucoResponse.getSubscriptionSummaryItems().add(new PartySummaryItem(\"Verrechnungskonten\", 2));\n        cucoResponse.getProductSummaryItems().add(new PartySummaryItem(\"A1 Enterprise Mobile\", 6));\n        cucoResponse.getProductSummaryItems().add(new PartySummaryItem(\"Festnetz Internet Business\", 4));\n        cucoResponse.getProductSummaryItems().add(new PartySummaryItem(\"A1 Breitband Pro Business\", 2));\n        cucoResponse.getProductSummaryItems().add(new PartySummaryItem(\"A1 Data Corporate\", 3));\n        cucoResponse.getProductSummaryItems().add(new PartySummaryItem(\"A1 Breitband Pro Business symmetrisch\", 1));\n\n      } else {\n        partySummary = stub.getPartySummary(requestDoc, null);\n        extractProducts(cucoResponse, partySummary.getGetPartySummaryResponse().getTopLevelProducts());\n        extractSubscriptions(cucoResponse, partySummary.getGetPartySummaryResponse().getSubscriptionTypes());\n      }\n    } catch (Exception ex) {\n      cucoResponse.setErrorResponse(true);\n      cucoResponse.setErrorText(ex.getMessage() + \"\\n\" + ex.getCause());\n      logger.error(\"Error while calling CI.getPartySummary for Party Id \" + partyId, ex);\n    }\n\n    return cucoResponse;\n  }\n\n  private void extractSubscriptions(GetPartySummaryResponse cucoResponse, SubscriptionTypes subscriptionTypes) {\n    for (SubscriptionType sub : subscriptionTypes.getSubscriptionTypeArray()) {\n      String key = textService.getByKeyWithDefaultText(PRODUCT_OVERVIEW_SUB_TYPE + sub.getType() + UI_TEXT, sub.getType()).getText();\n      if (key != null && cucoResponse.containsSubscriptionSummaryItem(key)) {\n        cucoResponse.getSubscriptionSummaryItemByKey(key).setCount(cucoResponse.getSubscriptionSummaryItemByKey(key).getCount() + sub.getCount());\n      } else {\n        cucoResponse.getSubscriptionSummaryItems().add(new PartySummaryItem(key, sub.getCount()));\n      }\n    }\n  }\n\n  private void extractProducts(GetPartySummaryResponse cucoResponse, TopLevelProducts topLevelProducts) {\n    for (Product prod : topLevelProducts.getProductArray()) {\n      cucoResponse.getProductSummaryItems().add(new PartySummaryItem(prod.getName(), prod.getCount()));\n    }\n  }\n\n  @Override\n  @Metered(name = \"PartySummaryService.getICTServicesForPartyId\", absolute = true)\n  public ArrayList<PartySummaryItem> getICTServicesForPartyId(Long partyId) {\n\n    ArrayList<PartySummaryItem> result = null;\n    try {\n      result = (ArrayList<PartySummaryItem>) cmDBICTServiceDao.getICTServicesForPartyId(partyId);\n    } catch (Exception ex) {\n      logger.error(\"Error while calling cmdb.getICTServicesForPartyId \" + partyId, ex);\n    }\n    return result;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/PromotionServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/PromotionServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3580,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport java.util.ArrayList;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.stereotype.Service;\n\nimport com.telekomaustriagroup.esb.odsrawdatainventory.ODSRawDataInventoryStub;\n\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.cuco.core.service.PromotionService;\nimport at.a1ta.cuco.core.shared.dto.product.CallNumber;\nimport at.a1ta.cuco.core.shared.dto.product.Promotion;\nimport at.a1telekom.eai.odsrawdatainventory.AdxDiscount;\nimport at.a1telekom.eai.odsrawdatainventory.AdxService;\nimport at.a1telekom.eai.odsrawdatainventory.AdxSubscriber;\nimport at.a1telekom.eai.odsrawdatainventory.AdxSubscriber.Services;\nimport at.a1telekom.eai.odsrawdatainventory.GetAdxSubscriberRequest;\nimport at.a1telekom.eai.odsrawdatainventory.GetAdxSubscriberRequest.LoadOptions;\nimport at.a1telekom.eai.odsrawdatainventory.GetAdxSubscriberRequestDocument;\nimport at.a1telekom.eai.odsrawdatainventory.GetAdxSubscriberResponseDocument;\n\n@Service\npublic class PromotionServiceImpl extends BaseEsbClient<ODSRawDataInventoryStub> implements PromotionService {\n\n  private static final Logger LOGGER = LoggerFactory.getLogger(PromotionServiceImpl.class);\n\n  private static final boolean SHOULD_GET_SERVICES = true;\n  private static final boolean SHOULD_GET_FEATURES = false;\n\n  @Override\n  public ArrayList<Promotion> getSubscriptions(final CallNumber callNumber) {\n    final GetAdxSubscriberRequestDocument request = GetAdxSubscriberRequestDocument.Factory.newInstance();\n    final GetAdxSubscriberRequest subscriberRequest = request.addNewGetAdxSubscriberRequest();\n    final LoadOptions loadOptions = subscriberRequest.addNewLoadOptions();\n    loadOptions.setGetServices(SHOULD_GET_SERVICES);\n    loadOptions.setGetFeatures(SHOULD_GET_FEATURES);\n    final at.a1telekom.cdm.common.CallNumber cn = subscriberRequest.addNewCallNumber();\n    cn.setCC(callNumber.getCountryCode());\n    cn.setNDC(callNumber.getOnkz());\n    cn.setSN(callNumber.getTnum());\n\n    ArrayList<Promotion> promotions = new ArrayList<Promotion>();\n    final GetAdxSubscriberResponseDocument response;\n    try {\n      response = this.stub.getAdxSubscriber(request, null);\n      final AdxSubscriber subscriber = response.getGetAdxSubscriberResponse().getSubscriber();\n      final Services services = subscriber.getServices();\n      if (services != null) {\n        for (int i = 0; i < services.sizeOfServiceArray(); i++) {\n          final AdxService service = services.getServiceArray(i);\n          Promotion promotion = new Promotion();\n          promotion.setSoc(service.getSOC());\n\n          if (service.getDiscounts() == null || service.getDiscounts().getDiscountArray() == null) {\n            continue;\n          }\n          for (AdxDiscount discount : service.getDiscounts().getDiscountArray()) {\n            promotion.setReasonCode(discount.getReasonCode());\n            promotion.setReasonDescription(discount.getReasonDescription());\n            promotion.setEffectiveDate(discount.getEffectiveDate() != null ? discount.getEffectiveDate().getTime() : null);\n            promotion.setExpirationDate(discount.getExpirationDate() != null ? discount.getExpirationDate().getTime() : null);\n            promotion.setDiscountPercent(discount.getDiscountPercent() != null ? discount.getDiscountPercent().doubleValue() : null);\n            promotions.add(promotion);\n          }\n        }\n      }\n    } catch (Exception ex) {\n      LOGGER.error(\"Error while calling getAdxSubscriber\", ex);\n    }\n    return promotions;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/ProductBrowserServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/ProductBrowserServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 89150,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.Serializable;\nimport java.math.BigDecimal;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Calendar;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.LinkedHashMap;\nimport java.util.LinkedHashSet;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.zip.ZipEntry;\nimport java.util.zip.ZipOutputStream;\n\nimport org.apache.commons.io.FileUtils;\nimport org.apache.commons.lang.StringUtils;\nimport org.apache.commons.lang.time.FastDateFormat;\nimport org.apache.commons.lang3.SerializationUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.codahale.metrics.annotation.Metered;\nimport com.telekomaustriagroup.esb.customerinventory.CustomerInventoryStub;\n\nimport at.a1ta.bite.core.server.dao.EsbAccessParameterDao;\nimport at.a1ta.bite.core.server.esb.BaseEsbClient;\nimport at.a1ta.bite.core.server.service.LocalSettingService;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.server.service.TextService;\nimport at.a1ta.bite.core.shared.Separator;\nimport at.a1ta.bite.core.shared.dto.Text;\nimport at.a1ta.cuco.core.dao.esb.BrianCeeQueryOrderDao;\nimport at.a1ta.cuco.core.service.CustomerEquipmentService;\nimport at.a1ta.cuco.core.service.MarketplaceInventoryService;\nimport at.a1ta.cuco.core.service.PartyService;\nimport at.a1ta.cuco.core.service.ProductBrowserService;\nimport at.a1ta.cuco.core.shared.dto.IndexationStatus;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.Equipment;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentConsignee;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentTree;\nimport at.a1ta.cuco.core.shared.dto.product.AccountNode;\nimport at.a1ta.cuco.core.shared.dto.product.AsyncPlaceholderNode;\nimport at.a1ta.cuco.core.shared.dto.product.BaseNode;\nimport at.a1ta.cuco.core.shared.dto.product.BaseNode.DISPLAY;\nimport at.a1ta.cuco.core.shared.dto.product.BillableUser;\nimport at.a1ta.cuco.core.shared.dto.product.CallNumber;\nimport at.a1ta.cuco.core.shared.dto.product.CuCoComponentProductPrice;\nimport at.a1ta.cuco.core.shared.dto.product.CuCoPrice;\nimport at.a1ta.cuco.core.shared.dto.product.CuCoProdPriceAlterations;\nimport at.a1ta.cuco.core.shared.dto.product.CuCoProdPriceAlterations.ProdPriceAlterationType;\nimport at.a1ta.cuco.core.shared.dto.product.CuCoProdPriceCharge;\nimport at.a1ta.cuco.core.shared.dto.product.CuCoProdPriceCharge.ProdPriceChargeType;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultProductNode;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultProductNode.DefaultProductNodeType;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultProductNode.ProductPromotionStatus;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultProductNode.ProductType;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultSubscriptionNode;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultSubscriptionType;\nimport at.a1ta.cuco.core.shared.dto.product.EmptyProductNode;\nimport at.a1ta.cuco.core.shared.dto.product.GeoCallNumber;\nimport at.a1ta.cuco.core.shared.dto.product.LastMileId;\nimport at.a1ta.cuco.core.shared.dto.product.Location;\nimport at.a1ta.cuco.core.shared.dto.product.Location.LocationType;\nimport at.a1ta.cuco.core.shared.dto.product.LocationNode;\nimport at.a1ta.cuco.core.shared.dto.product.MetaData;\nimport at.a1ta.cuco.core.shared.dto.product.MetaDataEntry;\nimport at.a1ta.cuco.core.shared.dto.product.MetaDataEntryType;\nimport at.a1ta.cuco.core.shared.dto.product.Node;\nimport at.a1ta.cuco.core.shared.dto.product.NodeHelper;\nimport at.a1ta.cuco.core.shared.dto.product.PartyNode;\nimport at.a1ta.cuco.core.shared.dto.product.PhysicalResourceNode;\nimport at.a1ta.cuco.core.shared.dto.product.ProductTree;\nimport at.a1ta.cuco.core.shared.dto.product.SAPPhysicalResourceNode;\nimport at.a1ta.cuco.core.shared.dto.product.SAPProductNode;\nimport at.a1ta.cuco.core.shared.dto.product.SAPSubscriptionNode;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionNode;\nimport at.a1ta.cuco.core.shared.dto.product.SubscriptionTree;\nimport at.a1telekom.cdm.common.Money;\nimport at.a1telekom.eai.customerinventory.AllowanceProdPriceAlteration;\nimport at.a1telekom.eai.customerinventory.ComponentProdPrice;\nimport at.a1telekom.eai.customerinventory.GetProductsForSubscriptionRequestDocument;\nimport at.a1telekom.eai.customerinventory.GetProductsForSubscriptionRequestType;\nimport at.a1telekom.eai.customerinventory.GetProductsForSubscriptionResponseDocument;\nimport at.a1telekom.eai.customerinventory.GetProductsResponseType;\nimport at.a1telekom.eai.customerinventory.GetSubscriptionsForPartyRequestDocument;\nimport at.a1telekom.eai.customerinventory.GetSubscriptionsForPartyRequestType;\nimport at.a1telekom.eai.customerinventory.GetSubscriptionsForPartyRequestType.LoadOptions;\nimport at.a1telekom.eai.customerinventory.GetSubscriptionsForPartyResponseDocument;\nimport at.a1telekom.eai.customerinventory.GetSubscriptionsForPartyResponseType;\nimport at.a1telekom.eai.customerinventory.OneTimeChargeProdPriceCharge;\nimport at.a1telekom.eai.customerinventory.OneTimeDiscountProdPriceAlteration;\nimport at.a1telekom.eai.customerinventory.PhysicalResource;\nimport at.a1telekom.eai.customerinventory.ProdPriceAlteration;\nimport at.a1telekom.eai.customerinventory.ProdPriceCharge;\nimport at.a1telekom.eai.customerinventory.Product;\nimport at.a1telekom.eai.customerinventory.Product.BundledProductList;\nimport at.a1telekom.eai.customerinventory.Product.BundledProductList.BundledProduct;\nimport at.a1telekom.eai.customerinventory.ProductBundle;\nimport at.a1telekom.eai.customerinventory.ProductCharacteristicValue;\nimport at.a1telekom.eai.customerinventory.ProductCommitment;\nimport at.a1telekom.eai.customerinventory.ProductComponent;\nimport at.a1telekom.eai.customerinventory.ProductPrice;\nimport at.a1telekom.eai.customerinventory.ProductTermValue;\nimport at.a1telekom.eai.customerinventory.RecurringChargeProdPriceCharge;\nimport at.a1telekom.eai.customerinventory.RecurringDiscountProdPriceAlteration;\nimport at.a1telekom.eai.customerinventory.RequestPagination;\nimport at.a1telekom.eai.customerinventory.SubRelatedCallNumber;\nimport at.a1telekom.eai.customerinventory.Subscription;\nimport at.a1telekom.eai.customerinventory.TechnicalSubscription;\nimport at.a1telekom.eai.customerinventory.impl.ProductBundleImpl;\nimport at.a1telekom.eai.customerinventory.impl.ProductCommitmentImpl;\nimport at.mobilkom.brian.wsdl.AttributeRec;\nimport at.mobilkom.brian.wsdl.BrianCeeQueryOrderResponse;\nimport at.mobilkom.brian.wsdl.BrianCeeQueryOrderResponseDocument;\nimport at.mobilkom.brian.wsdl.CeeOrderRec;\nimport at.mobilkom.brian.wsdl.CeeQOrderResponseRec;\n\n@Service\npublic class ProductBrowserServiceImpl extends BaseEsbClient<CustomerInventoryStub> implements ProductBrowserService {\n  private static final String DD_MM_YYYY = \"dd.MM.yyyy\";\n\n  private static final Logger logger = LoggerFactory.getLogger(ProductBrowserServiceImpl.class);\n\n  private static final boolean GET_SAP_EQUIPMENT = false;\n\n  private CustomerEquipmentService customerEquipmentService;\n  private PartyService partyService;\n  private TextService textService;\n  private SettingService settingService;\n  private String getSubscriptionForPartyRequestPartyId = \"\";\n  private String getSubscriptionForPartyRequestXml = \"\";\n  private String getSubscriptionForPartyResponseXml = \"\";\n  private String getSubscriptionForPartyRequestResponseXml = \"\";\n  private String getProductsForSubscriptionRequestCallNumber = \"\";\n  private String getProductsForSubscriptionRequestXml = \"\";\n  private String getProductsForSubscriptionResponseXml = \"\";\n  private String getProductsForSubscriptionRequestResponseXml = \"\";\n  private EsbAccessParameterDao esbAccessParameterDao;\n  private String esbServiceEndPointUrl = \"\";\n\n  private LinkedHashSet<String> filesToZipList = new LinkedHashSet<String>();\n\n  @Autowired\n  private BrianCeeQueryOrderDao brianCeeQueryOrderDao;\n\n  @Autowired\n  private LocalSettingService localSettingService;\n\n  @Autowired\n  private MarketplaceInventoryService marketplaceInventoryService;\n\n  @Override\n  @Metered(name = \"ProductBrowser.getSubscriptionTree\", absolute = true)\n  public ProductTree getSubscriptionTree(ArrayList<Long> partyIds, String sessionId, boolean hasAuthorityToSeeCustomerInventoryXMLs) {\n    HashMap<Long, ArrayList<Location>> locations = new HashMap<Long, ArrayList<Location>>();\n\n    ArrayList<BaseNode> partyNodes = new ArrayList<BaseNode>();\n\n    for (Long partyId : partyIds) {\n      final PartyNode partyNode = createPartyNode(locations, partyId);\n      partyNodes.add(partyNode);\n    }\n\n    ProductTree result = new ProductTree();\n    result.setLocationMap(locations);\n    result.setPartyNodes(partyNodes);\n    return result;\n  }\n\n  private PartyNode createPartyNode(HashMap<Long, ArrayList<Location>> locations, Long partyId) {\n    PartyNode partyNode = new PartyNode();\n    partyNode.setPartyId(partyId);\n\n    Party party = partyService.get(partyId);\n    partyNode.setId(partyId + \"\");\n    partyNode.setName(party.getName());\n    partyNode.setAddress(party.getFullAddress());\n    partyNode.setIdxStatus(party.getIdxStatus());\n    HashMap<String, ArrayList<Subscription>> locationSubscriptionsMap = getLocationSubscriptionsMap(partyId);\n\n    for (Entry<String, ArrayList<Subscription>> locationSubscriptionEntry : locationSubscriptionsMap.entrySet()) {\n      String locationId = locationSubscriptionEntry.getKey();\n      ArrayList<Subscription> subscriptions = locationSubscriptionEntry.getValue();\n\n      Subscription firstSubscription = subscriptions.get(0);\n\n      String address = \"Keine Adresse\";\n\n      if (firstSubscription.getAddress() != null && firstSubscription.getAddress().getFormattedAddress() != null) {\n        address = StringUtils.defaultIfBlank(firstSubscription.getAddress().getFormattedAddress().getAddressLine1(), \"\").trim();\n        address += \", \" + StringUtils.defaultIfBlank(firstSubscription.getAddress().getFormattedAddress().getAddressLine2(), \"\").trim();\n        address += (StringUtils.isNotBlank(firstSubscription.getAddress().getFormattedAddress().getAddressLine3()) ? \" \" : \"\")\n            + firstSubscription.getAddress().getFormattedAddress().getAddressLine3().trim();\n      }\n\n      LocationNode locationNode;\n      Location location = getLocationForParty(locations, partyId, locationId, address);\n      if (location != null) {\n        locationNode = getLocationNodeByLocation(partyNode, location);\n      } else {\n        location = new Location();\n        location.setAddress(address);\n\n        parseAddressDetails(address, location);\n\n        location.setLocationId(locationId);\n        location.setPartyId(partyId);\n\n        locationNode = new LocationNode();\n        locationNode.setId(locationId);\n        locationNode.setParent(partyNode);\n        partyNode.addChild(locationNode);\n        locationNode.setLocation(location);\n\n        if (!locations.containsKey(partyId)) {\n          locations.put(partyId, new ArrayList<Location>());\n        }\n        locations.get(partyId).add(location);\n      }\n\n      mapSubscritionTreeToParent(subscriptions, locationNode);\n    }\n\n    try {\n      ArrayList<EquipmentConsignee> consignees = new ArrayList<EquipmentConsignee>();\n      if (GET_SAP_EQUIPMENT) {\n        consignees = customerEquipmentService.getEquipmentConsignees(partyId);\n      }\n\n      for (EquipmentConsignee consignee : consignees) {\n        String address = StringUtils.defaultIfBlank(consignee.getStreet(), \"\").trim();\n        address += StringUtils.isEmpty(consignee.getHouseNumber()) ? \"\" : \" \" + StringUtils.defaultIfBlank(consignee.getHouseNumber(), \"\").trim();\n        address += \", \" + StringUtils.defaultIfBlank(consignee.getPlz(), \"\").trim();\n        address += StringUtils.isEmpty(consignee.getCity()) ? \"\" : \" \" + StringUtils.defaultIfBlank(consignee.getCity(), \"\").trim();\n        address = address.trim();\n\n        String name = StringUtils.defaultIfBlank(consignee.getName1(), \"\").trim();\n        name += \" \" + StringUtils.defaultIfBlank(consignee.getName2(), \"\").trim();\n        name = name.trim();\n\n        LocationNode locationNode = new LocationNode();\n        Location location = getLocationForPartyByAddress(locations, partyId, address);\n        if (location != null) {\n          locationNode = getLocationNodeByLocation(partyNode, location);\n        } else {\n\n          location = new Location();\n          location.setAddress(address);\n          location.setLocationId(consignee.getConsignee());\n          location.setPartyId(partyId);\n\n          locationNode = new LocationNode();\n          locationNode.setId(location.getLocationId());\n          locationNode.setLocation(location);\n          partyNode.addChild(locationNode);\n          locationNode.setParent(partyNode);\n\n          if (!locations.containsKey(partyId)) {\n            locations.put(partyId, new ArrayList<Location>());\n          }\n          locations.get(partyId).add(location);\n\n        }\n\n        SAPSubscriptionNode subscriptionNode = new SAPSubscriptionNode();\n        subscriptionNode.setId(consignee.getId());\n        subscriptionNode.setConsigneeId(consignee.getConsignee());\n        subscriptionNode.setConsigneeName(name);\n\n        subscriptionNode.setParent(locationNode);\n        locationNode.addChild(subscriptionNode);\n\n        AsyncPlaceholderNode placeholderNode = new AsyncPlaceholderNode();\n        placeholderNode.setId(\"0\");\n        placeholderNode.setParent(subscriptionNode);\n        subscriptionNode.addChild(placeholderNode);\n      }\n    } catch (Exception e) {\n      logger.error(e.getMessage(), e);\n      throw new RuntimeException(\"An error occurred during the getEquipmentConsignees call: \" + e.getMessage(), e);\n    }\n\n    if (settingService.getBooleanValue(\"productBrowser.showMarketPlaceSubscriptions\", false)) {\n      LocationNode locationNode = marketplaceInventoryService.getMarketplaceAccountsWithSubscriptionsForParty(partyId);\n\n      if (locationNode != null && locationNode.getChildren() != null && locationNode.getChildren().size() > 0 && locationNode.getChildren().get(0).getChildren() != null\n          && locationNode.getChildren().get(0).getChildren().size() > 0) {\n\n        locationNode.setParent(partyNode);\n        boolean unknownLocationFound = false;\n        if (partyNode.getChildren() != null && !partyNode.getChildren().isEmpty()) {\n\n          for (BaseNode node : partyNode.getChildren()) {\n            if (node instanceof LocationNode && \"unknown\".equalsIgnoreCase(node.getId())) {\n              unknownLocationFound = true;\n              node.getChildren().addAll(locationNode.getChildren());\n              break;\n            }\n          }\n\n        }\n        if (!unknownLocationFound) {\n          partyNode.addChild(locationNode);\n        }\n      }\n    }\n    return partyNode;\n  }\n\n  private void parseAddressDetails(String address, Location location) {\n    if (address != null) {\n      String[] split = address.split(\", \");\n      if (split.length == 2) {\n        location.setStreet(split[0].trim());\n        location.setPoBox(split[1].substring(0, 4));\n        location.setCity(split[1].substring(4).trim());\n      }\n    }\n  }\n\n  private LocationType translateLocationType(LocationType oldLocationType, DefaultSubscriptionNode subscriptionNode) {\n    LocationType locationType = oldLocationType;\n\n    if (subscriptionNode.getType() != null) {\n      if (subscriptionNode.getType().equals(DefaultSubscriptionType.Mixed) || subscriptionNode.getType().equals(DefaultSubscriptionType.Unknown)) {\n        locationType = LocationType.HYBRID;\n      } else if (subscriptionNode.getType().equals(DefaultSubscriptionType.Mobile)) {\n        if (locationType == null) {\n          locationType = LocationType.MOBILE;\n        } else if (locationType != LocationType.MOBILE) {\n          locationType = LocationType.HYBRID;\n        }\n      } else if (subscriptionNode.getType().equals(DefaultSubscriptionType.Wireline)) {\n        if (locationType == null) {\n          locationType = LocationType.FIXED;\n        } else if (locationType != LocationType.FIXED) {\n          locationType = LocationType.HYBRID;\n        }\n      }\n    }\n    return locationType;\n  }\n\n  public void mapSubscritionTreeToParent(Iterable<Subscription> subscriptions, LocationNode parent) {\n    LinkedHashMap<String, AccountNode> accounts = new LinkedHashMap<String, AccountNode>();\n\n    LocationType locationType = parent.getLocationTypeFormLocation();\n\n    for (Subscription subscription : subscriptions) {\n      BaseNode parentNodeForSubscription = parent;\n      String accountNumber = null;\n      if (subscription.getCustomerAccount() != null) {\n\n        accountNumber = StringUtils.defaultIfBlank(subscription.getCustomerAccount().getAccountNumber(), \"\");\n        if (accountNumber.startsWith(\"A\") || accountNumber.startsWith(\"a\")) {\n          accountNumber = accountNumber.replaceFirst(\"A\", \"\").replaceFirst(\"a\", \"\");\n        }\n        AccountNode accountNode = accounts.get(accountNumber);\n        if (null == accountNode) {\n          accountNode = AccountNode.builder().accountNumber(accountNumber).parent(parent).build();\n          if (subscription.isSetPartyId() && subscription.getPartyId() != null && !subscription.getPartyId().isEmpty()) {\n            accountNode.setPartyId(Long.parseLong(subscription.getPartyId()));\n          }\n          parent.addChild(accountNode);\n          accounts.put(accountNumber, accountNode);\n        }\n        accountNode.setIdxStatus(subscription.getCustomerAccount().isSetIdxExemption() ? subscription.getCustomerAccount().getIdxExemption() ? IndexationStatus.NOT_INDEXED : IndexationStatus.INDEXED\n            : IndexationStatus.NOT_AVAILABLE);\n\n        if (\"true\".equalsIgnoreCase(settingService.getValue(\"productBrowser.showMAMInfo\"))) {\n          accountNode.setContractSegment(subscription.getCustomerAccount().getAccountType());\n        } else {\n          accountNode.setContractSegment(\"DISABLED\");\n        }\n        parentNodeForSubscription = accountNode;\n      }\n\n      DefaultSubscriptionNode subscriptionNode = prepareSubscriptionNode(subscription, parentNodeForSubscription, accountNumber);\n      locationType = translateLocationType(locationType, subscriptionNode);\n    }\n\n    if (null != parent.getLocation()) {\n      parent.getLocation().setLocationType(locationType);\n    }\n  }\n\n  private DefaultSubscriptionNode prepareSubscriptionNode(Subscription subscription, BaseNode parentNodeForSubscription, String accountNumber) {\n    DefaultSubscriptionNode subscriptionNode = new DefaultSubscriptionNode();\n    subscriptionNode.setLinkedSubscriptionId(subscription.getId());\n    subscriptionNode.setParent(parentNodeForSubscription);\n    if (subscription.isSetPartyId() && subscription.getPartyId() != null && !subscription.getPartyId().isEmpty()) {\n      subscriptionNode.setPartyId(Long.parseLong(subscription.getPartyId()));\n    }\n    if (parentNodeForSubscription != null) {\n      parentNodeForSubscription.addChild(subscriptionNode);\n      subscriptionNode.setIntendedUIDisplay(DISPLAY.BROWSER);\n    } else {\n      subscriptionNode.setIntendedUIDisplay(DISPLAY.TABLE);\n    }\n    if (accountNumber == null && subscription.getCustomerAccount() != null) {\n      accountNumber = StringUtils.defaultIfBlank(subscription.getCustomerAccount().getAccountNumber(), \"\");\n      if (accountNumber.startsWith(\"A\") || accountNumber.startsWith(\"a\")) {\n        accountNumber = accountNumber.replaceFirst(\"A\", \"\").replaceFirst(\"a\", \"\");\n      }\n    }\n\n    subscriptionNode.setId(subscription.getId());\n    subscriptionNode.setSubscriptionId(subscription.getId());\n    subscriptionNode.setAccountNumber(accountNumber);\n    subscriptionNode.setVertragNoForDisplay(formatBEN(subscription));\n\n    subscriptionNode.setIdxStatus(subscription.isSetIdxExemption() ? subscription.getIdxExemption() ? IndexationStatus.NOT_INDEXED : IndexationStatus.INDEXED : IndexationStatus.NOT_AVAILABLE);\n    at.a1telekom.cdm.common.CallNumber phoneNumber = null;\n\n    if (subscription.getRelatedCallNumbers() != null && subscription.getRelatedCallNumbers().getSubRelatedCallNumberArray() != null) {\n      for (SubRelatedCallNumber subRelatedCallNumber : subscription.getRelatedCallNumbers().getSubRelatedCallNumberArray()) {\n        if (subRelatedCallNumber.getType().equalsIgnoreCase(textService.getByKeyWithDefaultText(\"newProductOverviewGeoCallNumberTypeMatchString\", \"GeoNumber\").getText())) {\n          phoneNumber = subRelatedCallNumber.getCallNumber();\n          if (phoneNumber != null) {\n            subscriptionNode.setGeoCallNumber(new GeoCallNumber(phoneNumber.getCC(), phoneNumber.getNDC(), phoneNumber.getSN()));\n          }\n          break;\n        }\n      }\n    }\n\n    if (subscription.getCallNumber() != null) {\n      subscriptionNode.setCallNumber(getCallNumber(subscription));\n      if (subscription.getType().equalsIgnoreCase(textService.getByKeyWithDefaultText(\"newProductOverviewLastMileIdCallNumberTypeMatchString\", \"LastMile\").getText())) {\n        subscriptionNode.setLastMileId(new LastMileId(subscription.getCallNumber().getCC(), subscription.getCallNumber().getNDC(), subscription.getCallNumber().getSN()));\n      }\n    }\n    if (subscription.getCallNumber() == null && subscriptionNode.getLastMileId() == null) {\n      if (subscription.getBillableUser() != null && settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false)) {\n        subscriptionNode.setBillableUser(new BillableUser(subscription.getBillableUser().getUsername()));\n      } else {\n        subscriptionNode.setCallNumber(new CallNumber(\"Keine LastMileId/Rufnummer\", \"\", \"\"));\n        if (settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false)) {\n          subscriptionNode.setBillableUser(new BillableUser(\"Keine BillableUser\"));\n        }\n      }\n    }\n    subscriptionNode.setType(translateSubscriptionType(subscription.getType()));\n    subscriptionNode.setTypeText(subscription.getType());\n\n    setProductBrowserAdditionalInfoIconsAccessibility(subscription, subscriptionNode);\n\n    if (subscription.getAddress() != null && subscription.getAddress().getFormattedAddress() != null) {\n      subscriptionNode.setAddress1(StringUtils.defaultIfBlank(subscription.getAddress().getFormattedAddress().getAddressLine1(), \"\").trim());\n      subscriptionNode.setAddress2(StringUtils.defaultIfBlank(subscription.getAddress().getFormattedAddress().getAddressLine2(), \"\").trim());\n      subscriptionNode.setAddress3(StringUtils.defaultIfBlank(subscription.getAddress().getFormattedAddress().getAddressLine3(), \"\").trim());\n    }\n\n    AsyncPlaceholderNode placeholderNode = new AsyncPlaceholderNode();\n    placeholderNode.setId(\"0\");\n\n    if (subscriptionNode.getIntendedUIDisplay() != DISPLAY.TABLE) {\n      placeholderNode.setParent(subscriptionNode);\n      subscriptionNode.addChild(placeholderNode);\n    }\n    return subscriptionNode;\n  }\n\n  private void setProductBrowserAdditionalInfoIconsAccessibility(Subscription subscription, DefaultSubscriptionNode subscriptionNode) {\n    String allowedTypesForFeasibilityCheck = settingService.getValue(\"tableViewFeasibilityCheckAllowedTypes\");\n    String allowedTypesForA1CoachLink = settingService.getValue(\"tableViewA1CoachLinkAllowedTypes\");\n    subscriptionNode.setFeasibilityCheckAvailable(!(subscription.getType() != null\n        && Arrays.asList((allowedTypesForFeasibilityCheck == null ? \"\" : allowedTypesForFeasibilityCheck).split(Separator.SEMICOLON)).contains(subscription.getType())));\n    subscriptionNode.setDisplayA1CoachLink(\n        (subscription.getType() != null && Arrays.asList((allowedTypesForA1CoachLink == null ? \"\" : allowedTypesForA1CoachLink).split(Separator.SEMICOLON)).contains(subscription.getType())));\n  }\n\n  private String formatBEN(Subscription subscription) {\n    String billingArrangementNumber = subscription.getBillingArrangement() != null ? subscription.getBillingArrangement().getBillingArrangementNumber().trim() : \"\";\n    if (billingArrangementNumber.toUpperCase().startsWith(\"A\")) {\n      billingArrangementNumber = billingArrangementNumber.toUpperCase().replaceFirst(\"A\", \"\");\n    }\n    if (billingArrangementNumber.contains(\",\")) {\n      String[] split = billingArrangementNumber.split(\",\");\n      billingArrangementNumber = split[0] + \"/\" + split[1].replaceAll(\"^0+\", \"\");\n    }\n\n    return billingArrangementNumber;\n  }\n\n  private Location getLocationForParty(HashMap<Long, ArrayList<Location>> locations, Long partyId, String locationId, String address) {\n    Location location = null;\n    location = getLocationForPartyByLocationId(locations, partyId, locationId);\n    if (location == null) {\n      location = getLocationForPartyByAddress(locations, partyId, address);\n    }\n    if (location != null && location.getLocationId() == null) {\n      location.setLocationId(locationId);\n    }\n    return location;\n  }\n\n  private Location getLocationForPartyByLocationId(HashMap<Long, ArrayList<Location>> locations, Long partyId, String locationId) {\n    if (locationId != null) {\n      if (!locations.containsKey(partyId)) {\n        return null;\n      }\n      for (Location loc : locations.get(partyId)) {\n        if (locationId.equals(loc.getLocationId())) {\n          return loc;\n        }\n      }\n    }\n    return null;\n  }\n\n  private Location getLocationForPartyByAddress(HashMap<Long, ArrayList<Location>> locations, Long partyId, String address) {\n    if (address != null) {\n      if (!locations.containsKey(partyId)) {\n        return null;\n      }\n      for (Location loc : locations.get(partyId)) {\n        if (loc.getAddress().equals(address)) {\n          return loc;\n        }\n      }\n    }\n    return null;\n  }\n\n  private LocationNode getLocationNodeByLocation(PartyNode partyNode, Location location) {\n    for (Node node : partyNode.getChildren()) {\n      if (node instanceof LocationNode) {\n        if (((LocationNode) node).getLocation().equals(location)) {\n          return (LocationNode) node;\n        }\n      }\n    }\n    return null;\n  }\n\n  private DefaultSubscriptionType translateSubscriptionType(String type) {\n    try {\n      return DefaultSubscriptionType.valueOf(type);\n    } catch (Exception e) {\n      return DefaultSubscriptionType.Unknown;\n    }\n  }\n\n  public HashMap<String, ArrayList<Subscription>> getLocationSubscriptionsMap(long partyId) {\n    try {\n\n      HashMap<String, ArrayList<Subscription>> locationSubscriptionMap = new HashMap<String, ArrayList<Subscription>>();\n      GetSubscriptionsForPartyResponseType resp;\n      String mockResponseFileName = System.getProperty(\"catalina.base\") + \"//mocks//CI_getSubscriptionsForParty_CMSYS3218.xml\";\n      if (settingService.getBooleanValue(\"testModeActive\", false) && settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false)\n          && new File(mockResponseFileName).exists()) {\n        resp = GetSubscriptionsForPartyResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileName))).getGetSubscriptionsForPartyResponse();\n      } else {\n        GetSubscriptionsForPartyResponseDocument respDoc = stub.getSubscriptionsForParty(prepareRequestForGetSubsForParty(partyId, true, true, false, true,\n            (settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false) ? true : false), true, 1), null);\n        resp = respDoc.getGetSubscriptionsForPartyResponse();\n      }\n\n      if (resp.getSubscriptions() == null || resp.getSubscriptions().getSubscriptionArray() == null) {\n        return locationSubscriptionMap;\n      }\n      for (Subscription subscription : resp.getSubscriptions().getSubscriptionArray()) {\n        String locationId = (subscription.getAddress() == null || !subscription.getAddress().isSetLkmsId() || subscription.getAddress().getLkmsId() == null) ? \"unknown\"\n            : subscription.getAddress().getLkmsId();\n\n        if (!locationSubscriptionMap.containsKey(locationId)) {\n          locationSubscriptionMap.put(locationId, new ArrayList<Subscription>());\n        }\n\n        ArrayList<Subscription> currSubscriptions = locationSubscriptionMap.get(locationId);\n        currSubscriptions.add(subscription);\n      }\n\n      return locationSubscriptionMap;\n    } catch (Exception e) {\n      logger.error(e.getMessage(), e);\n      throw new RuntimeException(\"An error occurred during the getSubscriptionsForParty call: \" + e.getMessage(), e);\n    }\n  }\n\n  private GetSubscriptionsForPartyRequestDocument prepareRequestForGetSubsForParty(Long partyId, boolean getFixedNet, boolean getMobileNet, boolean getProducts, boolean getLocation,\n      boolean getBillableUser, boolean getTopLevelProductsOnly, int pageNumber) {\n    GetSubscriptionsForPartyRequestDocument reqDoc = GetSubscriptionsForPartyRequestDocument.Factory.newInstance();\n    GetSubscriptionsForPartyRequestType req = GetSubscriptionsForPartyRequestType.Factory.newInstance();\n    req.setPartyId(partyId + \"\");\n    req.setLoadOptions(getLoadOptionsForGetSubsForParty(getFixedNet, getMobileNet, getProducts, getLocation, getBillableUser, getTopLevelProductsOnly, pageNumber));\n\n    reqDoc.setGetSubscriptionsForPartyRequest(req);\n    getSubscriptionForPartyRequestPartyId = partyId + \"\";\n    getSubscriptionForPartyRequestXml = \"<request>\" + \"\\n\" + reqDoc.toString() + \"\\n\" + \"</request>\";\n    return reqDoc;\n  }\n\n  // This method is called from CalcTool to load prices for a ban\n  @Override\n  public Product[] getProductsForCustomerAccount(String ban, String partyId) {\n    try {\n      if (ban == null || ban.toString().isEmpty() || partyId == null || partyId.isEmpty()) {\n        logger.error(\"Invalid Request for getProductsForCustomerAccount , BAN is not sent with request : BAN=\" + ban);\n        throw new RuntimeException(\"Invalid Request for getProductsForCustomerAccount , BAN is not sent with request : BAN=\" + ban);\n      }\n\n      // addiing prefix for amdocs accounts as requested by customer inventory\n      if (!ban.startsWith(\"A\") && !ban.startsWith(\"a\")) {\n        ban = \"A\" + ban.trim();\n      }\n      GetSubscriptionsForPartyResponseType resp;\n      GetSubscriptionsForPartyRequestDocument request = prepareRequestForGetSubsForParty(Long.parseLong(partyId), false, true, true, false,\n          (settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false) ? true : false), false, 1);\n      request.getGetSubscriptionsForPartyRequest().setCustomerAccountNumber(ban);\n      String mockResponseFileName = System.getProperty(\"catalina.base\") + \"//mocks//CI_getSubscriptionsForParty_CMSYS3218.xml\";\n      if (settingService.getBooleanValue(\"testModeActive\", false) && settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false)\n          && new File(mockResponseFileName).exists()) {\n        resp = GetSubscriptionsForPartyResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileName))).getGetSubscriptionsForPartyResponse();\n      } else {\n        GetSubscriptionsForPartyResponseDocument respDoc = stub.getSubscriptionsForParty(request, null);\n        resp = respDoc.getGetSubscriptionsForPartyResponse();\n      }\n\n      if (resp == null || !resp.isSetSubscriptions()) {\n        return null;\n      }\n      List<Product> productLists = new ArrayList<Product>();\n\n      for (Subscription subscription : resp.getSubscriptions().getSubscriptionArray()) {\n        if (subscription.isSetProducts()) {\n          Collections.addAll(productLists, subscription.getProducts().getProductArray());\n        }\n      }\n\n      while (!resp.getPagination().getIsLastPage()) {\n        request = prepareRequestForGetSubsForParty(Long.parseLong(partyId), false, true, true, false,\n            (settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false) ? true : false), false, resp.getPagination().getPageNumber() + 1);\n        request.getGetSubscriptionsForPartyRequest().setCustomerAccountNumber(ban);\n\n        GetSubscriptionsForPartyResponseDocument respDoc = stub.getSubscriptionsForParty(request, null);\n        resp = respDoc.getGetSubscriptionsForPartyResponse();\n\n        if (resp == null || !resp.isSetSubscriptions()) {\n          return productLists.toArray(new Product[productLists.size()]);\n        }\n\n        for (Subscription subscription : resp.getSubscriptions().getSubscriptionArray()) {\n          if (subscription.isSetProducts()) {\n            Collections.addAll(productLists, subscription.getProducts().getProductArray());\n          }\n        }\n      }\n\n      return productLists.toArray(new Product[productLists.size()]);\n    } catch (Exception e) {\n      logger.error(e.getMessage(), e);\n      throw new RuntimeException(\"An error occurred during the getProductsForCustomerAccount call: \" + e.getMessage(), e);\n    }\n  }\n\n  private LoadOptions getLoadOptionsForGetSubsForParty(boolean getFixedNet, boolean getMobileNet, boolean getProducts, boolean getLocation, boolean getBillableUser, boolean getTopLevelProductsOnly,\n      int pageNumber) {\n    LoadOptions loadOptions = LoadOptions.Factory.newInstance();\n    loadOptions.setGetFixedNet(getFixedNet);\n    loadOptions.setGetMobileNet(getMobileNet);\n    loadOptions.setGetProducts(getProducts);\n    loadOptions.setGetLocation(getLocation);\n    loadOptions.setGetBillableUser(getBillableUser);\n    loadOptions.setGetTopLevelProductsOnly(getTopLevelProductsOnly);\n    loadOptions.setPagination(RequestPagination.Factory.newInstance());\n    loadOptions.getPagination().setPageNumber(pageNumber);\n    loadOptions.getPagination().setPageSize(settingService.getIntValue(\"productBrowser.loadOptions.getSubscriptionsForPartyPageSize\", 500));\n    loadOptions.setGetAccountDiscounts(true);\n    loadOptions.setGetNonCDM(true);\n    return loadOptions;\n  }\n\n  @Override\n  public SubscriptionTree getSubscriptionTree(SubscriptionNode node, String sessionId, boolean hasAuthorityToSeeCustomerInventoryXMLs) {\n    if (node instanceof DefaultSubscriptionNode) {\n      return getDefaultProductNodes((DefaultSubscriptionNode) node, sessionId, hasAuthorityToSeeCustomerInventoryXMLs);\n    }\n    if (node instanceof SAPSubscriptionNode) {\n      return getSAPProductNodes((SAPSubscriptionNode) node);\n    }\n    return getEmptyProductNodes();\n  }\n\n  private SubscriptionTree getSAPProductNodes(SAPSubscriptionNode node) {\n\n    try {\n      EquipmentTree equipmentTree = customerEquipmentService.getEquipmentTree(node.getConsigneeId(), NodeHelper.getPartyNode(node).getPartyId());\n\n      SubscriptionTree tree = new SubscriptionTree();\n      ArrayList<BaseNode> productNodes = new ArrayList<BaseNode>();\n      tree.setProductNodes(productNodes);\n\n      for (Equipment child : equipmentTree.getChildren()) {\n        BaseNode buildSapEquipmentNode = buildSapEquipmentNode(child, null);\n        buildSapEquipmentNode.setPartyId(NodeHelper.getPartyNode(node).getPartyId());\n        tree.getProductNodes().add(buildSapEquipmentNode);\n      }\n\n      return tree;\n    } catch (Exception e) {\n      logger.error(e.getMessage(), e);\n      throw new RuntimeException(\"An error occurred during the getEquipmentTree call: \" + e.getMessage());\n    }\n  }\n\n  private BaseNode buildSapEquipmentNode(Equipment equipment, BaseNode parentNode) {\n    BaseNode childNode = createNode(equipment);\n\n    if (parentNode != null) {\n      childNode.setParent(parentNode);\n      parentNode.addChild(childNode);\n    }\n\n    if (equipment.hasChildren()) {\n      for (Equipment childEquipment : equipment.getChildren()) {\n        buildSapEquipmentNode(childEquipment, childNode);\n      }\n    }\n\n    return childNode;\n  }\n\n  private BaseNode createNode(Equipment equipment) {\n    String name = StringUtils.defaultIfBlank(equipment.getTypBezeichnung(), \"\");\n    name = name.isEmpty() ? \"\" : name + \" - \";\n    name += StringUtils.defaultIfBlank(equipment.getName(), equipment.getId());\n\n    if (equipment.isMaterial()) {\n      SAPPhysicalResourceNode node = new SAPPhysicalResourceNode();\n      node.setId(equipment.getId());\n      node.setText(name);\n      node.setMetaData(MetaDataHelper.createMetaData(equipment));\n      node.setEquipmentAttributes(MetaDataHelper.createMetaDataEquipmentAttributes(equipment));\n      return node;\n    }\n\n    SAPProductNode node = new SAPProductNode();\n    node.setText(name);\n    mapEquipmentTyp(equipment);\n\n    node.setMetaData(MetaDataHelper.createMetaData(equipment));\n    node.setEquipmentAttributes(MetaDataHelper.createMetaDataEquipmentAttributes(equipment));\n    return node;\n  }\n\n  private void mapEquipmentTyp(Equipment equipment) {\n    if (equipment.getEquipmentTyp() != null) {\n      Text text = textService.getByKeyWithDefaultText(equipment.getEquipmentTyp(), equipment.getEquipmentTyp());\n      equipment.setEquipmentTyp(text.getText());\n    }\n  }\n\n  private SubscriptionTree getEmptyProductNodes() {\n    SubscriptionTree tree = new SubscriptionTree();\n    ArrayList<BaseNode> productNodes = new ArrayList<BaseNode>();\n    productNodes.add(new EmptyProductNode());\n    tree.setProductNodes(productNodes);\n    return tree;\n  }\n\n  // // this method is designed to be called for Product browser View\n  public SubscriptionTree getDefaultProductNodes(DefaultSubscriptionNode subscriptionNode, String sessionId, boolean hasAuthorityToSeeCustomerInventoryXMLs) {\n    try {\n      subscriptionNode.setChildDetailsLoaded(true);\n      at.a1telekom.eai.customerinventory.GetProductsRequestType.LoadOptions loadOptions = at.a1telekom.eai.customerinventory.GetProductsRequestType.LoadOptions.Factory.newInstance();\n      loadOptions.setGetResources(true);\n      loadOptions.setGetTerminatedProducts(false);\n      loadOptions.setGetPrices(true);\n      loadOptions.setGetOrderingStack(true);\n      loadOptions.setGetNonCDM(true);\n      loadOptions.setGetAccountDiscounts(true);\n      // loadOptions.setGetProductCatalogDetails(true); // deactivated until CustomerInventoryStub really delivers data\n\n      GetProductsForSubscriptionRequestType request = GetProductsForSubscriptionRequestType.Factory.newInstance();\n      request.setLoadOptions(loadOptions);\n      if (subscriptionNode.getBillableUser() == null) {\n        at.a1telekom.cdm.common.CallNumber cn = request.addNewCallNumber();\n        if (subscriptionNode.getLastMileId() != null) {\n          cn.setCC(subscriptionNode.getLastMileId().getCountryCode());\n          cn.setNDC(subscriptionNode.getLastMileId().getOnkz());\n          cn.setSN(subscriptionNode.getLastMileId().getTnum());\n          getProductsForSubscriptionRequestCallNumber = subscriptionNode.getLastMileId().getCountryCode() + subscriptionNode.getLastMileId().getOnkz() + subscriptionNode.getLastMileId().getTnum();\n        } else if (subscriptionNode.getCallNumber() != null) {\n          cn.setCC(subscriptionNode.getCallNumber().getCountryCode());\n          cn.setNDC(subscriptionNode.getCallNumber().getOnkz());\n          cn.setSN(subscriptionNode.getCallNumber().getTnum());\n          getProductsForSubscriptionRequestCallNumber = subscriptionNode.getCallNumber().getCountryCode() + subscriptionNode.getCallNumber().getOnkz() + subscriptionNode.getCallNumber().getTnum();\n        }\n        request.setCallNumber(cn);\n      } else if (settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false)) {\n        request.setBillableUserName(subscriptionNode.getBillableUser().getUserName());\n      }\n\n      GetProductsForSubscriptionRequestDocument reqDoc = GetProductsForSubscriptionRequestDocument.Factory.newInstance();\n      reqDoc.setGetProductsForSubscriptionRequest(request);\n      getProductsForSubscriptionRequestXml = \"<request>\" + \"\\n\" + reqDoc.toString() + \"\\n\" + \"</request>\";\n      GetProductsResponseType response;\n      GetProductsForSubscriptionResponseDocument respDoc;\n      String mockResponseFileNameForCmsys2294 = System.getProperty(\"catalina.base\") + \"//mocks//CI_getProductsForSubscription_CMSYS2294.xml\";\n      String mockResponseFileNameForCmsys3218 = System.getProperty(\"catalina.base\") + \"//mocks//CI_getProductsForSubscription_CMSYS3218.xml\";\n      if (settingService.getBooleanValue(\"testModeActive\", false) && subscriptionNode.getId().equalsIgnoreCase(\"L10287438\") && new File(mockResponseFileNameForCmsys2294).exists()) {\n        response = GetProductsForSubscriptionResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileNameForCmsys2294))).getGetProductsForSubscriptionResponse();\n      } else if (settingService.getBooleanValue(\"testModeActive\", false) && new File(mockResponseFileNameForCmsys3218).exists()\n          && settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false)) {\n        response = GetProductsForSubscriptionResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileNameForCmsys3218))).getGetProductsForSubscriptionResponse();\n        getProductsForSubscriptionResponseXml = \"<response>\" + \"\\n\" + response.toString() + \"\\n\" + \"</response>\";\n      } else {\n        respDoc = stub.getProductsForSubscription(reqDoc, null);\n\n        response = respDoc.getGetProductsForSubscriptionResponse();\n        getProductsForSubscriptionResponseXml = \"<response>\" + \"\\n\" + respDoc.toString() + \"\\n\" + \"</response>\";\n      }\n      if (!(settingService.getBooleanValue(\"productBrowser.createZipWithInitialPreLoadLogic\", false)) && hasAuthorityToSeeCustomerInventoryXMLs\n          && settingService.getBooleanValue(\"productBrowser.a1OneTvPart2Active\", true)) {\n        File createFolderForUploading = new File(getUploadPathForCustomerInventoryFolder());\n\n        File createFolderAsPerSession = new File(createFolderForUploading + File.separator + sessionId);\n\n        File defaultZipPathWithPartyId = new File(createFolderAsPerSession + File.separator\n            + textService.getByKeyWithDefaultText(\"newProductOverviewCustomerInventoryDotAsPrefix\", \"CustomerInventory.\").getText() + getSubscriptionForPartyRequestPartyId);\n\n        getProductsForSubscriptionRequestResponseXml = \"<esbWebServiceCall>\" + \"\\n\" + \"<esbEndpoint> \" + esbServiceEndPointUrl + \" </esbEndpoint>\" + \"\\n\" + getProductsForSubscriptionRequestXml + \"\\n\"\n            + getProductsForSubscriptionResponseXml + \"\\n\" + \"</esbWebServiceCall>\";\n        createGetProductsForSubscriptionRequestResponseFiles(defaultZipPathWithPartyId);\n        File getZipFile = new File(defaultZipPathWithPartyId + File.separator + textService.getByKeyWithDefaultText(\"newProductOverviewCustomerInventoryDotAsPrefix\", \"CustomerInventory.\").getText()\n            + getSubscriptionForPartyRequestPartyId + textService.getByKeyWithDefaultText(\"newProductOverviewReqRespZipSuffix\", \".zip\").getText());\n        if (getZipFile.exists()) {\n          getZipFile.delete();\n        }\n        filesToZipList.clear();\n        getAllCiRequestResponseFileListToZip(defaultZipPathWithPartyId);\n        createCiRequestResponseFolderZip(getZipFile.toString(), defaultZipPathWithPartyId.toString());\n      }\n      SubscriptionTree tree = new SubscriptionTree();\n      ArrayList<BaseNode> productNodes = new ArrayList<BaseNode>();\n      tree.setProductNodes(productNodes);\n      tree.setSubscriptionNode(subscriptionNode);\n      if (DISPLAY.TABLE == subscriptionNode.getIntendedUIDisplay()) {\n        subscriptionNode.setChildren(productNodes);\n      }\n      if (response.getSubscription() != null && response.getSubscription().getProducts() != null && response.getSubscription().getProducts().getProductArray() != null) {\n        boolean searchForChildrenWithMatchingCallNumber = settingService.getBooleanValue(\"productBrowser.filterBundlesWithSubscriptionID\", false)\n            && !subscriptionNode.getSubscriptionId().equalsIgnoreCase(response.getSubscription().getId());\n        for (Product product : response.getSubscription().getProducts().getProductArray()) {\n          if (DISPLAY.TABLE != subscriptionNode.getIntendedUIDisplay() || shouldAddProduct(product.getName())) {\n            DefaultProductNode node = createNode(product, subscriptionNode, subscriptionNode, searchForChildrenWithMatchingCallNumber);\n            node.setMatchingCallNumberWithRootSubscription(!searchForChildrenWithMatchingCallNumber);\n            if (!node.hasOANProductInChildNodes()) {\n              node.setHasOANProductInHiddenNodes(hasHiddenOANProducts(product));\n            }\n            node.setParent(subscriptionNode);\n            productNodes.add(node);\n            if (response.getSubscription().isSetCallNumber()) {\n              node.setRootCallNumberForBundleProduct(getCallNumber(response.getSubscription()));\n            } else {\n              node.setRootCallNumberForBundleProduct(subscriptionNode.getCallNumber());\n            }\n            subscriptionNode.setRootCallNumberForBundleProduct(node.getRootCallNumberForBundleProduct());\n          } else {\n            productNodes.add(new EmptyProductNode());\n          }\n        }\n        if (searchForChildrenWithMatchingCallNumber && !subscriptionNode.getChildrenWithMatchingCallNumbers().isEmpty()) {\n          tree.getProductNodes().addAll(subscriptionNode.getChildrenWithMatchingCallNumbers());\n          subscriptionNode.setChildrenWithMatchingCallNumbersArraySize(subscriptionNode.getChildrenWithMatchingCallNumbers().size());\n        }\n      } else {\n        productNodes.add(new EmptyProductNode());\n      }\n\n      return tree;\n    } catch (Exception e) {\n      logger.error(\"An error occurred during the getProductsForSubscription call: \" + e.getMessage(), e);\n      throw new RuntimeException(e.getMessage(), e);\n    }\n  }\n\n  private boolean hasHiddenOANProducts(Product product) {\n    MetaData metaData = new MetaData();\n    if (product instanceof ProductBundle && !isVoiceProduct(product)) {\n      final ProductBundleImpl productBundle = (ProductBundleImpl) product;\n      BundledProductList bundledProductList = productBundle.getBundledProductList();\n      if (bundledProductList != null) {\n        for (BundledProduct childProduct : bundledProductList.getBundledProductArray()) {\n          metaData.put(MetaDataHelper.createMetaData(childProduct.getProduct(), new ArrayList<String>()));\n          if (getOANIdentifier(metaData)) {\n            return true;\n          }\n          if (hasHiddenOANProducts(childProduct.getProduct())) {\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private PhysicalResourceNode createNode(PhysicalResource res) {\n    PhysicalResourceNode node = new PhysicalResourceNode();\n    node.setText(res.getName());\n    node.setId(res.getSerialNumber());\n    node.setMetaData(new MetaData());\n    node.getMetaData().put(MetaDataHelper.createMetaData(res));\n    return node;\n  }\n\n  private void setXploreTvUsernameProductCharacteristic(Product product, DefaultProductNode node) {\n\n    for (TechnicalSubscription technicalSubscription : product.getTechnicalSubscriptionArray()) {\n      String zappwareTypeIdentifier = \"Zappware\";\n      String zappwareType = technicalSubscription.getType();\n\n      if (zappwareType.equals(zappwareTypeIdentifier)) {\n\n        try {\n          BrianCeeQueryOrderResponseDocument brianCeeQueryOrderResponseDocument = brianCeeQueryOrderDao.getCeeQueryOrderResponse(technicalSubscription.getTechnicalSubscriptionId());\n          BrianCeeQueryOrderResponse brianCeeQueryOrderResponse = brianCeeQueryOrderResponseDocument.getBrianCeeQueryOrderResponse();\n          CeeQOrderResponseRec ceeQOrderResponseRec = brianCeeQueryOrderResponse.getCeeQueryOrderResponse();\n          CeeOrderRec[] ceeOrderRecArray = ceeQOrderResponseRec.getCeeOrderArray();\n\n          for (CeeOrderRec ceeOrderRec : ceeOrderRecArray) {\n            for (AttributeRec attributeRec : ceeOrderRec.getAttributeArray()) {\n              String xploreTVAttributeName = \"InitHouseholdMailUser\";\n              if (attributeRec.getAttrName().equals(xploreTVAttributeName)) {\n                MetaDataEntry dataEntry = new MetaDataEntry(\"A1 Xplore TV Benutzername\", \"getXploreTvUsername\", attributeRec.getAttrValue(), MetaDataEntryType.STRING);\n                node.getProductCharacteristicValuesAsMetaData().getAll().add(dataEntry);\n              }\n            }\n          }\n        } catch (Exception e) {\n          logger.error(\"Error while retrieving xplore tv username for technicalSubscriptionId\" + technicalSubscription.getTechnicalSubscriptionId(), e);\n        }\n      }\n    }\n  }\n\n  private DefaultProductNode createNode(Product product, BaseNode parent, SubscriptionNode rootSubscriptionNode, boolean searchForChildrenWithMatchingCallNumber) {\n\n    DefaultProductNode node = new DefaultProductNode();\n\n    node.setDepth(parent != null ? parent.getDepth() + 1 : 0);\n    node.setId(product.getProductId());\n    node.setText(product.getName());\n    node.setIntendedUIDisplay(parent != null ? parent.getIntendedUIDisplay() : DISPLAY.BROWSER);\n    node.setMetaData(new MetaData());\n    node.setPartyId(parent != null ? parent.getPartyId() : null);\n    if (product.isSetSubscription()) {\n      node.setLinkedSubscriptionId(product.getSubscription().getId());\n    }\n\n    if (product.isSetCallNumber()) {\n      node.setCallNumber(getCallNumber(product));\n      if (searchForChildrenWithMatchingCallNumber && node.getCallNumber() != null && node.getCallNumber().equals(rootSubscriptionNode.getCallNumber())) {\n        node.setLinkedSubscriptionId(rootSubscriptionNode.getSubscriptionId());\n      }\n    }\n    mapProductStatus(product);\n\n    mapTarifs(product);\n    final String autoVVLProductOfferingTermID = settingService.getValue(\"productBrowser.metaData.autoVVLproductOfferingTermID\");\n    final String blacklistValue = settingService.getValue(\"productBrowser.metaData.BlacklistedProductSpecCharacteristicIds\");\n    final String promotionAvailableProductOfferingTermValueId = settingService.getValue(\"productBrowser.metaData.promotionAvailableProductOfferingTermValueId\");\n    final String promotionNotAvailableProductOfferingTermValueId = settingService.getValue(\"productBrowser.metaData.promotionNotAvailableProductOfferingTermValueId\");\n    final String promotionAvalabilityStatusProductOfferingTermId = settingService.getValue(\"productBrowser.metaData.promotionAvalabilityStatusProductOfferingTermId\");\n    final String blacklistValuesForNewProductViewStr = textService.getByKeyWithDefaultText(\"admin_productBrowserTableViewBlacklist\", \"\").getText();\n    final String whitelistValuesForNewProductViewStr = textService.getByKeyWithDefaultText(\"admin_productBrowserTableViewWhitelist\", \"\").getText();\n    final String filterMode = settingService.getValue(\"productBrowser.tableView.productCharacteristic.mode\");\n    List<String> blacklistValuesForNewProductView = Arrays.asList((blacklistValuesForNewProductViewStr == null ? \"\" : blacklistValuesForNewProductViewStr).split(Separator.SEMICOLON));\n    List<String> whitelistValuesForNewProductView = Arrays.asList((whitelistValuesForNewProductViewStr == null ? \"\" : whitelistValuesForNewProductViewStr).split(Separator.SEMICOLON));\n\n    List<String> blacklistedProductSpecCharacteristicIdsList = Arrays.asList((blacklistValue == null ? \"\" : blacklistValue).split(Separator.SEMICOLON));\n    ArrayList<MetaDataEntry> metaDatas = MetaDataHelper.createMetaData(product, blacklistedProductSpecCharacteristicIdsList);\n    node.getMetaData().put(metaDatas);\n    node.setProductCharacteristicValuesAsMetaData(new MetaData());\n    node.getProductCharacteristicValuesAsMetaData()\n        .put(MetaDataHelper.getProductCharacteristicValuesMetaDataEntries(product.getProductCharacteristicValues(), filterMode, blacklistValuesForNewProductView, whitelistValuesForNewProductView));\n\n    setXploreTvUsernameProductCharacteristic(product, node);\n\n    String productCharacteristicValues = \"\";\n    for (MetaDataEntry entry : node.getProductCharacteristicValuesAsMetaData().getAll()) {\n      productCharacteristicValues += \"<pre-wrap style='font-family: Verdana;'>\" + entry.getName() + \": \" + entry.getValue() + \"</pre-wrap>\" + \"<br/>\";\n    }\n    node.setProductCharacteristicValuesAsString(productCharacteristicValues);\n    node.setVoiceProductType(ProductType.UNDEFINED);\n    node.setValidForStart(MetaDataHelper.getValidForStart(product.getValidFor()) != null ? FastDateFormat.getInstance(DD_MM_YYYY).format(MetaDataHelper.getValidForStart(product.getValidFor())) : \"-\");\n    node.setValidForEnd(MetaDataHelper.getValidForEnd(product.getValidFor()) != null ? FastDateFormat.getInstance(DD_MM_YYYY).format(MetaDataHelper.getValidForEnd(product.getValidFor())) : \"-\");\n    node.setProductName(product.getName());\n    node.setProductBrand(product.getBrand());\n    node.setProductStatus(product.getProductStatus());\n    if (product.getProductTermValues() != null && product.getProductTermValues().getProductTermValueArray() != null) {\n      for (ProductTermValue res : product.getProductTermValues().getProductTermValueArray()) {\n        if (res != null && res.getProductOfferingTermValue() != null && res.getProductOfferingTermValue().getProductOfferingTerm() != null) {\n          final String currentProductOfferingTermId = res.getProductOfferingTermValue().getProductOfferingTerm().getProductOfferingTermId();\n          final String currentProductOfferingTermVal = res.getProductOfferingTermValue().getProductOfferingTermValueId();\n          if (autoVVLProductOfferingTermID.equals(currentProductOfferingTermId)) {\n            node.setProductOfferingTermId(currentProductOfferingTermId);\n            node.setAutoVVLDuration(res.getProductOfferingTermValue().getValue());\n          }\n\n          if (currentProductOfferingTermId.equals(promotionAvalabilityStatusProductOfferingTermId) && promotionAvailableProductOfferingTermValueId.equals(currentProductOfferingTermVal)) {\n            node.setPromotionStatus(ProductPromotionStatus.AVAILABLE);\n          }\n          if (currentProductOfferingTermId.equals(promotionAvalabilityStatusProductOfferingTermId) && promotionNotAvailableProductOfferingTermValueId.equals(currentProductOfferingTermVal)) {\n            node.setPromotionStatus(ProductPromotionStatus.NOT_AVAILABLE);\n          }\n\n        }\n\n        if (res instanceof ProductCommitment) {\n          final ProductCommitmentImpl productCommitment = (ProductCommitmentImpl) res;\n          node.setCommitmentStartDate(productCommitment.getCommitmentStart() != null ? FastDateFormat.getInstance(DD_MM_YYYY).format(productCommitment.getCommitmentStart().getTime()) : \"\");\n          node.setCommitmentEndDate(productCommitment.getCommitmentEnd() != null ? FastDateFormat.getInstance(DD_MM_YYYY).format(productCommitment.getCommitmentEnd().getTime()) : \"\");\n          node.setCommitmentDuration(productCommitment.getDurationMonth());\n        }\n      }\n      if (node.getCommitmentEndDate() != null) {\n        try {\n          node.setAutoVVLStartDate(FastDateFormat.getInstance(DD_MM_YYYY).format(addOneDay(new SimpleDateFormat(DD_MM_YYYY).parse(node.getCommitmentEndDate()))));\n        } catch (Exception e) {\n          logger.error(\"Error While calculating autovvl end date with value \" + node.getCommitmentEndDate(), e);\n        }\n\n        try {\n          node.setAutoVVLEndDate(FastDateFormat.getInstance(DD_MM_YYYY)\n              .format(addMonth(addOneDay(new SimpleDateFormat(DD_MM_YYYY).parse(node.getCommitmentEndDate())), node.getAutoVVLDuration() != null ? Integer.parseInt(node.getAutoVVLDuration()) : 0)));\n        } catch (Exception e) {\n          logger.error(\"Error While calculating autovvl end date with value \" + node.getCommitmentEndDate() + \" and autovvl duration \" + node.getAutoVVLDuration(), e);\n        }\n      }\n    }\n\n    if (product.isSetProductPrices() && product.getProductPrices() != null && product.getProductPrices().sizeOfProductPriceArray() > 0) {\n\n      if (settingService.getBooleanValue(\"idxMay2017.ProductBrowser.priceTable\", false)) {\n        ArrayList<CuCoProdPriceAlterations> alterations = new ArrayList<CuCoProdPriceAlterations>();\n        Map<String, CuCoProdPriceCharge> charges = new HashMap<String, CuCoProdPriceCharge>();\n        // extracting charges and alterations\n        for (ProductPrice current : product.getProductPrices().getProductPriceArray()) {\n          if (current instanceof ProdPriceCharge && ((ProdPriceCharge) current).getPrice() != null && ((ProdPriceCharge) current).getPrice().getAmount().compareTo(BigDecimal.ZERO) == 1) {\n            if (current instanceof RecurringChargeProdPriceCharge) {\n              CuCoComponentProductPrice extractedRecurringChargePrice = extractRecurringChargePrice((RecurringChargeProdPriceCharge) current);\n              node.addToAllPrices(extractedRecurringChargePrice);\n              node.addToPriceTree((CuCoProdPriceCharge) extractedRecurringChargePrice);\n              charges.put(extractedRecurringChargePrice.getProductPriceId(), (CuCoProdPriceCharge) extractedRecurringChargePrice);\n            } else if (current instanceof OneTimeChargeProdPriceCharge) {\n              CuCoComponentProductPrice extractedOnetimeChargePrice = extractOnetimeChargePrice((OneTimeChargeProdPriceCharge) current);\n              node.addToAllPrices(extractedOnetimeChargePrice);\n              node.addToPriceTree((CuCoProdPriceCharge) extractedOnetimeChargePrice);\n              charges.put(extractedOnetimeChargePrice.getProductPriceId(), (CuCoProdPriceCharge) extractedOnetimeChargePrice);\n            }\n          } else if (current instanceof ProdPriceAlteration) {\n            if (current instanceof RecurringDiscountProdPriceAlteration) {\n              CuCoComponentProductPrice extractedRecurringDiscountAlteration = extractRecurringDiscountAlteration((RecurringDiscountProdPriceAlteration) current);\n              node.addToAllPrices(extractedRecurringDiscountAlteration);\n              alterations.add((CuCoProdPriceAlterations) extractedRecurringDiscountAlteration);\n              if (\"POPC_ACCOUNT_LEVEL_DISCOUNT\".equals(current.getProductOfferingPriceCategoryId())) {\n                  CuCoProdPriceAlterations currentAlteration = (CuCoProdPriceAlterations) extractedRecurringDiscountAlteration;\n                  CuCoProdPriceCharge result = new CuCoProdPriceCharge(ProdPriceChargeType.ACCOUNT_DISCOUNT);\n\n                  result.setName(currentAlteration.getName());\n                  result.setFrequency(currentAlteration.getFrequency());\n                  result.setIdxStatus(currentAlteration.getIdxStatus());\n                  result.setIdxStartDate(currentAlteration.getDiscountStartDate());\n                  node.addToPriceTree(result);                 \n              }\n            } else if (current instanceof OneTimeDiscountProdPriceAlteration) {\n              CuCoComponentProductPrice extractedOnetimeDiscountAlteration = extractOnetimeDiscountAlteration((OneTimeDiscountProdPriceAlteration) current);\n              node.addToAllPrices(extractedOnetimeDiscountAlteration);\n              alterations.add((CuCoProdPriceAlterations) extractedOnetimeDiscountAlteration);\n            } else if (current instanceof AllowanceProdPriceAlteration) {\n              CuCoComponentProductPrice extractedAllowance = extractAllowance((AllowanceProdPriceAlteration) current);\n              node.addToAllPrices(extractedAllowance);\n              alterations.add((CuCoProdPriceAlterations) extractedAllowance);\n            }\n          }\n        }\n        // Forming a tree of charges and alterations\n        for (CuCoProdPriceAlterations currentAlteration : alterations) {\n          String parentPriceId = currentAlteration.getParentPriceId();\n          if (charges.containsKey(parentPriceId)) {\n            charges.get(parentPriceId).addToAlterations(currentAlteration);\n          }\n        }\n      }\n      ProductPrice price = getProductPriceChargeForIdxValue(product);\n      if (price != null && ((ComponentProdPrice) price).isSetIdxStatus()) {\n        node.setIdxStatus(IndexationStatus.getForCIValue(((ComponentProdPrice) price).getIdxStatus().intValue()));\n      }\n    }\n    if (product instanceof ProductBundle && !isVoiceProduct(product)) {\n      final ProductBundleImpl productBundle = (ProductBundleImpl) product;\n\n      node.setVoiceProductType(isTv(productBundle) ? ProductType.TV : ProductType.UNDEFINED);\n\n      if (product.getName() == null || product.getName().isEmpty()) {\n        if (productBundle.getBundledProductOffering() != null) {\n          node.setText(productBundle.getBundledProductOffering().getProductOfferingId());\n        } else {\n          node.setText(\"Unbekannt\");\n        }\n      }\n\n      BundledProductList bundledProductList = productBundle.getBundledProductList();\n      if (bundledProductList != null) {\n        boolean linkedParentNodeAlreadyFound = searchForChildrenWithMatchingCallNumber && node.getLinkedSubscriptionId() != null\n            && node.getLinkedSubscriptionId().equalsIgnoreCase(rootSubscriptionNode.getLinkedSubscriptionId());\n        for (BundledProduct childProduct : bundledProductList.getBundledProductArray()) {\n          if (DISPLAY.TABLE != node.getIntendedUIDisplay() || shouldAddProduct(childProduct.getProduct().getName())) {\n            DefaultProductNode childNode = createNode(childProduct.getProduct(), node, rootSubscriptionNode, searchForChildrenWithMatchingCallNumber && !linkedParentNodeAlreadyFound);\n            childNode.setIntendedUIDisplay(node.getIntendedUIDisplay());\n            childNode.setParent(node);\n            node.addChild(childNode);\n          }\n        }\n      }\n      node.getMetaData().put(MetaDataHelper.createMetaData(productBundle));\n      node.setProductType(DefaultProductNodeType.BUNDLE);\n\n    } else if (product instanceof ProductComponent && !isVoiceProduct(product)) {\n      final ProductComponent productComponent = (ProductComponent) product;\n      node.getMetaData().put(MetaDataHelper.createMetaData(productComponent));\n      node.setProductType(DefaultProductNodeType.COMPONENT);\n      node.setVoiceProductType(ProductType.INET);\n\n    } else if (product instanceof ProductComponent && isVoiceProduct(product)) {\n      node.setVoiceProductType(translateProductType(product));\n\n      node.getMetaData().put(MetaDataHelper.createVoiceMetaData((ProductComponent) product));\n      node.setProductType(DefaultProductNodeType.VOICE);\n\n    }\n\n    if (product.getPhysicalResources() != null && product.getPhysicalResources().getPhysicalResourceArray() != null) {\n      for (PhysicalResource res : product.getPhysicalResources().getPhysicalResourceArray()) {\n        PhysicalResourceNode childNode = createNode(res);\n        childNode.setParent(node);\n        node.addChild(childNode);\n      }\n    }\n    node.setHasOANProduct(getOANIdentifier(node.getMetaData()));\n\n    boolean linkedToParentNode = (node.getCallNumber() != null && node.getCallNumber().equals(rootSubscriptionNode.getCallNumber()))\n        || (node.getLinkedSubscriptionId() != null && node.getLinkedSubscriptionId().equalsIgnoreCase(rootSubscriptionNode.getLinkedSubscriptionId()));\n    node.setMatchingCallNumberWithRootSubscription(!searchForChildrenWithMatchingCallNumber || linkedToParentNode);\n    if (searchForChildrenWithMatchingCallNumber && linkedToParentNode) {\n      DefaultProductNode clone = SerializationUtils.clone(node);\n      clone.setParent(rootSubscriptionNode);\n      clone.setEffectiveDepthForView(rootSubscriptionNode.getDepth() + 1);\n      clone.setHasIndirectParent(true);\n      rootSubscriptionNode.getChildrenWithMatchingCallNumbers().add(clone);\n    }\n    return node;\n  }\n\n  private boolean getOANIdentifier(MetaData metaData) {\n    String oanIdentifiers = settingService.getValueOrDefault(\"productBrowser.oanProductIdentiers\", \"PSC_OAN_NETWORK_PROVIDER\");\n    if (oanIdentifiers.contains(\";\")) {\n      for (String identifier : oanIdentifiers.split(\";\")) {\n        if (metaData.hasMetaDataEntryWithID(identifier)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return metaData.hasMetaDataEntryWithName(oanIdentifiers);\n  }\n\n  private ProductPrice getProductPriceChargeForIdxValue(Product product) {\n    for (ProductPrice price : product.getProductPrices().getProductPriceArray()) {\n      if (price instanceof RecurringChargeProdPriceCharge) {\n        return price;\n      }\n    }\n    return product.getProductPrices().getProductPriceArray(0);\n  }\n\n  private CuCoComponentProductPrice extractAllowance(AllowanceProdPriceAlteration current) {\n    CuCoProdPriceAlterations result = new CuCoProdPriceAlterations(ProdPriceAlterationType.ALLOWANCE);\n    setCommonPriceFields(current, result);\n    result.setParentPriceId(current.isSetAlteratesCharges() ? current.getAlteratesCharges().getProductPriceId() : null);\n    result.setUnitOfMeasure(current.getUnitOfMeasure());\n    result.setAllowanceValue(current.getValue());\n    result.setFrequency(\n        current.getFrequency() != null ? textService.getByKeyWithDefaultText(\"productPrice_Frequency_\".concat(current.getFrequency().toLowerCase()), current.getFrequency()).getText() : \"-\");\n    return result;\n  }\n\n  private CuCoComponentProductPrice extractOnetimeChargePrice(OneTimeChargeProdPriceCharge current) {\n    CuCoProdPriceCharge result = new CuCoProdPriceCharge(ProdPriceChargeType.ONE_TIME);\n    setCommonPriceFields(current, result);\n    result.setFrequency(textService.getByKeyWithDefaultText(\"productPrice_Frequency_onetime\", \"einmalig\").getText());\n    return result;\n  }\n\n  private CuCoComponentProductPrice extractOnetimeDiscountAlteration(OneTimeDiscountProdPriceAlteration current) {\n    CuCoProdPriceAlterations result = new CuCoProdPriceAlterations(ProdPriceAlterationType.ONETIME_DISCOUNT);\n    setCommonPriceFields(current, result);\n    result.setAlteredPriceAfterDiscount(convertToCuCoPrice(current.getAlteredPrice()));\n    result.setParentPriceId(current.isSetAlteratesCharges() ? current.getAlteratesCharges().getProductPriceId() : null);\n    result.setFrequency(textService.getByKeyWithDefaultText(\"productPrice_Frequency_onetime\", \"einmalig\").getText());\n    return result;\n  }\n\n  private CuCoComponentProductPrice extractRecurringDiscountAlteration(RecurringDiscountProdPriceAlteration current) {\n    CuCoProdPriceAlterations result = new CuCoProdPriceAlterations(ProdPriceAlterationType.RECURRING_DISCOUNT);\n    setCommonPriceFields(current, result);\n    result.setAlteredPriceAfterDiscount(current.isSetAlteredPrice() ? convertToCuCoPrice(current.getAlteredPrice()) : null);\n    result.setParentPriceId(current.isSetAlteratesCharges() ? current.getAlteratesCharges().getProductPriceId() : null);\n    result.setFrequency(\n        current.getFrequency() != null ? textService.getByKeyWithDefaultText(\"productPrice_Frequency_\".concat(current.getFrequency().toLowerCase()), current.getFrequency()).getText() : \"-\");\n    result.setDiscountStartDate(current.getDiscountStartDate() != null ? current.getDiscountStartDate().getTime() : null);\n    result.setDiscountEndDate(current.isSetDiscountEndDate() ? current.getDiscountEndDate().getTime() : null);\n    return result;\n  }\n\n  private CuCoComponentProductPrice extractRecurringChargePrice(RecurringChargeProdPriceCharge current) {\n    CuCoProdPriceCharge result = new CuCoProdPriceCharge(ProdPriceChargeType.RECURRING);\n    setCommonPriceFields(current, result);\n    result\n        .setFrequency(current.isSetFrequency() ? textService.getByKeyWithDefaultText(\"productPrice_Frequency_\".concat(current.getFrequency().toLowerCase()), current.getFrequency()).getText() : null);\n    return result;\n  }\n\n  private void setCommonPriceFields(ComponentProdPrice current, CuCoComponentProductPrice result) {\n    result.setName(current.getName());\n    result.setBasePrice(current.isSetBasePrice() ? convertToCuCoPrice(current.getBasePrice()) : null);\n    result.setIdxStatus(current.isSetIdxStatus() ? IndexationStatus.getForCIValue(current.getIdxStatus().intValue()) : IndexationStatus.NOT_AVAILABLE);\n    result.setIdxStartDate(current.isSetIdxStartDate() ? current.getIdxStartDate().getTime() : null);\n    result.setPrice(current.isSetPrice() ? convertToCuCoPrice(current.getPrice()) : null);\n    result.setProductOfferingPriceId(current.getProductOfferingPriceId());\n    result.setProductPriceId(current.isSetProductPriceId() ? current.getProductPriceId() : null);\n    result.setTaxRate(current.isSetTaxRate() ? current.getTaxRate() : null);\n  }\n\n  private CuCoPrice convertToCuCoPrice(Money basePrice) {\n    CuCoPrice result = new CuCoPrice();\n    result.setAmount(basePrice.getAmount());\n    result.setUnits(basePrice.getUnits());\n    return result;\n  }\n\n  private boolean isVoiceProduct(Product product) {\n    return product.getCallNumber() != null;\n  }\n\n  private Date addOneDay(Date date) {\n    return calcDate(date, Calendar.DAY_OF_YEAR, +1);\n  }\n\n  private Date addMonth(Date date, int duration) {\n    return calcDate(date, Calendar.MONTH, +duration);\n  }\n\n  private Date calcDate(Date date, int unit, int amount) {\n    if (date != null) {\n      Calendar calendar = Calendar.getInstance();\n      calendar.setTime(date);\n      calendar.add(unit, amount);\n      return calendar.getTime();\n    }\n    return null;\n  }\n\n  public boolean isTv(ProductBundle productBundle) {\n    return productBundle.getName().contains(\"TV\");\n  }\n\n  private void mapProductStatus(Product product) {\n    if (product.getProductStatus() != null) {\n      Text text = textService.getByKeyWithDefaultText(product.getProductStatus(), product.getProductStatus());\n      product.setProductStatus(text.getText());\n    } else {\n      product.setProductStatus(\"Unbekannt\");\n    }\n  }\n\n  private void mapTarifs(Product product) {\n    if (product.getProductCharacteristicValues() != null) {\n      for (ProductCharacteristicValue value : product.getProductCharacteristicValues().getProductCharacteristicValueArray()) {\n        if (value.getProductSpecCharacteristic().getName().equals(\"Tarif\")) {\n          Text text = textService.getByKeyWithDefaultText(value.getValue(), value.getValue());\n          value.setValue(text.getText());\n        }\n      }\n    }\n  }\n\n  private CallNumber getCallNumber(Product voiceProduct) {\n    CallNumber callNumber = new CallNumber();\n    callNumber.setCountryCode(voiceProduct.getCallNumber().getCC());\n    callNumber.setOnkz(voiceProduct.getCallNumber().getNDC());\n    callNumber.setTnum(voiceProduct.getCallNumber().getSN());\n    return callNumber;\n  }\n\n  private CallNumber getCallNumber(Subscription subscription) {\n    CallNumber callNumber = new CallNumber();\n    callNumber.setCountryCode(subscription.getCallNumber().getCC());\n    callNumber.setOnkz(subscription.getCallNumber().getNDC());\n    callNumber.setTnum(subscription.getCallNumber().getSN());\n    return callNumber;\n  }\n\n  private ProductType translateProductType(Product voiceProduct) {\n    String ndc = voiceProduct.getCallNumber().getNDC();\n    final String[] mobileType = settingService.getValuesIgnoreMissing(\"productBrowserMobileTypeArrayList\");\n    List<String> mobileTypes = Arrays.asList(mobileType);\n    if (mobileTypes.contains(ndc)) {\n      return ProductType.MOBILE;\n    }\n    return ProductType.FIXED;\n  }\n\n  @Autowired\n  public void setCustomerEquipmentService(CustomerEquipmentService customerEquipmentService) {\n    this.customerEquipmentService = customerEquipmentService;\n  }\n\n  @Autowired\n  public void setPartyService(PartyService partyService) {\n    this.partyService = partyService;\n  }\n\n  @Autowired\n  public void setTextService(TextService textService) {\n    this.textService = textService;\n  }\n\n  // CMSYS703\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n\n  @Override\n  public void loadInventoryPricesForBAN(String ban, String partyId, Map<String, ProductPrice> socPriceMap) {\n    Product[] productsForBAN = getProductsForCustomerAccount(ban, partyId);\n    if (productsForBAN == null || productsForBAN.length == 0) {\n      return;\n    }\n    for (Product product : productsForBAN) {\n      if (!product.isSetProductPrices()) {\n        continue;\n      }\n      for (ProductPrice price : product.getProductPrices().getProductPriceArray()) {\n        if (socPriceMap.containsKey(price.getProductOfferingPriceId())) {\n          socPriceMap.put(price.getProductOfferingPriceId(), price);\n        }\n      }\n    }\n  }\n\n  @Override\n  public ArrayList<BaseNode> getSubscriptionsDataForCustomer(ArrayList<Long> partyIds, String sessionId, boolean hasAuthorityToSeeCustomerInventoryXMLs) {\n    ArrayList<BaseNode> result = new ArrayList<BaseNode>();\n    for (long partyId : partyIds) {\n      result.addAll(getSubscriptionsForParty(partyId, sessionId, hasAuthorityToSeeCustomerInventoryXMLs));\n    }\n    return result;\n  }\n\n  @SuppressWarnings(\"serial\")\n  private static class SubscriptionNodeComparator implements Comparator<SubscriptionNode>, Serializable {\n\n    @Override\n    public int compare(SubscriptionNode n1, SubscriptionNode n2) {\n      return n1.getSubscriptionId().compareTo(n2.getSubscriptionId());\n    }\n  }\n\n  public ArrayList<DefaultSubscriptionNode> getSubscriptionsForParty(long partyId, String sessionId, boolean hasAuthorityToSeeCustomerInventoryXMLs) {\n    ArrayList<DefaultSubscriptionNode> subscriptionsList = new ArrayList<DefaultSubscriptionNode>();\n    GetSubscriptionsForPartyResponseType resp = null;\n    GetSubscriptionsForPartyResponseDocument respDoc;\n\n    String mockResponseFileName = System.getProperty(\"catalina.base\") + \"//mocks//CI_getSubscriptionsForParty_CMSYS3218.xml\";\n    try {\n\n      if (settingService.getBooleanValue(\"testModeActive\", false) && new File(mockResponseFileName).exists()\n          && settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false)) {\n        resp = GetSubscriptionsForPartyResponseDocument.Factory.parse(FileUtils.readFileToString(new File(mockResponseFileName))).getGetSubscriptionsForPartyResponse();\n        getSubscriptionForPartyResponseXml = \"<response>\" + \"\\n\" + resp.toString() + \"\\n\" + \"</response>\";\n      } else {\n        respDoc = stub.getSubscriptionsForParty(prepareRequestForGetSubsForParty(partyId, true, true, false, true,\n            (settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false) ? true : false), true, 1), null);\n        resp = respDoc.getGetSubscriptionsForPartyResponse();\n        getSubscriptionForPartyResponseXml = \"<response>\" + \"\\n\" + respDoc.toString() + \"\\n\" + \"</response>\";\n      }\n      esbServiceEndPointUrl = esbAccessParameterDao.getURLByInstanceName(stub.getInstanceName());\n      getSubscriptionForPartyRequestResponseXml = \"<esbWebServiceCall>\" + \"\\n\" + \"<esbEndpoint> \" + esbServiceEndPointUrl + \" </esbEndpoint>\" + \"\\n\" + getSubscriptionForPartyRequestXml + \"\\n\"\n          + getSubscriptionForPartyResponseXml + \"\\n\" + \"</esbWebServiceCall>\";\n      if (settingService.getBooleanValue(\"productBrowser.a1OneTvPart2Active\", true) && hasAuthorityToSeeCustomerInventoryXMLs) {\n        File createFolderForUploading = new File(getUploadPathForCustomerInventoryFolder());\n        if (!createFolderForUploading.exists()) {\n          createFolderForUploading.mkdirs();\n        }\n\n        File createFolderAsPerSession = new File(createFolderForUploading + File.separator + sessionId);\n        if (!createFolderAsPerSession.exists()) {\n          createFolderAsPerSession.mkdir();\n        }\n\n        FileUtils.cleanDirectory(createFolderAsPerSession);\n        File defaultZipPathWithPartyId = new File(createFolderAsPerSession + File.separator\n            + textService.getByKeyWithDefaultText(\"newProductOverviewCustomerInventoryDotAsPrefix\", \"CustomerInventory.\").getText() + getSubscriptionForPartyRequestPartyId);\n        if (defaultZipPathWithPartyId.exists()) {\n          deleteDirectory(defaultZipPathWithPartyId);\n        }\n        defaultZipPathWithPartyId.mkdir();\n      }\n\n      if (resp != null && resp.getSubscriptions() != null && resp.getSubscriptions().sizeOfSubscriptionArray() > 0) {\n        boolean topLevelProductDisplayEnabled = settingService.getBooleanValue(\"productBrowser.topLevelProductsEnabled\", false);\n        for (Subscription subs : resp.getSubscriptions().getSubscriptionArray()) {\n          DefaultSubscriptionNode preparedSubscriptionNode = prepareSubscriptionNode(subs, null, null);\n          preparedSubscriptionNode.setIntendedUIDisplay(DISPLAY.TABLE);\n          preparedSubscriptionNode.setPartyId(partyId);\n          preparedSubscriptionNode.setDepth(0);\n          subscriptionsList.add(preparedSubscriptionNode);\n\n          if (subs.isSetProducts() && subs.getProducts().sizeOfProductArray() > 0 && topLevelProductDisplayEnabled) {\n            String topLevelProduct = \"\";\n            for (Product product : subs.getProducts().getProductArray()) {\n              if (!topLevelProduct.isEmpty()) {\n                topLevelProduct += \"; \";\n              }\n              topLevelProduct += product.getName();\n            }\n            preparedSubscriptionNode.setTopLevelProducts(topLevelProduct);\n          }\n        }\n\n        while (!resp.getPagination().getIsLastPage()) {\n          respDoc = stub.getSubscriptionsForParty(prepareRequestForGetSubsForParty(partyId, true, true, false, true,\n              (settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false) ? true : false), true, resp.getPagination().getPageNumber() + 1), null);\n          resp = respDoc.getGetSubscriptionsForPartyResponse();\n\n          if (resp != null && resp.getSubscriptions() != null && resp.getSubscriptions().sizeOfSubscriptionArray() > 0) {\n            for (Subscription subs : resp.getSubscriptions().getSubscriptionArray()) {\n              DefaultSubscriptionNode preparedSubscriptionNode = prepareSubscriptionNode(subs, null, null);\n              preparedSubscriptionNode.setIntendedUIDisplay(DISPLAY.TABLE);\n              preparedSubscriptionNode.setPartyId(partyId);\n              preparedSubscriptionNode.setDepth(0);\n              subscriptionsList.add(preparedSubscriptionNode);\n\n              if (subs.isSetProducts() && subs.getProducts().sizeOfProductArray() > 0 && topLevelProductDisplayEnabled) {\n                String topLevelProduct = \"\";\n                for (Product product : subs.getProducts().getProductArray()) {\n                  if (!topLevelProduct.isEmpty()) {\n                    topLevelProduct += \"; \";\n                  }\n                  topLevelProduct += product.getName();\n                }\n                preparedSubscriptionNode.setTopLevelProducts(topLevelProduct);\n              }\n            }\n          }\n        }\n\n        ArrayList<DefaultSubscriptionNode> result = subscriptionsList;\n        Collections.sort(result, new SubscriptionNodeComparator());\n\n        for (int num = 0; num < Integer.valueOf(settingService.getValueOrDefault(\"productBrowser.tableView.productCharacteristic.amountOfSubscriptionToPreload\", \"5\")); num++) {\n          if (num > (result.size() - 1)) {\n            break;\n          }\n          DefaultSubscriptionNode subscriptionNode = result.get(num);\n          try {\n            getDefaultProductNodes(subscriptionNode, sessionId, hasAuthorityToSeeCustomerInventoryXMLs);\n            subscriptionNode.setChildDetailsLoaded(true);\n            if (hasAuthorityToSeeCustomerInventoryXMLs && settingService.getBooleanValue(\"productBrowser.a1OneTvPart2Active\", true)\n                && settingService.getBooleanValue(\"productBrowser.createZipWithInitialPreLoadLogic\", false)) {\n              File createFolderForUploading = new File(getUploadPathForCustomerInventoryFolder());\n\n              File createFolderAsPerSession = new File(createFolderForUploading + File.separator + sessionId);\n\n              File defaultZipPathWithPartyId = new File(createFolderAsPerSession + File.separator\n                  + textService.getByKeyWithDefaultText(\"newProductOverviewCustomerInventoryDotAsPrefix\", \"CustomerInventory.\").getText() + getSubscriptionForPartyRequestPartyId);\n\n              getProductsForSubscriptionRequestResponseXml = \"<esbWebServiceCall>\" + \"\\n\" + \"<esbEndpoint> \" + esbServiceEndPointUrl + \" </esbEndpoint>\" + \"\\n\" + getProductsForSubscriptionRequestXml\n                  + \"\\n\" + getProductsForSubscriptionResponseXml + \"\\n\" + \"</esbWebServiceCall>\";\n              if (settingService.getBooleanValue(\"productBrowser.a1OneTvPart2Active\", true) && hasAuthorityToSeeCustomerInventoryXMLs) {\n                createGetProductsForSubscriptionRequestResponseFiles(defaultZipPathWithPartyId);\n              }\n            }\n          } catch (Exception ex) {\n            logger.error(\"Error while retrieving products for subscriptions\" + (subscriptionNode.getCallNumber() != null ? subscriptionNode.getCallNumber()\n                : (subscriptionNode.getBillableUser() != null && settingService.getBooleanValue(\"productBrowserBvkBillableUserSubscriptionAndProductsActive\", false)\n                    ? subscriptionNode.getBillableUser().getUserName()\n                    : \"\"))\n                + \" for Party \" + partyId, ex);\n          }\n        }\n      } else {\n        logger.error(\"No subscriptions found for Party \" + partyId);\n      }\n      if (settingService.getBooleanValue(\"productBrowser.a1OneTvPart2Active\", true) && hasAuthorityToSeeCustomerInventoryXMLs) {\n        File createFolderForUploading = new File(getUploadPathForCustomerInventoryFolder());\n\n        File createFolderAsPerSession = new File(createFolderForUploading + File.separator + sessionId);\n\n        File defaultZipPathWithPartyId = new File(createFolderAsPerSession + File.separator\n            + textService.getByKeyWithDefaultText(\"newProductOverviewCustomerInventoryDotAsPrefix\", \"CustomerInventory.\").getText() + getSubscriptionForPartyRequestPartyId);\n\n        createGetSubscriptionForPartyRequestResponseFile(defaultZipPathWithPartyId);\n        filesToZipList.clear();\n        getAllCiRequestResponseFileListToZip(defaultZipPathWithPartyId);\n        createCiRequestResponseFolderZip(\n            defaultZipPathWithPartyId + File.separator + textService.getByKeyWithDefaultText(\"newProductOverviewCustomerInventoryDotAsPrefix\", \"CustomerInventory.\").getText()\n                + getSubscriptionForPartyRequestPartyId + textService.getByKeyWithDefaultText(\"newProductOverviewReqRespZipSuffix\", \".zip\").getText(),\n            defaultZipPathWithPartyId.toString());\n      }\n    } catch (Exception e) {\n      logger.error(\"Error while retrieving subscriptions for Party \" + partyId, e);\n    }\n\n    if (settingService.getBooleanValue(\"productBrowser.showMarketPlaceSubscriptions\", false)) {\n      appendMarketplaceSubscriptionsTotheList(partyId, subscriptionsList);\n    }\n    return subscriptionsList;\n  }\n\n  private void appendMarketplaceSubscriptionsTotheList(long partyId, ArrayList<DefaultSubscriptionNode> subscriptionsList) {\n    LocationNode locationNode = marketplaceInventoryService.getMarketplaceAccountsWithSubscriptionsForParty(partyId);\n\n    if (locationNode == null || locationNode.getChildren() == null || locationNode.getChildren().size() == 0) {\n      return;\n    }\n    for (BaseNode node : locationNode.getChildren()) {\n      if (!(node instanceof AccountNode) || node.getChildren() == null || node.getChildren().size() == 0) {\n        continue;\n      }\n      for (BaseNode childSubNote : node.getChildren()) {\n        if (childSubNote instanceof DefaultSubscriptionNode) {\n          childSubNote.setDepth(0);\n          subscriptionsList.add((DefaultSubscriptionNode) childSubNote);\n        }\n      }\n\n    }\n\n  }\n\n  private String getUploadPathForCustomerInventoryFolder() {\n    String path = localSettingService.getValue(\"productBrowser_CIReqRes_filePath\");\n    if (!path.endsWith(File.separator)) {\n      path += File.separator;\n    }\n    return path;\n  }\n\n  private boolean deleteDirectory(File path) {\n    if (path.exists()) {\n      File[] files = path.listFiles();\n      for (int i = 0; i < files.length; i++) {\n        if (files[i].isDirectory()) {\n          deleteDirectory(files[i]);\n        } else {\n          files[i].delete();\n        }\n      }\n    }\n    return (path.delete());\n  }\n\n  private void createGetSubscriptionForPartyRequestResponseFile(File defaultZipPathWithPartyId) {\n    try {\n      File getSubscriptionForPartyXmlFile = new File(defaultZipPathWithPartyId + File.separator\n          + textService.getByKeyWithDefaultText(\"newProductOverviewGetSubscriptionForPartyReqRespXmlFilePrefix\", \"CustomerInventory.getSubscriptionForParty.\").getText()\n          + getSubscriptionForPartyRequestPartyId + textService.getByKeyWithDefaultText(\"newProductOverviewAllFileReqRespXmlSuffix\", \".xml\").getText());\n      if (!getSubscriptionForPartyXmlFile.exists()) {\n        getSubscriptionForPartyXmlFile.createNewFile();\n      }\n      FileUtils.writeStringToFile(getSubscriptionForPartyXmlFile, getSubscriptionForPartyRequestResponseXml, \"UTF-8\");\n    } catch (IOException e) {\n      logger.error(e.getMessage(), e);\n    }\n  }\n\n  private void createGetProductsForSubscriptionRequestResponseFiles(File defaultZipPathWithPartyId) {\n    try {\n      File getPartyForSubscriptionXmlFile = new File(defaultZipPathWithPartyId + File.separator\n          + textService.getByKeyWithDefaultText(\"newProductOverviewGetProductsForSubscriptionReqRespXmlPrefix\", \"CustomerInventory.getProductsForSubscription.\").getText()\n          + getProductsForSubscriptionRequestCallNumber + textService.getByKeyWithDefaultText(\"newProductOverviewAllFileReqRespXmlSuffix\", \".xml\").getText());\n      if (!getPartyForSubscriptionXmlFile.exists()) {\n        getPartyForSubscriptionXmlFile.createNewFile();\n      }\n      if (getProductsForSubscriptionRequestResponseXml != null) {\n        FileUtils.writeStringToFile(getPartyForSubscriptionXmlFile, getProductsForSubscriptionRequestResponseXml, \"UTF-8\");\n      }\n    } catch (IOException e) {\n      logger.error(e.getMessage(), e);\n    }\n  }\n\n  private void getAllCiRequestResponseFileListToZip(File node) {\n    if (node.isFile()) {\n      filesToZipList.add(new File(node.toString()).getName());\n    }\n\n    if (node.isDirectory()) {\n      String[] subNote = node.list();\n      for (String filename : subNote) {\n        getAllCiRequestResponseFileListToZip(new File(node, filename));\n      }\n    }\n  }\n\n  private void createCiRequestResponseFolderZip(String zipFile, String sourceFolder) {\n\n    byte[] buffer = new byte[1024];\n    String source = new File(sourceFolder).getName();\n    FileOutputStream fos = null;\n    ZipOutputStream zos = null;\n    try {\n      fos = new FileOutputStream(zipFile);\n      zos = new ZipOutputStream(fos);\n      FileInputStream in = null;\n\n      for (String file : filesToZipList) {\n        ZipEntry ze = new ZipEntry(source + File.separator + file);\n        zos.putNextEntry(ze);\n        try {\n          in = new FileInputStream(sourceFolder + File.separator + file);\n          int len;\n          while ((len = in.read(buffer)) > 0) {\n            zos.write(buffer, 0, len);\n          }\n        } finally {\n          if (in != null) {\n            in.close();\n          }\n        }\n      }\n\n      zos.closeEntry();\n\n    } catch (IOException e) {\n      logger.error(e.getMessage(), e);\n    } finally {\n      try {\n        if (zos != null) {\n          zos.close();\n        }\n      } catch (IOException e) {\n        logger.error(e.getMessage(), e);\n      }\n    }\n  }\n\n  private boolean shouldAddProduct(String productName) {\n    final String blacklistValuesForNewProductViewStr = textService.getByKeyWithDefaultText(\"admin_productBrowserTableViewBlacklist\", \"\").getText();\n    final String whitelistValuesForNewProductViewStr = textService.getByKeyWithDefaultText(\"admin_productBrowserTableViewWhitelist\", \"\").getText();\n    final String filterMode = settingService.getValue(\"productBrowser.tableView.productCharacteristic.mode\");\n    List<String> blacklistValuesForNewProductView = Arrays.asList((blacklistValuesForNewProductViewStr == null ? \"\" : blacklistValuesForNewProductViewStr).split(Separator.SEMICOLON));\n    List<String> whitelistValuesForNewProductView = Arrays.asList((whitelistValuesForNewProductViewStr == null ? \"\" : whitelistValuesForNewProductViewStr).split(Separator.SEMICOLON));\n\n    if (filterMode.equalsIgnoreCase(\"Blacklist\") && !isBlacklisted(productName, blacklistValuesForNewProductView)) {\n      return true;\n    }\n    if (filterMode.equalsIgnoreCase(\"Whitelist\") && isWhitelisted(productName, whitelistValuesForNewProductView)) {\n      return true;\n    }\n    return false;\n  }\n\n  private static boolean isBlacklisted(String productSpecCharacteristicId, List<String> blacklist) {\n    return blacklist.contains(productSpecCharacteristicId);\n  }\n\n  private static boolean isWhitelisted(String productSpecCharacteristicId, List<String> whitelist) {\n    return whitelist.contains(productSpecCharacteristicId);\n  }\n\n  @Autowired\n  public void setEsbAccessParameterDao(EsbAccessParameterDao esbAccessParameterDao) {\n    this.esbAccessParameterDao = esbAccessParameterDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/MetaDataHelper.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/MetaDataHelper.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 17270,
    "content": "/*\n * Copyright 2009 - 2012 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.customerequipment;\n\nimport java.io.PrintWriter;\nimport java.io.StringWriter;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport at.a1ta.bite.core.server.util.ParseUtils;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.Equipment;\nimport at.a1ta.cuco.core.shared.dto.customerequipment.EquipmentAttribute;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultProductNode;\nimport at.a1ta.cuco.core.shared.dto.product.DefaultProductNode.ProductType;\nimport at.a1ta.cuco.core.shared.dto.product.MetaData;\nimport at.a1ta.cuco.core.shared.dto.product.MetaDataEntry;\nimport at.a1ta.cuco.core.shared.dto.product.MetaDataEntryType;\nimport at.a1telekom.cdm.common.CallNumber;\nimport at.a1telekom.cdm.common.TimePeriod;\nimport at.a1telekom.cdm.common.ValueType;\nimport at.a1telekom.cdm.common.ValueType.Enum;\nimport at.a1telekom.eai.customerinventory.PhysicalResource;\nimport at.a1telekom.eai.customerinventory.Product;\nimport at.a1telekom.eai.customerinventory.Product.ProductCharacteristicValues;\nimport at.a1telekom.eai.customerinventory.ProductBundle;\nimport at.a1telekom.eai.customerinventory.ProductCharacteristicValue;\nimport at.a1telekom.eai.customerinventory.ProductComponent;\n\npublic class MetaDataHelper {\n  private static final Logger logger = LoggerFactory.getLogger(MetaDataHelper.class);\n\n  private static SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd.MM.yyyy\");\n\n  private static final HashMap<String, String> DATE_FORMAT_REGEXPS = new HashMap<String, String>() {\n    {\n      put(\"^\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}$\", \"yyyy-MM-dd\");\n    }\n  };\n\n  private MetaDataHelper() {}\n\n  public static String determineDateFormat(String dateString) {\n    for (String regexp : DATE_FORMAT_REGEXPS.keySet()) {\n      if (dateString.toLowerCase().matches(regexp)) {\n        return DATE_FORMAT_REGEXPS.get(regexp);\n      }\n    }\n    return null;\n  }\n\n  public static ArrayList<MetaDataEntry> createMetaData(Product product, List<String> blacklist) {\n    ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n\n    entries.add(new MetaDataEntry(\"getDescription\", \"getDescription\", product.getDescription(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getProductId\", \"getProductId\", product.getProductId(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getProductStatus\", \"getProductStatus\", product.getProductStatus(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getStartDateTime\", \"G\u00fcltikeit Beginn\", getDateValue(getValidForStart(product.getValidFor())), MetaDataEntryType.STRING));\n    Date tempPromotionEndDate = null;\n    try {\n\n      tempPromotionEndDate = ParseUtils.parseDate(getTempProdEndDate(product.getProductCharacteristicValues()), \"yyyy-MM-dd\", null);\n      if (getDateValue(tempPromotionEndDate) != null && getDateValue(tempPromotionEndDate).contains((\"31.12.9999\"))) {\n        tempPromotionEndDate = null;\n      }\n      Date validForEnd = getValidForEnd(product.getValidFor());\n      if (validForEnd != null && (getDateValue(validForEnd).contains(\"31.12.9999\"))) {\n        validForEnd = null;\n      }\n      if (validForEnd != null && getDateValue(tempPromotionEndDate) != null) {\n        if (getDateValue(validForEnd).contains(\"31.12.9999\") && getDateValue(tempPromotionEndDate).contains((\"31.12.9999\"))) {\n          tempPromotionEndDate = null;\n          validForEnd = null;\n        }\n      }\n      entries.add(new MetaDataEntry(\"getEndDateTime\", \"G\u00fcltikeit Ende\", ((validForEnd == null && tempPromotionEndDate == null) ? \"\"\n          : ((validForEnd != null && tempPromotionEndDate == null) ? getDateValue(validForEnd) : (validForEnd != null ? (tempPromotionEndDate.before(validForEnd) ? getDateValue(tempPromotionEndDate)\n              : getDateValue(validForEnd)) : getDateValue(tempPromotionEndDate)))), MetaDataEntryType.STRING));\n\n    } catch (Exception ex) {\n      // do nothing\n      entries.add(new MetaDataEntry(\"getEndDateTime\", \"G\u00fcltikeit Ende\", getDateValue(getValidForEnd(product.getValidFor())), MetaDataEntryType.STRING));\n    }\n\n    entries.add(new MetaDataEntry(\"getBrand\", \"getDescription\", product.getBrand(), MetaDataEntryType.STRING));\n    entries.addAll(getProductCharacteristicValuesMetaDataEntries(product.getProductCharacteristicValues(), \"Blacklist\", blacklist, null));\n    return entries;\n  }\n\n  public static ArrayList<MetaDataEntry> createMetaData(ProductBundle product) {\n    ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n\n    if (product.getBundledProductOffering() != null) {\n      entries.add(new MetaDataEntry(\"getBundledProductOfferingId\", \"getBundledProductOfferingId\", product.getBundledProductOffering().getProductOfferingId(), MetaDataEntryType.STRING));\n    }\n\n    return entries;\n  }\n\n  public static ArrayList<MetaDataEntry> createVoiceMetaData(ProductComponent product) {\n    ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n\n    entries.add(new MetaDataEntry(\"getSimpleProductOfferingId\", \"getSimpleProductOfferingId\", product.getSimpleProductOffering().getProductOfferingId(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getType\", \"getType\", translateProductType(product).toString(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getCallNumber\", \"getCallNumber\", getCallNumberValue(product.getCallNumber()), MetaDataEntryType.STRING));\n\n    boolean geheim = false;\n    if (product.getProductCharacteristicValues() != null && product.getProductCharacteristicValues().getProductCharacteristicValueArray() != null) {\n      Calendar now = Calendar.getInstance();\n      for (ProductCharacteristicValue productCharacteristicValues : product.getProductCharacteristicValues().getProductCharacteristicValueArray()) {\n        if (productCharacteristicValues != null && \"Geheimnummer\".equals(productCharacteristicValues.getValue())) {\n          TimePeriod validFor = productCharacteristicValues.getValidFor();\n          if ((validFor.getStartDateTime() == null || validFor.getStartDateTime().before(now)) && (validFor.getEndDateTime() == null || validFor.getEndDateTime().after(now))) {\n            geheim = true;\n          }\n        }\n      }\n      entries.add(new MetaDataEntry(\"getUnlistedNumber\", \"getUnlistedNumber\", getBooleanValue(geheim), MetaDataEntryType.BOOLEAN));\n    }\n\n    return entries;\n  }\n\n  @SuppressWarnings(\"unchecked\")\n  private final static List<String> mobileTypes = Arrays.asList(new String[] {\"663\", \"664\", \"650\", \"660\", \"681\", \"699\", \"676\"});\n\n  private static ProductType translateProductType(Product voiceProduct) {\n    String ndc = voiceProduct.getCallNumber().getNDC();\n    if (mobileTypes.contains(ndc)) {\n      return ProductType.MOBILE;\n    }\n    return ProductType.FIXED;\n  }\n\n  public static ArrayList<MetaDataEntry> createMetaData(ProductComponent product) {\n    ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n\n    if (product.getSimpleProductOffering() != null) {\n      entries.add(new MetaDataEntry(\"getSimpleProductOfferingId\", \"getSimpleProductOfferingId\", product.getSimpleProductOffering().getProductOfferingId(), MetaDataEntryType.STRING));\n    }\n\n    return entries;\n  }\n\n  public static ArrayList<MetaDataEntry> createMetaData(PhysicalResource res) {\n    ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n\n    entries.add(new MetaDataEntry(\"getFirmwareVersion\", \"getFirmwareVersion\", res.getFirmwareVersion(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getInstallationDate\", \"getInstallationDate\", getDateValue(res.getInstallationDate()), MetaDataEntryType.DATE_TIME));\n    entries.add(new MetaDataEntry(\"getSerialNumber\", \"getSerialNumber\", res.getSerialNumber(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getVersionNumber\", \"getVersionNumber\", res.getVersionNumber(), MetaDataEntryType.STRING));\n\n    return entries;\n  }\n\n  public static ArrayList<MetaDataEntry> getAllProductCharecteristicsAsMetaData(Product product, DefaultProductNode productNode) {\n    ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n    if (product == null || !product.isSetProductCharacteristicValues()) {\n      return entries;\n    }\n    for (ProductCharacteristicValue element : product.getProductCharacteristicValues().getProductCharacteristicValueArray()) {\n      try {\n          entries.add(new MetaDataEntry(element.getProductSpecCharacteristic().getName(), element.getProductSpecCharacteristic().getDescription(),\n            (element.getProductSpecCharacteristicValue() != null ? element.getProductSpecCharacteristicValue().getValue() : \"-\"), MetaDataEntryType.STRING, element.getProductSpecCharacteristic()\n                .getProductSpecCharacteristicId()));\n        productNode.setProductCharacteristicValuesAsString(productNode.getProductCharacteristicValuesAsString() + element.getProductSpecCharacteristic().getName() + \":\"\n            + (element.getProductSpecCharacteristicValue() != null ? element.getProductSpecCharacteristicValue().getValue() : \"-\") + \"\\n\");\n      } catch (Exception e) {\n        StringWriter stack = new StringWriter();\n        e.printStackTrace(new PrintWriter(stack));\n        logger.debug(\"Exception: \" + stack.toString());\n      }\n    }\n    return entries;\n  }\n\n  private static String getDateValue(Calendar cal) {\n    if (cal == null) {\n      return null;\n    }\n    return getDateValue(cal.getTime());\n  }\n\n  private static String getDateValue(Date date) {\n    if (date == null) {\n      return null;\n    }\n    return dateFormat.format(date);\n  }\n\n  private static String getBooleanValue(boolean bool) {\n    return bool ? \"Ja\" : \"Nein\";\n  }\n\n  public static String getCallNumberValue(CallNumber callNumber) {\n    if (callNumber == null) {\n      return null;\n    }\n    return callNumber.getCC() + \" \" + callNumber.getNDC() + \" \" + callNumber.getSN();\n  }\n\n  public static Date getValidForStart(TimePeriod validFor) {\n    if (validFor != null) {\n      if (validFor.getStartDateTime() != null) {\n        return validFor.getStartDateTime().getTime();\n      }\n    }\n    return null;\n  }\n\n  public static Date getValidForEnd(TimePeriod validFor) {\n    if (validFor != null) {\n      if (validFor.getEndDateTime() != null) {\n        return validFor.getEndDateTime().getTime();\n      }\n    }\n    return null;\n  }\n\n  public static MetaDataEntryType translateValueType(Enum valueType) {\n    int value = valueType.intValue();\n\n    for (MetaDataEntryType type : MetaDataEntryType.values()) {\n      if (type.getValue() == value) {\n        return type;\n      }\n    }\n\n    return MetaDataEntryType.STRING;\n  }\n\n  public static String getTempProdEndDate(ProductCharacteristicValues productCharacteristicValues) {\n    if (productCharacteristicValues != null && productCharacteristicValues.getProductCharacteristicValueArray() != null) {\n      for (ProductCharacteristicValue value : productCharacteristicValues.getProductCharacteristicValueArray()) {\n        if (value != null && value.getProductSpecCharacteristic().getProductSpecCharacteristicId() != null\n            && value.getProductSpecCharacteristic().getProductSpecCharacteristicId().equalsIgnoreCase(\"PSC_TEMPPROD_ENDS\")) {\n          return value.getValue();\n        }\n      }\n    }\n    return null;\n  }\n\n  public static ArrayList<MetaDataEntry> getProductCharacteristicValuesMetaDataEntries(ProductCharacteristicValues productCharacteristicValues, String filterMode,\n      List<String> blacklistValuesForNewProductView, List<String> whitelistValuesForNewProductView) {\n    if (productCharacteristicValues != null && productCharacteristicValues.getProductCharacteristicValueArray() != null) {\n      ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n\n      for (ProductCharacteristicValue value : productCharacteristicValues.getProductCharacteristicValueArray()) {\n        if (value.getProductSpecCharacteristic().getProductSpecCharacteristicId() != null\n            && value.getProductSpecCharacteristic().getProductSpecCharacteristicId().equalsIgnoreCase(\"PSC_TEMPPROD_ENDS\")) {\n          continue;\n        }\n        if (filterMode.equalsIgnoreCase(\"Blacklist\") && value.getProductSpecCharacteristic() != null\n            && !isBlacklisted(value.getProductSpecCharacteristic().getProductSpecCharacteristicId(), blacklistValuesForNewProductView)) {\n          entries.add(createEntry(value));\n        }\n        if (filterMode.equalsIgnoreCase(\"Whitelist\") && value.getProductSpecCharacteristic() != null\n            && isWhitelisted(value.getProductSpecCharacteristic().getProductSpecCharacteristicId(), whitelistValuesForNewProductView)) {\n          entries.add(createEntry(value));\n        }\n      }\n      return entries;\n    }\n\n    return new ArrayList<MetaDataEntry>();\n  }\n\n  private static MetaDataEntry createEntry(ProductCharacteristicValue value) {\n    MetaDataEntry entry = new MetaDataEntry();\n\n    if (ValueType.DATE_TIME == value.getProductSpecCharacteristic().getValueType()) {\n      try {\n        SimpleDateFormat orig = new SimpleDateFormat(determineDateFormat(value.getValue()));\n        Date date = orig.parse(value.getValue());\n        entry.setValue(dateFormat.format(date));\n      } catch (Exception e) {\n        entry.setValue(value.getValue());\n      }\n    } else {\n      entry.setValue(value.getValue());\n    }\n    entry.setValidForStart(getValidForStart(value.getValidFor()));\n    entry.setValidForEnd(getValidForEnd(value.getValidFor()));\n\n    entry.setDescription(value.getProductSpecCharacteristic().getDescription());\n    entry.setName(value.getProductSpecCharacteristic().getName());\n    entry.setType(translateValueType(value.getProductSpecCharacteristic().getValueType()));\n    entry.setId(value.getProductSpecCharacteristic().getProductSpecCharacteristicId());\n    return entry;\n  }\n\n  private static boolean isBlacklisted(String productSpecCharacteristicId, List<String> blacklist) {\n    return blacklist.contains(productSpecCharacteristicId);\n  }\n\n  private static boolean isWhitelisted(String productSpecCharacteristicId, List<String> whitelist) {\n    return whitelist.contains(productSpecCharacteristicId);\n  }\n\n  public static MetaData createMetaData(Equipment equipment) {\n    ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n\n    entries.add(new MetaDataEntry(\"getId\", \"getId\", equipment.getId(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getName\", \"getName\", equipment.getName(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getSerialNumber\", \"getSerialNumber\", equipment.getSerialNumber(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getStatus\", \"getStatus\", equipment.getStatus(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getWarrentyBegin\", \"getWarrentyBegin\", getDateValue(equipment.getWarrentyBegin()), MetaDataEntryType.DATE_TIME));\n    entries.add(new MetaDataEntry(\"getWarrentyEnd\", \"getWarrentyEnd\", getDateValue(equipment.getWarrentyEnd()), MetaDataEntryType.DATE_TIME));\n    entries.add(new MetaDataEntry(\"getMaterialId\", \"getMaterialId\", equipment.getMaterialId(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getMaterialName\", \"getMaterialName\", equipment.getMaterialName(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getEquipmentTyp\", \"getEquipmentTyp\", equipment.getEquipmentTyp(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getTypBezeichnung\", \"getTypBezeichnung\", equipment.getTypBezeichnung(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getEquipmentArt\", \"getEquipmentArt\", equipment.getEquipmentArt(), MetaDataEntryType.STRING));\n    entries.add(new MetaDataEntry(\"getArtBezeichnung\", \"getArtBezeichnung\", equipment.getArtBezeichnung(), MetaDataEntryType.STRING));\n\n    MetaData metaData = new MetaData();\n    metaData.put(entries);\n    return metaData;\n  }\n\n  public static MetaData createMetaDataEquipmentAttributes(Equipment equipment) {\n    ArrayList<MetaDataEntry> entries = new ArrayList<MetaDataEntry>();\n\n    if (equipment.hasAttributes()) {\n      for (EquipmentAttribute attr : equipment.getAttributes()) {\n        entries.add(new MetaDataEntry(attr.getKey(), attr.getKey(), attr.getValue(), MetaDataEntryType.STRING));\n      }\n    }\n\n    MetaData metaData = new MetaData();\n    metaData.put(entries);\n    return metaData;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/PartySummaryService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/customerequipment/PartySummaryService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 386,
    "content": "package at.a1ta.cuco.core.service.customerequipment;\n\nimport java.util.ArrayList;\n\nimport at.a1ta.cuco.core.shared.dto.product.GetPartySummaryResponse;\nimport at.a1ta.cuco.core.shared.dto.product.PartySummaryItem;\n\npublic interface PartySummaryService {\n\n  GetPartySummaryResponse getPartySummary(Long partyId);\n\n  ArrayList<PartySummaryItem> getICTServicesForPartyId(Long partyId);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyNotesServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyNotesServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1194,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.MyNotesDao;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.shared.dto.NotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\n@Service\npublic class MyNotesServiceImpl implements MyNotesService {\n\n  MyNotesDao myNotesDao;\n\n  @Autowired\n  @Qualifier(\"cucoCustomerDao\")\n  PartyDao partyDao;\n\n  @Override\n  public SearchResult<SalesInfoNote> loadMyNotes(NotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad) {\n    SearchResult<SalesInfoNote> notes = myNotesDao.loadMyNotes(filter, salesInfoNoteTypesToLoad);\n    for (SalesInfoNote note : notes) {\n      note.setParty(partyDao.loadParty(note.getPartyId()));\n    }\n    return notes;\n  }\n\n  @Autowired\n  public void setNotesDao(MyNotesDao myNotesDao) {\n    this.myNotesDao = myNotesDao;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyNotesService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyNotesService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 457,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.NotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\npublic interface MyNotesService {\n\n  SearchResult<SalesInfoNote> loadMyNotes(NotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyCustomersServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyCustomersServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 11786,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\nimport java.util.TreeMap;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\nimport at.a1ta.cuco.core.dao.db.VbmProductsDao;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter.Churn;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter.FlashInfo;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter.Indexation;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter.Vip;\nimport at.a1ta.cuco.core.shared.dto.Party;\nimport at.a1ta.cuco.core.shared.dto.PartySearch;\nimport at.a1ta.cuco.core.shared.dto.Tupel;\nimport at.a1ta.cuco.core.shared.dto.nbo.VBMProductDetails;\nimport at.a1ta.cuco.core.shared.model.DualSegment;\nimport at.a1ta.cuco.core.shared.model.PartyModelFactory;\n\n@Service\npublic class MyCustomersServiceImpl implements MyCustomersService {\n\n  private PartyDao partyDao;\n\n  private SettingService settingService;\n\n  private PhoneNumberDao phoneNumberDao;\n\n  private VbmProductsDao vbmProductsDao;\n\n  private static final Comparator<BigDecimal> customerTypeIdComparator = new Comparator<BigDecimal>() {\n\n    @Override\n    public int compare(BigDecimal o1, BigDecimal o2) {\n      if (o1 == null) {\n        return 1;\n      }\n      if (o2 == null) {\n        return -1;\n      }\n      return o1.compareTo(o2);\n    }\n\n  };\n\n  private static final Comparator<String> worthclassComparator = new Comparator<String>() {\n\n    @Override\n    public int compare(String o1, String o2) {\n      return getCustomerWorthclassValue(o1).compareTo(getCustomerWorthclassValue(o2));\n    }\n\n    private Integer getCustomerWorthclassValue(String worthclassValue) {\n      if (\"NEU\".equalsIgnoreCase(worthclassValue)) {\n        return 0;\n      }\n      if (\"GOLD\".equalsIgnoreCase(worthclassValue)) {\n        return 1;\n      }\n      if (\"SILBER\".equalsIgnoreCase(worthclassValue)) {\n        return 2;\n      }\n      if (\"BRONZE\".equalsIgnoreCase(worthclassValue)) {\n        return 3;\n      }\n      if (\"BLEI\".equalsIgnoreCase(worthclassValue)) {\n        return 4;\n      }\n      return 5;\n    }\n\n  };\n\n  @Override\n  public int loadNumberOfCustomersForSupportUser(String uUser) {\n    return partyDao.loadNumberOfCustomersForSupportUser(uUser);\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithChurnForSupportUser(String uUser) {\n    return partyDao.loadNumberOfCustomersWithChurnForSupportUser(uUser) + phoneNumberDao.loadNumberOfCustomersWithMobileChurnForSupportUser(uUser);\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithIndexationForSupportUser(String uUser) {\n    return partyDao.loadNumberOfCustomersWithIndexationForSupportUser(uUser);\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithFlashInfosForSupportUser(String uUser) {\n    return partyDao.loadNumberOfCustomersWithFlashInfosForSupportUser(uUser);\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithVIPForSupportUser(String uUser) {\n    return partyDao.loadNumberOfCustomersWithVIPForSupportUser(uUser);\n  }\n\n  @Override\n  public Map<String, Integer> loadNumberOfCustomersByTypeForSupportUser(String uUser) {\n    Map<BigDecimal, BigDecimal> partyTypeCounts = new TreeMap<BigDecimal, BigDecimal>(customerTypeIdComparator);\n    partyTypeCounts.putAll(partyDao.loadNumberOfCustomersByTypeForSupportUser(uUser));\n    Map<String, Integer> result = new LinkedHashMap<String, Integer>(partyTypeCounts.size() * 2);\n    for (Entry<BigDecimal, BigDecimal> entry : partyTypeCounts.entrySet()) {\n      String titleString = PartyModelFactory.getTitle(entry.getKey() != null ? entry.getKey().intValue() : -1);\n      result.put(titleString, entry.getValue().intValue());\n    }\n    return result;\n  }\n\n  @Override\n  public Map<String, Integer> loadNumberOfCustomersByWorthclassForSupportUser(String uUser) {\n    Map<String, BigDecimal> partyWorthCounts = partyDao.loadNumberOfCustomersByWorthclassForSupportUser(uUser);\n    Map<String, Integer> result = new TreeMap<String, Integer>(worthclassComparator);\n    for (Entry<String, BigDecimal> entry : partyWorthCounts.entrySet()) {\n      if (entry.getKey() != null && !entry.getKey().equals(\"UNKNOWN\")) {\n        result.put(entry.getKey(), entry.getValue().intValue());\n      } else {\n        Integer value = result.get(\"Keine Angabe\");\n        if (value != null) {\n          value += entry.getValue().intValue();\n        } else {\n          value = entry.getValue().intValue();\n        }\n        result.put(\"Keine Angabe\", value);\n      }\n    }\n    return result;\n  }\n\n  @Override\n  public Map<String, Integer> loadNumberOfCustomersByTurnoverRangesForSupportUser(String uUser) {\n    List<BigDecimal> ranges = loadRanges(uUser);\n    List<Tupel<Long, BigDecimal>> turnovers = partyDao.loadNumberOfCustomersTurnoverForSupportUser(uUser);\n\n    Map<String, Integer> result = new LinkedHashMap<String, Integer>(ranges.size() * 2);\n    BigDecimal min = BigDecimal.ZERO;\n    int numberOfCustomersWithTurnOver = 0;\n    for (BigDecimal range : ranges) {\n      if (range.compareTo(min) < 0) {\n        throw new IllegalArgumentException(\"invalid ranges\");\n      }\n\n      int numberOfCustomers = getNumbersForRange(turnovers, min, range);\n      if (numberOfCustomers > 0) {\n        numberOfCustomersWithTurnOver += numberOfCustomers;\n        result.put(min + \" - \" + range + \"\\u20AC\", numberOfCustomers);\n      }\n      min = range;\n    }\n    int numberOfCustomers = getNumbersForRange(turnovers, min, new BigDecimal(Integer.MAX_VALUE));\n    if (numberOfCustomers > 0) {\n      numberOfCustomersWithTurnOver += numberOfCustomers;\n      result.put(\"> \" + min + \"\\u20AC\", numberOfCustomers);\n    }\n    int numberOfAllCustomers = loadNumberOfCustomersForSupportUser(uUser);\n    if (numberOfAllCustomers > numberOfCustomersWithTurnOver) {\n      Integer customersInFirstRange = result.get(\"0 - \" + ranges.get(0) + \"\\u20AC\");\n      if (customersInFirstRange == null) {\n        customersInFirstRange = 0;\n      }\n      customersInFirstRange += (numberOfAllCustomers - numberOfCustomersWithTurnOver);\n      result.put(\"0 - \" + ranges.get(0) + \"\\u20AC\", customersInFirstRange);\n    }\n    return result;\n  }\n\n  private int getNumbersForRange(List<Tupel<Long, BigDecimal>> turnovers, BigDecimal min, BigDecimal range) {\n    int customers = 0;\n    for (Tupel<Long, BigDecimal> turnover : turnovers) {\n      if (turnover.getValue2().compareTo(min) >= 0 && turnover.getValue2().compareTo(range) == -1) {\n        customers++;\n      }\n    }\n    return customers;\n  }\n\n  private List<BigDecimal> loadRanges(String uUser) {\n    String[] rangeValues = settingService.getValuesForUserIgnoreMissing(\"mycuco.turnover.ranges\", uUser);\n    List<BigDecimal> ranges = new ArrayList<BigDecimal>(rangeValues.length);\n    for (String rangeValue : rangeValues) {\n      ranges.add(new BigDecimal(rangeValue));\n    }\n    return ranges;\n  }\n\n  @Override\n  public SearchResult<Party> filterCustomersForSupportUser(CustomerFilter customerFilter, String username, boolean showNonCustomers) {\n\n    SearchResult<Party> filteredCustomersForSupportUser = partyDao.filterCustomersForSupportUser(customerFilter, username);\n    if (showNonCustomers && (customerFilter.getDualSegments().contains(DualSegment.ALL) || customerFilter.getDualSegments().contains(DualSegment.NONCUSTOMER))\n        && customerFilter.getVip().equals(Vip.ALL) && customerFilter.getFlashInfo().equals(FlashInfo.ALL) && customerFilter.getChurn().equals(Churn.ALL)\n        && customerFilter.getIndexation().equals(Indexation.ALL) && customerFilter.getTurnoverRanges().contains(\"ALL\") && customerFilter.getProductDetailsFilter() != null\n        && customerFilter.getProductDetailsFilter().contains(VBMProductDetails.NO_PROD_FILTER)) {\n      PartySearch nonCustomerSearch = new PartySearch();\n      nonCustomerSearch.setSupportUserId(username);\n      nonCustomerSearch.setLeadId(customerFilter.getPartyId());\n      nonCustomerSearch.setPostcode(customerFilter.getPlz());\n      filteredCustomersForSupportUser.getResults().addAll(partyDao.searchNonCustomerFull(nonCustomerSearch, settingService.getIntValue(\"Partysearch.maxResults\", 2000)).getContent());\n    }\n\n    return filteredCustomersForSupportUser;\n  }\n\n  @Override\n  public List<Party> filterCustomersForSupportUserUnlimited(CustomerFilter customerFilter, String username) {\n    List<Party> filterCustomersForSupportUserUnlimited = partyDao.filterCustomersForSupportUserUnlimited(customerFilter, username);\n    if ((customerFilter.getDualSegments().contains(DualSegment.ALL) || customerFilter.getDualSegments().contains(DualSegment.NONCUSTOMER)) && customerFilter.getVip().equals(Vip.ALL)\n        && customerFilter.getFlashInfo().equals(FlashInfo.ALL) && customerFilter.getChurn().equals(Churn.ALL) && customerFilter.getIndexation().equals(Indexation.ALL)\n        && customerFilter.getTurnoverRanges().contains(\"ALL\") && customerFilter.getProductDetailsFilter() != null\n        && customerFilter.getProductDetailsFilter().contains(VBMProductDetails.NO_PROD_FILTER)) {\n      PartySearch nonCustomerSearch = new PartySearch();\n      nonCustomerSearch.setSupportUserId(username);\n      nonCustomerSearch.setLeadId(customerFilter.getPartyId());\n      nonCustomerSearch.setPostcode(customerFilter.getPlz());\n      filterCustomersForSupportUserUnlimited.addAll(partyDao.searchNonCustomerFull(nonCustomerSearch, settingService.getIntValue(\"Partysearch.maxResults\", 2000)).getContent());\n    }\n\n    return filterCustomersForSupportUserUnlimited;\n  }\n\n  @Autowired\n  public void setPartyDao(@Qualifier(\"cucoCustomerDao\") PartyDao partyDao) {\n    this.partyDao = partyDao;\n  }\n\n  @Autowired\n  public void setSettingService(SettingService settingService) {\n    this.settingService = settingService;\n  }\n\n  @Autowired\n  public void setPhoneNumberDao(PhoneNumberDao phoneNumberDao) {\n    this.phoneNumberDao = phoneNumberDao;\n  }\n\n  @Override\n  public int loadNumberOfCustomersWithVBMForSupportUser(String uUser) {\n    return partyDao.loadNumberOfCustomersWithVBMForSupportUser(uUser);\n  }\n\n  @Override\n  public Map<String, List<String>> getFilters(List<String> filterNames, String uUser) {\n    Map<String, List<String>> results = new HashMap<String, List<String>>();\n    if (filterNames.contains(\"mycuco.turnover.ranges\")) {\n      String valueForUserOrNull = settingService.getValueForUserOrNull(\"mycuco.turnover.ranges\", uUser);\n      List<String> ranges = new ArrayList<String>();\n      if (valueForUserOrNull != null) {\n        ranges.addAll(Arrays.asList(valueForUserOrNull.split(\";\")));\n      }\n      results.put(\"mycuco.turnover.ranges\", ranges);\n    }\n    if (filterNames.contains(\"mycuco.vbm.products\")) {\n      List<String> productNames = new ArrayList<String>();\n      List<VBMProductDetails> listAllVBMProductDetails = vbmProductsDao.listAllVBMProductDetails();\n      listAllVBMProductDetails.add(0, VBMProductDetails.ALL_PROD);\n      listAllVBMProductDetails.add(0, VBMProductDetails.NO_PROD_FILTER);\n      for (VBMProductDetails product : listAllVBMProductDetails) {\n        productNames.add(product.getProductId() + \":\" + product.getProductName());\n      }\n      results.put(\"mycuco.vbm.products\", productNames);\n    }\n    return results;\n  }\n\n  @Autowired\n  public void setVbmProductsDao(VbmProductsDao vbmProductsDao) {\n    this.vbmProductsDao = vbmProductsDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyBindingsService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyBindingsService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 409,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.Map;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.BindingsFilter;\nimport at.a1ta.cuco.core.shared.dto.CustomerBinding;\n\npublic interface MyBindingsService {\n  Map<String, Integer> getBindingsInfo(String uUser);\n\n  SearchResult<CustomerBinding> filterBindings(BindingsFilter bindingsFilter, String uUser);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyToDoNotesServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyToDoNotesServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1262,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.MyToDoNotesDao;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.shared.dto.ToDoNotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\n@Service\npublic class MyToDoNotesServiceImpl implements MyToDoNotesService {\n\n  private MyToDoNotesDao myToDoNotesDao;\n  @Autowired\n  @Qualifier(\"cucoCustomerDao\")\n  PartyDao partyDao;\n\n  @Override\n  public SearchResult<SalesInfoNote> loadMyToDoNotes(ToDoNotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad) {\n    SearchResult<SalesInfoNote> notes = myToDoNotesDao.loadMyToDoNotes(filter, salesInfoNoteTypesToLoad);\n    for (SalesInfoNote note : notes) {\n      note.setParty(partyDao.loadParty(note.getPartyId()));\n    }\n    return notes;\n  }\n\n  @Autowired\n  public void setMyToDoNotesDao(MyToDoNotesDao myToDoNotesDao) {\n    this.myToDoNotesDao = myToDoNotesDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyToDoNotesService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyToDoNotesService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 474,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.ToDoNotesFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote.SalesInfoNoteType;\n\npublic interface MyToDoNotesService {\n\n  SearchResult<SalesInfoNote> loadMyToDoNotes(ToDoNotesFilter filter, List<SalesInfoNoteType> salesInfoNoteTypesToLoad);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyFlashInfosService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyFlashInfosService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 424,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.List;\n\nimport at.a1ta.bite.core.shared.dto.FilterCollection;\nimport at.a1ta.cuco.core.shared.dto.FlashInfo;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\npublic interface MyFlashInfosService {\n\n  List<FlashInfo> loadFlashInfosForAgent(FilterCollection filters, String agentUuser);\n\n  List<Party> loadPartiesOfFlashInfoAndAgent(Long flashInfoId, String username);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyQuoteServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyQuoteServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1021,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.MyQuoteDao;\nimport at.a1ta.cuco.core.shared.dto.MyOpportunity;\nimport at.a1ta.cuco.core.shared.dto.OpportunityFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoOverviewRow;\n\n@Service\npublic class MyQuoteServiceImpl implements MyQuoteService {\n\n  MyQuoteDao quoteDao;\n\n  @Override\n  public SearchResult<MyOpportunity> loadMyOpportunities(OpportunityFilter filter, boolean showNonCustomers) {\n    return quoteDao.loadMyOpportunities(filter, showNonCustomers);\n  }\n\n  @Override\n  public SearchResult<SalesInfoOverviewRow> loadMyQuotesForOverview(OpportunityFilter filter, boolean showNonCustomers) {\n    return quoteDao.loadMyQuotesForOverview(filter, showNonCustomers);\n  }\n\n  @Autowired\n  public void setQuoteDao(MyQuoteDao quoteDao) {\n    this.quoteDao = quoteDao;\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyCustomersService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyCustomersService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1245,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.List;\nimport java.util.Map;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.CustomerFilter;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\npublic interface MyCustomersService {\n\n  int loadNumberOfCustomersForSupportUser(String uUser);\n\n  int loadNumberOfCustomersWithChurnForSupportUser(String uUser);\n\n  int loadNumberOfCustomersWithIndexationForSupportUser(String uUser);\n\n  int loadNumberOfCustomersWithFlashInfosForSupportUser(String uUser);\n\n  int loadNumberOfCustomersWithVIPForSupportUser(String uUser);\n\n  Map<String, Integer> loadNumberOfCustomersByTypeForSupportUser(String uUser);\n\n  Map<String, Integer> loadNumberOfCustomersByWorthclassForSupportUser(String uUser);\n\n  Map<String, Integer> loadNumberOfCustomersByTurnoverRangesForSupportUser(String uUser);\n\n  SearchResult<Party> filterCustomersForSupportUser(CustomerFilter customerFilter, String username, boolean showNonCustomers);\n\n  List<Party> filterCustomersForSupportUserUnlimited(CustomerFilter customerFilter, String uUser);\n\n  int loadNumberOfCustomersWithVBMForSupportUser(String uUser);\n\n  Map<String, List<String>> getFilters(List<String> filterNames, String userName);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyBindingsServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyBindingsServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3538,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.joda.time.DateMidnight;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.dao.db.InventoryDao;\nimport at.a1ta.cuco.core.shared.dto.BindingsFilter;\nimport at.a1ta.cuco.core.shared.dto.CustomerBinding;\n\n@Service\npublic class MyBindingsServiceImpl implements MyBindingsService {\n\n  private InventoryDao inventoryDao;\n  private SettingService settingsService;\n\n  private static final String bindingTimerange1 = \"mycuco.binding.timerange1.days\";\n  private static final String bindingTimerange2 = \"mycuco.binding.timerange2.days\";\n  private static final String bindingTimerange3 = \"mycuco.binding.timerange3.days\";\n\n  @Override\n  public Map<String, Integer> getBindingsInfo(String uUser) {\n    List<Date> list = inventoryDao.getExpiringContractDates(uUser, Integer.valueOf(settingsService.getIntValue(bindingTimerange3)));\n    Map<String, Integer> map = getExpiringContractsDateMap(list);\n    int expiredContracts = inventoryDao.getExpiredContracts(uUser);\n    map.put(\"expiredContracts\", expiredContracts);\n    return map;\n  }\n\n  private Map<String, Integer> getExpiringContractsDateMap(List<Date> dates) {\n    if (dates == null) {\n      return new HashMap<String, Integer>();\n    }\n    DateMidnight dateTimeRange1 = new DateMidnight();\n    DateMidnight dateTimeRange2 = new DateMidnight();\n    dateTimeRange1 = dateTimeRange1.plusDays(settingsService.getIntValue(bindingTimerange1) + 1);\n    dateTimeRange2 = dateTimeRange2.plusDays(settingsService.getIntValue(bindingTimerange2) + 1);\n    int timeRange1Counter = 0;\n    int timeRange2Counter = 0;\n\n    for (Date bindingDate : dates) {\n      if (bindingDate != null) {\n        if (bindingDate.before(dateTimeRange1.toDate())) {\n          timeRange1Counter++;\n        } else if (bindingDate.before(dateTimeRange2.toDate())) {\n          timeRange2Counter++;\n        }\n      }\n    }\n    HashMap<String, Integer> map = new HashMap<String, Integer>();\n    map.put(\"timeRange1\", timeRange1Counter);\n    map.put(\"timeRange2\", timeRange2Counter + timeRange1Counter);\n    map.put(\"timeRange3\", dates.size());\n    return map;\n  }\n\n  @Override\n  public SearchResult<CustomerBinding> filterBindings(BindingsFilter bindingsFilter, String uUser) {\n    SearchResult<CustomerBinding> result = inventoryDao.filterBindingsInfo(bindingsFilter, uUser);\n    for (CustomerBinding binding : result) {\n      if (binding.getProductCategory() != null && binding.getProductCategory().contains(\"V\") && binding.getAonCustomerNumber() == null) {\n        binding.setAonCustomerNumber(inventoryDao.getAonNumber(binding.getPartyId() == null ? null : Long.valueOf(binding.getPartyId()), binding.getContractId(), binding.getProductNumber()));\n      }\n      if (binding.getProductDescription() == null) {\n        binding.setProductDescription(inventoryDao.getProductName(binding.getPartyId() == null ? null : Long.valueOf(binding.getPartyId()), binding.getContractId(), binding.getAonCustomerNumber()));\n      }\n    }\n    return result;\n  }\n\n  @Autowired\n  public void setInventoryDao(InventoryDao inventoryDao) {\n    this.inventoryDao = inventoryDao;\n  }\n\n  @Autowired\n  public void setSettingsService(SettingService settingsService) {\n    this.settingsService = settingsService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyFlashInfosServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyFlashInfosServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1758,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\n\nimport at.a1ta.bite.core.shared.dto.Filter;\nimport at.a1ta.bite.core.shared.dto.FilterCollection;\nimport at.a1ta.cuco.core.dao.db.FlashInfoDao;\nimport at.a1ta.cuco.core.dao.db.PartyDao;\nimport at.a1ta.cuco.core.shared.dto.FlashInfo;\nimport at.a1ta.cuco.core.shared.dto.Party;\n\n@Service\npublic class MyFlashInfosServiceImpl implements MyFlashInfosService {\n\n  private FlashInfoDao flashInfoDao;\n\n  private PartyDao partyDao;\n\n  @Override\n  public List<FlashInfo> loadFlashInfosForAgent(FilterCollection filters, String agentUuser) {\n    Map<String, Object> params = new HashMap<String, Object>();\n\n    Filter<String> filter = filters.getStringFilter(\"partyId\");\n    String value = filter.getSelectedValues();\n    Long partyId = Long.valueOf(value);\n    params.put(\"partyId\", partyId);\n\n    filter = filters.getStringFilter(\"title\");\n    value = filter.getSelectedValues();\n    if (StringUtils.isNotBlank(value)) {\n      params.put(\"title\", value);\n    }\n\n    return flashInfoDao.loadMyFlashInfos(params);\n  }\n\n  @Override\n  public List<Party> loadPartiesOfFlashInfoAndAgent(Long flashInfoId, String username) {\n    return partyDao.loadPartiesOfFlashInfo(flashInfoId, username);\n  }\n\n  @Autowired\n  public void setFlashInfoDao(FlashInfoDao flashInfoDao) {\n    this.flashInfoDao = flashInfoDao;\n  }\n\n  @Autowired\n  @Qualifier(\"cucoCustomerDao\")\n  public void setPartyDao(PartyDao partyDao) {\n    this.partyDao = partyDao;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyQuoteService.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/mycuco/MyQuoteService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 523,
    "content": "package at.a1ta.cuco.core.service.mycuco;\n\nimport at.a1ta.bite.core.shared.dto.SearchResult;\nimport at.a1ta.cuco.core.shared.dto.MyOpportunity;\nimport at.a1ta.cuco.core.shared.dto.OpportunityFilter;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoOverviewRow;\n\npublic interface MyQuoteService {\n\n  SearchResult<MyOpportunity> loadMyOpportunities(OpportunityFilter filter, boolean showNonCustomers);\n\n  SearchResult<SalesInfoOverviewRow> loadMyQuotesForOverview(OpportunityFilter filter, boolean showNonCustomers);\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/report/UserActionStatistics.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/report/UserActionStatistics.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4296,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.report;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;\nimport org.springframework.util.CollectionUtils;\n\nimport at.a1ta.bite.core.server.dto.UserActionRecord;\n\npublic class UserActionStatistics extends ActionStatisticBase<UserActionRecord> {\n\n  private static double DEFAULT_MAX_VARIATION = 25;\n\n  public UserActionStatistics(Collection<UserActionRecord> data) {\n    super(data);\n  }\n\n  public List<ActionRecordStatistics> findSuspicious(List<UserActionRecord> raw) {\n    if (hasValues() || CollectionUtils.isEmpty(raw)) {\n      return Collections.emptyList();\n    }\n\n    List<ActionRecordStatistics> list = new ArrayList<ActionRecordStatistics>();\n    for (UserActionRecord record : raw) {\n      DescriptiveStatistics userStatistics = getStatistics(createKey(record));\n      if (record.getActionCount() > DEFAULT_MAX_VARIATION) {\n        double max = getActionLimit(userStatistics);\n        if (record.getActionCount() > max) {\n          ActionRecordStatistics ars = new ActionRecordStatistics(record);\n          ars.setAllowedMax(max);\n          ars.setDeviation(userStatistics.getStandardDeviation());\n          ars.setMean(userStatistics.getMean());\n          list.add(ars);\n        }\n      }\n    }\n    return list;\n  }\n\n  double getActionLimit(DescriptiveStatistics statistics) {\n    return statistics.getMean() + calculateMaxVariation(statistics.getStandardDeviation());\n  }\n\n  double calculateMaxVariation(double standardDeviation) {\n\n    if (Double.isNaN(standardDeviation) || standardDeviation <= 2.0D) {\n      return DEFAULT_MAX_VARIATION;\n    }\n\n    if (standardDeviation <= 3.9D) {\n      return standardDeviation * 8D;\n    } else if (standardDeviation <= 7.9D) {\n      return standardDeviation * 6D;\n    } else if (standardDeviation <= 12.9D) {\n      return standardDeviation * 4;\n    }\n    return standardDeviation * 2.0D;\n\n  }\n\n  public Map<Integer, Double> getMaximumDistribution(int limit) {\n    HashMap<Integer, Double> values = new HashMap<Integer, Double>(limit);\n    for (int i = 1; i <= limit; i++) {\n      values.put(Integer.valueOf(i), calculateMaxVariation(i));\n    }\n    return values;\n  }\n\n  @Override\n  String createKey(UserActionRecord record) {\n    return createKey(record.getLogin(), record.getAction());\n  }\n\n  String createKey(String user, String action) {\n    return user + \"#\" + action;\n  }\n\n  public static class ActionRecordStatistics {\n\n    private final UserActionRecord actionRecord;\n\n    public String getAction() {\n      return actionRecord.getAction();\n    }\n\n    public Long getActionCount() {\n      return actionRecord.getActionCount();\n    }\n\n    private double mean;\n    private double deviation;\n    private double allowedMax;\n\n    public ActionRecordStatistics(UserActionRecord actionRecord) {\n      this.actionRecord = actionRecord;\n    }\n\n    public double getMean() {\n      return mean;\n    }\n\n    public void setMean(double mean) {\n      this.mean = mean;\n    }\n\n    public double getDeviation() {\n      return deviation;\n    }\n\n    public void setDeviation(double deviation) {\n      this.deviation = deviation;\n    }\n\n    public double getAllowedMax() {\n      return allowedMax;\n    }\n\n    public void setAllowedMax(double allowedMax) {\n      this.allowedMax = allowedMax;\n    }\n\n    public UserActionRecord getActionRecord() {\n      return actionRecord;\n    }\n\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/report/DepartmentActionStatistics.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/report/DepartmentActionStatistics.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1663,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.report;\n\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.LinkedHashSet;\nimport java.util.Set;\n\nimport at.a1ta.bite.core.server.dto.DepartmentActionRecord;\n\npublic class DepartmentActionStatistics extends ActionStatisticBase<DepartmentActionRecord> {\n\n  private Set<String> departments = new LinkedHashSet<String>();\n\n  public DepartmentActionStatistics(Collection<DepartmentActionRecord> data) {\n    super(data);\n  }\n\n  @Override\n  String createKey(DepartmentActionRecord record) {\n    captureDepartment(record.getDepartment());\n    return record.getDepartment() + \"#\" + record.getAction();\n  }\n\n  private void captureDepartment(String department) {\n    if (!departments.contains(department)) {\n      departments.add(department);\n    }\n  }\n\n  public Set<String> getDepartments() {\n    return Collections.unmodifiableSet(this.departments);\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/report/ActionStatisticBase.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/report/ActionStatisticBase.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2230,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.report;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;\nimport org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics;\nimport org.springframework.util.CollectionUtils;\n\nimport at.a1ta.bite.core.server.dto.ActionRecord;\n\npublic abstract class ActionStatisticBase<T extends ActionRecord> {\n\n  private final Map<String, DescriptiveStatistics> stats;\n\n  protected ActionStatisticBase(Collection<T> data) {\n    stats = new HashMap<String, DescriptiveStatistics>();\n    initStatistics(data);\n  }\n\n  private void initStatistics(Iterable<T> data) {\n    for (T record : data) {\n      addRecordToStatistic(record);\n    }\n  }\n\n  protected void addRecordToStatistic(T record) {\n    findOrCreateStatsForAction(record).addValue(record.getActionCount());\n  }\n\n  private DescriptiveStatistics findOrCreateStatsForAction(T record) {\n    return findOrCreateStatsForAction(createKey(record));\n  }\n\n  private DescriptiveStatistics findOrCreateStatsForAction(String key) {\n    if (!stats.containsKey(key)) {\n      stats.put(key, new SynchronizedDescriptiveStatistics());\n    }\n    return stats.get(key);\n  }\n\n  public DescriptiveStatistics getStatistics(String key) {\n    return findOrCreateStatsForAction(key);\n  }\n\n  public boolean hasValues() {\n    return CollectionUtils.isEmpty(stats);\n  }\n\n  abstract String createKey(T record);\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/DataTheftRapidAlertJob.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/DataTheftRapidAlertJob.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4787,
    "content": "/*\n * Copyright 2009 - 2013 by A1 Telekom Austria AG\n * All Rights Reserved.\n * \n * The Software is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * All information contained herein is, and remains the property of\n * A1 Telekom Austria AG and its suppliers, if any.\n * The intellectual and technical concepts contained herein are proprietary\n * to A1 Telekom Austria AG and its suppliers and may be covered by\n * intertional or national patents, patents in process, and are protected\n * by trade secret or copyright law. Dissemination of this information or\n * reproduction of this material is strictly forbidden unless prior written\n * permission is obtained from A1 Telekom Austria AG.\n */\npackage at.a1ta.cuco.core.service.cron;\n\nimport java.text.MessageFormat;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.joda.time.LocalDate;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Profile;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.ClassUtils;\nimport org.springframework.util.CollectionUtils;\n\nimport at.a1ta.bite.core.server.cron.AbstractCronJob;\nimport at.a1ta.bite.core.server.dto.TimeSpan;\nimport at.a1ta.bite.core.server.dto.UserActionRecord;\nimport at.a1ta.bite.core.server.dto.UserRecordActionType;\nimport at.a1ta.bite.core.server.service.UserTrackingService;\nimport at.a1ta.bite.core.shared.EnvironmentProfiles;\nimport at.a1ta.cuco.core.service.impl.MailService;\nimport at.a1ta.cuco.core.service.report.UserActionStatistics;\nimport at.a1ta.cuco.core.service.report.UserActionStatistics.ActionRecordStatistics;\n\n@Profile(EnvironmentProfiles.UNTRUSTED)\n@Component\npublic class DataTheftRapidAlertJob extends AbstractCronJob {\n\n  private static final Logger logger = LoggerFactory.getLogger(DataTheftRapidAlertJob.class);\n\n  private static final String REPORT_LINE = \"<li>Benutzer {0} hat {1,number,#.##} Kunden aufgerufen. [Durchschnitt: {2,number,#.##} | Erlaubt: {3,number,#.##}]</li>\";\n\n  private UserTrackingService trackingService;\n  private MailService mailService;\n\n  @Value(value = \"${data.theft.observation.period.in.days:14}\")\n  private int observationPeriod = 14;\n\n  @Autowired\n  public DataTheftRapidAlertJob(UserTrackingService trackingService, MailService mailService) {\n    this.trackingService = trackingService;\n    this.mailService = mailService;\n  }\n\n  @Override\n  protected void process() {\n    List<ActionRecordStatistics> potentialThreats = identifyPotentialThreats();\n    reportThreatsToExecutives(potentialThreats);\n  }\n\n  private List<ActionRecordStatistics> identifyPotentialThreats() {\n    List<UserActionRecord> referenceRecords = loadReferenceRecords();\n    UserActionStatistics stats = new UserActionStatistics(referenceRecords);\n    return stats.findSuspicious(loadCompareRecords());\n  }\n\n  void reportThreatsToExecutives(List<ActionRecordStatistics> potentialThreats) {\n    if (CollectionUtils.isEmpty(potentialThreats)) {\n      return;\n    }\n    String mailBody = prepareMessage(potentialThreats);\n    sendMail(mailBody);\n  }\n\n  private String prepareMessage(List<ActionRecordStatistics> potentialThreats) {\n    StringBuilder sb = new StringBuilder();\n    Iterator<ActionRecordStatistics> it = potentialThreats.iterator();\n    sb.append(\"<ul>\");\n    while (it.hasNext()) {\n      ActionRecordStatistics ars = it.next();\n      String line = MessageFormat.format(REPORT_LINE, ars.getActionRecord().getLogin(), ars.getActionCount(), ars.getMean(), ars.getAllowedMax());\n      sb.append(line);\n    }\n    sb.append(\"</ul>\");\n    return sb.toString();\n  }\n\n  private void sendMail(String mailbody) {\n    try {\n      logger.info(\"Attempt sending Threat Report \\r\\n\" + mailbody);\n      mailService.sendThreatReportMail(mailbody);\n    } catch (Exception e) {\n      logger.error(\"Threat Report could not be sent.\", e);\n    }\n  }\n\n  private List<UserActionRecord> loadReferenceRecords() {\n    TimeSpan span = TimeSpan.startingAt(LocalDate.now().minusDays(observationPeriod).toDate()).to(LocalDate.now().minusDays(1).toDate());\n    return findCustomerLoadRecords(span);\n  }\n\n  private List<UserActionRecord> loadCompareRecords() {\n    TimeSpan span = TimeSpan.startingAt(LocalDate.now().toDate()).toInfinite();\n    return findCustomerLoadRecords(span);\n  }\n\n  private List<UserActionRecord> findCustomerLoadRecords(TimeSpan timeSpan) {\n    return this.trackingService.findUserActionsForDateGroupByAction(timeSpan, UserRecordActionType.LOAD_CUSTO);\n  }\n\n  @Override\n  protected String getJobId() {\n    return ClassUtils.getShortNameAsProperty(this.getClass());\n  }\n\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/PhoneNumberCacheJob.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/PhoneNumberCacheJob.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1396,
    "content": "package at.a1ta.cuco.core.service.cron;\n\nimport javax.annotation.PostConstruct;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.cron.AbstractCronJob;\nimport at.a1ta.cuco.core.dao.db.PhoneNumberDao;\n\n@Component\npublic class PhoneNumberCacheJob extends AbstractCronJob {\n  private static final Logger logger = LoggerFactory.getLogger(PhoneNumberCacheJob.class);\n\n  @Autowired\n  private PhoneNumberDao phoneNumberDao;\n\n  @Override\n  protected void process() {\n    flushAndCache();\n  }\n\n  @Override\n  protected String getJobId() {\n    return \"phonenumber.cache\";\n  }\n\n  @PostConstruct\n  private void flushAndCache() {\n    try {\n      final long start = System.currentTimeMillis();\n\n      ((SqlMapClientDaoSupport) phoneNumberDao).getSqlMapClient().flushDataCache();\n\n      phoneNumberDao.getCountryCodes();\n      phoneNumberDao.getOnkzs();\n      phoneNumberDao.getSpecialOnkzs();\n\n      final long duration = System.currentTimeMillis() - start;\n      logger.debug(\"Executed queries for caching phone numbers results in \" + duration + \" msec.\");\n    } catch (Exception e) {\n      logger.error(\"Error during executing queries for caching phone number results\", e);\n    }\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/LDAPSynchronizationJob.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/LDAPSynchronizationJob.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 749,
    "content": "package at.a1ta.cuco.core.service.cron;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Profile;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.cron.AbstractCronJob;\nimport at.a1ta.bite.core.server.service.CorporateDirectorySynchronizationService;\nimport at.a1ta.bite.core.shared.EnvironmentProfiles;\n\n@Profile(EnvironmentProfiles.TRUSTED)\n@Component\npublic class LDAPSynchronizationJob extends AbstractCronJob {\n\n  @Autowired\n  private CorporateDirectorySynchronizationService cdService;\n\n  @Override\n  protected void process() {\n    cdService.udpateAllUsers();\n  }\n\n  @Override\n  protected String getJobId() {\n    return \"ldapSynchronization\";\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/SalesInfoReminderMailJob.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/SalesInfoReminderMailJob.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2471,
    "content": "package at.a1ta.cuco.core.service.cron;\n\nimport java.util.List;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Profile;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.cron.AbstractCronJob;\nimport at.a1ta.bite.core.server.service.SettingService;\nimport at.a1ta.bite.core.shared.EnvironmentProfiles;\nimport at.a1ta.cuco.core.dao.db.SalesInfoDao;\nimport at.a1ta.cuco.core.service.impl.MailService;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.CompetitorNote;\nimport at.a1ta.cuco.core.shared.dto.salesinfo.SalesInfoNote;\n\n@Profile(EnvironmentProfiles.TRUSTED)\n@Component\npublic class SalesInfoReminderMailJob extends AbstractCronJob {\n\n  private static final Logger logger = LoggerFactory.getLogger(\"mailings\");\n\n  @Autowired\n  private SalesInfoDao salesInfoDao;\n\n  @Autowired\n  private MailService ms;\n\n  @Autowired\n  private SettingService settingService;\n\n  @Override\n  protected void process() {\n    sendBindingPeriodReminderMails();\n    sendTaskReminderMails();\n    sendSalesConvNotesForReminderMail();\n  }\n\n  private void sendBindingPeriodReminderMails() {\n    long numDays;\n    String valueOrDefault = settingService.getValueOrDefault(\"binding.period.num.days\", \"90\");\n    try {\n      numDays = Long.parseLong(valueOrDefault);\n    } catch (NumberFormatException n) {\n      numDays = 90L;\n    }\n    List<CompetitorNote> todaysNotes = salesInfoDao.getNotesForBindingPeriodReminderMail(numDays);\n    for (CompetitorNote note : todaysNotes) {\n      try {\n        ms.sendBindingPeriodReminderMail(note);\n      } catch (Exception e) {\n        logger.error(e.getMessage(), e);\n      }\n    }\n\n  }\n\n  private void sendSalesConvNotesForReminderMail() {\n    List<SalesInfoNote> todaysNotes = salesInfoDao.getSalesConvNotesForReminderMail();\n    for (SalesInfoNote note : todaysNotes) {\n      try {\n        ms.sendSalesConvReminderMail(note);\n      } catch (Exception e) {\n        logger.error(e.getMessage(), e);\n      }\n    }\n  }\n\n  private void sendTaskReminderMails() {\n    List<SalesInfoNote> todaysNotes = salesInfoDao.getNotesForReminderMail();\n    for (SalesInfoNote note : todaysNotes) {\n      try {\n        ms.sendTaskReminderMail(note);\n      } catch (Exception e) {\n        logger.error(e.getMessage(), e);\n      }\n    }\n  }\n\n  @Override\n  protected String getJobId() {\n    return \"salesInfoReminderMail\";\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  },
  {
    "file_path": "cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/KumsSkzShopSynchronizationJob.java",
    "absolute_path": "/Users/thomaskamsker/Documents/Atom/vron.one/playground/a1javarag/data/cuco/cuco-core/src/main/java/at/a1ta/cuco/core/service/cron/KumsSkzShopSynchronizationJob.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1272,
    "content": "package at.a1ta.cuco.core.service.cron;\n\nimport java.rmi.RemoteException;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Profile;\nimport org.springframework.stereotype.Component;\n\nimport at.a1ta.bite.core.server.cron.AbstractCronJob;\nimport at.a1ta.bite.core.server.service.KumsCommonService;\nimport at.a1ta.bite.core.shared.EnvironmentProfiles;\n\n@Profile(EnvironmentProfiles.TRUSTED)\n@Component\npublic class KumsSkzShopSynchronizationJob extends AbstractCronJob {\n\n  private static final Logger logger = LoggerFactory.getLogger(KumsSkzShopSynchronizationJob.class);\n\n  private KumsCommonService kumsCommonService;\n\n  @Override\n  protected void process() {\n    try {\n      logger.debug(\"Starting Shop Synchronization...\");\n      kumsCommonService.updateSkzShops();\n      logger.debug(\"Shop Synchronization finished.\");\n    } catch (RemoteException e) {\n      logger.error(\"Shop Synchronization failed: \", e);\n    }\n\n  }\n\n  @Override\n  protected String getJobId() {\n    return \"kumsSkzShopSynchronization\";\n  }\n\n  @Autowired\n  public void setKumsCommonService(KumsCommonService kumsCommonService) {\n    this.kumsCommonService = kumsCommonService;\n  }\n}\n",
    "last_modified": 1745490616.0,
    "analysis_status": "skipped",
    "error": "File not selected for processing in test mode"
  }
]