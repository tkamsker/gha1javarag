[
  {
    "file_path": "pom.xml",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/pom.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 2086,
    "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>onlinebookstore</groupId>\n\t<artifactId>onlinebookstore</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>war</packaging>\n\t<build>\n\t\t<sourceDirectory>src/main/java</sourceDirectory>\n\t\t<finalName>onlinebookstore</finalName>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-dependency-plugin</artifactId>\n\t\t\t\t<version>2.3</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>copy</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<artifactItems>\n\t\t\t\t\t\t\t\t<artifactItem>\n\t\t\t\t\t\t\t\t\t<groupId>com.github.jsimone</groupId>\n\t\t\t\t\t\t\t\t\t<artifactId>webapp-runner</artifactId>\n\t\t\t\t\t\t\t\t\t<version>8.0.30.2</version>\n\t\t\t\t\t\t\t\t\t<destFileName>webapp-runner.jar</destFileName>\n\t\t\t\t\t\t\t\t</artifactItem>\n\t\t\t\t\t\t\t</artifactItems>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<version>3.11.0</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<source>1.8</source>\n\t\t\t\t\t<target>1.8</target>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<artifactId>maven-war-plugin</artifactId>\n\t\t\t\t<version>3.2.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<warSourceDirectory>WebContent</warSourceDirectory>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\t<dependencies>\n\n\t\t<dependency>\n\t\t\t<groupId>org.postgresql</groupId>\n\t\t\t<artifactId>postgresql</artifactId>\n\t\t\t<version>42.3.7</version>\n\t\t</dependency>\n\n\n\t\t<dependency>\n\t\t\t<groupId>mysql</groupId>\n\t\t\t<artifactId>mysql-connector-java</artifactId>\n\t\t\t<version>8.0.28</version>\n\t\t</dependency>\n\n\n\t\t<dependency>\n\t\t\t<groupId>javax.servlet</groupId>\n\t\t\t<artifactId>javax.servlet-api</artifactId>\n\t\t\t<version>3.1.0</version>\n\t\t</dependency>\n\t</dependencies>\n</project>",
    "last_modified": 1750403861.8604,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/index.html",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/index.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 2259,
    "content": "<html>\n<head>\n<meta charset=\"ISO-8859-1\">\n<title>Book Store</title>\n<link rel=\"apple-touch-icon\" sizes=\"180x180\"\n\thref=\"./favicons/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n\thref=\"./favicons/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n\thref=\"./favicons/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"./favicons/site.webmanifest\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\" >\n<link rel=\"stylesheet\" href=\"styles.css\">\n\n</head>\n<body onload=\"funload()\">\n\t<header>\n\t\t<nav class=\"navbar navbar-expand-sm bg-dark\">\n\t\t\t\t<a class=\"navbar-brand\">\n\t\t\t\t\t<!-- The below line can be an image or a h1, either will work -->\n\t\t\t\t\t<img src=\"logo.png\" alt=\"Google logo\" width=\"60\" height=\"30px\">\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t\t<button style=\"background-color:white;\" class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t    <span class=\"navbar-toggler-icon\" ></span>\n\t\t\t\t </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">                \n\t\t\t\t<ul class=\"navbar-nav\" >\n\t\t\t\t\t<li class=\"nav-item\"><span><a class=\"nav-link active\" href=\"index.html\">Home</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\" href=\"CustomerLogin.html\">Login</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\" href=\"CustomerRegister.html\">Register</a></span></li>\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t</header>\n\t<br>\n\t<div id=\"topmid\"><h1>Welcome to Online <br>Book Store</h1></div>\n\t<br>\n\t<table class=\"tab\">\n\t\t<tr>\n\t\t\t<td><a href=\"index.html\" id=\"happy\">Happy Learning!!<br>Welcome to our book store!</a></td>\n\t\t</tr>\n\t</table>\n\n\t<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" ></script>\n\t<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.6/dist/umd/popper.min.js\" ></script>\n\t<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.2.1/dist/js/bootstrap.min.js\"></script>\n\t<script>\n\t\t// Preloder script\n\t\tvar tmp = document.getElementById(\"loding\");\n\t\tfunction funload() {\n\t\t  loding.style.display = \"none\";\n\t\t}\n\t  </script>\n\n\n</body>\n</html>\n",
    "last_modified": 1750403861.859457,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/CustomerHome.html",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/CustomerHome.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 2657,
    "content": "<html>\n<head>\n<meta charset=\"ISO-8859-1\">\n<title>Book Store</title>\n<link rel=\"apple-touch-icon\" sizes=\"180x180\"\n\thref=\"./favicons/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n\thref=\"./favicons/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n\thref=\"./favicons/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"./favicons/site.webmanifest\">\n<link rel=\"stylesheet\"\n\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"styles.css\">\n<!-- JavaScript Bundle with Popper -->\n<link rel=\"stylesheet\"\n\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\n<script\n\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">\n\t\n</script>\n<script\n\tsrc=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\">\n\t\n</script>\n<script>\n\tvar activeTab = 'home';\n</script>\n</head>\n<body>\n\t<header>\n\t\t<nav class=\"navbar navbar-expand-sm bg-dark\"\n\t\t\tstyle=\"margin-bottom: 0px\">\n\t\t\t<a class=\"navbar-brand\"> <!-- The below line can be an image or a h1, either will work -->\n\t\t\t\t<img src=\"logo.png\" alt=\"Google logo\" width=\"60\" height=\"30px\">\n\t\t\t</a>\n\n\t\t\t<button style=\"background-color: white;\" class=\"navbar-toggler\"\n\t\t\t\ttype=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n\t\t\t\taria-controls=\"navbarNav\" aria-expanded=\"false\"\n\t\t\t\taria-label=\"Toggle navigation\">\n\t\t\t\t<span class=\"navbar-toggler-icon\"\n\t\t\t\t\tstyle=\"color: #fff; font-size: 28px;\"></span>\n\t\t\t</button>\n\n\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n\t\t\t\t<ul class=\"navbar-nav\">\n\t\t\t\t\t<li class=\"nav-item\"><span><a\n\t\t\t\t\t\t\tclass=\"nav-link\" href=\"viewbook\" id=\"home\">Home</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"viewbook\" id=\"books\">Available\n\t\t\t\t\t\t\t\tBooks</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a\n\t\t\t\t\t\t\tclass=\"nav-link glyphicon  glyphicon-shopping-cart \" href=\"cart\"\n\t\t\t\t\t\t\tid=\"cart\"> Cart</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"about\" id=\"about\">About Us</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"logout\" id=\"logout\">Logout</a></span></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t</header>\n\n</body>\n<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\n<script\n\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.6/dist/umd/popper.min.js\"></script>\n<script\n\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@4.2.1/dist/js/bootstrap.min.js\"></script>\n<script>\n\tdocument.getElementById(activeTab).classList.add(\"active\");\n</script>\n</html>\n",
    "last_modified": 1750403861.8564992,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/payment.html",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/payment.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 6358,
    "content": "<html>\n<head>\n<meta charset=\"ISO-8859-1\">\n<title>Book Store</title>\n<link rel=\"apple-touch-icon\" sizes=\"180x180\"\n\thref=\"./favicons/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n\thref=\"./favicons/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n\thref=\"./favicons/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"./favicons/site.webmanifest\">\n<link rel=\"stylesheet\"\n\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"styles.css\">\n<!-- JavaScript Bundle with Popper -->\n<link rel=\"stylesheet\"\n\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\n<script\n\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">\n\t\n</script>\n\n<script\n\tsrc=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\">\n\t\n</script>\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n.row {\n\tdisplay: -ms-flexbox; /* IE10 */\n\tdisplay: flex;\n\t-ms-flex-wrap: wrap; /* IE10 */\n\tflex-wrap: wrap;\n\tmargin: 0 -16px;\n}\n\n.col-25 {\n\t-ms-flex: 25%; /* IE10 */\n\tflex: 25%;\n}\n\n.col-50 {\n\t-ms-flex: 50%; /* IE10 */\n\tflex: 50%;\n}\n\n.col-75 {\n\t-ms-flex: 75%; /* IE10 */\n\tflex: 75%;\n}\n\n.col-25, .col-50, .col-75 {\n\tpadding: 0 16px;\n}\n\n.container {\n\tbackground-color: #f2f2f2;\n\tpadding: 5px 20px 15px 20px;\n\tborder: 1px solid lightgrey;\n\tborder-radius: 3px;\n}\n\ninput[type=text] {\n\twidth: 100%;\n\tmargin-bottom: 20px;\n\tpadding: 12px;\n\tborder: 1px solid #ccc;\n\tborder-radius: 3px;\n}\n\nlabel {\n\tmargin-bottom: 10px;\n\tdisplay: block;\n}\n\n.icon-container {\n\tmargin-bottom: 20px;\n\tpadding: 7px 0;\n\tfont-size: 24px;\n}\n\n.btn {\n\tbackground-color: #04AA6D;\n\tcolor: white;\n\tpadding: 12px;\n\tmargin: 10px 0;\n\tborder: none;\n\twidth: 100%;\n\tborder-radius: 3px;\n\tcursor: pointer;\n\tfont-size: 17px;\n}\n\n.btn:hover {\n\tbackground-color: #45a049;\n}\n\nspan.price {\n\tfloat: right;\n\tcolor: grey;\n}\n\n/* Responsive layout - when the screen is less than 800px wide, make the two columns stack on top of each other instead of next to each other (and change the direction - make the \"cart\" column go on top) */\n@media ( max-width : 800px) {\n\t.row {\n\t\tflex-direction: column-reverse;\n\t}\n\t.col-25 {\n\t\tmargin-bottom: 20px;\n\t}\n}\n</style>\n</head>\n<body>\n\t<header>\n\t\t<nav class=\"navbar navbar-expand-sm bg-dark\">\n\t\t\t<a class=\"navbar-brand\"> <!-- The below line can be an image or a h1, either will work -->\n\t\t\t\t<img src=\"logo.png\" alt=\"Google logo\" width=\"60\" height=\"30px\">\n\t\t\t</a>\n\n\t\t\t<button style=\"background-color: white;\" class=\"navbar-toggler\"\n\t\t\t\ttype=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n\t\t\t\taria-controls=\"navbarNav\" aria-expanded=\"false\"\n\t\t\t\taria-label=\"Toggle navigation\">\n\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\n\t\t\t</button>\n\n\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n\t\t\t\t<ul class=\"navbar-nav\">\n\t\t\t\t\t<li class=\"nav-item\"><span><a class=\"nav-link active\"\n\t\t\t\t\t\t\thref=\"viewbook\">Home</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"viewbook\">Available Books</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"about.html\">About Us</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a\n\t\t\t\t\t\t\tclass=\"nav-link glyphicon  glyphicon-shopping-cart \" href=\"cart\">Cart</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"logout\">Logout</a></span></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t</header>\n\t<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\n\t<script\n\t\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.6/dist/umd/popper.min.js\"></script>\n\t<script\n\t\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@4.2.1/dist/js/bootstrap.min.js\"></script>\n\t<div class=\"container\">\n\t <div id='topmid' style='background-color:grey'>Cart Checkout</div>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-75\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<form action=\"pay\" method=\"post\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-50\">\n\t\t\t\t\t\t\t\t<h3>Billing Address</h3>\n\t\t\t\t\t\t\t\t<label for=\"fname\"><i class=\"fa fa-user\"></i> Full Name</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"fname\" name=\"firstname\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"John M. Doe\"> <label for=\"email\"><i\n\t\t\t\t\t\t\t\t\tclass=\"fa fa-envelope\"></i> Email</label> <input type=\"text\" id=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\" placeholder=\"john@example.com\"> <label\n\t\t\t\t\t\t\t\t\tfor=\"adr\"><i class=\"fa fa-address-card-o\"></i> Address</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"adr\" name=\"address\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"542 W. 15th Street\" required> <label\n\t\t\t\t\t\t\t\t\tfor=\"city\"><i class=\"fa fa-institution\"></i> City</label> <input\n\t\t\t\t\t\t\t\t\ttype=\"text\" id=\"city\" name=\"city\" placeholder=\"New York\">\n\n\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-50\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"state\">State</label> <input type=\"text\" id=\"state\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"state\" placeholder=\"NY\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"col-50\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"zip\">Zip</label> <input type=\"text\" id=\"zip\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"zip\" placeholder=\"10001\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"col-50\">\n\t\t\t\t\t\t\t\t<h3>Payment</h3>\n\t\t\t\t\t\t\t\t<label for=\"fname\">Accepted Cards</label>\n\t\t\t\t\t\t\t\t<div class=\"icon-container\">\n\t\t\t\t\t\t\t\t\t<i class=\"fa fa-cc-visa\" style=\"color: navy;\"></i> <i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-cc-amex\" style=\"color: blue;\"></i> <i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-cc-mastercard\" style=\"color: red;\"></i> <i\n\t\t\t\t\t\t\t\t\t\tclass=\"fa fa-cc-discover\" style=\"color: orange;\"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<label for=\"cname\">Name on Card</label> <input type=\"text\"\n\t\t\t\t\t\t\t\t\tid=\"cname\" name=\"cardname\" placeholder=\"John More Doe\">\n\t\t\t\t\t\t\t\t<label for=\"ccnum\">Credit card number</label> <input type=\"text\"\n\t\t\t\t\t\t\t\t\tid=\"ccnum\" name=\"cardnumber\" placeholder=\"1111-2222-3333-4444\"\n\t\t\t\t\t\t\t\t\trequired> <label for=\"expmonth\">Exp Month</label> <input\n\t\t\t\t\t\t\t\t\ttype=\"text\" id=\"expmonth\" name=\"expmonth\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"September\">\n\n\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t<div class=\"col-50\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"expyear\">Exp Year</label> <input type=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"expyear\" name=\"expyear\" placeholder=\"2018\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"col-50\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"cvv\">CVV</label> <input type=\"text\" id=\"cvv\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"cvv\" placeholder=\"352\">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<label> <input type=\"checkbox\" checked=\"checked\"\n\t\t\t\t\t\t\tname=\"sameadr\"> Shipping address same as billing\n\t\t\t\t\t\t</label>\n\t\t\t\t\n</body>\n</html>",
    "last_modified": 1750403861.860019,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/SellerHome.html",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/SellerHome.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 2694,
    "content": "<html>\n<head>\n<meta charset=\"ISO-8859-1\">\n<title>Book Store</title>\n<link rel=\"apple-touch-icon\" sizes=\"180x180\"\n\thref=\"./favicons/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n\thref=\"./favicons/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n\thref=\"./favicons/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"./favicons/site.webmanifest\">\n<link rel=\"stylesheet\"\n\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"styles.css\">\n<!-- JavaScript Bundle with Popper -->\n<link rel=\"stylesheet\"\n\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\n<script\n\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">\n\t\n</script>\n<script\n\tsrc=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\">\n\t\n</script>\n<script>\n\tvar activeTab = 'home';\n</script>\n</head>\n<body>\n\t<header>\n\t\t<nav class=\"navbar navbar-expand-sm bg-dark\"\n\t\t\tstyle=\"margin-bottom: 0px\">\n\t\t\t<a class=\"navbar-brand\"> <!-- The below line can be an image or a h1, either will work -->\n\t\t\t\t<img src=\"logo.png\" alt=\"Google logo\" width=\"60\" height=\"30px\">\n\t\t\t</a>\n\n\t\t\t<button style=\"background-color: white;\" class=\"navbar-toggler\"\n\t\t\t\ttype=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n\t\t\t\taria-controls=\"navbarNav\" aria-expanded=\"false\"\n\t\t\t\taria-label=\"Toggle navigation\">\n\t\t\t\t<span class=\"navbar-toggler-icon\"\n\t\t\t\t\tstyle=\"color: #fff; font-size: 28px;\"></span>\n\t\t\t</button>\n\n\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n\t\t\t\t<ul class=\"navbar-nav\">\n\t\t\t\t\t<li class=\"nav-item\"><span><a\n\t\t\t\t\t\t\tclass=\"nav-link\" href=\"storebooks\" id=\"home\">Home</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"storebooks\" id=\"storebooks\">Store\n\t\t\t\t\t\t\t\tBooks</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"addbook\" id=\"addbook\">Add\n\t\t\t\t\t\t\t\tBooks</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"removebook\" id=\"removebook\">Remove\n\t\t\t\t\t\t\t\tBooks</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"about\" id=\"about\">About Us</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"logout\" id=\"logout\">Logout</a></span></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t</header>\n\n</body>\n<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\n<script\n\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.6/dist/umd/popper.min.js\"></script>\n<script\n\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@4.2.1/dist/js/bootstrap.min.js\"></script>\n<script>\n\tdocument.getElementById(activeTab).classList.add(\"active\");\n</script>\n</html>\n",
    "last_modified": 1750403861.8580513,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/login.html",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/login.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 2508,
    "content": "<html>\n<head>\n<meta charset=\"ISO-8859-1\">\n<title>Book Store</title>\n<link rel=\"apple-touch-icon\" sizes=\"180x180\"\n\thref=\"./favicons/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n\thref=\"./favicons/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n\thref=\"./favicons/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"./favicons/site.webmanifest\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\" >\n<link rel=\"stylesheet\" href=\"styles.css\">\n\n</head>\n<body onload=\"funload()\">\n\t<header>\n\t\t<nav class=\"navbar navbar-expand-sm bg-dark\">\n\t\t\t\t<a class=\"navbar-brand\">\n\t\t\t\t\t<!-- The below line can be an image or a h1, either will work -->\n\t\t\t\t\t<img src=\"logo.png\" alt=\"Google logo\" width=\"60\" height=\"30px\">\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t\t<button style=\"background-color:white;\" class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t    <span class=\"navbar-toggler-icon\"></span>\n\t\t\t\t </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">                \n\t\t\t\t<ul class=\"navbar-nav\" >\n\t\t\t\t\t<li class=\"nav-item\"><span><a class=\"nav-link\" href=\"index.html\">Home</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link active\" href=\"login.html\">Login</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\" href=\"CustomerRegister.html\">Register</a></span></li>\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t</header>\n\t<div id=\"topmid\"><h1>Welcome to Online Book Store</h1></div>\n\t<br>\n\t<table class=\"tab\">\n\t\t<tr style=\"background-color: white; color: green; border-radius: 25%\">\n\t\t\t<td>Login or SignUp Below</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"SellerLogin.html\">Login As Admin</a></td>\n\t\t</tr>\n\t\n\t\t<tr>\n\t\t\t<td><a href=\"CustomerLogin.html\"> Login As<span> Customer</span></a></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><a href=\"CustomerRegister.html\">New user ! Register Here</a></td>\n\t\t</tr>\n\t</table>\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" ></script>\n\t<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.6/dist/umd/popper.min.js\" ></script>\n\t<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.2.1/dist/js/bootstrap.min.js\"></script>\n\t<script>\n\t\t// Preloder script\n\t\tvar tmp = document.getElementById(\"loding\");\n\t\tfunction funload() {\n\t\t  loding.style.display = \"none\";\n\t\t}\n\t  </script>\n\n</body>\n</html>\n",
    "last_modified": 1750403861.8597836,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/CustomerRegister.html",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/CustomerRegister.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 3926,
    "content": "<html>\n<head>\n<meta charset=\"ISO-8859-1\">\n<title>Book Store</title>\n<link rel=\"apple-touch-icon\" sizes=\"180x180\"\n\thref=\"./favicons/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n\thref=\"./favicons/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n\thref=\"./favicons/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"./favicons/site.webmanifest\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\" >\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\ninput {\n\tpadding: 2px 2px;\n\tmargin: 2px 0;\n\tbox-sizing: border-box;\n\tborder-radius:10px;\n}\n\n</style>\n</head>\n<body onload=\"funload()\">\n\t<header>\n\t\t<nav class=\"navbar navbar-expand-sm bg-dark\">\n\t\t\t\t<a class=\"navbar-brand\">\n\t\t\t\t\t<!-- The below line can be an image or a h1, either will work -->\n\t\t\t\t\t<img src=\"logo.png\" alt=\"Google logo\" width=\"60\" height=\"30px\">\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t\t<button style=\"background-color:white;\" class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t    <span class=\"navbar-toggler-icon\"></span>\n\t\t\t\t </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">                \n\t\t\t\t<ul class=\"navbar-nav\" >\n\t\t\t\t\t<li class=\"nav-item\"><span><a class=\"nav-link\" href=\"index.html\">Home</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\" href=\"login.html\">Login</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link active\" href=\"CustomerRegister.html\">Register</a></span></li>\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t</header>\n\t<br/>\n\t\n\t<form action=\"userreg\" method=\"post\">\n\t\t<table class=\"tab\" style=\"width:40%\">\n\n\t\t\t<tr style=\"background-color: white; color: green; border-radius: 25%\">\n\t\t\t\t<td>Enter the Registration Details</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t<!-- <label for=\"username\">Username : </label> \n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\" name=\"username\" id=\"userName\"\n\t\t\t\t\tplaceholder=\"Enter your Username\" required>\n\t\t\t\t<br/> -->\n\t\t\t\t<label for=\"Email\" style=\"margin-right: 5%\"> Email Id : </label> \n\t\t\t\t\t<input type=\"text\" name=\"mailid\" id=\"Email\"\n\t\t\t\t\tplaceholder=\"Enter your Email\">\n\t\t\t\t<br>\n\t\t\t\t<label for=\"passWord\">Password :&nbsp; </label> \n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\" name=\"password\" id=\"passWord\"\n\t\t\t\t\tplaceholder=\"Enter Password\" required>\n\t\t\t\t<br>\n\t\t\t\t<label for=\"firstName\">First Name : </label> \n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\" name=\"firstname\" id=\"firstName\"\n\t\t\t\t\tplaceholder=\"Enter your First Name\" required>\n\t\t\t\t<br>\n\t\t\t\t<label for=\"lastName\">Last Name : </label> \n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\" name=\"lastname\" id=\"lastName\"\n\t\t\t\t\tplaceholder=\"Enter your Last Name\" required>\n\t\t\t\t<br>\n\t\t\t\t<label for=\"address\">Address: </label>\n\t\t\t\t<textarea name=\"address\" id=\"address\"\n\t\t\t\t\t\tplaceholder=\"Enter your Address\" required> </textarea>\n\t\t\t\t<br>\n\t\t\t\t<label for=\"phno\">Mobile No : </label> \n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tname=\"phone\" id=\"phno\" placeholder=\"Enter your Phone Number\"\n\t\t\t\t\trequired>\n\t\t\t\t<br>\n\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\tname=\"acceptance\" /> \n\t\t\t\t<label\n\t\t\t\t\tfor=\"checkbox\" for=\"acceptance\"\n\t\t\t\t\tstyle=\"font-size: small; color: blue\">I\n\t\t\t\t\t\tACCEPT ALL TERMS &amp; CONDITIONS</label>\n\t\t\t\t<br>\n\t\t\t\t<input style=\"text-align:center;\" class=\"btn btn-success\" type=\"submit\" value=\"REGISTER ME \">\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\n\t\t</table>\n\t</form>\n\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" ></script>\n\t<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.6/dist/umd/popper.min.js\" ></script>\n\t<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.2.1/dist/js/bootstrap.min.js\"></script>\n\t<script>\n\t\t// Preloder script\n\t\tvar tmp = document.getElementById(\"loding\");\n\t\tfunction funload() {\n\t\t\tloding.style.display = \"none\";\n\t\t}\n\t</script>\n\n\n\n</body>\n\n</html>",
    "last_modified": 1750403861.8567371,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/SellerLogin.html",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/SellerLogin.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 3172,
    "content": "<html>\n<head>\n<meta charset=\"ISO-8859-1\">\n<title>Book Store</title>\n<link rel=\"apple-touch-icon\" sizes=\"180x180\"\n\thref=\"./favicons/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n\thref=\"./favicons/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n\thref=\"./favicons/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"./favicons/site.webmanifest\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\" >\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n.AdminLogin {\n\theight: 35px;\n\tborder-radius: 50px;\n\tbackground-color: #ccffcc;\n\tcolor: #078707;\n\tfont-weight: bold;\n\tcursor: pointer;\n\ttransition: 0.3s;\n\tborder-color: #078707;\n\tborder-style: solid;\n\tborder-width: 1px;\n}\n\n.AdminLogin:hover {\n\theight: 35px;\n\tborder-radius: 50px;\n\tbackground-color: white;\n\tcolor: #078707;\n\tfont-weight: bold;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: #078707;\n}\n</style>\n</head>\n<body onload=\"funload()\">\n\t<header>\n\t\t<nav class=\"navbar navbar-expand-sm bg-dark\">\n\t\t\t\t<a class=\"navbar-brand\">\n\t\t\t\t\t<!-- The below line can be an image or a h1, either will work -->\n\t\t\t\t\t<img src=\"logo.png\" alt=\"Google logo\" width=\"60\" height=\"30px\">\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t\t<button style=\"background-color:white;\" class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t\t\t    <span class=\"navbar-toggler-icon\"></span>\n\t\t\t\t </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">                \n\t\t\t\t<ul class=\"navbar-nav\" >\n\t\t\t\t\t<li class=\"nav-item\"><span><a class=\"nav-link\" href=\"index.html\">Home</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link active\" href=\"login.html\">Login</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\" href=\"CustomerRegister.html\">Register</a></span></li>\n\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t</header>\n\n\t<div id=\"topmid\">\n\t\t<h1>Welcome to Online Book Store</h1>\n\t</div>\n\n\t<form action=\"adminlog\" method=\"post\">\n\t\t<table class=\"tab\" style=\"width:40%\">\n\t\t\t<tr style=\"color:brown; padding-left:35%\">\n\t\t\t\t<td>Admin LOGIN</td>\n\t\t\t</tr>\n\t\t\t<tr><td><a href=\"CustomerLogin.html\" style=\"color:blue; font-size:medium; \">Not an Admin?, Click Here to Login as Customer</a></td></tr>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<label for=\"userName\">Username : </label> \n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\tname=\"username\" id=\"userName\" placeholder=\"Enter your Username\"><br />\n\t\t\t\t\t<br /> \n\t\t\t\t\n\t\t\t\t\t<label for=\"Password\">Password : </label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\" name=\"password\" placeholder=\"Enter Password\"\n\t\t\t\t\t\tid=\"Password\"><br /> <br /> \n\t\t\t\t\t<input class=\"AdminLogin\"\n\t\t\t\t\t\ttype=\"submit\" value=\" Login as an Admin  \">\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t</form>\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" ></script>\n\t<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.6/dist/umd/popper.min.js\" ></script>\n\t<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.2.1/dist/js/bootstrap.min.js\"></script>\n</body>\n\n</html>",
    "last_modified": 1750403861.8581514,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/CustomerLogin.html",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/CustomerLogin.html",
    "file_type": "HTML file",
    "extension": ".html",
    "size_bytes": 5781,
    "content": "<html>\n<head>\n<meta charset=\"ISO-8859-1\">\n<title>Book Store</title>\n<link rel=\"apple-touch-icon\" sizes=\"180x180\"\n\thref=\"./favicons/apple-touch-icon.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\n\thref=\"./favicons/favicon-32x32.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\"\n\thref=\"./favicons/favicon-16x16.png\">\n<link rel=\"manifest\" href=\"./favicons/site.webmanifest\">\n<link rel=\"stylesheet\"\n\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css\">\n<link rel=\"stylesheet\" href=\"styles.css\">\n<style>\n/* COMPACT CAPTCHA YELLOW */\n.capbox {\n\tbackground: #ccc2a7;\n\tbackground: linear-gradient(to right, #ccc2a7, #8f8874);\n\tborder: #5c574b 0px solid;\n\tborder-width: 2px 2px 2px 20px;\n\tbox-sizing: border-box;\n\t-moz-box-sizing: border-box;\n\t-webkit-box-sizing: border-box;\n\tdisplay: inline-block;\n\tpadding: 5px 8px 5px 8px;\n\tborder-radius: 4px 4px 4px 4px;\n}\n\n.capbox-inner {\n\tfont: bold 12px arial, sans-serif;\n\tcolor: #000000;\n\tbackground: rgba(255, 255, 255, 0.30);\n\t/* SEMI TRANSPARENT BACKGROUND */\n\tmargin: 0px auto 0px auto;\n\tpadding: 3px 8px 5px 10px;\n\tborder-radius: 4px;\n\tdisplay: inline-block;\n\tvertical-align: middle;\n}\n\n#CaptchaDiv {\n\tcolor: #000000;\n\tfont: normal 25px Impact, Charcoal, arial, sans-serif;\n\tfont-style: italic;\n\ttext-align: center;\n\tvertical-align: middle;\n\tbackground-color: #FFFFFF;\n\tuser-select: none;\n\tdisplay: inline-block;\n\tpadding: 3px 14px 3px 8px;\n\tmargin-right: 4px;\n\tborder-radius: 4px;\n}\n\n#CaptchaInput {\n\tborder: black 2px solid;\n\tmargin: 3px 0px 1px 0px;\n\twidth: 105px;\n}\n\ninput {\n\tpadding: 2px 2px;\n\tmargin: 2px 0;\n\tbox-sizing: border-box;\n\tborder-radius: 10px;\n}\n</style>\n</head>\n<body onload=\"funload()\">\n\t<header>\n\t\t<nav class=\"navbar navbar-expand-sm bg-dark\">\n\t\t\t<a class=\"navbar-brand\"> <!-- The below line can be an image or a h1, either will work -->\n\t\t\t\t<img src=\"logo.png\" alt=\"Google logo\" width=\"60\" height=\"30px\">\n\t\t\t</a>\n\n\t\t\t<button style=\"background-color: white;\" class=\"navbar-toggler\"\n\t\t\t\ttype=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n\t\t\t\taria-controls=\"navbarNav\" aria-expanded=\"false\"\n\t\t\t\taria-label=\"Toggle navigation\">\n\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\n\t\t\t</button>\n\n\t\t\t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n\t\t\t\t<ul class=\"navbar-nav\">\n\t\t\t\t\t<li class=\"nav-item\"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"index.html\">Home</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link active\"\n\t\t\t\t\t\t\thref=\"login.html\">Login</a></span></li>\n\t\t\t\t\t<li class=\"nav-item \"><span><a class=\"nav-link\"\n\t\t\t\t\t\t\thref=\"CustomerRegister.html\">Register</a></span></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t</header>\n\n\t<div id=\"topmid\">\n\t\t<h1>Welcome to Online Book Store</h1>\n\t</div>\n\n\t<form action=\"userlog\" method=\"post\" onsubmit=\"checkform()\"\n\t\tid=\"theform\">\n\t\t<table class=\"tab\" style=\"width: 40%\">\n\t\t\t<tr style=\"color: brown; padding-left: 35%\">\n\t\t\t\t<td>Customer LOGIN</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><a href=\"SellerLogin.html\"\n\t\t\t\t\tstyle=\"color: blue; font-size: medium;\">Are you Seller?, Click\n\t\t\t\t\t\tHere to Login as Admin</a></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td><label for=\"userName\">Username : </label> <input\n\t\t\t\t\ttype=\"text\" name=\"username\" id=\"userName\"\n\t\t\t\t\tplaceholder=\"Enter your Username\"><br /> <br /> <label\n\t\t\t\t\tfor=\"Password\">Password : </label> <input type=\"password\"\n\t\t\t\t\tname=\"password\" placeholder=\"Enter Password\" id=\"Password\"><br />\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<div class=\"capbox\">\n\t\t\t\t\t\t<div id=\"CaptchaDiv\">46749</div>\n\t\t\t\t\t\t<div class=\"capbox-inner\">\n\t\t\t\t\t\t\t<input type=\"hidden\" id=\"txtCaptcha\" value=\"46749\"> <input\n\t\t\t\t\t\t\t\ttype=\"text\" name=\"CaptchaInput\" id=\"CaptchaInput\" size=\"15\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Captcha\"><br>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div> <br />\n\t\t\t\t<br /> <input class=\"btn btn-success\" type=\"submit\"\n\t\t\t\t\tvalue=\" Login as an User  \"></td>\n\t\t\t</tr>\n\t\t</table>\n\t</form>\n\n\n\t<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"></script>\n\t<script\n\t\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.14.6/dist/umd/popper.min.js\"></script>\n\t<script\n\t\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@4.2.1/dist/js/bootstrap.min.js\"></script>\n\t<script type=\"text/javascript\">\n\n\n\t\t// Preloder script\n\t\tvar tmp = document.getElementById(\"loding\");\n\t\tfunction funload() {\n\t\t  loding.style.display = \"none\";\n\t\t}\n\t  \n  \n\n\t\t// Captcha Script\n\n\t\tfunction checkform() {\n\t\t\tvar theform = document.getElementById(\"theform\");\n\t\t\tvar why = \"\";\n\n\t\t\tif (theform.CaptchaInput.value == \"\") {\n\t\t\t\twhy += \"- Please Enter CAPTCHA Code.\\n\";\n\t\t\t}\n\t\t\tif (theform.CaptchaInput.value != \"\") {\n\t\t\t\tif (ValidCaptcha(theform.CaptchaInput.value) == false) {\n\t\t\t\t\twhy += \"- The CAPTCHA Code Does Not Match.\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (why != \"\") {\n\t\t\t\talert(why);\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tvar a = Math.ceil(Math.random() * 9) + '';\n\t\tvar b = Math.ceil(Math.random() * 9) + '';\n\t\tvar c = Math.ceil(Math.random() * 9) + '';\n\t\tvar d = Math.ceil(Math.random() * 9) + '';\n\t\tvar e = Math.ceil(Math.random() * 9) + '';\n\n\t\tvar code = a + b + c + d + e;\n\t\tdocument.getElementById(\"txtCaptcha\").value = code;\n\t\tdocument.getElementById(\"CaptchaDiv\").innerHTML = code;\n\n\t\t// Validate input against the generated number\n\t\tfunction ValidCaptcha() {\n\t\t\tvar str1 = removeSpaces(document.getElementById('txtCaptcha').value);\n\t\t\tvar str2 = removeSpaces(document.getElementById('CaptchaInput').value);\n\t\t\tif (str1 == str2) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Remove the spaces from the entered and generated code\n\t\tfunction removeSpaces(string) {\n\t\t\treturn string.split(' ').join('');\n\t\t}\n\t</script>\n</body>\n</html>\n",
    "last_modified": 1750403861.8566513,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "WebContent/WEB-INF/web.xml",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/WebContent/WEB-INF/web.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 5211,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns:web=\"http://xmlns.jcp.org/xml/ns/javaee\"\n\txsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n\t<servlet>\n\t\t<servlet-name>SellerLoginServlet</servlet-name>\n\t\t<servlet-class>servlets.SellerLoginServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>SellerLoginServlet</servlet-name>\n\t\t<url-pattern>/adminlog</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>StoreBookServlet</servlet-name>\n\t\t<servlet-class>servlets.StoreBookServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>StoreBookServlet</servlet-name>\n\t\t<url-pattern>/storebooks</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>UpdateBookServlet</servlet-name>\n\t\t<servlet-class>servlets.UpdateBookServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>UpdateBookServlet</servlet-name>\n\t\t<url-pattern>/updatebook</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>CustomerLoginServlet</servlet-name>\n\t\t<servlet-class>servlets.CustomerLoginServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>CustomerLoginServlet</servlet-name>\n\t\t<url-pattern>/userlog</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>AboutServlet</servlet-name>\n\t\t<servlet-class>servlets.AboutServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>AboutServlet</servlet-name>\n\t\t<url-pattern>/about</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>LogoutServlet</servlet-name>\n\t\t<servlet-class>servlets.LogoutServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>LogoutServlet</servlet-name>\n\t\t<url-pattern>/logout</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>CustomerRegisterServlet</servlet-name>\n\t\t<servlet-class>servlets.CustomerRegisterServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>CustomerRegisterServlet</servlet-name>\n\t\t<url-pattern>/userreg</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>RemoveBookServlet</servlet-name>\n\t\t<servlet-class>servlets.RemoveBookServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>RemoveBookServlet</servlet-name>\n\t\t<url-pattern>/removebook</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>AddBookServlet</servlet-name>\n\t\t<servlet-class>servlets.AddBookServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>AddBookServlet</servlet-name>\n\t\t<url-pattern>/addbook</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>ViewBookServlet</servlet-name>\n\t\t<servlet-class>servlets.ViewBookServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>ViewBookServlet</servlet-name>\n\t\t<url-pattern>/viewbook</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>CartServlet</servlet-name>\n\t\t<servlet-class>servlets.CartServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>CartServlet</servlet-name>\n\t\t<url-pattern>/cart</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>BuyBooksServlet</servlet-name>\n\t\t<servlet-class>servlets.BuyBooksServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>BuyBooksServlet</servlet-name>\n\t\t<url-pattern>/buybook</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>ReceiptServlet</servlet-name>\n\t\t<servlet-class>servlets.ReceiptServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>ReceiptServlet</servlet-name>\n\t\t<url-pattern>/buys</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>CheckoutServlet</servlet-name>\n\t\t<servlet-class>servlets.CheckoutServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>CheckoutServlet</servlet-name>\n\t\t<url-pattern>/checkout</url-pattern>\n\t</servlet-mapping>\n\t<servlet>\n\t\t<servlet-name>ProcessPaymentServlet</servlet-name>\n\t\t<servlet-class>servlets.ProcessPaymentServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>ProcessPaymentServlet</servlet-name>\n\t\t<url-pattern>/pay</url-pattern>\n\t</servlet-mapping>\n\n\t<!-- Error Handlers -->\n\t<servlet>\n\t\t<servlet-name>ErrorHandlerServlet</servlet-name>\n\t\t<servlet-class>servlets.ErrorHandlerServlet</servlet-class>\n\t</servlet>\n\t<servlet-mapping>\n\t\t<servlet-name>ErrorHandlerServlet</servlet-name>\n\t\t<url-pattern>/error</url-pattern>\n\t</servlet-mapping>\n\t<!-- error-code related error pages -->\n\t<error-page>\n\t\t<error-code>404</error-code>\n\t\t<location>/error</location>\n\t</error-page>\n\t<error-page>\n\t\t<error-code>405</error-code>\n\t\t<location>/error</location>\n\t</error-page>\n\t\n\t<!-- exception-type related error pages -->\n\t<error-page>\n\t\t<exception-type>\n\t\t\tjavax.servlet.ServletException\n\t\t</exception-type>\n\t\t<location>/error</location>\n\t</error-page>\n\t<!-- exception-type related all errors -->\n\t<error-page>\n\t\t<exception-type>java.lang.Throwable</exception-type>\n\t\t<location>/error</location>\n\t</error-page>\n\n\t<!-- welcome file -->\n\t<welcome-file-list>\n\t\t<welcome-file>index.html</welcome-file>\n\t</welcome-file-list>\n</web-app>",
    "last_modified": 1750403861.8583405,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "setup/CreateDatastore.sql",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/setup/CreateDatastore.sql",
    "file_type": "SQL script",
    "extension": ".sql",
    "size_bytes": 600,
    "content": "CREATE DATABASE if not exists onlinebookstore;\n\n\\c onlinebookstore\n\nCREATE TABLE if not exists books \n  ( \n     barcode   VARCHAR(100) PRIMARY KEY, \n     name      TEXT NOT NULL, \n     author    VARCHAR(100) NOT NULL, \n     price     INT, \n     quantity  REAL\n  ); \n  \n  CREATE TABLE if not exists users\n  ( \n     username  VARCHAR(100) PRIMARY KEY, \n     password  VARCHAR(100) NOT NULL, \n     firstname VARCHAR(100) NOT NULL, \n     lastname  VARCHAR(100) NOT NULL, \n     address   TEXT NOT NULL, \n     phone     VARCHAR(100) NOT NULL, \n     mailid    VARCHAR(100) NOT NULL,\n     usertype  INT\n  ); ",
    "last_modified": 1750403861.860707,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": ".settings/org.eclipse.wst.common.project.facet.core.xml",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/.settings/org.eclipse.wst.common.project.facet.core.xml",
    "file_type": "XML configuration",
    "extension": ".xml",
    "size_bytes": 245,
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<faceted-project>\n  <fixed facet=\"wst.jsdt.web\"/>\n  <installed facet=\"jst.web\" version=\"3.1\"/>\n  <installed facet=\"wst.jsdt.web\" version=\"1.0\"/>\n  <installed facet=\"java\" version=\"1.8\"/>\n</faceted-project>\n",
    "last_modified": 1750403861.855369,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/ProcessPaymentServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/ProcessPaymentServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5060,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.List;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.model.Book;\nimport com.bittercode.model.Cart;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class ProcessPaymentServlet extends HttpServlet {\n\n    BookService bookService = new BookServiceImpl();\n\n    @SuppressWarnings(\"unchecked\")\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n        if (!StoreUtil.isLoggedIn(UserRole.CUSTOMER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n        try {\n\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerHome.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"cart\");\n            pw.println(\"<div id='topmid' style='background-color:grey'>Your Orders</div>\");\n            pw.println(\"<div class=\\\"container\\\">\\r\\n\"\n                    + \"        <div class=\\\"card-columns\\\">\");\n            HttpSession session = req.getSession();\n            List<Cart> cartItems = null;\n            if (session.getAttribute(\"cartItems\") != null)\n                cartItems = (List<Cart>) session.getAttribute(\"cartItems\");\n            for (Cart cart : cartItems) {\n                Book book = cart.getBook();\n                double bPrice = book.getPrice();\n                String bCode = book.getBarcode();\n                String bName = book.getName();\n                String bAuthor = book.getAuthor();\n                int availableQty = book.getQuantity();\n                int qtToBuy = cart.getQuantity();\n                availableQty = availableQty - qtToBuy;\n                bookService.updateBookQtyById(bCode, availableQty);\n                pw.println(this.addBookToCard(bCode, bName, bAuthor, bPrice, availableQty));\n                session.removeAttribute(\"qty_\" + bCode);\n            }\n            session.removeAttribute(\"amountToPay\");\n            session.removeAttribute(\"cartItems\");\n            session.removeAttribute(\"items\");\n            session.removeAttribute(\"selectedBookId\");\n            pw.println(\"</div>\\r\\n\"\n                    + \"    </div>\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String addBookToCard(String bCode, String bName, String bAuthor, double bPrice, int bQty) {\n        String button = \"<a href=\\\"#\\\" class=\\\"btn btn-info\\\">Order Placed</a>\\r\\n\";\n        return \"<div class=\\\"card\\\">\\r\\n\"\n                + \"                <div class=\\\"row card-body\\\">\\r\\n\"\n                + \"                    <img class=\\\"col-sm-6\\\" src=\\\"logo.png\\\" alt=\\\"Card image cap\\\">\\r\\n\"\n                + \"                    <div class=\\\"col-sm-6\\\">\\r\\n\"\n                + \"                        <h5 class=\\\"card-title text-success\\\">\" + bName + \"</h5>\\r\\n\"\n                + \"                        <p class=\\\"card-text\\\">\\r\\n\"\n                + \"                        Author: <span class=\\\"text-primary\\\" style=\\\"font-weight:bold;\\\"> \" + bAuthor\n                + \"</span><br>\\r\\n\"\n                + \"                        </p>\\r\\n\"\n                + \"                        \\r\\n\"\n                + \"                    </div>\\r\\n\"\n                + \"                </div>\\r\\n\"\n                + \"                <div class=\\\"row card-body\\\">\\r\\n\"\n                + \"                    <div class=\\\"col-sm-6\\\">\\r\\n\"\n                + \"                        <p class=\\\"card-text\\\">\\r\\n\"\n                + \"                        <span style='color:blue;'>Order Id: ORD\" + bCode + \"TM </span>\\r\\n\"\n                + \"                        <br><span class=\\\"text-danger\\\">Item Yet to be Delivered</span>\\r\\n\"\n                + \"                        </p>\\r\\n\"\n                + \"                    </div>\\r\\n\"\n                + \"                    <div class=\\\"col-sm-6\\\">\\r\\n\"\n                + \"                        <p class=\\\"card-text\\\">\\r\\n\"\n                + \"                        Amout Paid: <span style=\\\"font-weight:bold; color:green\\\"> &#8377; \" + bPrice\n                + \" </span>\\r\\n\"\n                + \"                        </p>\\r\\n\"\n                + button\n                + \"                    </div>\\r\\n\"\n                + \"                </div>\\r\\n\"\n                + \"            </div>\";\n    }\n}\n",
    "last_modified": 1750403861.8639,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/CartServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/CartServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 5962,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.model.Book;\nimport com.bittercode.model.Cart;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class CartServlet extends HttpServlet {\n\n    BookService bookService = new BookServiceImpl();\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n\n        // Check if Customer is logged In\n        if (!StoreUtil.isLoggedIn(UserRole.CUSTOMER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n        try {\n            // Add/Remove Item from the cart if requested\n            // store the comma separated bookIds of cart in the session\n            StoreUtil.updateCartItems(req);\n\n            HttpSession session = req.getSession();\n            String bookIds = \"\";\n            if (session.getAttribute(\"items\") != null)\n                bookIds = (String) session.getAttribute(\"items\");// read comma separated bookIds from session\n\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerHome.html\");\n            rd.include(req, res);\n\n            // Set the active tab as cart\n            StoreUtil.setActiveTab(pw, \"cart\");\n\n            // Read the books from the database with the respective bookIds\n            List<Book> books = bookService.getBooksByCommaSeperatedBookIds(bookIds);\n            List<Cart> cartItems = new ArrayList<Cart>();\n            pw.println(\"<div id='topmid' style='background-color:grey'>Shopping Cart</div>\");\n            pw.println(\"<table class=\\\"table table-hover\\\" style='background-color:white'>\\r\\n\"\n                    + \"  <thead>\\r\\n\"\n                    + \"    <tr style='background-color:black; color:white;'>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">BookId</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Name</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Author</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Price/Item</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Quantity</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Amount</th>\\r\\n\"\n                    + \"    </tr>\\r\\n\"\n                    + \"  </thead>\\r\\n\"\n                    + \"  <tbody>\\r\\n\");\n            double amountToPay = 0;\n            if (books == null || books.size() == 0) {\n                pw.println(\"    <tr style='background-color:green'>\\r\\n\"\n                        + \"      <th scope=\\\"row\\\" colspan='6' style='color:yellow; text-align:center;'> No Items In the Cart </th>\\r\\n\"\n                        + \"    </tr>\\r\\n\");\n            }\n            for (Book book : books) {\n                int qty = (int) session.getAttribute(\"qty_\" + book.getBarcode());\n                Cart cart = new Cart(book, qty);\n                cartItems.add(cart);\n                amountToPay += (qty * book.getPrice());\n                pw.println(getRowData(cart));\n            }\n\n            // set cartItems and amountToPay in the session\n            session.setAttribute(\"cartItems\", cartItems);\n            session.setAttribute(\"amountToPay\", amountToPay);\n\n            if (amountToPay > 0) {\n                pw.println(\"    <tr style='background-color:green'>\\r\\n\"\n                        + \"      <th scope=\\\"row\\\" colspan='5' style='color:yellow; text-align:center;'> Total Amount To Pay </th>\\r\\n\"\n                        + \"      <td colspan='1' style='color:white; font-weight:bold'><span>&#8377;</span> \"\n                        + amountToPay\n                        + \"</td>\\r\\n\"\n                        + \"    </tr>\\r\\n\");\n            }\n            pw.println(\"  </tbody>\\r\\n\"\n                    + \"</table>\");\n            if (amountToPay > 0) {\n                pw.println(\"<div style='text-align:right; margin-right:20px;'>\\r\\n\"\n                        + \"<form action=\\\"checkout\\\" method=\\\"post\\\">\"\n                        + \"<input type='submit' class=\\\"btn btn-primary\\\" name='pay' value='Proceed to Pay &#8377; \"\n                        + amountToPay + \"'/></form>\"\n                        + \"    </div>\");\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String getRowData(Cart cart) {\n        Book book = cart.getBook();\n        return \"    <tr>\\r\\n\"\n                + \"      <th scope=\\\"row\\\">\" + book.getBarcode() + \"</th>\\r\\n\"\n                + \"      <td>\" + book.getName() + \"</td>\\r\\n\"\n                + \"      <td>\" + book.getAuthor() + \"</td>\\r\\n\"\n                + \"      <td><span>&#8377;</span> \" + book.getPrice() + \"</td>\\r\\n\"\n                + \"      <td><form method='post' action='cart'><button type='submit' name='removeFromCart' class=\\\"glyphicon glyphicon-minus btn btn-danger\\\"></button> \"\n                + \"<input type='hidden' name='selectedBookId' value='\" + book.getBarcode() + \"'/>\"\n                + cart.getQuantity()\n                + \" <button type='submit' name='addToCart' class=\\\"glyphicon glyphicon-plus btn btn-success\\\"></button></form></td>\\r\\n\"\n                + \"      <td><span>&#8377;</span> \" + (book.getPrice() * cart.getQuantity()) + \"</td>\\r\\n\"\n                + \"    </tr>\\r\\n\";\n    }\n\n}\n",
    "last_modified": 1750403861.8633628,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/ReceiptServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/ReceiptServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4057,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.List;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.model.Book;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class ReceiptServlet extends HttpServlet {\n    BookService bookService = new BookServiceImpl();\n\n    //NOT_IN_USED\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n        if (!StoreUtil.isLoggedIn(UserRole.CUSTOMER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n        try {\n            List<Book> books = bookService.getAllBooks();\n            int i = 0;\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerHome.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"cart\");\n            pw.println(\"<div class=\\\"tab\\\">Your order status is as below</div>\");\n            pw.println(\n                    \"<div class=\\\"tab\\\">\\r\\n\" + \"\t\t<table>\\r\\n\" + \"\t\t\t<tr>\\r\\n\" + \"\t\t\t\t\\r\\n\"\n                            + \"\t\t\t\t<th>Book Code</th>\\r\\n\" + \"\t\t\t\t<th>Book Name</th>\\r\\n\"\n                            + \"\t\t\t\t<th>Book Author</th>\\r\\n\" + \"\t\t\t\t<th>Book Price</th>\\r\\n\"\n                            + \"\t\t\t\t<th>Quantity</th><br/>\\r\\n\" + \"\t\t\t\t<th>Amount</th><br/>\\r\\n\"\n                            + \"\t\t\t</tr>\");\n            double total = 0.0;\n            for (Book book : books) {\n                double bPrice = book.getPrice();\n                String bCode = book.getBarcode();\n                String bName = book.getName();\n                String bAuthor = book.getAuthor();\n                int bQty = book.getQuantity();\n                i = i + 1;\n\n                String qt = \"qty\" + Integer.toString(i);\n                int quantity = Integer.parseInt(req.getParameter(qt));\n                try {\n                    String check1 = \"checked\" + Integer.toString(i);\n                    String getChecked = req.getParameter(check1);\n                    if (bQty < quantity) {\n                        pw.println(\n                                \"</table><div class=\\\"tab\\\" style='color:red;'>Please Select the Qty less than Available Books Quantity</div>\");\n                        break;\n                    }\n\n                    if (getChecked.equals(\"pay\")) {\n                        pw.println(\"<tr><td>\" + bCode + \"</td>\");\n                        pw.println(\"<td>\" + bName + \"</td>\");\n                        pw.println(\"<td>\" + bAuthor + \"</td>\");\n                        pw.println(\"<td>\" + bPrice + \"</td>\");\n                        pw.println(\"<td>\" + quantity + \"</td>\");\n                        double amount = bPrice * quantity;\n                        total = total + amount;\n                        pw.println(\"<td>\" + amount + \"</td></tr>\");\n                        bQty = bQty - quantity;\n                        System.out.println(bQty);\n                        bookService.updateBookQtyById(bCode, bQty);\n                    }\n                } catch (Exception e) {\n                }\n            }\n            pw.println(\"</table><br/><div class='tab'>Total Paid Amount: \" + total + \"</div>\");\n//            String fPay = req.getParameter(\"f_pay\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n",
    "last_modified": 1750403861.8639803,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/BuyBooksServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/BuyBooksServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3831,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.List;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.model.Book;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class BuyBooksServlet extends HttpServlet {\n    BookService bookService = new BookServiceImpl();\n\n    public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n        if (!StoreUtil.isLoggedIn(UserRole.CUSTOMER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n        try {\n            List<Book> books = bookService.getAllBooks();\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerHome.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"cart\");\n            pw.println(\"<div class=\\\"tab hd brown \\\">Books Available In Our Store</div>\");\n            pw.println(\"<div class=\\\"tab\\\"><form action=\\\"buys\\\" method=\\\"post\\\">\");\n            pw.println(\"<table>\\r\\n\" +\n                    \"\t\t\t<tr>\\r\\n\" +\n                    \"\t\t\t\t<th>Books</th>\\r\\n\" +\n                    \"\t\t\t\t<th>Code</th>\\r\\n\" +\n                    \"\t\t\t\t<th>Name</th>\\r\\n\" +\n                    \"\t\t\t\t<th>Author</th>\\r\\n\" +\n                    \"\t\t\t\t<th>Price</th>\\r\\n\" +\n                    \"\t\t\t\t<th>Avail</th>\\r\\n\" +\n                    \"\t\t\t\t<th>Qty</th>\\r\\n\" +\n                    \"\t\t\t</tr>\");\n            int i = 0;\n            for (Book book : books) {\n                String bCode = book.getBarcode();\n                String bName = book.getName();\n                String bAuthor = book.getAuthor();\n                double bPrice = book.getPrice();\n                int bAvl = book.getQuantity();\n                i = i + 1;\n                String n = \"checked\" + Integer.toString(i);\n                String q = \"qty\" + Integer.toString(i);\n                pw.println(\"<tr>\\r\\n\" +\n                        \"\t\t\t\t<td>\\r\\n\" +\n                        \"\t\t\t\t\t<input type=\\\"checkbox\\\" name=\" + n + \" value=\\\"pay\\\">\\r\\n\" + // Value is\n                                                                                                          // made equal\n                                                                                                          // to bcode\n                        \"\t\t\t\t</td>\");\n                pw.println(\"<td>\" + bCode + \"</td>\");\n                pw.println(\"<td>\" + bName + \"</td>\");\n                pw.println(\"<td>\" + bAuthor + \"</td>\");\n                pw.println(\"<td>\" + bPrice + \"</td>\");\n                pw.println(\"<td>\" + bAvl + \"</td>\");\n                pw.println(\"<td><input type=\\\"text\\\" name=\" + q + \" value=\\\"0\\\" text-align=\\\"center\\\"></td></tr>\");\n\n            }\n            pw.println(\"</table>\\r\\n\" + \"<input type=\\\"submit\\\" value=\\\" PAY NOW \\\">\" + \"<br/>\" +\n                    \"\t</form>\\r\\n\" +\n                    \"\t</div>\");\n            // pw.println(\"<div class=\\\"tab\\\"><a href=\\\"AddBook.html\\\">Add More\n            // Books</a></div>\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n",
    "last_modified": 1750403861.863184,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/AboutServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/AboutServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2026,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.model.UserRole;\nimport com.bittercode.util.StoreUtil;\n//Http Servlet extended class for showing the about information\npublic class AboutServlet extends HttpServlet {\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(\"text/html\");\n        //If the store is logged in as customer or seller show about info\n        if (StoreUtil.isLoggedIn(UserRole.CUSTOMER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerHome.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"about\");\n            pw.println(\"<iframe src=\\\"https://flowcv.me/shashirajraja\\\" class=\\\"holds-the-iframe\\\"\\r\\n\"\n                    + \"        title=\\\"My Personal Website\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe>\");\n\n        } else if (StoreUtil.isLoggedIn(UserRole.SELLER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"SellerHome.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"about\");\n            pw.println(\"<iframe src=\\\"https://flowcv.me/shashirajraja\\\" class=\\\"holds-the-iframe\\\"\\r\\n\"\n                    + \"        title=\\\"My Personal Website\\\" width=\\\"100%\\\" height=\\\"100%\\\"></iframe>\");\n\n        } else {\n            //If the user is not logged in, ask to login first\n            //Proceed only if logged in or forword to login page\n            RequestDispatcher rd = req.getRequestDispatcher(\"login.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n        }\n\n    }\n\n}\n",
    "last_modified": 1750403861.8629253,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/LogoutServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/LogoutServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1241,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.service.UserService;\nimport com.bittercode.service.impl.UserServiceImpl;\n\npublic class LogoutServlet extends HttpServlet {\n\n    UserService authService = new UserServiceImpl();\n\n    public void doGet(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n        try {\n\n            boolean logout = authService.logout(req.getSession());\n\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n            rd.include(req, res);\n//            StoreUtil.setActiveTab(pw, \"logout\");\n            if (logout) {\n                pw.println(\"<table class=\\\"tab\\\"><tr><td>Successfully logged out!</td></tr></table>\");\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}",
    "last_modified": 1750403861.8637526,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/AddBookServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/AddBookServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4689,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.UUID;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.constant.db.BooksDBConstants;\nimport com.bittercode.model.Book;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class AddBookServlet extends HttpServlet {\n    BookService bookService = new BookServiceImpl();\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n\n        if (!StoreUtil.isLoggedIn(UserRole.SELLER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"SellerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n\n        String bName = req.getParameter(BooksDBConstants.COLUMN_NAME);\n        RequestDispatcher rd = req.getRequestDispatcher(\"SellerHome.html\");\n        rd.include(req, res);\n        StoreUtil.setActiveTab(pw, \"addbook\");\n        pw.println(\"<div class='container my-2'>\");\n        if(bName == null || bName.isBlank()) {\n            //render the add book form;\n            showAddBookForm(pw);\n            return;\n        } //else process the add book\n        \n \n        try {\n            String uniqueID = UUID.randomUUID().toString();\n            String bCode = uniqueID;\n            String bAuthor = req.getParameter(BooksDBConstants.COLUMN_AUTHOR);\n            double bPrice = Integer.parseInt(req.getParameter(BooksDBConstants.COLUMN_PRICE));\n            int bQty = Integer.parseInt(req.getParameter(BooksDBConstants.COLUMN_QUANTITY));\n\n            Book book = new Book(bCode, bName, bAuthor, bPrice, bQty);\n            String message = bookService.addBook(book);\n            if (\"SUCCESS\".equalsIgnoreCase(message)) {\n                pw.println(\n                        \"<table class=\\\"tab\\\"><tr><td>Book Detail Updated Successfully!<br/>Add More Books</td></tr></table>\");\n            } else {\n                pw.println(\"<table class=\\\"tab\\\"><tr><td>Failed to Add Books! Fill up CareFully</td></tr></table>\");\n                //rd.include(req, res);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Failed to Add Books! Fill up CareFully</td></tr></table>\");\n        }\n    }\n    \n    private static void showAddBookForm(PrintWriter pw) {\n        String form = \"<table class=\\\"tab my-5\\\" style=\\\"width:40%;\\\">\\r\\n\"\n                + \"        <tr>\\r\\n\"\n                + \"            <td>\\r\\n\"\n                + \"                <form action=\\\"addbook\\\" method=\\\"post\\\">\\r\\n\"\n                + \"                    <!-- <label for=\\\"bookCode\\\">Book Code : </label><input type=\\\"text\\\" name=\\\"barcode\\\" id=\\\"bookCode\\\" placeholder=\\\"Enter Book Code\\\" required><br/> -->\\r\\n\"\n                + \"                    <label for=\\\"bookName\\\">Book Name : </label> <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"bookName\\\" placeholder=\\\"Enter Book's name\\\" required><br/>\\r\\n\"\n                + \"                    <label for=\\\"bookAuthor\\\">Book Author : </label><input type=\\\"text\\\" name=\\\"author\\\" id=\\\"bookAuthor\\\" placeholder=\\\"Enter Author's Name\\\" required><br/>\\r\\n\"\n                + \"                    <label for=\\\"bookPrice\\\">Book Price : </label><input type=\\\"number\\\" name=\\\"price\\\" placeholder=\\\"Enter the Price\\\" required><br/>\\r\\n\"\n                + \"                    <label for=\\\"bookQuantity\\\">Book Qnty : </label><input type=\\\"number\\\" name=\\\"quantity\\\" id=\\\"bookQuantity\\\" placeholder=\\\"Enter the quantity\\\" required><br/>\\r\\n\"\n                + \"                    <input class=\\\"btn btn-success my-2\\\" type=\\\"submit\\\" value=\\\" Add Book \\\">\\r\\n\"\n                + \"                </form>\\r\\n\"\n                + \"            </td>\\r\\n\"\n                + \"        </tr>  \\r\\n\"\n                + \"        <!-- <tr>\\r\\n\"\n                + \"            <td><a href=\\\"index.html\\\">Go Back To Home Page</a></td>\\r\\n\"\n                + \"        </tr> -->\\r\\n\"\n                + \"    </table>\";\n        pw.println(form);\n    }\n}\n",
    "last_modified": 1750403861.8630753,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/StoreBookServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/StoreBookServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4098,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.List;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.model.Book;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class StoreBookServlet extends HttpServlet {\n\n    // book service for database operations and logics\n    BookService bookService = new BookServiceImpl();\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(\"text/html\");\n\n        // Check if the customer is logged in, or else return to login page\n        if (!StoreUtil.isLoggedIn(UserRole.SELLER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"SellerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n        try {\n\n            // Add/Remove Item from the cart if requested\n            // store the comma separated bookIds of cart in the session\n            // StoreUtil.updateCartItems(req);\n\n            RequestDispatcher rd = req.getRequestDispatcher(\"SellerHome.html\");\n            rd.include(req, res);\n            pw.println(\"<div class='container'>\");\n            // Set the active tab as cart\n            StoreUtil.setActiveTab(pw, \"storebooks\");\n\n            // Read the books from the database with the respective bookIds\n            List<Book> books = bookService.getAllBooks();\n            pw.println(\"<div id='topmid' style='background-color:grey'>Books Available In the Store</div>\");\n            pw.println(\"<table class=\\\"table table-hover\\\" style='background-color:white'>\\r\\n\"\n                    + \"  <thead>\\r\\n\"\n                    + \"    <tr style='background-color:black; color:white;'>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">BookId</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Name</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Author</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Price</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Quantity</th>\\r\\n\"\n                    + \"      <th scope=\\\"col\\\">Action</th>\\r\\n\"\n                    + \"    </tr>\\r\\n\"\n                    + \"  </thead>\\r\\n\"\n                    + \"  <tbody>\\r\\n\");\n            if (books == null || books.size() == 0) {\n                pw.println(\"    <tr style='background-color:green'>\\r\\n\"\n                        + \"      <th scope=\\\"row\\\" colspan='6' style='color:yellow; text-align:center;'> No Books Available in the store </th>\\r\\n\"\n                        + \"    </tr>\\r\\n\");\n            }\n            for (Book book : books) {\n                pw.println(getRowData(book));\n            }\n\n            pw.println(\"  </tbody>\\r\\n\"\n                    + \"</table></div>\");\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String getRowData(Book book) {\n        return \"    <tr>\\r\\n\"\n                + \"      <th scope=\\\"row\\\">\" + book.getBarcode() + \"</th>\\r\\n\"\n                + \"      <td>\" + book.getName() + \"</td>\\r\\n\"\n                + \"      <td>\" + book.getAuthor() + \"</td>\\r\\n\"\n                + \"      <td><span>&#8377;</span> \" + book.getPrice() + \"</td>\\r\\n\"\n                + \"      <td>\"\n                + book.getQuantity()\n                + \"      </td>\\r\\n\"\n                + \"      <td><form method='post' action='updatebook'>\"\n                + \"          <input type='hidden' name='bookId' value='\" + book.getBarcode() + \"'/>\"\n                + \"          <button type='submit' class=\\\"btn btn-success\\\">Update</button>\"\n                + \"          </form>\"\n                + \"    </tr>\\r\\n\";\n    }\n\n}\n",
    "last_modified": 1750403861.8642938,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/CheckoutServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/CheckoutServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1745,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.util.StoreUtil;\n\npublic class CheckoutServlet extends HttpServlet {\n    public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n        if (!StoreUtil.isLoggedIn(UserRole.CUSTOMER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n        try {\n\n            RequestDispatcher rd = req.getRequestDispatcher(\"payment.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"cart\");\n            pw.println(\"Total Amount<span class=\\\"price\\\" style=\\\"color: black\\\"><b>&#8377; \"\n                    + req.getSession().getAttribute(\"amountToPay\")\n                    + \"</b></span>\");\n\n            pw.println(\"<input type=\\\"submit\\\" value=\\\"Pay & Place Order\\\" class=\\\"btn\\\">\"\n                    + \"</form>\");\n\n            pw.println(\"</div>\\r\\n\"\n                    + \" </div>\\r\\n\"\n                    + \" </div>\\r\\n\"\n                    + \" </div>\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n",
    "last_modified": 1750403861.8634381,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/ViewBookServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/ViewBookServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 6992,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.List;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport com.bittercode.model.Book;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class ViewBookServlet extends HttpServlet {\n\n    // book service for database operations and logics\n    BookService bookService = new BookServiceImpl();\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(\"text/html\");\n\n        // Check if the customer is logged in, or else return to login page\n        if (!StoreUtil.isLoggedIn(UserRole.CUSTOMER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n        try {\n\n            // Read All available books from the database\n            List<Book> books = bookService.getAllBooks();\n\n            // Default Page to load data into\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerHome.html\");\n            rd.include(req, res);\n\n            // Set Available Books tab as active\n            StoreUtil.setActiveTab(pw, \"books\");\n\n            // Show the heading for the page\n            pw.println(\"<div id='topmid' style='background-color:grey'>Available Books\"\n                    + \"<form action=\\\"cart\\\" method=\\\"post\\\" style='float:right; margin-right:20px'>\"\n                    + \"<input type='submit' class=\\\"btn btn-primary\\\" name='cart' value='Proceed'/></form>\"\n                    + \"</div>\");\n            pw.println(\"<div class=\\\"container\\\">\\r\\n\"\n                    + \"        <div class=\\\"card-columns\\\">\");\n\n            // Add or Remove items from the cart, if requested\n            StoreUtil.updateCartItems(req);\n\n            HttpSession session = req.getSession();\n            for (Book book : books) {\n\n                // Add each book to display as a card\n                pw.println(this.addBookToCard(session, book));\n\n            }\n\n            // Checkout Button\n            pw.println(\"</div>\"\n                    + \"<div style='float:auto'><form action=\\\"cart\\\" method=\\\"post\\\">\"\n                    + \"<input type='submit' class=\\\"btn btn-success\\\" name='cart' value='Proceed to Checkout'/></form>\"\n                    + \"    </div>\");\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String addBookToCard(HttpSession session, Book book) {\n        String bCode = book.getBarcode();\n        int bQty = book.getQuantity();\n\n        // Quantity of the current book added to the cart\n        int cartItemQty = 0;\n        if (session.getAttribute(\"qty_\" + bCode) != null) {\n            // Quantity of each book in the cart will be added in the session prefixed with\n            // 'qty_' following with bookId\n            cartItemQty = (int) session.getAttribute(\"qty_\" + bCode);\n        }\n\n        // Button To Add/Remove item from the cart\n        String button = \"\";\n        if (bQty > 0) {\n            // If no items in the cart, show add to cart button\n            // If items is added to the cart, then show +, - button to add/remove more items\n            button = \"<form action=\\\"viewbook\\\" method=\\\"post\\\">\"\n                    + \"<input type='hidden' name = 'selectedBookId' value = \" + bCode + \">\"\n                    + \"<input type='hidden' name='qty_\" + bCode + \"' value='1'/>\"\n                    + (cartItemQty == 0\n                            ? \"<input type='submit' class=\\\"btn btn-primary\\\" name='addToCart' value='Add To Cart'/></form>\"\n                            : \"<form method='post' action='cart'>\"\n                                    + \"<button type='submit' name='removeFromCart' class=\\\"glyphicon glyphicon-minus btn btn-danger\\\"></button> \"\n                                    + \"<input type='hidden' name='selectedBookId' value='\" + bCode + \"'/>\"\n                                    + cartItemQty\n                                    + \" <button type='submit' name='addToCart' class=\\\"glyphicon glyphicon-plus btn btn-success\\\"></button></form>\")\n                    + \"\";\n        } else {\n            // If available Quantity is zero, show out of stock button\n            button = \"<p class=\\\"btn btn-danger\\\">Out Of Stock</p>\\r\\n\";\n        }\n\n        // Bootstrap card to show the book data\n        return \"<div class=\\\"card\\\">\\r\\n\"\n                + \"                <div class=\\\"row card-body\\\">\\r\\n\"\n                + \"                    <img class=\\\"col-sm-6\\\" src=\\\"logo.png\\\" alt=\\\"Card image cap\\\">\\r\\n\"\n                + \"                    <div class=\\\"col-sm-6\\\">\\r\\n\"\n                + \"                        <h5 class=\\\"card-title text-success\\\">\" + book.getName() + \"</h5>\\r\\n\"\n                + \"                        <p class=\\\"card-text\\\">\\r\\n\"\n                + \"                        Author: <span class=\\\"text-primary\\\" style=\\\"font-weight:bold;\\\"> \"\n                + book.getAuthor()\n                + \"</span><br>\\r\\n\"\n                + \"                        </p>\\r\\n\"\n                + \"                        \\r\\n\"\n                + \"                    </div>\\r\\n\"\n                + \"                </div>\\r\\n\"\n                + \"                <div class=\\\"row card-body\\\">\\r\\n\"\n                + \"                    <div class=\\\"col-sm-6\\\">\\r\\n\"\n                + \"                        <p class=\\\"card-text\\\">\\r\\n\"\n                + \"                        <span>Id: \" + bCode + \"</span>\\r\\n\"\n                + (bQty < 20 ? \"<br><span class=\\\"text-danger\\\">Only \" + bQty + \" items left</span>\\r\\n\"\n                        : \"<br><span class=\\\"text-success\\\">Trending</span>\\r\\n\")\n                + \"                        </p>\\r\\n\"\n                + \"                    </div>\\r\\n\"\n                + \"                    <div class=\\\"col-sm-6\\\">\\r\\n\"\n                + \"                        <p class=\\\"card-text\\\">\\r\\n\"\n                + \"                        Price: <span style=\\\"font-weight:bold; color:green\\\"> &#8377; \"\n                + book.getPrice()\n                + \" </span>\\r\\n\"\n                + \"                        </p>\\r\\n\"\n                + button\n                + \"                    </div>\\r\\n\"\n                + \"                </div>\\r\\n\"\n                + \"            </div>\";\n    }\n}\n",
    "last_modified": 1750403861.8646054,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/SellerLoginServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/SellerLoginServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2131,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.constant.db.UsersDBConstants;\nimport com.bittercode.model.User;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.UserService;\nimport com.bittercode.service.impl.UserServiceImpl;\n\npublic class SellerLoginServlet extends HttpServlet {\n\n    UserService userService = new UserServiceImpl();\n\n    public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n        String uName = req.getParameter(UsersDBConstants.COLUMN_USERNAME);\n        String pWord = req.getParameter(UsersDBConstants.COLUMN_PASSWORD);\n        try {\n            User user = userService.login(UserRole.SELLER, uName, pWord, req.getSession());\n            if (user != null) {\n                RequestDispatcher rd = req.getRequestDispatcher(\"SellerHome.html\");\n\n                rd.include(req, res);\n                pw.println(\"    <div id=\\\"topmid\\\"><h1>Welcome to Online <br>Book Store</h1></div>\\r\\n\"\n                        + \"    <br>\\r\\n\"\n                        + \"    <table class=\\\"tab\\\">\\r\\n\"\n                        + \"        <tr>\\r\\n\"\n                        + \"            <td><p>Welcome \"+user.getFirstName()+\", Happy Learning !!</p></td>\\r\\n\"\n                        + \"        </tr>\\r\\n\"\n                        + \"    </table>\");\n            } else {\n\n                RequestDispatcher rd = req.getRequestDispatcher(\"SellerLogin.html\");\n                rd.include(req, res);\n                pw.println(\"<div class=\\\"tab\\\">Incorrect UserName or PassWord</div>\");\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "last_modified": 1750403861.864139,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/UpdateBookServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/UpdateBookServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4877,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.constant.ResponseCode;\nimport com.bittercode.constant.db.BooksDBConstants;\nimport com.bittercode.model.Book;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class UpdateBookServlet extends HttpServlet {\n    BookService bookService = new BookServiceImpl();\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n\n        if (!StoreUtil.isLoggedIn(UserRole.SELLER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"SellerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n\n        RequestDispatcher rd = req.getRequestDispatcher(\"SellerHome.html\");\n        rd.include(req, res);\n        StoreUtil.setActiveTab(pw, \"storebooks\");\n        pw.println(\"<div class='container my-2'>\");\n\n        try {\n            if (req.getParameter(\"updateFormSubmitted\") != null) {\n                String bName = req.getParameter(BooksDBConstants.COLUMN_NAME);\n                String bCode = req.getParameter(BooksDBConstants.COLUMN_BARCODE);\n                String bAuthor = req.getParameter(BooksDBConstants.COLUMN_AUTHOR);\n                double bPrice = Double.parseDouble(req.getParameter(BooksDBConstants.COLUMN_PRICE));\n                int bQty = Integer.parseInt(req.getParameter(BooksDBConstants.COLUMN_QUANTITY));\n\n                Book book = new Book(bCode, bName, bAuthor, bPrice, bQty);\n                String message = bookService.updateBook(book);\n                if (ResponseCode.SUCCESS.name().equalsIgnoreCase(message)) {\n                    pw.println(\n                            \"<table class=\\\"tab\\\"><tr><td>Book Detail Updated Successfully!</td></tr></table>\");\n                } else {\n                    pw.println(\"<table class=\\\"tab\\\"><tr><td>Failed to Update Book!!</td></tr></table>\");\n                    // rd.include(req, res);\n                }\n\n                return;\n            }\n\n            String bookId = req.getParameter(\"bookId\");\n\n            if (bookId != null) {\n                Book book = bookService.getBookById(bookId);\n                showUpdateBookForm(pw, book);\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Failed to Load Book data!!</td></tr></table>\");\n        }\n    }\n\n    private static void showUpdateBookForm(PrintWriter pw, Book book) {\n        String form = \"<table class=\\\"tab my-5\\\" style=\\\"width:40%;\\\">\\r\\n\"\n                + \"        <tr>\\r\\n\"\n                + \"            <td>\\r\\n\"\n                + \"                <form action=\\\"updatebook\\\" method=\\\"post\\\">\\r\\n\"\n                + \"                    <label for=\\\"bookCode\\\">Book Code : </label><input type=\\\"text\\\" name=\\\"barcode\\\" id=\\\"bookCode\\\" placeholder=\\\"Enter Book Code\\\" value='\"\n                + book.getBarcode() + \"' readonly><br/>\"\n                + \"                    <label for=\\\"bookName\\\">Book Name : </label> <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"bookName\\\" placeholder=\\\"Enter Book's name\\\" value='\"\n                + book.getName() + \"' required><br/>\\r\\n\"\n                + \"                    <label for=\\\"bookAuthor\\\">Book Author : </label><input type=\\\"text\\\" name=\\\"author\\\" id=\\\"bookAuthor\\\" placeholder=\\\"Enter Author's Name\\\" value='\"\n                + book.getAuthor() + \"' required><br/>\\r\\n\"\n                + \"                    <label for=\\\"bookPrice\\\">Book Price : </label><input type=\\\"number\\\" name=\\\"price\\\" placeholder=\\\"Enter the Price\\\" value='\"\n                + book.getPrice() + \"' required><br/>\\r\\n\"\n                + \"                    <label for=\\\"bookQuantity\\\">Book Qnty : </label><input type=\\\"number\\\" name=\\\"quantity\\\" id=\\\"bookQuantity\\\" placeholder=\\\"Enter the quantity\\\" value='\"\n                + book.getQuantity() + \"' required><br/>\\r\\n\"\n                + \"                    <input class=\\\"btn btn-success my-2\\\" type=\\\"submit\\\" name='updateFormSubmitted' value=\\\" Update Book \\\">\\r\\n\"\n                + \"                </form>\\r\\n\"\n                + \"            </td>\\r\\n\"\n                + \"        </tr>  \\r\\n\"\n                + \"    </table>\";\n        pw.println(form);\n    }\n}\n",
    "last_modified": 1750403861.8644235,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/CustomerLoginServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/CustomerLoginServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2165,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.constant.db.UsersDBConstants;\nimport com.bittercode.model.User;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.UserService;\nimport com.bittercode.service.impl.UserServiceImpl;\n\npublic class CustomerLoginServlet extends HttpServlet {\n\n    UserService authService = new UserServiceImpl();\n\n    public void doPost(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n        String uName = req.getParameter(UsersDBConstants.COLUMN_USERNAME);\n        String pWord = req.getParameter(UsersDBConstants.COLUMN_PASSWORD);\n        User user = authService.login(UserRole.CUSTOMER, uName, pWord, req.getSession());\n\n        try {\n\n            if (user != null) {\n\n                RequestDispatcher rd = req.getRequestDispatcher(\"CustomerHome.html\");\n                rd.include(req, res);\n                pw.println(\"    <div id=\\\"topmid\\\"><h1>Welcome to Online <br>Book Store</h1></div>\\r\\n\"\n                        + \"    <br>\\r\\n\"\n                        + \"    <table class=\\\"tab\\\">\\r\\n\"\n                        + \"        <tr>\\r\\n\"\n                        + \"            <td><p>Welcome \"+user.getFirstName()+\", Happy Learning !!</p></td>\\r\\n\"\n                        + \"        </tr>\\r\\n\"\n                        + \"    </table>\");\n\n            } else {\n\n                RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n                rd.include(req, res);\n                pw.println(\"<table class=\\\"tab\\\"><tr><td>Incorrect UserName or PassWord</td></tr></table>\");\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}",
    "last_modified": 1750403861.8635225,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/ErrorHandlerServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/ErrorHandlerServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 4042,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.Optional;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.ResponseCode;\nimport com.bittercode.model.StoreException;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.util.StoreUtil;\n\npublic class ErrorHandlerServlet extends HttpServlet {\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(\"text/html\");\n\n        // Fetch the exceptions\n        Throwable throwable = (Throwable) req.getAttribute(\"javax.servlet.error.exception\");\n        Integer statusCode = (Integer) req.getAttribute(\"javax.servlet.error.status_code\");\n        String servletName = (String) req.getAttribute(\"javax.servlet.error.servlet_name\");\n        String requestUri = (String) req.getAttribute(\"javax.servlet.error.request_uri\");\n        String errorMessage = ResponseCode.INTERNAL_SERVER_ERROR.getMessage();\n        String errorCode = ResponseCode.INTERNAL_SERVER_ERROR.name();\n\n        if (statusCode == null)\n            statusCode = 0;\n        Optional<ResponseCode> errorCodes = ResponseCode.getMessageByStatusCode(statusCode);\n        if (errorCodes.isPresent()) {\n            errorMessage = errorCodes.get().getMessage();\n            errorCode = errorCodes.get().name();\n        }\n\n        if (throwable != null && throwable instanceof StoreException) {\n            StoreException storeException = (StoreException) throwable;\n            if (storeException != null) {\n                errorMessage = storeException.getMessage();\n                statusCode = storeException.getStatusCode();\n                errorCode = storeException.getErrorCode();\n                storeException.printStackTrace();\n            }\n        }\n\n        System.out.println(\"======ERROR TRIGGERED========\");\n        System.out.println(\"Servlet Name: \" + servletName);\n        System.out.println(\"Request URI: \" + requestUri);\n        System.out.println(\"Status Code: \" + statusCode);\n        System.out.println(\"Error Code: \" + errorCode);\n        System.out.println(\"Error Message: \" + errorMessage);\n        System.out.println(\"=============================\");\n\n        if (StoreUtil.isLoggedIn(UserRole.CUSTOMER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"CustomerHome.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"home\");\n            showErrorMessage(pw, errorCode, errorMessage);\n\n        } else if (StoreUtil.isLoggedIn(UserRole.SELLER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"SellerHome.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"home\");\n            showErrorMessage(pw, errorCode, errorMessage);\n\n        } else {\n            RequestDispatcher rd = req.getRequestDispatcher(\"index.html\");\n            rd.include(req, res);\n            pw.println(\"<script>\"\n                    + \"document.getElementById('topmid').innerHTML='';\"\n                    + \"document.getElementById('happy').innerHTML='';\"\n                    + \"</script>\");\n            showErrorMessage(pw, errorCode, errorMessage);\n        }\n\n    }\n\n    private void showErrorMessage(PrintWriter pw, String errorCode, String errorMessage) {\n        pw.println(\"<div class='container my-5'>\"\n                + \"<div class=\\\"alert alert-success\\\" role=\\\"alert\\\" style='max-width:450px; text-align:center; margin:auto;'>\\r\\n\"\n                + \"  <h4 class=\\\"alert-heading\\\">\"\n                + errorCode\n                + \"</h4>\\r\\n\"\n                + \"  <hr>\\r\\n\"\n                + \"  <p class=\\\"mb-0\\\">\"\n                + errorMessage\n                + \"</p>\\r\\n\"\n                + \"</div>\"\n                + \"</div>\");\n\n    }\n\n}\n",
    "last_modified": 1750403861.8636885,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/RemoveBookServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/RemoveBookServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3393,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.ResponseCode;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.BookService;\nimport com.bittercode.service.impl.BookServiceImpl;\nimport com.bittercode.util.StoreUtil;\n\npublic class RemoveBookServlet extends HttpServlet {\n\n    BookService bookService = new BookServiceImpl();\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(\"text/html\");\n        if (!StoreUtil.isLoggedIn(UserRole.SELLER, req.getSession())) {\n            RequestDispatcher rd = req.getRequestDispatcher(\"SellerLogin.html\");\n            rd.include(req, res);\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Please Login First to Continue!!</td></tr></table>\");\n            return;\n        }\n\n        try {\n            String bookId = req.getParameter(\"bookId\");\n            RequestDispatcher rd = req.getRequestDispatcher(\"SellerHome.html\");\n            rd.include(req, res);\n            StoreUtil.setActiveTab(pw, \"removebook\");\n            pw.println(\"<div class='container'>\");\n            if (bookId == null || bookId.isBlank()) {\n                // render the remove book form;\n                showRemoveBookForm(pw);\n                return;\n            } // else continue\n\n            String responseCode = bookService.deleteBookById(bookId.trim());\n            if (ResponseCode.SUCCESS.name().equalsIgnoreCase(responseCode)) {\n                pw.println(\"<table class=\\\"tab my-5\\\"><tr><td>Book Removed Successfully</td></tr></table>\");\n                pw.println(\n                        \"<table class=\\\"tab\\\"><tr><td><a href=\\\"removebook\\\">Remove more Books</a></td></tr></table>\");\n\n            } else {\n                pw.println(\"<table class=\\\"tab my-5\\\"><tr><td>Book Not Available In The Store</td></tr></table>\");\n                pw.println(\n                        \"<table class=\\\"tab\\\"><tr><td><a href=\\\"removebook\\\">Remove more Books</a></td></tr></table>\");\n            }\n            pw.println(\"</div>\");\n        } catch (Exception e) {\n            e.printStackTrace();\n            pw.println(\"<table class=\\\"tab\\\"><tr><td>Failed to Remove Books! Try Again</td></tr></table>\");\n        }\n    }\n\n    private static void showRemoveBookForm(PrintWriter pw) {\n        String form = \"<form action=\\\"removebook\\\" method=\\\"post\\\" class='my-5'>\\r\\n\"\n                + \"        <table class=\\\"tab\\\">\\r\\n\"\n                + \"        <tr>\\r\\n\"\n                + \"            <td>\\r\\n\"\n                + \"                <label for=\\\"bookCode\\\">Enter BookId to Remove </label>\\r\\n\"\n                + \"                <input type=\\\"text\\\" name=\\\"bookId\\\" placeholder=\\\"Enter Book Id\\\" id=\\\"bookCode\\\" required>\\r\\n\"\n                + \"                <input class=\\\"btn btn-danger my-2\\\" type=\\\"submit\\\" value=\\\"Remove Book\\\">\\r\\n\"\n                + \"            </td>\\r\\n\"\n                + \"        </tr>\\r\\n\"\n                + \"\\r\\n\"\n                + \"        </table>\\r\\n\"\n                + \"    </form>\";\n        pw.println(form);\n    }\n\n}\n",
    "last_modified": 1750403861.8640714,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/servlets/CustomerRegisterServlet.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/servlets/CustomerRegisterServlet.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2530,
    "content": "package servlets;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.RequestDispatcher;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport com.bittercode.constant.BookStoreConstants;\nimport com.bittercode.constant.ResponseCode;\nimport com.bittercode.constant.db.UsersDBConstants;\nimport com.bittercode.model.User;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.UserService;\nimport com.bittercode.service.impl.UserServiceImpl;\n\npublic class CustomerRegisterServlet extends HttpServlet {\n\n    UserService userService = new UserServiceImpl();\n\n    public void service(HttpServletRequest req, HttpServletResponse res) throws IOException, ServletException {\n        PrintWriter pw = res.getWriter();\n        res.setContentType(BookStoreConstants.CONTENT_TYPE_TEXT_HTML);\n\n        String pWord = req.getParameter(UsersDBConstants.COLUMN_PASSWORD);\n        String fName = req.getParameter(UsersDBConstants.COLUMN_FIRSTNAME);\n        String lName = req.getParameter(UsersDBConstants.COLUMN_LASTNAME);\n        String addr = req.getParameter(UsersDBConstants.COLUMN_ADDRESS);\n        String phNo = req.getParameter(UsersDBConstants.COLUMN_PHONE);\n        String mailId = req.getParameter(UsersDBConstants.COLUMN_MAILID);\n        User user = new User();\n        user.setEmailId(mailId);\n        user.setFirstName(fName);\n        user.setLastName(lName);\n        user.setPassword(pWord);\n        user.setPhone(Long.parseLong(phNo));\n        user.setAddress(addr);\n        try {\n            String respCode = userService.register(UserRole.CUSTOMER, user);\n            System.out.println(respCode);\n            if (ResponseCode.SUCCESS.name().equalsIgnoreCase(respCode)) {\n                RequestDispatcher rd = req.getRequestDispatcher(\"CustomerLogin.html\");\n                rd.include(req, res);\n                pw.println(\"<table class=\\\"tab\\\"><tr><td>User Registered Successfully</td></tr></table>\");\n            } else {\n                RequestDispatcher rd = req.getRequestDispatcher(\"CustomerRegister.html\");\n                rd.include(req, res);\n                pw.println(\"<table class=\\\"tab\\\"><tr><td>\" + respCode + \"</td></tr></table>\");\n                pw.println(\"Sorry for interruption! Try again\");\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "last_modified": 1750403861.863605,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/util/DatabaseConfig.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/util/DatabaseConfig.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1067,
    "content": "package com.bittercode.util;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Properties;\n\nclass DatabaseConfig {\n\n    static Properties prop = new Properties();\n    static {\n\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n        InputStream input = classLoader.getResourceAsStream(\"application.properties\");\n\n        try {\n            prop.load(input);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public final static String DRIVER_NAME = prop.getProperty(\"db.driver\");\n    public final static String DB_HOST = prop.getProperty(\"db.host\");\n    public final static String DB_PORT = prop.getProperty(\"db.port\");\n    public final static String DB_NAME = prop.getProperty(\"db.name\");\n    public final static String DB_USER_NAME = prop.getProperty(\"db.username\");\n    public final static String DB_PASSWORD = prop.getProperty(\"db.password\");\n    public final static String CONNECTION_STRING = DB_HOST + \":\" + DB_PORT + \"/\" + DB_NAME;\n\n}\n",
    "last_modified": 1750403861.8627214,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/util/DBUtil.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/util/DBUtil.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 943,
    "content": "package com.bittercode.util;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\nimport com.bittercode.constant.ResponseCode;\nimport com.bittercode.model.StoreException;\n\npublic class DBUtil {\n\n    private static Connection connection;\n\n    static {\n\n        try {\n\n            Class.forName(DatabaseConfig.DRIVER_NAME);\n            \n            connection = DriverManager.getConnection(DatabaseConfig.CONNECTION_STRING, DatabaseConfig.DB_USER_NAME,\n                    DatabaseConfig.DB_PASSWORD);\n        } catch (SQLException | ClassNotFoundException e) {\n\n            e.printStackTrace();\n\n        }\n\n    }// End of static block\n\n    public static Connection getConnection() throws StoreException {\n\n        if (connection == null) {\n            throw new StoreException(ResponseCode.DATABASE_CONNECTION_FAILURE);\n        }\n\n        return connection;\n    }\n\n}\n",
    "last_modified": 1750403861.8626368,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/util/StoreUtil.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/util/StoreUtil.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3237,
    "content": "package com.bittercode.util;\n\nimport java.io.PrintWriter;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpSession;\n\nimport com.bittercode.model.UserRole;\n\n/*\n * Store UTil File To Store Commonly used methods\n */\npublic class StoreUtil {\n\n    /**\n     * Check if the User is logged in with the requested role\n     */\n    public static boolean isLoggedIn(UserRole role, HttpSession session) {\n\n        return session.getAttribute(role.toString()) != null;\n    }\n\n    /**\n     * Modify the active tab in the page menu bar\n     */\n    public static void setActiveTab(PrintWriter pw, String activeTab) {\n\n        pw.println(\"<script>document.getElementById(activeTab).classList.remove(\\\"active\\\");activeTab=\" + activeTab\n                + \"</script>\");\n        pw.println(\"<script>document.getElementById('\" + activeTab + \"').classList.add(\\\"active\\\");</script>\");\n\n    }\n\n    /**\n     * Add/Remove/Update Item in the cart using the session\n     */\n    public static void updateCartItems(HttpServletRequest req) {\n        String selectedBookId = req.getParameter(\"selectedBookId\");\n        HttpSession session = req.getSession();\n        if (selectedBookId != null) { // add item to the cart\n\n            // Items will contain comma separated bookIds that needs to be added in the cart\n            String items = (String) session.getAttribute(\"items\");\n            if (req.getParameter(\"addToCart\") != null) { // add to cart\n                if (items == null || items.length() == 0)\n                    items = selectedBookId;\n                else if (!items.contains(selectedBookId))\n                    items = items + \",\" + selectedBookId; // if items already contains bookId, don't add it\n\n                // set the items in the session to be used later\n                session.setAttribute(\"items\", items);\n\n                /*\n                 * Quantity of each item in the cart will be stored in the session as:\n                 * Prefixed with qty_ following its bookId\n                 * For example 2 no. of book with id 'myBook' in the cart will be\n                 * added to the session as qty_myBook=2\n                 */\n                int itemQty = 0;\n                if (session.getAttribute(\"qty_\" + selectedBookId) != null)\n                    itemQty = (int) session.getAttribute(\"qty_\" + selectedBookId);\n                itemQty += 1;\n                session.setAttribute(\"qty_\" + selectedBookId, itemQty);\n            } else { // remove from the cart\n                int itemQty = 0;\n                if (session.getAttribute(\"qty_\" + selectedBookId) != null)\n                    itemQty = (int) session.getAttribute(\"qty_\" + selectedBookId);\n                if (itemQty > 1) {\n                    itemQty--;\n                    session.setAttribute(\"qty_\" + selectedBookId, itemQty);\n                } else {\n                    session.removeAttribute(\"qty_\" + selectedBookId);\n                    items = items.replace(selectedBookId + \",\", \"\");\n                    items = items.replace(\",\" + selectedBookId, \"\");\n                    items = items.replace(selectedBookId, \"\");\n                    session.setAttribute(\"items\", items);\n                }\n            }\n        }\n\n    }\n}\n",
    "last_modified": 1750403861.8628047,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/constant/ResponseCode.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/constant/ResponseCode.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1245,
    "content": "package com.bittercode.constant;\n\nimport java.util.Arrays;\nimport java.util.Optional;\n\npublic enum ResponseCode {\n\n    SUCCESS(200, \"OK\"),\n    FAILURE(422, \"Unprocessible Entity, Failed to Process\"),\n    PAGE_NOT_FOUND(404, \"The Page You are Searching For is Not available\"),\n    ACCESS_DENIED(403, \"Please Login First to continue\"),\n    BAD_REQUEST(400, \"Bad Request, Please Try Again\"),\n    INTERNAL_SERVER_ERROR(500, \"Internal Server Error, Try Again!!\"),\n    DATABASE_CONNECTION_FAILURE(406,\n            \"Unable to Connect to DB, Please Check your db credentials in application.properties\"),\n    METHOD_NOT_ALLOWED(405, \"Requested HTTP method is not supported by this URL\"),\n\n    ;\n\n    private final String message;\n    private final int code;\n\n    ResponseCode(int code, String message) {\n        this.message = message;\n        this.code = code;\n    }\n\n    public String getMessage() {\n        return message;\n    }\n\n    public int getCode() {\n        return code;\n    }\n\n    // Reverse lookup methods\n    public static Optional<ResponseCode> getMessageByStatusCode(int statusCode) {\n        return Arrays.stream(ResponseCode.values())\n                .filter(error -> error.getCode() == statusCode)\n                .findFirst();\n    }\n}\n",
    "last_modified": 1750403861.8611882,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/constant/BookStoreConstants.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/constant/BookStoreConstants.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 145,
    "content": "package com.bittercode.constant;\n\npublic interface BookStoreConstants {\n\tpublic static String CONTENT_TYPE_TEXT_HTML = \"text/html\";\n\t\n\t\n}\n",
    "last_modified": 1750403861.8610835,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/constant/db/BooksDBConstants.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/constant/db/BooksDBConstants.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 378,
    "content": "package com.bittercode.constant.db;\n\npublic interface BooksDBConstants {\n\t\n    public static String TABLE_BOOK = \"books\";\n\t\n\tpublic static String COLUMN_NAME = \"name\";\n\tpublic static String COLUMN_BARCODE = \"barcode\";\n\tpublic static String COLUMN_AUTHOR = \"author\";\n\tpublic static String COLUMN_PRICE = \"price\";\n\tpublic static String COLUMN_QUANTITY = \"quantity\";\n}\n",
    "last_modified": 1750403861.8613336,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/constant/db/UsersDBConstants.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/constant/db/UsersDBConstants.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 544,
    "content": "package com.bittercode.constant.db;\n\npublic interface UsersDBConstants {\n\n\tpublic static String TABLE_USERS = \"users\";\n\t\n\tpublic static String COLUMN_USERNAME = \"username\";\n\tpublic static String COLUMN_PASSWORD = \"password\";\n\tpublic static String COLUMN_FIRSTNAME = \"firstname\";\n\tpublic static String COLUMN_LASTNAME = \"lastname\";\n\tpublic static String COLUMN_ADDRESS = \"address\";\n\tpublic static String COLUMN_PHONE = \"phone\";\n\tpublic static String COLUMN_MAILID = \"mailid\";\n\tpublic static String COLUMN_USERTYPE = \"usertype\";\n}\n",
    "last_modified": 1750403861.86143,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/model/UserRole.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/model/UserRole.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 77,
    "content": "package com.bittercode.model;\n\npublic enum UserRole {\n    CUSTOMER, SELLER\n}\n",
    "last_modified": 1750403861.8619418,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/model/StoreException.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/model/StoreException.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1643,
    "content": "package com.bittercode.model;\n\nimport java.io.IOException;\n\nimport com.bittercode.constant.ResponseCode;\n\npublic class StoreException extends IOException {\n\n    private String errorCode;\n    private String errorMessage;\n    private int statusCode;\n\n    public StoreException(String errorMessage) {\n        super(errorMessage);\n        this.errorCode = \"BAD_REQUEST\";\n        this.setStatusCode(400);\n        this.errorMessage = errorMessage;\n    }\n\n    public StoreException(ResponseCode errorCodes) {\n        super(errorCodes.getMessage());\n        this.statusCode = errorCodes.getCode();\n        this.errorMessage = errorCodes.getMessage();\n        this.setErrorCode(errorCodes.name());\n    }\n\n    public StoreException(String errroCode, String errorMessage) {\n        super(errorMessage);\n        this.errorCode = errroCode;\n        this.errorMessage = errorMessage;\n        this.statusCode = 422;\n    }\n\n    public StoreException(int statusCode, String errorCode, String errorMessage) {\n        super(errorMessage);\n        this.statusCode = statusCode;\n        this.errorCode = errorCode;\n        this.errorMessage = errorMessage;\n    }\n\n    public String getErrorCode() {\n        return errorCode;\n    }\n\n    public void setErrorCode(String errorCode) {\n        this.errorCode = errorCode;\n    }\n\n    public String getErrorMessage() {\n        return errorMessage;\n    }\n\n    public void setErrorMessage(String errorMessage) {\n        this.errorMessage = errorMessage;\n    }\n\n    public int getStatusCode() {\n        return statusCode;\n    }\n\n    public void setStatusCode(int statusCode) {\n        this.statusCode = statusCode;\n    }\n\n}\n",
    "last_modified": 1750403861.8618011,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/model/User.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/model/User.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 2206,
    "content": "package com.bittercode.model;\n\nimport java.io.Serializable;\nimport java.util.List;\n\npublic class User implements Serializable {\n\n    private String emailId;\n    private String password;\n    private String firstName;\n    private String lastName;\n    private Long phone;\n    private String address;\n    private List<UserRole> roles;\n\n    public String getEmailId() {\n        return emailId;\n    }\n\n    public void setEmailId(String emailId) {\n        this.emailId = emailId;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public void setFirstName(String firstName) {\n        this.firstName = firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public void setLastName(String lastName) {\n        this.lastName = lastName;\n    }\n\n    public Long getPhone() {\n        return phone;\n    }\n\n    public void setPhone(Long phone) {\n        this.phone = phone;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public List<UserRole> getRoles() {\n        return roles;\n    }\n\n    public void setRoles(List<UserRole> roles) {\n        this.roles = roles;\n    }\n\n//    public static User retrieveFromHttpServletRequest(HttpServletRequest req) {\n//        User user = new User();\n//        String pWord = req.getParameter(UsersDBConstants.COLUMN_PASSWORD);\n//        String fName = req.getParameter(UsersDBConstants.COLUMN_FIRSTNAME);\n//        String lName = req.getParameter(UsersDBConstants.COLUMN_LASTNAME);\n//        String addr = req.getParameter(UsersDBConstants.COLUMN_ADDRESS);\n//        String phNo = req.getParameter(UsersDBConstants.COLUMN_PHONE);\n//        String mailId = req.getParameter(UsersDBConstants.COLUMN_MAILID);\n//        user.setEmailId(mailId);\n//        user.setFirstName(fName);\n//        user.setLastName(lName);\n//        user.setPassword(pWord);\n//        user.setPhone(Long.parseLong(phNo));\n//        user.setAddress(addr);\n//        return user;\n//    }\n}\n",
    "last_modified": 1750403861.8618736,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/model/Address.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/model/Address.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1359,
    "content": "package com.bittercode.model;\n\nimport java.io.Serializable;\n\npublic class Address implements Serializable {\n\n    private String addressLine1;\n    private String addressLine2;\n    private String city;\n    private String state;\n    private String country;\n    private long pinCode;\n    private String phone;\n\n    public String getAddressLine1() {\n        return addressLine1;\n    }\n\n    public void setAddressLine1(String addressLine1) {\n        this.addressLine1 = addressLine1;\n    }\n\n    public String getAddressLine2() {\n        return addressLine2;\n    }\n\n    public void setAddressLine2(String addressLine2) {\n        this.addressLine2 = addressLine2;\n    }\n\n    public String getCity() {\n        return city;\n    }\n\n    public void setCity(String city) {\n        this.city = city;\n    }\n\n    public String getState() {\n        return state;\n    }\n\n    public void setState(String state) {\n        this.state = state;\n    }\n\n    public String getCountry() {\n        return country;\n    }\n\n    public void setCountry(String country) {\n        this.country = country;\n    }\n\n    public long getPinCode() {\n        return pinCode;\n    }\n\n    public void setPinCode(long pinCode) {\n        this.pinCode = pinCode;\n    }\n\n    public String getPhone() {\n        return phone;\n    }\n\n    public void setPhone(String phone) {\n        this.phone = phone;\n    }\n\n}\n",
    "last_modified": 1750403861.8615658,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/model/Book.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/model/Book.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 1238,
    "content": "package com.bittercode.model;\n\nimport java.io.Serializable;\n\npublic class Book implements Serializable {\n\n    private String barcode;\n    private String name;\n    private String author;\n    private double price;\n    private int quantity;\n\n    public Book(String barcode, String name, String author, double price, int quantity) {\n        this.barcode = barcode;\n        this.name = name;\n        this.author = author;\n        this.setPrice(price);\n        this.quantity = quantity;\n    }\n\n    public Book() {\n        super();\n    }\n\n    public String getBarcode() {\n        return barcode;\n    }\n\n    public void setBarcode(String barcode) {\n        this.barcode = barcode;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n\n    public void setAuthor(String author) {\n        this.author = author;\n    }\n\n    public int getQuantity() {\n        return quantity;\n    }\n\n    public void setQuantity(int quantity) {\n        this.quantity = quantity;\n    }\n\n    public double getPrice() {\n        return price;\n    }\n\n    public void setPrice(double price) {\n        this.price = price;\n    }\n\n}\n",
    "last_modified": 1750403861.8616486,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/model/Cart.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/model/Cart.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 542,
    "content": "package com.bittercode.model;\n\nimport java.io.Serializable;\n\npublic class Cart implements Serializable {\n\n    private Book book;\n    private int quantity;\n\n    public Cart(Book book, int quantity) {\n        this.book = book;\n        this.quantity = quantity;\n    }\n\n    public Book getBook() {\n        return book;\n    }\n\n    public void setBook(Book book) {\n        this.book = book;\n    }\n\n    public int getQuantity() {\n        return quantity;\n    }\n\n    public void setQuantity(int quantity) {\n        this.quantity = quantity;\n    }\n\n}\n",
    "last_modified": 1750403861.8617232,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/model/package-info.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/model/package-info.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 77,
    "content": "/**\n * \n */\n/**\n * @author shashirajraja\n *\n */\npackage com.bittercode.model;",
    "last_modified": 1750403861.8620074,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/service/UserService.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/service/UserService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 531,
    "content": "package com.bittercode.service;\n\nimport javax.servlet.http.HttpSession;\n\nimport com.bittercode.model.StoreException;\nimport com.bittercode.model.User;\nimport com.bittercode.model.UserRole;\n\npublic interface UserService {\n\n    public User login(UserRole role, String email, String password, HttpSession session) throws StoreException;\n\n    public String register(UserRole role, User user) throws StoreException;\n\n    public boolean isLoggedIn(UserRole role, HttpSession session);\n\n    public boolean logout(HttpSession session);\n\n}\n",
    "last_modified": 1750403861.8621945,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/service/BookService.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/service/BookService.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 695,
    "content": "package com.bittercode.service;\n\nimport java.util.List;\n\nimport com.bittercode.model.Book;\nimport com.bittercode.model.StoreException;\n\npublic interface BookService {\n\n    public Book getBookById(String bookId) throws StoreException;\n\n    public List<Book> getAllBooks() throws StoreException;\n\n    public List<Book> getBooksByCommaSeperatedBookIds(String commaSeperatedBookIds) throws StoreException;\n\n    public String deleteBookById(String bookId) throws StoreException;\n\n    public String addBook(Book book) throws StoreException;\n\n    public String updateBookQtyById(String bookId, int quantity) throws StoreException;\n    \n    public String updateBook(Book book) throws StoreException;\n\n}\n",
    "last_modified": 1750403861.86212,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/service/impl/BookServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/service/impl/BookServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 7089,
    "content": "package com.bittercode.service.impl;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.bittercode.constant.ResponseCode;\nimport com.bittercode.constant.db.BooksDBConstants;\nimport com.bittercode.model.Book;\nimport com.bittercode.model.StoreException;\nimport com.bittercode.service.BookService;\nimport com.bittercode.util.DBUtil;\n\npublic class BookServiceImpl implements BookService {\n\n    private static final String getAllBooksQuery = \"SELECT * FROM \" + BooksDBConstants.TABLE_BOOK;\n    private static final String getBookByIdQuery = \"SELECT * FROM \" + BooksDBConstants.TABLE_BOOK\n            + \" WHERE \" + BooksDBConstants.COLUMN_BARCODE + \" = ?\";\n\n    private static final String deleteBookByIdQuery = \"DELETE FROM \" + BooksDBConstants.TABLE_BOOK + \"  WHERE \"\n            + BooksDBConstants.COLUMN_BARCODE + \"=?\";\n\n    private static final String addBookQuery = \"INSERT INTO \" + BooksDBConstants.TABLE_BOOK + \"  VALUES(?,?,?,?,?)\";\n\n    private static final String updateBookQtyByIdQuery = \"UPDATE \" + BooksDBConstants.TABLE_BOOK + \" SET \"\n            + BooksDBConstants.COLUMN_QUANTITY + \"=? WHERE \" + BooksDBConstants.COLUMN_BARCODE\n            + \"=?\";\n\n    private static final String updateBookByIdQuery = \"UPDATE \" + BooksDBConstants.TABLE_BOOK + \" SET \"\n            + BooksDBConstants.COLUMN_NAME + \"=? , \"\n            + BooksDBConstants.COLUMN_AUTHOR + \"=?, \"\n            + BooksDBConstants.COLUMN_PRICE + \"=?, \"\n            + BooksDBConstants.COLUMN_QUANTITY + \"=? \"\n            + \"  WHERE \" + BooksDBConstants.COLUMN_BARCODE\n            + \"=?\";\n\n    @Override\n    public Book getBookById(String bookId) throws StoreException {\n        Book book = null;\n        Connection con = DBUtil.getConnection();\n        try {\n            PreparedStatement ps = con.prepareStatement(getBookByIdQuery);\n            ps.setString(1, bookId);\n            ResultSet rs = ps.executeQuery();\n\n            while (rs.next()) {\n                String bCode = rs.getString(1);\n                String bName = rs.getString(2);\n                String bAuthor = rs.getString(3);\n                int bPrice = rs.getInt(4);\n                int bQty = rs.getInt(5);\n\n                book = new Book(bCode, bName, bAuthor, bPrice, bQty);\n            }\n        } catch (SQLException e) {\n\n        }\n        return book;\n    }\n\n    @Override\n    public List<Book> getAllBooks() throws StoreException {\n        List<Book> books = new ArrayList<Book>();\n        Connection con = DBUtil.getConnection();\n\n        try {\n            PreparedStatement ps = con.prepareStatement(getAllBooksQuery);\n            ResultSet rs = ps.executeQuery();\n\n            while (rs.next()) {\n                String bCode = rs.getString(1);\n                String bName = rs.getString(2);\n                String bAuthor = rs.getString(3);\n                int bPrice = rs.getInt(4);\n                int bQty = rs.getInt(5);\n\n                Book book = new Book(bCode, bName, bAuthor, bPrice, bQty);\n                books.add(book);\n            }\n        } catch (SQLException e) {\n\n        }\n        return books;\n    }\n\n    @Override\n    public String deleteBookById(String bookId) throws StoreException {\n        String response = ResponseCode.FAILURE.name();\n        Connection con = DBUtil.getConnection();\n        try {\n            PreparedStatement ps = con.prepareStatement(deleteBookByIdQuery);\n            ps.setString(1, bookId);\n            int k = ps.executeUpdate();\n            if (k == 1) {\n                response = ResponseCode.SUCCESS.name();\n            }\n        } catch (Exception e) {\n            response += \" : \" + e.getMessage();\n            e.printStackTrace();\n        }\n        return response;\n    }\n\n    @Override\n    public String addBook(Book book) throws StoreException {\n        String responseCode = ResponseCode.FAILURE.name();\n        Connection con = DBUtil.getConnection();\n        try {\n            PreparedStatement ps = con.prepareStatement(addBookQuery);\n            ps.setString(1, book.getBarcode());\n            ps.setString(2, book.getName());\n            ps.setString(3, book.getAuthor());\n            ps.setDouble(4, book.getPrice());\n            ps.setInt(5, book.getQuantity());\n            int k = ps.executeUpdate();\n            if (k == 1) {\n                responseCode = ResponseCode.SUCCESS.name();\n            }\n        } catch (Exception e) {\n            responseCode += \" : \" + e.getMessage();\n            e.printStackTrace();\n        }\n        return responseCode;\n    }\n\n    @Override\n    public String updateBookQtyById(String bookId, int quantity) throws StoreException {\n        String responseCode = ResponseCode.FAILURE.name();\n        Connection con = DBUtil.getConnection();\n        try {\n            PreparedStatement ps = con.prepareStatement(updateBookQtyByIdQuery);\n            ps.setInt(1, quantity);\n            ps.setString(2, bookId);\n            ps.executeUpdate();\n            responseCode = ResponseCode.SUCCESS.name();\n        } catch (Exception e) {\n            responseCode += \" : \" + e.getMessage();\n            e.printStackTrace();\n        }\n        return responseCode;\n    }\n\n    @Override\n    public List<Book> getBooksByCommaSeperatedBookIds(String commaSeperatedBookIds) throws StoreException {\n        List<Book> books = new ArrayList<Book>();\n        Connection con = DBUtil.getConnection();\n        try {\n            String getBooksByCommaSeperatedBookIdsQuery = \"SELECT * FROM \" + BooksDBConstants.TABLE_BOOK\n                    + \" WHERE \" +\n                    BooksDBConstants.COLUMN_BARCODE + \" IN ( \" + commaSeperatedBookIds + \" )\";\n            PreparedStatement ps = con.prepareStatement(getBooksByCommaSeperatedBookIdsQuery);\n            ResultSet rs = ps.executeQuery();\n\n            while (rs.next()) {\n                String bCode = rs.getString(1);\n                String bName = rs.getString(2);\n                String bAuthor = rs.getString(3);\n                int bPrice = rs.getInt(4);\n                int bQty = rs.getInt(5);\n\n                Book book = new Book(bCode, bName, bAuthor, bPrice, bQty);\n                books.add(book);\n            }\n        } catch (SQLException e) {\n\n        }\n        return books;\n    }\n\n    @Override\n    public String updateBook(Book book) throws StoreException {\n        String responseCode = ResponseCode.FAILURE.name();\n        Connection con = DBUtil.getConnection();\n        try {\n            PreparedStatement ps = con.prepareStatement(updateBookByIdQuery);\n            ps.setString(1, book.getName());\n            ps.setString(2, book.getAuthor());\n            ps.setDouble(3, book.getPrice());\n            ps.setInt(4, book.getQuantity());\n            ps.setString(5, book.getBarcode());\n            ps.executeUpdate();\n            responseCode = ResponseCode.SUCCESS.name();\n        } catch (Exception e) {\n            responseCode += \" : \" + e.getMessage();\n            e.printStackTrace();\n        }\n        return responseCode;\n    }\n\n}\n",
    "last_modified": 1750403861.8624215,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  },
  {
    "file_path": "src/main/java/com/bittercode/service/impl/UserServiceImpl.java",
    "absolute_path": "/Users/thomaskamsker/Desktop/AKT_Docs/2025/AI/Cucocalc/code/onlinebookstore/src/main/java/com/bittercode/service/impl/UserServiceImpl.java",
    "file_type": "Java source file",
    "extension": ".java",
    "size_bytes": 3664,
    "content": "package com.bittercode.service.impl;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\nimport javax.servlet.http.HttpSession;\n\nimport com.bittercode.constant.ResponseCode;\nimport com.bittercode.constant.db.UsersDBConstants;\nimport com.bittercode.model.StoreException;\nimport com.bittercode.model.User;\nimport com.bittercode.model.UserRole;\nimport com.bittercode.service.UserService;\nimport com.bittercode.util.DBUtil;\n\npublic class UserServiceImpl implements UserService {\n\n    private static final String registerUserQuery = \"INSERT INTO \" + UsersDBConstants.TABLE_USERS\n            + \"  VALUES(?,?,?,?,?,?,?,?)\";\n\n    private static final String loginUserQuery = \"SELECT * FROM \" + UsersDBConstants.TABLE_USERS + \" WHERE \"\n            + UsersDBConstants.COLUMN_USERNAME + \"=? AND \" + UsersDBConstants.COLUMN_PASSWORD + \"=? AND \"\n            + UsersDBConstants.COLUMN_USERTYPE + \"=?\";\n\n    @Override\n    public User login(UserRole role, String email, String password, HttpSession session) throws StoreException {\n        Connection con = DBUtil.getConnection();\n        PreparedStatement ps;\n        User user = null;\n        try {\n            String userType = UserRole.SELLER.equals(role) ? \"1\" : \"2\";\n            ps = con.prepareStatement(loginUserQuery);\n            ps.setString(1, email);\n            ps.setString(2, password);\n            ps.setString(3, userType);\n            ResultSet rs = ps.executeQuery();\n            if (rs.next()) {\n                user = new User();\n                user.setFirstName(rs.getString(\"firstName\"));\n                user.setLastName(rs.getString(\"lastName\"));\n                user.setPhone(rs.getLong(\"phone\"));\n                user.setEmailId(email);\n                user.setPassword(password);\n                session.setAttribute(role.toString(), user.getEmailId());\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n        return user;\n    }\n\n    @Override\n    public boolean isLoggedIn(UserRole role, HttpSession session) {\n        if (role == null)\n            role = UserRole.CUSTOMER;\n        return session.getAttribute(role.toString()) != null;\n    }\n\n    @Override\n    public boolean logout(HttpSession session) {\n        session.removeAttribute(UserRole.CUSTOMER.toString());\n        session.removeAttribute(UserRole.SELLER.toString());\n        session.invalidate();\n        return true;\n    }\n\n    @Override\n    public String register(UserRole role, User user) throws StoreException {\n        String responseMessage = ResponseCode.FAILURE.name();\n        Connection con = DBUtil.getConnection();\n        try {\n            PreparedStatement ps = con.prepareStatement(registerUserQuery);\n            ps.setString(1, user.getEmailId());\n            ps.setString(2, user.getPassword());\n            ps.setString(3, user.getFirstName());\n            ps.setString(4, user.getLastName());\n            ps.setString(5, user.getAddress());\n            ps.setLong(6, user.getPhone());\n            ps.setString(7, user.getEmailId());\n            int userType = UserRole.SELLER.equals(role) ? 1 : 2;\n            ps.setInt(8, userType);\n            int k = ps.executeUpdate();\n            if (k == 1) {\n                responseMessage = ResponseCode.SUCCESS.name();\n                ;\n            }\n        } catch (Exception e) {\n            responseMessage += \" : \" + e.getMessage();\n            if (responseMessage.contains(\"Duplicate\"))\n                responseMessage = \"User already registered with this email !!\";\n            e.printStackTrace();\n        }\n        return responseMessage;\n    }\n\n}\n",
    "last_modified": 1750403861.8625078,
    "analysis_status": "failed",
    "error": "Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}"
  }
]