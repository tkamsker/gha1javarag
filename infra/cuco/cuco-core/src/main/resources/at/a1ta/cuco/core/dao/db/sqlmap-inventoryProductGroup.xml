<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="InventoryProductGroup">
  <typeAlias alias="inventoryProductGroup" type="at.a1ta.cuco.core.shared.dto.InventoryProductGroup"/>
  <typeAlias alias="product" type="at.a1ta.cuco.core.shared.dto.Product"/>
  <typeAlias alias="productLevel" type="at.a1ta.cuco.core.shared.dto.ProductLevel"/>
  <typeAlias alias="inventoryProductGroupAssignation" type="at.a1ta.cuco.core.shared.dto.InventoryProductGroupAssignation"/>
  <typeAlias alias="inventoryProductGroupUsage" type="at.a1ta.cuco.core.shared.dto.InventoryProductGroupUsage"/>
  
  <cacheModel type="ehcacheProvider" id="inventoryProductGroupCache">
    <flushOnExecute statement="InventoryProductGroup.Insert"/>
    <flushOnExecute statement="InventoryProductGroup.Update"/>
    <flushOnExecute statement="InventoryProductGroup.Delete"/>
    <flushOnExecute statement="InventoryProductGroup.MoveUp"/>
    <flushOnExecute statement="InventoryProductGroup.MoveDown"/>
    <flushOnExecute statement="InventoryProductGroup.MoveUpFrom"/>
    <flushInterval hours="1"/>
    <property name="size" value="1000"/>
  </cacheModel>

  <resultMap id="inventoryProductGroup-result" class="inventoryProductGroup">
	<result property="id" column="BESTAND_PRODUKTGRUPPE_ID" />
	<result property="name" column="NAME" />
	<result property="order" column="REIHUNG" />
	<result property="visible" column="SICHTBAR" />
	<result property="anb" column="ANB" />
  </resultMap>
  
  <resultMap id="inventoryProductGroupUsage-result" class="inventoryProductGroupUsage">
	<result property="name" column="NAME" />
	<result property="anb" column="ANB" />
	<result property="number" column="NUM" />
	<result property="order" column="REIHUNG" />
  </resultMap>
  
  <resultMap id="product-result" class="product">
	<result property="productId" column="SSA_PRODUKT_ID" />
	<result property="productDescription" column="PRODUKT_BES" />
  </resultMap>
  
  <resultMap id="productLevel-result" class="productLevel">
	<result property="productLevelId" column="PRODUKTEBENE_ID" />
	<result property="productLevelDescription" column="PRODUKTEBENE_BES" />
  </resultMap>
  
  <resultMap id="InventoryProductGroupAssignations-result" class="inventoryProductGroupAssignation">
	<result property="inventoryProductGroupId" column="BESTAND_PRODUKTGRUPPE_ID" />
	<result property="productId" column="SSA_PRODUKT_ID" />
	<result property="levelId" column="PRODUKTEBENE_ID" nullValue="0"/>
  </resultMap>
    
  <select id="Get" resultMap="inventoryProductGroup-result" parameterClass="java.lang.Long" cacheModel="inventoryProductGroupCache">
    SELECT * FROM CUCO_BESTAND_PRODUKTGRUPPE
    <isParameterPresent>
	  WHERE BESTAND_PRODUKTGRUPPE_ID=#id#
	</isParameterPresent>
	<isNotParameterPresent>
	  ORDER BY REIHUNG
	</isNotParameterPresent>
  </select>
  
  <select id="GetUsagesByPartyId" resultMap="inventoryProductGroupUsage-result" parameterClass="java.lang.Long">
  	SELECT /*+ parallel (BPPH,8) */ /*+ parallel (PH,8) *//*+ parallel (B,8) *//*+ parallel (BP,8) *//*+ parallel (R,8) */ BP.NAME, BP.ANB, COUNT(*) AS NUM, BP.REIHUNG
	FROM CUCO_BEST_PRODGRP_PROD_HIER BPPH, V_PRODUKT_HIERARCHIE PH, V_BESTAND B, CUCO_BESTAND_PRODUKTGRUPPE BP, V_RUFNUMMER R
	WHERE (BPPH.SSA_PRODUKT_ID=PH.SSA_PRODUKT_ID OR BPPH.PRODUKTEBENE_ID=PH.PRODUKTEBENE_1_ID OR BPPH.PRODUKTEBENE_ID=PH.PRODUKTEBENE_2_ID OR BPPH.PRODUKTEBENE_ID=PH.PRODUKTEBENE_3_ID OR BPPH.PRODUKTEBENE_ID=PH.PRODUKTEBENE_4_ID)
	  AND B.SSA_PRODUKT_ID=PH.SSA_PRODUKT_ID
	  AND BP.BESTAND_PRODUKTGRUPPE_ID=BPPH.BESTAND_PRODUKTGRUPPE_ID
	  AND BP.SICHTBAR=1
	  AND B.KUNDE_ID=#partyId#
	  AND R.VERTRAG_ID=B.VERTRAG_ID
      AND (((R.RUFNUMMERNSYSTEM_CD='TA' AND (B.PRODUKTKATEGORIE_TYP_CD='V' OR (B.PRODUKTKATEGORIE_TYP_CD='B' AND B.PRODUKT_BES IS NOT NULL))) 
           OR (R.RUFNUMMERNSYSTEM_CD<![CDATA[<>]]>'TA' AND B.PRODUKT_BES IS NOT NULL)))
	GROUP BY BP.NAME, BP.ANB, BP.REIHUNG
 </select>
 
 <select id="GetAnbSsaProductIds" resultClass="string">
  SELECT SSA_PRODUKT_ID
  FROM v_visible_products
  WHERE ANB=1
 </select>

  <insert id="Insert" parameterClass="inventoryProductGroup">
    <selectKey resultClass="long" keyProperty="id">SELECT SEQ_CUCO_BESTAND_PRODUKTGRUPPE.nextval AS id FROM dual</selectKey>
    INSERT INTO CUCO_BESTAND_PRODUKTGRUPPE(BESTAND_PRODUKTGRUPPE_ID, NAME, REIHUNG, SICHTBAR, ANB)
    VALUES (#id#, #name#, (SELECT COUNT(*) FROM CUCO_BESTAND_PRODUKTGRUPPE), #visible#, #anb#)
  </insert>
  
  <update id="Update" parameterClass="inventoryProductGroup">
    UPDATE CUCO_BESTAND_PRODUKTGRUPPE
    SET NAME=#name#,
      REIHUNG=#order#,
      SICHTBAR=#visible#,
      ANB=#anb#
    WHERE BESTAND_PRODUKTGRUPPE_ID=#id#
  </update>

  <delete id="Delete" parameterClass="long">
    DELETE FROM CUCO_BESTAND_PRODUKTGRUPPE
    WHERE BESTAND_PRODUKTGRUPPE_ID=#id#
  </delete>
  
  <select id="GetProductsForInventoryProductGroup" resultMap="product-result" parameterClass="java.lang.Long">
	select BPPH.SSA_PRODUKT_ID, PRODUKT_BES 
	from V_PRODUKT_HIERARCHIE PH, CUCO_BEST_PRODGRP_PROD_HIER BPPH
	where PH.SSA_PRODUKT_ID=BPPH.SSA_PRODUKT_ID
	and BESTAND_PRODUKTGRUPPE_ID=#id#
    order by PRODUKT_BES
  </select>
  
  <select id="GetProductLevelsForInventoryProductGroup" resultMap="productLevel-result" parameterClass="java.lang.Long">
	select DISTINCT BPPH.PRODUKTEBENE_ID, decode(
        BPPH.PRODUKTEBENE_ID, PH.PRODUKTEBENE_1_ID, ph.produktebene_1_bes,
                              PH.PRODUKTEBENE_2_ID, ph.produktebene_2_bes,
                              PH.PRODUKTEBENE_3_ID, ph.produktebene_3_bes,
                              PH.PRODUKTEBENE_4_ID, ph.produktebene_4_bes
    ) AS PRODUKTEBENE_BES
    from V_PRODUKT_HIERARCHIE PH, CUCO_BEST_PRODGRP_PROD_HIER BPPH
    where (PH.PRODUKTEBENE_1_ID=BPPH.PRODUKTEBENE_ID OR PH.PRODUKTEBENE_2_ID=BPPH.PRODUKTEBENE_ID OR PH.PRODUKTEBENE_3_ID=BPPH.PRODUKTEBENE_ID OR PH.PRODUKTEBENE_4_ID=BPPH.PRODUKTEBENE_ID) 
    and BESTAND_PRODUKTGRUPPE_ID=#id#
    order by 2
  </select>
  
  <select id="getInventoryProductGroupAssignations" resultMap="InventoryProductGroupAssignations-result">
    SELECT * FROM CUCO_BEST_PRODGRP_PROD_HIER
  </select>
  
  <insert id="AddProduct" parameterClass="java.util.Map">
    INSERT INTO CUCO_BEST_PRODGRP_PROD_HIER(BESTAND_PRODUKTGRUPPE_ID, SSA_PRODUKT_ID)
    VALUES (#inventoryProductGroupId#, #productId#)
  </insert>
  
  <insert id="AddLevel" parameterClass="java.util.Map">
    INSERT INTO CUCO_BEST_PRODGRP_PROD_HIER(BESTAND_PRODUKTGRUPPE_ID, PRODUKTEBENE_ID)
    VALUES (#inventoryProductGroupId#, #levelId#)
  </insert>
  
  <delete id="RemoveProduct" parameterClass="java.util.Map">
    DELETE FROM CUCO_BEST_PRODGRP_PROD_HIER
    WHERE BESTAND_PRODUKTGRUPPE_ID=#inventoryProductGroupId# AND SSA_PRODUKT_ID=#productId#
  </delete>
  
  <delete id="RemoveLevel" parameterClass="java.util.Map">
    DELETE FROM CUCO_BEST_PRODGRP_PROD_HIER
    WHERE BESTAND_PRODUKTGRUPPE_ID=#inventoryProductGroupId# AND PRODUKTEBENE_ID=#levelId#
  </delete>
  
  <update id="MoveUp" parameterClass="java.lang.Integer">
    UPDATE CUCO_BESTAND_PRODUKTGRUPPE
    SET REIHUNG = decode (REIHUNG, #order#, #order# - 1,
    							   #order# - 1 , #order#)
    WHERE REIHUNG=#order# OR REIHUNG=#order# - 1
  </update>
  
  <update id="MoveDown" parameterClass="java.lang.Integer">
    UPDATE CUCO_BESTAND_PRODUKTGRUPPE
    SET REIHUNG = decode (REIHUNG, #order#, #order# + 1,
    							   #order# + 1 , #order#)
    WHERE REIHUNG=#order# OR REIHUNG=#order# + 1
  </update>
  
  <update id="MoveUpFrom" parameterClass="java.lang.Integer">
    UPDATE CUCO_BESTAND_PRODUKTGRUPPE
    SET REIHUNG = REIHUNG - 1
    WHERE REIHUNG>=#order#
  </update>

</sqlMap>