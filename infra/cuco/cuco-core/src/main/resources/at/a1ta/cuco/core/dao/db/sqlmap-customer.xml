<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Customer">
<typeAlias alias="Opportunity" type="at.a1ta.cuco.cct.shared.dto.Opportunity" />
  <typeAlias alias="ehcacheProvider" type="at.a1ta.bite.sqlmap.engine.chache.ehcache.EhCacheController" />

  <cacheModel id="customer-cache" type="ehcacheProvider" readOnly="true">
    <flushInterval hours="3" />
    <flushOnExecute statement="Customer.insert" />
    <flushOnExecute statement="Customer.update" />
    <property name="cache-size" value="1000" />
  </cacheModel>

  <!-- EXPERIMENTAL: EhCache -->
  <!-- <typeAlias alias="cacheProvider" type="at.a1ta.bite.sqlmap.engine.chache.ehcache.EhCacheController" /> 
  <cacheModel id="customer-cache" type="cacheProvider" readOnly="true" serialize="false">
    <flushInterval hours="3" />
    <flushOnExecute statement="Customer.insert" />
    <flushOnExecute statement="Customer.update" />
  </cacheModel>
  -->

  <cacheModel id="customer-list-chache" type="ehcacheProvider" readOnly="true" serialize="false">
    <flushInterval hours="2" />
    <property name="cache-size" value="100" />
  </cacheModel>

  <cacheModel type="ehcacheProvider" id="segment-cache" readOnly="true" serialize="false">
    <flushInterval hours="1" />
    <property name="cache-size" value="20" />
  </cacheModel>

  <cacheModel type="ehcacheProvider" id="mycuco-customer-cache">
    <flushInterval minutes="10" />
    <property name="cache-size" value="200" />
  </cacheModel>

  <resultMap id="customer-result" class="at.a1ta.cuco.core.shared.dto.Party">
    <result property="id" column="kunde_id" />
    <result property="headerId" column="header_id" />
    <result property="customerType" column="kunde_typ_cd" />
    <result property="businessSegment" column="seg_cd" />
    <result property="title" column="titel_bes" />
    <result property="gender" column="geschlecht_cd" />
    <result property="salutation" column="anrede_bes" />
    <result property="firstname" column="kunde_vorname" />
    <result property="lastname" column="kunde_nam" />
    <result property="country" column="staat_cd" />
    <result property="city" column="hauptort" />
    <result property="village" column="ort" />
    <result property="country" column="staat_cd" />
    <result property="poBox" column="plz" />
    <result property="street" column="strasse" />
    <result property="housenumber" column="hausnummer" />
    <result property="birthdate" column="GEBURT_DAT" />
    <result property="contactPhoneNumber1" column="KONTAKTRUFNUMMER_1" />
    <result property="contactPhoneNumber2" column="KONTAKTRUFNUMMER_2" />
    <result property="mobilePhoneNumber" column="MOBIL_NR" />
    <result property="eMailAddress" column="EMAIL" />
    <result property="region" column="REGION_DS" />
    <result property="teamName" column="TEAM_DS" />
    <result property="supportUserName" column="BETREUER_NAM" />
    <result property="supportUserId" column="betreuer_uuser_cd" />
    <result property="customerWorthclass" column="KUNDENWERT_KLASSE_CD" />
    <result property="listedInFramework" column="FRAMEWORK_JN" typeHandler="at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler" />
    <result property="cooperationDescription" column="KOOPERATION_BES" />
    <result property="commercialRegisterNumber" column="FIRMENBUCHNUMMER" />
    <result property="centralAssociationNumber" column="VEREINSREGISTER_CD" />
    <result property="deliveryBlock" column="LIEFERSPERRE_JN" typeHandler="at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler" />
    <result property="commercialSector" column="BRANCHE_BES" />
    <result property="nrEmployees" column="MITARBEITER_ANZ" />
    <result property="contactPersonLastName" column="AP_NAM" />
    <result property="contactPersonFirstName" column="AP_VORNAME" />
    <result property="contactPersonGender" column="AP_GESCHLECHT_CD" />
    <result property="contactPersonSalutation" column="AP_ANREDE_BES" />
    <result property="contactPersonTitle" column="AP_TITEL_BES" />
    <result property="faxNumber" column="FAX_NR" />
    <result property="homepageAddress" column="HOMEPAGE" />
    <result property="onRobinsonlist" column="ROBINSONLISTE_JN" typeHandler="at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler" />
    <result property="onBlacklist" column="BLACKLIST_JN" typeHandler="at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler" />
    <result property="creditworthiness" column="BONITAETSCORING_CD" />
    <result property="vipStatus" column="VIP_JN" typeHandler="at.a1ta.cuco.core.dao.util.VIPStatusHandler" />
    <result property="indexation" column="CPI_STATUS" />
    <result property="idxStatus" column="CPI_STATUS"  typeHandler="at.a1ta.cuco.core.dao.util.IdxStatusDBMappingHandler" />
  </resultMap>

  <resultMap id="customer-result-hierarchy" class="at.a1ta.cuco.core.shared.dto.Party">
    <result property="id" column="kunde_id" />
    <result property="headerId" column="header_id" />
    <result property="lastname" column="kunde_nam" />
  </resultMap>

  <resultMap id="customer-result-full" class="at.a1ta.cuco.core.shared.dto.Party" extends="customer-result">
    <result property="productUsagePPC" column="PRODUKT_NUTZUNG_PPC_CD" />
    <result property="churnLikeliness" column="churngefahr_cd" />
    <result property="currentBinding" column="BINDUNG_BES" />
    <result property="currentBindingRuntime" column="bindung_cd" />
    <result property="timestamp" column="ANLAGE_TS" />
    <result property="hasOpenOffer" column="ANGEBOT_IN_CLARIFY_OFFEN_JN" typeHandler="at.a1ta.cuco.core.dao.util.YNBooleanTypeHandler" />
    <result property="type" column="dual_segment" nullValue="0" />
    <result property="kumsSkzShop" column="betreuende_stelle_cd" select="KumsSkzShop.getShop" />
  </resultMap>

  <resultMap id="customer-result-mycuco" class="at.a1ta.cuco.core.shared.dto.Party">
    <result property="id" column="kunde_id" />
    <result property="businessSegment" column="seg_cd" />
    <result property="gender" column="geschlecht_cd" />
    <result property="firstname" column="kunde_vorname" />
    <result property="lastname" column="kunde_nam" />
    <result property="country" column="staat_cd" />
    <result property="city" column="ort" />
    <result property="poBox" column="plz" />
    <result property="street" column="strasse" />
    <result property="housenumber" column="hausnummer" />
    <result property="birthdate" column="GEBURT_DAT" />
    <result property="supportUserId" column="betreuer_uuser_cd" />
    <result property="customerWorthclass" column="KUNDENWERT_KLASSE_CD" />
    <result property="commercialRegisterNumber" column="FIRMENBUCHNUMMER" />
    <result property="creditworthiness" column="BONITAETSCORING_CD" />
    <result property="vipStatus" column="VIP_JN" typeHandler="at.a1ta.cuco.core.dao.util.VIPStatusHandler" />
    <result property="churnLikeliness" column="churngefahr_cd" />
    <result property="type" column="dual_segment" nullValue="0" />
    <result property="turnover" column="umsatz" />
    <result property="flashInfoCount" column="flashinfos" />
    <result property="maxMobileChurnLikeliness" column="churngefahr_mobil_cd" />
    <result property="indexation" column="CPI_STATUS" />
    <result property="idxStatus" column="CPI_STATUS"  typeHandler="at.a1ta.cuco.core.dao.util.IdxStatusDBMappingHandler" />
    <result property="availableVbmProducts"
      column="{customerId=kunde_id, productId=productId}"
      select="vbmProducts.listAvailableOffersForKunde" /> 
  </resultMap>

  <resultMap class="at.a1ta.cuco.core.shared.dto.Tupel" id="turnoverResult">
    <result property="value1" column="kunde_id" javaType="long" />
    <result property="value2" column="umsatz" />
  </resultMap>

  <resultMap id="customer-result-search" class="at.a1ta.cuco.core.shared.dto.Party">
    <result property="id" column="kunde_id" />
    <result property="businessSegment" column="seg_cd" />
    <result property="gender" column="geschlecht_cd" />
    <result property="firstname" column="kunde_vorname" />
    <result property="lastname" column="kunde_nam" />
    <result property="city" column="hauptort" />
    <result property="village" column="ort" />
    <result property="poBox" column="plz" />
    <result property="street" column="strasse" />
    <result property="housenumber" column="hausnummer" />
    <result property="birthdate" column="GEBURT_DAT" />
    <result property="type" column="dual_segment" nullValue="0" />
    <result property="supportUserName" column="BETREUER_NAM" />
    <result property="supportUserId" column="betreuer_uuser_cd" />
    <result property="country" column="staat_cd" />
  </resultMap>
  
  <resultMap id="noncustomer-result-search" class="at.a1ta.cuco.core.shared.dto.Party">
    <result property="leadId" column="lead_id" />
    <result property="leadNote" column="note" />
    <result property="gender" column="gender_cd" />
    <result property="salutation" column="salutation_cd" />
    <result property="businessSegment" column="seg_cd" />
    <result property="firstname" column="lead_vorname" />
    <result property="lastname" column="lead_nachnam" />
    <result property="city" column="ort" />
    <result property="poBox" column="plz" />
    <result property="street" column="strasse" />
    <result property="housenumber" column="hausnummer" />
    <result property="birthdate" column="GEBURT_DAT" />
    <result property="country" column="staat_cd" />
    <result property="type" column="dual_segment" nullValue="9" />
     <result property="supportUserName" column="betreuer_nam" />
    <result property="supportUserId" column="betreuer_uuser_cd" />
     <result property="vipStatus" column="VIP_JN" typeHandler="at.a1ta.cuco.core.dao.util.VIPStatusHandler" />
  </resultMap>

  <resultMap id="customer-type-count" class="java.util.HashMap">
    <result property="key" column="type" />
    <result property="value" column="count" />
  </resultMap>

  <resultMap id="customer-worth-count" class="java.util.HashMap">
    <result property="key" column="wert" />
    <result property="value" column="count" />
  </resultMap>

  <sql id="attributes_v_kunde_detail">
    v_kunde_detail.produkt_nutzung_ppc_cd, v_kunde_detail.churngefahr_cd,
    v_kunde_detail.letzter_persoenl_kontakt_dat, v_kunde_detail.letzter_telefon_kontakt_dat, v_kunde_detail.letzter_kauf_dat,
    v_kunde_detail.lk_verkaufsbuero_bes, v_kunde_detail.lk_verkaufsgruppe_bes, v_kunde_detail.lk_verkaeufer_bes,
    v_kunde_detail.lk_produkt_bes, v_kunde_detail.letzte_beschwerde_dat, v_kunde_detail.letzte_beschwerde_bes,
    v_kunde_detail.letzte_kuendigung_dat, v_kunde_detail.letzte_kuendigung_produkt_bes, v_kunde_detail.angebot_in_clarify_offen_jn,
    v_kunde_detail.bindung_bes, v_kunde_detail.bindung_cd, v_kunde_detail.dual_segment
  </sql>

  <sql id="attributes_v_kunde">
    v_kunde.header_id, v_kunde.kunde_id, seg_cd, v_kunde.kunde_typ_cd,
    v_kunde.titel_bes, v_kunde.geschlecht_cd, v_kunde.anrede_bes,
    v_kunde.kunde_vorname, v_kunde.kunde_nam, v_kunde.staat_cd,
    v_kunde.ort, v_kunde.hauptort , v_kunde.plz, v_kunde.strasse,
    v_kunde.hausnummer, v_kunde.geburt_dat, v_kunde.firmenbuchnummer, v_kunde.vereinsregister_cd,
    v_kunde.branche_bes, v_kunde.mitarbeiter_anz, v_kunde.region_ds,
    v_kunde.team_ds, v_kunde.betreuer_nam, v_kunde.betreuer_uuser_cd,
    v_kunde.kontaktrufnummer_1, v_kunde.kontaktrufnummer_2,
    v_kunde.ap_nam, v_kunde.ap_vorname, v_kunde.ap_geschlecht_cd,
    v_kunde.ap_anrede_bes, v_kunde.ap_titel_bes, v_kunde.email,
    v_kunde.mobil_nr, v_kunde.fax_nr, v_kunde.homepage,
    v_kunde.robinsonliste_jn, v_kunde.blacklist_jn, v_kunde.kundenwert_klasse_cd,
    v_kunde.liefersperre_jn, v_kunde.bonitaetscoring_cd,
    v_kunde.framework_jn, v_kunde.kooperation_bes, v_kunde.anlage_ts,
    v_kunde.vip_jn, v_kunde.betreuende_stelle_cd,v_kunde.CPI_STATUS
  </sql>

  <!-- Get the customer with all required attributes from database -->
  <select id="loadParties" resultMap="customer-result-full" cacheModel="customer-cache">
    SELECT
    <include refid="attributes_v_kunde" />
    ,
    <include refid="attributes_v_kunde_detail" />
    FROM v_kunde
    LEFT OUTER JOIN v_kunde_detail ON v_kunde.kunde_id = v_kunde_detail.kunde_id
    LEFT OUTER JOIN cuco_kunde_erweitert ON v_kunde.kunde_id = cuco_kunde_erweitert.kunde_id
    <isParameterPresent>
      WHERE v_kunde.kunde_id IN
      <iterate open="(" close=")" conjunction="," property="partyIds">#partyIds[]#</iterate>
    </isParameterPresent>
  </select>

  <!-- Get the customer with all required attributes from database -->
  <select id="loadParty" resultMap="customer-result-full" parameterClass="long" cacheModel="customer-cache">
    SELECT
    <include refid="attributes_v_kunde" />
    ,
    <include refid="attributes_v_kunde_detail" />
    FROM v_kunde
    LEFT OUTER JOIN v_kunde_detail ON v_kunde.kunde_id = v_kunde_detail.kunde_id
    LEFT OUTER JOIN cuco_kunde_erweitert ON v_kunde.kunde_id = cuco_kunde_erweitert.kunde_id
    <isParameterPresent>
      WHERE v_kunde.kunde_id = #partyId#
    </isParameterPresent>
  </select>

  <!-- Get the header of a customer with given id -->
  <select id="GetHeader4CustomerId" resultMap="customer-result" parameterClass="java.lang.Long" cacheModel="customer-cache">
    SELECT
    <include refid="attributes_v_kunde" />
    FROM v_kunde
    <isParameterPresent>
      WHERE kunde_id = (SELECT DISTINCT header_id FROM v_kunde WHERE kunde_id = #kunde_id#)
    </isParameterPresent>
  </select>

  <!-- Get the list of customers having a common given header -->
  <select id="GetCustomer4Header" resultMap="customer-result" parameterClass="java.lang.Long" cacheModel="customer-cache">
    SELECT
    <include refid="attributes_v_kunde" />
    FROM v_kunde
    <isParameterPresent>
      WHERE header_id = #header_id#
      AND kunde_id &lt;&gt; #header_id#
    </isParameterPresent>
  </select>

  <select id="CountCustomer4Header" resultClass="java.lang.Integer" parameterClass="java.lang.Long" cacheModel="customer-cache">
    SELECT count(kunde_id)
    FROM v_kunde
    <isParameterPresent>
      WHERE header_id = #header_id#
      AND kunde_id &lt;&gt; #header_id#
    </isParameterPresent>
  </select>

  <select id="GetCustomerByHeaderId" resultMap="customer-result" parameterClass="java.lang.Long" cacheModel="customer-cache">
    SELECT
    <include refid="attributes_v_kunde" />
    FROM v_kunde
    <isParameterPresent>
      WHERE header_id = #header_id#
      AND kunde_id = header_id
    </isParameterPresent>
  </select>

  <select id="getHierarchy" resultMap="customer-result-hierarchy" parameterClass="java.lang.Long" cacheModel="customer-cache">
    SELECT header_id, kunde_id, kunde_nam
    FROM v_kunde
    CONNECT BY NOCYCLE PRIOR kunde_id = header_id
    START WITH kunde_id = (
    SELECT header_id from (
    SELECT rownum rnum, header_id
    FROM v_kunde
    CONNECT BY NOCYCLE PRIOR header_id=kunde_id
    START WITH kunde_id = #partyId#
    )
    where rnum = (
    SELECT count(1)
    FROM v_kunde
    CONNECT BY NOCYCLE PRIOR header_id=kunde_id
    start with kunde_id = #partyId#
    )
    )
    ORDER
    SIBLINGS BY kunde_nam
  </select>

<select id="SearchNonCustomerNonMerged" resultMap="noncustomer-result-search" parameterClass="at.a1ta.cuco.core.shared.dto.PartySearch" fetchSize="300">
    SELECT '9' as dual_segment,lead.*,'N' as VIP_JN
    FROM lead 
    <dynamic prepend="WHERE">
        lead_id is NOT NULL AND
      <isNotEmpty prepend="AND" property="leadId">
        LOWER(lead_id)=LOWER(#leadId#)
      </isNotEmpty> 
        <isNotNull prepend="AND" property="id">
          LOWER(lead_id) like LOWER('%$id$%')
       </isNotNull>
      <isNotEmpty prepend="AND" property="supportUserId">
        LOWER(betreuer_uuser_cd)=LOWER(#supportUserId#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="lastName">
        LOWER(lead_nachnam) LIKE LOWER(#lastName#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="firstName">
        LOWER(lead_vorname) LIKE LOWER(#firstName#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="postcode">
         LOWER(plz) LIKE LOWER(#postcode#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="city">
        LOWER(ort) LIKE LOWER(#city#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="country">
        LOWER(staat_cd) = LOWER(#country#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="street">
        LOWER(strasse) LIKE LOWER(#street#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="houseNumber">
        LOWER(hausnummer) LIKE LOWER(#houseNumber#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="commercialRegisterNumber">
        LOWER(firmenbuchnummer) LIKE LOWER(#commercialRegisterNumber#)
      </isNotEmpty>
      and MERGED_WITH_CUSTOMER='0'
      order by lead_nachnam, lead_vorname
    </dynamic>
  </select>
  
  <select id="SearchNonCustomerAll" resultMap="noncustomer-result-search" parameterClass="at.a1ta.cuco.core.shared.dto.PartySearch" fetchSize="300">
    SELECT '9' as dual_segment,lead.*,'N' as VIP_JN
    FROM lead 
    <dynamic prepend="WHERE">
        lead_id is NOT NULL AND
       <isNotEmpty prepend="AND" property="supportUserId">
        LOWER(betreuer_uuser_cd)=LOWER(#supportUserId#)
      </isNotEmpty>
      
       <isNotNull prepend="AND" property="id">
          LOWER(lead_id) like LOWER('%$id$%')
       </isNotNull>
      <isNotEmpty prepend="AND" property="leadId">
        LOWER(lead_id) like lower('%$leadId$%')
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="lastName">
        LOWER(lead_nachnam) LIKE LOWER(#lastName#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="firstName">
        LOWER(lead_vorname) LIKE LOWER(#firstName#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="postcode">
        LOWER(plz) LIKE LOWER(#postcode#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="city">
        LOWER(ort) LIKE LOWER(#city#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="country">
        LOWER(staat_cd) = LOWER(#country#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="street">
        LOWER(strasse) LIKE LOWER(#street#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="houseNumber">
        LOWER(hausnummer) LIKE LOWER(#houseNumber#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="commercialRegisterNumber">
        LOWER(firmenbuchnummer) LIKE LOWER(#commercialRegisterNumber#)
      </isNotEmpty>
      and MERGED_WITH_CUSTOMER='0'
      order by lead_nachnam, lead_vorname
    </dynamic>
  </select>
  
  <resultMap class="Opportunity" id="opportunity-minimal">
    <result property="id" column="opportunity_id"/>
    <result property="partyId" column="party_id"/>
    <result property="leadId" column="lead_id"/>
  </resultMap>
  
  <select id="getPartyIdForQuoteNumber" resultClass="java.lang.String" parameterClass="java.lang.String">
   select CASE WHEN opportunity.party_id = '0' or opportunity.party_id is null 
                          THEN opportunity.lead_id 
                       ELSE cast(opportunity.party_id as varchar(20)) 
                    END as party_id_str from CCT_OPPORTUNITY opportunity,CCT_QUOTE quote 
   where quote.OPPORTUNITY_ID = opportunity.OPPORTUNITY_ID and quote.QUOTE_NUMBER=#offerNumber#
   </select>

  <select id="SearchCustomer" resultMap="customer-result-search" parameterClass="at.a1ta.cuco.core.shared.dto.PartySearch" cacheModel="customer-list-chache" fetchSize="300">
    SELECT /*+ parallel (v_kunde,8) */ /*+ parallel (v_kunde_detail,8) */
    v_kunde.kunde_id, seg_cd, v_kunde.kunde_vorname, v_kunde.kunde_nam,
    v_kunde.ort, v_kunde.HAUPTORT , v_kunde.staat_cd , v_kunde.plz, v_kunde.strasse,v_kunde.betreuer_nam, v_kunde.betreuer_uuser_cd,
    v_kunde.hausnummer, v_kunde.geschlecht_cd,v_kunde.geburt_dat, v_kunde_detail.dual_segment
    FROM v_kunde, v_kunde_detail
    <dynamic>
      <isNotEmpty property="lkz">, v_rufnummer</isNotEmpty>
      <isEmpty property="lkz">
        <isNotEmpty property="okz">, v_rufnummer</isNotEmpty>
        <isEmpty property="okz">
          <isNotEmpty property="callNumber">, v_rufnummer</isNotEmpty>
        </isEmpty>
      </isEmpty>
    </dynamic>
    <dynamic prepend="WHERE">
      v_kunde.kunde_id = v_kunde_detail.kunde_id AND
      <isNull prepend="AND" property="id">
        v_kunde.kunde_nam IS NOT NULL
      </isNull>
      <isNotNull prepend="AND" property="id">
        v_kunde.kunde_id = #id#
      </isNotNull>
      <isNotEmpty prepend="AND" property="lastName">
        LOWER(v_kunde.kunde_nam) LIKE LOWER(#lastName#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="firstName">
        LOWER(v_kunde.kunde_vorname) LIKE LOWER(#firstName#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="postcode">
        LOWER(plz) LIKE LOWER(#postcode#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="city">
       ( 
       LOWER(hauptort) LIKE LOWER(#city#)
      </isNotEmpty>
      <isNotEmpty prepend="OR" property="city">
        LOWER(ORT) LIKE LOWER(#city#)
        )
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="country">
        LOWER(staat_cd) = LOWER(#country#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="street">
        LOWER(strasse) LIKE LOWER(#street#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="houseNumber">
        LOWER(hausnummer) LIKE LOWER(#houseNumber#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="lkz">
        v_kunde.kunde_id = v_rufnummer.kunde_id
        and
        v_rufnummer.lkz = #lkz#
        <isNotEmpty prepend="AND" property="okz">
          v_rufnummer.onkz=#okz#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="callNumber">
          v_rufnummer.tn_num LIKE (#callNumber#)
        </isNotEmpty>
      </isNotEmpty>
      <isEmpty property="lkz">
        <isNotEmpty prepend="AND" property="okz">
          v_kunde.kunde_id = v_rufnummer.kunde_id
          and
          v_rufnummer.onkz=#okz#
          <isNotEmpty prepend="AND" property="callNumber">
            v_rufnummer.tn_num LIKE (#callNumber#)
          </isNotEmpty>
        </isNotEmpty>
        <isEmpty property="okz">
          <isNotEmpty prepend="AND" property="callNumber">
            v_kunde.kunde_id = v_rufnummer.kunde_id
            and
            v_rufnummer.tn_num LIKE (#callNumber#)
          </isNotEmpty>
        </isEmpty>
      </isEmpty>
      <isNotEmpty prepend="AND" property="billingAccountNumber">
        v_kunde.kunde_id in (select distinct kunde_id from v_rufnummer where ban_id = #billingAccountNumber#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="aonAccountNumber">
        v_kunde.kunde_id in (select distinct kunde_id from v_bestand where aon_kundennummer_id = #aonAccountNumber#)
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="commercialRegisterNumber">
        LOWER(firmenbuchnummer) LIKE LOWER(#commercialRegisterNumber#)
      </isNotEmpty>
      order by v_kunde.kunde_nam, v_kunde.kunde_vorname
    </dynamic>
  </select>

  <select id="GetMobilkomIds" resultClass="java.util.HashMap" parameterClass="java.lang.Long">
    SELECT mk_kunde_id, status_cd
    FROM v_mobilkomkunde
    WHERE kunde_id = #customerId#
  </select>

  <select id="IsSubsidised" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
    SELECT count(1)
    FROM v_bestand
    WHERE kunde_id = #customerId#
    AND produkt_bes IN
    <iterate open="(" close=")" conjunction="," property="tarifs">#tarifs[]#</iterate>
  </select>

  <select id="getAllSegments" resultClass="java.lang.String" cacheModel="segment-cache">
    select distinct(seg_cd) from v_kunde where seg_cd is not null
  </select>

  <insert id="insert" parameterClass="at.a1ta.cuco.core.shared.dto.Party">
    insert into cuco_kunde_erweitert(kunde_id, vip_tooltip)
    VALUES (#id#,#vipTooltip#)
  </insert>

  <update id="update" parameterClass="at.a1ta.cuco.core.shared.dto.Party">
    update cuco_kunde_erweitert set vip_tooltip=#vipTooltip# where kunde_id=#id#
  </update>

  <select id="GetNumberOfCustomersForSupportUser" resultClass="java.lang.Integer" parameterClass="java.lang.String" cacheModel="mycuco-customer-cache">
    select count(*)
    from kunde_gesamt
    where LOWER(betreuer_uuser_cd)=LOWER(#uUser#)
    
  </select>

  <select id="GetNumberOfCustomersWithChurnForSupportUser" resultClass="java.lang.Integer" parameterClass="java.lang.String" cacheModel="mycuco-customer-cache">
    SELECT COUNT(*)
    FROM kunde_gesamt
    WHERE churngefahr_cd in ('1. Sehr Hoch','2. Hoch','3. Mittel','4. Niedrig')
    AND LOWER(betreuer_uuser_cd)=LOWER(#uUser#)
  </select>
 <select id="GetNumberOfCustomersWithIndexationForSupportUser" resultClass="java.lang.Integer" parameterClass="java.lang.String" cacheModel="mycuco-customer-cache">
    SELECT COUNT(*)
    FROM kunde_gesamt kg,v_kunde k
    WHERE 
    kg.kunde_id=k.kunde_id
    AND
    k.cpi_status in ('INDEXED_PRODUCTS','INDEXED_PRODUCTS_NOT_USED','EXCLUDED')
    AND LOWER(kg.betreuer_uuser_cd)=LOWER(#uUser#)
  </select>
  <select id="GetNumberOfCustomersWithFlashInfosForSupportUser" resultClass="java.lang.Integer" parameterClass="java.lang.String">
    SELECT COUNT(*)
    FROM kunde_gesamt k, cuco_flash_kunde fk
    WHERE k.kunde_id=fk.kunde_id AND LOWER(betreuer_uuser_cd)=LOWER(#uUser#)
  </select>

  <select id="GetNumberOfCustomersWithVIPForSupportUser" resultClass="java.lang.Integer" parameterClass="java.lang.String" cacheModel="mycuco-customer-cache">
    SELECT COUNT(*)
    FROM kunde_gesamt
    WHERE vip_jn='J' and LOWER(betreuer_uuser_cd)=LOWER(#uUser#)
  </select>
  
  <select id="GetNumberOfCustomersWithVBMForSupportUser" resultClass="java.lang.Integer" parameterClass="java.lang.String" cacheModel="mycuco-customer-cache">
    SELECT count(distinct(kunde_gesamt.KUNDE_ID))
    FROM  VBM_SCORING , kunde_gesamt
    WHERE LOWER(kunde_gesamt.betreuer_uuser_cd)=LOWER(#uUser#) and VBM_SCORING.KUNDE_ID=kunde_gesamt.KUNDE_ID
    AND VBM_SCORING.SCORING &gt;= (SELECT value FROM bite_setting where key='vbm.scoring.threshold')
  </select>

  <select id="GetNumberOfCustomersByTypeForSupportUser" resultMap="customer-type-count" parameterClass="java.lang.String" cacheModel="mycuco-customer-cache">
    SELECT dual_segment as type, COUNT(*) as count
    FROM kunde_gesamt
    WHERE LOWER(betreuer_uuser_cd)=LOWER(#uUser#)
    GROUP BY dual_segment
  </select>

  <select id="GetNumberOfCustomersByWorthclassForSupportUser" resultMap="customer-worth-count" parameterClass="java.lang.String" cacheModel="mycuco-customer-cache">
    SELECT kundenwert_klasse_cd AS wert, COUNT(*) as count
    FROM kunde_gesamt k
    WHERE LOWER(betreuer_uuser_cd)=LOWER(#uUser#)
    GROUP BY kundenwert_klasse_cd
  </select>

  <select id="GetNumberOfCustomersInTurnoverRangeForSupportUser" resultMap="turnoverResult" parameterClass="string" fetchSize="5000" cacheModel="mycuco-customer-cache">
    SELECT kunde_id, umsatz
    FROM kunde_gesamt
    WHERE LOWER(betreuer_uuser_cd)=LOWER(#uUser#)
  </select>

  <select id="GetCustomerIdsForSupportUser" resultClass="java.lang.Long" parameterClass="java.lang.String" fetchSize="5000" cacheModel="mycuco-customer-cache">
    SELECT k.kunde_id
    FROM v_kunde k
    WHERE LOWER(betreuer_uuser_cd)=LOWER(#uUser#)
  </select>

  <select id="FilterCustomersForSupportUser" resultMap="customer-result-mycuco" parameterClass="java.util.HashMap" fetchSize="5000" >
    SELECT kg.*, (select count(1) from cuco_flash_kunde fk where fk.kunde_id=kg.kunde_id) as flashinfos,k.cpi_status,#productId# as productId
    FROM kunde_gesamt kg ,v_kunde k
    WHERE 
    kg.kunde_id=k.kunde_id
    and
    LOWER(kg.betreuer_uuser_cd)=LOWER(#uUser#)
    <isEqual prepend="AND" property="flash" compareValue="FLASH">
      kg.kunde_id IN (select kunde_id from cuco_flash_kunde)
    </isEqual>
    <isEqual prepend="AND" property="flash" compareValue="NOFLASH">
      kg.kunde_id NOT IN (select kunde_id from cuco_flash_kunde)
    </isEqual>
    <isEqual prepend="AND" property="churn" compareValue="DANGER">
      ((kg.churngefahr_cd&lt;&gt;'(unbekannt)' and kg.churngefahr_cd&lt;&gt;'5. Kein') or (kg.churngefahr_mobil_cd is not null))
    </isEqual>
    <isEqual prepend="AND" property="churn" compareValue="NODANGER">
      ((kg.churngefahr_cd='(unbekannt)' or kg.churngefahr_cd='5. Kein') and kg.churngefahr_mobil_cd is null)
    </isEqual>
    <isEqual prepend="AND" property="indexation" compareValue="MitIndexierung">
     k.cpi_status='INDEXED_PRODUCTS'
    </isEqual>
    <isEqual prepend="AND" property="indexation" compareValue="MitIndexanpassung">
     k.cpi_status='INDEXED_PRODUCTS_NOT_USED'
    </isEqual>
    <isEqual prepend="AND" property="indexation" compareValue="OhneIndexierung">
     k.cpi_status='EXCLUDED'
    </isEqual>
    <isEqual prepend="AND" property="vip" compareValue="VIP">
      kg.vip_jn='J'
    </isEqual>
    <isEqual prepend="AND" property="vip" compareValue="NOVIP">
      kg.vip_jn='N'
    </isEqual>
    <isNotNull prepend="AND" property="partyId">
      to_char(kg.kunde_id) like '%$partyId$%'
    </isNotNull>
    <isNotNull prepend="AND" property="plz">
      to_char(kg.plz) like  #plz# || '%'
    </isNotNull>

    <iterate prepend="AND" property="dualSegments" open="(" close=")" conjunction="OR">
      kg.dual_segment=#dualSegments[]#
    </iterate>
    <iterate prepend="AND" property="worthClasses" open="(" close=")" conjunction="OR">
      kg.KUNDENWERT_KLASSE_CD=#worthClasses[]#
    </iterate>
    <iterate prepend="AND" property="turnoverRanges" open="(" close=")" conjunction="OR">
      kg.umsatz &gt;= #turnoverRanges[].value1#
      and kg.umsatz &lt; #turnoverRanges[].value2#
    </iterate>
  </select>

  <select id="LoadPartiesOfFlashInfo" resultMap="customer-result-mycuco" parameterClass="long">
    SELECT *
    FROM kunde_gesamt
    WHERE kunde_id IN (
    SELECT DISTINCT kunde_id
    FROM cuco_flash_kunde
    WHERE flash_id=#flashId#
    )
  </select>
  
  <resultMap id="customer-result-mycuco-minimal" class="at.a1ta.cuco.core.shared.dto.Party">
    <result property="id" column="kunde_id" />
    <result property="firstname" column="kunde_vorname" />
    <result property="lastname" column="kunde_nam" />
    <result property="type" column="dual_segment" nullValue="0" />
  </resultMap>
  
  <select id="getByIdMinimal" cacheModel="customer-cache" parameterClass="string" resultMap="customer-result-mycuco-minimal">
    SELECT kunde.kunde_id as kunde_id, kunde.kunde_vorname as kunde_vorname, kunde.kunde_nam as kunde_nam , kunde_details.dual_segment as dual_segment
    FROM v_kunde kunde,v_kunde_detail kunde_details
    <isParameterPresent>
      WHERE kunde.kunde_id = replace(#id# ,'L','')
      AND   kunde_details.kunde_id = replace(#id#,'L','')
    </isParameterPresent>
    Union
    SELECT cast(replace(lead_id,'L','1') as number) as kunde_id, LEAD_VORNAME as kunde_vorname,LEAD_NACHNAM as kunde_nam, 9 as dual_segment
    FROM lead
    <isParameterPresent>
      WHERE lower(lead_id) = lower(#id#)
    </isParameterPresent>
  </select>

  <insert id="InsertNonCustomer"  parameterClass="at.a1ta.cuco.core.shared.dto.Party">
    insert into lead(KUNDE_TYP_CD,GENDER_CD,SALUTATION_CD,LEAD_VORNAME,LEAD_NACHNAM,STAAT_CD,ORT,PLZ,STRASSE,HAUSNUMMER,GEBURT_DAT,FIRMENBUCHNUMMER,NOTE,betreuer_nam,betreuer_uuser_cd,lastupdate) 
    values (#customerType#,#gender#,#salutation#,#firstname#,#lastname#,#country#,#city#,#poBox#,#street#,#housenumber#,#birthdate#,#commercialRegisterNumber#,#leadNote#,#supportUserName#,#supportUserId#,sysdate)
  </insert>
  
  <update id="markNonCustomerMerged" parameterClass="at.a1ta.cuco.core.shared.dto.Party">
    update lead set MERGED_WITH_CUSTOMER='1',PARTY_ID=#id#,merged_by_uuser_cd=#supportUserId#,lastupdate=sysdate where LOWER(lead_Id)=LOWER(#leadId#)
  </update>
  
  <update id="mergeNonCustomerAndTransferOffers" parameterClass="at.a1ta.cuco.core.shared.dto.Party">
    update cct_opportunity set party_id=#id# where LOWER(lead_Id)=LOWER(#leadId#)
  </update>

</sqlMap>