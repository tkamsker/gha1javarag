<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Attribute">

 <typeAlias alias="AttributeConfig" type="at.a1ta.cuco.core.shared.dto.AttributeConfig" />
 <typeAlias alias="Attribute" type="at.a1ta.cuco.core.shared.dto.Attribute" />
 <typeAlias alias="AttributeHistory" type="at.a1ta.cuco.core.shared.dto.AttributeHistory" />

  <!-- ATTRIBUTE CONFIG -->

  <cacheModel type="ehcacheProvider" id="attribute-config-cache">
    <flushOnExecute statement="Attribute.insertConfig"/>
    <flushOnExecute statement="Attribute.updateConfig"/>
    <flushInterval minutes="60" />
    <property name="cache-size" value="20" />
  </cacheModel>
  
  <resultMap id="attribute-config-result" class="AttributeConfig">
       <result property="attributeConfigId"   column="attribute_config_id" />
       <result property="attributeName"       column="attribute_name" />
       <result property="attributeType"       column="attribute_type" />
       <result property="active"              column="active" />
       <result property="deleted"             column="deleted" />
       <result property="creator"             column="creator" select="User.getBiteUserById"/>
       <result property="createDate"          column="create_date" />
       <result property="lastModifier"        column="last_modifier" select="User.getBiteUserById"/>
       <result property="lastUpdate"          column="last_update" />
       <result property="lowerBounds"         column="lower_bounds" />
       <result property="upperBounds"         column="upper_bounds" />
       <result property="orderNum"            column="order_num" />
       <result property="grouping"            column="grouping" />
       <result property="segments"            column="segments" typeHandler="at.a1ta.cuco.core.dao.util.ListStringTypeHandler" />
       <result property="validValues"       column="valid_values" />
       
  </resultMap>
    
  <select id="getAllConfigs" resultMap="attribute-config-result" parameterClass="java.util.HashMap" cacheModel="attribute-config-cache">
      SELECT *
        FROM si_attribute_config
       where deleted = 0
       ORDER BY order_num
  </select> 
  
  <select id="getConfigById" resultMap="attribute-config-result" parameterClass="java.lang.Long" cacheModel="attribute-config-cache">
      SELECT *
        FROM si_attribute_config
       WHERE deleted = 0
         AND attribute_config_id = #attributeConfigId#
  </select> 
    
  <insert id="insertConfig" parameterClass="AttributeConfig">
    <selectKey resultClass="long" keyProperty="attributeConfigId">SELECT seq_si_attribute_config.nextval AS id FROM dual</selectKey>
    insert into si_attribute_config 
    (attribute_config_id, attribute_name, attribute_type, valid_values,active, deleted, order_num, creator, create_date, last_modifier, last_update, lower_bounds, upper_bounds, grouping, segments)
    values 
    (#attributeConfigId#, #attributeName#, #attributeType#, #validValues#,#active#, #deleted#, (select nvl(max(order_num+1),1) from si_attribute_config), #creator.id#, #createDate#, #lastModifier.id#, #lastUpdate#, #lowerBounds#, #upperBounds#, #grouping#, #segments,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#)
  </insert>
  
  <update id="updateConfig" parameterClass="AttributeConfig">
    update si_attribute_config set 
      attribute_name = #attributeName#, 
      attribute_type = #attributeType#, 
      active = #active#, 
      deleted = #deleted#, 
      order_num = #orderNum#,
      last_modifier = #lastModifier.id#, 
      last_update= #lastUpdate#,
      lower_bounds = #lowerBounds#, 
      upper_bounds = #upperBounds#,
      grouping = #grouping#,
      valid_values=#validValues#,
      segments = #segments,handler=at.a1ta.cuco.core.dao.util.ListStringTypeHandler#
    WHERE
      attribute_config_id = #attributeConfigId#
  </update>
  
  <!-- ATTRIBUTE -->
  
   <resultMap id="attribute-result" class="Attribute">
       <result property="attributeId"         column="attribute_id" />
       <result property="attributeConfig"     column="attribute_config_id" select="Attribute.getConfigById" />
       <result property="kundeId"             column="kunde_id" />
       <result property="booleanValue"        column="boolean_value" />
       <result property="numberValue"         column="number_value" />
       <result property="textValue"         column="text_value" />
       <result property="lastModifier"        column="last_modifier" select="User.getBiteUserById" />
       <result property="lastUpdate"          column="last_update" />
       <result property="hasHistory"          column="has_history" />
  </resultMap>


  <select id="getSameExistingAttributes" resultMap="attribute-result" parameterClass="Attribute">
      SELECT a.*, 0 as has_history
        FROM si_attribute a
       WHERE 1=1
         <isNotNull prepend="AND" property="attributeConfig.attributeConfigId">
           attribute_config_id = #attributeConfig.attributeConfigId#
         </isNotNull>
         <isNotNull prepend="AND" property="kundeId">
           kunde_id = #kundeId#
         </isNotNull>
  </select> 
    
  <select id="getByPartyId" resultMap="attribute-result" parameterClass="java.util.HashMap">
    SELECT * FROM (
      SELECT a.attribute_id, ac.attribute_config_id, #kundeId# AS kunde_id, a.boolean_value, a.number_value,a.text_value, a.last_modifier, a.last_update, ac.order_num, 
        NVL((SELECT 1 FROM si_attribute_history WHERE kunde_id = a.kunde_id AND attribute_config_id = a.attribute_config_id AND rownum = 1), 0) as has_history
        FROM si_attribute a, si_attribute_config ac
       WHERE ac.attribute_config_id = a.attribute_config_id
         AND ac.active = 1
         AND ac.deleted = 0
         AND a.kunde_id = #kundeId#
         AND ac.grouping = 'SALESINFO_CUSTOMERINFO'
         AND (ac.segments like '%$segment$%' OR ac.segments = 'all')
     UNION
      SELECT null, ac.attribute_config_id, #kundeId# AS kunde_id, null as boolean_value, null as number_value,null as text_value, null as last_modifier, null as last_update, ac.order_num, 0 as has_history
        FROM si_attribute_config ac
       WHERE NOT EXISTS ( SELECT 1 FROM si_attribute WHERE kunde_id = #kundeId# AND attribute_config_id = ac.attribute_config_id)
         AND ac.active = 1
         AND ac.deleted = 0
         AND ac.grouping = 'SALESINFO_CUSTOMERINFO'
         AND (ac.segments like '%$segment$%' OR ac.segments = 'all')
     )
       ORDER BY order_num 
  </select> 
    
  <insert id="insert" parameterClass="Attribute">
    <selectKey resultClass="long" keyProperty="attributeId">SELECT seq_si_attribute.nextval AS id FROM dual</selectKey>
    insert into si_attribute 
    (attribute_id, attribute_config_id, kunde_id, boolean_value, number_value,text_value, last_modifier, last_update)
    values 
    (#attributeId#, #attributeConfig.attributeConfigId#, #kundeId#, #booleanValue#, #numberValue#,#textValue#, #lastModifier.id#, #lastUpdate#)
  </insert>
  
  <delete id="delete" parameterClass="Attribute">
    delete from si_attribute
     where attribute_id = #attributeId#
  </delete>
  
    <!-- ATTRIBUTE HISTORY -->
  
   <resultMap id="attribute-history-result" class="AttributeHistory">
       <result property="attributeId"         column="attribute_id" />
       <result property="attributeConfig"   column="attribute_config_id" select="Attribute.getConfigById" />
       <result property="kundeId"             column="kunde_id" />
       <result property="booleanValue"        column="boolean_value" />
       <result property="numberValue"         column="number_value" />
       <result property="textValue"         column="text_value" />
       <result property="creator"             column="creator" select="User.getBiteUserById" />
       <result property="createDate"          column="create_date" />
  </resultMap>
    
  <select id="getHistory" resultMap="attribute-history-result" parameterClass="java.util.HashMap">
      SELECT ah.*
        FROM si_attribute_history ah, si_attribute_config ac
       WHERE ah.attribute_config_id =  #attributeConfigId#
         AND ah.kunde_id =  #partyId#
         AND ah.attribute_config_id = ac.attribute_config_id
         AND ac.active = 1
         AND ac.deleted = 0
       ORDER BY ah.create_date DESC
  </select> 
    
  <insert id="insertHistory" parameterClass="AttributeHistory">
    <selectKey resultClass="long" keyProperty="attributeId">SELECT seq_si_attribute.nextval AS id FROM dual</selectKey>
    insert into si_attribute_history 
    (attribute_id, attribute_config_id, kunde_id, boolean_value, number_value, text_value,creator, create_date)
    values 
    (#attributeId#, #attributeConfig.attributeConfigId#, #kundeId#, #booleanValue#, #numberValue#,#textValue#, #creator.id#, #createDate#)
  </insert>
  
</sqlMap>